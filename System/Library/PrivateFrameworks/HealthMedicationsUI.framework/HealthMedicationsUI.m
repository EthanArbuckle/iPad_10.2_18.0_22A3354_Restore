uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

id sub_1BC0DEE20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel);
  }
  else
  {
    swift_getObjectType();
    v4 = sub_1BC0DEE84();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC0DEE84()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_1BC2B4460();
  sub_1BC0E008C(&qword_1EF3F81B0, v1, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  v2 = v0;
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v5 = (void *)sub_1BC2B4C64();
  objc_msgSend(v2, sel_setFont_, v5);

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v6 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v7, 0xE000000000000000);

  return v2;
}

id sub_1BC0DF188(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_class *v14;
  id v15;
  id v16;
  double v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  _QWORD v34[2];
  objc_super v35;

  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel] = 0;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item];
  v14 = (objc_class *)type metadata accessor for MedicationsDayHistoryHeaderCell();
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v35.receiver = v4;
  v35.super_class = v14;
  v15 = objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = sub_1BC0DEE20();
  LODWORD(v17) = 1132068864;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v17);

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v18 + 32) = sub_1BC0DEE20();
  v34[1] = v18;
  sub_1BC2B45A4();
  v19 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v20 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithArrangedSubviews_, v20);

  objc_msgSend(v21, sel_setAxis_, 0);
  objc_msgSend(v21, sel_setAlignment_, 3);
  objc_msgSend(v21, sel_setDistribution_, 0);
  objc_msgSend(v21, sel_setSpacing_, 20.0);
  v22 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v22, sel_addSubview_, v21);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v24 = v23;
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v27 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v21, sel_hk_alignConstraintsWithView_insets_, v27, 12.0, v24, 12.0, v26);

  v28 = objc_msgSend(v15, sel_separatorLayoutGuide);
  v29 = objc_msgSend(v28, sel_leadingAnchor);

  v30 = objc_msgSend(v15, sel_contentView);
  v31 = objc_msgSend(v30, sel_leadingAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
  objc_msgSend(v32, sel_setActive_, 1);

  return v15;
}

uint64_t sub_1BC0DF598()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  void *v27;
  char **v28;
  id v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  objc_super v35;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v6 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v30 - v9;
  v11 = (void *)sub_1BC2B3AE8();
  v12 = (objc_class *)type metadata accessor for MedicationsDayHistoryHeaderCell();
  v35.receiver = v1;
  v35.super_class = v12;
  objc_msgSendSuper2(&v35, sel__bridgedUpdateConfigurationUsingState_, v11);

  v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v13, (uint64_t)v34, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v34[3])
  {
    sub_1BC0E1CFC((uint64_t)v34, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
LABEL_6:
    sub_1BC2B39A4();
    v18 = v1;
    v19 = sub_1BC2B39D4();
    v20 = sub_1BC2B48C8();
    if (os_log_type_enabled(v19, v20))
    {
      v32 = v2;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v31 = v3;
      v23 = v22;
      v33 = v22;
      *(_DWORD *)v21 = 136315138;
      v30 = v21 + 4;
      sub_1BC0E1CB0(v13, (uint64_t)v34, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
      v24 = sub_1BC2B4490();
      v34[0] = sub_1BC12540C(v24, v25, &v33);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v19, v20, "Incorrect view model for MedicationsDayHistoryItem: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v23, -1, -1);
      MEMORY[0x1BCCEF3A0](v21, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v5, v32);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC0E1B94();
  type metadata accessor for MedicationsDayHistoryHeaderItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v14 = v33;
  MEMORY[0x1BCCEE230]();
  v15 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15))
  {
    v16 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC0E1CB0((uint64_t)v10, (uint64_t)v8, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCEE23C](v8);
    swift_release();
    return sub_1BC0E1CFC((uint64_t)v10, &qword_1EDA0FAF0, v16);
  }
  else
  {
    v26 = *(unsigned __int8 *)(v14
                             + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext);
    v27 = (void *)objc_opt_self();
    v28 = &selRef_secondarySystemBackgroundColor;
    if (!v26)
      v28 = &selRef_quaternarySystemFillColor;
    v29 = objc_msgSend(v27, *v28);
    sub_1BC2B3B18();
    MEMORY[0x1BCCEE23C](v10);
    return swift_release();
  }
}

id sub_1BC0DFA2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsDayHistoryHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC0DFAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC0DFB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC0DFB60())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MedicationsDayHistoryHeaderItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BC0DFBE4()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t MedicationsDayHistoryHeaderItem.__allocating_init(displayContext:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  LOBYTE(a1) = *a1;
  sub_1BC2B242C();
  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E008C(&qword_1EF3F81B0, v4, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  *v3 = sub_1BC2B2930();
  v3[1] = v5;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = (_BYTE)a1;
  return v2;
}

uint64_t MedicationsDayHistoryHeaderItem.init(displayContext:)(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  sub_1BC2B242C();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E008C(&qword_1EF3F81B0, v4, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  *v3 = sub_1BC2B2930();
  v3[1] = v5;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = v2;
  return v1;
}

uint64_t type metadata accessor for MedicationsDayHistoryHeaderCell()
{
  return objc_opt_self();
}

BOOL static MedicationsDayHistoryHeaderItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return ((*(unsigned __int8 *)(a1
                              + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) ^ *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext)) & 1) == 0;
}

uint64_t sub_1BC0DFDD4()
{
  return sub_1BC2B545C();
}

uint64_t MedicationsDayHistoryHeaderItem.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_identifier;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationsDayHistoryHeaderItem.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_identifier;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC0DFEC0()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC0DFF08()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC0DFF54()
{
  return sub_1BC2B545C();
}

uint64_t sub_1BC0DFF88()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC0DFFD0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BC0E000C()
{
  return sub_1BC0DFBE4();
}

BOOL sub_1BC0E002C(_QWORD *a1, _QWORD *a2)
{
  return ((*(unsigned __int8 *)(*a1
                              + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) ^ *(unsigned __int8 *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext)) & 1) == 0;
}

uint64_t sub_1BC0E005C()
{
  return sub_1BC0E008C(&qword_1EF3F81B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem, (uint64_t)&protocol conformance descriptor for MedicationsDayHistoryHeaderItem);
}

uint64_t sub_1BC0E008C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsDayHistoryHeaderItem()
{
  uint64_t result;

  result = qword_1EF3F8220;
  if (!qword_1EF3F8220)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0E0108()
{
  return type metadata accessor for MedicationsDayHistoryHeaderItem();
}

uint64_t sub_1BC0E0110()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationsDayHistoryHeaderItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.__allocating_init(displayContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void type metadata accessor for ContentVerticalAlignment(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F82D0, (uint64_t)&unk_1E74B0388, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationListOnboardingDetailsEntryPointType(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EF3F82D8, (uint64_t)&unk_1E74B03A8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EDA0EAD0, (uint64_t)&unk_1E74B03C8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationDoseEventStatus(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F82E8, (uint64_t)&unk_1E74B03E8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationLoggingAnalyticsActions(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F82F0, (uint64_t)&unk_1E74B0408, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationLoggingContext(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F82F8, (uint64_t)&unk_1E74B0430, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationLoggingProvenance(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8300, (uint64_t)&unk_1E74B0450, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8308, (uint64_t)&unk_1E74B0470, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for SymbolScale(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8310, (uint64_t)&unk_1E74B0498, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8318, (uint64_t)&unk_1E74B04B8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8320, (uint64_t)&unk_1E74B04E0, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationFreeTextFormTypeCode(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8328, (uint64_t)&unk_1E74B0508, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for UIDatePickerStyle(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8330, (uint64_t)&unk_1E74B0528, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for Mode(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8338, (uint64_t)&unk_1E74B0548, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationRoomType(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8340, (uint64_t)&unk_1E74B0568, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKError(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8348, (uint64_t)&unk_1E74B0588, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationScheduleType(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8350, (uint64_t)&unk_1E74B05B0, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKDismissedPregnancyLactationInteractionType(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EF3F8358, (uint64_t)&unk_1E74B05D0, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKOntologyShardState(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EDA0FD10, (uint64_t)&unk_1E74B05F0, MEMORY[0x1E0DEEC78]);
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationScheduleDataSource.PresentationContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationStatisticCollector(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MedicationStatisticCollector(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EF3F8368, (uint64_t)&unk_1E74B0668, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EDA0FD40, (uint64_t)&unk_1E74B0698, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKDrugInteractionLifestyleFactor(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8378, (uint64_t)&unk_1E74B06C0, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKDrugInteractionSeverityLevel(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8380, (uint64_t)&unk_1E74B06E0, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BC0E04D8()
{
  return sub_1BC0E008C(&qword_1EF3F8388, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel, (uint64_t)&unk_1BC2B7C80);
}

uint64_t sub_1BC0E0508(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E1580(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1BC0E0520()
{
  return sub_1BC2B260C();
}

uint64_t sub_1BC0E0528(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1BCCEBD94](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_1BC0E0578(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x1BCCEBDA0](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_1BC0E05CC(double *a1@<X8>)
{
  *a1 = MEMORY[0x1BCCEBDAC]();
}

uint64_t sub_1BC0E05F0()
{
  return sub_1BC2B476C();
}

uint64_t sub_1BC0E05F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1BCCEDEF4](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_1BC0E0648(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x1BCCEDF00](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1BC0E069C(float *a1@<X8>)
{
  *a1 = MEMORY[0x1BCCEDF0C]();
}

uint64_t sub_1BC0E06CC(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E0B28(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEDF10]);
}

uint64_t sub_1BC0E06D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC0E0B78(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEDF10]);
}

_QWORD *sub_1BC0E06E4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_1BC0E06F0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1BC0E0704(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1BC0E0718(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_1BC0E072C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1BC0E0740(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1BC0E0754()
{
  return sub_1BC0E008C(&qword_1EF3F8390, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionLifestyleFactor, (uint64_t)&unk_1BC2B7D20);
}

uint64_t sub_1BC0E0784(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E0B28(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEDF30]);
}

uint64_t sub_1BC0E0790()
{
  return sub_1BC2B5480();
}

uint64_t sub_1BC0E07B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC0E0B78(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEDF30]);
}

uint64_t sub_1BC0E07C8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1BC2B4448();
  *a2 = 0;
  return result;
}

uint64_t sub_1BC0E083C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1BC2B4454();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BC0E08B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BC2B4460();
  v2 = sub_1BC2B4430();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_1BC0E08F8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1BC0E0900@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1BC0E0914@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1BC0E0928@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1BC0E0954@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1BC0E0978(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1BC0E098C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1BC0E09A0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1BC0E09B4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1BC0E09C4()
{
  return sub_1BC2B5084();
}

_QWORD *sub_1BC0E09DC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1BC0E09F0()
{
  return sub_1BC2B545C();
}

uint64_t sub_1BC0E0A18()
{
  sub_1BC0E008C(&qword_1EF3F8428, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B802C);
  return sub_1BC2B5408();
}

uint64_t sub_1BC0E0A5C()
{
  sub_1BC0E008C(&qword_1EF3F8428, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B802C);
  return sub_1BC2B53FC();
}

uint64_t sub_1BC0E0AA4()
{
  sub_1BC0E008C(&qword_1EF3F8460, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
  return sub_1BC2B2174();
}

id sub_1BC0E0AE8()
{
  id *v0;

  return *v0;
}

uint64_t sub_1BC0E0AF0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_1BC0E0AF8(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1BC0E0B28(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  sub_1BC2B5450();
  a3(v5);
  return sub_1BC2B548C();
}

uint64_t sub_1BC0E0B78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t v6;

  v6 = *v4;
  sub_1BC2B5450();
  a4(v6);
  return sub_1BC2B548C();
}

uint64_t sub_1BC0E0BC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1BC0E1BE8(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1BC0E0C00()
{
  return sub_1BC2B4460();
}

uint64_t sub_1BC0E0C10()
{
  sub_1BC0E008C(&qword_1EF3F8460, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
  return sub_1BC2B21B0();
}

uint64_t sub_1BC0E0C54()
{
  sub_1BC0E008C(&qword_1EF3F8460, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
  return sub_1BC2B218C();
}

uint64_t sub_1BC0E0C98(void *a1)
{
  id v2;

  sub_1BC0E008C(&qword_1EF3F8460, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
  v2 = a1;
  return sub_1BC2B2180();
}

uint64_t sub_1BC0E0D00()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1BC2B4D9C();

  return v2;
}

uint64_t sub_1BC0E0D34()
{
  sub_1BC0E008C(&qword_1EF3F8460, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
  return sub_1BC2B21A4();
}

uint64_t sub_1BC0E0D88()
{
  sub_1BC2B5450();
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

_QWORD *sub_1BC0E0DE4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1BC0E0DF4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1BC0E0E00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC2B4460();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC0E0E28()
{
  sub_1BC0E008C(&qword_1EF3F84A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC2B81E4);
  sub_1BC0E008C((unint64_t *)&unk_1EF3F84A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC2B8184);
  return sub_1BC2B5324();
}

double sub_1BC0E0EB4@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_1BC0E0EC0()
{
  sub_1BC0E008C(&qword_1EF3F8488, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1BC2B833C);
  sub_1BC0E008C(&qword_1EF3F8490, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1BC2B82DC);
  sub_1BC0E1C20();
  return sub_1BC2B5324();
}

uint64_t sub_1BC0E0F68()
{
  sub_1BC0E008C(&qword_1EF3F8620, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1BC2B8F84);
  sub_1BC0E008C(&qword_1EF3F8628, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1BC2B8F24);
  return sub_1BC2B5324();
}

_DWORD *sub_1BC0E0FF4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_1BC0E1004@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1BC0E1010()
{
  sub_1BC0E008C(&qword_1EF3F8650, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC2B8C04);
  sub_1BC0E008C(&qword_1EF3F8658, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC2B8BA4);
  return sub_1BC2B5324();
}

uint64_t sub_1BC0E10AC()
{
  sub_1BC0E008C(&qword_1EF3F8478, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC2B8484);
  sub_1BC0E008C(&qword_1EF3F8480, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC2B842C);
  return sub_1BC2B5324();
}

uint64_t sub_1BC0E1138()
{
  sub_1BC0E008C((unint64_t *)&qword_1EDA0FD20, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B897C);
  sub_1BC0E008C(&qword_1EF3F84B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B7DF4);
  return sub_1BC2B5324();
}

uint64_t sub_1BC0E11C4()
{
  return sub_1BC0E008C(&qword_1EF3F8398, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B7DB8);
}

uint64_t sub_1BC0E11F4()
{
  return sub_1BC0E008C(&qword_1EF3F83A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B7D8C);
}

uint64_t sub_1BC0E1224()
{
  sub_1BC0E008C(&qword_1EF3F8640, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC2B9014);
  sub_1BC0E008C(&qword_1EF3F8648, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC2B8CFC);
  return sub_1BC2B5324();
}

uint64_t sub_1BC0E12B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC2B4430();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC0E12F4()
{
  sub_1BC0E008C(&qword_1EF3F8630, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC2B9058);
  sub_1BC0E008C(&qword_1EF3F8638, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC2B8E10);
  return sub_1BC2B5324();
}

uint64_t sub_1BC0E1380()
{
  sub_1BC0E008C(&qword_1EF3F8460, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
  return sub_1BC2B2198();
}

uint64_t sub_1BC0E13DC()
{
  return sub_1BC0E008C(&qword_1EF3F83A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B7F44);
}

uint64_t sub_1BC0E140C()
{
  return sub_1BC0E008C(&qword_1EF3F83B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B7F70);
}

uint64_t sub_1BC0E143C()
{
  return sub_1BC0E008C(&qword_1EF3F83B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, (uint64_t)&unk_1BC2B80B0);
}

uint64_t sub_1BC0E146C()
{
  return sub_1BC0E008C(&qword_1EF3F83C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC2B8148);
}

uint64_t sub_1BC0E149C()
{
  return sub_1BC0E008C(&qword_1EF3F83C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC2B811C);
}

BOOL sub_1BC0E14CC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC0E14E0(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E1580(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEA950]);
}

uint64_t sub_1BC0E14EC()
{
  return sub_1BC2B4760();
}

uint64_t sub_1BC0E14F4()
{
  return sub_1BC2B5480();
}

uint64_t sub_1BC0E1524()
{
  return sub_1BC2B5444();
}

uint64_t sub_1BC0E1534()
{
  return sub_1BC2B479C();
}

uint64_t sub_1BC0E153C()
{
  return sub_1BC2B5474();
}

void sub_1BC0E156C()
{
  JUMPOUT(0x1BCCEEBB4);
}

uint64_t sub_1BC0E1580(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BC2B4460();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC0E15BC()
{
  sub_1BC2B4460();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0E15FC()
{
  uint64_t v0;

  sub_1BC2B4460();
  sub_1BC2B5450();
  sub_1BC2B44D8();
  v0 = sub_1BC2B548C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC0E166C()
{
  return sub_1BC0E008C(&qword_1EF3F83D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC2B81B8);
}

uint64_t sub_1BC0E169C()
{
  return sub_1BC0E008C(&qword_1EF3F83D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1BC2B82A0);
}

uint64_t sub_1BC0E16CC()
{
  return sub_1BC0E008C(&qword_1EF3F83E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1BC2B8274);
}

BOOL sub_1BC0E16FC(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC0E1710()
{
  return sub_1BC0E008C(&qword_1EF3F83E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1BC2B8310);
}

uint64_t sub_1BC0E1740()
{
  return sub_1BC0E008C(&qword_1EF3F83F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC2B83F4);
}

uint64_t sub_1BC0E1770()
{
  return sub_1BC0E008C(&qword_1EF3F83F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC2B83CC);
}

BOOL sub_1BC0E17A0(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC0E17B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BC2B4460();
  v2 = v1;
  if (v0 == sub_1BC2B4460() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BC0E183C()
{
  return sub_1BC0E008C(&qword_1EF3F8400, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC2B845C);
}

uint64_t sub_1BC0E186C()
{
  return sub_1BC0E008C(&qword_1EF3F8408, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationLoggingAnalyticsActions, (uint64_t)&unk_1BC2B8574);
}

uint64_t sub_1BC0E189C()
{
  return sub_1BC0E008C(&qword_1EF3F8410, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationLoggingAnalyticsActions, (uint64_t)&unk_1BC2B8544);
}

uint64_t sub_1BC0E18CC()
{
  return sub_1BC0E008C(&qword_1EF3F8418, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationLoggingAnalyticsActions, (uint64_t)&unk_1BC2B859C);
}

uint64_t sub_1BC0E18FC()
{
  return sub_1BC0E008C(&qword_1EF3F8420, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationLoggingAnalyticsActions, (uint64_t)&unk_1BC2B85D4);
}

uint64_t sub_1BC0E192C()
{
  return sub_1BC0E008C(&qword_1EF3F8428, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B802C);
}

uint64_t sub_1BC0E195C()
{
  return sub_1BC0E008C(&qword_1EF3F8430, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B7FF8);
}

uint64_t sub_1BC0E198C()
{
  return sub_1BC0E008C(&qword_1EF3F8438, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B7FB4);
}

uint64_t sub_1BC0E19BC()
{
  return sub_1BC0E008C(&qword_1EF3F8440, 255, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC2B88D4);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F85B0, (uint64_t)&unk_1E74B0840, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BC0E1A08()
{
  return sub_1BC0E008C(&qword_1EF3F8448, 255, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC2B8898);
}

unint64_t sub_1BC0E1A3C()
{
  unint64_t result;

  result = qword_1EF3F8450;
  if (!qword_1EF3F8450)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF3F8450);
  }
  return result;
}

uint64_t sub_1BC0E1A80()
{
  return sub_1BC0E008C(&qword_1EF3F8458, 255, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC2B8910);
}

uint64_t sub_1BC0E1AB0()
{
  return sub_1BC0E008C(&qword_1EF3F8460, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
}

uint64_t sub_1BC0E1AE0()
{
  return sub_1BC0E008C((unint64_t *)&unk_1EF3F8468, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationScheduleType, (uint64_t)&unk_1BC2B7ED8);
}

uint64_t sub_1BC0E1B10()
{
  return sub_1BC0E008C((unint64_t *)&unk_1EDA0FD30, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B7E28);
}

uint64_t sub_1BC0E1B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC0E1B94()
{
  unint64_t result;

  result = qword_1EDA0F7C0;
  if (!qword_1EDA0F7C0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0F7C0);
  }
  return result;
}

uint64_t sub_1BC0E1BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_1BC0E1C20()
{
  unint64_t result;

  result = qword_1EF3F8498;
  if (!qword_1EF3F8498)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEF060], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EF3F8498);
  }
  return result;
}

void sub_1BC0E1C64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC2B4FA0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC0E1CB0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC0E1C64(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC0E1CFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC0E1C64(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BC0E1D38(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EDA0FD60, (uint64_t)&unk_1E74B0700, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8588, (uint64_t)&unk_1E74B0728, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EF3F8590, (uint64_t)&unk_1E74B0750, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EDA0FCB8, (uint64_t)&unk_1E74B0778, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F85A0, (uint64_t)&unk_1E74B07F8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F85A8, (uint64_t)&unk_1E74B0820, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BC0E1E18()
{
  return sub_1BC0E008C(&qword_1EF3F85B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC2B8B68);
}

uint64_t sub_1BC0E1E48()
{
  return sub_1BC0E008C(&qword_1EF3F85C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC2B8B3C);
}

uint64_t sub_1BC0E1E78()
{
  return sub_1BC0E008C(&qword_1EF3F85C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC2B8BD8);
}

uint64_t sub_1BC0E1EA8()
{
  return sub_1BC0E008C(&qword_1EF3F85D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC2B8CC0);
}

uint64_t sub_1BC0E1ED8()
{
  return sub_1BC0E008C(&qword_1EF3F85D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC2B8C94);
}

uint64_t sub_1BC0E1F08()
{
  return sub_1BC0E008C(&qword_1EF3F85E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC2B8DD4);
}

uint64_t sub_1BC0E1F38()
{
  return sub_1BC0E008C(&qword_1EF3F85E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC2B8DA8);
}

uint64_t sub_1BC0E1F68()
{
  return sub_1BC0E008C(&qword_1EF3F85F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1BC2B8EE8);
}

uint64_t sub_1BC0E1F98()
{
  return sub_1BC0E008C(&qword_1EF3F85F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1BC2B8EBC);
}

uint64_t sub_1BC0E1FC8()
{
  return sub_1BC0E008C(&qword_1EF3F8600, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1BC2B8F58);
}

uint64_t sub_1BC0E1FF8()
{
  return sub_1BC0E008C(&qword_1EF3F8608, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC2B8D30);
}

uint64_t sub_1BC0E2028()
{
  return sub_1BC0E008C(&qword_1EF3F8610, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC2B8E44);
}

uint64_t sub_1BC0E2058()
{
  return sub_1BC0E008C(&qword_1EF3F8618, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_1BC2B8AD4);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1BC0E2094(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BC0E20B4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8660, (uint64_t)&unk_1E74B08B8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1BC0E2130(a1, &qword_1EF3F8668, (uint64_t)&unk_1E74B0938, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMedicationFreeTextLoggingUnitCode(uint64_t a1)
{
  sub_1BC0E2130(a1, (unint64_t *)&unk_1EF3F8670, (uint64_t)&unk_1E74B0960, MEMORY[0x1E0DEEC78]);
}

void sub_1BC0E2130(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t Presentation.isMedicationsCategory.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, _QWORD, uint64_t);
  char v10;
  void (*v11)(char *, uint64_t);
  char v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1BC2B2918();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v9((char *)&v14 - v7, *MEMORY[0x1E0D2A9E0], v2);
  v10 = sub_1BC2B290C();
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  if ((v10 & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
    v9(v8, *MEMORY[0x1E0D2A988], v2);
    v12 = sub_1BC2B290C();
    v11(v8, v2);
  }
  v11(v6, v2);
  return v12 & 1;
}

void *MedicationsInputViewController.__allocating_init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(uint64_t a1, void *a2, char a3, char a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(a1, a2, a3, a4);
}

void *MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(uint64_t a1, void *a2, char a3, char a4)
{
  _BYTE *v4;
  id v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  __int128 v21;
  __int128 v22;

  *(_QWORD *)&v4[qword_1EF3F8740] = 0;
  *(_QWORD *)&v4[qword_1EF3F8748] = a1;
  *(_QWORD *)&v4[qword_1EF3F8750] = a2;
  v4[qword_1EF3F8758] = a3;
  v4[qword_1EF3F8760] = a4;
  type metadata accessor for MedicationScheduleDataSource();
  v21 = 0u;
  v22 = 0u;
  swift_allocObject();
  swift_retain_n();
  v7 = a2;
  v8 = v4;
  *(_QWORD *)&v8[qword_1EF3F8768] = MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(a1, v7, 0, (uint64_t *)&v21);
  swift_retain();
  v9 = objc_msgSend(v7, sel_localizedOntologyEducationContent, v21, v22);
  v10 = v9;
  if (v9)
  {
    *(_QWORD *)&v21 = v9;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B284C();
    v12 = v11;

    if (v12)
      swift_bridgeObjectRelease();
  }
  v13 = objc_msgSend(v7, sel_localizedOntologyEducationContent);
  if (v13)
  {
    v14 = v13;
    *(_QWORD *)&v21 = v13;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B2864();
    v16 = v15;

    if (v16)
      swift_bridgeObjectRelease();
  }
  sub_1BC2B3818();
  swift_allocObject();
  *(_QWORD *)&v8[qword_1EF3F8770] = sub_1BC2B37F4();

  swift_retain();
  v17 = (void *)sub_1BC2B2FE4();
  v18 = v17;
  if (*((_BYTE *)v17 + qword_1EF3F8758) == 1)
  {
    *(_QWORD *)&v21 = 2;
    v19 = v17;
    swift_retain();
    swift_retain();
    sub_1BC2B3EC0();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();

  }
  return v18;
}

void sub_1BC0E25E8(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_1EF3F8740] = 0;
  v4 = a3;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC0E265C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  objc_super v4;

  v1 = v0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MedicationsInputViewController();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  sub_1BC0E2864();
  sub_1BC0E2C3C();
  swift_beginAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC0E4A14();
  sub_1BC0E519C(&qword_1EF3F8780, (uint64_t (*)(uint64_t))sub_1BC0E4A14, MEMORY[0x1E0C95FB8]);
  swift_retain();
  v2 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)&v1[qword_1EF3F8740] = v2;
  return swift_release();
}

void sub_1BC0E2788(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_navigationItem);

    v7 = objc_msgSend(v6, sel_rightBarButtonItem);
    objc_msgSend(v7, sel_setEnabled_, v2);

  }
}

void sub_1BC0E2830(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC0E265C();

}

void sub_1BC0E2864()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24[3];
  uint64_t v25;

  v1 = v0;
  sub_1BC2B3ED8();

  if (v24[0])
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v2 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v25 = type metadata accessor for MedicationsInputViewController();
    v24[0] = v0;
    v3 = v0;
    v4 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v5 = v25;
    if (v25)
    {
      v6 = __swift_project_boxed_opaque_existential_0(v24, v25);
      v7 = *(_QWORD *)(v5 - 8);
      MEMORY[0x1E0C80A78](v6);
      v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = sub_1BC2B53C0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    }
    else
    {
      v10 = 0;
    }
    v18 = sel_doneTapped_;
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v11 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v25 = type metadata accessor for MedicationsInputViewController();
    v24[0] = v0;
    v12 = v0;
    v4 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v13 = v25;
    if (v25)
    {
      v14 = __swift_project_boxed_opaque_existential_0(v24, v25);
      v15 = *(_QWORD *)(v13 - 8);
      MEMORY[0x1E0C80A78](v14);
      v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v15 + 16))(v17);
      v10 = sub_1BC2B53C0();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    }
    else
    {
      v10 = 0;
    }
    v18 = sel_saveTapped_;
  }
  v19 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v20 = objc_msgSend(v19, sel_initWithTitle_style_target_action_, v4, 2, v10, v18, v24[0]);

  swift_unknownObjectRelease();
  v21 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v21, sel_setRightBarButtonItem_, v20);

  v22 = objc_msgSend(v1, sel_navigationItem);
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v1, sel_cancelTapped_);
  objc_msgSend(v22, sel_setLeftBarButtonItem_, v23);

}

void sub_1BC0E2C3C()
{
  _BYTE *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  if (v0[qword_1EF3F8758] == 1)
  {
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_6;
    goto LABEL_10;
  }
  sub_1BC2B3ED8();

  if (v6)
  {
    if (qword_1EDA0FEE8 == -1)
    {
LABEL_6:
      v1 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      swift_bridgeObjectRelease();

      goto LABEL_7;
    }
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B3758();
LABEL_7:
  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v2);

  v3 = objc_msgSend(v0, sel_collectionView);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC0E2E84(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC0E4B14();

}

uint64_t sub_1BC0E2ED0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v7 = sub_1BC2B42E0();
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC2B4304();
  v10 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v13 = (void *)sub_1BC2B4A0C();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  aBlock[4] = a3;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = a4;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  swift_release();
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E5148();
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFE0, (uint64_t (*)(uint64_t))sub_1BC0E5148, MEMORY[0x1E0DEAF38]);
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

void sub_1BC0E30D4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC0E4E0C();

}

void sub_1BC0E3120(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC2B37E8();
  objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);

}

void sub_1BC0E3194()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint8_t *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;

  ObjectType = swift_getObjectType();
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v24 - v6;
  sub_1BC2B39A4();
  v8 = sub_1BC2B39D4();
  v9 = sub_1BC2B48B0();
  v10 = os_log_type_enabled(v8, v9);
  v26 = ObjectType;
  if (v10)
  {
    v27 = v5;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (void *)swift_slowAlloc();
    v29 = v12;
    v25 = v2;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_1BC2B54F8();
    v28 = sub_1BC12540C(v13, v14, (uint64_t *)&v29);
    sub_1BC2B4FD0();
    v5 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v8, v9, "[%s] Attempting to save new schedule", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v12, -1, -1);
    MEMORY[0x1BCCEF3A0](v11, -1, -1);

    v15 = *(void (**)(char *, uint64_t))(v25 + 8);
  }
  else
  {

    v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  }
  v15(v7, v1);
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v16 = v29;
  if (v29)
  {
    sub_1BC0E3704(v29);

  }
  else
  {
    sub_1BC2B39A4();
    v17 = sub_1BC2B39D4();
    v18 = sub_1BC2B48C8();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (void *)swift_slowAlloc();
      v29 = v20;
      v27 = v5;
      *(_DWORD *)v19 = 136315138;
      v21 = sub_1BC2B54F8();
      v28 = sub_1BC12540C(v21, v22, (uint64_t *)&v29);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v17, (os_log_type_t)v18, "[%s] Unable to save medication schedule. Schedule is nil.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
      MEMORY[0x1BCCEF3A0](v19, -1, -1);

      v23 = v27;
    }
    else
    {

      v23 = v5;
    }
    v15(v23, v1);
  }
}

void sub_1BC0E34E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;

  swift_getObjectType();
  v0 = sub_1BC2B39E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v4 = v13;
  if (v13)
  {
    sub_1BC0E3704(v13);

  }
  else
  {
    sub_1BC2B3ED8();
    v5 = v13;
    if (v13)
    {
      sub_1BC0E4064((uint64_t)v13);

    }
    else
    {
      sub_1BC2B39A4();
      v6 = sub_1BC2B39D4();
      v7 = sub_1BC2B48C8();
      if (os_log_type_enabled(v6, (os_log_type_t)v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = (void *)swift_slowAlloc();
        v13 = v9;
        *(_DWORD *)v8 = 136315138;
        v10 = sub_1BC2B54F8();
        v12 = sub_1BC12540C(v10, v11, (uint64_t *)&v13);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v6, (os_log_type_t)v7, "[%s] Unable to save medication schedule. Schedule or previous schedule was nil.", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v9, -1, -1);
        MEMORY[0x1BCCEF3A0](v8, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
}

void sub_1BC0E3704(void *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  void *v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t aBlock[6];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v38 - v10;
  sub_1BC2B39A4();
  v12 = sub_1BC2B39D4();
  v13 = sub_1BC2B48B0();
  v14 = os_log_type_enabled(v12, v13);
  v42 = ObjectType;
  if (v14)
  {
    v41 = v9;
    v15 = swift_slowAlloc();
    v39 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v40 = v5;
    v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136315138;
    v38 = v6;
    v19 = sub_1BC2B54F8();
    v43 = sub_1BC12540C(v19, v20, aBlock);
    sub_1BC2B4FD0();
    v9 = v41;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v12, v13, "[%s] Attempting to save/update schedule", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    v5 = v40;
    MEMORY[0x1BCCEF3A0](v21, -1, -1);
    v22 = v16;
    v2 = v39;
    MEMORY[0x1BCCEF3A0](v22, -1, -1);

    v23 = *(void (**)(char *, uint64_t))(v38 + 8);
  }
  else
  {

    v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  }
  v23(v11, v5);
  sub_1BC2B3ED8();
  v24 = (void *)aBlock[0];
  if (objc_msgSend(a1, sel_isIdenticalToMedicationSchedule_, aBlock[0])
    && *((_BYTE *)v2 + qword_1EF3F8760) != 1)
  {
    sub_1BC2B37E8();
    sub_1BC2B39A4();
    v31 = sub_1BC2B39D4();
    v32 = sub_1BC2B48B0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      aBlock[0] = v34;
      v41 = v9;
      *(_DWORD *)v33 = 136315138;
      v35 = sub_1BC2B54F8();
      v43 = sub_1BC12540C(v35, v36, aBlock);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v31, v32, "[%s] Schedule not changed", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v34, -1, -1);
      MEMORY[0x1BCCEF3A0](v33, -1, -1);

      v37 = v41;
    }
    else
    {

      v37 = v9;
    }
    v23(v37, v5);
  }
  else
  {
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C490]), sel_initWithHealthStore_, v25);

    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v2;
    v27[3] = a1;
    v27[4] = v42;
    aBlock[4] = (uint64_t)sub_1BC0E5320;
    aBlock[5] = (uint64_t)v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC2599E8;
    aBlock[3] = (uint64_t)&block_descriptor_40;
    v28 = _Block_copy(aBlock);
    v29 = v2;
    v30 = a1;
    swift_release();
    objc_msgSend(v26, sel_saveSchedule_completion_, v30, v28);
    _Block_release(v28);

  }
}

uint64_t sub_1BC0E3B64(char a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  id v34;
  NSObject *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v7 = sub_1BC2B39E0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v43 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v43 - v15;
  if ((a1 & 1) != 0)
  {
    sub_1BC2B39A4();
    v17 = sub_1BC2B39D4();
    v18 = sub_1BC2B48B0();
    if (os_log_type_enabled(v17, v18))
    {
      v44 = v8;
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v46 = v20;
      v43 = v7;
      *(_DWORD *)v19 = 136315138;
      v21 = sub_1BC2B54F8();
      v45 = sub_1BC12540C(v21, v22, &v46);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v17, v18, "[%s] Schedule save/updated", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
      MEMORY[0x1BCCEF3A0](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    }
    v46 = (uint64_t)a4;
    v34 = a4;
    sub_1BC2B3EC0();

    return sub_1BC2B37E8();
  }
  else
  {
    if (a2)
    {
      sub_1BC2B39A4();
      v23 = a2;
      v24 = a2;
      v25 = sub_1BC2B39D4();
      v26 = sub_1BC2B48C8();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v46 = v28;
        *(_DWORD *)v27 = 136315394;
        v44 = v8;
        v29 = sub_1BC2B54F8();
        v45 = sub_1BC12540C(v29, v30, &v46);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        swift_getErrorValue();
        v31 = sub_1BC2B5414();
        v45 = sub_1BC12540C(v31, v32, &v46);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC0DC000, v25, v26, "[%s] Failed to save/update medication schedule due to %s", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v28, -1, -1);
        MEMORY[0x1BCCEF3A0](v27, -1, -1);

        v33 = *(uint64_t (**)(char *, uint64_t))(v44 + 8);
      }
      else
      {

        v33 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      }
      v42 = v11;
    }
    else
    {
      sub_1BC2B39A4();
      v36 = sub_1BC2B39D4();
      v37 = sub_1BC2B48C8();
      if (os_log_type_enabled(v36, (os_log_type_t)v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = swift_slowAlloc();
        v46 = v39;
        *(_DWORD *)v38 = 136315138;
        v40 = sub_1BC2B54F8();
        v45 = sub_1BC12540C(v40, v41, &v46);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v36, (os_log_type_t)v37, "[%s] Failed to save/update medication schedule without an error", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v39, -1, -1);
        MEMORY[0x1BCCEF3A0](v38, -1, -1);
      }

      v33 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      v42 = v14;
    }
    return v33(v42, v7);
  }
}

void sub_1BC0E4064(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t aBlock[6];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v9 = sub_1BC2B39D4();
  v10 = sub_1BC2B48B0();
  if (os_log_type_enabled(v9, v10))
  {
    v24 = v5;
    v11 = swift_slowAlloc();
    v26 = a1;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v25 = v2;
    v14 = v13;
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_1BC2B54F8();
    v27 = sub_1BC12540C(v15, v16, aBlock);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v9, v10, "[%s] Attempting to delete previous schedule", v12, 0xCu);
    swift_arrayDestroy();
    v17 = v14;
    v2 = v25;
    MEMORY[0x1BCCEF3A0](v17, -1, -1);
    v18 = v12;
    a1 = v26;
    MEMORY[0x1BCCEF3A0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C490]), sel_initWithHealthStore_, v19);

  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v2;
  *(_QWORD *)(v21 + 24) = ObjectType;
  aBlock[4] = (uint64_t)sub_1BC0E52EC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC2599E8;
  aBlock[3] = (uint64_t)&block_descriptor_34;
  v22 = _Block_copy(aBlock);
  v23 = v2;
  swift_release();
  objc_msgSend(v20, sel_deleteSchedule_completion_, a1, v22);
  _Block_release(v22);

}

uint64_t sub_1BC0E42F8(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v39 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v39 - v12;
  if ((a1 & 1) != 0)
  {
    sub_1BC2B39A4();
    v14 = sub_1BC2B39D4();
    v15 = sub_1BC2B48B0();
    if (os_log_type_enabled(v14, v15))
    {
      v40 = v4;
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v42 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = sub_1BC2B54F8();
      v41 = sub_1BC12540C(v18, v19, &v42);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v14, v15, "[%s] Schedule deleted. Now considered \"As Needed\".", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v17, -1, -1);
      MEMORY[0x1BCCEF3A0](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v40);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    }
    v42 = 0;
    return sub_1BC2B3EC0();
  }
  else
  {
    if (a2)
    {
      sub_1BC2B39A4();
      v20 = a2;
      v21 = a2;
      v22 = sub_1BC2B39D4();
      v23 = sub_1BC2B48C8();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v42 = v25;
        *(_DWORD *)v24 = 136315394;
        v26 = sub_1BC2B54F8();
        v41 = sub_1BC12540C(v26, v27, &v42);
        v40 = v4;
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2080;
        swift_getErrorValue();
        v28 = sub_1BC2B5414();
        v41 = sub_1BC12540C(v28, v29, &v42);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC0DC000, v22, v23, "[%s] Failed to delete medication schedule due to %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v25, -1, -1);
        MEMORY[0x1BCCEF3A0](v24, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v40);
      }

      v37 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      v38 = v8;
    }
    else
    {
      sub_1BC2B39A4();
      v31 = sub_1BC2B39D4();
      v32 = sub_1BC2B48C8();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        v42 = v34;
        *(_DWORD *)v33 = 136315138;
        v35 = sub_1BC2B54F8();
        v41 = sub_1BC12540C(v35, v36, &v42);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v31, v32, "[%s] Failed to delete medication schedule without an error", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v34, -1, -1);
        MEMORY[0x1BCCEF3A0](v33, -1, -1);
      }

      v37 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      v38 = v11;
    }
    return v37(v38, v4);
  }
}

void MedicationsInputViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationsInputViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationsInputViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationsInputViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC0E4884(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC0E48B4()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

id MedicationsInputViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsInputViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC0E4944(uint64_t a1)
{
  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for MedicationsInputViewController()
{
  uint64_t result;

  result = qword_1EF3F8788;
  if (!qword_1EF3F8788)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0E49E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC0E4A0C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1BC0E2788(a1, v1);
}

void sub_1BC0E4A14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8778)
  {
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8778);
  }
}

uint64_t sub_1BC0E4A78()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsInputViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationsInputViewController.__allocating_init(schedulePublisher:medication:resetSchedule:restartingSchedule:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsInputViewController + v0 + 80))();
}

uint64_t sub_1BC0E4B0C()
{
  return type metadata accessor for MedicationsInputViewController();
}

void sub_1BC0E4B14()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  void *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t aBlock[7];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v7 = (void *)aBlock[0];
  if (aBlock[0])
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v1;
    v9 = objc_allocWithZone(MEMORY[0x1E0D2C4C0]);
    v10 = v1;
    v11 = objc_msgSend(v9, sel_init);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = sub_1BC0E5200;
    v12[3] = v8;
    v12[4] = 0;
    v12[5] = 0;
    v12[6] = v10;
    v12[7] = ObjectType;
    aBlock[4] = (uint64_t)sub_1BC0E5138;
    aBlock[5] = (uint64_t)v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC1036D8;
    aBlock[3] = (uint64_t)&block_descriptor_22;
    v13 = _Block_copy(aBlock);
    v14 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_checkIncompatibilityForSchedule_completion_, v7, v13);
    _Block_release(v13);

    swift_release();
  }
  else
  {
    sub_1BC2B39A4();
    v15 = sub_1BC2B39D4();
    v16 = sub_1BC2B48B0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      v21 = v17 + 4;
      aBlock[0] = v18;
      v19 = sub_1BC2B54F8();
      aBlock[6] = sub_1BC12540C(v19, v20, aBlock);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v15, v16, "[%s] Skipping check for device incompatibility", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v18, -1, -1);
      MEMORY[0x1BCCEF3A0](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1BC0E3194();
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_1BC0E4E0C()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  void *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t aBlock[7];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v7 = (void *)aBlock[0];
  if (aBlock[0])
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v1;
    v9 = objc_allocWithZone(MEMORY[0x1E0D2C4C0]);
    v10 = v1;
    v11 = objc_msgSend(v9, sel_init);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = sub_1BC0E5104;
    v12[3] = v8;
    v12[4] = 0;
    v12[5] = 0;
    v12[6] = v10;
    v12[7] = ObjectType;
    aBlock[4] = (uint64_t)sub_1BC0E5138;
    aBlock[5] = (uint64_t)v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC1036D8;
    aBlock[3] = (uint64_t)&block_descriptor;
    v13 = _Block_copy(aBlock);
    v14 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_checkIncompatibilityForSchedule_completion_, v7, v13);
    _Block_release(v13);

    swift_release();
  }
  else
  {
    sub_1BC2B39A4();
    v15 = sub_1BC2B39D4();
    v16 = sub_1BC2B48B0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      v21 = v17 + 4;
      aBlock[0] = v18;
      v19 = sub_1BC2B54F8();
      aBlock[6] = sub_1BC12540C(v19, v20, aBlock);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v15, v16, "[%s] Skipping check for device incompatibility", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v18, -1, -1);
      MEMORY[0x1BCCEF3A0](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1BC0E34E8();
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

uint64_t sub_1BC0E5104()
{
  uint64_t v0;

  return sub_1BC0E2ED0(*(void **)(v0 + 16), (uint64_t)&unk_1E74B0CD8, (uint64_t)sub_1BC0E513C, (uint64_t)&block_descriptor_12);
}

id sub_1BC0E513C()
{
  return sub_1BC0E5294(sub_1BC0E34E8);
}

void sub_1BC0E5148()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FFD0)
  {
    sub_1BC2B42E0();
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FFD0);
  }
}

uint64_t sub_1BC0E519C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCEF2BC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC0E51DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC0E5200()
{
  uint64_t v0;

  return sub_1BC0E2ED0(*(void **)(v0 + 16), (uint64_t)&unk_1E74B0DA0, (uint64_t)sub_1BC0E5288, (uint64_t)&block_descriptor_28);
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();

  return swift_deallocObject();
}

void sub_1BC0E5278(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC103208(a1, a2, *(uint64_t (***)(char *, uint64_t))(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

id sub_1BC0E5288()
{
  return sub_1BC0E5294(sub_1BC0E3194);
}

id sub_1BC0E5294(void (*a1)(void))
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  a1();
  return objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1BC0E52C8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC0E52EC(char a1, void *a2)
{
  return sub_1BC0E42F8(a1, a2);
}

uint64_t sub_1BC0E52F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC0E5320(char a1, void *a2)
{
  uint64_t v2;

  return sub_1BC0E3B64(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

_QWORD *__swift_project_boxed_opaque_existential_0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t type metadata accessor for MedicationSideEffectsCompoundDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3F87D8);
}

uint64_t sub_1BC0E53B8()
{
  return sub_1BC0E5468();
}

void sub_1BC0E53C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC0E53F0()
{
  sub_1BC2B2DF8();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC0E540C()
{
  return type metadata accessor for MedicationSideEffectsCompoundDataSource(0);
}

uint64_t type metadata accessor for MedicationSideEffectsDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3F8828);
}

uint64_t sub_1BC0E5428(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0E545C()
{
  return sub_1BC0E5468();
}

uint64_t sub_1BC0E5468()
{
  return swift_initClassMetadata2();
}

void sub_1BC0E54A0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC0E54CC()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC0E54E8()
{
  return type metadata accessor for MedicationSideEffectsDataSource(0);
}

uint64_t sub_1BC0E54F0()
{
  type metadata accessor for MedicationSideEffectsItemCell();
  sub_1BC0E519C(&qword_1EF3F8880, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSideEffectsItemCell, (uint64_t)&protocol conformance descriptor for MedicationSideEffectsItemCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC0E5544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC0E55CC()
{
  sub_1BC0E519C(&qword_1EF3F8888, type metadata accessor for MedicationSideEffectsDataSource, (uint64_t)&unk_1BC2B9238);
  return sub_1BC2B3074();
}

uint64_t sub_1BC0E562C()
{
  return sub_1BC0E519C(&qword_1EF3F8878, type metadata accessor for MedicationSideEffectsDataSource, (uint64_t)&unk_1BC2B9208);
}

double sub_1BC0E5658()
{
  double result;

  result = 16.0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_1EF402470 = xmmword_1BC2B9290;
  *(_OWORD *)&qword_1EF402480 = _Q1;
  return result;
}

uint64_t sub_1BC0E5674(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  sub_1BC0E7A34((uint64_t)v5, v3, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
  swift_endAccess();
  sub_1BC0E6BF4();
  return sub_1BC0E7B24((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
}

uint64_t sub_1BC0E5724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC0E5774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7A84(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC0E57D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  sub_1BC0E7A34(a1, v3, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
  swift_endAccess();
  sub_1BC0E6BF4();
  return sub_1BC0E7B24(a1, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
}

id (*sub_1BC0E5874(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC0E58BC;
}

id sub_1BC0E58BC(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC0E6BF4();
  return result;
}

id sub_1BC0E58EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton);
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v4 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B2144();
    v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0xD000000000000014, 0x80000001BC2C76D0);
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

char *sub_1BC0E5A20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for InteractionStackedMedmojiView());
    v6 = InteractionStackedMedmojiView.init(width:)(33.0);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC0E5AB0()
{
  return sub_1BC0E5AF8(&OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___firstInteractionNameLabel);
}

id sub_1BC0E5AD4()
{
  return sub_1BC0E5AF8(&OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___secondInteractionNameLabel);
}

id sub_1BC0E5AF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = v1;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v7 = (void *)sub_1BC2B4C64();
    objc_msgSend(v6, sel_setFont_, v7);

    v8 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v6, sel_setTextColor_, v8);

    v15 = sub_1BC2B4460();
    v16 = v9;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v10 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v15, v16);

    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v10, sel_setNumberOfLines_, 2);
    objc_msgSend(v10, sel_setAdjustsFontForContentSizeCategory_, 1);
    v12 = *(void **)(v5 + v2);
    *(_QWORD *)(v5 + v2) = v10;
    v4 = v10;

    v3 = 0;
  }
  v13 = v3;
  return v4;
}

id sub_1BC0E5D10(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  id v10;
  objc_super v12;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___firstInteractionNameLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___secondInteractionNameLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionMedicationCell();
  v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC0E5F54();
  sub_1BC0E6094();

  return v10;
}

id sub_1BC0E5E1C(void *a1)
{
  _BYTE *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints] = 0;
  v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___firstInteractionNameLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___secondInteractionNameLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionMedicationCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

void sub_1BC0E5F54()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = sub_1BC0E58EC();
  v2 = sub_1BC0E5A20();
  v3 = sub_1BC0E5AB0();
  v4 = sub_1BC0E5AD4();
  v5 = v1;
  v6 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v5);

  v7 = v2;
  v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v7);

  v9 = v3;
  v10 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, v9);

  v11 = v4;
  v12 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v12, sel_addSubview_, v11);

}

void sub_1BC0E6094()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  char *v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  char *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  id v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t i;
  id v95;
  void *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t j;
  id v100;
  void *v101;
  void *v102;

  v1 = v0;
  if (qword_1EF3F8080 != -1)
    swift_once();
  v2 = *(double *)&xmmword_1EF402470 + -5.0;
  v3 = *(double *)&qword_1EF402480 + -5.0;
  v102 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2B92A0;
  v5 = sub_1BC0E58EC();
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v1, sel_contentView);
  v8 = objc_msgSend(v7, sel_layoutMarginsGuide);

  v9 = objc_msgSend(v8, sel_leadingAnchor);
  v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v4 + 32) = v10;
  v11 = sub_1BC0E58EC();
  v12 = objc_msgSend(v11, sel_topAnchor);

  v13 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&xmmword_1EF402470);
  *(_QWORD *)(v4 + 40) = v15;
  v16 = sub_1BC0E58EC();
  v17 = objc_msgSend(v16, sel_trailingAnchor);

  v18 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v19 = objc_msgSend(v18, sel_trailingAnchor);

  v20 = objc_msgSend(v17, sel_constraintLessThanOrEqualToAnchor_constant_, v19, *(double *)&qword_1EF402488);
  *(_QWORD *)(v4 + 48) = v20;
  v21 = sub_1BC0E5A20();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v24 = objc_msgSend(v23, sel_layoutMarginsGuide);

  v25 = objc_msgSend(v24, sel_leadingAnchor);
  v26 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v4 + 56) = v26;
  v27 = sub_1BC0E5AB0();
  v28 = objc_msgSend(v27, sel_leadingAnchor);

  v29 = sub_1BC0E5A20();
  v30 = objc_msgSend(v29, sel_trailingAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 10.0);
  *(_QWORD *)(v4 + 64) = v31;
  v32 = sub_1BC0E5AB0();
  v33 = objc_msgSend(v32, sel_trailingAnchor);

  v34 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v35 = objc_msgSend(v34, sel_layoutMarginsGuide);

  v36 = objc_msgSend(v35, sel_trailingAnchor);
  v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);

  *(_QWORD *)(v4 + 72) = v37;
  v38 = sub_1BC0E5AD4();
  v39 = objc_msgSend(v38, sel_leadingAnchor);

  v40 = sub_1BC0E5AB0();
  v41 = objc_msgSend(v40, sel_leadingAnchor);

  v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v41);
  *(_QWORD *)(v4 + 80) = v42;
  v43 = sub_1BC0E5AD4();
  v44 = objc_msgSend(v43, sel_trailingAnchor);

  v45 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v46 = objc_msgSend(v45, sel_layoutMarginsGuide);

  v47 = objc_msgSend(v46, sel_trailingAnchor);
  v48 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v47);

  *(_QWORD *)(v4 + 88) = v48;
  v49 = sub_1BC0E5AD4();
  v50 = objc_msgSend(v49, sel_topAnchor);

  v51 = sub_1BC0E5AB0();
  v52 = objc_msgSend(v51, sel_bottomAnchor);

  v53 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v52, 8.0);
  *(_QWORD *)(v4 + 96) = v53;
  v54 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v55 = objc_msgSend(v54, sel_bottomAnchor);

  v56 = sub_1BC0E5AD4();
  v57 = objc_msgSend(v56, sel_bottomAnchor);

  v58 = objc_msgSend(v55, sel_constraintGreaterThanOrEqualToAnchor_constant_, v57, *(double *)&qword_1EF402480);
  *(_QWORD *)(v4 + 104) = v58;
  v59 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v60 = objc_msgSend(v59, sel_bottomAnchor);

  v61 = sub_1BC0E5A20();
  v62 = objc_msgSend(v61, sel_bottomAnchor);

  v63 = objc_msgSend(v60, sel_constraintGreaterThanOrEqualToAnchor_constant_, v62, v3);
  *(_QWORD *)(v4 + 112) = v63;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v64 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v102, sel_activateConstraints_, v64);

  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1BC2B92B0;
  v66 = sub_1BC0E5A20();
  v67 = objc_msgSend(v66, sel_topAnchor);

  v68 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v69 = objc_msgSend(v68, sel_topAnchor);

  v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_constant_, v69, v2);
  *(_QWORD *)(v65 + 32) = v70;
  v71 = sub_1BC0E5AB0();
  v72 = objc_msgSend(v71, sel_topAnchor);

  v73 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v74 = objc_msgSend(v73, sel_topAnchor);

  v75 = objc_msgSend(v72, sel_constraintEqualToAnchor_constant_, v74, *(double *)&xmmword_1EF402470);
  *(_QWORD *)(v65 + 40) = v75;
  sub_1BC2B45A4();
  v76 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints] = v65;
  swift_bridgeObjectRelease();
  v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_1BC2B92B0;
  v78 = sub_1BC0E5A20();
  v79 = objc_msgSend(v78, sel_topAnchor);

  v80 = sub_1BC0E58EC();
  v81 = objc_msgSend(v80, sel_bottomAnchor);

  v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_constant_, v81, 5.0);
  *(_QWORD *)(v77 + 32) = v82;
  v83 = sub_1BC0E5AB0();
  v84 = objc_msgSend(v83, sel_topAnchor);

  v85 = sub_1BC0E58EC();
  v86 = objc_msgSend(v85, sel_bottomAnchor);

  v87 = objc_msgSend(v84, sel_constraintEqualToAnchor_constant_, v86, 10.0);
  *(_QWORD *)(v77 + 40) = v87;
  sub_1BC2B45A4();
  v88 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints] = v77;
  swift_bridgeObjectRelease();
  v89 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden;
  v90 = v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden];
  v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = 1;
  if ((v90 & 1) == 0)
  {
    v91 = sub_1BC0E58EC();
    objc_msgSend(v91, sel_setHidden_, v1[v89]);

    v92 = *(_QWORD *)&v1[v76];
    if (!v92)
      goto LABEL_15;
    if (v92 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v93 = sub_1BC2B52D0();
      if (v93)
        goto LABEL_7;
    }
    else
    {
      v93 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v93)
      {
LABEL_7:
        if (v93 < 1)
        {
          __break(1u);
          goto LABEL_28;
        }
        for (i = 0; i != v93; ++i)
        {
          if ((v92 & 0xC000000000000001) != 0)
            v95 = (id)MEMORY[0x1BCCEE950](i, v92);
          else
            v95 = *(id *)(v92 + 8 * i + 32);
          v96 = v95;
          objc_msgSend(v95, sel_setActive_, v1[v89]);

        }
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    v97 = *(_QWORD *)&v1[v88];
    if (!v97)
      return;
    if (v97 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v98 = sub_1BC2B52D0();
      if (v98)
      {
LABEL_18:
        if (v98 >= 1)
        {
          for (j = 0; j != v98; ++j)
          {
            if ((v97 & 0xC000000000000001) != 0)
              v100 = (id)MEMORY[0x1BCCEE950](j, v97);
            else
              v100 = *(id *)(v97 + 8 * j + 32);
            v101 = v100;
            objc_msgSend(v100, sel_setActive_, (v1[v89] & 1) == 0);

          }
          goto LABEL_25;
        }
LABEL_28:
        __break(1u);
        return;
      }
    }
    else
    {
      v98 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v98)
        goto LABEL_18;
    }
LABEL_25:
    swift_bridgeObjectRelease_n();
  }
}

id sub_1BC0E6BF4()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  int v24;
  int v25;
  id v26;
  uint64_t v27;
  id result;
  uint64_t i;
  id v30;
  void *v31;
  unsigned __int8 *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t j;
  id v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  void (*v74)(char *);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[3];
  _QWORD v89[6];

  v1 = v0;
  v87 = sub_1BC2B39E0();
  v2 = *(char **)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v4 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B3A94();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v72 - v10;
  v81 = sub_1BC2B3A10();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v79 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1BC2B3A34();
  v83 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v14 = (char *)v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1BC2B3AD0();
  v84 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v85 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item];
  swift_beginAccess();
  sub_1BC0E5774(v16, (uint64_t)v89);
  if (!v89[3])
  {
    sub_1BC0E7B24((uint64_t)v89, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
    goto LABEL_19;
  }
  v78 = v14;
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for InteractionMedicationItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    sub_1BC2B39A4();
    v32 = v1;
    v33 = sub_1BC2B39D4();
    v34 = sub_1BC2B48C8();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v88[0] = v36;
      *(_DWORD *)v35 = 136446210;
      sub_1BC0E5774(v16, (uint64_t)v89);
      sub_1BC0E7A84(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
      v37 = sub_1BC2B4490();
      v89[0] = sub_1BC12540C(v37, v38, v88);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v33, v34, "Incorrect view model for InteractionMedicationItem: %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v36, -1, -1);
      MEMORY[0x1BCCEF3A0](v35, -1, -1);

    }
    else
    {

    }
    return (id)(*((uint64_t (**)(char *, uint64_t))v2 + 1))(v4, v87);
  }
  v87 = v88[0];
  v17 = *(_QWORD *)(v88[0] + 16);
  swift_beginAccess();
  v18 = *(_QWORD *)(v17 + 16);
  if (!(v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_5;
LABEL_24:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BC2B52D0())
    goto LABEL_24;
LABEL_5:
  v77 = v5;
  v76 = v6;
  if ((v18 & 0xC000000000000001) != 0)
  {
LABEL_25:
    v20 = (id)MEMORY[0x1BCCEE950](0, v18);
    goto LABEL_8;
  }
  if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_27;
  }
  v20 = *(id *)(v18 + 32);
LABEL_8:
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v21, sel_severity);

  v23 = objc_msgSend(v22, sel_severityLevel);
  v24 = v23 != (id)1;
  v6 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden;
  v25 = v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden];
  v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = v24;
  if (v24 == v25)
    goto LABEL_40;
  v26 = sub_1BC0E58EC();
  objc_msgSend(v26, sel_setHidden_, v1[v6]);

  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints];
  v75 = v8;
  if (v18)
  {
    v2 = v11;
    if (!(v18 >> 62))
    {
      v27 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain_n();
      if (v27)
      {
LABEL_12:
        if (v27 < 1)
        {
          __break(1u);
          goto LABEL_47;
        }
        for (i = 0; i != v27; ++i)
        {
          if ((v18 & 0xC000000000000001) != 0)
            v30 = (id)MEMORY[0x1BCCEE950](i, v18);
          else
            v30 = *(id *)(v18 + 8 * i + 32);
          v31 = v30;
          objc_msgSend(v30, sel_setActive_, v1[v6]);

        }
      }
LABEL_28:
      swift_bridgeObjectRelease_n();
      v8 = v75;
      v11 = v2;
      goto LABEL_29;
    }
LABEL_27:
    swift_bridgeObjectRetain_n();
    result = (id)sub_1BC2B52D0();
    v27 = (uint64_t)result;
    if (result)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_29:
  v39 = *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints];
  if (!v39)
    goto LABEL_40;
  v72[0] = v11;
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = (id)sub_1BC2B52D0();
    v40 = (uint64_t)result;
    if (result)
    {
LABEL_32:
      if (v40 >= 1)
      {
        for (j = 0; j != v40; ++j)
        {
          if ((v39 & 0xC000000000000001) != 0)
            v42 = (id)MEMORY[0x1BCCEE950](j, v39);
          else
            v42 = *(id *)(v39 + 8 * j + 32);
          v43 = v42;
          objc_msgSend(v42, sel_setActive_, (v1[v6] & 1) == 0, v72[0]);

        }
        goto LABEL_39;
      }
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
  }
  else
  {
    v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain_n();
    if (v40)
      goto LABEL_32;
  }
LABEL_39:
  swift_bridgeObjectRelease_n();
  v8 = v75;
  v11 = (char *)v72[0];
LABEL_40:
  v44 = v11;
  v45 = sub_1BC0E5A20();
  v46 = v87;
  sub_1BC0E79F0(v87 + 24, (uint64_t)v89);
  v47 = (uint64_t)&v45[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  swift_beginAccess();
  sub_1BC0E7A34((uint64_t)v89, v47, &qword_1EF3F88F8, (unint64_t *)&qword_1EF3FD860);
  swift_endAccess();
  sub_1BC18068C();
  sub_1BC0E7B24((uint64_t)v89, &qword_1EF3F88F8, (unint64_t *)&qword_1EF3FD860);

  v48 = sub_1BC0E5AB0();
  swift_bridgeObjectRetain();
  v49 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v48, sel_setText_, v49);

  v50 = sub_1BC0E5AD4();
  swift_bridgeObjectRetain();
  v51 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_setText_, v51);

  result = (id)HKIntegerFormatter();
  if (!result)
  {
LABEL_48:
    __break(1u);
    return result;
  }
  v52 = result;
  v53 = *(_QWORD *)(v46 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v53 + 16) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  v54 = (void *)sub_1BC2B47FC();
  v55 = objc_msgSend(v52, sel_stringFromNumber_, v54);

  if (v55)
  {
    v72[1] = sub_1BC2B4460();

    LODWORD(v75) = *MEMORY[0x1E0DC1C20];
    v56 = v83;
    v74 = *(void (**)(char *))(v83 + 104);
    v57 = v78;
    v58 = v86;
    v74(v78);
    v59 = sub_1BC2B3A40();
    v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
    v73(v11, 1, 1, v59);
    v60 = v79;
    sub_1BC2B3A04();
    v61 = v85;
    sub_1BC2B3AA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v60, v81);
    v83 = *(_QWORD *)(v56 + 8);
    ((void (*)(char *, uint64_t))v83)(v57, v58);
    sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v62 = v84;
    v63 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_1BC2B92C0;
    v65 = v61;
    v66 = v82;
    (*(void (**)(unint64_t, char *, uint64_t))(v62 + 16))(v64 + v63, v65, v82);
    v67 = v86;
    ((void (*)(char *, _QWORD, uint64_t))v74)(v57, v75, v86);
    v73(v44, 1, 1, v59);
    sub_1BC2B3A88();
    sub_1BC2B3A64();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v8, v77);
    ((void (*)(char *, uint64_t))v83)(v57, v67);
    sub_1BC2B4AFC();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v85, v66);
  }
  else
  {
    sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
    v68 = v83;
    v69 = v78;
    v70 = v86;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v78, *MEMORY[0x1E0DC1C20], v86);
    v71 = sub_1BC2B3A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v11, 1, 1, v71);
    sub_1BC2B3A88();
    sub_1BC2B3A64();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v8, v77);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    sub_1BC2B4AFC();
    return (id)swift_release();
  }
}

uint64_t type metadata accessor for InteractionMedicationCell()
{
  return objc_opt_self();
}

id InteractionMedicationCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionMedicationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC0E7888@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for InteractionMedicationCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionMedicationCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InteractionMedicationCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InteractionMedicationCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

void sub_1BC0E7940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FEF0)
  {
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FEF0);
  }
}

void sub_1BC0E7998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC0E79F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BC0E7A34(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_1BC0E7A84(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

void sub_1BC0E7A84(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC0E7AD8(255, a3);
    v4 = sub_1BC2B4FA0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC0E7AD8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BC0E7B24(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1BC0E7A84(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for ShapeStepViewController()
{
  uint64_t result;

  result = qword_1EF3F8908;
  if (!qword_1EF3F8908)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0E7B9C()
{
  return swift_initClassMetadata2();
}

void sub_1BC0E7BF4(_BYTE *a1@<X8>)
{
  *a1 = 97;
}

uint64_t sub_1BC0E7C00(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[15];
  char v23;

  v3 = v2;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v22[-v7];
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v22[-v10];
  v12 = qword_1EF3F8900;
  v13 = sub_1BC2B3350();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  sub_1BC0E85D0();
  swift_allocObject();
  v14 = v3;
  *(_QWORD *)&v3[v12] = sub_1BC2B3EF0();
  *(_QWORD *)&v14[qword_1EF402490] = MEMORY[0x1E0DEE9E8];
  v23 = 0;
  type metadata accessor for VisualizationShapeDataSource();
  swift_allocObject();
  v15 = swift_retain();
  v16 = sub_1BC14AF34(v15, &v23);

  sub_1BC0E8644(a1, (uint64_t)v8);
  sub_1BC0E8644((uint64_t)v8, (uint64_t)&v14[qword_1EF402658]);
  sub_1BC0E8698(0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v16 + qword_1EF3FAEA8);
  *(_QWORD *)&v14[qword_1EF3FAD98] = v17;
  *(_QWORD *)&v14[qword_1EF3FADA0] = a2;
  sub_1BC2B2DEC();
  sub_1BC0E8710();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC2B92D0;
  v19 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v18 + 32) = v16;
  *(_QWORD *)(v18 + 40) = v19;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC2B2E10();
  v20 = sub_1BC2B2FE4();
  swift_release();
  swift_release();
  sub_1BC0E1CFC((uint64_t)v8, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  return v20;
}

void sub_1BC0E7E90(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  v8 = qword_1EF3F8900;
  v9 = sub_1BC2B3350();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  sub_1BC0E85D0();
  swift_allocObject();
  v10 = a3;
  *(_QWORD *)&a1[v8] = sub_1BC2B3EF0();
  *(_QWORD *)&a1[qword_1EF402490] = MEMORY[0x1E0DEE9E8];

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC0E7FB0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  _BYTE v25[24];
  uint64_t v26;

  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - v3;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8960, sub_1BC0E8470);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  sub_1BC0E8470(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v13, 1);

  v14 = (void *)sub_1BC2B25C4();
  v24 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v14);

  if (v24)
  {
    type metadata accessor for ShapeCell(0);
    v15 = swift_dynamicCastClass();
    if (v15)
    {
      v16 = v15 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
      swift_beginAccess();
      sub_1BC0E5774(v16, (uint64_t)v25);
      if (v26)
      {
        sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
        v17 = v24;
        v18 = swift_dynamicCast();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, v18 ^ 1u, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
        {
          sub_1BC0E8550((uint64_t)v7, (uint64_t)v12);
          v19 = sub_1BC2B3350();
          v20 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
          v21 = *(_QWORD *)(v19 - 8);
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v4, v12, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v4, 0, 1, v19);
          swift_retain();
          sub_1BC2B3EC0();

          swift_release();
          sub_1BC0E1CFC((uint64_t)v4, &qword_1EF3F8958, v20);
          sub_1BC0E8594((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BC0E8470);
          return;
        }
      }
      else
      {
        v22 = v24;
        sub_1BC0E8594((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v7, 1, 1, v9);
      }

      sub_1BC0E1CFC((uint64_t)v7, (unint64_t *)&qword_1EF3F8960, sub_1BC0E8470);
    }
    else
    {

    }
  }
}

uint64_t sub_1BC0E82F4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC0E7FB0(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC0E83A4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC0E83D0()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1BC0E83FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShapeStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC0E8430()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0E8468()
{
  return type metadata accessor for ShapeStepViewController();
}

void sub_1BC0E8470(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF3F8968)
  {
    v2 = sub_1BC2B3350();
    v3 = sub_1BC0E519C(&qword_1EF3F8970, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], (uint64_t)&protocol conformance descriptor for MedicationShape);
    v5 = type metadata accessor for MedmojiConfigItem(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF3F8968);
  }
}

void sub_1BC0E84E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0F7D0)
  {
    sub_1BC0E8778(255, (unint64_t *)&qword_1EDA0F7C0);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0F7D0);
  }
}

uint64_t sub_1BC0E8550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E8470(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC0E8594(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1BC0E85D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8978)
  {
    sub_1BC0E1C64(255, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8978);
  }
}

uint64_t sub_1BC0E8644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC0E8698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF3F8988)
  {
    v2 = type metadata accessor for VisualizationShapeDataSource();
    v3 = sub_1BC0E519C(&qword_1EF3F8990, (uint64_t (*)(uint64_t))type metadata accessor for VisualizationShapeDataSource, (uint64_t)&protocol conformance descriptor for VisualizationShapeDataSource);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF3F8988);
  }
}

void sub_1BC0E8710()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400100)
  {
    sub_1BC0E8778(255, (unint64_t *)&qword_1EF3F8998);
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400100);
  }
}

uint64_t sub_1BC0E8778(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BC0E87C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2AE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2AC8();
  v4 = sub_1BC2B2A8C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void MedicationChartCellDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationChartCellDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC0E88A8()
{
  uint64_t v0;

}

uint64_t MedicationChartCellDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return v0;
}

uint64_t MedicationChartCellDataSource.__deallocating_deinit()
{

  return swift_deallocClassInstance();
}

uint64_t sub_1BC0E8928()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationChartCellDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall MedicationChartCellDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2C78();
  sub_1BC2B497C();
}

unint64_t sub_1BC0E89AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F89A8;
  if (!qword_1EF3F89A8)
  {
    v1 = type metadata accessor for MedicationChartCellDataSource();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationChartCellDataSource, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F89A8);
  }
  return result;
}

uint64_t type metadata accessor for MedicationChartCellDataSource()
{
  uint64_t result;

  result = qword_1EF3F89B0;
  if (!qword_1EF3F89B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0E8A30()
{
  sub_1BC2B2C78();
  return sub_1BC2B497C();
}

uint64_t sub_1BC0E8A64()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationChartCellDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationChartCellDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationChartCellDataSource + *v0 + 16))();
}

uint64_t sub_1BC0E8AD4()
{
  return type metadata accessor for MedicationChartCellDataSource();
}

uint64_t OntologyDebugDisplayable<>.name.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  objc_msgSend(v0, sel_type);
  v1 = (id)HKStringFromUserDomainConceptPropertyType();
  v2 = sub_1BC2B4460();

  return v2;
}

uint64_t HKUserDomainConceptBasicProperty.value.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_stringValue);
  if (!v1)
    return 0x6F6E2065756C6156;
  v2 = v1;
  v3 = sub_1BC2B4460();

  return v3;
}

uint64_t sub_1BC0E8BB0()
{
  return OntologyDebugDisplayable<>.name.getter();
}

uint64_t sub_1BC0E8BD0()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_stringValue);
  if (!v1)
    return 0x6F6E2065756C6156;
  v2 = v1;
  v3 = sub_1BC2B4460();

  return v3;
}

uint64_t HKUserDomainConceptNamedQuantity.value.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = v0;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_name);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1BC2B4460();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  sub_1BC0E8D78();
  sub_1BC2B4478();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v7 = objc_msgSend(v1, sel_unitString, v4, v6);
  sub_1BC2B4460();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x203A656D614ELL;
}

void sub_1BC0E8D78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FB1D0)
  {
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FB1D0);
  }
}

uint64_t sub_1BC0E8DCC()
{
  return HKUserDomainConceptNamedQuantity.value.getter();
}

uint64_t HKUserDomainConceptLocalizedString.value.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = v0;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_locale);
  sub_1BC2B4460();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v3 = objc_msgSend(v1, sel_stringValue);
  sub_1BC2B4460();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x203A656C61636F4CLL;
}

uint64_t sub_1BC0E8EF8()
{
  return HKUserDomainConceptLocalizedString.value.getter();
}

uint64_t HKOntologyLocalizedEducationContent.value.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;

  v1 = v0;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_primarySection);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_localeIdentifier);

    v3 = (void *)sub_1BC2B4460();
    v6 = v5;

  }
  else
  {
    v6 = 0;
  }
  sub_1BC0E8D78();
  sub_1BC2B4478();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v7 = objc_msgSend(v1, sel_primarySection, v3, v6);
  if (v7)
  {
    v8 = v7;
    sub_1BC2B4C40();

  }
  sub_1BC2B4478();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x203A656C61636F4CLL;
}

uint64_t sub_1BC0E908C()
{
  return HKOntologyLocalizedEducationContent.value.getter();
}

uint64_t OntologyIDDataSource.__allocating_init(with:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  OntologyIDDataSource.init(with:)(a1);
  return v2;
}

void OntologyIDDataSource.init(with:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;

  v2 = v1;
  v1[6] = 0x7865542065657246;
  v1[7] = 0xE900000000000074;
  v1[8] = 4271950;
  v1[9] = 0xE300000000000000;
  v1[10] = a1;
  v4 = a1;
  v5 = v4;
  if (!a1)
  {
    v2[4] = 0xD000000000000032;
    v2[5] = 0x80000001BC2C7870;
    v19 = v2[9];
    v2[2] = v2[8];
    v2[3] = v19;
    v20 = MEMORY[0x1E0DEE9D8];
    v2[11] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();

    v2[12] = v20;
    return;
  }
  v6 = v4;
  v7 = objc_msgSend(v6, sel_firstConceptIdentifier);
  if (!v7)
    goto LABEL_18;
  v8 = v7;
  v9 = objc_msgSend(v6, sel_propertyCollection);
  if (!v9)
  {

LABEL_18:
    v22 = v2[7];
    v2[4] = v2[6];
    v2[5] = v22;
    v23 = v2[9];
    v2[2] = v2[8];
    v2[3] = v23;
    v24 = MEMORY[0x1E0DEE9D8];
    v2[11] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    v2[12] = v24;
    return;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_properties);
  sub_1BC0E9404();
  v12 = sub_1BC2B458C();

  v2[11] = v12;
  v13 = objc_msgSend(v10, sel_properties);
  v14 = sub_1BC2B458C();

  v30 = MEMORY[0x1E0DEE9D8];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v15)
      goto LABEL_6;
LABEL_20:
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
    goto LABEL_20;
LABEL_6:
  v29 = v10;
  if (v15 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0)
      v17 = (id)MEMORY[0x1BCCEE950](i, v14);
    else
      v17 = *(id *)(v14 + 8 * i + 32);
    v18 = v17;
    if ((objc_msgSend(v17, sel_isDeleted) & 1) != 0)
    {

    }
    else
    {
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
    }
  }
  swift_bridgeObjectRelease();
  v21 = v30;
  v10 = v29;
LABEL_21:
  v2[12] = v21;
  objc_msgSend(v8, sel_rawIdentifier);
  v2[2] = sub_1BC2B539C();
  v2[3] = v25;
  v26 = sub_1BC2B4B38();
  v28 = v27;

  if (!v28)
  {
    v26 = v2[6];
    v28 = v2[7];
    swift_bridgeObjectRetain();
  }
  v2[4] = v26;
  v2[5] = v28;
}

unint64_t sub_1BC0E9404()
{
  unint64_t result;

  result = qword_1EF3F8A00;
  if (!qword_1EF3F8A00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3F8A00);
  }
  return result;
}

uint64_t OntologyIDDataSource.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OntologyIDDataSource.__deallocating_deinit()
{
  OntologyIDDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of OntologyDebugDisplayable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of OntologyDebugDisplayable.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for OntologyIDDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for OntologyIDDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OntologyIDDataSource.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

double static NewMedicationsOnboardingDataSource.searchAnimationDuration.getter()
{
  return 0.4;
}

uint64_t sub_1BC0E9500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = qword_1EF3F8B98;
  if (*(_QWORD *)(v0 + qword_1EF3F8B98))
  {
    v2 = *(_QWORD *)(v0 + qword_1EF3F8B98);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + qword_1EF3F8BC8);
    sub_1BC2B36F8();
    swift_allocObject();
    v5 = v4;
    v2 = sub_1BC2B36EC();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id *sub_1BC0E9588()
{
  return sub_1BC0E95B0(&qword_1EF3F8BA0, MEMORY[0x1E0CB56F0]);
}

id *sub_1BC0E959C()
{
  return sub_1BC0E95B0(&qword_1EF3F8BA8, MEMORY[0x1E0CB5718]);
}

id *sub_1BC0E95B0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;

  v3 = *a1;
  v4 = *(id **)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v6 = v2;
    v7 = *a2;
    v8 = *(void **)(v2 + qword_1EF3F8BC8);
    sub_1BC2B3278();
    v9 = v7;
    v10 = v8;
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v11 = (void *)sub_1BC2B314C();
    type metadata accessor for OntologyShardStateObserver();
    swift_allocObject();
    v5 = OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(v9, v10, v11);
    *(_QWORD *)(v6 + v3) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1BC0E96D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = qword_1EF3F8BB0;
  if (*(_QWORD *)(v0 + qword_1EF3F8BB0))
  {
    v2 = *(_QWORD *)(v0 + qword_1EF3F8BB0);
  }
  else
  {
    type metadata accessor for NetworkStateObserver();
    v2 = swift_allocObject();
    sub_1BC2B3F5C();
    v3 = OBJC_IVAR____TtC19HealthMedicationsUI20NetworkStateObserver_networkMonitor;
    sub_1BC2B4100();
    swift_allocObject();
    *(_QWORD *)(v2 + v3) = sub_1BC2B40F4();
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1BC0E97A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF3F8BB8;
  v2 = *(void **)(v0 + qword_1EF3F8BB8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3F8BB8);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB69B8]), sel_initWithHealthStore_, *(_QWORD *)(v0 + qword_1EF3F8BC8));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC0E9820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = qword_1EF3F8BC0;
  if (*(_QWORD *)(v0 + qword_1EF3F8BC0))
  {
    v2 = *(_QWORD *)(v0 + qword_1EF3F8BC0);
  }
  else
  {
    v3 = v0;
    sub_1BC2B3278();
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v2 = sub_1BC2B314C();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1BC0E98F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BC0E996C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC0E99EC()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC0E9A64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t (*sub_1BC0E9ADC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BC2B3F80();
  return sub_1BC0E9B54;
}

uint64_t sub_1BC0E9B58()
{
  return sub_1BC0E9FD8((uint64_t)&qword_1EF3F8B50, (unint64_t *)&unk_1EF4001D0, MEMORY[0x1E0DEA968]);
}

uint64_t sub_1BC0E9B74(uint64_t a1)
{
  return sub_1BC0EA074(a1, &qword_1EF3F8B58, MEMORY[0x1E0DEA968], (uint64_t)&qword_1EF3F8B50, (unint64_t *)&unk_1EF4001D0);
}

uint64_t (*sub_1BC0E9B98(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = MEMORY[0x1E0DEA968];
  sub_1BC0E2130(0, &qword_1EF3F8B58, MEMORY[0x1E0DEA968], MEMORY[0x1E0C96180]);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  v8 = malloc(v7);
  v9 = qword_1EF3F8B50;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_1BC0E2130(0, (unint64_t *)&unk_1EF4001D0, v4, MEMORY[0x1E0C96198]);
  v3[16] = v10;
  sub_1BC2B3F68();
  swift_endAccess();
  return sub_1BC0E9C88;
}

uint64_t sub_1BC0E9C8C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1BC0F0304(a1);
}

uint64_t sub_1BC0E9CA0()
{
  return sub_1BC0F03A0();
}

uint64_t sub_1BC0E9CB4()
{
  return sub_1BC0EA380();
}

uint64_t sub_1BC0E9CD0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t (*sub_1BC0E9D3C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BC2B3F80();
  return sub_1BC0E9B54;
}

void sub_1BC0E9DB4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1BC0E9E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  swift_beginAccess();
  sub_1BC0E2130(0, a5, a6, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  return swift_endAccess();
}

uint64_t sub_1BC0E9E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7, unint64_t *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v21;

  sub_1BC0E2130(0, a5, a6, MEMORY[0x1E0C96180]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v21 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19((char *)&v21 - v17, a1, v12);
  v19(v16, (uint64_t)v18, v12);
  swift_beginAccess();
  sub_1BC0E2130(0, a8, a6, MEMORY[0x1E0C96198]);
  sub_1BC2B3F74();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_1BC0E9FBC()
{
  return sub_1BC0E9FD8((uint64_t)&qword_1EF3F8B60, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0]);
}

uint64_t sub_1BC0E9FD8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  swift_beginAccess();
  sub_1BC0E2130(0, a2, a3, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  return swift_endAccess();
}

uint64_t sub_1BC0EA050(uint64_t a1)
{
  return sub_1BC0EA074(a1, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], (uint64_t)&qword_1EF3F8B60, &qword_1EDA0FC20);
}

uint64_t sub_1BC0EA074(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BC0E2130(0, a2, a3, MEMORY[0x1E0C96180]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v13 - v11, a1, v9);
  swift_beginAccess();
  sub_1BC0E2130(0, a5, a3, MEMORY[0x1E0C96198]);
  sub_1BC2B3F74();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
}

uint64_t (*sub_1BC0EA164(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = MEMORY[0x1E0DEAFA0];
  sub_1BC0E2130(0, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  v8 = malloc(v7);
  v9 = qword_1EF3F8B60;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_1BC0E2130(0, &qword_1EDA0FC20, v4, MEMORY[0x1E0C96198]);
  v3[16] = v10;
  sub_1BC2B3F68();
  swift_endAccess();
  return sub_1BC0E9C88;
}

void sub_1BC0EA254(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1BC2B3F74();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1BC2B3F74();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t sub_1BC0EA36C()
{
  return sub_1BC0EA380();
}

uint64_t sub_1BC0EA380()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC0EA3E8(char a1)
{
  id v1;
  uint64_t v2;

  if (!a1)
  {
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (a1 == 1)
  {
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1EDA0FEE8 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  return v2;
}

BOOL sub_1BC0EA598(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s19HealthMedicationsUI30ScheduleUnavailableDeviceStateV0F0O9hashValueSivg_0()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC0EA5F0()
{
  return sub_1BC2B545C();
}

uint64_t sub_1BC0EA618()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC0EA658@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + qword_1EF4024B8);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC0EA6AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + qword_1EF4024B8);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_1BC0EA718();
}

uint64_t sub_1BC0EA718()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v1 = v0 + qword_1EF4024B8;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    v2 = 1;
  else
    v2 = 2;
  *(_BYTE *)(v0 + qword_1EF3F8BF0) = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  if ((v19 & 1) == 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    {
      type metadata accessor for NewMedicationsOnboardingDataSource();
      v4 = sub_1BC2B2A5C();
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        v6 = 0;
        v7 = (_QWORD *)(v4 + 40);
        while ((*(v7 - 1) != 0xD000000000000010 || *v7 != 0x80000001BC2C7950) && (sub_1BC2B53CC() & 1) == 0)
        {
          v7 += 2;
          if (v5 == ++v6)
            goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1BC2B92D0;
        if (qword_1EDA0FEE8 != -1)
          swift_once();
        v9 = (id)qword_1EDA0FEF8;
        swift_bridgeObjectRetain();
        v10 = sub_1BC2B2144();
        v12 = v11;

        swift_bridgeObjectRelease();
        type metadata accessor for MedicationOnboardingHeaderCell();
        sub_1BC0E519C(&qword_1EF3F8C58, (uint64_t (*)(uint64_t))type metadata accessor for MedicationOnboardingHeaderCell, (uint64_t)&unk_1BC2C04F8);
        v13 = sub_1BC2B2930();
        v15 = v14;
        *(_QWORD *)(v8 + 56) = &type metadata for MedicationOnboardingHeaderItem;
        *(_QWORD *)(v8 + 64) = sub_1BC0F12D8();
        v16 = (_QWORD *)swift_allocObject();
        *(_QWORD *)(v8 + 32) = v16;
        v16[2] = v10;
        v16[3] = v12;
        v16[4] = v13;
        v16[5] = v15;
        v17 = swift_bridgeObjectRetain();
        v18 = sub_1BC0F79BC(v17);
        swift_bridgeObjectRelease();
        sub_1BC130FBC(v18);
        sub_1BC2B2C24();
      }
LABEL_16:
      swift_bridgeObjectRelease();
    }
    return sub_1BC0EE7C0();
  }
  return result;
}

uint64_t sub_1BC0EAA20()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC0EAA68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1EF4024B8);
  swift_beginAccess();
  *v3 = a1;
  swift_bridgeObjectRelease();
  return sub_1BC0EA718();
}

uint64_t (*sub_1BC0EAAC4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC0EAB0C;
}

uint64_t sub_1BC0EAB0C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC0EA718();
  return result;
}

uint64_t sub_1BC0EAB3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void (*v16)(uint64_t *, _QWORD);
  void (*v17)(uint64_t *, _QWORD);
  _QWORD *v18;
  id v19;
  void (*v20)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  _BYTE *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  v35 = a1;
  v34 = sub_1BC2B2FA8();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)&v27 - v3;
  v4 = sub_1BC2B2C6C();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B3CD4();
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3C80();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v9 = (void *)qword_1EDA0FEF8;
  sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC2B92D0;
  swift_getKeyPath();
  swift_getKeyPath();
  v11 = v9;
  swift_bridgeObjectRetain();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  v12 = sub_1BC1F3134(v36[0], v36[1]);
  v14 = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1BC0F2748();
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v14;
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BC2B3C98();
  v15 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v16 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BA8();
  v16(v36, 0);
  v17 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C38();
  *v18 = 0x3FF0000000000000;
  v17(v36, 0);
  v19 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
  v20 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v20(v36, 0);
  v36[3] = v6;
  v36[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  v22 = v29;
  (*(void (**)(uint64_t *, char *, uint64_t))(v29 + 16))(boxed_opaque_existential_1, v8, v6);
  swift_allocObject();
  swift_weakInit();
  v23 = v30;
  *v30 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v27 + 104))(v23, *MEMORY[0x1E0D2B168], v28);
  swift_retain();
  v24 = v31;
  sub_1BC2B3B30();
  v25 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v33, *MEMORY[0x1E0D2B8C8], v34);
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  return swift_release();
}

uint64_t sub_1BC0EB010()
{
  uint64_t result;

  type metadata accessor for NewMedicationOnboardingViewController();
  result = swift_dynamicCastClass();
  if (result)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return sub_1BC232F60();
  }
  return result;
}

void sub_1BC0EB0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  ValueMetadata *v56;
  unint64_t v57;

  v1 = v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)&v42 - v3;
  v4 = sub_1BC2B2438();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3320();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v10 = (void *)sub_1BC2B4430();
  v11 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v10, v9);

  if (v11)
  {
    sub_1BC2B242C();
    v43 = sub_1BC2B23FC();
    v45 = v12;
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v7, v4);
    type metadata accessor for MedicationSearchOptionsFieldCell();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F8E90, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchOptionsFieldCell, (uint64_t)&protocol conformance descriptor for MedicationSearchOptionsFieldCell);
    v42 = sub_1BC2B2930();
    v44 = v14;
    v53 = swift_allocObject();
    swift_weakInit();
    sub_1BC0F2600(0);
    v52 = swift_allocObject();
    swift_weakInit();
    sub_1BC0F2600(0);
    v50 = qword_1EF3F8BF0;
    sub_1BC0EA3E8(*(_BYTE *)(v1 + qword_1EF3F8BF0));
    type metadata accessor for CollectionViewTextCell();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F8E98, (uint64_t (*)(uint64_t))type metadata accessor for CollectionViewTextCell, (uint64_t)&protocol conformance descriptor for CollectionViewTextCell);
    v48 = sub_1BC2B2930();
    v49 = v15;
    *(_QWORD *)&v55 = 0x74497265746F6F46;
    *((_QWORD *)&v55 + 1) = 0xEB000000005F6D65;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    v47 = v1;
    v13(v7, v4);
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v54 = *((_QWORD *)&v55 + 1);
    v46 = v55;
    v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v17 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v16, sel_initWithString_, v17);

    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BC2B9600;
    *(_QWORD *)(v19 + 56) = &type metadata for MedicationIconItem;
    *(_QWORD *)(v19 + 64) = sub_1BC0F24F8();
    v20 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v19 + 32) = v20;
    v21 = (char *)v11;
    sub_1BC2B242C();
    v22 = sub_1BC2B23FC();
    v24 = v23;
    v13(v7, v4);
    type metadata accessor for MedicationIconCell();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F8E78, (uint64_t (*)(uint64_t))type metadata accessor for MedicationIconCell, (uint64_t)&unk_1BC2C189C);
    v25 = sub_1BC2B2930();
    v20[2] = v22;
    v20[3] = v24;
    v20[4] = v21;
    v20[5] = v25;
    v20[6] = v26;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v27 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();

    swift_bridgeObjectRelease();
    v28 = sub_1BC2B2D68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v51, 1, 1, v28);
    v29 = sub_1BC2B2D80();
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
    *(_QWORD *)(v19 + 96) = v29;
    *(_QWORD *)(v19 + 104) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v30, MEMORY[0x1E0D2B310]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 72));
    sub_1BC2B2D74();
    *(_QWORD *)(v19 + 136) = &type metadata for CollectionViewTextItem;
    *(_QWORD *)(v19 + 144) = sub_1BC0F2618();
    v31 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v19 + 112) = v31;
    v32 = v49;
    v31[2] = v48;
    v31[3] = v32;
    v33 = v47;
    v34 = v54;
    v31[4] = v46;
    v31[5] = v34;
    v31[6] = v18;
    if (*(_BYTE *)(v33 + v50))
    {
      v51 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = v18;
      v36 = v45;
      swift_bridgeObjectRetain();
      sub_1BC0F2690((uint64_t)sub_1BC0F25F8);
      sub_1BC0F2690((uint64_t)sub_1BC0F2610);
      v37 = *(_QWORD *)(v19 + 16);
      v38 = *(_QWORD *)(v19 + 24);
      v39 = v44;
      swift_bridgeObjectRetain();
      if (v37 >= v38 >> 1)
        v19 = (uint64_t)sub_1BC0FA038((_QWORD *)(v38 > 1), v37 + 1, 1, (_QWORD *)v19);
      v56 = &type metadata for MedicationSearchOptionsFieldItem;
      v57 = sub_1BC0F26A0();
      v40 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v55 = v40;
      v40[2] = v43;
      v40[3] = v36;
      v40[4] = sub_1BC0F25F8;
      v40[5] = v53;
      v40[6] = sub_1BC0F2610;
      v41 = v42;
      v40[7] = v52;
      v40[8] = v41;
      v40[9] = v39;
      *(_QWORD *)(v19 + 16) = v37 + 1;
      sub_1BC0F2730(&v55, v19 + 40 * v37 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v21 = v51;
    }
    swift_bridgeObjectRelease();

    sub_1BC0F2600((uint64_t)sub_1BC0F25F8);
    sub_1BC0F2600((uint64_t)sub_1BC0F2610);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC0EB798()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1BCCEF478](result + qword_1EF3F8B80))
    {
      sub_1BC2333F8();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BC0EB818(uint64_t a1, void *a2)
{
  uint64_t result;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1BC2B3F98();
    if (MEMORY[0x1BCCEF478](v5 + qword_1EF3F8B80))
    {
      sub_1BC233678(a2, a1);
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

void sub_1BC0EB8F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v30 - v1;
  v31 = sub_1BC2B2438();
  v3 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3320();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v8 = (void *)sub_1BC2B4430();
  v9 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v8, v7);

  if (v9)
  {
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BC2B9600;
    *(_QWORD *)(v10 + 56) = &type metadata for MedicationIconItem;
    *(_QWORD *)(v10 + 64) = sub_1BC0F24F8();
    v11 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v10 + 32) = v11;
    v12 = v9;
    sub_1BC2B242C();
    v13 = sub_1BC2B23FC();
    v15 = v14;
    v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v5, v31);
    type metadata accessor for MedicationIconCell();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F8E78, (uint64_t (*)(uint64_t))type metadata accessor for MedicationIconCell, (uint64_t)&unk_1BC2C189C);
    v17 = sub_1BC2B2930();
    v11[2] = v13;
    v11[3] = v15;
    v11[4] = v12;
    v11[5] = v17;
    v11[6] = v18;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v19 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();

    swift_bridgeObjectRelease();
    v20 = sub_1BC2B2D68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v2, 1, 1, v20);
    v21 = sub_1BC2B2D80();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
    *(_QWORD *)(v10 + 96) = v21;
    *(_QWORD *)(v10 + 104) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v22, MEMORY[0x1E0D2B310]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 72));
    sub_1BC2B2D74();
    v23 = swift_allocObject();
    swift_weakInit();
    *(_QWORD *)(v10 + 136) = &type metadata for MedicationSearchFieldItem;
    *(_QWORD *)(v10 + 144) = sub_1BC0F2578();
    v24 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v10 + 112) = v24;
    sub_1BC2B242C();
    v25 = sub_1BC2B23FC();
    v27 = v26;
    v16(v5, v31);
    type metadata accessor for MedicationSearchFieldCell();
    sub_1BC0E519C((unint64_t *)&qword_1EF3FABF0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchFieldCell, (uint64_t)&unk_1BC2BC0A4);
    v28 = sub_1BC2B2930();
    v24[2] = v25;
    v24[3] = v27;
    v24[4] = sub_1BC0F2570;
    v24[5] = v23;
    v24[6] = v28;
    v24[7] = v29;

  }
  else
  {
    __break(1u);
  }
}

id sub_1BC0EBD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  id result;
  void (*v5)(_BYTE *, _QWORD);
  void (*v6)(_BYTE *, _QWORD);
  uint64_t (*v7)(_BYTE *, _QWORD);
  _BYTE v8[32];

  v0 = sub_1BC2B3B78();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC2B3C68();
  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B50], 1024);
  if (result)
  {
    v5 = (void (*)(_BYTE *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3BA8();
    v5(v8, 0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC21C0], v0);
    v6 = (void (*)(_BYTE *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3BC0();
    v6(v8, 0);
    v7 = (uint64_t (*)(_BYTE *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3B84();
    return (id)v7(v8, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC0EBE78()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1BC2B3F98();
  }
  return result;
}

uint64_t sub_1BC0EBEF8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t *boxed_opaque_existential_1;
  char v7;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  if (v7 == 1)
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + qword_1EF3F8BD8) + 16))
    {
      v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1BC2B2BC4();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
      swift_bridgeObjectRetain();
      sub_1BC2B2BAC();
      sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], v2);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1BC2B92D0;
      v4 = sub_1BC2B2D98();
      v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
      *(_QWORD *)(v3 + 56) = v4;
      *(_QWORD *)(v3 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v5, MEMORY[0x1E0D2B340]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 32));
      sub_1BC0EAB3C((uint64_t)boxed_opaque_existential_1);
      sub_1BC2B2BAC();
      sub_1BC2B2C18();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_1BC2B2C18();
    }
  }
  return result;
}

uint64_t sub_1BC0EC104()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v43 = (char *)&v34 - v2;
  sub_1BC0E7998(0, &qword_1EF3F8E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF8A0], v0);
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v34 - v4;
  v39 = sub_1BC2B49F4();
  v35 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0DEAFA0];
  sub_1BC0E2130(0, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  sub_1BC0F2350();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F23E8(0);
  v38 = v18;
  v40 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v34 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F173C(0, &qword_1EF3F8E50, v20, sub_1BC0F2428, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95A10]);
  v22 = *(_QWORD *)(v21 - 8);
  v41 = v21;
  v42 = v22;
  MEMORY[0x1E0C80A78](v21);
  v36 = (char *)&v34 - v23;
  swift_beginAccess();
  sub_1BC0E2130(0, &qword_1EDA0FC20, v7, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  sub_1BC0F1440((unint64_t *)&qword_1EDA0FC00, &qword_1EDA0FC10, v7);
  sub_1BC2B4034();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BC0F240C();
  sub_1BC2B4088();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1BC2B49E8();
  v24 = v35;
  v25 = (uint64_t)v37;
  v26 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v37, 1, 1, v39);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v44 = (id)sub_1BC2B4A0C();
  v27 = sub_1BC2B49C4();
  v28 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v43, 1, 1, v27);
  sub_1BC0F2428();
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v29 = v36;
  v30 = v38;
  v31 = v34;
  sub_1BC2B4028();
  sub_1BC0F2444(v28, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  sub_1BC0F2444(v25, &qword_1EF3F8E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF8A0]);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v26);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v30);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0F2490();
  v32 = v41;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v32);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC0EC5E4(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1BC0EC5EC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B2C18();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC0EC64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;

  sub_1BC0E7998(0, &qword_1EDA0FE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB22E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v47 = (char *)&v37 - v1;
  v2 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96180];
  sub_1BC0E2130(0, &qword_1EF3F8D48, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus, MEMORY[0x1E0C96180]);
  v4 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v40 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v37 - v5;
  sub_1BC0F1C2C();
  v8 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  v43 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEAFA0];
  sub_1BC0E2130(0, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], v2);
  v13 = v12;
  v41 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v37 - v17;
  sub_1BC0F1CC4();
  v20 = *(_QWORD *)(v19 - 8);
  v45 = v19;
  v46 = v20;
  MEMORY[0x1E0C80A78](v19);
  v38 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F1DA4();
  v23 = *(_QWORD *)(v22 - 8);
  v48 = v22;
  v49 = v23;
  MEMORY[0x1E0C80A78](v22);
  v44 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E9588();
  swift_beginAccess();
  sub_1BC0E2130(0, &qword_1EDA0FC20, v11, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  swift_release();
  sub_1BC0E959C();
  swift_beginAccess();
  sub_1BC2B3F68();
  swift_endAccess();
  swift_release();
  sub_1BC0E96D4();
  swift_beginAccess();
  sub_1BC0E2130(0, &qword_1EF3F8D80, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  swift_release();
  sub_1BC0F1440(&qword_1EF3F8D58, &qword_1EF3F8D48, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus);
  sub_1BC0F1E80();
  v25 = v39;
  sub_1BC2B4088();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v25);
  sub_1BC0F1440((unint64_t *)&qword_1EDA0FC00, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0]);
  sub_1BC0E519C(&qword_1EF3F8D68, (uint64_t (*)(uint64_t))sub_1BC0F1C2C, MEMORY[0x1E0C958E0]);
  v26 = v38;
  v27 = v42;
  sub_1BC2B3FE0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v27);
  v28 = *(void (**)(char *, uint64_t))(v41 + 8);
  v28(v16, v13);
  v28(v18, v13);
  v50 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v29 = sub_1BC2B4F58();
  v30 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v47, 1, 1, v29);
  sub_1BC0E1D38(0, &qword_1EDA0FE20);
  sub_1BC0E519C(&qword_1EF3F8D78, (uint64_t (*)(uint64_t))sub_1BC0F1CC4, MEMORY[0x1E0C956B8]);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FE18, &qword_1EDA0FE20, 0x1E0C99E58, MEMORY[0x1E0CB2358]);
  v32 = v44;
  v31 = v45;
  sub_1BC2B4064();
  sub_1BC0F2444(v30, &qword_1EDA0FE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB22E8]);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v31);
  v33 = swift_allocObject();
  swift_weakInit();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_1BC0F1EC4;
  *(_QWORD *)(v34 + 24) = v33;
  sub_1BC0E519C(&qword_1EF3F8D90, (uint64_t (*)(uint64_t))sub_1BC0F1DA4, MEMORY[0x1E0C95CB8]);
  v35 = v48;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v35);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC0ECC30(char a1, char a2, unsigned __int8 *a3)
{
  int v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  char v18;

  v5 = *a3;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BC2B3F8C();
    swift_release();
    swift_release();
    if ((v18 & 1) == 0)
    {
      if ((a1 & 1) != 0 && (a2 & 1) != 0 || (sub_1BC0E9820(), v8 = sub_1BC2B317C(), swift_release(), (v8 & 1) != 0))
      {
        sub_1BC0EE7C0();
        v9 = *(id *)(v7 + qword_1EF3F8BC8);
        v10 = sub_1BC2B3938();
        v11 = sub_1BC2B38FC();
        sub_1BC131134(v11);
        sub_1BC0E9500();
        sub_1BC0F0454(v10);
        swift_release();
        swift_bridgeObjectRelease();

      }
      else
      {
        if (v5 == 1)
        {
          sub_1BC0ECFFC();
          v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
          sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          sub_1BC2B2BC4();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
          sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], v12);
          v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_1BC2B92D0;
          v14 = type metadata accessor for ShardSpinnerDownloadItem();
          v15 = swift_allocObject();
          *(_QWORD *)(v13 + 56) = v14;
          *(_QWORD *)(v13 + 64) = sub_1BC0E519C(&qword_1EF3F8DA0, (uint64_t (*)(uint64_t))type metadata accessor for ShardSpinnerDownloadItem, (uint64_t)&unk_1BC2C57FC);
        }
        else
        {
          v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
          sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          sub_1BC2B2BC4();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
          sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], v16);
          v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_1BC2B92D0;
          v17 = type metadata accessor for ConnectivityIssueItem();
          v15 = swift_allocObject();
          *(_QWORD *)(v13 + 56) = v17;
          *(_QWORD *)(v13 + 64) = sub_1BC0E519C(&qword_1EF3F8D98, (uint64_t (*)(uint64_t))type metadata accessor for ConnectivityIssueItem, (uint64_t)&unk_1BC2C2108);
        }
        *(_QWORD *)(v13 + 32) = v15;
        sub_1BC2B2BAC();
        sub_1BC2B2C18();
        swift_bridgeObjectRelease();
      }
    }
    return swift_release();
  }
  return result;
}

void sub_1BC0ECFFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48E0();
  if (os_log_type_enabled(v7, v8))
  {
    v19 = v1;
    v9 = swift_slowAlloc();
    v18 = v3;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_1BC2B54F8();
    v20 = sub_1BC12540C(v12, v13, aBlock);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%{public}s] Updating ontology...", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v11, -1, -1);
    MEMORY[0x1BCCEF3A0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v14 = sub_1BC0E97A0();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  aBlock[4] = (uint64_t)sub_1BC0F1C24;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC2599E8;
  aBlock[3] = (uint64_t)&block_descriptor_0;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_updateOntologyForReason_completion_, 5, v16);
  _Block_release(v16);

}

uint64_t sub_1BC0ED240(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v29 - v9;
  if ((a1 & 1) != 0)
  {
    sub_1BC2B39A4();
    v11 = sub_1BC2B39D4();
    v12 = sub_1BC2B48E0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v30 = v14;
      *(_DWORD *)v13 = 136446210;
      v15 = sub_1BC2B54F8();
      v29 = sub_1BC12540C(v15, v16, &v30);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v11, v12, "[%{public}s] Updated ontology successfully", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v14, -1, -1);
      MEMORY[0x1BCCEF3A0](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    sub_1BC2B39A4();
    v18 = a2;
    v19 = a2;
    v20 = sub_1BC2B39D4();
    v21 = sub_1BC2B48E0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v30 = v23;
      *(_DWORD *)v22 = 136446466;
      v24 = sub_1BC2B54F8();
      v29 = sub_1BC12540C(v24, v25, &v30);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      v29 = (uint64_t)a2;
      v26 = a2;
      sub_1BC0F1278(0, &qword_1EF3F8D40, (unint64_t *)&qword_1EDA0FEA0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v27 = sub_1BC2B4478();
      v29 = sub_1BC12540C(v27, v28, &v30);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC0DC000, v20, v21, "[%{public}s] Error updating ontology: %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v23, -1, -1);
      MEMORY[0x1BCCEF3A0](v22, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_1BC0ED5AC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[16];
  void (*v39)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v38[-v1];
  v3 = sub_1BC2B49F4();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0DEA968];
  sub_1BC0E2130(0, &qword_1EF3F8B58, MEMORY[0x1E0DEA968], MEMORY[0x1E0C96180]);
  v40 = v7;
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v38[-v8];
  sub_1BC0F1348();
  v47 = v10;
  v51 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC0F18BC(0, &qword_1EF3F8C78, v13, sub_1BC0F14C8, (void (*)(void))sub_1BC0F14F8);
  v15 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  v49 = v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = &v38[-v16];
  sub_1BC0F1514();
  v50 = v18;
  v52 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v41 = &v38[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC0F16FC(0);
  v21 = *(_QWORD *)(v20 - 8);
  v53 = v20;
  v54 = v21;
  MEMORY[0x1E0C80A78](v20);
  v43 = &v38[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC0F173C(0, &qword_1EF3F8CD0, v23, sub_1BC0F1804, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
  v25 = *(_QWORD *)(v24 - 8);
  v55 = v24;
  v56 = v25;
  MEMORY[0x1E0C80A78](v24);
  v44 = &v38[-v26];
  swift_beginAccess();
  sub_1BC0E2130(0, (unint64_t *)&unk_1EF4001D0, v6, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  sub_1BC2B49DC();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v57 = (id)sub_1BC2B4A0C();
  v27 = sub_1BC2B49C4();
  v39 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v39(v2, 1, 1, v27);
  sub_1BC0F1440(&qword_1EF3F8C70, &qword_1EF3F8B58, MEMORY[0x1E0DEA968]);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v28 = v40;
  sub_1BC2B4070();
  sub_1BC0F2444((uint64_t)v2, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v5, v46);
  (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v9, v28);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0F14C8(0);
  sub_1BC0F14F8();
  v29 = v47;
  sub_1BC2B4004();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v12, v29);
  sub_1BC0F1678();
  sub_1BC0F16E0();
  v30 = v41;
  v31 = v48;
  sub_1BC2B4094();
  (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v17, v31);
  v57 = (id)MEMORY[0x1E0DEE9D8];
  sub_1BC0F1720();
  v32 = v43;
  v33 = v50;
  sub_1BC2B3FD4();
  (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v30, v33);
  v57 = (id)sub_1BC2B4A0C();
  v39(v2, 1, 1, v27);
  sub_1BC0F1804();
  v34 = v44;
  v35 = v53;
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v2, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v32, v35);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0F1854();
  v36 = v55;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v34, v36);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC0EDBC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  v21 = a1;
  sub_1BC0F18BC(0, &qword_1EF3F8CF0, (void (*)(uint64_t))sub_1BC0F193C, sub_1BC0F14DC, (void (*)(void))sub_1BC0F19D0);
  v19 = *(_QWORD *)(v1 - 8);
  v20 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - v2;
  sub_1BC0E7998(0, &qword_1EF3F8D10, (uint64_t (*)(uint64_t))sub_1BC0F14DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  sub_1BC0F19EC(0, &qword_1EF3F8D18, MEMORY[0x1E0C964B8]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - v12;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __swift_project_boxed_opaque_existential_0((_QWORD *)(Strong + qword_1EF3F8B88), *(_QWORD *)(Strong + qword_1EF3F8B88 + 24));
    v22 = sub_1BC2B3584();
    sub_1BC0F193C();
    sub_1BC0F14DC(0);
    sub_1BC0F19D0();
    sub_1BC2B4004();
    swift_release();
    sub_1BC0F1AC4();
    v15 = v20;
    v16 = sub_1BC2B3FBC();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v3, v15);
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BC0F14DC(0);
    sub_1BC2B3F14();
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC2B3EFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1BC0F1A6C();
    v16 = sub_1BC2B3FBC();
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  *v21 = v16;
  return result;
}

uint64_t sub_1BC0EDE64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  unint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = sub_1BC2B2438();
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  MEMORY[0x1E0C80A78](v4);
  v61 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v60);
  v59 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MedicationSearchItem(0);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v64 = (uint64_t)&v48 - v10;
  sub_1BC0F1B2C();
  v56 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v54 = (unint64_t *)((char *)&v48 - v15);
  MEMORY[0x1E0C80A78](v14);
  v53 = (char *)&v48 - v16;
  v17 = *a1;
  v65 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BC125C10(0, 0, 0);
  v18 = v65;
  v19 = *(_QWORD *)(v17 + 16);
  result = swift_bridgeObjectRetain();
  v51 = v19;
  v49 = a2;
  if (v19)
  {
    v21 = 0;
    v50 = v17;
    v22 = (uint64_t *)v53;
    while (v21 < *(_QWORD *)(v17 + 16))
    {
      v23 = sub_1BC2B34A0();
      v24 = *(_QWORD *)(v23 - 8);
      v26 = (uint64_t *)v55;
      v25 = v56;
      v27 = &v55[*(int *)(v56 + 48)];
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
      v28(v27, v17+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v21, v23);
      v29 = (uint64_t)v54;
      v30 = (char *)v54 + *(int *)(v25 + 48);
      *v54 = v21;
      v31 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      v31(v30, v27, v23);
      sub_1BC0F1B94(v29, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BC0F1B2C);
      v32 = *(int *)(v25 + 48);
      v33 = (char *)v26 + v32;
      v34 = *v22;
      *v26 = *v22;
      v28((char *)v26 + v32, (unint64_t)v22 + v32, v23);
      v35 = (uint64_t)v59;
      v31(v59, v33, v23);
      swift_storeEnumTagMultiPayload();
      v36 = v58;
      v37 = (uint64_t)v52;
      v38 = (uint64_t *)&v52[*(int *)(v58 + 24)];
      v39 = v61;
      sub_1BC2B242C();
      v40 = sub_1BC2B23FC();
      v42 = v41;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v63);
      *v38 = v40;
      v38[1] = v42;
      v43 = (uint64_t *)(v37 + *(int *)(v36 + 28));
      type metadata accessor for MedicationSearchCell();
      sub_1BC0E519C(&qword_1EF3F8D38, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchCell, (uint64_t)&unk_1BC2C08A8);
      *v43 = sub_1BC2B2930();
      v43[1] = v44;
      sub_1BC0F1B94(v35, v37, type metadata accessor for MedicationSearchItem.Source);
      v45 = v64;
      *(_QWORD *)(v37 + *(int *)(v36 + 20)) = v34;
      sub_1BC0F1B94(v37, v45, type metadata accessor for MedicationSearchItem);
      sub_1BC0F1BD8((uint64_t)v22);
      v18 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125C10(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v65;
      }
      v47 = *(_QWORD *)(v18 + 16);
      v46 = *(_QWORD *)(v18 + 24);
      v17 = v50;
      if (v47 >= v46 >> 1)
      {
        sub_1BC125C10(v46 > 1, v47 + 1, 1);
        v18 = v65;
      }
      ++v21;
      *(_QWORD *)(v18 + 16) = v47 + 1;
      result = sub_1BC0F1B94(v64, v18+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v47, type metadata accessor for MedicationSearchItem);
      if (v51 == v21)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    result = swift_bridgeObjectRelease_n();
    *v49 = v18;
  }
  return result;
}

uint64_t sub_1BC0EE28C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = sub_1BC2B2438();
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x1E0C80A78](v2);
  v36 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MedicationSearchItem(0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1BC125C10(0, 0, 0);
  v8 = v41;
  if (a1 >> 62)
    goto LABEL_15;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v9)
  {
    while (1)
    {
      v10 = 0;
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
      v31 = a1 & 0xC000000000000001;
      v28 = v9;
      v29 = a1;
      v11 = v34;
      while (v31)
      {
        v12 = (id)MEMORY[0x1BCCEE950](v10, a1);
LABEL_7:
        v13 = v12;
        if (__OFADD__(v10, 1))
          goto LABEL_14;
        v39 = v10 + 1;
        sub_1BC0F223C();
        *v11 = objc_msgSend(v13, sel_specificProduct);
        v14 = objc_msgSend(v13, sel_routedDoseFormProducts);
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EF400130);
        sub_1BC2B458C();

        sub_1BC2B353C();
        swift_storeEnumTagMultiPayload();
        v40 = v8;
        v15 = v33;
        v16 = (uint64_t *)&v7[*(int *)(v33 + 24)];
        v17 = v36;
        sub_1BC2B242C();
        v18 = sub_1BC2B23FC();
        v20 = v19;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
        *v16 = v18;
        v16[1] = v20;
        v21 = (uint64_t *)&v7[*(int *)(v15 + 28)];
        type metadata accessor for MedicationSearchCell();
        sub_1BC0E519C(&qword_1EF3F8D38, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchCell, (uint64_t)&unk_1BC2C08A8);
        *v21 = sub_1BC2B2930();
        v21[1] = v22;
        sub_1BC0F1B94((uint64_t)v11, (uint64_t)v7, type metadata accessor for MedicationSearchItem.Source);

        v23 = *(int *)(v15 + 20);
        v8 = v40;
        *(_QWORD *)&v7[v23] = v10;
        v41 = v8;
        v25 = *(_QWORD *)(v8 + 16);
        v24 = *(_QWORD *)(v8 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1BC125C10(v24 > 1, v25 + 1, 1);
          v8 = v41;
        }
        *(_QWORD *)(v8 + 16) = v25 + 1;
        sub_1BC0F1B94((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, type metadata accessor for MedicationSearchItem);
        ++v10;
        a1 = v29;
        if (v39 == v28)
          goto LABEL_16;
      }
      if (v10 < *(_QWORD *)(v30 + 16))
        break;
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      v9 = sub_1BC2B52D0();
      if (!v9)
        goto LABEL_16;
    }
    v12 = *(id *)(a1 + 8 * v10 + 32);
    goto LABEL_7;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC0EE608(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char v4;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BC2B3F8C();
    swift_release();
    swift_release();
    if (v4 == 1)
    {
      if (!*(_QWORD *)(v1 + 16))
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1BC2B3F8C();
        swift_release();
        swift_release();
        sub_1BC2B44E4();
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_0((_QWORD *)(v3 + qword_1EF3F8B88), *(_QWORD *)(v3 + qword_1EF3F8B88 + 24));
        sub_1BC2B3590();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1BC2B3F98();
      *(_QWORD *)(v3 + qword_1EF3F8BD8) = sub_1BC0F79BC(v1);
      swift_bridgeObjectRelease();
      sub_1BC0EBEF8();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC0EE7C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  sub_1BC2B3128();
  v2 = sub_1BC2B3104();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
  if ((v2 & 1) != 0)
    sub_1BC0EB0B8();
  else
    sub_1BC0EB8F8();
  sub_1BC2B2BAC();
  v3 = v1 + qword_1EF4024B8;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC2B92D0;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v5 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v6 = sub_1BC2B2144();
    v8 = v7;

    swift_bridgeObjectRelease();
    type metadata accessor for MedicationOnboardingHeaderCell();
    sub_1BC0E519C(&qword_1EF3F8C58, (uint64_t (*)(uint64_t))type metadata accessor for MedicationOnboardingHeaderCell, (uint64_t)&unk_1BC2C04F8);
    v9 = sub_1BC2B2930();
    v11 = v10;
    *(_QWORD *)(v4 + 56) = &type metadata for MedicationOnboardingHeaderItem;
    *(_QWORD *)(v4 + 64) = sub_1BC0F12D8();
    v12 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v4 + 32) = v12;
    v12[2] = v6;
    v12[3] = v8;
    v12[4] = v9;
    v12[5] = v11;
    v13 = swift_bridgeObjectRetain();
    v14 = sub_1BC0F79BC(v13);
    swift_bridgeObjectRelease();
    sub_1BC130FBC(v14);
  }
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0EEABC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  sub_1BC0F18BC(0, &qword_1EF3F8DE8, (void (*)(uint64_t))sub_1BC0F20EC, sub_1BC0F14DC, (void (*)(void))sub_1BC0F2180);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - v7;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a1;
  sub_1BC0F20EC();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v13[1] = sub_1BC2B3F38();
  sub_1BC0F14DC(0);
  sub_1BC0F2180();
  sub_1BC2B4004();
  swift_release();
  sub_1BC0F21D4();
  v11 = sub_1BC2B3FBC();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v11;
  return result;
}

uint64_t sub_1BC0EEC3C(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(__int128 *, _QWORD);
  uint64_t v45;
  char *v46;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  int v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  void (*v74)(char *, uint64_t);
  id v75;
  void *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  __int128 aBlock;
  uint64_t (*v107)(uint64_t, void *, uint64_t, void *);
  void *v108;
  void (*v109)(int, void *, void *);
  uint64_t v110;
  uint64_t v111;

  v97 = a4;
  v111 = *MEMORY[0x1E0C80C00];
  v91 = sub_1BC2B2024();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v101 = (void (*)(char *, uint64_t))((char *)&v78 - v8);
  v9 = sub_1BC2B2594();
  v98 = *(_QWORD *)(v9 - 8);
  v99 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B20FC();
  v93 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v92 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v78 - v16;
  MEMORY[0x1E0C80A78](v15);
  v104 = (char *)&v78 - v18;
  v19 = sub_1BC2B23F0();
  v95 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v94 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v100 = (char *)&v78 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v96 = (char *)&v78 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v78 - v26;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a1;
  *(_QWORD *)(v28 + 24) = a2;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_retain();
  if (Strong)
  {
    v78 = v28;
    v79 = Strong;
    v80 = v19;
    v81 = v12;
    sub_1BC2B23E4();
    sub_1BC2B2564();
    sub_1BC0E7998(0, &qword_1EDA0EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v88 = v30;
    v31 = sub_1BC2B257C();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(_QWORD *)(v32 + 72);
    v34 = *(unsigned __int8 *)(v32 + 80);
    v102 = v17;
    v103 = v27;
    v35 = (v34 + 32) & ~v34;
    v87 = v35 + 3 * v33;
    v86 = v34 | 7;
    v36 = swift_allocObject();
    v85 = xmmword_1BC2B9600;
    *(_OWORD *)(v36 + 16) = xmmword_1BC2B9600;
    v84 = *MEMORY[0x1E0CB1158];
    v37 = *(void (**)(uint64_t))(v32 + 104);
    v37(v36 + v35);
    v83 = *MEMORY[0x1E0CB1160];
    v37(v36 + v35 + v33);
    v82 = *MEMORY[0x1E0CB1130];
    v37(v36 + v35 + 2 * v33);
    sub_1BC14A174(v36);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1BC2B24D4();
    swift_bridgeObjectRelease();
    v38 = v99;
    v39 = *(void (**)(char *, uint64_t))(v98 + 8);
    v39(v11, v99);
    sub_1BC2B2564();
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v85;
    v41 = v40 + v35;
    v42 = v102;
    ((void (*)(uint64_t, _QWORD, uint64_t))v37)(v41, v84, v31);
    ((void (*)(uint64_t, _QWORD, uint64_t))v37)(v41 + v33, v83, v31);
    ((void (*)(uint64_t, _QWORD, uint64_t))v37)(v41 + 2 * v33, v82, v31);
    sub_1BC14A174(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1BC2B24D4();
    swift_bridgeObjectRelease();
    v39(v11, v38);
    v44 = (void (*)(__int128 *, _QWORD))sub_1BC2B209C();
    if ((*(_BYTE *)(v43 + 8) & 1) != 0)
    {
      v44(&aBlock, 0);
      v46 = v100;
      v45 = (uint64_t)v101;
    }
    else
    {
      v46 = v100;
      v45 = (uint64_t)v101;
      if (__OFSUB__(*(_QWORD *)v43, 3))
        __break(1u);
      *(_QWORD *)v43 -= 3;
      v44(&aBlock, 0);
    }
    v48 = (void *)objc_opt_self();
    v49 = v93;
    v50 = v92;
    v51 = v81;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v92, v42, v81);
    v52 = (void *)sub_1BC2B2060();
    v101 = *(void (**)(char *, uint64_t))(v49 + 8);
    v101(v50, v51);
    v53 = (void *)sub_1BC2B2060();
    *(_QWORD *)&aBlock = 0;
    v54 = objc_msgSend(v48, sel__sortDateIntervalFromStartDateComponents_endDateComponents_error_, v52, v53, &aBlock);

    v55 = (id)aBlock;
    v56 = v80;
    if (v54)
    {
      v57 = v89;
      sub_1BC2B1FE8();

      sub_1BC2B200C();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v91);
      v58 = 0;
    }
    else
    {
      v59 = v55;
      v60 = (void *)sub_1BC2B21E0();

      swift_willThrow();
      v58 = 1;
    }
    v61 = v95;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v45, v58, 1, v56);
    v62 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v62(v46, v103, v56);
    v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v45, 1, v56);
    v64 = v96;
    v65 = v78;
    if (v63 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v96, v46, v56);
      sub_1BC0F2444(v45, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v56);
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v64, v45, v56);
    }
    v66 = v94;
    v62(v94, v64, v56);
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = sub_1BC0F22BC;
    *(_QWORD *)(v67 + 24) = v65;
    v68 = objc_allocWithZone(MEMORY[0x1E0D2C438]);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8E20);
    v69 = v97;
    swift_bridgeObjectRetain();
    v70 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v71 = (void *)sub_1BC2B2360();
    v109 = sub_1BC0F22F4;
    v110 = v67;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v107 = sub_1BC0F0264;
    v108 = &block_descriptor_49;
    v72 = _Block_copy(&aBlock);
    v73 = objc_msgSend(v68, sel_initForCHRImportWithExistingMedications_sinceDate_limit_resultsHandler_, v70, v71, 100, v72);
    _Block_release(v72);

    v74 = *(void (**)(char *, uint64_t))(v61 + 8);
    v74(v66, v56);
    swift_release();
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    v75 = v73;
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    strcpy((char *)&aBlock, "CHR import: ");
    BYTE13(aBlock) = 0;
    HIWORD(aBlock) = -5120;
    v105 = v69;
    sub_1BC0F22FC(0, &qword_1EF3F8E28, (unint64_t *)&qword_1EF3F8E20);
    swift_bridgeObjectRetain();
    sub_1BC2B44B4();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    sub_1BC0E519C(&qword_1EF401820, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1BC2B539C();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v76 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v75, sel_setDebugIdentifier_, v76);

    objc_msgSend(*(id *)(v79 + qword_1EF3F8BC8), sel_executeQuery_, v75);
    v74(v64, v56);
    v77 = v101;
    v101(v102, v51);
    v77(v104, v51);
    v74(v103, v56);
    return swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
    BYTE8(aBlock) = 0;
    return a1(&aBlock);
  }
}

void sub_1BC0EF634(int a1, void *a2, id a3, void (*a4)(id, uint64_t))
{
  id v6;
  void *v7;

  if (a3)
  {
    v6 = a3;
    a4(a3, 1);

  }
  else
  {
    if (a2)
      v7 = a2;
    else
      v7 = (void *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    a4(v7, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC0EF6B4@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC0EE28C(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC0EF708(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD v23[2];

  v23[1] = a2;
  v3 = sub_1BC2B2AE0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v23 - v8;
  v10 = sub_1BC2B2D20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NewMedicationsOnboardingDataSource();
  result = sub_1BC2B2A5C();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(result + 16) > a1)
  {
    v23[0] = v3;
    v15 = result + 16 * a1;
    v17 = *(_QWORD *)(v15 + 32);
    v16 = *(_QWORD *)(v15 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v17 == 0xD000000000000010 && v16 == 0x80000001BC2C7950 || (sub_1BC2B53CC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1BC2B2CC0();
      sub_1BC2B2CD8();
      v18 = (void *)sub_1BC2B2D14();
    }
    else
    {
      if ((v17 != 0xD00000000000001ELL || v16 != 0x80000001BC2C7970) && (sub_1BC2B53CC() & 1) == 0)
      {
        if (v17 == 0xD00000000000001ELL && v16 == 0x80000001BC2C7990
          || (sub_1BC2B53CC() & 1) != 0
          || v17 == 0xD000000000000023 && v16 == 0x80000001BC2C79B0
          || (sub_1BC2B53CC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1BC2B2AD4();
          v19 = objc_msgSend((id)objc_opt_self(), sel_fractionalHeightDimension_, 0.75);
          sub_1BC2B2A80();
          v18 = (void *)sub_1BC2B2A8C();
          (*(void (**)(char *, _QWORD))(v4 + 8))(v9, v23[0]);
        }
        else
        {
          if (v17 == 0xD00000000000001CLL && v16 == 0x80000001BC2C79E0)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v20 = sub_1BC2B53CC();
            swift_bridgeObjectRelease();
            if ((v20 & 1) == 0)
            {
              sub_1BC2B2ABC();
              sub_1BC2B2A98();
              v21 = *(void (**)(char *, uint64_t))(v4 + 8);
              v22 = v23[0];
              v21(v9, v23[0]);
              v18 = (void *)sub_1BC2B2A8C();
              v21(v7, v22);
              return (uint64_t)v18;
            }
          }
          sub_1BC2B2CC0();
          v18 = (void *)sub_1BC2B2D14();
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
          objc_msgSend(v18, sel_contentInsets);
          objc_msgSend(v18, sel_setContentInsets_, 0.0);
        }
        return (uint64_t)v18;
      }
      swift_bridgeObjectRelease();
      sub_1BC2B2C9C();
      sub_1BC2B2CD8();
      v18 = (void *)sub_1BC2B2D14();
      objc_msgSend(v18, sel_contentInsets);
      objc_msgSend(v18, sel_setContentInsets_);
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return (uint64_t)v18;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NewMedicationsOnboardingDataSource()
{
  uint64_t result;

  result = qword_1EF3F8BF8;
  if (!qword_1EF3F8BF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0EFB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  _QWORD v19[2];

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B4460() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      goto LABEL_12;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  if (LOBYTE(v19[0]) != 1)
  {
LABEL_12:
    v17 = sub_1BC2B296C();
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a3[3] = v17;
    a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v18, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1BC2B2960();
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v13 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();

  swift_bridgeObjectRelease();
  v19[0] = 0x74497265746F6F46;
  v19[1] = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v14 = sub_1BC2B2EDC();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v14;
  a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v15, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC2B2ED0();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void NewMedicationsOnboardingDataSource.__allocating_init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void NewMedicationsOnboardingDataSource.init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC0EFE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_1BC0F0430(v0 + qword_1EF3F8B80);
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF3F8B88);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  v1 = v0 + qword_1EF3F8B50;
  v2 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC0E2130(0, (unint64_t *)&unk_1EF4001D0, MEMORY[0x1E0DEA968], MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = v0 + qword_1EF3F8B60;
  sub_1BC0E2130(0, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], v2);
  v6 = v5;
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(v0 + qword_1EF3F8B70, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t NewMedicationsOnboardingDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v0 = sub_1BC2B2C60();
  sub_1BC0F0430(v0 + qword_1EF3F8B80);
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF3F8B88);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  v1 = v0 + qword_1EF3F8B50;
  v2 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC0E2130(0, (unint64_t *)&unk_1EF4001D0, MEMORY[0x1E0DEA968], MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = v0 + qword_1EF3F8B60;
  sub_1BC0E2130(0, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], v2);
  v6 = v5;
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(v0 + qword_1EF3F8B70, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NewMedicationsOnboardingDataSource.__deallocating_deinit()
{
  NewMedicationsOnboardingDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC0F01D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC0EFB50(a1, a2, a3);
}

uint64_t sub_1BC0F01F0(unint64_t a1, uint64_t a2)
{
  return sub_1BC0EF708(a1, a2);
}

uint64_t sub_1BC0F0210()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for NewMedicationsOnboardingDataSource);
  return sub_1BC2B3074();
}

uint64_t sub_1BC0F0264(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC0E1D38(0, &qword_1EF3F8E00);
    v5 = sub_1BC2B458C();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0F0304@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC0F037C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1BC0F0304(a1);
}

uint64_t sub_1BC0F03A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC0F040C()
{
  return sub_1BC0F03A0();
}

uint64_t sub_1BC0F0430(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1BC0F0454(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t i;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v42 - v4;
  v5 = sub_1BC2B42EC();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F1F20(0, &qword_1EF3F8DA8, (uint64_t (*)(uint64_t))sub_1BC0F14C8, sub_1BC0F16E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
  v8 = v7;
  v43 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - v9;
  sub_1BC0F1F90(0);
  v48 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F1FB4(0);
  v53 = v13;
  v51 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F173C(0, &qword_1EF3F8DC8, v15, sub_1BC0F1FF4, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v52 = (char *)&v42 - v19;
  v57 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v20 = result;
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v55 = v17;
  v56 = v1;
  v54 = v18;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v56;
    *(_QWORD *)(v27 + 24) = v26;
    sub_1BC0F14C8(0);
    sub_1BC0F16E0();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BC2B3F44();
    sub_1BC0F201C();
    v28 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    v57 = v28;
    v58 = MEMORY[0x1E0DEE9D8];
    v29 = v46;
    sub_1BC2B3FD4();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
    v31 = v44;
    v30 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, *MEMORY[0x1E0DEF538], v5);
    v32 = sub_1BC2B4A30();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v5);
    v57 = v32;
    v33 = sub_1BC2B49C4();
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v36 = (uint64_t)v47;
    v35(v47, 1, 1, v33);
    sub_1BC0F1FD8();
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v37 = v49;
    v38 = v50;
    sub_1BC2B407C();
    sub_1BC0F2444(v36, (unint64_t *)&qword_1EDA0FCC0, v34);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v37);
    v57 = sub_1BC2B4A0C();
    v35((char *)v36, 1, 1, v33);
    sub_1BC0F1FF4();
    v40 = v52;
    v39 = v53;
    sub_1BC2B4064();
    sub_1BC0F2444(v36, (unint64_t *)&qword_1EDA0FCC0, v34);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v39);
    swift_getKeyPath();
    v57 = v56;
    sub_1BC0F2084();
    v41 = v55;
    sub_1BC2B40AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v41);
    swift_beginAccess();
    sub_1BC2B3E84();
    swift_endAccess();
    return swift_release();
  }
  if (v20 >= 1)
  {
    v42 = v8;
    for (i = 0; i != v20; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x1BCCEE950](i, a1);
      else
        v23 = *(id *)(a1 + 8 * i + 32);
      v24 = v23;
      v25 = objc_msgSend(v23, sel_firstConceptIdentifier, v42);

      if (v25)
      {
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
      }
    }
    swift_bridgeObjectRelease();
    v26 = v57;
    v8 = v42;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t _s19HealthMedicationsUI03NewB20OnboardingDataSourceC13registerCells3forySo16UICollectionViewC_tF_0()
{
  sub_1BC2B2D5C();
  sub_1BC2B497C();
  type metadata accessor for MedicationOnboardingHeaderCell();
  sub_1BC0E519C(&qword_1EF3F8C58, (uint64_t (*)(uint64_t))type metadata accessor for MedicationOnboardingHeaderCell, (uint64_t)&unk_1BC2C04F8);
  sub_1BC2B497C();
  type metadata accessor for ShardSpinnerDownloadCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F8EB0, (uint64_t (*)(uint64_t))type metadata accessor for ShardSpinnerDownloadCell, (uint64_t)&unk_1BC2C582C);
  sub_1BC2B497C();
  sub_1BC2B2EB8();
  sub_1BC2B4994();
  type metadata accessor for ConnectivityIssueCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F8EB8, (uint64_t (*)(uint64_t))type metadata accessor for ConnectivityIssueCell, (uint64_t)&unk_1BC2C2138);
  sub_1BC2B497C();
  type metadata accessor for MedicationIconCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F8E78, (uint64_t (*)(uint64_t))type metadata accessor for MedicationIconCell, (uint64_t)&unk_1BC2C189C);
  sub_1BC2B497C();
  type metadata accessor for MedicationSearchFieldCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FABF0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchFieldCell, (uint64_t)&unk_1BC2BC0A4);
  sub_1BC2B497C();
  sub_1BC2B3038();
  sub_1BC2B497C();
  type metadata accessor for MedicationSearchCell();
  sub_1BC0E519C(&qword_1EF3F8D38, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchCell, (uint64_t)&unk_1BC2C08A8);
  sub_1BC2B497C();
  type metadata accessor for MedicationSearchOptionsFieldCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F8E90, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchOptionsFieldCell, (uint64_t)&protocol conformance descriptor for MedicationSearchOptionsFieldCell);
  sub_1BC2B497C();
  type metadata accessor for CollectionViewTextCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F8E98, (uint64_t (*)(uint64_t))type metadata accessor for CollectionViewTextCell, (uint64_t)&protocol conformance descriptor for CollectionViewTextCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC0F0CA4()
{
  return sub_1BC0E519C(&qword_1EF3F8BE0, (uint64_t (*)(uint64_t))type metadata accessor for NewMedicationsOnboardingDataSource, (uint64_t)&protocol conformance descriptor for NewMedicationsOnboardingDataSource);
}

uint64_t sub_1BC0F0CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC0E9E00(a1, a2, a3, (uint64_t)&qword_1EF3F8B50, (unint64_t *)&unk_1EF4001D0, MEMORY[0x1E0DEA968]);
}

uint64_t sub_1BC0F0CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC0E9E80(a1, a2, a3, a4, &qword_1EF3F8B58, MEMORY[0x1E0DEA968], (uint64_t)&qword_1EF3F8B50, (unint64_t *)&unk_1EF4001D0);
}

uint64_t sub_1BC0F0D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC0E9E00(a1, a2, a3, (uint64_t)&qword_1EF3F8B60, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0]);
}

uint64_t sub_1BC0F0D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC0E9E80(a1, a2, a3, a4, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], (uint64_t)&qword_1EF3F8B60, &qword_1EDA0FC20);
}

uint64_t sub_1BC0F0D90@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + qword_1EF4024B8);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

void sub_1BC0F0DE8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC0E2130(319, (unint64_t *)&unk_1EF4001D0, MEMORY[0x1E0DEA968], MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
  {
    sub_1BC0E2130(319, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96198]);
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t method lookup function for NewMedicationsOnboardingDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.searchText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 336))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.searchText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 344))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.searchText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 352))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$searchText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 360))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$searchText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 368))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$searchText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 376))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.hasNoResults.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 384))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.hasNoResults.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 392))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.hasNoResults.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 400))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$hasNoResults.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 408))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$hasNoResults.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 416))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$hasNoResults.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 424))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.chrSuggestionItems.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 528))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.chrSuggestionItems.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 536))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.chrSuggestionItems.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 544))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 680))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.supplementaryItem(ofKind:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 688))();
}

uint64_t sub_1BC0F10B4()
{
  return type metadata accessor for NewMedicationsOnboardingDataSource();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NewMedicationsOnboardingDataSource.SubtitleState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NewMedicationsOnboardingDataSource.SubtitleState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC0F11A4 + 4 * byte_1BC2B9615[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC0F11D8 + 4 * byte_1BC2B9610[v4]))();
}

uint64_t sub_1BC0F11D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC0F11E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC0F11E8);
  return result;
}

uint64_t sub_1BC0F11F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC0F11FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC0F1200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC0F1208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BC0F1218(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NewMedicationsOnboardingDataSource.SubtitleState()
{
  return &type metadata for NewMedicationsOnboardingDataSource.SubtitleState;
}

unint64_t sub_1BC0F1234()
{
  unint64_t result;

  result = qword_1EF3F8C48;
  if (!qword_1EF3F8C48)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2B98D0, &type metadata for NewMedicationsOnboardingDataSource.SubtitleState);
    atomic_store(result, (unint64_t *)&qword_1EF3F8C48);
  }
  return result;
}

void sub_1BC0F1278(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC0E7AD8(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC0F12D8()
{
  unint64_t result;

  result = qword_1EF3F8C60;
  if (!qword_1EF3F8C60)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C05E8, &type metadata for MedicationOnboardingHeaderItem);
    atomic_store(result, (unint64_t *)&qword_1EF3F8C60);
  }
  return result;
}

uint64_t sub_1BC0F131C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC0F1348()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3F8C68)
  {
    v0 = MEMORY[0x1E0DEA968];
    sub_1BC0E2130(255, &qword_1EF3F8B58, MEMORY[0x1E0DEA968], MEMORY[0x1E0C96180]);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0F1440(&qword_1EF3F8C70, &qword_1EF3F8B58, v0);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v1 = sub_1BC2B3E30();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3F8C68);
  }
}

uint64_t sub_1BC0F1440(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC0E2130(255, a2, a3, MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96190], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC0F1488(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1BC0E1D38(255, a2);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC0F14C8(uint64_t a1)
{
  sub_1BC0F19EC(a1, &qword_1EF3F8C80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

void sub_1BC0F14DC(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3F8C88, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BC0F14F8()
{
  return sub_1BC0E519C(&qword_1EF3F8C90, (uint64_t (*)(uint64_t))sub_1BC0F1348, MEMORY[0x1E0C95BB0]);
}

void sub_1BC0F1514()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8C98)
  {
    sub_1BC0F14C8(255);
    sub_1BC0F15C0();
    sub_1BC0F16E0();
    sub_1BC0E519C(&qword_1EF3F8CB8, (uint64_t (*)(uint64_t))sub_1BC0F15C0, MEMORY[0x1E0C95850]);
    v0 = sub_1BC2B3DDC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8C98);
  }
}

void sub_1BC0F15C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8CA0)
  {
    sub_1BC0F18BC(255, &qword_1EF3F8C78, (void (*)(uint64_t))sub_1BC0F1348, sub_1BC0F14C8, (void (*)(void))sub_1BC0F14F8);
    sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC0F1678();
    v0 = sub_1BC2B3DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8CA0);
  }
}

unint64_t sub_1BC0F1678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8CA8;
  if (!qword_1EF3F8CA8)
  {
    sub_1BC0F18BC(255, &qword_1EF3F8C78, (void (*)(uint64_t))sub_1BC0F1348, sub_1BC0F14C8, (void (*)(void))sub_1BC0F14F8);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8CA8);
  }
  return result;
}

uint64_t sub_1BC0F16E0()
{
  return sub_1BC0E519C(&qword_1EF3F8CB0, (uint64_t (*)(uint64_t))sub_1BC0F14C8, MEMORY[0x1E0C95D90]);
}

void sub_1BC0F16FC(uint64_t a1)
{
  sub_1BC0F1F20(a1, &qword_1EF3F8CC0, (uint64_t (*)(uint64_t))sub_1BC0F1514, sub_1BC0F1720, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
}

uint64_t sub_1BC0F1720()
{
  return sub_1BC0E519C(&qword_1EF3F8CC8, (uint64_t (*)(uint64_t))sub_1BC0F1514, MEMORY[0x1E0C95870]);
}

void sub_1BC0F173C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    v11[2] = a4();
    v11[3] = sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v9 = a5(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC0F1804()
{
  return sub_1BC0E519C(&qword_1EF3F8CD8, (uint64_t (*)(uint64_t))sub_1BC0F16FC, MEMORY[0x1E0C957E8]);
}

uint64_t sub_1BC0F1820()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC0F1844@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC0EDBC0(a1);
}

uint64_t sub_1BC0F184C(uint64_t *a1)
{
  return sub_1BC0EE608(a1);
}

unint64_t sub_1BC0F1854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8CE0;
  if (!qword_1EF3F8CE0)
  {
    sub_1BC0F173C(255, &qword_1EF3F8CD0, (uint64_t (*)(uint64_t))sub_1BC0F16FC, sub_1BC0F1804, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8CE0);
  }
  return result;
}

void sub_1BC0F18BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_1BC2B3DF4();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC0F193C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8CF8)
  {
    sub_1BC0E7998(255, &qword_1EF3F8D00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C808], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v0 = sub_1BC2B3E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8CF8);
  }
}

uint64_t sub_1BC0F19D0()
{
  return sub_1BC0E519C(&qword_1EF3F8D08, (uint64_t (*)(uint64_t))sub_1BC0F193C, MEMORY[0x1E0C95D90]);
}

void sub_1BC0F19EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC0F14DC(255);
    v7 = v6;
    v8 = sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC0F1A6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8D20;
  if (!qword_1EF3F8D20)
  {
    sub_1BC0F19EC(255, &qword_1EF3F8D18, MEMORY[0x1E0C964B8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C964C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8D20);
  }
  return result;
}

unint64_t sub_1BC0F1AC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8D28;
  if (!qword_1EF3F8D28)
  {
    sub_1BC0F18BC(255, &qword_1EF3F8CF0, (void (*)(uint64_t))sub_1BC0F193C, sub_1BC0F14DC, (void (*)(void))sub_1BC0F19D0);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8D28);
  }
  return result;
}

void sub_1BC0F1B2C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3F8D30)
  {
    sub_1BC2B34A0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3F8D30);
  }
}

uint64_t sub_1BC0F1B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC0F1BD8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0F1B2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC0F1C14()
{
  return swift_deallocObject();
}

uint64_t sub_1BC0F1C24(char a1, void *a2)
{
  return sub_1BC0ED240(a1, a2);
}

void sub_1BC0F1C2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8D50)
  {
    sub_1BC0E2130(255, &qword_1EF3F8D48, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus, MEMORY[0x1E0C96180]);
    sub_1BC0F1440(&qword_1EF3F8D58, &qword_1EF3F8D48, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus);
    v0 = sub_1BC2B3DE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8D50);
  }
}

void sub_1BC0F1CC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3F8D60)
  {
    v0 = MEMORY[0x1E0DEAFA0];
    sub_1BC0E2130(255, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
    sub_1BC0F1C2C();
    sub_1BC0F1440((unint64_t *)&qword_1EDA0FC00, &qword_1EDA0FC10, v0);
    sub_1BC0E519C(&qword_1EF3F8D68, (uint64_t (*)(uint64_t))sub_1BC0F1C2C, MEMORY[0x1E0C958E0]);
    v1 = sub_1BC2B3D7C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3F8D60);
  }
}

void sub_1BC0F1DA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8D70)
  {
    sub_1BC0F1CC4();
    sub_1BC0E1D38(255, &qword_1EDA0FE20);
    sub_1BC0E519C(&qword_1EF3F8D78, (uint64_t (*)(uint64_t))sub_1BC0F1CC4, MEMORY[0x1E0C956B8]);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FE18, &qword_1EDA0FE20, 0x1E0C99E58, MEMORY[0x1E0CB2358]);
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8D70);
  }
}

unint64_t sub_1BC0F1E80()
{
  unint64_t result;

  result = qword_1EF3F8D88;
  if (!qword_1EF3F8D88)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for NetworkStateObserver.ConnectionStatus, &type metadata for NetworkStateObserver.ConnectionStatus);
    atomic_store(result, (unint64_t *)&qword_1EF3F8D88);
  }
  return result;
}

uint64_t sub_1BC0F1EC4(char a1, char a2, unsigned __int8 *a3)
{
  return sub_1BC0ECC30(a1, a2, a3);
}

uint64_t sub_1BC0F1ECC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC0F1EF0(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, unsigned __int8 *))(v1 + 16))(*a1, a1[1], a1 + 2);
}

void sub_1BC0F1F20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_1BC0F1F90(uint64_t a1)
{
  sub_1BC0F1F20(a1, &qword_1EF3F8DB0, (uint64_t (*)(uint64_t))sub_1BC0F14C8, sub_1BC0F16E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
}

void sub_1BC0F1FB4(uint64_t a1)
{
  sub_1BC0F173C(a1, &qword_1EF3F8DB8, (uint64_t (*)(uint64_t))sub_1BC0F1F90, sub_1BC0F1FD8, MEMORY[0x1E0C95790]);
}

uint64_t sub_1BC0F1FD8()
{
  return sub_1BC0E519C(&qword_1EF3F8DC0, (uint64_t (*)(uint64_t))sub_1BC0F1F90, MEMORY[0x1E0C957E8]);
}

uint64_t sub_1BC0F1FF4()
{
  return sub_1BC0E519C(&qword_1EF3F8DD0, (uint64_t (*)(uint64_t))sub_1BC0F1FB4, MEMORY[0x1E0C957A0]);
}

uint64_t sub_1BC0F2014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0EEABC(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1BC0F201C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8DD8;
  if (!qword_1EF3F8DD8)
  {
    sub_1BC0F1F20(255, &qword_1EF3F8DA8, (uint64_t (*)(uint64_t))sub_1BC0F14C8, sub_1BC0F16E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96148], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8DD8);
  }
  return result;
}

unint64_t sub_1BC0F2084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8DE0;
  if (!qword_1EF3F8DE0)
  {
    sub_1BC0F173C(255, &qword_1EF3F8DC8, (uint64_t (*)(uint64_t))sub_1BC0F1FB4, sub_1BC0F1FF4, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8DE0);
  }
  return result;
}

void sub_1BC0F20EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8DF0)
  {
    sub_1BC0F22FC(255, &qword_1EF3F8DF8, &qword_1EF3F8E00);
    sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v0 = sub_1BC2B3F2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8DF0);
  }
}

uint64_t sub_1BC0F2180()
{
  return sub_1BC0E519C(&qword_1EF3F8E08, (uint64_t (*)(uint64_t))sub_1BC0F20EC, MEMORY[0x1E0C96108]);
}

uint64_t objectdestroy_33Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC0F21CC(uint64_t (*a1)(__int128 *), uint64_t a2)
{
  uint64_t v2;

  return sub_1BC0EEC3C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1BC0F21D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8E10;
  if (!qword_1EF3F8E10)
  {
    sub_1BC0F18BC(255, &qword_1EF3F8DE8, (void (*)(uint64_t))sub_1BC0F20EC, sub_1BC0F14DC, (void (*)(void))sub_1BC0F2180);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E10);
  }
  return result;
}

void sub_1BC0F223C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3F8E18)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EF400130);
    sub_1BC2B3530();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3F8E18);
  }
}

uint64_t sub_1BC0F22BC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

void sub_1BC0F22F4(int a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_1BC0EF634(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

void sub_1BC0F22FC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC0E1D38(255, a3);
    v4 = sub_1BC2B4610();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC0F2350()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3F8E38)
  {
    v0 = MEMORY[0x1E0DEAFA0];
    sub_1BC0E2130(255, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
    sub_1BC0F1440((unint64_t *)&qword_1EDA0FC00, &qword_1EDA0FC10, v0);
    v1 = sub_1BC2B3E18();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3F8E38);
  }
}

void sub_1BC0F23E8(uint64_t a1)
{
  sub_1BC0F1F20(a1, &qword_1EF3F8E40, (uint64_t (*)(uint64_t))sub_1BC0F2350, sub_1BC0F240C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C958D0]);
}

uint64_t sub_1BC0F240C()
{
  return sub_1BC0E519C(&qword_1EF3F8E48, (uint64_t (*)(uint64_t))sub_1BC0F2350, MEMORY[0x1E0C95AD0]);
}

uint64_t sub_1BC0F2428()
{
  return sub_1BC0E519C(&qword_1EF3F8E58, (uint64_t (*)(uint64_t))sub_1BC0F23E8, MEMORY[0x1E0C958E0]);
}

uint64_t sub_1BC0F2444(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC0E7998(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BC0F2488()
{
  return sub_1BC0EC5EC();
}

unint64_t sub_1BC0F2490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8E60;
  if (!qword_1EF3F8E60)
  {
    sub_1BC0F173C(255, &qword_1EF3F8E50, (uint64_t (*)(uint64_t))sub_1BC0F23E8, sub_1BC0F2428, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95A10]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95A20], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E60);
  }
  return result;
}

unint64_t sub_1BC0F24F8()
{
  unint64_t result;

  result = qword_1EF3F8E70;
  if (!qword_1EF3F8E70)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationIconItem, &type metadata for MedicationIconItem);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E70);
  }
  return result;
}

uint64_t sub_1BC0F253C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC0F2570()
{
  return sub_1BC0EBE78();
}

unint64_t sub_1BC0F2578()
{
  unint64_t result;

  result = qword_1EF3F8E88;
  if (!qword_1EF3F8E88)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationSearchFieldItem, &type metadata for MedicationSearchFieldItem);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E88);
  }
  return result;
}

uint64_t sub_1BC0F25BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC0F25F8()
{
  return sub_1BC0EB798();
}

uint64_t sub_1BC0F2600(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1BC0F2610(uint64_t a1, void *a2)
{
  return sub_1BC0EB818(a1, a2);
}

unint64_t sub_1BC0F2618()
{
  unint64_t result;

  result = qword_1EF3F8EA0;
  if (!qword_1EF3F8EA0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for CollectionViewTextItem, &type metadata for CollectionViewTextItem);
    atomic_store(result, (unint64_t *)&qword_1EF3F8EA0);
  }
  return result;
}

uint64_t sub_1BC0F265C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC0F2690(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

unint64_t sub_1BC0F26A0()
{
  unint64_t result;

  result = qword_1EF3F8EA8;
  if (!qword_1EF3F8EA8)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationSearchOptionsFieldItem, &type metadata for MedicationSearchOptionsFieldItem);
    atomic_store(result, (unint64_t *)&qword_1EF3F8EA8);
  }
  return result;
}

uint64_t sub_1BC0F26E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC0F2730(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1BC0F2748()
{
  unint64_t result;

  result = qword_1EDA0FC40;
  if (!qword_1EDA0FC40)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDA0FC40);
  }
  return result;
}

uint64_t sub_1BC0F278C()
{
  return sub_1BC0EB010();
}

unint64_t sub_1BC0F27A4()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  type metadata accessor for MedicationLogDetailsTimePickerItem();
  sub_1BC236B0C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t sub_1BC0F2860()
{
  sub_1BC2B5450();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC0F2904()
{
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0F298C()
{
  sub_1BC2B5450();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC0F2A30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1BC0F2A68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView);
  }
  else
  {
    type metadata accessor for MedicationLogDetailsTimePickerView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC0F2AEC()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD v38[5];

  v1 = v0;
  v2 = (_QWORD *)sub_1BC2B39E0();
  v35 = *(v2 - 1);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B23F0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, qword_1EF3F8F38, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - v10;
  v12 = type metadata accessor for MedicationLogDetailsTimePickerItem();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v16, (uint64_t)v38);
  if (v38[3])
  {
    sub_1BC0E1B94();
    v17 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, v17 ^ 1u, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_1BC0F3DC4((uint64_t)v11, (uint64_t)v15);
      v18 = (char *)sub_1BC0F2A68();
      v19 = OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView_viewModel;
      *(_QWORD *)&v18[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView_viewModel] = *(_QWORD *)&v15[*(int *)(v12 + 20)];
      swift_retain_n();
      swift_release();
      v20 = *(_QWORD *)&v18[v19];
      if (v20)
      {
        swift_retain();
        v36 = sub_1BC0F3638();
        v21 = v20 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
        v22 = (void *)sub_1BC2B2360();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v23 = v36;
        objc_msgSend(v36, sel_setDate_, v22);

        swift_release();
      }
      else
      {

      }
      swift_release();
      v32 = (char *)sub_1BC0F2A68();
      v33 = &v15[*(int *)(v12 + 24)];
      MEMORY[0x1BCCEF478](v33);
      *(_QWORD *)&v32[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView_detailsDelegate + 8] = *((_QWORD *)v33 + 1);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      return sub_1BC0F3E08((uint64_t)v15);
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v38, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1BC0E1CFC((uint64_t)v11, qword_1EF3F8F38, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem);
  sub_1BC2B39A4();
  v24 = v1;
  v25 = sub_1BC2B39D4();
  v26 = sub_1BC2B48C8();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v37 = v28;
    *(_DWORD *)v27 = 136315138;
    sub_1BC0E5774(v16, (uint64_t)v38);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v29 = sub_1BC2B4490();
    v38[0] = sub_1BC12540C(v29, v30, &v37);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v25, v26, "Incorrect view model for MedicationLogDetailsTimePickerItem: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v28, -1, -1);
    MEMORY[0x1BCCEF3A0](v27, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, id))(v35 + 8))(v4, v36);
}

id sub_1BC0F2F88(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  id v46;
  uint64_t v49[5];
  objc_super v50;

  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v49[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView] = 0;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item];
  v14 = (objc_class *)type metadata accessor for MedicationLogDetailsTimePickerCell();
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v50.receiver = v4;
  v50.super_class = v14;
  v15 = objc_msgSendSuper2(&v50, sel_initWithFrame_, a1, a2, a3, a4);
  v49[3] = v9;
  v49[4] = MEMORY[0x1E0DC2398];
  __swift_allocate_boxed_opaque_existential_1(v49);
  v16 = v15;
  sub_1BC2B3C80();
  MEMORY[0x1BCCEE224](v49);
  v17 = objc_msgSend(v16, sel_contentView);
  v18 = sub_1BC0F2A68();
  objc_msgSend(v17, sel_addSubview_, v18);

  v19 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v20 = objc_msgSend(v16, sel_contentView);
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v16, sel_topAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  objc_msgSend(v23, sel_setActive_, 1);
  v24 = objc_msgSend(v16, sel_contentView);
  v25 = objc_msgSend(v24, sel_leadingAnchor);

  v26 = objc_msgSend(v16, sel_leadingAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  objc_msgSend(v27, sel_setActive_, 1);
  v28 = objc_msgSend(v16, sel_contentView);
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v16, sel_trailingAnchor);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  objc_msgSend(v31, sel_setActive_, 1);
  v32 = objc_msgSend(v16, sel_contentView);
  v33 = objc_msgSend(v32, sel_bottomAnchor);

  v34 = objc_msgSend(v16, sel_bottomAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  objc_msgSend(v35, sel_setActive_, 1);
  v36 = sub_1BC0F2A68();
  objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v45 = sub_1BC0F2A68();
  v46 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v45, sel_hk_alignConstraintsWithView_insets_, v46, v38, v40, v42, v44);

  return v16;
}

id sub_1BC0F347C()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationLogDetailsTimePickerCell);
}

uint64_t type metadata accessor for MedicationLogDetailsTimePickerCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC0F34F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC0F3544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC0F2AEC();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC0F35C0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC0F3608;
}

uint64_t sub_1BC0F3608(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC0F2AEC();
  return result;
}

id sub_1BC0F3638()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView____lazy_storage___logTimePicker;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView____lazy_storage___logTimePicker);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView____lazy_storage___logTimePicker);
  }
  else
  {
    v4 = sub_1BC0F3698(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC0F3698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v9;

  v2 = sub_1BC2B23F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC36F0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setPreferredDatePickerStyle_, 1);
  objc_msgSend(v6, sel_setDatePickerMode_, 0);
  sub_1BC2B23E4();
  v7 = (void *)sub_1BC2B2360();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_setMaximumDate_, v7);

  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, a1, sel_logTimeChanged_, 4096);
  return v6;
}

void sub_1BC0F3898()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v2 + 32) = sub_1BC0F3638();
  sub_1BC2B45A4();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0F3E98();
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 0.0);
  objc_msgSend(v1, sel_addSubview_, v5);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = objc_msgSend(v5, sel_topAnchor);
  v7 = objc_msgSend(v1, sel_topAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  objc_msgSend(v8, sel_setActive_, 1);
  v9 = objc_msgSend(v5, sel_leadingAnchor);
  v10 = objc_msgSend(v1, sel_leadingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  objc_msgSend(v11, sel_setActive_, 1);
  v12 = objc_msgSend(v5, sel_trailingAnchor);
  v13 = objc_msgSend(v1, sel_trailingAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  objc_msgSend(v14, sel_setActive_, 1);
  v15 = objc_msgSend(v5, sel_bottomAnchor);
  v16 = objc_msgSend(v1, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  objc_msgSend(v17, sel_setActive_, 1);
}

id sub_1BC0F3CE4()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationLogDetailsTimePickerView);
}

id sub_1BC0F3CF0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationLogDetailsTimePickerView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationLogDetailsTimePickerItem()
{
  uint64_t result;

  result = qword_1EF3F8F98;
  if (!qword_1EF3F8F98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0F3DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationLogDetailsTimePickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC0F3E08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationLogDetailsTimePickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC0F3E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC0F3E98()
{
  unint64_t result;

  result = qword_1EDA0FDD0;
  if (!qword_1EDA0FDD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FDD0);
  }
  return result;
}

uint64_t *sub_1BC0F3ED4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    swift_retain();
    swift_unknownObjectWeakCopyInit();
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    v11 = a3[7];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC0F3F9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0F3FFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC0F4098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  v7 = a2 + a3[6];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign() + 8) = *(_QWORD *)(v7 + 8);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC0F414C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1BC0F41CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v7 = a2 + a3[6];
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_QWORD *)(v7 + 8);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC0F4268()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC0F4274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC0F42F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC0F42FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC0F4374()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC0F43FC()
{
  return sub_1BC0E519C(&qword_1EF3F8FD8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem, (uint64_t)&unk_1BC2B9A38);
}

void sub_1BC0F4428()
{
  off_1EF3F8FF0 = &unk_1E74AF9C0;
}

uint64_t static SpecificationStep.manualEntrySteps.getter()
{
  if (qword_1EF3F8088 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void SpecificationStep.headerImage.getter()
{
  __asm { BR              X11 }
}

id sub_1BC0F44B8()
{
  id v0;
  void *v1;
  id v2;

  if (qword_1EDA0FF20 != -1)
    swift_once();
  v0 = (id)qword_1EDA0FF10;
  v1 = (void *)sub_1BC2B4430();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  return v2;
}

void SpecificationStep.title.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BC0F485C()
{
  id v0;
  uint64_t v1;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v0 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v1 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t SpecificationStep.isSkipable.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD))((char *)nullsub_2 + 4 * byte_1BC2B9AD6[*v0 >> 5]))(0);
}

uint64_t sub_1BC0F4C7C@<X0>(char a1@<W8>)
{
  return a1 & 1;
}

BOOL sub_1BC0F4C84@<W0>(int a1@<W8>)
{
  return a1 != 96;
}

BOOL sub_1BC0F4C90@<W0>(int a1@<W8>)
{
  return a1 != 128;
}

uint64_t SpecificationStep.analyticsStep.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, _QWORD))((char *)sub_1BC0F4CC4 + 4 * byte_1BC2B9ADC[*v0 >> 5]))(10, 0);
}

uint64_t sub_1BC0F4CC4()
{
  return 5;
}

uint64_t sub_1BC0F4CD0()
{
  return 12;
}

uint64_t sub_1BC0F4CDC@<X0>(int a1@<W8>)
{
  if (a1 == 64)
    return 0;
  else
    return 13;
}

uint64_t sub_1BC0F4CF0@<X0>(int a1@<W8>)
{
  if (a1 == 96)
    return 6;
  else
    return 7;
}

uint64_t sub_1BC0F4D04@<X0>(int a1@<W8>)
{
  if (a1 == 128)
    return 8;
  else
    return 9;
}

uint64_t static SpecificationStep.< infix(_:_:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)())((char *)sub_1BC0F4D40 + 4 * byte_1BC2B9AE2[*a1 >> 5]))();
}

uint64_t sub_1BC0F4D40()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BC0F4D98 + 4 * byte_1BC2B9AE8[v0 >> 5]))();
}

BOOL sub_1BC0F4D98@<W0>(unint64_t a1@<X8>)
{
  return a1 < 3;
}

uint64_t sub_1BC0F4DE4(unsigned __int8 *a1)
{
  return ((uint64_t (*)())((char *)sub_1BC0F4E0C + 4 * byte_1BC2B9AEE[*a1 >> 5]))();
}

uint64_t sub_1BC0F4E0C()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BC0F4E64 + 4 * byte_1BC2B9AF4[v0 >> 5]))();
}

BOOL sub_1BC0F4E64@<W0>(unint64_t a1@<X8>)
{
  return a1 < 3;
}

uint64_t sub_1BC0F4EA8(uint64_t a1, unsigned __int8 *a2)
{
  return ((uint64_t (*)())((char *)sub_1BC0F4ED0 + 4 * byte_1BC2B9AFA[*a2 >> 5]))();
}

uint64_t sub_1BC0F4ED0()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BC0F4F28 + 4 * byte_1BC2B9B00[v0 >> 5]))();
}

BOOL sub_1BC0F4F28@<W0>(unint64_t a1@<X8>)
{
  return a1 >= 3;
}

uint64_t sub_1BC0F4F6C(unsigned __int8 *a1)
{
  return ((uint64_t (*)())((char *)sub_1BC0F4F94 + 4 * byte_1BC2B9B06[*a1 >> 5]))();
}

uint64_t sub_1BC0F4F94()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BC0F4FEC + 4 * byte_1BC2B9B0C[v0 >> 5]))();
}

BOOL sub_1BC0F4FEC@<W0>(unint64_t a1@<X8>)
{
  return a1 >= 3;
}

uint64_t sub_1BC0F5030(uint64_t a1, unsigned __int8 *a2)
{
  return ((uint64_t (*)())((char *)sub_1BC0F5058 + 4 * byte_1BC2B9B12[*a2 >> 5]))();
}

uint64_t sub_1BC0F5058()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BC0F50B0 + 4 * byte_1BC2B9B18[v0 >> 5]))();
}

BOOL sub_1BC0F50B0@<W0>(unint64_t a1@<X8>)
{
  return a1 < 3;
}

uint64_t _s19HealthMedicationsUI17SpecificationStepO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BC0F5118 + 4 * byte_1BC2B9B1E[*a1 >> 5]))();
}

uint64_t sub_1BC0F5118@<X0>(unsigned int a1@<W8>)
{
  char v1;

  if (a1 < 0x20)
    return (((v1 & 1) == 0) ^ a1) & 1;
  else
    return 0;
}

char *_s19HealthMedicationsUI17SpecificationStepO10finalSteps16shouldDisplayDDI17skipVisualizationSayACGSb_SbtFZ_0(char a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  sub_1BC0F54F0();
  v4 = swift_allocObject();
  v5 = (char *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_1BC2B9600;
  *(_WORD *)(v4 + 32) = 24928;
  *(_BYTE *)(v4 + 34) = 0x80;
  if ((a2 & 1) != 0)
  {
    v6 = 2;
    *(_QWORD *)(v4 + 16) = 2;
    v7 = 3;
  }
  else
  {
    v7 = 4;
    v5 = sub_1BC0FA174((char *)1, 4, 1, (char *)v4);
    v6 = 3;
  }
  *((_QWORD *)v5 + 2) = v7;
  v5[v6 + 32] = -127;
  if ((a1 & 1) != 0)
  {
    v8 = *((_QWORD *)v5 + 3);
    v9 = v6 + 2;
    if (v6 + 2 > v8 >> 1)
      v5 = sub_1BC0FA174((char *)(v8 > 1), v6 + 2, 1, v5);
    *((_QWORD *)v5 + 2) = v9;
    v5[v7 + 32] = -96;
  }
  return v5;
}

unint64_t sub_1BC0F5294()
{
  unint64_t result;

  result = qword_1EF3F8FF8;
  if (!qword_1EF3F8FF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3F8FF8);
  }
  return result;
}

unint64_t sub_1BC0F52D4()
{
  unint64_t result;

  result = qword_1EF3F9000;
  if (!qword_1EF3F9000)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for SpecificationStep, &type metadata for SpecificationStep);
    atomic_store(result, (unint64_t *)&qword_1EF3F9000);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SpecificationStep(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7B)
    goto LABEL_17;
  if (a2 + 133 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 133) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 133;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 133;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 133;
  }
LABEL_17:
  v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for SpecificationStep(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 133 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 133) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7B)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7A)
    return ((uint64_t (*)(void))((char *)&loc_1BC0F5404 + 4 * byte_1BC2B9B29[v4]))();
  *a1 = a2 - 123;
  return ((uint64_t (*)(void))((char *)sub_1BC0F5438 + 4 * byte_1BC2B9B24[v4]))();
}

uint64_t sub_1BC0F5438(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC0F5440(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC0F5448);
  return result;
}

uint64_t sub_1BC0F5460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC0F5468);
  *(_BYTE *)result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1BC0F546C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC0F5474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC0F5480(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 <= 0x3F)
    return v1 >> 5;
  else
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
}

_BYTE *sub_1BC0F549C(_BYTE *result)
{
  *result &= 0x1Fu;
  return result;
}

_BYTE *sub_1BC0F54AC(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | (32 * a2);
  else
    *result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  return result;
}

ValueMetadata *type metadata accessor for SpecificationStep()
{
  return &type metadata for SpecificationStep;
}

void sub_1BC0F54F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9008)
  {
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9008);
  }
}

id sub_1BC0F5544()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C418]), sel_initWithHealthStore_, *(_QWORD *)(v0 + 16));
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id *sub_1BC0F55B4()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(id **)(v0 + 32);
  }
  else
  {
    v2 = v0;
    v3 = (void *)*MEMORY[0x1E0CB56F8];
    v4 = *(void **)(v0 + 16);
    sub_1BC2B3278();
    v5 = v3;
    v6 = v4;
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v7 = (void *)sub_1BC2B314C();
    type metadata accessor for OntologyShardStateObserver();
    swift_allocObject();
    v1 = OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(v5, v6, v7);
    *(_QWORD *)(v2 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1BC0F56D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC0F59D8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC0F56FC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_1BC2B39A4();
  v9 = v8;
  v10 = v8;
  v11 = sub_1BC2B39D4();
  v12 = sub_1BC2B48C8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v24 = v5;
    v14 = v13;
    v15 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v27 = v16;
    *(_DWORD *)v14 = 136315394;
    v25 = a2;
    v17 = sub_1BC2B54F8();
    v26 = sub_1BC12540C(v17, v18, &v27);
    v23 = v4;
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2112;
    v19 = v8;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    v26 = v20;
    sub_1BC2B4FD0();
    *v15 = v20;

    _os_log_impl(&dword_1BC0DC000, v11, v12, "%s Lifestyle factor error: %@", (uint8_t *)v14, 0x16u);
    sub_1BC0F66B0();
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v16, -1, -1);
    MEMORY[0x1BCCEF3A0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v27 = MEMORY[0x1E0DEE9E8];
  sub_1BC0F6468();
  return sub_1BC2B3F14();
}

uint64_t sub_1BC0F597C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationsInteractionEngine()
{
  return objc_opt_self();
}

uint64_t sub_1BC0F59D8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;

  result = MEMORY[0x1E0DEE9E8];
  v7 = MEMORY[0x1E0DEE9E8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v5 = *(_QWORD *)(a1 + 8 * i + 32);
      sub_1BC213C0C(&v6, objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, v5));

    }
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

_QWORD *sub_1BC0F5A80(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *result;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;

  v36 = a2;
  v43 = *v2;
  sub_1BC0F5FE4();
  v5 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  v40 = v5;
  MEMORY[0x1E0C80A78](v4);
  v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F60B8();
  v8 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  v45 = v8;
  MEMORY[0x1E0C80A78](v7);
  v38 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F6328();
  v46 = v10;
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F63D4();
  v49 = v12;
  v51 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F6530();
  v50 = v14;
  v53 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v2;
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = a1;
  v16 = a1;
  v17 = (void *)sub_1BC2B3158();
  sub_1BC0E7998(0, &qword_1EF3F90A0, (uint64_t (*)(uint64_t))sub_1BC0F605C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC0F605C();
  v35 = v18;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B9600;
  sub_1BC0E1D38(0, &qword_1EF3F90A8);
  sub_1BC2B494C();
  sub_1BC2B4940();
  swift_bridgeObjectRelease();
  v19 = v17;
  sub_1BC2B4964();
  sub_1BC2B4940();
  swift_bridgeObjectRelease();

  v20 = v19;
  sub_1BC2B4958();
  sub_1BC2B4940();
  swift_bridgeObjectRelease();

  sub_1BC0E519C(&qword_1EF3F9020, (uint64_t (*)(uint64_t))sub_1BC0F605C, MEMORY[0x1E0D2C100]);
  v21 = v37;
  sub_1BC2B3E54();
  sub_1BC0E519C(&qword_1EF3F9058, (uint64_t (*)(uint64_t))sub_1BC0F5FE4, MEMORY[0x1E0C95C80]);
  v23 = v38;
  v22 = v39;
  sub_1BC2B4058();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v22);
  v24 = swift_allocObject();
  v25 = v43;
  *(_QWORD *)(v24 + 16) = v36;
  *(_QWORD *)(v24 + 24) = v25;
  sub_1BC0E7998(0, &qword_1EF3F9068, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionLifestyleFactor, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC0E519C(&qword_1EF3F9070, (uint64_t (*)(uint64_t))sub_1BC0F60B8, MEMORY[0x1E0C95788]);
  swift_retain();
  v26 = v41;
  v27 = v44;
  sub_1BC2B3FC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v27);
  sub_1BC0F6468();
  v28 = v42;
  v29 = v46;
  sub_1BC2B3D94();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v29);
  *(_QWORD *)(swift_allocObject() + 16) = v25;
  sub_1BC0E7998(0, &qword_1EF3F9088, (uint64_t (*)(uint64_t))sub_1BC0F6468, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  sub_1BC0E519C(&qword_1EF3F9090, (uint64_t (*)(uint64_t))sub_1BC0F63D4, MEMORY[0x1E0C95708]);
  sub_1BC0F65EC();
  v30 = v47;
  v31 = v49;
  sub_1BC2B401C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v31);
  sub_1BC0E519C(&qword_1EF3F90B0, (uint64_t (*)(uint64_t))sub_1BC0F6530, MEMORY[0x1E0C959F8]);
  v32 = v50;
  v33 = sub_1BC2B3FBC();

  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v32);
  result = v52;
  v52[5] = v33;
  return result;
}

void sub_1BC0F5FE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9010)
  {
    sub_1BC0F605C();
    sub_1BC0E519C(&qword_1EF3F9020, (uint64_t (*)(uint64_t))sub_1BC0F605C, MEMORY[0x1E0D2C100]);
    v0 = sub_1BC2B3E48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9010);
  }
}

void sub_1BC0F605C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9018)
  {
    v0 = sub_1BC2B4934();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9018);
  }
}

void sub_1BC0F60B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9028)
  {
    sub_1BC0F6180();
    sub_1BC0F5FE4();
    sub_1BC0E519C(&qword_1EF3F9050, (uint64_t (*)(uint64_t))sub_1BC0F6180, MEMORY[0x1E0C95C10]);
    sub_1BC0E519C(&qword_1EF3F9058, (uint64_t (*)(uint64_t))sub_1BC0F5FE4, MEMORY[0x1E0C95C80]);
    v0 = sub_1BC2B3DB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9028);
  }
}

void sub_1BC0F6180()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9030)
  {
    sub_1BC0E7998(255, &qword_1EF3F9038, (uint64_t (*)(uint64_t))sub_1BC0F6220, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC0F6274();
    sub_1BC0F62C8();
    v0 = sub_1BC2B3E3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9030);
  }
}

void sub_1BC0F6220()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9040)
  {
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9040);
  }
}

unint64_t sub_1BC0F6274()
{
  unint64_t result;

  result = qword_1EDA0FEA0;
  if (!qword_1EDA0FEA0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FEA0);
  }
  return result;
}

unint64_t sub_1BC0F62C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9048;
  if (!qword_1EF3F9048)
  {
    sub_1BC0E7998(255, &qword_1EF3F9038, (uint64_t (*)(uint64_t))sub_1BC0F6220, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9048);
  }
  return result;
}

void sub_1BC0F6328()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9060)
  {
    sub_1BC0F60B8();
    sub_1BC0E7998(255, &qword_1EF3F9068, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionLifestyleFactor, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC0E519C(&qword_1EF3F9070, (uint64_t (*)(uint64_t))sub_1BC0F60B8, MEMORY[0x1E0C95788]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9060);
  }
}

void sub_1BC0F63D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9078)
  {
    sub_1BC0F60B8();
    sub_1BC0F6468();
    sub_1BC0E519C(&qword_1EF3F9070, (uint64_t (*)(uint64_t))sub_1BC0F60B8, MEMORY[0x1E0C95788]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9078);
  }
}

void sub_1BC0F6468()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FC90)
  {
    sub_1BC0E1D38(255, &qword_1EDA0FDE8);
    sub_1BC0F64D8();
    v0 = sub_1BC2B47F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FC90);
  }
}

unint64_t sub_1BC0F64D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FDF0;
  if (!qword_1EDA0FDF0)
  {
    v1 = sub_1BC0E1D38(255, &qword_1EDA0FDE8);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FDF0);
  }
  return result;
}

void sub_1BC0F6530()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9080)
  {
    sub_1BC0F63D4();
    sub_1BC0E7998(255, &qword_1EF3F9088, (uint64_t (*)(uint64_t))sub_1BC0F6468, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    sub_1BC0E519C(&qword_1EF3F9090, (uint64_t (*)(uint64_t))sub_1BC0F63D4, MEMORY[0x1E0C95708]);
    sub_1BC0F65EC();
    v0 = sub_1BC2B3E00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9080);
  }
}

unint64_t sub_1BC0F65EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9098;
  if (!qword_1EF3F9098)
  {
    sub_1BC0E7998(255, &qword_1EF3F9088, (uint64_t (*)(uint64_t))sub_1BC0F6468, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9098);
  }
  return result;
}

uint64_t sub_1BC0F664C()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1BC0F6670@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_1BC0F6714();
  *a1 = result;
  return result;
}

uint64_t sub_1BC0F6698()
{
  return swift_deallocObject();
}

uint64_t sub_1BC0F66A8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC0F56FC(a1, a2);
}

void sub_1BC0F66B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F90B8)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EF3FBD20);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F90B8);
  }
}

_QWORD *sub_1BC0F6714()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  if ((sub_1BC2B31A0() & 1) == 0)
  {
    v0 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((sub_1BC2B31DC() & 1) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v0 = sub_1BC0FA2A8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v2 = v0[2];
  v1 = v0[3];
  if (v2 >= v1 >> 1)
    v0 = sub_1BC0FA2A8((_QWORD *)(v1 > 1), v2 + 1, 1, v0);
  v0[2] = v2 + 1;
  v0[v2 + 4] = 1;
  if ((sub_1BC2B31DC() & 1) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v0 = sub_1BC0FA2A8(0, v0[2] + 1, 1, v0);
    v4 = v0[2];
    v3 = v0[3];
    if (v4 >= v3 >> 1)
      v0 = sub_1BC0FA2A8((_QWORD *)(v3 > 1), v4 + 1, 1, v0);
    v0[2] = v4 + 1;
    v0[v4 + 4] = 2;
  }
LABEL_12:
  if ((sub_1BC2B31B8() & 1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v0 = sub_1BC0FA2A8(0, v0[2] + 1, 1, v0);
    v6 = v0[2];
    v5 = v0[3];
    if (v6 >= v5 >> 1)
      v0 = sub_1BC0FA2A8((_QWORD *)(v5 > 1), v6 + 1, 1, v0);
    v0[2] = v6 + 1;
    v0[v6 + 4] = 3;
  }
  return v0;
}

uint64_t sub_1BC0F689C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC0F68C8()
{
  sub_1BC0F791C();
  return sub_1BC2B4478();
}

id sub_1BC0F68F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v27;

  v1 = v0;
  v2 = sub_1BC2B4EC8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell____lazy_storage___closeButton;
  v10 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell____lazy_storage___closeButton];
  if (v10)
  {
    v11 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell____lazy_storage___closeButton];
  }
  else
  {
    sub_1BC0E1D38(0, &qword_1EF3F90D8);
    *(_QWORD *)(swift_allocObject() + 16) = v0;
    v12 = v0;
    v13 = (void *)sub_1BC2B4DA8();
    sub_1BC2B4E8C();
    v14 = (void *)sub_1BC2B4430();
    v15 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v14);

    sub_1BC2B4E80();
    v16 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    v17 = (void *)objc_opt_self();
    v18 = objc_msgSend(v17, sel_configurationWithFont_scale_, v16, 3);

    v19 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    v20 = objc_msgSend(v17, sel_configurationWithHierarchicalColor_, v19);

    v21 = objc_msgSend(v18, sel_configurationByApplyingConfiguration_, v20);
    sub_1BC2B4DB4();
    sub_1BC0E1D38(0, &qword_1EDA0FE08);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v22 = v13;
    v23 = (void *)sub_1BC2B4ED4();
    objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    v24 = *(void **)&v1[v9];
    *(_QWORD *)&v1[v9] = v23;
    v11 = v23;

    v10 = 0;
  }
  v25 = v10;
  return v11;
}

uint64_t sub_1BC0F6BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(uint64_t);
  _BYTE v6[24];
  uint64_t v7;

  v2 = a2 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v2, (uint64_t)v6);
  if (!v7)
    return sub_1BC0F7954((uint64_t)v6);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRelease();
    v5(v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC0F6CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(uint64_t *, _QWORD);
  uint64_t *v9;
  id v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;

  v3 = sub_1BC2B3CD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v7);
  swift_endAccess();
  sub_1BC0E5774(v7, (uint64_t)v21);
  if (v22)
  {
    sub_1BC0E1B94();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = v17;
      v14 = v20;
      v15 = v19;
      sub_1BC2B3C5C();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
      sub_1BC2B4C64();
      v8 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
      sub_1BC2B3BA8();
      v8(&v16, 0);
      swift_bridgeObjectRetain();
      sub_1BC2B3C98();
      v18 = v3;
      v19 = MEMORY[0x1E0DC2398];
      v9 = __swift_allocate_boxed_opaque_existential_1(&v16);
      (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
      MEMORY[0x1BCCEE224](&v16);
      sub_1BC0F7148();
      v10 = sub_1BC0F68F8();
      objc_msgSend(v10, sel_setHidden_, (v13 & 1) == 0);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v21);
  }
  return sub_1BC0F7954(a1);
}

void (*sub_1BC0F6ECC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = malloc(0xE8uLL);
  *a1 = v3;
  v3[24] = v1;
  v4 = sub_1BC2B3CD4();
  v3[25] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[26] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  v7 = OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  v3[27] = v6;
  v3[28] = v7;
  swift_beginAccess();
  return sub_1BC0F6F54;
}

void sub_1BC0F6F54(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD);
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  id v9;
  uint64_t v10;
  char v11;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1BC0E5774(*(_QWORD *)(v3 + 192) + *(_QWORD *)(v3 + 224), v3 + 56);
    if (*(_QWORD *)(v3 + 80))
    {
      sub_1BC0E1B94();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = *(_QWORD *)(v3 + 216);
        v5 = *(_QWORD *)(v3 + 200);
        v10 = *(_QWORD *)(v3 + 208);
        v11 = *(_BYTE *)(v3 + 16);
        sub_1BC2B3C5C();
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
        sub_1BC2B4C64();
        v6 = (void (*)(uint64_t, _QWORD))sub_1BC2B3BE4();
        sub_1BC2B3BA8();
        v6(v3 + 136, 0);
        swift_bridgeObjectRetain();
        sub_1BC2B3C98();
        v7 = MEMORY[0x1E0DC2398];
        *(_QWORD *)(v3 + 120) = v5;
        *(_QWORD *)(v3 + 128) = v7;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 96));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v4, v5);
        MEMORY[0x1BCCEE224](v3 + 96);
        sub_1BC0F7148();
        v9 = sub_1BC0F68F8();
        objc_msgSend(v9, sel_setHidden_, (v11 & 1) == 0);

        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
      }
    }
    else
    {
      sub_1BC0F7954(v3 + 56);
    }
  }
  free(*(void **)(v3 + 216));
  free((void *)v3);
}

void sub_1BC0F7148()
{
  void *v0;
  id v1;
  unint64_t v2;
  id v3;
  char v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = objc_msgSend(v0, sel_subviews);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v2 = sub_1BC2B458C();

  v3 = sub_1BC0F68F8();
  v4 = sub_1BC23E1B8((uint64_t)v3, v2);
  swift_bridgeObjectRelease();

  if ((v4 & 1) == 0)
  {
    v5 = objc_msgSend(v0, sel_contentView);
    v6 = sub_1BC0F68F8();
    objc_msgSend(v5, sel_addSubview_, v6);

    v7 = (void *)objc_opt_self();
    sub_1BC0E7940();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC2B92B0;
    v9 = sub_1BC0F68F8();
    v10 = objc_msgSend(v9, sel_centerYAnchor);

    v11 = objc_msgSend(v0, sel_contentView);
    v12 = objc_msgSend(v11, sel_centerYAnchor);

    v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
    *(_QWORD *)(v8 + 32) = v13;
    v14 = sub_1BC0F68F8();
    v15 = objc_msgSend(v14, sel_trailingAnchor);

    v16 = objc_msgSend(v0, sel_contentView);
    v17 = objc_msgSend(v16, sel_trailingAnchor);

    v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
    *(_QWORD *)(v8 + 40) = v18;
    sub_1BC2B45A4();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v19 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_activateConstraints_, v19);

  }
}

id sub_1BC0F74DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScheduleHeaderCell()
{
  return objc_opt_self();
}

uint64_t destroy for ScheduleHeaderItem()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduleHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduleHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ScheduleHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduleHeaderItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleHeaderItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleHeaderItem()
{
  return &type metadata for ScheduleHeaderItem;
}

uint64_t sub_1BC0F7798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t (*sub_1BC0F77EC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC0F6ECC(v2);
  return sub_1BC0F7830;
}

uint64_t sub_1BC0F7834@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC0F7888(uint64_t a1)
{
  return sub_1BC0F6CA0(a1);
}

uint64_t (*sub_1BC0F78A8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC0F6ECC(v2);
  return sub_1BC0F7830;
}

void sub_1BC0F78F0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

unint64_t sub_1BC0F791C()
{
  unint64_t result;

  result = qword_1EF3F90D0;
  if (!qword_1EF3F90D0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3F90D0);
  }
  return result;
}

uint64_t sub_1BC0F7954(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E84E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC0F7990()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC0F79B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC0F6BEC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC0F79BC(uint64_t a1)
{
  return sub_1BC0F7A04(a1, type metadata accessor for MedicationSearchItem, &qword_1EF3F9190, (uint64_t)&protocol conformance descriptor for MedicationSearchItem, (void (*)(char *))sub_1BC0FC2B4);
}

uint64_t sub_1BC0F79E0(uint64_t a1)
{
  return sub_1BC0F7A04(a1, (uint64_t (*)(uint64_t))sub_1BC0FBE74, &qword_1EF3F9138, (uint64_t)&protocol conformance descriptor for MedmojiConfigItem<A>, (void (*)(char *))sub_1BC0FBEEC);
}

uint64_t sub_1BC0F7A04(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  void (*v21)(char *);
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v20 = a4;
  v21 = a5;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v12, 0);
    v13 = v25;
    v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v15 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1BC0FC574(v14, (uint64_t)v11, a2);
      v25 = v13;
      v17 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BC125B04(v16 > 1, v17 + 1, 1);
        v13 = v25;
      }
      v23 = v8;
      v24 = sub_1BC0E519C(a3, a2, v20);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
      sub_1BC0FC574((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, a2);
      *(_QWORD *)(v13 + 16) = v17 + 1;
      sub_1BC0F2730(&v22, v13 + 40 * v17 + 32);
      v21(v11);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_1BC0F7B74(uint64_t a1)
{
  return sub_1BC0F7A04(a1, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem, &qword_1EF3F9188, (uint64_t)&unk_1BC2C2CB0, (void (*)(char *))sub_1BC0FC2A8);
}

uint64_t sub_1BC0F7B98(unint64_t a1)
{
  return sub_1BC0F80D4(a1, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingLifestyleInteractionSwitchItem, &qword_1EF3F91D0, MEMORY[0x1E0D2B3F0]);
}

uint64_t _sSa19HealthMedicationsUIAA12LoggableDoseORszlE9lineItemsSayAA30DayScheduleLineItemDisplayable_pGvg_0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  char *v4;
  void *v5;
  void *v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  char v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BC125C3C(0, v1, 0);
    v2 = v15;
    v4 = (char *)(a1 + 48);
    do
    {
      v5 = (void *)*((_QWORD *)v4 - 2);
      v6 = (void *)*((_QWORD *)v4 - 1);
      v7 = *v4;
      sub_1BC0FA444(v5, v6, *v4);
      v15 = v2;
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BC125C3C(v8 > 1, v9 + 1, 1);
        v2 = v15;
      }
      v4 += 24;
      v13 = &type metadata for LoggableDose;
      v14 = &protocol witness table for LoggableDose;
      *(_QWORD *)&v11 = v5;
      *((_QWORD *)&v11 + 1) = v6;
      v12 = v7;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      sub_1BC0F2730(&v11, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC0F7CBC(uint64_t a1)
{
  return sub_1BC0F7A04(a1, type metadata accessor for MedicationsRecordDoseItem, &qword_1EDA0F818, (uint64_t)&unk_1BC2BD168, (void (*)(char *))sub_1BC0FC5B8);
}

uint64_t sub_1BC0F7CE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1BC2B2D98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v6, 0);
    v7 = v19;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      v19 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
        sub_1BC125B04(v11 > 1, v12 + 1, 1);
      v17 = v2;
      v18 = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
      v10((char *)boxed_opaque_existential_1, (uint64_t)v5, v2);
      v14 = v19;
      *(_QWORD *)(v19 + 16) = v12 + 1;
      sub_1BC0F2730(&v16, v14 + 40 * v12 + 32);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v7 = v19;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1BC0F7E5C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  ValueMetadata *v9;
  unint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v1, 0);
    v2 = v12;
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      sub_1BC0FC2DC(v4, v11);
      v12 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BC125B04(v5 > 1, v6 + 1, 1);
        v2 = v12;
      }
      v9 = &type metadata for MedicationDoseLogMedicationItem;
      v10 = sub_1BC0FC318();
      *(_QWORD *)&v8 = swift_allocObject();
      sub_1BC0FC2DC(v11, (_QWORD *)(v8 + 16));
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BC0F2730(&v8, v2 + 40 * v6 + 32);
      sub_1BC0FC390((uint64_t)v11);
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC0F7F78(uint64_t a1)
{
  return sub_1BC0F7A04(a1, type metadata accessor for MedicationDoseRecordAllItem, (unint64_t *)&unk_1EDA0F9F8, (uint64_t)&unk_1BC2C2990, (void (*)(char *))sub_1BC0FC200);
}

uint64_t sub_1BC0F7F9C(uint64_t a1)
{
  return sub_1BC0F7A04(a1, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem, &qword_1EF3F9148, (uint64_t)&unk_1BC2BD738, (void (*)(char *))sub_1BC0FC20C);
}

uint64_t sub_1BC0F7FC0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BC125CF0(0, v1, 0);
    v2 = v13;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4;
      v13 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v6 >= v7 >> 1)
      {
        sub_1BC125CF0(v7 > 1, v6 + 1, 1);
        v2 = v13;
      }
      sub_1BC0FC2C0(0);
      v11 = v8;
      v12 = &protocol witness table for <A> [A];
      *(_QWORD *)&v10 = v5;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BC0F2730(&v10, v2 + 40 * v6 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC0F80B8(unint64_t a1)
{
  return sub_1BC0F80D4(a1, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsLifestyleOptionsItem, &qword_1EF3F90F0, MEMORY[0x1E0D2B3F0]);
}

uint64_t sub_1BC0F80D4(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v22 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC125B04(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v11 = 0;
      do
      {
        v12 = MEMORY[0x1BCCEE950](v11, a1);
        v22 = v9;
        v14 = *(_QWORD *)(v9 + 16);
        v13 = *(_QWORD *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1BC125B04(v13 > 1, v14 + 1, 1);
          v9 = v22;
        }
        ++v11;
        v20 = a2(0);
        v21 = sub_1BC0E519C(a3, a2, a4);
        *(_QWORD *)&v19 = v12;
        *(_QWORD *)(v9 + 16) = v14 + 1;
        sub_1BC0F2730(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      v15 = (uint64_t *)(a1 + 32);
      do
      {
        v16 = *v15;
        v22 = v9;
        v18 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_1BC125B04(v17 > 1, v18 + 1, 1);
          v9 = v22;
        }
        v20 = a2(0);
        v21 = sub_1BC0E519C(a3, a2, a4);
        *(_QWORD *)&v19 = v16;
        *(_QWORD *)(v9 + 16) = v18 + 1;
        sub_1BC0F2730(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0F82C0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC125D88(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 32);
    v5 = MEMORY[0x1E0DEAEC8];
    do
    {
      v6 = *v4;
      v14 = v2;
      v7 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
      {
        sub_1BC125D88(v8 > 1, v7 + 1, 1);
        v2 = v14;
      }
      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91B8, (uint64_t)&type metadata for LoggableDose, (uint64_t (*)(_QWORD, uint64_t))v5);
      v12 = v9;
      v13 = &protocol witness table for <A> [A];
      *(_QWORD *)&v11 = v6;
      *(_QWORD *)(v2 + 16) = v7 + 1;
      sub_1BC0F2730(&v11, v2 + 40 * v7 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC0F83D4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC125DBC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1BCCEE950](i, a1);
        sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0FCD0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC125DBC(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1BC125DBC(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1BC0FC3C4(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0FCD0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC125DBC(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1BC125DBC(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1BC0FC3C4(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0F8634(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  __int128 v21;
  ValueMetadata *v22;
  unint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v1, 0);
    v2 = v24;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 2);
      v6 = *v4;
      v18 = *(v4 - 1);
      v19 = *(v4 - 3);
      v7 = v4[2];
      v8 = v4[4];
      v16 = v4[3];
      v17 = v4[1];
      v15 = *((_BYTE *)v4 + 40);
      v9 = v4[6];
      v10 = v4[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC0F2690(v9);
      v24 = v2;
      v12 = *(_QWORD *)(v2 + 16);
      v11 = *(_QWORD *)(v2 + 24);
      v20 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        sub_1BC125B04(v11 > 1, v20, 1);
        v2 = v24;
      }
      v22 = &type metadata for ScheduleTypeOptionItem;
      v23 = sub_1BC0FC218();
      v13 = swift_allocObject();
      *(_QWORD *)&v21 = v13;
      *(_QWORD *)(v13 + 16) = v19;
      *(_QWORD *)(v13 + 24) = v5;
      *(_QWORD *)(v13 + 32) = v18;
      *(_QWORD *)(v13 + 40) = v6;
      *(_QWORD *)(v13 + 48) = v17;
      *(_QWORD *)(v13 + 56) = v7;
      *(_QWORD *)(v13 + 64) = v16;
      *(_QWORD *)(v13 + 72) = v8;
      *(_BYTE *)(v13 + 80) = v15;
      *(_QWORD *)(v13 + 88) = v9;
      *(_QWORD *)(v13 + 96) = v10;
      *(_QWORD *)(v2 + 16) = v20;
      sub_1BC0F2730(&v21, v2 + 40 * v12 + 32);
      v4 += 11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC0F87B8(unint64_t a1)
{
  return sub_1BC0F80D4(a1, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationItem, &qword_1EF3F9170, (uint64_t)&protocol conformance descriptor for InteractionMedicationItem);
}

uint64_t sub_1BC0F87D4(unint64_t a1)
{
  return sub_1BC0F80D4(a1, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSourceListItem, &qword_1EF3F9158, (uint64_t)&unk_1BC2C4CD0);
}

uint64_t sub_1BC0F87F0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BC125DBC(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125DBC(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BC125DBC(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BC0FC3C4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC0F8914(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v20 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC125E78(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v6 = MEMORY[0x1E0D2F070];
      do
      {
        v7 = MEMORY[0x1BCCEE950](v5, a1);
        v9 = *(_QWORD *)(v20 + 16);
        v8 = *(_QWORD *)(v20 + 24);
        if (v9 >= v8 >> 1)
          sub_1BC125E78(v8 > 1, v9 + 1, 1);
        ++v5;
        v10 = sub_1BC0E519C(&qword_1EF3F90F8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeverityDataSource, v6);
        *(_QWORD *)(v20 + 16) = v9 + 1;
        v11 = v20 + 16 * v9;
        *(_QWORD *)(v11 + 32) = v7;
        *(_QWORD *)(v11 + 40) = v10;
      }
      while (v2 != v5);
    }
    else
    {
      v12 = (uint64_t *)(a1 + 32);
      v13 = *(_QWORD *)(v20 + 16);
      v14 = 16 * v13;
      v15 = MEMORY[0x1E0D2F070];
      do
      {
        v16 = *v12;
        v17 = *(_QWORD *)(v20 + 24);
        swift_retain();
        if (v13 >= v17 >> 1)
          sub_1BC125E78(v17 > 1, v13 + 1, 1);
        v18 = sub_1BC0E519C(&qword_1EF3F90F8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeverityDataSource, v15);
        *(_QWORD *)(v20 + 16) = v13 + 1;
        v19 = v20 + v14;
        *(_QWORD *)(v19 + 32) = v16;
        *(_QWORD *)(v19 + 40) = v18;
        v14 += 16;
        ++v12;
        ++v13;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t LoggableDose.scheduleDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t result;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  char v25;
  void *v26;
  unint64_t v27;

  v3 = sub_1BC2B23F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - v9;
  v11 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v12 = *(void **)(v1 + 8);
    v13 = v11;
    v14 = objc_msgSend(v13, sel_scheduledDate);
    if (v14)
    {
      v15 = v14;
      sub_1BC2B23A8();

      v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v16(v10, v6, v3);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) != 1)
      {

        return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a1, v10, v3);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
    }
    sub_1BC0F8D88((uint64_t)v10);
    v23 = 0;
    v24 = 0xE000000000000000;
    v18 = v13;
    v19 = v12;
    sub_1BC2B51BC();
    v26 = v23;
    v27 = v24;
    sub_1BC2B44FC();
    v23 = v11;
    v24 = (unint64_t)v12;
    v25 = 1;
    v20 = v18;
    v21 = v19;
    sub_1BC2B4490();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    result = sub_1BC2B52B8();
    __break(1u);
  }
  else
  {
    swift_retain();
    sub_1BC2B32E4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC0F8D88(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id LoggableDose.medication.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

double *LoggableDose.makeLoggingViewModel(index:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  double *v10;
  id v11;
  uint64_t v13;

  v3 = sub_1BC2B23F0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v1;
  v7 = *(void **)(v1 + 8);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v8 = v6;
    v9 = v7;
    sub_1BC2B23B4();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_allocObject();
    v10 = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v9, v6, 0, v5, a1, 1.0);

  }
  else
  {
    swift_retain_n();
    v11 = v7;
    sub_1BC2B23B4();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_allocObject();
    v10 = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v11, 0, (uint64_t)v6, v5, a1, 1.0);
    swift_release();
  }
  return v10;
}

double *LoggableDose.makeLoggingViewModel(logDate:index:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  id v12;
  id v13;
  double v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v5 = sub_1BC2B23F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)v2;
  v9 = *(void **)(v2 + 8);
  v10 = *(_BYTE *)(v2 + 16);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v7, a1);
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_allocObject();
  if ((v10 & 1) != 0)
  {
    v12 = v8;
    v13 = v9;
    v14 = 1.0;
    v15 = v8;
    v16 = 0;
  }
  else
  {
    swift_retain();
    v13 = v9;
    v14 = 1.0;
    v15 = 0;
    v16 = (uint64_t)v8;
  }
  return MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v13, v15, v16, v7, a2, v14);
}

uint64_t LoggableDose.name.getter()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B3758();
}

void LoggableDose.medmojiConfiguration.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 8);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

}

id LoggableDose.isLastScheduledDose.getter()
{
  uint64_t v0;
  char v2;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return objc_msgSend(*(id *)v0, sel_isLastScheduledDose);
  swift_retain();
  v2 = sub_1BC2B32D8();
  swift_release();
  return (id)(v2 & 1);
}

uint64_t sub_1BC0F90EC()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B3758();
}

void sub_1BC0F913C()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 8);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

}

id sub_1BC0F917C()
{
  uint64_t v0;
  char v2;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return objc_msgSend(*(id *)v0, sel_isLastScheduledDose);
  swift_retain();
  v2 = sub_1BC2B32D8();
  swift_release();
  return (id)(v2 & 1);
}

uint64_t Array<A>.date.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 16))
  {
    LoggableDose.scheduleDate.getter(a2);
    v3 = sub_1BC2B23F0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
  }
  else
  {
    v5 = sub_1BC2B23F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

uint64_t Array<A>.time.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  char v20;

  v2 = sub_1BC2B227C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B2294();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  if (!*(_QWORD *)(a1 + 16))
  {
    v17 = sub_1BC2B23F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
    goto LABEL_5;
  }
  v13 = *(_BYTE *)(a1 + 48);
  v19 = *(_OWORD *)(a1 + 32);
  v20 = v13;
  LoggableDose.scheduleDate.getter((uint64_t)v12);
  v14 = sub_1BC2B23F0();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
LABEL_5:
    sub_1BC0F8D88((uint64_t)v12);
    return 0;
  }
  sub_1BC2B2288();
  sub_1BC2B2270();
  v16 = sub_1BC2B23C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  return v16;
}

uint64_t sub_1BC0F9460()
{
  uint64_t *v0;

  return Array<A>.time.getter(*v0);
}

uint64_t sub_1BC0F9468@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return Array<A>.date.getter(*v1, a1);
}

uint64_t sub_1BC0F9470()
{
  uint64_t *v0;

  return _sSa19HealthMedicationsUIAA12LoggableDoseORszlE9lineItemsSayAA30DayScheduleLineItemDisplayable_pGvg_0(*v0);
}

uint64_t Array<A>.timeText.getter(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = sub_1BC2B227C();
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B2294();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B23F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Array<A>.logTime.getter(a1, (uint64_t)v12);
  sub_1BC2B2288();
  sub_1BC2B2270();
  v13 = sub_1BC2B23C0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t Array<A>.logTime.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v4 = sub_1BC2B23F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - v10;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    if (result)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
    goto LABEL_10;
  }
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v12)
    goto LABEL_9;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCEE950](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BC2B3398();
  swift_release();
  v15 = objc_msgSend(v14, sel_startDate);

  sub_1BC2B23A8();
  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v16(v11, v7, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a2, v11, v4);
LABEL_10:
  sub_1BC2B23E4();
  return sub_1BC0F8D88((uint64_t)v11);
}

uint64_t Array<A>.lineItems.getter(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _UNKNOWN **v22;
  __int128 v23[2];

  v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_21;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v18 = v1 & 0xC000000000000001;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v18)
        MEMORY[0x1BCCEE950](v4, v1);
      else
        swift_retain();
      v6 = sub_1BC2B33A4();
      if (v6)
      {
        v7 = (void *)v6;
        *(_QWORD *)&v23[0] = v6;
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
        v19 = sub_1BC2B3758();
        v9 = v8;
        v10 = (void *)sub_1BC2B3398();
        v11 = objc_msgSend(v10, sel_status);

        v12 = v1;
        v13 = v2;
        v14 = v11 == (id)5;
        v15 = (void *)sub_1BC2B3398();
        LOBYTE(v11) = objc_msgSend(v15, sel_isLastScheduledDose);

        *((_QWORD *)&v21 + 1) = &type metadata for MedicationsDayHistoryLineItem;
        v22 = &off_1E74B31C8;
        *(_QWORD *)&v20 = v19;
        *((_QWORD *)&v20 + 1) = v9;
        LOBYTE(v21) = v14;
        v2 = v13;
        v1 = v12;
        BYTE1(v21) = (_BYTE)v11;
        swift_release();

        if (*((_QWORD *)&v21 + 1))
          goto LABEL_14;
      }
      else
      {
        v22 = 0;
        v20 = 0u;
        v21 = 0u;
        swift_release();
        if (*((_QWORD *)&v21 + 1))
        {
LABEL_14:
          sub_1BC0F2730(&v20, (uint64_t)v23);
          sub_1BC0F2730(v23, (uint64_t)&v20);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v5 = sub_1BC0FA2BC(0, v5[2] + 1, 1, v5, (unint64_t *)&unk_1EF3F91F0, &qword_1EF3F90E8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable);
          v17 = v5[2];
          v16 = v5[3];
          if (v17 >= v16 >> 1)
            v5 = sub_1BC0FA2BC((_QWORD *)(v16 > 1), v17 + 1, 1, v5, (unint64_t *)&unk_1EF3F91F0, &qword_1EF3F90E8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable);
          v5[2] = v17 + 1;
          sub_1BC0F2730(&v20, (uint64_t)&v5[5 * v17 + 4]);
          goto LABEL_6;
        }
      }
      sub_1BC0F9C00((uint64_t)&v20);
LABEL_6:
      if (v2 == ++v4)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0F9A9C()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1BC2B227C();
  v1 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B2294();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B23F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Array<A>.logTime.getter(*v0, (uint64_t)v11);
  sub_1BC2B2288();
  sub_1BC2B2270();
  v12 = sub_1BC2B23C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1BC0F9BF0()
{
  unint64_t *v0;

  return Array<A>.lineItems.getter(*v0);
}

uint64_t sub_1BC0F9BF8@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;

  return Array<A>.logTime.getter(*v1, a1);
}

uint64_t sub_1BC0F9C00(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0F9C5C(0, &qword_1EF3F90E0, &qword_1EF3F90E8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC0F9C5C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC0E8778(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

_QWORD *sub_1BC0F9CC0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC0FADB8(a1, a2, a3, a4, &qword_1EF3F91E8, (uint64_t)&type metadata for ScheduleListItem);
}

_QWORD *sub_1BC0F9CD4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E2130(0, &qword_1EDA0FE50, (uint64_t)&type metadata for MedicationCellItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FB37C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0F9DF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, &qword_1EF3F9100, type metadata accessor for WeekdaysAndDosages);
}

uint64_t sub_1BC0F9E08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, &qword_1EF3F9160, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
}

uint64_t sub_1BC0F9E1C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BC0E7998(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BC2B52AC();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BC0FB558(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1BC0FA038(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC0FA2BC(a1, a2, a3, a4, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
}

_QWORD *sub_1BC0FA054(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91D8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FB670(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BC0FA174(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F9008, (uint64_t)&type metadata for SpecificationStep, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC0FB760(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0FA280(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090]);
}

uint64_t sub_1BC0FA294(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, &qword_1EF3F9180, type metadata accessor for ScheduleDataSource.DoseItem);
}

_QWORD *sub_1BC0FA2A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC0FB028(a1, a2, a3, a4, &qword_1EF3F9168, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionLifestyleFactor);
}

_QWORD *sub_1BC0FA2BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = a4[3];
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = a4[2];
    if (v11 <= v12)
      v13 = a4[2];
    else
      v13 = v11;
    if (v13)
    {
      sub_1BC0F9C5C(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = (_QWORD *)swift_allocObject();
      v15 = _swift_stdlib_malloc_size(v14);
      v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v9 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4])
          memmove(v16, a4 + 4, 40 * v12);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC0FBB44(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of DayScheduleLineItemDisplayable.isLastScheduledDose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DayScheduleDisplayable.time.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayScheduleDisplayable.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DayScheduleDisplayable.lineItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DayScheduleActionable.scheduleDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayScheduleActionable.makeLoggingViewModel(index:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DayScheduleActionable.makeLoggingViewModel(logDate:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

id sub_1BC0FA444(void *a1, void *a2, char a3)
{
  id v3;

  if ((a3 & 1) != 0)
    v3 = a1;
  else
    swift_retain();
  return a2;
}

void destroy for LoggableDose(uint64_t a1)
{
  sub_1BC0FA484(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1BC0FA484(void *a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();

}

uint64_t _s19HealthMedicationsUI12LoggableDoseOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC0FA444(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LoggableDose(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC0FA444(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BC0FA484(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LoggableDose(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BC0FA484(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggableDose(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LoggableDose(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC0FA634(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1BC0FA63C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LoggableDose()
{
  return &type metadata for LoggableDose;
}

_QWORD *sub_1BC0FA658(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E8710();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FBC58(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC0FA760(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC0FA784(a1, a2, a3, a4, (uint64_t)&unk_1EDA0FE90, (uint64_t)type metadata accessor for UIContentSizeCategory, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E7998, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1BC0FBD70);
}

_QWORD *sub_1BC0FA784(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)), void (*a8)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  int64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v10 = (char)result;
  if ((a3 & 1) == 0)
  {
    v12 = a2;
    goto LABEL_8;
  }
  v11 = a4[3];
  v12 = v11 >> 1;
  if ((uint64_t)(v11 >> 1) >= a2)
    goto LABEL_8;
  if (v12 + 0x4000000000000000 >= 0)
  {
    v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v12 = a2;
LABEL_8:
    v13 = a4[2];
    if (v12 <= v13)
      v14 = a4[2];
    else
      v14 = v12;
    if (v14)
    {
      a7(0, a5, a6, MEMORY[0x1E0DED1E8]);
      v15 = (_QWORD *)swift_allocObject();
      v16 = _swift_stdlib_malloc_size(v15);
      v17 = v16 - 32;
      if (v16 < 32)
        v17 = v16 - 25;
      v15[2] = v13;
      v15[3] = 2 * (v17 >> 3);
      v18 = v15 + 4;
      if ((v10 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v18 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v15 != a4 || v18 >= &a4[v13 + 4])
          memmove(v18, a4 + 4, 8 * v13);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a8(0, v13, v18, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC0FA8A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC0FA784(a1, a2, a3, a4, (uint64_t)&unk_1EF3F91E0, MEMORY[0x1E0DEB418], (void (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E2130, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1BC0FBEF8);
}

uint64_t sub_1BC0FA8CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, &qword_1EDA0EA08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
}

uint64_t sub_1BC0FA8E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0FA8FC(a1, a2, a3, a4, &qword_1EDA0EA18, (unint64_t *)&unk_1EDA0E6E8, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
}

uint64_t sub_1BC0FA8FC(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, unint64_t *a6, void (*a7)(uint64_t))
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  size_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v11 = *(_QWORD *)(a4 + 24);
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = *(_QWORD *)(a4 + 16);
  if (v12 <= v13)
    v14 = *(_QWORD *)(a4 + 16);
  else
    v14 = v12;
  if (!v14)
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BC0FC4C4(0, a5, a6, a7);
  sub_1BC0FC518(0, a6, a7);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = (_QWORD *)swift_allocObject();
  v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (v21 = v17 == -1) : (v21 = 0), v21))
  {
LABEL_29:
    result = sub_1BC2B52AC();
    __break(1u);
    return result;
  }
  v19[2] = v13;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  sub_1BC0FC518(0, a6, a7);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = (unint64_t)v19 + v24;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v19 < a4 || v25 >= a4 + v24 + *(_QWORD *)(v23 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BC0FB844(0, v13, v25, a4, a6, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_1BC0FAB34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0FA8FC(a1, a2, a3, a4, &qword_1EDA0EA20, &qword_1EDA0E718, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1BC0FAB50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, &qword_1EDA0EA10, (uint64_t (*)(uint64_t))sub_1BC0FC440);
}

_QWORD *sub_1BC0FAB64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E2130(0, &qword_1EDA0EA38, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FBEF8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC0FAC84(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E2130(0, &qword_1EF3F9198, (uint64_t)&type metadata for ScheduledDoseIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FB964(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC0FADA4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC0FADB8(a1, a2, a3, a4, &qword_1EF3F91B0, (uint64_t)&type metadata for LoggableDose);
}

_QWORD *sub_1BC0FADB8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BC0E2130(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4])
          memmove(v14, a4 + 4, 24 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC0FBA54(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC0FAEF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E7998(0, &qword_1EF3F91A8, (uint64_t (*)(uint64_t))sub_1BC0FC2C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FBFE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC0FB014(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC0FB028(a1, a2, a3, a4, (unint64_t *)&qword_1EF3F91C8, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel);
}

_QWORD *sub_1BC0FB028(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BC0E7998(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v10 + 4])
          memmove(v15, a4 + 4, 8 * v10);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FBEF8(0, v10, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC0FB140(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0FC3D4();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC0FC0E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BC0FB248(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC0E2130(0, &qword_1EF3F9150, (uint64_t)&type metadata for LogDetailsRow, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC0FB760(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0FB354(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, &qword_1EF3F9140, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C978]);
}

uint64_t sub_1BC0FB368(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC0F9E1C(a1, a2, a3, a4, &qword_1EF3F9108, (uint64_t (*)(uint64_t))sub_1BC0FB470);
}

uint64_t sub_1BC0FB37C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

void sub_1BC0FB470()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3F9110)
  {
    sub_1BC2B3698();
    sub_1BC0E7998(255, (unint64_t *)&qword_1EF3F9118, (uint64_t (*)(uint64_t))sub_1BC0FB4F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3F9110);
  }
}

void sub_1BC0FB4F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9120)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDE0);
    v0 = sub_1BC2B4340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9120);
  }
}

uint64_t sub_1BC0FB558(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FB670(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

char *sub_1BC0FB760(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FB844(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    sub_1BC0FC518(0, a5, a6);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned __int8 *)(v11 + 80);
    v13 = *(_QWORD *)(v11 + 72);
    v14 = a4 + ((v12 + 32) & ~v12) + v13 * a1;
    v15 = v13 * v6;
    v16 = a3 + v15;
    v17 = v14 + v15;
    if (v14 >= v16 || v17 <= a3)
    {
      swift_arrayInitWithCopy();
      return v16;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FB964(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FBA54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FBB44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1BC0E8778(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FBC58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BC0E8778(0, (unint64_t *)&qword_1EF3F8998);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FBD70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for UIContentSizeCategory(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

void sub_1BC0FBE74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF3F9128)
  {
    v2 = sub_1BC2B32B4();
    v3 = sub_1BC0E519C(&qword_1EF3F9130, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], (uint64_t)&protocol conformance descriptor for MedmojiColor);
    v5 = type metadata accessor for MedmojiConfigItem(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF3F9128);
  }
}

uint64_t sub_1BC0FBEEC(uint64_t a1)
{
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
}

char *sub_1BC0FBEF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FBFE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BC0FC2C0(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FC0E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91B8, (uint64_t)&type metadata for LoggableDose, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC0FC200(uint64_t a1)
{
  return sub_1BC0E8594(a1, type metadata accessor for MedicationDoseRecordAllItem);
}

uint64_t sub_1BC0FC20C(uint64_t a1)
{
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))type metadata accessor for MedicationLogDetailsUnitItem);
}

unint64_t sub_1BC0FC218()
{
  unint64_t result;

  result = qword_1EF3F9178;
  if (!qword_1EF3F9178)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BFFE0, &type metadata for ScheduleTypeOptionItem);
    atomic_store(result, (unint64_t *)&qword_1EF3F9178);
  }
  return result;
}

uint64_t sub_1BC0FC25C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC0FC2A8(uint64_t a1)
{
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleIntervalItem);
}

uint64_t sub_1BC0FC2B4(uint64_t a1)
{
  return sub_1BC0E8594(a1, type metadata accessor for MedicationSearchItem);
}

void sub_1BC0FC2C0(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3F91A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

_QWORD *sub_1BC0FC2DC(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for MedicationDoseLogMedicationItem(a2, a1);
  return a2;
}

unint64_t sub_1BC0FC318()
{
  unint64_t result;

  result = qword_1EDA0F7E0;
  if (!qword_1EDA0F7E0)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BB698, &type metadata for MedicationDoseLogMedicationItem);
    atomic_store(result, (unint64_t *)&qword_1EDA0F7E0);
  }
  return result;
}

uint64_t sub_1BC0FC35C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC0FC390(uint64_t a1)
{
  destroy for MedicationDoseLogMedicationItem();
  return a1;
}

_OWORD *sub_1BC0FC3C4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1BC0FC3D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F91C0)
  {
    sub_1BC0E2130(255, (unint64_t *)&qword_1EF3F91B8, (uint64_t)&type metadata for LoggableDose, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F91C0);
  }
}

void sub_1BC0FC440()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDA0E6E0)
  {
    sub_1BC2B2024();
    sub_1BC0E2130(255, &qword_1EDA0E9C8, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDA0E6E0);
  }
}

void sub_1BC0FC4C4(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC0FC518(255, a3, a4);
    v5 = sub_1BC2B53A8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC0FC518(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BC0FC574(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC0FC5B8(uint64_t a1)
{
  return sub_1BC0E8594(a1, type metadata accessor for MedicationsRecordDoseItem);
}

uint64_t sub_1BC0FC5CC()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  return v1;
}

id MedicationScheduleObserver.__allocating_init(healthStore:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1BC0FDF70(a1);

  return v4;
}

id MedicationScheduleObserver.init(healthStore:)(void *a1)
{
  id v2;

  v2 = sub_1BC0FDF70(a1);

  return v2;
}

id MedicationScheduleObserver.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleControl], sel_unregisterObserver_, v0);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask])
  {
    sub_1BC0F6274();
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationScheduleObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC0FC838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v3 = sub_1BC2B42E0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B4304();
  v7 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_queue);
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_1BC0FE6EC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_1;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC2B42F8();
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, v4, MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC0FEBAC((unint64_t *)&qword_1EDA0FFE0, (unint64_t *)&qword_1EDA0FFD0, v4);
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v9, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC0FCA74(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](v1);
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    return sub_1BC2B3F98();
  }
  return result;
}

uint64_t sub_1BC0FCB08()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - v3;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], v1);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  v8 = sub_1BC2B2024();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - v13;
  v15 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval;
  swift_beginAccess();
  sub_1BC0FE31C(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1BC0F2444((uint64_t)v7, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v23(v14, v7, v8);
  v17 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemDataSource);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v20 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  *((_QWORD *)v22 + 4) = v19;
  v23(&v22[v20], v12, v8);
  *(_QWORD *)&v22[v21] = v18;
  swift_retain();
  sub_1BC0FD8CC((uint64_t)v4, (uint64_t)&unk_1EF3F9240, (uint64_t)v22);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1BC0FCDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_1BC0E7998(0, &qword_1EF3F9250, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0DF07C0]);
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC0FCE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v1 = *(_QWORD *)(v0 + 56);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask))
  {
    sub_1BC0F6274();
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
    v1 = *(_QWORD *)(v0 + 56);
  }
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = sub_1BC2B2024();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v6, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  v9 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval;
  swift_beginAccess();
  sub_1BC0FE4B4(v2, v9);
  swift_endAccess();
  v10 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleControl);
  objc_msgSend(v10, sel_unregisterObserver_, v1);
  objc_msgSend(v10, sel_registerObserver_queue_, v1, *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_queue));
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_1BC0FE450();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, *MEMORY[0x1E0DF07B8], v4);
  sub_1BC2B46B8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC0FD048(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v30 = a1;
  sub_1BC0E7998(0, &qword_1EF3F9330, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0DF07E8]);
  v35 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v37 = *(_QWORD *)(v35 + 64);
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v29 - v4;
  sub_1BC0E7998(0, &qword_1EF3F9338, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96180]);
  v34 = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v33 = (uint64_t)&v29 - v12;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B4688();
  v14 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = swift_allocObject();
  v32 = a2;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3F9320, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  v16 = v7;
  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v18 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v34;
  v17(v18, v10, v34);
  v20 = v35;
  v21 = v36;
  v22 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v36, v30, v31);
  v23 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v24 = v20;
  v25 = (v6 + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v26 = (char *)swift_allocObject();
  *((_QWORD *)v26 + 2) = 0;
  *((_QWORD *)v26 + 3) = 0;
  *((_QWORD *)v26 + 4) = v15;
  v17(&v26[v23], v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v26[v25], v21, v22);
  v27 = sub_1BC0FD8CC(v33, (uint64_t)&unk_1EF3F9348, (uint64_t)v26);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask) = v27;
  return swift_release();
}

void sub_1BC0FD35C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCEF478](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask);
    swift_retain();

    if (v5)
    {
      sub_1BC0F6274();
      sub_1BC2B46C4();
      swift_release();
    }
  }
}

uint64_t sub_1BC0FD3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  sub_1BC0E7998(0, &qword_1EF3F9350, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0DF0790]);
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  sub_1BC0FE944(0, &qword_1EF3F9358, MEMORY[0x1E0C95E80]);
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = swift_task_alloc();
  sub_1BC0FE944(0, &qword_1EF3F9368, MEMORY[0x1E0C95E68]);
  v6[17] = v9;
  v6[18] = *(_QWORD *)(v9 - 8);
  v6[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC0FD4DC()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  if ((sub_1BC2B46D0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 64) + 16;
    swift_beginAccess();
    v3 = MEMORY[0x1BCCEF478](v2);
    if (v3)
    {
      v4 = (void *)v3;
      sub_1BC0FDA08();

    }
    v6 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 112);
    sub_1BC0E7998(0, &qword_1EF3F9338, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96180]);
    v9 = v8;
    v10 = sub_1BC0FE8E4();
    MEMORY[0x1BCCED834](v9, v10);
    sub_1BC2B3EA8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    *(_QWORD *)(v0 + 160) = sub_1BC0FE9C0();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v11;
    *v11 = v0;
    v11[1] = sub_1BC0FD648;
    return sub_1BC2B4640();
  }
}

uint64_t sub_1BC0FD648()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 184) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC0FD6AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 40);
  return swift_task_switch();
}

uint64_t sub_1BC0FD6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 176);
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    goto LABEL_5;
  }
  if ((sub_1BC2B46D0() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_bridgeObjectRelease();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 56) = v1;
  sub_1BC0E7998(0, &qword_1EF3F9330, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0DF07E8]);
  sub_1BC2B4694();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v6;
  *v6 = v0;
  v6[1] = sub_1BC0FD868;
  return sub_1BC2B4640();
}

uint64_t sub_1BC0FD80C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 184);
  sub_1BC0F6274();
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1BC0FD868()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 184) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC0FD8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1BC2B467C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1BC2B4670();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1BC0F2444(a1, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC2B461C();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1BC0FDA08()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - v3;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], v1);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  v8 = sub_1BC2B2024();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - v13;
  v15 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval;
  swift_beginAccess();
  sub_1BC0FE31C(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1BC0F2444((uint64_t)v7, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v23(v14, v7, v8);
  v17 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemDataSource);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v20 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  *((_QWORD *)v22 + 4) = v19;
  v23(&v22[v20], v12, v8);
  *(_QWORD *)&v22[v21] = v18;
  swift_retain();
  sub_1BC0FD8CC((uint64_t)v4, (uint64_t)&unk_1EF3F9378, (uint64_t)v22);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1BC0FDC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v6 + 40) = a6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 48) = v7;
  *v7 = v6;
  v7[1] = sub_1BC0FDCEC;
  return sub_1BC2B36A4();
}

uint64_t sub_1BC0FDCEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1BC0FDD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCEF478](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BC0FC838(*(_QWORD *)(v0 + 56));

  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id MedicationScheduleObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicationScheduleObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC0FDE44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MedicationScheduleObserver();
  result = sub_1BC2B3EB4();
  *a1 = result;
  return result;
}

uint64_t sub_1BC0FDE80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC0FDEFC(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v3 = v2;
  return sub_1BC2B3F98();
}

id sub_1BC0FDF70(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  objc_class *v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  objc_super v29;
  uint64_t v30;

  v28 = a1;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3F9320, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96198]);
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x1E0C80A78](v2);
  v25 = (char *)v22 - v3;
  v24 = sub_1BC2B4A00();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B49B8();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BC2B4304();
  MEMORY[0x1E0C80A78](v9);
  v23 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_queue;
  v22[1] = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v10 = v1;
  sub_1BC2B42F8();
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1BC0E519C(&qword_1EF3F9388, v8, MEMORY[0x1E0DEF828]);
  sub_1BC0E7998(0, &qword_1EF3F9390, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC0FEBAC(&qword_1EF3F9398, &qword_1EF3F9390, v8);
  sub_1BC2B509C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v24);
  *(_QWORD *)(v22[2] + v23) = sub_1BC2B4A24();
  v11 = &v10[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval];
  v12 = sub_1BC2B2024();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask] = 0;
  v13 = &v10[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver__scheduleItems];
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1BC0FE450();
  v14 = v25;
  sub_1BC2B3F5C();
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v13, v14, v27);
  v15 = v28;
  *(_QWORD *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_healthStore] = v28;
  v16 = objc_allocWithZone(MEMORY[0x1E0D2C490]);
  v17 = v15;
  v18 = objc_msgSend(v16, sel_initWithHealthStore_, v17);
  *(_QWORD *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleControl] = v18;
  sub_1BC2B36BC();
  swift_allocObject();
  v19 = v17;
  *(_QWORD *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemDataSource] = sub_1BC2B36B0();

  v20 = (objc_class *)type metadata accessor for MedicationScheduleObserver();
  v29.receiver = v10;
  v29.super_class = v20;
  return objc_msgSendSuper2(&v29, sel_init);
}

uint64_t type metadata accessor for MedicationScheduleObserver()
{
  uint64_t result;

  result = qword_1EF3F9308;
  if (!qword_1EF3F9308)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0FE31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC0FE378()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC0FE3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = sub_1BC2B2024();
  v3 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BC0FEBF4;
  v4[5] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v4[6] = v5;
  *v5 = v4;
  v5[1] = sub_1BC0FDCEC;
  return sub_1BC2B36A4();
}

void sub_1BC0FE450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9258)
  {
    sub_1BC0E1D38(255, &qword_1EF3F9260);
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9258);
  }
}

uint64_t sub_1BC0FE4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC0FE510(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC0FD048(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC0FE518()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1BC0FE524()
{
  return type metadata accessor for MedicationScheduleObserver();
}

void sub_1BC0FE52C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC0E7998(319, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1BC0E7998(319, (unint64_t *)&unk_1EF3F9320, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96198]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicationScheduleObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationScheduleObserver.__allocating_init(healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of MedicationScheduleObserver.scheduleControlDidRescheduleItems()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicationScheduleObserver.observeChanges(in:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x100);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BC0FEBF4;
  return v9(a1, a2);
}

uint64_t sub_1BC0FE6C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC0FE6EC()
{
  uint64_t v0;

  return sub_1BC0FCA74(*(_QWORD *)(v0 + 16));
}

void sub_1BC0FE6FC(uint64_t a1)
{
  uint64_t v1;

  sub_1BC0FD35C(a1, v1);
}

uint64_t sub_1BC0FE704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1BC0E7998(0, &qword_1EF3F9338, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96180]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1BC0E7998(0, &qword_1EF3F9330, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0DF07E8]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = (v4 + v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_1BC0FE7F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  sub_1BC0E7998(0, &qword_1EF3F9338, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96180]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  sub_1BC0E7998(0, &qword_1EF3F9330, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0DF07E8]);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = v6 + v7 + v9;
  v11 = v1[2];
  v12 = v1[3];
  v13 = v1[4];
  v14 = (uint64_t)v1 + v6;
  v15 = (uint64_t)v1 + (v10 & ~v9);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_1BC0FEBF4;
  return sub_1BC0FD3F0(a1, v11, v12, v13, v14, v15);
}

unint64_t sub_1BC0FE8E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9360;
  if (!qword_1EF3F9360)
  {
    sub_1BC0E7998(255, &qword_1EF3F9338, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9360);
  }
  return result;
}

void sub_1BC0FE944(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC0E7998(255, &qword_1EF3F9338, (uint64_t (*)(uint64_t))sub_1BC0FE450, MEMORY[0x1E0C96180]);
    v7 = v6;
    v8 = sub_1BC0FE8E4();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC0FE9C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9370;
  if (!qword_1EF3F9370)
  {
    sub_1BC0FE944(255, &qword_1EF3F9368, MEMORY[0x1E0C95E68]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95E78], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9370);
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC2B2024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC0FEAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = sub_1BC2B2024();
  v3 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BC0FEB64;
  v4[5] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v4[6] = v5;
  *v5 = v4;
  v5[1] = sub_1BC0FDCEC;
  return sub_1BC2B36A4();
}

uint64_t sub_1BC0FEB64()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC0FEBAC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC0E7998(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ManualNameStepViewController()
{
  uint64_t result;

  result = qword_1EF3F93A0;
  if (!qword_1EF3F93A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0FEC34()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC0FEC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  sub_1BC0FEF8C();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *(_QWORD *)(*(_QWORD *)(v0 + qword_1EF3FAD98) + 24);
  sub_1BC0FF00C();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F9400, (uint64_t (*)(uint64_t))sub_1BC0FF00C, MEMORY[0x1E0C95FB8]);
  swift_retain();
  sub_1BC2B3FC8();
  swift_release();
  sub_1BC0E519C(&qword_1EF3F9408, (uint64_t (*)(uint64_t))sub_1BC0FEF8C, MEMORY[0x1E0C95708]);
  v6 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

BOOL sub_1BC0FEDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = sub_1BC2B1FC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return 0;
  v13[0] = a1;
  v13[1] = a2;
  swift_bridgeObjectRetain();
  sub_1BC2B1FB8();
  sub_1BC0FF070();
  v8 = sub_1BC2B500C();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  return v11 != 0;
}

BOOL sub_1BC0FEE90@<W0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_1BC0FEDA4(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_1BC0FEEC0(_BYTE *a1@<X8>)
{
  *a1 = 65;
}

void sub_1BC0FEECC()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC0FEF24()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC0FEF50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManualNameStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC0FEF84()
{
  return type metadata accessor for ManualNameStepViewController();
}

void sub_1BC0FEF8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F93F0)
  {
    sub_1BC0FF00C();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F9400, (uint64_t (*)(uint64_t))sub_1BC0FF00C, MEMORY[0x1E0C95FB8]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F93F0);
  }
}

void sub_1BC0FF00C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F93F8)
  {
    sub_1BC0E8D78();
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F93F8);
  }
}

unint64_t sub_1BC0FF070()
{
  unint64_t result;

  result = qword_1EDA0FC30;
  if (!qword_1EDA0FC30)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDA0FC30);
  }
  return result;
}

BOOL == infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v3);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = objc_msgSend(v5, sel_identifier);

  v7 = objc_msgSend(v6, sel_rawIdentifier);
  v8 = a2[3];
  v9 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v8);
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v11 = objc_msgSend(v10, sel_identifier);

  v12 = objc_msgSend(v11, sel_rawIdentifier);
  return v7 == v12;
}

id InteractionResultDetailDataProvider.interactionResult.getter()
{
  id *v0;

  return *v0;
}

void InteractionResultDetailDataProvider.interactionResult.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*InteractionResultDetailDataProvider.interactionResult.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.stackedMedmojiDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 8, a1);
}

uint64_t InteractionResultDetailDataProvider.stackedMedmojiDisplayable.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 8;
  __swift_destroy_boxed_opaque_existential_0(v3);
  return sub_1BC0F2730(a1, v3);
}

uint64_t (*InteractionResultDetailDataProvider.stackedMedmojiDisplayable.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.firstItemName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.firstItemName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.firstItemName.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.firstItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 64, a1);
}

uint64_t InteractionResultDetailDataProvider.firstItemDetailsProviding.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 64;
  __swift_destroy_boxed_opaque_existential_0(v3);
  return sub_1BC0F2730(a1, v3);
}

uint64_t (*InteractionResultDetailDataProvider.firstItemDetailsProviding.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.firstItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionResultDetailDataProvider.firstItemIngredients.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.firstItemIngredients.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.secondItemName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.secondItemName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.secondItemName.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.secondItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 128, a1);
}

uint64_t InteractionResultDetailDataProvider.secondItemDetailsProviding.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 128;
  __swift_destroy_boxed_opaque_existential_0(v3);
  return sub_1BC0F2730(a1, v3);
}

uint64_t (*InteractionResultDetailDataProvider.secondItemDetailsProviding.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.secondItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionResultDetailDataProvider.secondItemIngredients.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 168) = a1;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.secondItemIngredients.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.education.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.education.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.education.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.attributions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.attributions.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.attributions.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.copySortingItemsByName()@<X0>(_QWORD *a1@<X8>)
{
  void **v1;
  void **v2;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void (*v16)(uint64_t, _QWORD *);
  void *v17;
  id v18;

  v2 = v1;
  v5 = v1[6];
  v4 = v1[7];
  v7 = v1[14];
  v6 = v1[15];
  v8 = v7 == v5 && v6 == v4;
  if (v8 || (sub_1BC2B53CC() & 1) == 0)
    return sub_1BC0FF670((uint64_t)v1, (uint64_t)a1);
  v17 = *v1;
  v9 = (uint64_t)v1[4];
  v10 = v1[5];
  __swift_project_boxed_opaque_existential_0(v1 + 1, v9);
  v16 = (void (*)(uint64_t, _QWORD *))v10[5];
  v18 = v17;
  v16(v9, v10);
  sub_1BC0E79F0((uint64_t)(v1 + 16), (uint64_t)(a1 + 8));
  sub_1BC0E79F0((uint64_t)(v1 + 8), (uint64_t)(a1 + 16));
  v11 = v1[22];
  v12 = v1[23];
  v14 = v2[24];
  v13 = v2[25];
  *a1 = v18;
  a1[6] = v7;
  a1[7] = v6;
  a1[13] = 0;
  a1[14] = v5;
  a1[15] = v4;
  a1[21] = 0;
  a1[22] = v11;
  a1[23] = v12;
  a1[24] = v14;
  a1[25] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC0FF670(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InteractionResultDetailDataProvider(a2, a1);
  return a2;
}

uint64_t sub_1BC0FF6A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 8, a1);
}

uint64_t sub_1BC0FF6C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC0FF6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 64, a1);
}

uint64_t sub_1BC0FF708()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC0FF710()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC0FF73C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 128, a1);
}

uint64_t sub_1BC0FF758()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC0FF760()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC0FF78C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.interactionResult.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.stackedMedmojiDisplayable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.firstItemName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.firstItemDetailsProviding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.firstItemIngredients.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.secondItemName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.secondItemDetailsProviding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.secondItemIngredients.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.education.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.attributions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t destroy for InteractionResultDetailDataProvider(id *a1)
{

  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 1));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InteractionResultDetailDataProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  v12 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v12;
  v13 = v12;
  v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  swift_bridgeObjectRetain();
  v14(a1 + 64, a2 + 64, v13);
  v15 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v16 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v16;
  v17 = v16;
  v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(a1 + 128, a2 + 128, v17);
  v19 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v19;
  v20 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v20;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InteractionResultDetailDataProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for InteractionResultDetailDataProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 64);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 128);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v9 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionResultDetailDataProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractionResultDetailDataProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionResultDetailDataProvider()
{
  return &type metadata for InteractionResultDetailDataProvider;
}

uint64_t sub_1BC0FFDE8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC0FFE3C()
{
  sub_1BC0FFDE8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractionResultDetailDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BC0FFE7C()
{
  return sub_1BC0FFEA0();
}

uint64_t sub_1BC0FFEA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE v12[40];
  _BYTE v13[40];
  _BYTE v14[40];

  sub_1BC0E8710();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92D0;
  v2 = v0[2];
  sub_1BC0E79F0((uint64_t)(v0 + 3), (uint64_t)v14);
  v3 = v0[8];
  v4 = v0[9];
  sub_1BC0E79F0((uint64_t)(v0 + 10), (uint64_t)v13);
  v5 = v0[15];
  v6 = v0[16];
  v7 = v0[17];
  sub_1BC0E79F0((uint64_t)(v0 + 18), (uint64_t)v12);
  v8 = v0[23];
  type metadata accessor for InteractionDetailDataSource();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1BC277B18(v2, (uint64_t)v14, v3, v4, (uint64_t)v13, v5, v6, v7, (uint64_t)v12, v8);
  v10 = sub_1BC10000C();
  *(_QWORD *)(v1 + 32) = v9;
  *(_QWORD *)(v1 + 40) = v10;
  return v1;
}

unint64_t sub_1BC0FFFBC()
{
  unint64_t result;

  result = qword_1EF3F8998;
  if (!qword_1EF3F8998)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3F8998);
  }
  return result;
}

unint64_t sub_1BC10000C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F94F0;
  if (!qword_1EF3F94F0)
  {
    v1 = type metadata accessor for InteractionDetailDataSource();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2F070], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F94F0);
  }
  return result;
}

uint64_t InteractionSeperatorLineDataSource.__allocating_init()()
{
  swift_allocObject();
  return InteractionSeperatorLineDataSource.init()();
}

uint64_t InteractionSeperatorLineDataSource.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  __int128 v11;

  v0 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC100284(0, (unint64_t *)&qword_1EF3F8C50, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  sub_1BC2B2BC4();
  v4 = swift_allocObject();
  v11 = xmmword_1BC2B92D0;
  *(_OWORD *)(v4 + 16) = xmmword_1BC2B92D0;
  sub_1BC100284(0, (unint64_t *)&qword_1EDA0FE38, (void (*)(uint64_t))sub_1BC0E1B94);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = v11;
  v6 = type metadata accessor for InteractionSeparatorLineItem();
  v7 = swift_allocObject();
  sub_1BC2B242C();
  v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1BC0E519C(&qword_1EF3F94F8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell, (uint64_t)&protocol conformance descriptor for InteractionSeparatorLineCell);
  *v8 = sub_1BC2B2930();
  v8[1] = v9;
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = sub_1BC0E519C(&qword_1EF3F9500, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeparatorLineItem, (uint64_t)&protocol conformance descriptor for InteractionSeparatorLineItem);
  *(_QWORD *)(v5 + 32) = v7;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC2B2BAC();
  return sub_1BC2B2750();
}

void sub_1BC100284(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC2B53A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC1002D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  void (*v7)(_BYTE *, _QWORD);
  _QWORD *v8;
  void (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t);
  _BYTE v14[32];

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v2);
  v6 = &v14[-v5];
  sub_1BC2B2CC0();
  v7 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *v8 = 0x4024000000000000;
  v7(v14, 0);
  v9 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *(_QWORD *)(v10 + 16) = 0;
  v9(v14, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
  v11 = sub_1BC2B2D14();
  v12 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v6, v0);
  return v11;
}

void InteractionSeperatorLineDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionSeperatorLineDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t InteractionSeperatorLineDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC10045C()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionSeperatorLineDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionSeperatorLineDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1BC0E519C(&qword_1EF3F94F8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell, (uint64_t)&protocol conformance descriptor for InteractionSeparatorLineCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC1004FC()
{
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1BC0E519C(&qword_1EF3F94F8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell, (uint64_t)&protocol conformance descriptor for InteractionSeparatorLineCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC100550()
{
  return sub_1BC0E519C(&qword_1EF3F9508, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeperatorLineDataSource, (uint64_t)&protocol conformance descriptor for InteractionSeperatorLineDataSource);
}

uint64_t type metadata accessor for InteractionSeperatorLineDataSource()
{
  uint64_t result;

  result = qword_1EF3F9510;
  if (!qword_1EF3F9510)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1005B8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSeperatorLineDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSeperatorLineDataSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for InteractionSeperatorLineDataSource))();
}

uint64_t dispatch thunk of InteractionSeperatorLineDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSeperatorLineDataSource + *v0 + 8))();
}

uint64_t sub_1BC100628()
{
  return type metadata accessor for InteractionSeperatorLineDataSource();
}

uint64_t MedicationsAsNeededDoseDataSource.__allocating_init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  return MedicationsAsNeededDoseDataSource.init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)(a1, a2, a3, a4, a5);
}

uint64_t MedicationsAsNeededDoseDataSource.init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD v23[2];

  v6 = v5;
  v12 = sub_1BC2B2438();
  v20 = *(_QWORD *)(v12 - 8);
  v21 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t *)(v6 + qword_1EF3F9560);
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)(v6 + qword_1EF3F9568) = 0;
  *(_QWORD *)(v6 + qword_1EF3F9570) = a1;
  *(_QWORD *)(v6 + qword_1EF3F9578) = a2;
  *(_QWORD *)(v6 + qword_1EF3F9580) = a3;
  v16 = *v15;
  *v15 = a4;
  v15[1] = a5;
  v22 = a1;
  swift_retain();
  swift_retain();
  sub_1BC0F2690(a4);
  sub_1BC0F2600(v16);
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v23, "MutableArray<");
  HIWORD(v23[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v17 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC100880();
  sub_1BC0F2600(a4);
  swift_release();

  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_1BC100880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  void *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v26 - v2;
  sub_1BC101694();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1017A0();
  v27 = v8;
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC101924();
  v12 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  v31 = v12;
  MEMORY[0x1E0C80A78](v11);
  v26 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (id)sub_1BC2B3950();
  v14 = (void (*)(uint64_t))MEMORY[0x1E0D2EFE8];
  sub_1BC101888(0, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
  sub_1BC10173C();
  sub_1BC1018E4((unint64_t *)&qword_1EDA0FB58, (unint64_t *)&qword_1EDA0FB60, v14);
  sub_1BC2B4004();
  swift_release();
  sub_1BC0E519C(&qword_1EDA0FB18, (uint64_t (*)(uint64_t))sub_1BC101694, MEMORY[0x1E0C95950]);
  v15 = (void *)sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v32 = *(_QWORD *)(v0 + qword_1EF3F9580);
  v33 = v15;
  sub_1BC101888(0, &qword_1EDA0FB90, (void (*)(uint64_t))sub_1BC10173C);
  v16 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC101888(0, &qword_1EDA0FB40, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC1018E4(&qword_1EDA0FB88, &qword_1EDA0FB90, (void (*)(uint64_t))sub_1BC10173C);
  sub_1BC1018E4(&qword_1EDA0FB38, &qword_1EDA0FB40, v16);
  sub_1BC2B3FF8();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v33 = (id)sub_1BC2B4A0C();
  v17 = sub_1BC2B49C4();
  v18 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v28, 1, 1, v17);
  sub_1BC0E519C(&qword_1EDA0FAF8, (uint64_t (*)(uint64_t))sub_1BC1017A0, MEMORY[0x1E0C95698]);
  sub_1BC1019D8();
  v20 = v26;
  v19 = v27;
  sub_1BC2B4064();
  sub_1BC101BB8(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v19);
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1BC101C30;
  *(_QWORD *)(v22 + 24) = v21;
  sub_1BC0E519C(&qword_1EDA0FB28, (uint64_t (*)(uint64_t))sub_1BC101924, MEMORY[0x1E0C95CB8]);
  v23 = v30;
  v24 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v23);
  *(_QWORD *)(v0 + qword_1EF3F9568) = v24;
  return swift_release();
}

uint64_t sub_1BC100CA8(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  int v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void (*v50)(char *, uint64_t, uint64_t);
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a2;
  v3 = sub_1BC2B2594();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B23F0();
  v54 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v46 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v52 = (char *)&v46 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v46 - v16;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = result;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v21 = v54;
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    v50(v17, v53, v7);
    if (v20)
    {
      sub_1BC2B2564();
      sub_1BC2B23E4();
      sub_1BC2B24B0();
      v22 = *(void (**)(char *, uint64_t))(v21 + 8);
      v22(v10, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v23 = v19;
      v24 = v52;
      sub_1BC2B2354();
      v22(v13, v7);
      v25 = sub_1BC2B236C();
      v26 = v24;
      v19 = v23;
      v22(v26, v7);
      v51 = v25 ^ 1;
    }
    else
    {
      v51 = 0;
      v22 = *(void (**)(char *, uint64_t))(v21 + 8);
    }
    v22(v17, v7);
    sub_1BC0E7998(0, &qword_1EDA0FE48, type metadata accessor for MedicationsRecordDoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v27 = (int *)type metadata accessor for MedicationsRecordDoseItem(0);
    v28 = *(unsigned __int8 *)(*((_QWORD *)v27 - 1) + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1BC2B92D0;
    v31 = v30 + v29;
    v32 = qword_1EDA0FEE8;
    v49 = *(id *)(v19 + qword_1EF3F9570);
    if (v32 != -1)
      swift_once();
    v33 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v34 = sub_1BC2B2144();
    v46 = v35;
    v47 = v34;
    swift_bridgeObjectRelease();

    v36 = *(_QWORD *)(v19 + qword_1EF3F9578);
    v37 = v19;
    v48 = v19;
    v38 = v52;
    v50(v52, v53, v7);
    v40 = *(_QWORD *)(v37 + qword_1EF3F9560);
    v39 = *(_QWORD *)(v37 + qword_1EF3F9560 + 8);
    swift_retain();
    sub_1BC0F2690(v40);
    sub_1BC2B242C();
    v41 = (uint64_t *)(v31 + v27[5]);
    type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
    sub_1BC0E519C(&qword_1EDA0F960, type metadata accessor for MedicationsRecordDoseCollectionViewCell, (uint64_t)&unk_1BC2BD050);
    *v41 = sub_1BC2B2930();
    v41[1] = v42;
    v43 = (uint64_t *)(v31 + v27[11]);
    *(_QWORD *)(v31 + v27[7]) = v49;
    *(_QWORD *)(v31 + v27[8]) = v36;
    v44 = (uint64_t *)(v31 + v27[6]);
    v45 = v46;
    *v44 = v47;
    v44[1] = v45;
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v31 + v27[9], v38, v7);
    *(_BYTE *)(v31 + v27[10]) = v51 & 1;
    *v43 = v40;
    v43[1] = v39;
    sub_1BC0F7CBC(v30);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1BC2B2C24();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void MedicationsAsNeededDoseDataSource.__allocating_init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationsAsNeededDoseDataSource.init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1011A0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1BC0F2600(*(_QWORD *)(v0 + qword_1EF3F9560));
  return swift_release();
}

uint64_t MedicationsAsNeededDoseDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();

  swift_release();
  swift_release();
  sub_1BC0F2600(*(_QWORD *)(v0 + qword_1EF3F9560));
  swift_release();
  return v0;
}

uint64_t MedicationsAsNeededDoseDataSource.__deallocating_deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();

  swift_release();
  swift_release();
  sub_1BC0F2600(*(_QWORD *)(v0 + qword_1EF3F9560));
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall MedicationsAsNeededDoseDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
  sub_1BC0E519C(&qword_1EDA0F960, type metadata accessor for MedicationsRecordDoseCollectionViewCell, (uint64_t)&unk_1BC2BD050);
  sub_1BC2B497C();
}

uint64_t sub_1BC10134C()
{
  type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
  sub_1BC0E519C(&qword_1EDA0F960, type metadata accessor for MedicationsRecordDoseCollectionViewCell, (uint64_t)&unk_1BC2BD050);
  return sub_1BC2B497C();
}

void *MedicationsAsNeededDoseDataSource.layout(for:environment:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v7;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  sub_1BC2B2CCC();
  v5 = (void *)sub_1BC2B2D14();
  objc_msgSend(v5, sel_contentInsets);
  objc_msgSend(v5, sel_setContentInsets_, -10.0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_1BC10146C()
{
  return sub_1BC0E519C(&qword_1EF3F9588, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsAsNeededDoseDataSource, (uint64_t)&protocol conformance descriptor for MedicationsAsNeededDoseDataSource);
}

uint64_t type metadata accessor for MedicationsAsNeededDoseDataSource()
{
  uint64_t result;

  result = qword_1EF3F9590;
  if (!qword_1EF3F9590)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_1BC1014D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v7;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  sub_1BC2B2CCC();
  v5 = (void *)sub_1BC2B2D14();
  objc_msgSend(v5, sel_contentInsets);
  objc_msgSend(v5, sel_setContentInsets_, -10.0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_1BC1015A0()
{
  sub_1BC0E519C(&qword_1EF3F95E0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsAsNeededDoseDataSource, (uint64_t)&protocol conformance descriptor for MedicationsAsNeededDoseDataSource);
  return sub_1BC2B3074();
}

uint64_t sub_1BC1015FC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsAsNeededDoseDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationsAsNeededDoseDataSource.__allocating_init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsAsNeededDoseDataSource + v0 + 40))();
}

uint64_t sub_1BC10168C()
{
  return type metadata accessor for MedicationsAsNeededDoseDataSource();
}

void sub_1BC101694()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDA0FB20)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x1E0D2EFE8];
    sub_1BC101888(255, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
    sub_1BC10173C();
    sub_1BC1018E4((unint64_t *)&qword_1EDA0FB58, (unint64_t *)&qword_1EDA0FB60, v0);
    v1 = sub_1BC2B3DF4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDA0FB20);
  }
}

void sub_1BC10173C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FC60)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDA0);
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FC60);
  }
}

void sub_1BC1017A0()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDA0FB00)
  {
    sub_1BC101888(255, &qword_1EDA0FB90, (void (*)(uint64_t))sub_1BC10173C);
    v0 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BC101888(255, &qword_1EDA0FB40, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BC1018E4(&qword_1EDA0FB88, &qword_1EDA0FB90, (void (*)(uint64_t))sub_1BC10173C);
    sub_1BC1018E4(&qword_1EDA0FB38, &qword_1EDA0FB40, v0);
    v1 = sub_1BC2B3D64();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDA0FB00);
  }
}

void sub_1BC101888(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC2B3E78();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC1018E4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC101888(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC101924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FB30)
  {
    sub_1BC1017A0();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EDA0FAF8, (uint64_t (*)(uint64_t))sub_1BC1017A0, MEMORY[0x1E0C95698]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FB30);
  }
}

unint64_t sub_1BC1019D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FCC8;
  if (!qword_1EDA0FCC8)
  {
    v1 = sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FCC8);
  }
  return result;
}

uint64_t sub_1BC101A30@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1BC2B395C();
  v3 = v2;
  v10 = MEMORY[0x1E0DEE9D8];
  if (!(v2 >> 62))
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    result = swift_bridgeObjectRelease();
    *a1 = v9;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v4 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCEE950](i, v3);
      else
        v7 = *(id *)(v3 + 8 * i + 32);
      v8 = v7;
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v9 = v10;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC101BB8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC101C0C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC101C30(unint64_t a1, uint64_t a2)
{
  return sub_1BC100CA8(a1, a2);
}

uint64_t sub_1BC101C38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC101C5C(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  sub_1BC101CA0();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_1BC101CA0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDA0FC68)
  {
    sub_1BC10173C();
    sub_1BC2B23F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDA0FC68);
  }
}

void sub_1BC101D0C(char *a1, uint64_t a2, void *a3)
{
  uint64_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v5 = (uint64_t *)&a1[qword_1EF3F95E8];
  v8 = sub_1BC2B4460();
  v9 = v6;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v7 = a3;
  swift_bridgeObjectRelease();
  *v5 = v8;
  v5[1] = v9;

  sub_1BC2B52B8();
  __break(1u);
}

Swift::Void __swiftcall MedicationSideEffectsViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1BC101E1C();
}

void sub_1BC101E1C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v2, 0xE000000000000000);

  v3 = objc_msgSend(v0, sel_collectionView);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    v6 = objc_msgSend(v0, sel_collectionView);
    if (v6)
    {
      v7 = v6;
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      v8 = (id)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC102000(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_1BC101E1C();

}

void MedicationSideEffectsViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationSideEffectsViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationSideEffectsViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationSideEffectsViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC102118(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC102148()
{
  return swift_bridgeObjectRelease();
}

id MedicationSideEffectsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationSideEffectsViewController()
{
  uint64_t result;

  result = qword_1EF3F95F0;
  if (!qword_1EF3F95F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1021CC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationSideEffectsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC102220()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC102234()
{
  return type metadata accessor for MedicationSideEffectsViewController();
}

id sub_1BC10223C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_1BC102248(a1, a2, a3);
  else
    return (id)a1;
}

id sub_1BC102248(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

void destroy for StrengthStepResult(uint64_t a1)
{
  sub_1BC10228C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1BC10228C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if ((a4 & 1) != 0)
    sub_1BC102298(a1, a2, a3);
  else

}

void sub_1BC102298(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t initializeWithCopy for StrengthStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BC10223C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for StrengthStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BC10223C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BC10228C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StrengthStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BC10228C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StrengthStepResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StrengthStepResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC102480(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1BC102488(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StrengthStepResult()
{
  return &type metadata for StrengthStepResult;
}

uint64_t sub_1BC1024A4(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_1BC2B53CC() & 1) == 0)
    return 0;
  sub_1BC102870();
  return sub_1BC2B4D84() & 1;
}

uint64_t sub_1BC102514()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1BC2B5450();
  sub_1BC2B44D8();
  v2 = v1;
  sub_1BC2B4D90();

  return sub_1BC2B548C();
}

void sub_1BC10257C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1BC2B44D8();
  v2 = v1;
  sub_1BC2B4D90();

}

uint64_t sub_1BC1025C8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1BC2B5450();
  sub_1BC2B44D8();
  v2 = v1;
  sub_1BC2B4D90();

  return sub_1BC2B548C();
}

uint64_t sub_1BC10262C(uint64_t a1, uint64_t a2)
{
  return sub_1BC102650(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(void **)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t sub_1BC102650(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, void *a7, char a8)
{
  uint64_t v12;
  char v14;
  uint64_t v16;
  char v17;

  v12 = a2;
  if ((a4 & 1) == 0)
  {
    if ((a8 & 1) == 0)
    {
      sub_1BC102870();
      sub_1BC10223C(a1, v12, a3, 0);
      sub_1BC10223C(a5, a6, a7, 0);
      v14 = sub_1BC2B4D84();
      sub_1BC10228C(a5, a6, a7, 0);
      sub_1BC10228C(a1, v12, a3, 0);
      return v14 & 1;
    }
    return 0;
  }
  if ((a8 & 1) == 0)
    return 0;
  if (a2)
  {
    if (a6)
    {
      if (a1 == a5 && a2 == a6 || (sub_1BC2B53CC() & 1) != 0)
      {
        sub_1BC102870();
        v16 = 1;
        sub_1BC10223C(a1, v12, a3, 1);
        sub_1BC10223C(a1, v12, a3, 1);
        sub_1BC10223C(a5, a6, a7, 1);
        v17 = sub_1BC2B4D84();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BC10228C(a1, v12, a3, 1);
        if ((v17 & 1) != 0)
          return v16;
        return 0;
      }
      sub_1BC10223C(a1, v12, a3, 1);
      sub_1BC10223C(a1, v12, a3, 1);
      sub_1BC10223C(a5, a6, a7, 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    return 0;
  }
  if (a6)
  {
    v12 = 0;
LABEL_16:
    sub_1BC10228C(a1, v12, a3, 1);
    return 0;
  }
  sub_1BC102248(a5, 0, a7);
  return 1;
}

unint64_t sub_1BC102870()
{
  unint64_t result;

  result = qword_1EF3FBD20;
  if (!qword_1EF3FBD20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FBD20);
  }
  return result;
}

void destroy for ManualMedicationStrength(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s19HealthMedicationsUI24ManualMedicationStrengthVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for ManualMedicationStrength(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ManualMedicationStrength(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ManualMedicationStrength(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManualMedicationStrength(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManualMedicationStrength()
{
  return &type metadata for ManualMedicationStrength;
}

unint64_t sub_1BC102A64()
{
  unint64_t result;

  result = qword_1EF3F9640;
  if (!qword_1EF3F9640)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BA2DC, &type metadata for ManualMedicationStrength);
    atomic_store(result, (unint64_t *)&qword_1EF3F9640);
  }
  return result;
}

uint64_t sub_1BC102AA8()
{
  void *v0;
  id v1;
  uint64_t v2;

  switch((unint64_t)objc_msgSend(v0, sel_status))
  {
    case 1uLL:
      if (qword_1EDA0FEE8 != -1)
        goto LABEL_16;
      goto LABEL_14;
    case 2uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_14;
      goto LABEL_16;
    case 3uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_14;
      goto LABEL_16;
    case 4uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_14;
      goto LABEL_16;
    case 5uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_14;
      goto LABEL_16;
    case 6uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_14;
LABEL_16:
      swift_once();
LABEL_14:
      v1 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v2 = sub_1BC2B2144();
      swift_bridgeObjectRelease();
      break;
    default:
      objc_msgSend(v0, sel_status);
      v1 = (id)HKMedicationDoseEventStatusToString();
      v2 = sub_1BC2B4460();
      break;
  }

  return v2;
}

void UIViewController.showIncompatibleWatchAlertIfNeeded(for:okHandler:cancelHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t ObjectType;
  id v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  ObjectType = swift_getObjectType();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C4C0]), sel_init);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  v13[6] = v5;
  v13[7] = ObjectType;
  v16[4] = sub_1BC0E5278;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1BC1036D8;
  v16[3] = &block_descriptor_2;
  v14 = _Block_copy(v16);
  sub_1BC0F2690(a2);
  sub_1BC0F2690(a4);
  v15 = v5;
  swift_release();
  objc_msgSend(v12, sel_checkIncompatibilityForSchedule_completion_, a1, v14);
  _Block_release(v14);

}

void UIViewController.presentAsFormSheetWithNavigationController(viewController:isModalInPresentation:leadingAction:trailingAction:)(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  id v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  _QWORD *v19;
  id v20;
  void *v21;
  _QWORD *v22;
  _QWORD *v23;
  id v24;

  v7 = v6;
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, a1);
  if (a3)
  {
    swift_retain();
    v14 = objc_msgSend(a1, sel_navigationItem);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
    sub_1BC0E1D38(0, &qword_1EF3F90D8);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a3;
    v15[3] = a4;
    v15[4] = v24;
    sub_1BC0F2690(a3);
    v16 = v24;
    v22 = v15;
    sub_1BC2B4DA8();
    v17 = (void *)sub_1BC2B4928();
    objc_msgSend(v14, sel_setLeftBarButtonItem_, v17, 0, 0, 0, sub_1BC103750, v22);

    v7 = v6;
    sub_1BC0F2600(a3);
  }
  if (a5)
  {
    swift_retain();
    v18 = objc_msgSend(a1, sel_navigationItem);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
    sub_1BC0E1D38(0, &qword_1EF3F90D8);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a5;
    v19[3] = a6;
    v19[4] = v24;
    v20 = v24;
    sub_1BC0F2690(a5);
    v23 = v19;
    sub_1BC2B4DA8();
    v21 = (void *)sub_1BC2B4928();
    objc_msgSend(v18, sel_setRightBarButtonItem_, v21, 0, 0, 0, sub_1BC103750, v23);

    sub_1BC0F2600(a5);
  }
  objc_msgSend(v24, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v24, sel_setModalInPresentation_, a2 & 1);
  objc_msgSend(v7, sel_presentViewController_animated_completion_, v24, 1, 0);

}

void sub_1BC103208(void *a1, void *a2, uint64_t (**a3)(char *, uint64_t), void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13;
  uint64_t (**v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (**v42)(char *, uint64_t);
  id v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a4;
  v13 = sub_1BC2B39E0();
  v14 = *(uint64_t (***)(char *, uint64_t))(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v18 = a2;
    sub_1BC2B39A4();
    v19 = a2;
    v20 = a2;
    v21 = sub_1BC2B39D4();
    v22 = sub_1BC2B48C8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v45 = v24;
      *(_DWORD *)v23 = 136446466;
      v42 = a3;
      v25 = sub_1BC2B54F8();
      v44 = sub_1BC12540C(v25, v26, &v45);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v44 = (uint64_t)a2;
      v27 = a2;
      sub_1BC0F6274();
      v28 = sub_1BC2B4490();
      v44 = sub_1BC12540C(v28, v29, &v45);
      a3 = v42;
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC0DC000, v21, v22, "[%{public}s]: Error: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v24, -1, -1);
      MEMORY[0x1BCCEF3A0](v23, -1, -1);
    }
    else
    {

    }
    v39 = v14[1](v17, v13);
    if (a3)
      ((void (*)(uint64_t))a3)(v39);

    return;
  }
  if (a1)
  {
    v30 = a1;
    v31 = objc_msgSend(v30, sel_incompatibleDevices);
    sub_1BC0E1D38(0, &qword_1EF3F9650);
    v32 = sub_1BC2B458C();

    if (v32 >> 62)
    {
      v14 = a3;
      swift_bridgeObjectRetain();
      v40 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v40)
        goto LABEL_7;
    }
    else if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_7:
      if ((v32 & 0xC000000000000001) != 0)
      {
        v33 = (id)MEMORY[0x1BCCEE950](0, v32);
        goto LABEL_10;
      }
      if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v33 = *(id *)(v32 + 32);
LABEL_10:
        v34 = v33;
        swift_bridgeObjectRelease();
        v35 = objc_msgSend(v34, sel_deviceName);

        v36 = sub_1BC2B4460();
        v38 = v37;
LABEL_21:

        v43 = _sSo17UIAlertControllerC19HealthMedicationsUIE46makeAlertForMedicationWithIncompatibleSchedule10deviceName9okHandler06cancelP0ABSS_yycSgAHtFZ_0(v36, v38, (uint64_t)a3, (uint64_t)v43, a5, a6);
        swift_bridgeObjectRelease();
        objc_msgSend(a7, sel_presentViewController_animated_completion_, v43, 1, 0);

        return;
      }
      __break(1u);
      goto LABEL_24;
    }
    v14 = a3;
    swift_bridgeObjectRelease();
    if (qword_1EDA0FEE8 == -1)
    {
LABEL_20:
      v35 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v36 = sub_1BC2B2144();
      v38 = v41;
      swift_bridgeObjectRelease();
      a3 = v14;
      goto LABEL_21;
    }
LABEL_24:
    swift_once();
    goto LABEL_20;
  }
  if (a3)
    ((void (*)(uint64_t))a3)(v15);
}

uint64_t sub_1BC103694()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();

  return swift_deallocObject();
}

void sub_1BC1036D8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC103784()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

__n128 sub_1BC1037AC()
{
  __n128 result;

  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EF402510 = (__int128)result;
  *(__n128 *)&qword_1EF402520 = result;
  return result;
}

uint64_t sub_1BC1037C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC104464();
  return sub_1BC0E1CFC((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC103858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC1038B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC104464();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void (*sub_1BC103934(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC10397C;
}

void sub_1BC10397C(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC104464();
}

id sub_1BC1039AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___medicationView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___medicationView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___medicationView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC103A40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = sub_1BC103A9C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC103A9C()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v7 = sub_1BC2B4460();
  v8 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v7, v8);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v4 = (void *)sub_1BC2B4C64();
  objc_msgSend(v2, sel_setFont_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

void sub_1BC103DF4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  _QWORD v56[2];

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v56 - v6;
  v8 = objc_msgSend(v0, sel_contentView);
  v9 = sub_1BC1039AC();
  objc_msgSend(v8, sel_addSubview_, v9);

  v10 = objc_msgSend(v1, sel_contentView);
  v11 = sub_1BC103A40();
  objc_msgSend(v10, sel_addSubview_, v11);

  sub_1BC2B3B24();
  v12 = sub_1BC2B3B48();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  v14 = MEMORY[0x1BCCEE23C](v7);
  MEMORY[0x1BCCEE230](v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12))
  {
    v15 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC0E1CB0((uint64_t)v5, (uint64_t)v7, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCEE23C](v7);
    sub_1BC0E1CFC((uint64_t)v5, &qword_1EDA0FAF0, v15);
  }
  else
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_quaternarySystemFillColor);
    sub_1BC2B3B18();
    MEMORY[0x1BCCEE23C](v5);
  }
  v17 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC2BA310;
  v19 = sub_1BC1039AC();
  v20 = objc_msgSend(v19, sel_leadingAnchor);

  v21 = objc_msgSend(v1, sel_contentView);
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  if (qword_1EF3F8090 != -1)
    swift_once();
  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, *((double *)&xmmword_1EF402510 + 1));

  *(_QWORD *)(v18 + 32) = v23;
  v24 = sub_1BC1039AC();
  v25 = objc_msgSend(v24, sel_topAnchor);

  v26 = objc_msgSend(v1, sel_contentView);
  v27 = objc_msgSend(v26, sel_topAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, *(double *)&xmmword_1EF402510);
  *(_QWORD *)(v18 + 40) = v28;
  v29 = sub_1BC1039AC();
  v30 = objc_msgSend(v29, sel_bottomAnchor);

  v31 = objc_msgSend(v1, sel_contentView);
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, -*(double *)&qword_1EF402520);
  *(_QWORD *)(v18 + 48) = v33;
  v34 = sub_1BC1039AC();
  v35 = objc_msgSend(v34, sel_widthAnchor);

  v36 = objc_msgSend(v35, sel_constraintEqualToConstant_, 44.0);
  *(_QWORD *)(v18 + 56) = v36;
  v37 = sub_1BC1039AC();
  v38 = objc_msgSend(v37, sel_heightAnchor);

  v39 = objc_msgSend(v38, sel_constraintEqualToConstant_, 44.0);
  *(_QWORD *)(v18 + 64) = v39;
  v40 = sub_1BC103A40();
  v41 = objc_msgSend(v40, sel_leadingAnchor);

  v42 = sub_1BC1039AC();
  v43 = objc_msgSend(v42, sel_trailingAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 16.0);
  *(_QWORD *)(v18 + 72) = v44;
  v45 = sub_1BC103A40();
  v46 = objc_msgSend(v45, sel_centerYAnchor);

  v47 = objc_msgSend(v1, sel_contentView);
  v48 = objc_msgSend(v47, sel_centerYAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(_QWORD *)(v18 + 80) = v49;
  v50 = sub_1BC103A40();
  v51 = objc_msgSend(v50, sel_trailingAnchor);

  v52 = objc_msgSend(v1, sel_contentView);
  v53 = objc_msgSend(v52, sel_trailingAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, -*(double *)&qword_1EF402528);
  *(_QWORD *)(v18 + 88) = v54;
  v56[1] = v18;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v55 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_activateConstraints_, v55);

}

void sub_1BC104464()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v6);
  v7 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v7, (uint64_t)v24, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v24[3])
  {
    sub_1BC0E1B94();
    type metadata accessor for InteractionNotCheckedItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v8 = v23;
      v9 = sub_1BC1039AC();
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      sub_1BC2B3308();

      v10 = sub_1BC103A40();
      v24[0] = *(_QWORD *)(v8 + 16);
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      sub_1BC2B3758();
      v11 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v11);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v24, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  }
  sub_1BC2B39A4();
  v12 = v1;
  v13 = sub_1BC2B39D4();
  v14 = sub_1BC2B48C8();
  if (os_log_type_enabled(v13, v14))
  {
    v22 = v2;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v21 = v3;
    v17 = v16;
    v23 = v16;
    *(_DWORD *)v15 = 136446210;
    v20 = v15 + 4;
    sub_1BC0E1CB0(v7, (uint64_t)v24, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v18 = sub_1BC2B4490();
    v24[0] = sub_1BC12540C(v18, v19, &v23);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v13, v14, "Incorrect view model for InteractionFactorsItem: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v17, -1, -1);
    MEMORY[0x1BCCEF3A0](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t type metadata accessor for InteractionNotCheckedCell()
{
  return objc_opt_self();
}

id InteractionNotCheckedCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionNotCheckedCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC104878@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t method lookup function for InteractionNotCheckedCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionNotCheckedCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionNotCheckedCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionNotCheckedCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1BC104940(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    sub_1BC2B3E9C();
    sub_1BC0E519C(&qword_1EF3F9718, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    result = sub_1BC2B47E4();
    v1 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v13 >= v9)
      return sub_1BC1061A8();
    v14 = *(_QWORD *)(v17 + 8 * v13);
    v12 = v4 + 1;
    if (!v14)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        return sub_1BC1061A8();
      v14 = *(_QWORD *)(v17 + 8 * v12);
      if (!v14)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          return sub_1BC1061A8();
        v14 = *(_QWORD *)(v17 + 8 * v12);
        if (!v14)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            return sub_1BC1061A8();
          v14 = *(_QWORD *)(v17 + 8 * v12);
          if (!v14)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              return sub_1BC1061A8();
            v14 = *(_QWORD *)(v17 + 8 * v12);
            if (!v14)
            {
              v15 = v4 + 6;
              while (v9 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1BC1061A8();
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16)
      return sub_1BC1061A8();
    while (1)
    {
      sub_1BC2B3E90();
      result = swift_release();
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC2B512C())
      {
        sub_1BC2B3E9C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v23)
          continue;
      }
      return sub_1BC1061A8();
    }
  }
  __break(1u);
  return result;
}

uint64_t RelatedCHRRecordsDataSource.__allocating_init(with:healthStore:)(void *a1, void *a2)
{
  swift_allocObject();
  return RelatedCHRRecordsDataSource.init(with:healthStore:)(a1, a2);
}

uint64_t RelatedCHRRecordsDataSource.init(with:healthStore:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v3 = v2;
  v6 = qword_1EF3F9698;
  sub_1BC2B2720();
  swift_retain();
  v7 = (void *)sub_1BC2B2714();
  v8 = sub_1BC2B2708();

  *(_QWORD *)(v3 + v6) = v8;
  *(_QWORD *)(v3 + qword_1EF3F96A0) = MEMORY[0x1E0DEE9E8];
  sub_1BC2B36F8();
  swift_allocObject();
  v9 = a2;
  *(_QWORD *)(v3 + qword_1EF3F96A8) = sub_1BC2B36EC();
  type metadata accessor for ClinicalRecordsMedicationsProvider();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v3 + qword_1EF3F96B0) = v10;
  v11 = v9;
  swift_release();
  v12 = sub_1BC2B2750();
  swift_retain();
  sub_1BC104D44(a1);
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1BC104D44(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v43 = (char *)&v32 - v3;
  sub_1BC1061B0();
  v5 = v4;
  v33 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC10647C();
  v9 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  v37 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC106520();
  v13 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  v39 = v13;
  MEMORY[0x1E0C80A78](v12);
  v34 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC106674();
  v16 = *(_QWORD *)(v15 - 8);
  v41 = v15;
  v42 = v16;
  MEMORY[0x1E0C80A78](v15);
  v35 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1066EC();
  v19 = *(_QWORD *)(v18 - 8);
  v44 = v18;
  v45 = v19;
  MEMORY[0x1E0C80A78](v18);
  v40 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  swift_retain();
  sub_1BC2B3E6C();
  sub_1BC106408();
  sub_1BC106278();
  sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
  sub_1BC0E519C(&qword_1EF3F9750, (uint64_t (*)(uint64_t))sub_1BC106278, MEMORY[0x1E0C95D90]);
  sub_1BC2B40C4();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF400130);
  v21 = MEMORY[0x1E0C95B78];
  sub_1BC0E519C(&qword_1EF3F9768, (uint64_t (*)(uint64_t))sub_1BC1061B0, MEMORY[0x1E0C95B78]);
  sub_1BC2B3FC8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
  swift_retain();
  sub_1BC2B3E6C();
  sub_1BC106304(0, (unint64_t *)&qword_1EF3F9780, &qword_1EF3F9788, 0x1E0CB6858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC1065E8();
  sub_1BC0E519C(&qword_1EF3F9798, (uint64_t (*)(uint64_t))sub_1BC10647C, MEMORY[0x1E0C95708]);
  sub_1BC0E519C(&qword_1EF3F9790, (uint64_t (*)(uint64_t))sub_1BC1065E8, MEMORY[0x1E0C95D90]);
  v22 = v34;
  v23 = v36;
  sub_1BC2B404C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v23);
  v46 = (id)MEMORY[0x1E0DEE9D8];
  sub_1BC0E519C(&qword_1EF3F97A8, (uint64_t (*)(uint64_t))sub_1BC106520, v21);
  v24 = v35;
  v25 = v38;
  sub_1BC2B3FD4();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v25);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v46 = (id)sub_1BC2B4A0C();
  v26 = sub_1BC2B49C4();
  v27 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v43, 1, 1, v26);
  sub_1BC0E519C(&qword_1EF3F97B8, (uint64_t (*)(uint64_t))sub_1BC106674, MEMORY[0x1E0C957E8]);
  sub_1BC1019D8();
  v29 = v40;
  v28 = v41;
  sub_1BC2B4064();
  sub_1BC101BB8(v27);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v28);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3F97C0, (uint64_t (*)(uint64_t))sub_1BC1066EC, MEMORY[0x1E0C95CB8]);
  v30 = v44;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v30);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC1052DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BC2B36E0();
  sub_1BC106278();
  sub_1BC0E519C(&qword_1EF3F9750, (uint64_t (*)(uint64_t))sub_1BC106278, MEMORY[0x1E0C95D90]);
  v2 = sub_1BC2B3FBC();
  result = swift_release();
  *a1 = v2;
  return result;
}

id sub_1BC105364@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1BC105370(unint64_t *a1)
{
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    swift_retain();
    v4 = sub_1BC1067FC(v1, v3);
    swift_release();
    swift_retain();
    sub_1BC2B2744();
    swift_release();
    sub_1BC2B2A08();
    swift_release();
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC2B2BC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v5 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC0F7CE0(v4);
    swift_bridgeObjectRelease();
    sub_1BC2B2BAC();
    sub_1BC2B2C18();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC105594@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[6];

  v56 = a2;
  v3 = sub_1BC2B2FA8();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  MEMORY[0x1E0C80A78](v3);
  v53 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)v42 - v7;
  v8 = sub_1BC2B2C6C();
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  MEMORY[0x1E0C80A78](v8);
  v48 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v5);
  MEMORY[0x1E0C80A78](v10);
  v45 = (char *)v42 - v11;
  v12 = sub_1BC2B3A94();
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B3A34();
  v43 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC2B2438();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1BC2B3CD4();
  v42[0] = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3CC8();
  v24 = objc_msgSend(a1, sel_sourceRevision);
  v25 = objc_msgSend(v24, sel_source);

  v26 = objc_msgSend(v25, sel_name);
  sub_1BC2B4460();

  sub_1BC2B3C98();
  v27 = a1;
  v28 = objc_msgSend(a1, sel_UUID);
  sub_1BC2B2420();

  v42[2] = sub_1BC2B23FC();
  v42[1] = v29;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v30 = v57;
  v58[3] = v57;
  v58[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v58);
  v32 = v42[0];
  (*(void (**)(uint64_t *, char *, uint64_t))(v42[0] + 16))(boxed_opaque_existential_1, v23, v30);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v34 = v43;
  v33 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v17, *MEMORY[0x1E0DC1C20], v44);
  v35 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v45, 1, 1, v35);
  sub_1BC2B3A88();
  sub_1BC2B3A64();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v33);
  v36 = *(void **)(v52 + qword_1EF3F9698);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v27;
  *(_QWORD *)(v37 + 24) = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, *MEMORY[0x1E0D2B170], v50);
  v38 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v51, 1, 1, v38);
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, *MEMORY[0x1E0D2B8C8], v55);
  v39 = v36;
  v40 = v27;
  sub_1BC2B2D8C();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v23, v57);
}

void sub_1BC105AC0(void *a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  sub_1BC2B2828();
  v2 = (void *)sub_1BC2B281C();
  v5 = (id)sub_1BC2B2810();

  v3 = objc_msgSend(a1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_pushViewController_animated_, v5, 1);

  }
}

uint64_t sub_1BC105B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2C9C();
  v4 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC105BE0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t RelatedCHRRecordsDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC104940(v0);
  swift_bridgeObjectRelease();
  v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t RelatedCHRRecordsDataSource.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC104940(v0);
  swift_bridgeObjectRelease();
  v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void RelatedCHRRecordsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void RelatedCHRRecordsDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC105DE8()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for RelatedCHRRecordsDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall RelatedCHRRecordsDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  sub_1BC2B3038();
  sub_1BC2B497C();
}

uint64_t sub_1BC105E80()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  sub_1BC2B3038();
  return sub_1BC2B497C();
}

uint64_t RelatedCHRRecordsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;

  v2 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v2);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C68();
  v4 = sub_1BC2B28F4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v6 = sub_1BC2B28E8();
  a1[3] = v4;
  result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v5, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_1BC106050@<X0>(uint64_t *a1@<X8>)
{
  return RelatedCHRRecordsDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1BC106064()
{
  return sub_1BC0E519C(&qword_1EF3F96C0, (uint64_t (*)(uint64_t))type metadata accessor for RelatedCHRRecordsDataSource, (uint64_t)&protocol conformance descriptor for RelatedCHRRecordsDataSource);
}

uint64_t type metadata accessor for RelatedCHRRecordsDataSource()
{
  uint64_t result;

  result = qword_1EF3F96C8;
  if (!qword_1EF3F96C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1060CC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for RelatedCHRRecordsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RelatedCHRRecordsDataSource.__allocating_init(with:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for RelatedCHRRecordsDataSource + v0 + 128))();
}

uint64_t dispatch thunk of RelatedCHRRecordsDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for RelatedCHRRecordsDataSource + *v0 + 152))();
}

uint64_t sub_1BC10616C()
{
  return type metadata accessor for RelatedCHRRecordsDataSource();
}

uint64_t sub_1BC106174()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC1061A0(void *a1)
{
  sub_1BC105AC0(a1);
}

uint64_t sub_1BC1061A8()
{
  return swift_release();
}

void sub_1BC1061B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9720)
  {
    sub_1BC106278();
    sub_1BC106364();
    sub_1BC0E519C(&qword_1EF3F9750, (uint64_t (*)(uint64_t))sub_1BC106278, MEMORY[0x1E0C95D90]);
    sub_1BC0E519C(&qword_1EF3F9758, (uint64_t (*)(uint64_t))sub_1BC106364, MEMORY[0x1E0C95850]);
    v0 = sub_1BC2B3E24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9720);
  }
}

void sub_1BC106278()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9728)
  {
    sub_1BC106304(255, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC0F6274();
    v0 = sub_1BC2B3E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9728);
  }
}

void sub_1BC106304(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC0E1D38(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC106364()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9738)
  {
    sub_1BC106408();
    sub_1BC0F6274();
    sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
    v0 = sub_1BC2B3DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9738);
  }
}

void sub_1BC106408()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9740)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDA0);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9740);
  }
}

void sub_1BC10647C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9760)
  {
    sub_1BC1061B0();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EF400130);
    sub_1BC0E519C(&qword_1EF3F9768, (uint64_t (*)(uint64_t))sub_1BC1061B0, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9760);
  }
}

void sub_1BC106520()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9770)
  {
    sub_1BC1065E8();
    sub_1BC10647C();
    sub_1BC0E519C(&qword_1EF3F9790, (uint64_t (*)(uint64_t))sub_1BC1065E8, MEMORY[0x1E0C95D90]);
    sub_1BC0E519C(&qword_1EF3F9798, (uint64_t (*)(uint64_t))sub_1BC10647C, MEMORY[0x1E0C95708]);
    v0 = sub_1BC2B3E24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9770);
  }
}

void sub_1BC1065E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9778)
  {
    sub_1BC106304(255, (unint64_t *)&qword_1EF3F9780, &qword_1EF3F9788, 0x1E0CB6858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC0F6274();
    v0 = sub_1BC2B3E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9778);
  }
}

void sub_1BC106674()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F97A0)
  {
    sub_1BC106520();
    sub_1BC0E519C(&qword_1EF3F97A8, (uint64_t (*)(uint64_t))sub_1BC106520, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC2B3DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F97A0);
  }
}

void sub_1BC1066EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F97B0)
  {
    sub_1BC106674();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF3F97B8, (uint64_t (*)(uint64_t))sub_1BC106674, MEMORY[0x1E0C957E8]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F97B0);
  }
}

uint64_t sub_1BC1067A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC1052DC(a1);
}

uint64_t sub_1BC1067A8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC24C8F0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC1067D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1067F4(unint64_t *a1)
{
  return sub_1BC105370(a1);
}

uint64_t sub_1BC1067FC(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v20 = a2;
  v19 = sub_1BC2B2D98();
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    if (!v8)
      return v9;
    v21 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC125C70(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v11 = 0;
    v9 = v21;
    v17 = v3;
    v18 = a1 & 0xC000000000000001;
    v12 = a1;
    while (v8 != v11)
    {
      if (v18)
        v13 = (id)MEMORY[0x1BCCEE950](v11, a1);
      else
        v13 = *(id *)(a1 + 8 * v11 + 32);
      v14 = v13;
      sub_1BC105594(v13, (uint64_t)v7);

      v21 = v9;
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      v3 = v16 + 1;
      if (v16 >= v15 >> 1)
      {
        sub_1BC125C70(v15 > 1, v16 + 1, 1);
        v9 = v21;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v3;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16, v7, v19);
      a1 = v12;
      if (v8 == v11)
        return v9;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC1069C0(uint64_t a1)
{
  return sub_1BC106DC0(a1, (void (*)(_QWORD))sub_1BC1090CC, (unint64_t *)&qword_1EDA0FD50, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_1BC107E3C);
}

unint64_t sub_1BC1069E4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC108EF0();
  v2 = sub_1BC2B5300();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC0FC574(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_1BC108F58);
    v7 = v15;
    v8 = v16;
    result = sub_1BC107DA4(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BC0FC3C4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC106B14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_1BC108FC0();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC109024();
  v7 = sub_1BC2B5300();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC0FC574(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC108FC0);
    v15 = *v6;
    v16 = v6[1];
    result = sub_1BC107DA4(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for Dosage();
    result = sub_1BC109088(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC106CA4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC108E70();
  v2 = (_QWORD *)sub_1BC2B5300();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_1BC108194((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC106D9C(uint64_t a1)
{
  return sub_1BC106DC0(a1, (void (*)(_QWORD))sub_1BC108DEC, &qword_1EF3F9910, type metadata accessor for AttributeName, (uint64_t (*)(uint64_t))sub_1BC108194);
}

unint64_t sub_1BC106DC0(uint64_t a1, void (*a2)(_QWORD), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v9 = sub_1BC2B5300();
  v10 = (_QWORD *)v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  v12 = v9 + 64;
  v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC109150(v13, (uint64_t)&v20, a3, a4);
    v14 = v20;
    result = a5(v20);
    if ((v16 & 1) != 0)
      break;
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v10[6] + 8 * result) = v14;
    result = (unint64_t)sub_1BC0FC3C4(&v21, (_OWORD *)(v10[7] + 32 * result));
    v17 = v10[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC106EF8(uint64_t a1)
{
  return sub_1BC106F0C(a1, (void (*)(_QWORD))sub_1BC107FE0, (uint64_t (*)(id))sub_1BC108304);
}

unint64_t sub_1BC106F0C(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(id))
{
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  void *v8;
  id v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v5 = (_QWORD *)sub_1BC2B5300();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (void **)(a1 + 40);
  while (1)
  {
    v8 = *v7;
    v9 = *(v7 - 1);
    v10 = v8;
    result = a3(v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = 8 * result;
    *(_QWORD *)(v5[6] + v13) = v9;
    *(_QWORD *)(v5[7] + v13) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1BC10701C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  uint64_t v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;

  sub_1BC10926C();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0 + 48);
  if (v4)
  {
    v5 = *(id *)(v0 + 48);
  }
  else
  {
    v6 = sub_1BC2B3608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
    sub_1BC2B4C58();
    v9 = (void *)sub_1BC11C0F4(v7, v8, 1, (uint64_t)v3);
    sub_1BC1092C0((uint64_t)v3);
    v10 = *(void **)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v9;
    v5 = v9;

    v4 = 0;
  }
  v11 = v4;
  return v5;
}

uint64_t MedmojiImageCache.__allocating_init(listManager:imageDimension:includeArchived:)(uint64_t a1, char a2, double a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 40) = sub_1BC106F0C(MEMORY[0x1E0DEE9D8], (void (*)(_QWORD))sub_1BC1092FC, (uint64_t (*)(id))sub_1BC107F54);
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 16) = a1;
  *(double *)(v6 + 24) = a3;
  *(_BYTE *)(v6 + 32) = a2;
  sub_1BC107324();
  return v6;
}

uint64_t MedmojiImageCache.init(listManager:imageDimension:includeArchived:)(uint64_t a1, char a2, double a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = sub_1BC106F0C(MEMORY[0x1E0DEE9D8], (void (*)(_QWORD))sub_1BC1092FC, (uint64_t (*)(id))sub_1BC107F54);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a3;
  *(_BYTE *)(v3 + 32) = a2;
  swift_retain();
  sub_1BC107324();
  swift_release();
  return v3;
}

id sub_1BC1071DC(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v11;

  v2 = objc_msgSend(a1, sel_semanticIdentifier);
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 40);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = v2;
    v5 = sub_1BC2B5294();

    if (!v5
      || (sub_1BC0E1D38(0, &qword_1EF3FB480),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v6 = v11,
          swift_unknownObjectRelease(),
          !v11))
    {
LABEL_8:
      v6 = sub_1BC10701C();
    }
  }
  else
  {
    v7 = *(_QWORD *)(v3 + 16);
    swift_bridgeObjectRetain();
    if (!v7)
      goto LABEL_8;
    v8 = sub_1BC107F54((uint64_t)v2);
    if ((v9 & 1) == 0)
      goto LABEL_8;
    v6 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v8);
    if (!v6)
      goto LABEL_8;
  }

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BC107324()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  void *v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  id v62;
  uint64_t result;
  unint64_t v64;
  uint64_t v65;
  uint64_t j;
  id v67;
  void *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  id *v73;
  uint64_t v74;
  void *v75;
  id *v76;
  id v77;
  uint64_t v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  _QWORD *v86;
  char v87;
  unint64_t v88;
  uint64_t v89;
  _BOOL8 v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  char v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t k;
  _QWORD *v108;
  unint64_t v109;

  sub_1BC10926C();
  v3 = MEMORY[0x1E0C80A78](v2);
  v106 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v102 = (char *)&v100 - v5;
  v103 = v0;
  v6 = *(_QWORD *)(v0 + 16);
  v7 = sub_1BC2B3938();
  v8 = v7;
  v109 = MEMORY[0x1E0DEE9D8];
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BC2B52D0();
    v101 = v6;
    if (v9)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v101 = v6;
  if (!v9)
    goto LABEL_16;
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_82;
  }
  for (i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v11 = (id)MEMORY[0x1BCCEE950](i, v8);
    else
      v11 = *(id *)(v8 + 8 * i + 32);
    v12 = v11;
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x1BCCEDCF0]();
      if (*(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
      sub_1BC2B4604();
      sub_1BC2B45A4();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v13 = v109;
LABEL_17:
  swift_bridgeObjectRelease();
  if (v13 >> 62)
    goto LABEL_80;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_19:
  v15 = (uint64_t)v102;
  k = v14;
  if (v14)
  {
    v16 = (uint64_t *)(v103 + 40);
    v104 = v13;
    v105 = v13 & 0xC000000000000001;
    v17 = 4;
    do
    {
      if (v105)
        v18 = (id)MEMORY[0x1BCCEE950](v17 - 4, v13);
      else
        v18 = *(id *)(v13 + 8 * v17);
      v19 = v18;
      v20 = v17 - 3;
      if (__OFADD__(v17 - 4, 1))
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        swift_bridgeObjectRetain_n();
        v14 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      v21 = objc_msgSend(v18, sel_semanticIdentifier);
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      v22 = sub_1BC2B3608();
      v13 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v22) == 1)
      {
        sub_1BC1092C0(v15);
        swift_beginAccess();
      }
      else
      {
        sub_1BC2B4C58();
        v24 = v23;
        v26 = v25;
        v27 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v106, v15, v22);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v22);
        v28 = sub_1BC11C0F4(v24, v26, 1, v27);
        sub_1BC1092C0(v27);
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v22);
        swift_beginAccess();
        if (v28)
        {
          v29 = *v16;
          if ((*v16 & 0xC000000000000001) != 0)
          {
            if (v29 < 0)
              v30 = *v16;
            else
              v30 = v29 & 0xFFFFFFFFFFFFFF8;
            v31 = sub_1BC2B5108();
            if (__OFADD__(v31, 1))
              goto LABEL_78;
            *v16 = sub_1BC108944(v30, v31 + 1);
          }
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v108 = (_QWORD *)*v16;
          v33 = v108;
          *v16 = 0x8000000000000000;
          v35 = sub_1BC107F54((uint64_t)v21);
          v36 = v33[2];
          v37 = (v34 & 1) == 0;
          v38 = v36 + v37;
          if (__OFADD__(v36, v37))
            goto LABEL_76;
          v13 = v34;
          if (v33[3] >= v38)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1BC15BAD8();
          }
          else
          {
            sub_1BC15A7DC(v38, isUniquelyReferenced_nonNull_native);
            v39 = sub_1BC107F54((uint64_t)v21);
            if ((v13 & 1) != (v40 & 1))
              goto LABEL_118;
            v35 = v39;
          }
          v56 = v108;
          if ((v13 & 1) != 0)
          {
            v57 = v108[7];
            v58 = *(void **)(v57 + 8 * v35);
            *(_QWORD *)(v57 + 8 * v35) = v28;

          }
          else
          {
            v108[(v35 >> 6) + 8] |= 1 << v35;
            *(_QWORD *)(v56[6] + 8 * v35) = v21;
            *(_QWORD *)(v56[7] + 8 * v35) = v28;
            v59 = v56[2];
            v60 = __OFADD__(v59, 1);
            v61 = v59 + 1;
            if (v60)
              goto LABEL_79;
            v56[2] = v61;
            v62 = v21;
          }
          *v16 = (uint64_t)v56;

          swift_bridgeObjectRelease();
          v15 = (uint64_t)v102;
          goto LABEL_23;
        }
      }
      v41 = *v16;
      if ((*v16 & 0xC000000000000001) != 0)
      {
        if (v41 < 0)
          v42 = *v16;
        else
          v42 = v41 & 0xFFFFFFFFFFFFFF8;
        v43 = v21;
        swift_bridgeObjectRetain();
        v44 = sub_1BC2B5294();

        if (v44)
        {
          swift_unknownObjectRelease();
          v45 = sub_1BC2B5108();
          v46 = sub_1BC108944(v42, v45);
          swift_retain();
          v13 = sub_1BC107F54((uint64_t)v43);
          v48 = v47;
          swift_release();
          if ((v48 & 1) == 0)
            goto LABEL_77;

          v49 = *(void **)(*(_QWORD *)(v46 + 56) + 8 * v13);
          sub_1BC222BC8(v13, v46);
          *v16 = v46;

        }
        else
        {

        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v50 = sub_1BC107F54((uint64_t)v21);
        v52 = v51;
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {

          goto LABEL_23;
        }
        v53 = swift_isUniquelyReferenced_nonNull_native();
        v54 = *v16;
        v108 = (_QWORD *)*v16;
        *v16 = 0x8000000000000000;
        if ((v53 & 1) == 0)
        {
          sub_1BC15BAD8();
          v54 = (uint64_t)v108;
        }

        v55 = *(void **)(*(_QWORD *)(v54 + 56) + 8 * v50);
        sub_1BC222BC8(v50, v54);
        *v16 = v54;

      }
      swift_bridgeObjectRelease();
LABEL_23:
      v13 = v104;
      swift_endAccess();

      ++v17;
    }
    while (v20 != k);
  }
  result = swift_bridgeObjectRelease_n();
  if ((*(_BYTE *)(v103 + 32) & 1) == 0)
    return result;
  v64 = sub_1BC2B38FC();
  v1 = v64;
  v109 = MEMORY[0x1E0DEE9D8];
  if (v64 >> 62)
  {
LABEL_82:
    swift_bridgeObjectRetain();
    v65 = sub_1BC2B52D0();
    if (v65)
      goto LABEL_63;
    goto LABEL_83;
  }
  v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v65)
  {
LABEL_63:
    if (v65 < 1)
    {
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      sub_1BC0E1D38(0, &qword_1EF3F9958);
      result = sub_1BC2B53F0();
      __break(1u);
      return result;
    }
    for (j = 0; j != v65; ++j)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v67 = (id)MEMORY[0x1BCCEE950](j, v1);
      else
        v67 = *(id *)(v1 + 8 * j + 32);
      v68 = v67;
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v69 = v109;
    goto LABEL_84;
  }
LABEL_83:
  swift_bridgeObjectRelease();
  v69 = MEMORY[0x1E0DEE9D8];
LABEL_84:
  swift_bridgeObjectRelease();
  if (v69 >> 62)
    goto LABEL_113;
  v70 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (k = v70; k; k = sub_1BC2B52D0())
  {
    if (k < 1)
      goto LABEL_117;
    v71 = 0;
    v72 = (uint64_t *)(v103 + 40);
    v105 = v69 & 0xC000000000000001;
    v73 = (id *)v69;
    while (1)
    {
      if (v105)
        v76 = (id *)MEMORY[0x1BCCEE950](v71, v69);
      else
        v76 = (id *)*(id *)(v69 + 8 * v71 + 32);
      v69 = (unint64_t)v76;
      v77 = objc_msgSend(v76, sel_semanticIdentifier);
      v78 = (uint64_t)v106;
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      sub_1BC2B4C58();
      v81 = sub_1BC11C0F4(v79, v80, 1, v78);
      sub_1BC1092C0(v78);
      swift_beginAccess();
      v82 = *v72;
      if ((*v72 & 0xC000000000000001) != 0)
      {
        if (v82 < 0)
          v83 = *v72;
        else
          v83 = v82 & 0xFFFFFFFFFFFFFF8;
        v84 = sub_1BC2B5108();
        if (__OFADD__(v84, 1))
          goto LABEL_111;
        *v72 = sub_1BC108944(v83, v84 + 1);
      }
      v85 = swift_isUniquelyReferenced_nonNull_native();
      v108 = (_QWORD *)*v72;
      v86 = v108;
      *v72 = 0x8000000000000000;
      v88 = sub_1BC107F54((uint64_t)v77);
      v89 = v86[2];
      v90 = (v87 & 1) == 0;
      v91 = v89 + v90;
      if (__OFADD__(v89, v90))
        break;
      v92 = v87;
      if (v86[3] >= v91)
      {
        if ((v85 & 1) != 0)
        {
          v95 = v108;
          if ((v87 & 1) != 0)
            goto LABEL_88;
        }
        else
        {
          sub_1BC15BAD8();
          v95 = v108;
          if ((v92 & 1) != 0)
            goto LABEL_88;
        }
      }
      else
      {
        sub_1BC15A7DC(v91, v85);
        v93 = sub_1BC107F54((uint64_t)v77);
        if ((v92 & 1) != (v94 & 1))
          goto LABEL_118;
        v88 = v93;
        v95 = v108;
        if ((v92 & 1) != 0)
        {
LABEL_88:
          v74 = v95[7];
          v75 = *(void **)(v74 + 8 * v88);
          *(_QWORD *)(v74 + 8 * v88) = v81;

          goto LABEL_89;
        }
      }
      v95[(v88 >> 6) + 8] |= 1 << v88;
      v96 = 8 * v88;
      *(_QWORD *)(v95[6] + v96) = v77;
      *(_QWORD *)(v95[7] + v96) = v81;
      v97 = v95[2];
      v60 = __OFADD__(v97, 1);
      v98 = v97 + 1;
      if (v60)
        goto LABEL_112;
      v95[2] = v98;
      v99 = v77;
LABEL_89:
      ++v71;
      *v72 = (uint64_t)v95;

      swift_bridgeObjectRelease();
      swift_endAccess();

      v69 = (unint64_t)v73;
      if (k == v71)
        return swift_bridgeObjectRelease_n();
    }
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t MedmojiImageCache.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t MedmojiImageCache.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1BC107DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC2B5450();
  sub_1BC2B44D8();
  v4 = sub_1BC2B548C();
  return sub_1BC108350(a1, a2, v4);
}

unint64_t sub_1BC107E0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B515C();
  return sub_1BC108430(a1, v2);
}

unint64_t sub_1BC107E3C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC2B4460();
  sub_1BC2B5450();
  sub_1BC2B44D8();
  v2 = sub_1BC2B548C();
  swift_bridgeObjectRelease();
  return sub_1BC1084F4(a1, v2);
}

unint64_t sub_1BC107EBC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1BC2B38E4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0];
  sub_1BC0E519C(&qword_1EF3F9928, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC00]);
  v3 = sub_1BC2B43E8();
  return sub_1BC108778(a1, v3, v2, &qword_1EDA0FAB8, MEMORY[0x1E0D2CC08]);
}

unint64_t sub_1BC107F54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B4D78();
  return sub_1BC108668(a1, v2, &qword_1EF3F9958);
}

uint64_t type metadata accessor for MedmojiImageCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedmojiImageCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedmojiImageCache.__allocating_init(listManager:imageDimension:includeArchived:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of MedmojiImageCache.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void sub_1BC107FE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F98D0)
  {
    sub_1BC0E1D38(255, &qword_1EDA0FDE8);
    sub_1BC0E1D38(255, &qword_1EF3F98D8);
    sub_1BC1093B4((unint64_t *)&qword_1EDA0FDF0, &qword_1EDA0FDE8);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F98D0);
  }
}

unint64_t sub_1BC108098(uint64_t a1)
{
  uint64_t v2;

  sub_1BC2B5450();
  sub_1BC2B545C();
  v2 = sub_1BC2B548C();
  return sub_1BC1088A8(a1, v2);
}

unint64_t sub_1BC1080FC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1BC2B3698();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C9E0];
  sub_1BC0E519C(&qword_1EF3F98F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C9E0], MEMORY[0x1E0D2C9E8]);
  v3 = sub_1BC2B43E8();
  return sub_1BC108778(a1, v3, v2, &qword_1EF3F9900, MEMORY[0x1E0D2C9F0]);
}

unint64_t sub_1BC108194(uint64_t a1)
{
  uint64_t v2;

  sub_1BC2B4460();
  sub_1BC2B5450();
  sub_1BC2B44D8();
  v2 = sub_1BC2B548C();
  swift_bridgeObjectRelease();
  return sub_1BC1084F4(a1, v2);
}

unint64_t sub_1BC108220(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B4D78();
  return sub_1BC108668(a1, v2, &qword_1EF3F9950);
}

unint64_t sub_1BC10826C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1BC2B2024();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
  sub_1BC0E519C(&qword_1EDA0E6B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F0]);
  v3 = sub_1BC2B43E8();
  return sub_1BC108778(a1, v3, v2, (unint64_t *)&unk_1EDA0E6C0, MEMORY[0x1E0CAE5F8]);
}

unint64_t sub_1BC108304(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B4D78();
  return sub_1BC108668(a1, v2, &qword_1EDA0FDE8);
}

unint64_t sub_1BC108350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BC2B53CC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BC2B53CC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1BC108430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BC1091FC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCEE8E4](v9, a1);
      sub_1BC109238((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1BC1084F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1BC2B4460();
    v8 = v7;
    if (v6 == sub_1BC2B4460() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1BC2B4460();
          v15 = v14;
          if (v13 == sub_1BC2B4460() && v15 == v16)
            break;
          v18 = sub_1BC2B53CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1BC108668(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1BC0E1D38(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1BC2B4D84();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1BC2B4D84();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1BC108778(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1BC0E519C(v21, v20, v22);
      v17 = sub_1BC2B4424();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1BC1088A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1BC108944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BC1092FC();
    v2 = sub_1BC2B52F4();
    v18 = v2;
    sub_1BC2B527C();
    v3 = sub_1BC2B52A0();
    if (v3)
    {
      v4 = v3;
      sub_1BC0E1D38(0, &qword_1EF3F9958);
      do
      {
        swift_dynamicCast();
        sub_1BC0E1D38(0, &qword_1EF3FB480);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BC15A7DC(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BC2B4D78();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BC2B52A0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

unint64_t sub_1BC108B90(uint64_t a1)
{
  return sub_1BC108BD8(a1, &qword_1EF3F9940, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationScheduleType, &qword_1EF3F9948, (uint64_t)&unk_1BC2B893C);
}

unint64_t sub_1BC108BB4(uint64_t a1)
{
  return sub_1BC108BD8(a1, &qword_1EF3F98E0, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, &qword_1EF3F98F0, (uint64_t)&unk_1BC2B909C);
}

unint64_t sub_1BC108BD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9E0];
  sub_1BC108CFC(0, a2, a3, a4, a5);
  v7 = (_QWORD *)sub_1BC2B5300();
  v8 = *(_QWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 56);
  result = sub_1BC108098(v8);
  v11 = v20;
  if ((v12 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v7;
  }
  v13 = a1 + 64;
  while (1)
  {
    *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v7[6] + 8 * result) = v8;
    v14 = v7[7] + 24 * result;
    *(_OWORD *)v14 = v11;
    *(_QWORD *)(v14 + 16) = v9;
    v15 = v7[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      break;
    v7[2] = v17;
    if (!--v5)
      goto LABEL_8;
    v18 = v13 + 32;
    v8 = *(_QWORD *)v13;
    v21 = *(_OWORD *)(v13 + 8);
    v9 = *(_QWORD *)(v13 + 24);
    swift_unknownObjectRetain();
    result = sub_1BC108098(v8);
    v13 = v18;
    v11 = v21;
    if ((v19 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1BC108CFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC108D94();
    sub_1BC0E519C(a4, a3, a5);
    v9 = sub_1BC2B530C();
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC108D94()
{
  unint64_t result;

  result = qword_1EF3F98E8;
  if (!qword_1EF3F98E8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3F98E8);
  }
  return result;
}

void sub_1BC108DEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9908)
  {
    type metadata accessor for AttributeName(255);
    sub_1BC0E519C(&qword_1EF3F8640, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC2B9014);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9908);
  }
}

void sub_1BC108E70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9918)
  {
    type metadata accessor for FeatureKey(255);
    sub_1BC0E519C(&qword_1EF3F8630, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC2B9058);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9918);
  }
}

void sub_1BC108EF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401850)
  {
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401850);
  }
}

void sub_1BC108F58()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3F9920)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3F9920);
  }
}

void sub_1BC108FC0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3F9930)
  {
    type metadata accessor for Dosage();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3F9930);
  }
}

void sub_1BC109024()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9938)
  {
    type metadata accessor for Dosage();
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9938);
  }
}

uint64_t sub_1BC109088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC1090CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FE30)
  {
    type metadata accessor for Key(255);
    sub_1BC0E519C((unint64_t *)&qword_1EDA0FD20, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B897C);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FE30);
  }
}

uint64_t sub_1BC109150(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC10919C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BC10919C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BC1091FC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1BC109238(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

void sub_1BC10926C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0ECC0)
  {
    sub_1BC2B3608();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0ECC0);
  }
}

uint64_t sub_1BC1092C0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC10926C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC1092FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9960)
  {
    sub_1BC0E1D38(255, &qword_1EF3F9958);
    sub_1BC0E1D38(255, &qword_1EF3FB480);
    sub_1BC1093B4(&qword_1EF3F9968, &qword_1EF3F9958);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9960);
  }
}

uint64_t sub_1BC1093B4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1BC0E1D38(255, a2);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationSecondaryEducationCompoundDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3F9970);
}

uint64_t sub_1BC109408()
{
  return swift_initClassMetadata2();
}

void sub_1BC109444()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC109470()
{
  return type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
}

uint64_t type metadata accessor for MedicationSecondaryEducationDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3F99C8);
}

uint64_t sub_1BC10948C()
{
  return swift_initClassMetadata2();
}

void sub_1BC1094D4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC109500()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC10951C()
{
  return type metadata accessor for MedicationSecondaryEducationDataSource(0);
}

uint64_t sub_1BC109524()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)();
  unint64_t *v3;
  void *v4;

  v1 = *v0;
  type metadata accessor for MedicationInfoItemCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F9A20, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInfoItemCell, (uint64_t)&protocol conformance descriptor for MedicationInfoItemCell);
  sub_1BC2B497C();
  if (*(_BYTE *)(v1 + qword_1EF3F99C0))
  {
    type metadata accessor for MedicationMarkdownItemCell();
    v2 = type metadata accessor for MedicationMarkdownItemCell;
    v3 = (unint64_t *)&unk_1EF3F9A28;
    v4 = &protocol conformance descriptor for MedicationMarkdownItemCell;
  }
  else
  {
    type metadata accessor for MedicationSideEffectsItemCell();
    v2 = type metadata accessor for MedicationSideEffectsItemCell;
    v3 = &qword_1EF3F8880;
    v4 = &protocol conformance descriptor for MedicationSideEffectsItemCell;
  }
  sub_1BC0E519C(v3, (uint64_t (*)(uint64_t))v2, (uint64_t)v4);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1095F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  double v9;
  void (*v10)(_BYTE *, _QWORD);
  double *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  _BYTE v15[32];

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v15[-v7];
  sub_1BC2B2CC0();
  if (a1)
    v9 = -10.0;
  else
    v9 = 10.0;
  v10 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *v11 = v9;
  v10(v15, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
  v12 = sub_1BC2B2D14();
  v13 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v13(v6, v2);
  v13(v8, v2);
  return v12;
}

uint64_t sub_1BC109708()
{
  sub_1BC0E519C(&qword_1EF3F9A30, type metadata accessor for MedicationSecondaryEducationDataSource, (uint64_t)&unk_1BC2BA5B8);
  return sub_1BC2B3074();
}

uint64_t sub_1BC109764()
{
  return sub_1BC0E519C(&qword_1EF3F9A18, type metadata accessor for MedicationSecondaryEducationDataSource, (uint64_t)&unk_1BC2BA588);
}

uint64_t sub_1BC109790(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(unint64_t, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[6];

  v75 = a6;
  v73 = a4;
  *(_QWORD *)&v74 = a5;
  v72 = a3;
  v13 = sub_1BC2B2438();
  v78 = *(_QWORD *)(v13 - 8);
  v79 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC2B2BC4();
  v82 = *(_QWORD *)(v16 - 8);
  v83 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v81 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v77 = (char *)&v72 - v19;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v72 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v25, a2, a8);
  v27 = *a1;
  v84 = a7;
  *(_BYTE *)(a7 + qword_1EF3F99C0) = v27;
  if (v27)
  {
    LOBYTE(v85[0]) = v27;
    v28 = sub_1BC190854((uint64_t)v25, v85, a8, a9);
    v29 = type metadata accessor for MedicationMarkdownItem();
    v30 = swift_allocObject();
    type metadata accessor for MedicationMarkdownItemCell();
    sub_1BC0E519C(&qword_1EF3F9A28, (uint64_t (*)(uint64_t))type metadata accessor for MedicationMarkdownItemCell, (uint64_t)&protocol conformance descriptor for MedicationMarkdownItemCell);
    *(_QWORD *)(v30 + 16) = sub_1BC2B2930();
    *(_QWORD *)(v30 + 24) = v31;
    v32 = v73;
    *(_QWORD *)(v30 + 32) = v72;
    *(_QWORD *)(v30 + 40) = v32;
    v33 = v75;
    *(_QWORD *)(v30 + 48) = v74;
    *(_QWORD *)(v30 + 56) = v33;
    *(_BYTE *)(v30 + 64) = v28 & 1;
    v34 = (unint64_t *)&unk_1EF3F9A38;
    v35 = &unk_1BC2BDDE0;
    v36 = type metadata accessor for MedicationMarkdownItem;
  }
  else
  {
    v29 = type metadata accessor for MedicationSideEffectsItem();
    v30 = swift_allocObject();
    type metadata accessor for MedicationSideEffectsItemCell();
    sub_1BC0E519C(&qword_1EF3F8880, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSideEffectsItemCell, (uint64_t)&protocol conformance descriptor for MedicationSideEffectsItemCell);
    *(_QWORD *)(v30 + 16) = sub_1BC2B2930();
    *(_QWORD *)(v30 + 24) = v37;
    v38 = v73;
    *(_QWORD *)(v30 + 32) = v72;
    *(_QWORD *)(v30 + 40) = v38;
    v39 = v75;
    *(_QWORD *)(v30 + 48) = v74;
    *(_QWORD *)(v30 + 56) = v39;
    v34 = (unint64_t *)&unk_1EF3F9A48;
    v35 = &unk_1BC2BF93C;
    v36 = type metadata accessor for MedicationSideEffectsItem;
  }
  v40 = sub_1BC0E519C(v34, (uint64_t (*)(uint64_t))v36, (uint64_t)v35);
  v85[3] = v29;
  v85[4] = v40;
  v85[0] = v30;
  (*(void (**)(uint64_t, uint64_t))(a9 + 16))(a8, a9);
  v41 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
  v43 = v42;
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 32))(a8, a9);
  v76 = v25;
  if (v45)
    v46 = v44;
  else
    v46 = 0;
  if (v45)
    v47 = v45;
  else
    v47 = 0xE000000000000000;
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 40))(a8, a9);
  v75 = a8;
  if (v48)
    v49 = v48;
  else
    v49 = MEMORY[0x1E0DEE9D8];
  v50 = type metadata accessor for MedicationInfoItem();
  v51 = swift_allocObject();
  type metadata accessor for MedicationInfoItemCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F9A20, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInfoItemCell, (uint64_t)&protocol conformance descriptor for MedicationInfoItemCell);
  *(_QWORD *)(v51 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v51 + 24) = v52;
  sub_1BC109D88((uint64_t)v23, v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  v53 = (uint64_t *)(v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *v53 = v41;
  v53[1] = v43;
  v54 = (uint64_t *)(v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *v54 = v46;
  v54[1] = v47;
  *(_QWORD *)(v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = v49;
  v55 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v56 = swift_allocObject();
  v74 = xmmword_1BC2B92D0;
  *(_OWORD *)(v56 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v56 + 56) = v50;
  *(_QWORD *)(v56 + 64) = sub_1BC0E519C(&qword_1EF3F9A40, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInfoItem, (uint64_t)&protocol conformance descriptor for MedicationInfoItem);
  *(_QWORD *)(v56 + 32) = v51;
  swift_retain();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v57 = v79;
  v58 = *(void (**)(char *, uint64_t))(v78 + 8);
  v58(v15, v79);
  v59 = v77;
  sub_1BC2B2BAC();
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v74;
  sub_1BC0E79F0((uint64_t)v85, v60 + 32);
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v58(v15, v57);
  v61 = v81;
  sub_1BC2B2BAC();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], v55);
  v62 = v82;
  v63 = *(_QWORD *)(v82 + 72);
  v64 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1BC2B92C0;
  v66 = v65 + v64;
  v67 = *(void (**)(unint64_t, char *, uint64_t))(v62 + 16);
  v68 = v83;
  v67(v66, v59, v83);
  v67(v66 + v63, v61, v68);
  v69 = sub_1BC2B2750();
  swift_release();
  v70 = *(void (**)(char *, uint64_t))(v62 + 8);
  v70(v61, v68);
  v70(v59, v68);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v76, v75);
  return v69;
}

uint64_t sub_1BC109D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MedicationHighlightsDataSource()
{
  uint64_t result;

  result = qword_1EF3F9A50;
  if (!qword_1EF3F9A50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC109E20()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC109E5C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - v5;
  sub_1BC2B26FC();
  v7 = (void *)MEMORY[0x1BCCEBE6C]();
  v8 = objc_msgSend(a2, sel_semanticIdentifier);
  v9 = objc_msgSend(v8, sel_stringValue);

  sub_1BC2B4460();
  v10 = (void *)sub_1BC2B26E4();
  swift_bridgeObjectRelease();
  sub_1BC0E7998(0, &qword_1EF3F9AA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = sub_1BC2B2690();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC2B92D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E0D2D5A0], v11);
  v15 = sub_1BC2B26A8();
  v17 = v16;
  v18 = sub_1BC2B2024();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1BC10A700(0, &qword_1EF3F9AA8);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(v19 + 32) = sub_1BC2B269C();
  *(_QWORD *)(v19 + 40) = 0;
  v20 = (void *)MEMORY[0x1BCCEBE54](v14, v15, v17, v6, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC10A6AC((uint64_t)v6);
  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v21 + 32) = v10;
  *(_QWORD *)(v21 + 40) = v20;
  v35 = v21;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, &qword_1EDA0E9D0);
  v22 = v10;
  v23 = v20;
  v24 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v24);

  objc_msgSend(v7, sel_setPredicate_, v25);
  v26 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v27 = (void *)sub_1BC2B4430();
  v28 = objc_msgSend(v26, sel_initWithKey_ascending_, v27, 0);

  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v29 + 32) = v28;
  v35 = v29;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0E9D8);
  v30 = v28;
  v31 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v31);

  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, a1, 0, 0);
  v32 = sub_1BC2B2F60();

  return v32;
}

void sub_1BC10A290()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC10A2BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationHighlightsDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC10A2F0()
{
  return type metadata accessor for MedicationHighlightsDataSource();
}

void sub_1BC10A2F8()
{
  sub_1BC10A488();
}

unint64_t sub_1BC10A30C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  v2 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v2);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C68();
  v4 = sub_1BC2B28F4();
  swift_allocObject();
  v5 = sub_1BC2B28E8();
  a1[3] = v4;
  result = sub_1BC10A664();
  a1[4] = result;
  *a1 = v5;
  return result;
}

unint64_t sub_1BC10A474@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC10A30C(a1);
}

void sub_1BC10A488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[2];

  v0 = sub_1BC2B2AE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B29B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v11 = objc_msgSend(v10, sel_stanley);

  if (v11)
  {
    sub_1BC2B29A8();
    v12 = v16[1];
    v13 = sub_1BC2B299C();
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      v14 = (void *)v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v15 = objc_msgSend((id)objc_opt_self(), sel_estimatedDimension_, 100.0);
      sub_1BC2B4B14();

    }
  }
  else
  {
    sub_1BC2B2AB0();
    sub_1BC2B2A8C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

unint64_t sub_1BC10A664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F96B8;
  if (!qword_1EF3F96B8)
  {
    v1 = sub_1BC2B28F4();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2A8A0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F96B8);
  }
  return result;
}

uint64_t sub_1BC10A6AC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC10A700(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC2B53A8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t InteractionResultDetailViewController.interactionResults.getter()
{
  return swift_retain();
}

uint64_t InteractionResultDetailViewController.stackedMemojiDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + qword_1EF3F9AB8, a1);
}

uint64_t InteractionResultDetailViewController.firstItemName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1EF3F9AC0);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailViewController.firstItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + qword_1EF3F9AC8, a1);
}

uint64_t InteractionResultDetailViewController.firstItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionResultDetailViewController.secondItemName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1EF3F9AD8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailViewController.secondItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + qword_1EF3F9AE0, a1);
}

uint64_t InteractionResultDetailViewController.secondItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

id InteractionResultDetailViewController.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:firstItemIngredients:secondItemName:secondItemDetailsProviding:secondItemIngredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  objc_class *v10;
  id v18;
  id v19;

  v18 = objc_allocWithZone(v10);
  v19 = sub_1BC10B658(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();
  return v19;
}

id InteractionResultDetailViewController.init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:firstItemIngredients:secondItemName:secondItemDetailsProviding:secondItemIngredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v10;

  v10 = sub_1BC10B658(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();
  return v10;
}

void sub_1BC10A938()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC10A990()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;
  __int128 v17[2];
  __int128 v18[2];
  __int128 v19;
  uint64_t v20;
  unint64_t v21;

  v1 = *(_QWORD *)&v0[qword_1EF3F9AB0];
  sub_1BC0E79F0((uint64_t)&v0[qword_1EF3F9AB8], (uint64_t)&v19);
  v3 = *(_QWORD *)&v0[qword_1EF3F9AC0];
  v2 = *(_QWORD *)&v0[qword_1EF3F9AC0 + 8];
  sub_1BC0E79F0((uint64_t)&v0[qword_1EF3F9AC8], (uint64_t)v18);
  v4 = *(_QWORD *)&v0[qword_1EF3F9AD0];
  v6 = *(_QWORD *)&v0[qword_1EF3F9AD8];
  v5 = *(_QWORD *)&v0[qword_1EF3F9AD8 + 8];
  sub_1BC0E79F0((uint64_t)&v0[qword_1EF3F9AE0], (uint64_t)v17);
  v7 = *(_QWORD *)&v0[qword_1EF3F9AE8];
  v8 = type metadata accessor for InteractionResultDetailDataSourceProvider();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v1;
  sub_1BC0F2730(&v19, (uint64_t)(v9 + 3));
  v9[8] = v3;
  v9[9] = v2;
  sub_1BC0F2730(v18, (uint64_t)(v9 + 10));
  v9[15] = v4;
  v9[16] = v6;
  v9[17] = v5;
  sub_1BC0F2730(v17, (uint64_t)(v9 + 18));
  v9[23] = v7;
  v20 = v8;
  v21 = sub_1BC10B8A8();
  *(_QWORD *)&v19 = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC2B3008();
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for InteractionResultDetailViewController();
  objc_msgSendSuper2(&v16, sel_viewDidLoad);
  v10 = objc_msgSend(v0, sel_collectionView);
  if (v10)
  {
    v11 = v10;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_secondarySystemBackgroundColor);
    v14 = objc_msgSend(v12, sel_systemGroupedBackgroundColor);
    v15 = (void *)sub_1BC2B4CE8();

    objc_msgSend(v11, sel_setBackgroundColor_, v15);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC10ABBC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC10A990();

}

id sub_1BC10ABF0()
{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  __int128 v7[2];
  uint64_t v8;
  __int128 v9;
  _QWORD v10[4];

  sub_1BC2B3020();
  v1 = (void (*)(void))sub_1BC2B302C();
  v1();
  sub_1BC2B2FD8();
  v2 = sub_1BC2B2DE0();
  swift_release();
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return (id)swift_bridgeObjectRelease();
  sub_1BC0E8778(0, (unint64_t *)&qword_1EF3F8998);
  sub_1BC0E8778(0, &qword_1EF3F9AF8);
  v4 = 0;
  while (1)
  {
    v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
    swift_unknownObjectRetain_n();
    if ((swift_dynamicCast() & 1) != 0)
      break;
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_unknownObjectRelease();
    sub_1BC10B92C((uint64_t)v7, &qword_1EF3F9B00, &qword_1EF3F9AF8);
LABEL_4:
    if (v3 == ++v4)
      return (id)swift_bridgeObjectRelease();
  }
  sub_1BC0F2730(v7, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_0(v10, v10[3]);
  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    v6 = result;
    sub_1BC2B2E7C();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

void sub_1BC10ADC0(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC2B25C4();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1BC2B2FD8();
    sub_1BC2B2DEC();
    sub_1BC2B2A74();
    swift_release();
    sub_1BC0E79F0((uint64_t)v11, (uint64_t)v8);
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
    sub_1BC0E8778(0, &qword_1EF3F9B08);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_1BC0F2730(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_0(v10, v10[3]);
      sub_1BC2B2B28();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1BC10B92C((uint64_t)v6, (unint64_t *)&qword_1EF400120, &qword_1EF3F9B08);
    *(_QWORD *)&v6[0] = v4;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF400110);
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    sub_1BC10B92C((uint64_t)v8, (unint64_t *)&qword_1EF400120, &qword_1EF3F9B08);
  }
}

uint64_t sub_1BC10AFF0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC10ADC0(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC10B0A0(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1BC2B5024();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

void sub_1BC10B110(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  _QWORD v10[4];

  v3 = objc_msgSend(v1, sel_navigationItem);
  if ((a1 & 1) != 0)
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_doneButtonTapped_);
  else
    v4 = 0;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  v10[3] = type metadata accessor for InteractionResultDetailViewController();
  v10[0] = v1;
  v5 = v1;
  v6 = (void *)MEMORY[0x1BCCEE098](v10, sel_tapToRadar_);
  sub_1BC10BA60((uint64_t)v10);
  v10[0] = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v7 = v4;
    MEMORY[0x1BCCEDCF0]();
    if (*(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC2B45C8();
    sub_1BC2B4604();
    sub_1BC2B45A4();
  }
  if (v6)
  {
    v8 = v6;
    MEMORY[0x1BCCEDCF0]();
    if (*(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC2B45C8();
    sub_1BC2B4604();
    sub_1BC2B45A4();
  }

  v9 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v9);

}

uint64_t sub_1BC10B2FC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  _OWORD v7[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1BC2B5024();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    v5 = a1;
  }
  sub_1BC2B2738();
  sub_1BC2B272C();

  return sub_1BC10BA60((uint64_t)v7);
}

void InteractionResultDetailViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionResultDetailViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionResultDetailViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionResultDetailViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC10B438(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC10B468()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF3F9AB8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF3F9AC8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF3F9AE0);
  return swift_bridgeObjectRelease();
}

id InteractionResultDetailViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionResultDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC10B530(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + qword_1EF3F9AB8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + qword_1EF3F9AC8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + qword_1EF3F9AE0);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall InteractionResultDetailViewController.viewControllerWillEnterAdaptiveModal()()
{
  sub_1BC10B110(1);
}

void sub_1BC10B5D8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC10B110(1);

}

Swift::Void __swiftcall InteractionResultDetailViewController.viewControllerDidLeaveAdaptiveModal()()
{
  sub_1BC10B110(0);
}

void sub_1BC10B61C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC10B110(0);

}

id sub_1BC10B658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v10;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  objc_super v27;

  *(_QWORD *)&v10[qword_1EF3F9AB0] = a1;
  sub_1BC0E79F0(a2, (uint64_t)&v10[qword_1EF3F9AB8]);
  v17 = &v10[qword_1EF3F9AC0];
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  sub_1BC0E79F0(a5, (uint64_t)&v10[qword_1EF3F9AC8]);
  *(_QWORD *)&v10[qword_1EF3F9AD0] = a6;
  v18 = &v10[qword_1EF3F9AD8];
  *(_QWORD *)v18 = a7;
  *((_QWORD *)v18 + 1) = a8;
  sub_1BC0E79F0(a9, (uint64_t)&v10[qword_1EF3F9AE0]);
  *(_QWORD *)&v10[qword_1EF3F9AE8] = a10;
  v27.receiver = v10;
  v27.super_class = (Class)type metadata accessor for InteractionResultDetailViewController();
  swift_retain();
  v19 = objc_msgSendSuper2(&v27, sel_initWithCollectionViewLayout_, 0);
  v20 = qword_1EDA0FEE8;
  v21 = v19;
  if (v20 != -1)
    swift_once();
  v22 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v23 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setTitle_, v23, 0xE000000000000000);

  v24 = objc_msgSend(v21, sel_navigationItem);
  objc_msgSend(v24, sel_setLargeTitleDisplayMode_, 2);

  objc_msgSend(v21, sel_setModalPresentationStyle_, 2);
  __swift_destroy_boxed_opaque_existential_0(a9);
  __swift_destroy_boxed_opaque_existential_0(a5);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v21;
}

unint64_t sub_1BC10B8A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9AF0;
  if (!qword_1EF3F9AF0)
  {
    v1 = type metadata accessor for InteractionResultDetailDataSourceProvider();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BA01C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9AF0);
  }
  return result;
}

uint64_t type metadata accessor for InteractionResultDetailViewController()
{
  uint64_t result;

  result = qword_1EF3F9B10;
  if (!qword_1EF3F9B10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC10B92C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1BC10B968(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BC10B968(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC0E8778(255, a3);
    v4 = sub_1BC2B4FA0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC10B9C0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionResultDetailViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionResultDetailViewController.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:firstItemIngredients:secondItemName:secondItemDetailsProviding:secondItemIngredients:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionResultDetailViewController + v0 + 64))();
}

uint64_t sub_1BC10BA58()
{
  return type metadata accessor for InteractionResultDetailViewController();
}

uint64_t sub_1BC10BA60(uint64_t a1)
{
  uint64_t v2;

  sub_1BC10BA9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC10BA9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA10000)
  {
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA10000);
  }
}

id sub_1BC10BAF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel);
  }
  else
  {
    sub_1BC10DD88();
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC10BB50()
{
  return sub_1BC10BB84(&OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateLabel, 0x62614C657461642ELL, 0xEF6C6562614C6C65, (SEL *)&selRef_secondaryLabelColor);
}

id sub_1BC10BB84(uint64_t *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v5 = *a1;
  v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    v7 = *(id *)(v4 + *a1);
  }
  else
  {
    v8 = sub_1BC10E00C(a2, a3, a4);
    v9 = *(void **)(v4 + v5);
    *(_QWORD *)(v4 + v5) = v8;
    v7 = v8;

    v6 = 0;
  }
  v10 = v6;
  return v7;
}

id sub_1BC10BBE8()
{
  return sub_1BC10BB84(&OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabel, 0x614C746E756F432ELL, 0xEB000000006C6562, (SEL *)&selRef_labelColor);
}

id sub_1BC10BC18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_1BC2B24A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter);
  if (v7)
  {
    v8 = *(id *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    sub_1BC2B2498();
    v10 = (void *)sub_1BC2B245C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setLocale_, v10);

    objc_msgSend(v9, sel_setFormattingContext_, 2);
    v11 = (void *)sub_1BC2B4430();
    objc_msgSend(v9, sel_setLocalizedDateFormatFromTemplate_, v11);

    v12 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v9;
    v8 = v9;

    v7 = 0;
  }
  v13 = v7;
  return v8;
}

uint64_t sub_1BC10BD64()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints];
  }
  else
  {
    v2 = sub_1BC10BDC8(v0);
    *(_QWORD *)&v0[v1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC10BDC8(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA730;
  v3 = sub_1BC10BBE8();
  v4 = objc_msgSend(v3, sel_topAnchor);

  v5 = sub_1BC10BAF4();
  v6 = objc_msgSend(v5, sel_bottomAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 4.0);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = sub_1BC10BBE8();
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = objc_msgSend(a1, sel_leadingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v2 + 40) = v11;
  v12 = sub_1BC10BBE8();
  v13 = objc_msgSend(v12, sel_trailingAnchor);

  v14 = objc_msgSend(a1, sel_trailingAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v2 + 48) = v15;
  v16 = sub_1BC10BBE8();
  v17 = objc_msgSend(v16, sel_bottomAnchor);

  v18 = objc_msgSend(a1, sel_bottomAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v2 + 56) = v19;
  sub_1BC2B45A4();
  return v2;
}

id sub_1BC10BFDC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor];
  }
  else
  {
    v4 = sub_1BC10BAF4();
    v5 = objc_msgSend(v4, sel_bottomAnchor);

    v6 = objc_msgSend(v0, sel_bottomAnchor);
    v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

    v8 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_1BC10C0A0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t i;
  id v37;
  void *v38;

  v1 = sub_1BC10BB50();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = sub_1BC10BAF4();
  objc_msgSend(v0, sel_addSubview_, v2);

  v3 = sub_1BC10BBE8();
  objc_msgSend(v0, sel_addSubview_, v3);

  v4 = sub_1BC10BB50();
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v5 = sub_1BC10BAF4();
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v6 = sub_1BC10BBE8();
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v7 = sub_1BC10BB50();
  v8 = objc_msgSend(v7, sel_topAnchor);

  v9 = objc_msgSend(v0, sel_topAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  objc_msgSend(v10, sel_setActive_, 1);
  v11 = sub_1BC10BB50();
  v12 = objc_msgSend(v11, sel_leadingAnchor);

  v13 = objc_msgSend(v0, sel_leadingAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  objc_msgSend(v14, sel_setActive_, 1);
  v15 = sub_1BC10BB50();
  v16 = objc_msgSend(v15, sel_trailingAnchor);

  v17 = objc_msgSend(v0, sel_trailingAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  objc_msgSend(v18, sel_setActive_, 1);
  v19 = sub_1BC10BAF4();
  v20 = objc_msgSend(v19, sel_topAnchor);

  v21 = sub_1BC10BB50();
  v22 = objc_msgSend(v21, sel_bottomAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, 4.0);
  objc_msgSend(v23, sel_setActive_, 1);

  v24 = sub_1BC10BAF4();
  v25 = objc_msgSend(v24, sel_leadingAnchor);

  v26 = objc_msgSend(v0, sel_leadingAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  objc_msgSend(v27, sel_setActive_, 1);
  v28 = sub_1BC10BAF4();
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v0, sel_trailingAnchor);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  objc_msgSend(v31, sel_setActive_, 1);
  v32 = sub_1BC10BD64();
  v33 = v32;
  if (!(v32 >> 62))
  {
    v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v34)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v34 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v34 >= 1)
  {
    for (i = 0; i != v34; ++i)
    {
      if ((v33 & 0xC000000000000001) != 0)
        v37 = (id)MEMORY[0x1BCCEE950](i, v33);
      else
        v37 = *(id *)(v33 + 8 * i + 32);
      v38 = v37;
      objc_msgSend(v37, sel_setActive_, 1);

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC10C4F0(uint64_t a1)
{
  id v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BOOL8 v7;
  uint64_t i;
  id v9;
  void *v10;

  v2 = sub_1BC10BFDC();
  objc_msgSend(v2, sel_setActive_, a1 == 1);

  v3 = sub_1BC10BD64();
  v4 = v3;
  if (!(v3 >> 62))
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  v7 = a1 != 1;
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCEE950](i, v4);
      else
        v9 = *(id *)(v4 + 8 * i + 32);
      v10 = v9;
      objc_msgSend(v9, sel_setActive_, v7);

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_1BC10C5F8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor] = 0;
  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item];
  v10 = (objc_class *)type metadata accessor for MedicationDoseLogHeaderView();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC10C0A0();

  return v11;
}

uint64_t sub_1BC10C718()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC10DA90();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item;
  swift_beginAccess();
  sub_1BC0E5774(v13, (uint64_t)v38);
  if (!v38[3])
  {
    sub_1BC0F7954((uint64_t)v38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_9:
    sub_1BC0E8594((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC10DA90);
    sub_1BC2B39A4();
    v29 = v1;
    v30 = sub_1BC2B39D4();
    v31 = sub_1BC2B48C8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v2;
      v37 = v33;
      *(_DWORD *)v32 = 136315138;
      sub_1BC0E5774(v13, (uint64_t)v38);
      sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v34 = sub_1BC2B4490();
      v38[0] = sub_1BC12540C(v34, v35, &v37);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v30, v31, "Incorrect view model for MedicationsDoseLogHeaderItem: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v33, -1, -1);
      MEMORY[0x1BCCEF3A0](v32, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v36);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v14 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_9;
  sub_1BC10DAE4((uint64_t)v8, (uint64_t)v12);
  v15 = sub_1BC10BAF4();
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setText_, v16);

  v17 = sub_1BC10BB50();
  v18 = sub_1BC10BC18();
  v19 = (void *)sub_1BC2B2360();
  v20 = objc_msgSend(v18, sel_stringFromDate_, v19);

  if (!v20)
  {
    sub_1BC2B4460();
    v20 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v17, sel_setText_, v20);

  v21 = sub_1BC10BBE8();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v22 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC2B92D0;
  v24 = *(_QWORD *)&v12[*(int *)(v9 + 32)];
  v25 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v23 + 64) = v25;
  *(_QWORD *)(v23 + 32) = v24;
  sub_1BC2B446C();
  swift_bridgeObjectRelease();
  v26 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setText_, v26);

  v27 = sub_1BC10BBE8();
  objc_msgSend(v27, sel_setHidden_, v24 == 1);

  sub_1BC10C4F0(v24);
  return sub_1BC0E8594((uint64_t)v12, type metadata accessor for MedicationsDoseLogHeaderItem);
}

id sub_1BC10CCBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDoseLogHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDoseLogHeaderView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationsDoseLogHeaderDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3F9C08);
}

uint64_t sub_1BC10CDA8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MedicationsDoseLogHeaderItem(319);
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC10CE1C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC10CE70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC10C718();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC10CEE0(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC10CF2C;
}

uint64_t sub_1BC10CF2C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC10C718();
  return result;
}

uint64_t sub_1BC10CF5C()
{
  uint64_t v0;

  v0 = qword_1EF3F9BC0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1BC10CF90()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t sub_1BC10D00C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  sub_1BC2B23F0();
  sub_1BC0E519C(&qword_1EF3FCC70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC10D0C8()
{
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  sub_1BC2B23F0();
  sub_1BC0E519C(&qword_1EF3FCC70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  return sub_1BC2B545C();
}

uint64_t sub_1BC10D170()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  sub_1BC2B23F0();
  sub_1BC0E519C(&qword_1EF3FCC70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC10D228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1BC10D264()
{
  sub_1BC10D294();
}

void sub_1BC10D27C()
{
  sub_1BC10D294();
}

void sub_1BC10D294()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC10D2BC()
{
  uint64_t v0;

  return sub_1BC0E8594(v0 + qword_1EF402580, type metadata accessor for MedicationsDoseLogHeaderItem);
}

uint64_t sub_1BC10D2E4()
{
  uint64_t v0;

  v0 = sub_1BC2B2F3C();
  sub_1BC0E8594(v0 + qword_1EF402580, type metadata accessor for MedicationsDoseLogHeaderItem);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationsDoseLogHeaderItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0F870);
}

uint64_t sub_1BC10D340()
{
  return type metadata accessor for MedicationsDoseLogHeaderDataSource(0);
}

uint64_t *sub_1BC10D348(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1BC2B23F0();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_1BC10D44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1BC2B23F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1BC10D4C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1BC2B23F0();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1BC10D5A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1BC10D688(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1BC10D72C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1BC10D7F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC10D800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BC2B23F0();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1BC10D8AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC10D8B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1BC2B23F0();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1BC10D960()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = sub_1BC2B23F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BC10D9FC()
{
  return sub_1BC0E519C(&qword_1EF3F9C58, type metadata accessor for MedicationsDoseLogHeaderItem, (uint64_t)&unk_1BC2BA7D8);
}

uint64_t sub_1BC10DA28@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + qword_1EF402580;
  a1[3] = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  a1[4] = sub_1BC0E519C(&qword_1EDA0F868, type metadata accessor for MedicationsDoseLogHeaderItem, (uint64_t)&unk_1BC2BA800);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1BC10DB28(v3, (uint64_t)boxed_opaque_existential_1);
}

void sub_1BC10DA90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0F880)
  {
    type metadata accessor for MedicationsDoseLogHeaderItem(255);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0F880);
  }
}

uint64_t sub_1BC10DAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC10DB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1BC10DB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v27 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v27 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v27 - v15;
  v17 = *(int *)(v14 + 24);
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_1BC10DB28(a1, (uint64_t)&v27 - v15);
    sub_1BC10DB28(a2, (uint64_t)v13);
  }
  else
  {
    v22 = sub_1BC2B53CC();
    sub_1BC10DB28(a1, (uint64_t)v16);
    sub_1BC10DB28(a2, (uint64_t)v13);
    if ((v22 & 1) == 0)
    {
      sub_1BC0E8594((uint64_t)v13, type metadata accessor for MedicationsDoseLogHeaderItem);
      sub_1BC0E8594((uint64_t)v16, type metadata accessor for MedicationsDoseLogHeaderItem);
      sub_1BC10DB28(a1, (uint64_t)v10);
      sub_1BC10DB28(a2, (uint64_t)v7);
      goto LABEL_10;
    }
  }
  v23 = sub_1BC2B239C();
  sub_1BC0E8594((uint64_t)v13, type metadata accessor for MedicationsDoseLogHeaderItem);
  sub_1BC0E8594((uint64_t)v16, type metadata accessor for MedicationsDoseLogHeaderItem);
  sub_1BC10DB28(a1, (uint64_t)v10);
  sub_1BC10DB28(a2, (uint64_t)v7);
  if ((v23 & 1) != 0)
  {
    v24 = *(_QWORD *)&v10[*(int *)(v4 + 32)];
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationsDoseLogHeaderItem);
    v25 = *(_QWORD *)&v7[*(int *)(v4 + 32)];
    sub_1BC0E8594((uint64_t)v7, type metadata accessor for MedicationsDoseLogHeaderItem);
    return v24 == v25;
  }
LABEL_10:
  sub_1BC0E8594((uint64_t)v7, type metadata accessor for MedicationsDoseLogHeaderItem);
  sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationsDoseLogHeaderItem);
  return 0;
}

void sub_1BC10DD88()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = sub_1BC2B4460();
  v3 = v2;
  v4 = v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v12 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v12, v3);

  v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B50]);
  v9 = objc_msgSend(v8, sel_fontDescriptor);
  v10 = objc_msgSend(v9, sel_fontDescriptorWithSymbolicTraits_, 2);

  if (v10)
  {
    v11 = objc_msgSend(v7, sel_fontWithDescriptor_size_, v10, 0.0);
    objc_msgSend(v4, sel_setFont_, v11);

  }
  else
  {
    __break(1u);
  }
}

id sub_1BC10E00C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  v5 = sub_1BC2B4460();
  v7 = v6;
  v8 = v4;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v5, v7);

  v10 = objc_msgSend((id)objc_opt_self(), *a3);
  objc_msgSend(v8, sel_setTextColor_, v10);

  objc_msgSend(v8, sel_setTextAlignment_, 1);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  v11 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v8, sel_setFont_, v11);

  return v8;
}

void sub_1BC10E224()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor] = 0;
  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC10E2E0()
{
  return 0;
}

uint64_t ScheduleItemDisplayable.identifier.getter()
{
  return 0;
}

uint64_t sub_1BC10E2F8()
{
  return 0;
}

uint64_t ScheduleItemDisplayable.prefetchedSchedule.getter()
{
  return 0;
}

uint64_t ScheduleItemDisplayable.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1BC10E314()
{
  return 1;
}

uint64_t ScheduleItemDisplayable.shouldFetchScheduleLocally.getter()
{
  return 1;
}

Swift::String __swiftcall ScheduleItemDisplayable.localizedResolvedLoggingUnit(for:)(Swift::Double a1)
{
  uint64_t v1;
  void (**v2)(_QWORD, _QWORD);
  void (**v3)(_QWORD, _QWORD);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String result;

  v3 = v2;
  v4 = v1;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v3[6](v4, v3);
  v3[7](v4, v3);
  v3[9](v4, v3);
  v5 = sub_1BC2B4B98();
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v5;
  v9 = v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t HKMedicationUserDomainConcept.identifier.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_stringValue);

  v3 = sub_1BC2B4460();
  return v3;
}

uint64_t sub_1BC10E480()
{
  id *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_stringValue);

  v3 = sub_1BC2B4460();
  return v3;
}

uint64_t sub_1BC10E4F4()
{
  return sub_1BC2B4B8C();
}

uint64_t sub_1BC10E514()
{
  return sub_1BC2B4B74();
}

uint64_t sub_1BC10E534()
{
  return sub_1BC2B4B5C();
}

uint64_t sub_1BC10E558()
{
  return sub_1BC2B4BBC();
}

uint64_t sub_1BC10E57C()
{
  uint64_t v0;

  return sub_1BC118114(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC10E598()
{
  return sub_1BC2B33F8();
}

void *sub_1BC10E5A8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

uint64_t sub_1BC10E5CC()
{
  return 0;
}

uint64_t sub_1BC10E5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!*(_QWORD *)(v0 + 32))
    return 0;
  v1 = sub_1BC1B4E7C();
  if (!v2)
    return 0;
  v3 = v1;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC10E61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!*(_QWORD *)(v0 + 32))
    return 0;
  sub_1BC1B4E7C();
  if (!v2)
    return 0;
  v3 = v1;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC10E670()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1BC10E67C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

BOOL static ScheduleDataSource.DisplayContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ScheduleDataSource.DisplayContext.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t ScheduleDataSource.DisplayContext.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

BOOL sub_1BC10E70C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BC10E724()
{
  sub_1BC2B5450();
  sub_1BC2B23F0();
  sub_1BC0E519C(&qword_1EF3FCC70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC2B44D8();
  sub_1BC2B4D90();
  return sub_1BC2B548C();
}

uint64_t sub_1BC10E7C0()
{
  sub_1BC2B23F0();
  sub_1BC0E519C(&qword_1EF3FCC70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC2B44D8();
  return sub_1BC2B4D90();
}

uint64_t sub_1BC10E844()
{
  sub_1BC2B5450();
  sub_1BC2B23F0();
  sub_1BC0E519C(&qword_1EF3FCC70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC2B44D8();
  sub_1BC2B4D90();
  return sub_1BC2B548C();
}

uint64_t ScheduleDataSource.__allocating_init(with:healthStore:isMedicationActivePublisher:analyticsManager:context:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  v14 = sub_1BC118218(v13, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v14;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t ScheduleDataSource.init(with:healthStore:isMedicationActivePublisher:analyticsManager:context:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_1BC1166A8((uint64_t)v15, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t sub_1BC10EA58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  NSObject *v38;
  uint64_t v39;
  uint8_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;

  v48 = *v0;
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v41 - v7;
  sub_1BC118A44();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], v5);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - v11;
  sub_1BC118B5C();
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t *)((char *)v0 + qword_1EF3F9C68);
  v17 = *(uint64_t *)((char *)v0 + qword_1EF3F9C68 + 24);
  v18 = *(uint64_t *)((char *)v0 + qword_1EF3F9C68 + 32);
  __swift_project_boxed_opaque_existential_0((uint64_t *)((char *)v0 + qword_1EF3F9C68), v17);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18) & 1) != 0)
  {
    v49 = *(uint64_t *)((char *)v0 + qword_1EF3F9C70);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
    swift_retain();
    v50 = (id)sub_1BC2B4A0C();
    v19 = sub_1BC2B49C4();
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
    v20(v12, 1, 1, v19);
    sub_1BC118C10();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F9DA8, (uint64_t (*)(uint64_t))sub_1BC118C10, MEMORY[0x1E0C95FB8]);
    v41 = sub_1BC1019D8();
    sub_1BC2B4064();
    sub_1BC0F2444((uint64_t)v12, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

    swift_release();
    v21 = swift_allocObject();
    swift_weakInit();
    v22 = swift_allocObject();
    v23 = v48;
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = v23;
    sub_1BC0E519C(&qword_1EF3F9DB0, (uint64_t (*)(uint64_t))sub_1BC118B5C, MEMORY[0x1E0C95CB8]);
    v24 = v43;
    sub_1BC2B40A0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v24);
    swift_beginAccess();
    sub_1BC2B3E84();
    swift_endAccess();
    swift_release();
    v49 = sub_1BC2B371C();
    v50 = (id)sub_1BC2B4A0C();
    v20(v12, 1, 1, v19);
    sub_1BC118E08(0, &qword_1EF3F9D88, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
    sub_1BC118AF8();
    v25 = v44;
    sub_1BC2B4064();
    sub_1BC0F2444((uint64_t)v12, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

    swift_release();
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = sub_1BC118CB8;
    *(_QWORD *)(v27 + 24) = v26;
    sub_1BC0E519C(&qword_1EF3F9DB8, (uint64_t (*)(uint64_t))sub_1BC118A44, MEMORY[0x1E0C95CB8]);
    v28 = v46;
    sub_1BC2B40A0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v28);
    swift_beginAccess();
    sub_1BC2B3E84();
    swift_endAccess();
    swift_release();
    v29 = (uint64_t)v47;
    sub_1BC2B4664();
    v30 = sub_1BC2B467C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
    v31 = swift_allocObject();
    swift_weakInit();
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = 0;
    v32[3] = 0;
    v32[4] = v31;
    v32[5] = v23;
    sub_1BC1393A8(v29, (uint64_t)&unk_1EF3F9DC0, (uint64_t)v32);
    return swift_release();
  }
  else
  {
    v34 = v16[3];
    v35 = v16[4];
    __swift_project_boxed_opaque_existential_0(v16, v34);
    v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 24))(v34, v35);

    if (v36)
    {
      result = sub_1BC2B275C();
      if ((result & 1) == 0)
      {
        sub_1BC2B2744();
        sub_1BC2B2A08();
        swift_release();
        sub_1BC10FB64();
        sub_1BC2B2C18();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      v37 = v4;
      sub_1BC2B39A4();
      v38 = sub_1BC2B39D4();
      v39 = sub_1BC2B48C8();
      if (os_log_type_enabled(v38, (os_log_type_t)v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_1BC0DC000, v38, (os_log_type_t)v39, "Unable to display schedule if we have no prefetched schedule and should not fetch it.", v40, 2u);
        MEMORY[0x1BCCEF3A0](v40, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v37, v1);
    }
  }
  return result;
}

uint64_t sub_1BC10F110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v0 = sub_1BC2B39E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if ((sub_1BC2B275C() & 1) != 0)
    {
      return swift_release();
    }
    else
    {
      sub_1BC2B2744();
      sub_1BC2B2A08();
      swift_release();
      sub_1BC10FB64();
      sub_1BC2B2C18();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC2B39A4();
    v5 = sub_1BC2B39D4();
    v6 = sub_1BC2B48C8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v12 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = sub_1BC2B54F8();
      v11[1] = sub_1BC12540C(v9, v10, &v12);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v5, v6, "Unable to update section as %s was deallocated.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v8, -1, -1);
      MEMORY[0x1BCCEF3A0](v7, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_1BC10F330()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC10F384();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC10F384()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v1 = *v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - v3;
  sub_1BC2B4664();
  v5 = sub_1BC2B467C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v6;
  v7[5] = v1;
  sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF3F9D78, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1BC10F478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[21] = a4;
  v5[22] = a5;
  v6 = sub_1BC2B39E0();
  v5[23] = v6;
  v5[24] = *(_QWORD *)(v6 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC10F4F4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 224) = Strong;
  if (Strong)
  {
    v2 = Strong;
    v3 = (_QWORD *)(Strong + qword_1EF3F9C68);
    v4 = v3[3];
    v5 = v3[4];
    __swift_project_boxed_opaque_existential_0(v3, v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    if (v6)
    {
      v7 = *(void **)(v2 + qword_1EF3F9C88);
      *(_QWORD *)(v0 + 232) = v7;
      if (v7)
      {
        v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C490]), sel_initWithHealthStore_, v7);
        *(_QWORD *)(v0 + 240) = v8;
        v9 = sub_1BC2B4430();
        *(_QWORD *)(v0 + 248) = v9;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 56) = v0 + 152;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_1BC10F92C;
        v10 = swift_continuation_init();
        *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
        v11 = (_QWORD *)(v0 + 80);
        v11[1] = 0x40000000;
        v11[2] = sub_1BC10FAB8;
        v11[3] = &block_descriptor_13;
        v11[4] = v10;
        objc_msgSend(v8, sel_fetchScheduleWithMedicationIdentifier_completion_, v9, v11);
        return swift_continuation_await();
      }
      swift_bridgeObjectRelease();
      sub_1BC2B39A4();
      v29 = sub_1BC2B39D4();
      v30 = sub_1BC2B48C8();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_1BC0DC000, v29, v30, "Unable to fetch schedule as healthStore is nil.", v31, 2u);
        MEMORY[0x1BCCEF3A0](v31, -1, -1);

        swift_release();
      }
      else
      {
        swift_release();

      }
      v24 = *(_QWORD *)(v0 + 200);
    }
    else
    {
      sub_1BC2B39A4();
      v25 = sub_1BC2B39D4();
      v26 = sub_1BC2B48C8();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_1BC0DC000, v25, v26, "Unable to fetch schedule as identifier is nil.", v27, 2u);
        MEMORY[0x1BCCEF3A0](v27, -1, -1);

        swift_release();
      }
      else
      {
        swift_release();

      }
      v24 = *(_QWORD *)(v0 + 208);
    }
    v28 = *(_QWORD *)(v0 + 184);
    v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 8);
  }
  else
  {
    sub_1BC2B39A4();
    v13 = sub_1BC2B39D4();
    v14 = sub_1BC2B48C8();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 192);
    if (v15)
    {
      v32 = *(_QWORD *)(v0 + 216);
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v33 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = sub_1BC2B54F8();
      *(_QWORD *)(v0 + 144) = sub_1BC12540C(v21, v22, &v33);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v13, v14, "Unable to fetch schedule as %s was deallocated.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
      MEMORY[0x1BCCEF3A0](v19, -1, -1);

      v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v24 = v32;
    }
    else
    {

      v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v24 = v16;
    }
    v28 = v18;
  }
  v23(v24, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC10F92C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 256) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC10F98C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 240);
  v3 = *(void **)(v0 + 232);

  *(_QWORD *)(v0 + 160) = v1;
  sub_1BC2B3EC0();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC10FA1C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 256);
  swift_willThrow();

  v2 = *(void **)(v0 + 240);
  v3 = *(void **)(v0 + 232);

  *(_QWORD *)(v0 + 160) = 0;
  sub_1BC2B3EC0();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC10FAB8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_1BC1189E8((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_1BC10FB64()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  id v16;
  unint64_t v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  void *v22;
  id v23;
  void (*v24)(id *, _QWORD);
  void (*v25)(id *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27;
  char *v28;
  char **v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[5];
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v47 = *v0;
  v1 = sub_1BC2B2FA8();
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  MEMORY[0x1E0C80A78](v1);
  v51 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1BC2B2C6C();
  v3 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v41 - v7;
  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC2B2438();
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x1E0C80A78](v13);
  v53 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v52) = *((unsigned __int8 *)v0 + qword_1EF3F9C60);
  LOBYTE(v58) = v52;
  v15 = (uint64_t (*)(uint64_t))((char *)v0 + qword_1EF3F9C68);
  v56 = sub_1BC112168(&v58, (id *)((char *)v0 + qword_1EF3F9C68));
  sub_1BC2B3ED8();
  v16 = v58;
  if (v58)
  {
    if (objc_msgSend(v58, sel_isUnavailable))
    {
      swift_bridgeObjectRelease();
      v17 = sub_1BC111E70(v15);
    }
    else
    {
      v34 = v52;
      LOBYTE(v58) = v52;
      v35 = (void *)sub_1BC116F3C(v15, (unsigned __int8 *)&v58);
      LOBYTE(v58) = v34;
      v36 = sub_1BC110310((unsigned __int8 *)&v58);
      LOBYTE(v58) = v34;
      v37 = sub_1BC1176C4((unsigned __int8 *)&v58);
      LOBYTE(v58) = v34;
      v38 = sub_1BC117D34(&v58);
      sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1BC2B2BC4();
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1BC2B92D0;
      v58 = v35;
      sub_1BC130FBC(v36);
      sub_1BC130FBC(v37);
      sub_1BC130FBC(v56);
      sub_1BC130FBC(v38);
      v39 = v53;
      sub_1BC2B242C();
      sub_1BC2B23FC();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
      sub_1BC2B2BAC();
    }

  }
  else
  {
    v42 = v3;
    v43 = v12;
    v44 = v10;
    v45 = v8;
    v46 = v5;
    if (qword_1EF3F8098 != -1)
      swift_once();
    v58 = 0;
    v59 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1BC2B51BC();
    v18 = (void *)sub_1BC2B54F8();
    v20 = v19;
    swift_bridgeObjectRelease();
    v58 = v18;
    v59 = v20;
    sub_1BC2B44FC();
    v47 = v58;
    v41[1] = *(id *)((char *)v0 + qword_1EF3F9C78);
    v21 = v43;
    sub_1BC2B3C80();
    swift_bridgeObjectRetain();
    sub_1BC2B3C98();
    v22 = (void *)objc_opt_self();
    v23 = objc_msgSend(v22, sel_labelColor);
    v24 = (void (*)(id *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3BB4();
    v24(&v58, 0);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    sub_1BC2B4C64();
    v25 = (void (*)(id *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3BA8();
    v25(&v58, 0);
    v57[3] = v9;
    v57[4] = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
    v27 = v44;
    (*(void (**)(uint64_t *, char *, uint64_t))(v44 + 16))(boxed_opaque_existential_1, v21, v9);
    swift_bridgeObjectRetain();
    v28 = v45;
    sub_1BC2B3B24();
    v29 = &selRef_tertiarySystemGroupedBackgroundColor;
    if (!(_DWORD)v52)
      v29 = &selRef_tertiarySystemBackgroundColor;
    v30 = objc_msgSend(v22, *v29);
    sub_1BC2B3B18();
    v31 = sub_1BC2B3B48();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v28, 0, 1, v31);
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v46, *MEMORY[0x1E0D2B170], v48);
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v51, *MEMORY[0x1E0D2B8C8], v50);
    v60 = sub_1BC2B2D98();
    v61 = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v58);
    swift_bridgeObjectRetain();
    sub_1BC2B2D8C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC2B2BC4();
    v17 = swift_allocObject();
    v52 = xmmword_1BC2B92D0;
    *(_OWORD *)(v17 + 16) = xmmword_1BC2B92D0;
    sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = v52;
    sub_1BC0E79F0((uint64_t)&v58, v32 + 32);
    v57[0] = v32;
    sub_1BC130FBC(v56);
    v33 = v53;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v55);
    sub_1BC2B2BAC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v58);
  }
  return v17;
}

uint64_t sub_1BC110310(unsigned __int8 *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  int v36;
  id v37;
  char v38;
  id v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  id v54;
  void *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  unsigned int v58;
  uint64_t v59;
  char *v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void (*v70)(uint64_t *, _QWORD);
  id v71;
  void (*v72)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  char **v78;
  id v79;
  uint64_t v80;
  uint64_t *v81;
  char v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107[6];

  v2 = v1;
  v4 = sub_1BC2B39E0();
  v102 = *(_QWORD *)(v4 - 8);
  v103 = (unsigned int (*)(char *, uint64_t, uint64_t))v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1BC2B2FA8();
  v98 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v100 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1BC2B2C6C();
  v95 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v99 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v96 = (char *)&v85 - v11;
  v12 = sub_1BC2B2D98();
  v93 = *(_QWORD *)(v12 - 8);
  v94 = v12;
  MEMORY[0x1E0C80A78](v12);
  v92 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC2B23F0();
  v105 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v90 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v85 - v17;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v19, v9);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v85 - v24;
  v101 = sub_1BC2B3CD4();
  v104 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v106 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BC2B2594();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, v9);
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v85 - v34;
  v36 = *a1;
  v37 = objc_msgSend(v2, sel_scheduleType);
  if (v37 == (id)7)
  {
    if ((v36 & 1) != 0)
      return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    if (v37 == (id)8)
      v38 = v36;
    else
      v38 = 1;
    if ((v38 & 1) != 0)
      return MEMORY[0x1E0DEE9D8];
  }
  v89 = v18;
  v88 = v23;
  v39 = v2;
  sub_1BC2B251C();
  sub_1BC20BBE8(v39, (uint64_t)v29, (uint64_t)v35);
  v40 = type metadata accessor for CycleData();
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48);
  if (v41(v35, 1, v40) == 1)
  {
    sub_1BC0F2444((uint64_t)v35, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    sub_1BC2B39A4();
    v42 = sub_1BC2B39D4();
    v43 = sub_1BC2B48C8();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_1BC0DC000, v42, v43, "Could not create cycleDataDescription item while attempting to display an item.", v44, 2u);
      MEMORY[0x1BCCEF3A0](v44, -1, -1);
    }

    (*(void (**)(char *, unsigned int (*)(char *, uint64_t, uint64_t)))(v102 + 8))(v6, v103);
    return MEMORY[0x1E0DEE9D8];
  }
  v87 = v40;
  v103 = v41;
  LODWORD(v102) = v36;
  CycleData.localizedDescription.getter();
  sub_1BC0E8594((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
  sub_1BC2B3CC8();
  sub_1BC2B3C98();
  v46 = v39;
  v47 = objc_msgSend(v39, sel_endDateTime);
  if (!v47)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v25, 1, 1, v14);
    goto LABEL_19;
  }
  v48 = v47;
  v49 = v89;
  sub_1BC2B23A8();

  v50 = v105;
  v51 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
  v51(v25, v49, v14);
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
  v52(v25, 0, 1, v14);
  v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  if (v53(v25, 1, v14) == 1)
  {
LABEL_19:
    sub_1BC0F2444((uint64_t)v25, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v59 = v101;
    v61 = v103;
    goto LABEL_20;
  }
  v86 = (void (*)(char *, uint64_t, uint64_t))v51;
  sub_1BC0F2444((uint64_t)v25, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v54 = objc_msgSend(v46, sel_endDateTime);
  if (v54)
  {
    v55 = v54;
    sub_1BC2B23A8();

    v56 = (uint64_t)v88;
    v57 = v86;
    v86(v88, (uint64_t)v49, v14);
    v52((char *)v56, 0, 1, v14);
    v58 = v53((char *)v56, 1, v14);
    v59 = v101;
    v60 = v90;
    if (v58 != 1)
    {
      v57(v90, v56, v14);
      goto LABEL_30;
    }
  }
  else
  {
    v56 = (uint64_t)v88;
    v52(v88, 1, 1, v14);
    v59 = v101;
    v60 = v90;
  }
  sub_1BC2B23B4();
  sub_1BC0F2444(v56, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
LABEL_30:
  sub_1BC2B2330();
  v83 = sub_1BC2B236C();
  v84 = *(void (**)(char *, uint64_t))(v105 + 8);
  v84(v49, v14);
  v84(v60, v14);
  v61 = v103;
  if ((v83 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v106, v59);
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_20:
  v62 = v46;
  sub_1BC2B251C();
  sub_1BC20BBE8(v62, (uint64_t)v29, (uint64_t)v33);
  if (v61(v33, 1, v87) == 1)
  {
    sub_1BC0F2444((uint64_t)v33, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    v64 = v93;
    v63 = v94;
    v66 = v91;
    v65 = v92;
  }
  else
  {
    CycleData.localizedNextPhaseDateChangeDescription.getter();
    v68 = v67;
    sub_1BC0E8594((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
    v64 = v93;
    v63 = v94;
    v66 = v91;
    v65 = v92;
    if (v68)
    {
      sub_1BC2B3B6C();
      v69 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
      v70 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
      sub_1BC2B3BA8();
      v70(v107, 0);
      v71 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      v72 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
      sub_1BC2B3BB4();
      v72(v107, 0);
    }
  }
  v107[3] = v59;
  v107[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v107);
  v74 = v104;
  v75 = v106;
  (*(void (**)(uint64_t *, char *, uint64_t))(v104 + 16))(boxed_opaque_existential_1, v106, v59);
  v76 = v96;
  sub_1BC2B3B24();
  v77 = (void *)objc_opt_self();
  v78 = &selRef_tertiarySystemGroupedBackgroundColor;
  if (!(_DWORD)v102)
    v78 = &selRef_tertiarySystemBackgroundColor;
  v79 = objc_msgSend(v77, *v78);
  sub_1BC2B3B18();
  v80 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v76, 0, 1, v80);
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v99, *MEMORY[0x1E0D2B170], v97);
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v100, *MEMORY[0x1E0D2B8C8], v66);
  sub_1BC2B2D8C();
  sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v45 + 56) = v63;
  *(_QWORD *)(v45 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  v81 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v45 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v64 + 32))(v81, v65, v63);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v59);
  return v45;
}

id sub_1BC110CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id result;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  unsigned int v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24[2];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  v8 = v7 == (id)1;
  v9 = *(_QWORD *)(v1 + qword_1EF3F9C68 + 24);
  v10 = *(_QWORD *)(v1 + qword_1EF3F9C68 + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v1 + qword_1EF3F9C68), v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
  LOBYTE(v24[0]) = v8;
  BYTE1(v24[0]) = 1;
  BYTE2(v24[0]) = (v11 & 1) == 0;
  v24[1] = 1;
  result = (id)ScheduleUnavailableDeviceState.bodyText.getter();
  if (!v13)
  {
    sub_1BC2B39A4();
    swift_retain_n();
    v14 = sub_1BC2B39D4();
    v15 = sub_1BC2B48C8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v23 = v1;
      v24[0] = v17;
      *(_DWORD *)v16 = 136446210;
      v22 = v16 + 4;
      type metadata accessor for ScheduleDataSource(0);
      swift_retain();
      v18 = sub_1BC2B4478();
      v23 = sub_1BC12540C(v18, v19, v24);
      sub_1BC2B4FD0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v14, v15, "[%{public}s] Error getting body text for data source, ScheduleUnavailableDeviceState returned nil", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v17, -1, -1);
      MEMORY[0x1BCCEF3A0](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (result)
    {
      v20 = result;
      v21 = objc_msgSend(result, sel_isAppleInternalInstall);

      if (v21)
        return (id)0xD00000000000002ALL;
      else
        return 0;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1BC110F9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  int *v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t (**v31)();
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v2 = sub_1BC2B3B48();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v6 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v7 = sub_1BC2B2144();
  v38 = v8;
  v39 = v7;
  swift_bridgeObjectRelease();

  v9 = sub_1BC110CD0();
  v36 = v10;
  v37 = v9;
  v11 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v35 = sub_1BC2B2144();
  v13 = v12;
  swift_bridgeObjectRelease();

  sub_1BC2B3B24();
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  aBlock[4] = sub_1BC111304;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC114C64;
  aBlock[3] = &block_descriptor_7;
  v15 = _Block_copy(aBlock);
  v16 = objc_msgSend(v14, sel_initWithDynamicProvider_, v15);
  _Block_release(v15);
  swift_release();
  v17 = v16;
  sub_1BC2B3B18();
  v18 = (int *)type metadata accessor for TileItem(0);
  a1[3] = (uint64_t)v18;
  a1[4] = sub_1BC0E519C(&qword_1EF3F9D18, type metadata accessor for TileItem, (uint64_t)&protocol conformance descriptor for TileItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)boxed_opaque_existential_1 + v18[11], v5, v2);
  type metadata accessor for TileItem.Background(0);
  swift_storeEnumTagMultiPayload();
  sub_1BC2B242C();
  v20 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[5]);
  type metadata accessor for TileItemCell();
  sub_1BC0E519C(&qword_1EF3FBA70, (uint64_t (*)(uint64_t))type metadata accessor for TileItemCell, (uint64_t)&protocol conformance descriptor for TileItemCell);
  v21 = sub_1BC2B2930();
  v23 = v22;

  *v20 = v21;
  v20[1] = v23;
  v24 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[6]);
  v25 = v38;
  *v24 = v39;
  v24[1] = v25;
  v26 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[7]);
  v27 = v36;
  *v26 = v37;
  v26[1] = v27;
  v28 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[8]);
  *v28 = 0;
  v28[1] = 0;
  v29 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[9]);
  *v29 = v35;
  v29[1] = v13;
  v30 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[10]);
  *v30 = 0;
  v30[1] = 0;
  v31 = (uint64_t (**)())((char *)boxed_opaque_existential_1 + v18[12]);
  *v31 = sub_1BC111308;
  v31[1] = 0;
  v32 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[13]);
  *v32 = 0;
  v32[1] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC111308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v0 = sub_1BC2B338C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FCD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - v6;
  sub_1BC0E7998(0, &qword_1EF3F9D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v4);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = sub_1BC2B2234();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B24A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  sub_1BC2B3380();
  sub_1BC2B38F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC0F2444((uint64_t)v7, (unint64_t *)&unk_1EF3FCD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  sub_1BC2B2228();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1BC0F2444((uint64_t)v10, &qword_1EF3F9D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_1BC2B2204();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1BC111560@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(uint64_t *, _QWORD);
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t *v31;
  _QWORD v33[2];
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t aBlock;
  unint64_t v48;
  id (*v49)(uint64_t, void *);
  void *v50;
  uint64_t (*v51)();
  uint64_t v52;

  v46 = a1;
  v36 = *v1;
  v2 = sub_1BC2B2FA8();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x1E0C80A78](v2);
  v45 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1BC2B2C6C();
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v42 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v33 - v7;
  v8 = sub_1BC2B3B48();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[0] = sub_1BC2B3CD4();
  v37 = *(_QWORD *)(v33[0] - 8);
  MEMORY[0x1E0C80A78](v33[0]);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3CC8();
  v13 = objc_msgSend((id)objc_opt_self(), sel_linkColor);
  v14 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v14(&aBlock, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v15 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C98();
  sub_1BC2B3B24();
  v16 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v51 = sub_1BC111304;
  v52 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v48 = 1107296256;
  v49 = sub_1BC114C64;
  v50 = &block_descriptor_3;
  v17 = _Block_copy(&aBlock);
  v18 = objc_msgSend(v16, sel_initWithDynamicProvider_, v17);
  _Block_release(v17);
  swift_release();
  v35 = v18;
  sub_1BC2B3B18();
  aBlock = 0;
  v48 = 0xE000000000000000;
  sub_1BC2B51BC();
  v19 = sub_1BC2B54F8();
  v21 = v20;
  swift_bridgeObjectRelease();
  aBlock = v19;
  v48 = v21;
  sub_1BC2B44FC();
  v36 = aBlock;
  v33[1] = v48;
  v22 = v33[0];
  v50 = (void *)v33[0];
  v51 = (uint64_t (*)())MEMORY[0x1E0DC2398];
  v23 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
  v24 = v12;
  v34 = v12;
  v25 = v37;
  (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(v23, v24, v22);
  swift_allocObject();
  swift_weakInit();
  v26 = v39;
  v27 = v40;
  v28 = v41;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v41, v10, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v42, *MEMORY[0x1E0D2B170], v38);
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v45, *MEMORY[0x1E0D2B8C8], v44);
  v29 = sub_1BC2B2D98();
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
  v31 = v46;
  v46[3] = v29;
  v31[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v30, MEMORY[0x1E0D2B340]);
  __swift_allocate_boxed_opaque_existential_1(v31);
  swift_retain();
  sub_1BC2B2D8C();

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v34, v22);
  return swift_release();
}

id sub_1BC111A6C(void *a1)
{
  id v1;
  void *v2;
  char **v3;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  v3 = &selRef_tertiarySystemBackgroundColor;
  if (v1 != (id)2)
    v3 = &selRef_tertiarySystemFillColor;
  return objc_msgSend(v2, *v3);
}

uint64_t sub_1BC111AC4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void (*v15)(char *, uint64_t);
  uint64_t Strong;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD v32[2];
  _BYTE v33[40];

  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v32 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v32 - v10;
  sub_1BC2B39A4();
  v12 = sub_1BC2B39D4();
  v13 = sub_1BC2B48B0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1BC0DC000, v12, v13, "Did tap 'Reset Schedule' item", v14, 2u);
    MEMORY[0x1BCCEF3A0](v14, -1, -1);
  }

  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v11, v2);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = Strong;
    sub_1BC0E79F0(Strong + qword_1EF3F9C68, (uint64_t)v33);
    sub_1BC0E7AD8(0, &qword_1EF3F9D10);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v18 = (void *)v32[1];
      v19 = *(_QWORD *)(v17 + qword_1EF3F9C70);
      v20 = objc_allocWithZone((Class)type metadata accessor for MedicationsInputViewController());
      swift_retain();
      v21 = v18;
      v22 = MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(v19, v21, 1, 0);
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v22);
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v23, 1, 0);

      swift_retain();
      sub_1BC2B37E8();
      swift_release();

      return swift_release();
    }
    sub_1BC2B39A4();
    v29 = sub_1BC2B39D4();
    v30 = sub_1BC2B48C8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1BC0DC000, v29, v30, "Unable to create MedicationsInputViewController if medication is nil.", v31, 2u);
      MEMORY[0x1BCCEF3A0](v31, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    v28 = v6;
  }
  else
  {
    sub_1BC2B39A4();
    v25 = sub_1BC2B39D4();
    v26 = sub_1BC2B48C8();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1BC0DC000, v25, v26, "Unable to create MedicationsInputViewController if ScheduleDataSource is nil.", v27, 2u);
      MEMORY[0x1BCCEF3A0](v27, -1, -1);
    }

    v28 = v9;
  }
  return ((uint64_t (*)(char *, uint64_t))v15)(v28, v2);
}

unint64_t sub_1BC111E70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  __int128 v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32[5];
  uint64_t v33[5];

  v2 = sub_1BC2B2438();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BC2B2BC4();
  v6 = *(_QWORD *)(v31 - 8);
  v7 = MEMORY[0x1E0C80A78](v31);
  v30 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - v9;
  sub_1BC110F9C(v33);
  sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v28 = v11;
  v12 = swift_allocObject();
  v26 = xmmword_1BC2B92D0;
  *(_OWORD *)(v12 + 16) = xmmword_1BC2B92D0;
  sub_1BC0E79F0((uint64_t)v33, v12 + 32);
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v5, v2);
  sub_1BC2B2BAC();
  v13 = sub_1BC0FA280(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v15 = *(_QWORD *)(v13 + 16);
  v14 = *(_QWORD *)(v13 + 24);
  v29 = v2;
  if (v15 >= v14 >> 1)
    v13 = sub_1BC0FA280(v14 > 1, v15 + 1, 1, v13);
  *(_QWORD *)(v13 + 16) = v15 + 1;
  v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = *(_QWORD *)(v6 + 72);
  v18 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v18(v13 + v16 + v17 * v15, v10, v31);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v19);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20) & 1) != 0)
  {
    sub_1BC111560(v32);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v26;
    sub_1BC0E79F0((uint64_t)v32, v21 + 32);
    sub_1BC2B242C();
    sub_1BC2B23FC();
    v27(v5, v29);
    v22 = v30;
    sub_1BC2B2BAC();
    v24 = *(_QWORD *)(v13 + 16);
    v23 = *(_QWORD *)(v13 + 24);
    if (v24 >= v23 >> 1)
      v13 = sub_1BC0FA280(v23 > 1, v24 + 1, 1, v13);
    *(_QWORD *)(v13 + 16) = v24 + 1;
    v18(v13 + v16 + v24 * v17, v22, v31);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  return v13;
}

uint64_t sub_1BC112168(_BYTE *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unsigned __int8 v24;
  uint64_t v25;
  id v27;
  void (*v28)(id *, _QWORD);
  id v29;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52[2];
  id v53[6];

  v4 = sub_1BC2B2FA8();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B2C6C();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  v13 = sub_1BC2B2D98();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (void *)sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v43 = v18;
  v44 = v16;
  v45 = v14;
  v21 = a2[3];
  v22 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v21);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22) & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC2B3ED8();
  v23 = v53[0];
  if (v53[0])
  {
    v24 = objc_msgSend(v53[0], sel_isUnavailable);

    if ((v24 & 1) != 0)
      return MEMORY[0x1E0DEE9D8];
  }
  v42 = v13;
  sub_1BC2B3CC8();
  v41 = (id)objc_opt_self();
  v27 = objc_msgSend(v41, sel_tintColor);
  v28 = (void (*)(id *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v28(v53, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v29 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C98();
  v53[3] = v17;
  v53[4] = (id)MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v53);
  v31 = v43;
  (*(void (**)(uint64_t *, char *, void *))(v43 + 16))(boxed_opaque_existential_1, v20, v17);
  v32 = swift_allocObject();
  swift_weakInit();
  sub_1BC0E79F0((uint64_t)a2, (uint64_t)v52);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v32;
  sub_1BC0F2730(v52, v33 + 24);
  swift_retain();
  sub_1BC2B3B24();
  v34 = objc_msgSend(v41, sel_tertiarySystemBackgroundColor);
  sub_1BC2B3B18();
  v35 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 0, 1, v35);
  v50 = sub_1BC2B4460();
  v51 = v36;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v9, *MEMORY[0x1E0D2B170], v47);
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v6, *MEMORY[0x1E0D2B8C8], v49);
  v37 = v44;
  sub_1BC2B2D8C();
  swift_release();
  sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC2B92D0;
  v38 = v42;
  *(_QWORD *)(v25 + 56) = v42;
  *(_QWORD *)(v25 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  v39 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v25 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v45 + 32))(v39, v37, v38);
  (*(void (**)(char *, void *))(v31 + 8))(v20, v17);
  return v25;
}

uint64_t sub_1BC1126C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD v19[2];
  _BYTE v20[40];

  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = *(_QWORD *)(result + qword_1EF3F9C70);
    swift_retain();
    swift_release();
    sub_1BC0E79F0(a3, (uint64_t)v20);
    sub_1BC0E7AD8(0, &qword_1EF3F9D10);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v11 = (void *)v19[1];
      v12 = objc_allocWithZone((Class)type metadata accessor for MedicationsInputViewController());
      swift_retain();
      v13 = v11;
      v14 = MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(v10, v13, 0, 0);
      v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v14);
      objc_msgSend(v15, sel_setModalPresentationStyle_, 2);
      objc_msgSend(v15, sel_setModalInPresentation_, 1);
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v15, 1, 0);

      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_retain();
        swift_release();
        sub_1BC2B37E8();
        swift_release();
      }

      return swift_release();
    }
    else
    {
      sub_1BC2B39A4();
      v16 = sub_1BC2B39D4();
      v17 = sub_1BC2B48C8();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_1BC0DC000, v16, v17, "Unable to create MedicationsInputViewController if medication is nil.", v18, 2u);
        MEMORY[0x1BCCEF3A0](v18, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return result;
}

uint64_t sub_1BC112984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  void (*v16)(_BYTE *, uint64_t);
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[32];

  v3 = sub_1BC2B2D20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v20[-v9];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v20[-v11];
  if (a1)
    sub_1BC2B2CC0();
  else
    sub_1BC2B2C9C();
  if ((*(_BYTE *)(v1 + qword_1EF3F9C60) & 1) != 0)
  {
    v13 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
    *(_QWORD *)(v14 + 16) = 0x4024000000000000;
    v13(v20, 0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v10, v12, v3);
  }
  else
  {
    v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16);
    v15(v10, v12, v3);
    sub_1BC2B2C90();
    v16 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
    v16(v10, v3);
    v16(v12, v3);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v12, v7, v3);
    v15(v10, v12, v3);
  }
  v17 = sub_1BC2B2D14();
  v18 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v18(v10, v3);
  v18(v12, v3);
  return v17;
}

void ScheduleDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ScheduleDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC112B6C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF3F9C68);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t ScheduleDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF3F9C68);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ScheduleDataSource.__deallocating_deinit()
{
  ScheduleDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC112CC0(uint64_t a1)
{
  return sub_1BC112984(a1);
}

uint64_t sub_1BC112CE0()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for ScheduleDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall ScheduleDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for TileItemCell();
  sub_1BC0E519C(&qword_1EF3FBA70, (uint64_t (*)(uint64_t))type metadata accessor for TileItemCell, (uint64_t)&protocol conformance descriptor for TileItemCell);
  sub_1BC2B497C();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B3038();
  sub_1BC2B497C();
  type metadata accessor for ScheduleIntervalCell();
  sub_1BC0E519C(&qword_1EF3F9CA8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalCell, (uint64_t)&unk_1BC2C2C50);
  sub_1BC2B497C();
  sub_1BC2B2BD0();
  sub_1BC2B4988();
}

uint64_t sub_1BC112E08()
{
  type metadata accessor for TileItemCell();
  sub_1BC0E519C(&qword_1EF3FBA70, (uint64_t (*)(uint64_t))type metadata accessor for TileItemCell, (uint64_t)&protocol conformance descriptor for TileItemCell);
  sub_1BC2B497C();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B3038();
  sub_1BC2B497C();
  type metadata accessor for ScheduleIntervalCell();
  sub_1BC0E519C(&qword_1EF3F9CA8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalCell, (uint64_t)&unk_1BC2C2C50);
  sub_1BC2B497C();
  sub_1BC2B2BD0();
  return sub_1BC2B4988();
}

uint64_t ScheduleDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  id v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  _QWORD v30[2];

  v7 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1BC2B2438();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B4460() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_9;
  }
  if ((*(_BYTE *)(v3 + qword_1EF3F9C60) & 1) == 0)
  {
    sub_1BC2B3ED8();
    v21 = (void *)v30[0];
    if (!v30[0] || (sub_1BC239808(1), v23 = v22, v21, !v23))
      swift_bridgeObjectRelease();
    v30[0] = 0x74497265746F6F46;
    v30[1] = 0xEB000000005F6D65;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v24 = sub_1BC2B2EDC();
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
    a3[3] = v24;
    a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v25, MEMORY[0x1E0D2B6A8]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1BC2B2ED0();
  }
LABEL_9:
  if (sub_1BC2B4460() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      v18 = sub_1BC2B296C();
      v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v18;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v19, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v26 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C68();
  v27 = sub_1BC2B28F4();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v29 = sub_1BC2B28E8();
  a3[3] = v27;
  result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v28, MEMORY[0x1E0D2A8A0]);
  a3[4] = result;
  *a3 = v29;
  return result;
}

uint64_t sub_1BC113298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return ScheduleDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1BC1132B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t);
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1BC2B2594();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2564();
  v8 = sub_1BC2B24BC();
  v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  sub_1BC2B2564();
  v10 = sub_1BC2B24E0();
  v9(v7, v4);
  v11 = sub_1BC2B23F0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((v8 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    sub_1BC118758();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 2, v13);
  }
  else if ((v10 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    sub_1BC118758();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 2, 2, v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a2, a1, v11);
    sub_1BC118758();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 0, 2, v16);
  }
}

id sub_1BC113424@<X0>(id *a1@<X0>, _QWORD *a2@<X2>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  NSObject *v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  char *v45;
  NSObject *v46;

  v45 = a3;
  v40 = a2;
  v4 = sub_1BC2B39E0();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B20FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = sub_1BC2B23F0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *a1;
  v17 = objc_msgSend(v44, sel_startTimeComponent);
  sub_1BC2B2078();

  sub_1BC122D38((uint64_t)v9, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BC0F2444((uint64_t)v12, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v18 = v43;
    sub_1BC2B39A4();
    v19 = v44;
    v20 = sub_1BC2B39D4();
    v21 = sub_1BC2B48C8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v46 = v19;
      v24 = v19;
      v18 = v43;
      sub_1BC2B4FD0();
      *v23 = v19;

      _os_log_impl(&dword_1BC0DC000, v20, v21, "Could not create schedule dosage row for timeInterval: %@", v22, 0xCu);
      sub_1BC118918(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v23, -1, -1);
      MEMORY[0x1BCCEF3A0](v22, -1, -1);
    }
    else
    {

      v20 = v19;
    }
    v35 = v45;
    v37 = v41;
    v36 = v42;

    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v36);
    v38 = type metadata accessor for ScheduleDataSource.DoseItem(0);
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v25(v16, v12, v13);
    __swift_project_boxed_opaque_existential_0(v40, v40[3]);
    v26 = v44;
    v27 = objc_msgSend(v44, sel_dose);
    v28 = sub_1BC2B33E0();
    v30 = v29;

    v31 = v45;
    v25(v45, v16, v13);
    v32 = type metadata accessor for ScheduleDataSource.DoseItem(0);
    v33 = (uint64_t *)&v31[*(int *)(v32 + 20)];
    *v33 = v28;
    v33[1] = v30;
    *(_QWORD *)&v31[*(int *)(v32 + 24)] = v26;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
    return v26;
  }
}

uint64_t sub_1BC113814()
{
  return sub_1BC2B2378() & 1;
}

BOOL sub_1BC11383C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v2 = sub_1BC2B2594();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  sub_1BC2B2564();
  v12 = sub_1BC2B3824();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v28 = v2;
  v13(v5, v2);
  v14 = *(_QWORD *)(v12 + 16);
  v15 = sub_1BC2B3848();
  v16 = *(_QWORD *)(v15 - 8);
  if (v14)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v11, v12 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v18(v11, v17, 1, v15);
  swift_bridgeObjectRelease();
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v19(v11, 1, v15) == 1)
  {
    sub_1BC0F2444((uint64_t)v11, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
    v26 = 0;
  }
  else
  {
    v26 = sub_1BC2B383C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }
  v20 = v28;
  sub_1BC2B2564();
  v21 = sub_1BC2B3824();
  v13(v5, v20);
  if (*(_QWORD *)(v21 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v9, v21 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  v18(v9, v22, 1, v15);
  swift_bridgeObjectRelease();
  if (v19(v9, 1, v15) == 1)
  {
    sub_1BC0F2444((uint64_t)v9, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
    v23 = 0;
  }
  else
  {
    v23 = sub_1BC2B383C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  }
  return v26 < v23;
}

uint64_t sub_1BC113ADC@<X0>(uint64_t a1@<X1>, void *a2@<X2>, int a3@<W3>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  char **v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  int v26;
  uint64_t v27;

  v26 = a3;
  v27 = sub_1BC2B3B48();
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B2594();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend(a2, sel_scheduleType);
  sub_1BC2B2564();
  v14 = sub_1BC2B38C0();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRetain();
  sub_1BC2B3B24();
  v17 = (void *)objc_opt_self();
  v18 = &selRef_tertiarySystemBackgroundColor;
  if ((v26 & 1) != 0)
    v18 = &selRef_tertiarySystemGroupedBackgroundColor;
  v19 = objc_msgSend(v17, *v18);
  sub_1BC2B3B18();
  *(_QWORD *)a4 = 0xD000000000000014;
  *((_QWORD *)a4 + 1) = 0x80000001BC2C95A0;
  v20 = 0xE000000000000000;
  if (v16)
  {
    v20 = v16;
    v21 = v14;
  }
  else
  {
    v21 = 0;
  }
  *((_QWORD *)a4 + 2) = v21;
  *((_QWORD *)a4 + 3) = v20;
  *((_QWORD *)a4 + 4) = v25;
  *((_QWORD *)a4 + 5) = a1;
  v22 = type metadata accessor for ScheduleIntervalItem();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(&a4[*(int *)(v22 + 32)], v9, v27);
}

uint64_t sub_1BC113C88()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  id v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  Swift::String v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  Swift::String v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  id v83;
  uint64_t v84;
  Swift::String v85;
  char *v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v1 = sub_1BC2B39E0();
  v100 = *(_QWORD *)(v1 - 8);
  v101 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v98 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v97 = (char *)&v95 - v5;
  MEMORY[0x1E0C80A78](v4);
  v99 = (char *)&v95 - v6;
  sub_1BC11868C();
  v102 = v7;
  MEMORY[0x1E0C80A78](v7);
  v103 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v95 - v14;
  sub_1BC0E7998(0, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState, v9);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v106 = (uint64_t)&v95 - v20;
  v21 = sub_1BC2B23F0();
  v22 = *(_QWORD *)(v21 - 8);
  v107 = v21;
  v108 = v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v105 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v95 - v25;
  v27 = type metadata accessor for FutureDateRecencyState(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v29);
  v104 = (uint64_t)&v95 - v33;
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v95 - v34;
  v36 = objc_msgSend(v0, sel_startDateTime);
  sub_1BC2B23A8();

  v37 = (uint64_t)v35;
  sub_1BC1132B8((uint64_t)v26, (uint64_t)v35);
  v38 = objc_msgSend(v0, sel_endDateTime);
  if (v38)
  {
    v39 = v38;
    sub_1BC2B23A8();

    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  v42 = v107;
  v41 = v108;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v15, v40, 1, v107);
  sub_1BC118700((uint64_t)v15, (uint64_t)v13, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v13, 1, v42) == 1)
  {
    v43 = v106;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v106, 1, 1, v27);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v26, v13, v42);
    v44 = v105;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v105, v26, v42);
    v45 = (uint64_t)v44;
    v43 = v106;
    sub_1BC1132B8(v45, v106);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v43, 0, 1, v27);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v42);
  }
  sub_1BC0F2444((uint64_t)v15, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC118700(v43, (uint64_t)v19, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v19, 1, v27) != 1)
  {
    v48 = v104;
    sub_1BC0F1B94((uint64_t)v19, v104, type metadata accessor for FutureDateRecencyState);
    v49 = v103;
    v50 = v103 + *(int *)(v102 + 48);
    sub_1BC0FC574(v37, v103, type metadata accessor for FutureDateRecencyState);
    sub_1BC0FC574(v48, v50, type metadata accessor for FutureDateRecencyState);
    sub_1BC118758();
    v52 = v51;
    v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48);
    v54 = v53(v50, 2, v51);
    if (v54)
    {
      if (v54 == 1)
      {
        if (v53(v49, 2, v52) == 1)
        {
          if (qword_1EDA0FEE8 == -1)
            goto LABEL_29;
          goto LABEL_53;
        }
        v67 = v99;
        sub_1BC2B39A4();
        v68 = sub_1BC2B39D4();
        v69 = sub_1BC2B48C8();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v70 = 0;
          _os_log_impl(&dword_1BC0DC000, v68, v69, "Attempted to display an endDate that is today. Impossible!", v70, 2u);
          MEMORY[0x1BCCEF3A0](v70, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v100 + 8))(v67, v101);
        sub_1BC0E8594(v48, type metadata accessor for FutureDateRecencyState);
        sub_1BC0F2444(v43, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
        sub_1BC0E8594(v37, type metadata accessor for FutureDateRecencyState);
        v71 = v49;
      }
      else
      {
        v65 = v53(v49, 2, v52);
        if (!v65)
        {
          v87 = v97;
          sub_1BC2B39A4();
          v88 = sub_1BC2B39D4();
          v89 = sub_1BC2B48C8();
          if (os_log_type_enabled(v88, v89))
          {
            v90 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v90 = 0;
            _os_log_impl(&dword_1BC0DC000, v88, v89, "Attempted to display a start and end date with start date after endDate. Impossible!", v90, 2u);
            MEMORY[0x1BCCEF3A0](v90, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v100 + 8))(v87, v101);
          sub_1BC0E8594(v48, type metadata accessor for FutureDateRecencyState);
          sub_1BC0F2444(v43, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
          sub_1BC0E8594(v37, type metadata accessor for FutureDateRecencyState);
          (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v49, v107);
          return 0;
        }
        if (v65 == 1)
        {
          if (qword_1EDA0FEE8 == -1)
          {
LABEL_29:
            v66 = (id)qword_1EDA0FEF8;
            swift_bridgeObjectRetain();
            v59 = sub_1BC2B2144();
            swift_bridgeObjectRelease();

            sub_1BC0E8594(v48, type metadata accessor for FutureDateRecencyState);
            goto LABEL_30;
          }
LABEL_53:
          swift_once();
          goto LABEL_29;
        }
        v91 = v98;
        sub_1BC2B39A4();
        v92 = sub_1BC2B39D4();
        v93 = sub_1BC2B48C8();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v94 = 0;
          _os_log_impl(&dword_1BC0DC000, v92, v93, "Attempted to display a start and end date with equal state. Impossible!", v94, 2u);
          MEMORY[0x1BCCEF3A0](v94, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v100 + 8))(v91, v101);
        sub_1BC0E8594(v48, type metadata accessor for FutureDateRecencyState);
        sub_1BC0F2444(v43, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
        v71 = v37;
      }
      sub_1BC0E8594(v71, type metadata accessor for FutureDateRecencyState);
      return 0;
    }
    v62 = v53(v49, 2, v52);
    v96 = v37;
    if (!v62)
    {
      v72 = v107;
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 32);
      v73(v26, v49, v107);
      v73(v105, v50, v72);
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v74 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      swift_bridgeObjectRelease();

      sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
      v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = xmmword_1BC2B92C0;
      v76 = Date.formattedWithYearIfDifferent()();
      v77 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v75 + 56) = MEMORY[0x1E0DEA968];
      v78 = sub_1BC0F2748();
      *(_QWORD *)(v75 + 64) = v78;
      *(Swift::String *)(v75 + 32) = v76;
      v79 = v105;
      v80 = Date.formattedWithYearIfDifferent()();
      *(_QWORD *)(v75 + 96) = v77;
      *(_QWORD *)(v75 + 104) = v78;
      *(Swift::String *)(v75 + 72) = v80;
      v59 = sub_1BC2B443C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v81 = *(void (**)(char *, uint64_t))(v108 + 8);
      v81(v79, v72);
      v81(v26, v72);
      sub_1BC0E8594(v48, type metadata accessor for FutureDateRecencyState);
      v82 = v106;
      goto LABEL_39;
    }
    if (v62 == 1)
    {
      v64 = v107;
      v63 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v26, v50, v107);
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_38;
    }
    else
    {
      v64 = v107;
      v63 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v26, v50, v107);
      if (qword_1EDA0FEE8 == -1)
      {
LABEL_38:
        v83 = (id)qword_1EDA0FEF8;
        swift_bridgeObjectRetain();
        sub_1BC2B2144();
        swift_bridgeObjectRelease();

        sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
        v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = xmmword_1BC2B92D0;
        v85 = Date.formattedWithYearIfDifferent()();
        *(_QWORD *)(v84 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v84 + 64) = sub_1BC0F2748();
        *(Swift::String *)(v84 + 32) = v85;
        v59 = sub_1BC2B443C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v64);
        sub_1BC0E8594(v48, type metadata accessor for FutureDateRecencyState);
        v82 = v43;
LABEL_39:
        sub_1BC0F2444(v82, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
        v60 = v96;
        goto LABEL_40;
      }
    }
    swift_once();
    goto LABEL_38;
  }
  sub_1BC0F2444((uint64_t)v19, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
  sub_1BC0FC574(v37, (uint64_t)v31, type metadata accessor for FutureDateRecencyState);
  sub_1BC118758();
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v31, 2, v46);
  if (!v47)
  {
    v55 = v108;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v26, v31, v42);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v56 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1BC2B92D0;
    v58 = Date.formattedWithYearIfDifferent()();
    *(_QWORD *)(v57 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v57 + 64) = sub_1BC0F2748();
    *(Swift::String *)(v57 + 32) = v58;
    v59 = sub_1BC2B443C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v42);
    sub_1BC0F2444(v43, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
    v60 = v37;
    goto LABEL_40;
  }
  if (v47 == 1)
  {
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_21;
    goto LABEL_50;
  }
  if (qword_1EDA0FEE8 != -1)
LABEL_50:
    swift_once();
LABEL_21:
  v61 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v59 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

LABEL_30:
  sub_1BC0F2444(v43, &qword_1EF3F9D30, type metadata accessor for FutureDateRecencyState);
  v60 = v37;
LABEL_40:
  sub_1BC0E8594(v60, type metadata accessor for FutureDateRecencyState);
  return v59;
}

uint64_t sub_1BC114BE4(_QWORD **a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7[2];

  sub_1BC118890();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = (_QWORD *)sub_1BC26E240(v4);
  v5 = v4[2];
  v7[0] = (uint64_t)v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v7[1] = v5;
  result = sub_1BC114CB4(v7);
  *a1 = v4;
  return result;
}

id sub_1BC114C64(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1BC114CB4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  char v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  unint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;

  v2 = v1;
  v199 = sub_1BC2B2594();
  v190 = *(_QWORD *)(v199 - 8);
  MEMORY[0x1E0C80A78](v199);
  v198 = (char *)&v169 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v169 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v169 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v169 - v13;
  MEMORY[0x1E0C80A78](v12);
  v179 = (char *)&v169 - v15;
  sub_1BC118890();
  v184 = v16;
  v182 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v178 = (uint64_t)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v192 = (uint64_t)&v169 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v200 = (uint64_t)&v169 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v196 = (uint64_t)&v169 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v183 = (uint64_t)&v169 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v169 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v169 - v31;
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v169 - v33;
  v197 = a1;
  v35 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v35)
  {
    if (v35 < 0)
      goto LABEL_173;
    if (v35)
      return sub_1BC115C7C(0, v35, 1, v197);
    return result;
  }
  if (v35 >= 0)
    v37 = v35;
  else
    v37 = v35 + 1;
  if (v35 < -1)
    goto LABEL_181;
  v176 = v14;
  v177 = v29;
  v174 = result;
  if (v35 < 2)
  {
    v42 = MEMORY[0x1E0DEE9D8];
    v181 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
    if (v35 != 1)
    {
      v87 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v44 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_137:
      v172 = v42;
      if (v87 >= 2)
      {
        v163 = *v197;
        do
        {
          v164 = v87 - 2;
          if (v87 < 2)
            goto LABEL_167;
          if (!v163)
            goto LABEL_180;
          v165 = *(_QWORD *)&v44[16 * v164 + 32];
          v166 = *(_QWORD *)&v44[16 * v87 + 24];
          sub_1BC11612C(v163 + *(_QWORD *)(v182 + 72) * v165, v163 + *(_QWORD *)(v182 + 72) * *(_QWORD *)&v44[16 * v87 + 16], v163 + *(_QWORD *)(v182 + 72) * v166, v181);
          if (v2)
            break;
          if (v166 < v165)
            goto LABEL_169;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v44 = sub_1BC26E1A0((uint64_t)v44);
          if (v164 >= *((_QWORD *)v44 + 2))
            goto LABEL_170;
          v167 = &v44[16 * v164 + 32];
          *(_QWORD *)v167 = v165;
          *((_QWORD *)v167 + 1) = v166;
          v168 = *((_QWORD *)v44 + 2);
          if (v87 > v168)
            goto LABEL_171;
          memmove(&v44[16 * v87 + 16], &v44[16 * v87 + 32], 16 * (v168 - v87));
          *((_QWORD *)v44 + 2) = v168 - 1;
          v87 = v168 - 1;
        }
        while (v168 > 2);
      }
LABEL_150:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v172 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v38 = 1;
    v170 = v34;
    v171 = v32;
    v172 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v38 = v35;
    v170 = v34;
    v171 = v32;
    v39 = v37 >> 1;
    v40 = sub_1BC2B45F8();
    *(_QWORD *)(v40 + 16) = v39;
    v41 = *(unsigned __int8 *)(v182 + 80);
    v172 = v40;
    v181 = v40 + ((v41 + 32) & ~v41);
  }
  v43 = 0;
  v44 = (char *)MEMORY[0x1E0DEE9D8];
  v185 = v11;
  v186 = v8;
  v45 = v38;
  while (1)
  {
    v46 = v43 + 1;
    v180 = v43;
    if (v43 + 1 >= v45)
    {
      v53 = v43 + 1;
      v73 = v174;
    }
    else
    {
      v47 = v43;
      v48 = *v197;
      v49 = *(_QWORD *)(v182 + 72);
      v50 = (uint64_t)v170;
      sub_1BC0FC574(*v197 + v49 * v46, (uint64_t)v170, (uint64_t (*)(_QWORD))sub_1BC118890);
      v187 = v48;
      v195 = v49;
      v51 = v48 + v49 * v47;
      v52 = (uint64_t)v171;
      sub_1BC0FC574(v51, (uint64_t)v171, (uint64_t (*)(_QWORD))sub_1BC118890);
      LODWORD(v194) = sub_1BC11383C(v50, v52);
      if (v2)
      {
        sub_1BC0E8594(v52, (uint64_t (*)(_QWORD))sub_1BC118890);
        sub_1BC0E8594(v50, (uint64_t (*)(_QWORD))sub_1BC118890);
        goto LABEL_150;
      }
      sub_1BC0E8594(v52, (uint64_t (*)(_QWORD))sub_1BC118890);
      sub_1BC0E8594(v50, (uint64_t (*)(_QWORD))sub_1BC118890);
      v53 = v47 + 2;
      if (v47 + 2 >= v45)
      {
        v43 = v47;
      }
      else
      {
        v173 = v44;
        v169 = 0;
        v54 = v187;
        v191 = v47 + 2;
        v188 = v195 * v53;
        v189 = v195 * v46;
        v55 = (uint64_t)v177;
        v193 = v45;
        while (1)
        {
          sub_1BC0FC574(v54 + v188, v55, (uint64_t (*)(_QWORD))sub_1BC118890);
          sub_1BC0FC574(v54 + v189, v183, (uint64_t (*)(_QWORD))sub_1BC118890);
          v56 = v198;
          sub_1BC2B2564();
          v57 = sub_1BC2B3824();
          v58 = *(void (**)(char *, uint64_t))(v190 + 8);
          v58(v56, v199);
          v59 = *(_QWORD *)(v57 + 16);
          v60 = sub_1BC2B3848();
          v61 = *(_QWORD *)(v60 - 8);
          if (v59)
          {
            v62 = v179;
            (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v179, v57 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80)), v60);
            v63 = 0;
          }
          else
          {
            v63 = 1;
            v62 = v179;
          }
          v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
          v64(v62, v63, 1, v60);
          swift_bridgeObjectRelease();
          v65 = (uint64_t)v62;
          v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
          if (v66(v65, 1, v60) == 1)
          {
            sub_1BC0F2444(v65, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v67 = 0;
          }
          else
          {
            v67 = sub_1BC2B383C();
            (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v65, v60);
          }
          v68 = v198;
          sub_1BC2B2564();
          v69 = sub_1BC2B3824();
          v58(v68, v199);
          if (*(_QWORD *)(v69 + 16))
          {
            v70 = (uint64_t)v176;
            (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v176, v69 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80)), v60);
            v71 = 0;
          }
          else
          {
            v71 = 1;
            v70 = (uint64_t)v176;
          }
          v55 = (uint64_t)v177;
          v64((char *)v70, v71, 1, v60);
          swift_bridgeObjectRelease();
          if (v66(v70, 1, v60) == 1)
          {
            sub_1BC0F2444(v70, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v72 = 0;
          }
          else
          {
            v72 = sub_1BC2B383C();
            (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v70, v60);
          }
          v45 = v193;
          sub_1BC0E8594(v183, (uint64_t (*)(_QWORD))sub_1BC118890);
          sub_1BC0E8594(v55, (uint64_t (*)(_QWORD))sub_1BC118890);
          if ((v194 & 1) == v67 >= v72)
            break;
          v54 += v195;
          if (v45 == ++v191)
          {
            v53 = v45;
            v2 = v169;
            v44 = v173;
            goto LABEL_36;
          }
        }
        v2 = v169;
        v44 = v173;
        v53 = v191;
LABEL_36:
        v43 = v180;
      }
      v73 = v174;
      if ((v194 & 1) != 0)
      {
        if (v53 < v43)
          goto LABEL_176;
        if (v43 < v53)
        {
          v193 = v45;
          v173 = v44;
          v74 = 0;
          v75 = v195 * (v53 - 1);
          v76 = v53 * v195;
          v77 = v43;
          v78 = v43 * v195;
          do
          {
            if (v77 != v53 + v74 - 1)
            {
              v80 = v187;
              if (!v187)
                goto LABEL_179;
              v81 = v187 + v78;
              v194 = v187 + v75;
              sub_1BC0F1B94(v187 + v78, v178, (uint64_t (*)(_QWORD))sub_1BC118890);
              if (v78 < v75 || v81 >= v80 + v76)
              {
                v79 = v194;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v79 = v194;
                if (v78 != v75)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1BC0F1B94(v178, v79, (uint64_t (*)(_QWORD))sub_1BC118890);
            }
            ++v77;
            --v74;
            v75 -= v195;
            v76 -= v195;
            v78 += v195;
          }
          while (v77 < v53 + v74);
          v44 = v173;
          v73 = v174;
          v43 = v180;
          v45 = v193;
        }
      }
    }
    if (v53 >= v45)
      goto LABEL_63;
    v102 = __OFSUB__(v53, v43);
    v82 = v53 - v43;
    if (v102)
      goto LABEL_172;
    if (v82 < v73)
      break;
    v43 = v180;
LABEL_63:
    if (v53 < v43)
      goto LABEL_168;
LABEL_64:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v191 = v53;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v44 = sub_1BC26DEB8(0, *((_QWORD *)v44 + 2) + 1, 1, v44);
    v86 = *((_QWORD *)v44 + 2);
    v85 = *((_QWORD *)v44 + 3);
    v87 = v86 + 1;
    if (v86 >= v85 >> 1)
      v44 = sub_1BC26DEB8((char *)(v85 > 1), v86 + 1, 1, v44);
    *((_QWORD *)v44 + 2) = v87;
    v88 = v44 + 32;
    v89 = &v44[16 * v86 + 32];
    v90 = v191;
    *(_QWORD *)v89 = v180;
    *((_QWORD *)v89 + 1) = v90;
    if (v86)
    {
      while (1)
      {
        v91 = v87 - 1;
        if (v87 >= 4)
        {
          v96 = &v88[16 * v87];
          v97 = *((_QWORD *)v96 - 8);
          v98 = *((_QWORD *)v96 - 7);
          v102 = __OFSUB__(v98, v97);
          v99 = v98 - v97;
          if (v102)
            goto LABEL_156;
          v101 = *((_QWORD *)v96 - 6);
          v100 = *((_QWORD *)v96 - 5);
          v102 = __OFSUB__(v100, v101);
          v94 = v100 - v101;
          v95 = v102;
          if (v102)
            goto LABEL_157;
          v103 = v87 - 2;
          v104 = &v88[16 * v87 - 32];
          v106 = *(_QWORD *)v104;
          v105 = *((_QWORD *)v104 + 1);
          v102 = __OFSUB__(v105, v106);
          v107 = v105 - v106;
          if (v102)
            goto LABEL_159;
          v102 = __OFADD__(v94, v107);
          v108 = v94 + v107;
          if (v102)
            goto LABEL_162;
          if (v108 >= v99)
          {
            v126 = &v88[16 * v91];
            v128 = *(_QWORD *)v126;
            v127 = *((_QWORD *)v126 + 1);
            v102 = __OFSUB__(v127, v128);
            v129 = v127 - v128;
            if (v102)
              goto LABEL_166;
            v119 = v94 < v129;
            goto LABEL_100;
          }
        }
        else
        {
          if (v87 != 3)
          {
            v120 = *((_QWORD *)v44 + 4);
            v121 = *((_QWORD *)v44 + 5);
            v102 = __OFSUB__(v121, v120);
            v113 = v121 - v120;
            v114 = v102;
            goto LABEL_94;
          }
          v93 = *((_QWORD *)v44 + 4);
          v92 = *((_QWORD *)v44 + 5);
          v102 = __OFSUB__(v92, v93);
          v94 = v92 - v93;
          v95 = v102;
        }
        if ((v95 & 1) != 0)
          goto LABEL_158;
        v103 = v87 - 2;
        v109 = &v88[16 * v87 - 32];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v112 = __OFSUB__(v110, v111);
        v113 = v110 - v111;
        v114 = v112;
        if (v112)
          goto LABEL_161;
        v115 = &v88[16 * v91];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v102 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v102)
          goto LABEL_164;
        if (__OFADD__(v113, v118))
          goto LABEL_165;
        if (v113 + v118 >= v94)
        {
          v119 = v94 < v118;
LABEL_100:
          if (v119)
            v91 = v103;
          goto LABEL_102;
        }
LABEL_94:
        if ((v114 & 1) != 0)
          goto LABEL_160;
        v122 = &v88[16 * v91];
        v124 = *(_QWORD *)v122;
        v123 = *((_QWORD *)v122 + 1);
        v102 = __OFSUB__(v123, v124);
        v125 = v123 - v124;
        if (v102)
          goto LABEL_163;
        if (v125 < v113)
          goto LABEL_111;
LABEL_102:
        v130 = v91 - 1;
        if (v91 - 1 >= v87)
        {
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
          goto LABEL_175;
        }
        if (!*v197)
          goto LABEL_178;
        v131 = v44;
        v132 = &v88[16 * v130];
        v133 = *(_QWORD *)v132;
        v134 = &v88[16 * v91];
        v135 = *((_QWORD *)v134 + 1);
        sub_1BC11612C(*v197 + *(_QWORD *)(v182 + 72) * *(_QWORD *)v132, *v197 + *(_QWORD *)(v182 + 72) * *(_QWORD *)v134, *v197 + *(_QWORD *)(v182 + 72) * v135, v181);
        if (v2)
          goto LABEL_150;
        if (v135 < v133)
          goto LABEL_153;
        if (v91 > *((_QWORD *)v131 + 2))
          goto LABEL_154;
        *(_QWORD *)v132 = v133;
        *(_QWORD *)&v88[16 * v130 + 8] = v135;
        v136 = *((_QWORD *)v131 + 2);
        if (v91 >= v136)
          goto LABEL_155;
        v44 = v131;
        v87 = v136 - 1;
        memmove(&v88[16 * v91], v134 + 16, 16 * (v136 - 1 - v91));
        *((_QWORD *)v131 + 2) = v136 - 1;
        if (v136 <= 2)
          goto LABEL_111;
      }
    }
    v87 = 1;
LABEL_111:
    v45 = v197[1];
    v43 = v191;
    if (v191 >= v45)
    {
      v42 = v172;
      goto LABEL_137;
    }
  }
  if (__OFADD__(v180, v73))
    goto LABEL_174;
  if (v180 + v73 >= v45)
    v83 = v45;
  else
    v83 = v180 + v73;
  if (v83 >= v180)
  {
    if (v53 == v83)
    {
      if (v53 < v180)
        goto LABEL_168;
    }
    else
    {
      v173 = v44;
      v169 = v2;
      v137 = *(_QWORD *)(v182 + 72);
      v138 = v137 * (v53 - 1);
      v187 = v137;
      v139 = v53 * v137;
      v175 = v83;
      do
      {
        v141 = 0;
        v142 = v180;
        v188 = v139;
        v189 = v138;
        v191 = v53;
        while (1)
        {
          v193 = v142;
          v143 = *v197;
          v195 = v139 + v141;
          sub_1BC0FC574(v139 + v141 + v143, v196, (uint64_t (*)(_QWORD))sub_1BC118890);
          v144 = v138 + v141;
          sub_1BC0FC574(v144 + v143, v200, (uint64_t (*)(_QWORD))sub_1BC118890);
          v145 = v198;
          sub_1BC2B2564();
          v146 = sub_1BC2B3824();
          v147 = *(void (**)(char *, uint64_t))(v190 + 8);
          v147(v145, v199);
          v148 = *(_QWORD *)(v146 + 16);
          v149 = sub_1BC2B3848();
          v150 = *(_QWORD *)(v149 - 8);
          v194 = v144;
          if (v148)
          {
            v151 = (uint64_t)v185;
            (*(void (**)(char *, unint64_t, uint64_t))(v150 + 16))(v185, v146 + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80)), v149);
            v152 = 0;
          }
          else
          {
            v152 = 1;
            v151 = (uint64_t)v185;
          }
          v153 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 56);
          v153(v151, v152, 1, v149);
          swift_bridgeObjectRelease();
          v154 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48);
          if (v154(v151, 1, v149) == 1)
          {
            sub_1BC0F2444(v151, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v155 = 0;
          }
          else
          {
            v155 = sub_1BC2B383C();
            (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v151, v149);
          }
          v156 = v198;
          sub_1BC2B2564();
          v157 = sub_1BC2B3824();
          v147(v156, v199);
          if (*(_QWORD *)(v157 + 16))
          {
            v158 = (uint64_t)v186;
            (*(void (**)(char *, unint64_t, uint64_t))(v150 + 16))(v186, v157 + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80)), v149);
            v159 = 0;
          }
          else
          {
            v159 = 1;
            v158 = (uint64_t)v186;
          }
          v153(v158, v159, 1, v149);
          swift_bridgeObjectRelease();
          if (v154(v158, 1, v149) == 1)
          {
            sub_1BC0F2444(v158, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v160 = 0;
          }
          else
          {
            v160 = sub_1BC2B383C();
            (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v158, v149);
          }
          v139 = v188;
          v138 = v189;
          sub_1BC0E8594(v200, (uint64_t (*)(_QWORD))sub_1BC118890);
          sub_1BC0E8594(v196, (uint64_t (*)(_QWORD))sub_1BC118890);
          if (v155 >= v160)
            break;
          v161 = *v197;
          if (!*v197)
            goto LABEL_177;
          v162 = v161 + v138 + v141;
          sub_1BC0F1B94(v161 + v139 + v141, v192, (uint64_t (*)(_QWORD))sub_1BC118890);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BC0F1B94(v192, v162, (uint64_t (*)(_QWORD))sub_1BC118890);
          v141 -= v187;
          v142 = v193 + 1;
          v140 = v191;
          if (v191 == v193 + 1)
            goto LABEL_115;
        }
        v140 = v191;
LABEL_115:
        v53 = v140 + 1;
        v138 += v187;
        v139 += v187;
      }
      while (v53 != v175);
      v53 = v175;
      v2 = v169;
      v44 = v173;
      if (v175 < v180)
        goto LABEL_168;
    }
    goto LABEL_64;
  }
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC115C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a4;
  v47 = a1;
  v62 = sub_1BC2B2594();
  v52 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v61 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v45 - v11;
  sub_1BC118890();
  v48 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v56 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v64 = (uint64_t)&v45 - v16;
  result = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v45 - v19;
  v55 = a3;
  v46 = a2;
  if (a3 != a2)
  {
    v21 = *(_QWORD *)(v18 + 72);
    v22 = v21 * (v55 - 1);
    v53 = v21;
    v63 = v21 * v55;
    v49 = (char *)&v45 - v19;
    v50 = v10;
LABEL_5:
    v23 = 0;
    v24 = v47;
    v54 = v22;
    while (1)
    {
      v25 = *v59;
      v58 = v63 + v23;
      sub_1BC0FC574(v63 + v23 + v25, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC118890);
      v57 = v22 + v23;
      sub_1BC0FC574(v22 + v23 + v25, v64, (uint64_t (*)(_QWORD))sub_1BC118890);
      v26 = v61;
      sub_1BC2B2564();
      v27 = sub_1BC2B3824();
      v28 = *(void (**)(char *, uint64_t))(v52 + 8);
      v28(v26, v62);
      v29 = *(_QWORD *)(v27 + 16);
      v30 = sub_1BC2B3848();
      v31 = *(_QWORD *)(v30 - 8);
      if (v29)
      {
        v32 = v51;
        (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v51, v27 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)), v30);
        v33 = 0;
      }
      else
      {
        v33 = 1;
        v32 = v51;
      }
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v34(v32, v33, 1, v30);
      swift_bridgeObjectRelease();
      v35 = (uint64_t)v32;
      v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
      if (v36(v35, 1, v30) == 1)
      {
        sub_1BC0F2444(v35, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
        v60 = 0;
      }
      else
      {
        v60 = sub_1BC2B383C();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v35, v30);
      }
      v37 = v61;
      sub_1BC2B2564();
      v38 = sub_1BC2B3824();
      v28(v37, v62);
      if (*(_QWORD *)(v38 + 16))
      {
        v39 = (uint64_t)v50;
        (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v50, v38 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)), v30);
        v40 = 0;
      }
      else
      {
        v40 = 1;
        v39 = (uint64_t)v50;
      }
      v34((char *)v39, v40, 1, v30);
      swift_bridgeObjectRelease();
      if (v36(v39, 1, v30) == 1)
      {
        sub_1BC0F2444(v39, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
        v41 = 0;
      }
      else
      {
        v41 = sub_1BC2B383C();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v39, v30);
      }
      v20 = v49;
      v22 = v54;
      v42 = v60;
      sub_1BC0E8594(v64, (uint64_t (*)(_QWORD))sub_1BC118890);
      result = sub_1BC0E8594((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC118890);
      if (v42 >= v41)
      {
LABEL_4:
        v22 += v53;
        v63 += v53;
        if (++v55 == v46)
          return result;
        goto LABEL_5;
      }
      v43 = *v59;
      if (!*v59)
        break;
      v44 = v43 + v22 + v23;
      sub_1BC0F1B94(v43 + v63 + v23, v56, (uint64_t (*)(_QWORD))sub_1BC118890);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1BC0F1B94(v56, v44, (uint64_t (*)(_QWORD))sub_1BC118890);
      v23 -= v53;
      if (v55 == ++v24)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC11612C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t result;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v5 = v4;
  sub_1BC118890();
  v52 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - v14;
  MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v46 - v18;
  v53 = *(_QWORD *)(v20 + 72);
  if (!v53)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v53 == -1)
    goto LABEL_68;
  v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v53 == -1)
    goto LABEL_69;
  v22 = (uint64_t)(a2 - a1) / v53;
  v56 = a1;
  v55 = a4;
  v23 = v21 / v53;
  if (v22 >= v21 / v53)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      v25 = v23 * v53;
      v19 = v17;
      v50 = (char *)v16;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v32 = a4 + v25;
      v54 = a4 + v25;
      v56 = a2;
      if (v25 < 1 || a1 >= a2)
        goto LABEL_65;
      v34 = -v53;
      v47 = a1;
      v48 = -v53;
      v49 = a4;
      while (1)
      {
        sub_1BC0FC574(v32 + v34, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC118890);
        v35 = a2;
        v36 = a2 + v34;
        v37 = a2 + v34;
        v38 = v34;
        v15 = v50;
        sub_1BC0FC574(v37, (uint64_t)v50, (uint64_t (*)(_QWORD))sub_1BC118890);
        v39 = sub_1BC11383C((uint64_t)v19, (uint64_t)v15);
        if (v5)
          goto LABEL_64;
        v40 = v39;
        v53 = 0;
        v51 = a3 + v38;
        sub_1BC0E8594((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC118890);
        sub_1BC0E8594((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC118890);
        if (v40)
        {
          v41 = a3;
          v26 = a3 >= v35;
          a3 = v51;
          if (v26 && v51 < v35)
          {
            v42 = v49;
            if (v41 != v35)
              swift_arrayInitWithTakeBackToFront();
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            v42 = v49;
          }
          v34 = v48;
          v56 += v48;
        }
        else
        {
          v43 = v54;
          v54 += v38;
          v44 = a3;
          v26 = a3 >= v43;
          a3 = v51;
          if (v26 && v51 < v43)
          {
            v42 = v49;
            if (v44 != v43)
              swift_arrayInitWithTakeBackToFront();
            v36 = v35;
            v34 = v48;
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            v36 = v35;
            v34 = v48;
            v42 = v49;
          }
        }
        v32 = v54;
        if (v54 > v42)
        {
          a2 = v36;
          v5 = v53;
          if (v36 > v47)
            continue;
        }
        goto LABEL_65;
      }
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    v24 = v22 * v53;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v51 = a4 + v24;
    v54 = a4 + v24;
    v26 = v24 < 1 || a2 >= a3;
    if (v26)
      goto LABEL_65;
    while (1)
    {
      sub_1BC0FC574(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC118890);
      sub_1BC0FC574(a4, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC118890);
      v27 = sub_1BC11383C((uint64_t)v19, (uint64_t)v15);
      if (v4)
        break;
      v28 = v27;
      sub_1BC0E8594((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC118890);
      sub_1BC0E8594((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC118890);
      v29 = v56;
      if (v28)
      {
        v30 = a2 + v53;
        if (v56 < a2 || v56 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v56 == a2)
        {
          v29 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v31 = v55 + v53;
        if (v56 < v55 || v56 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v56 != v55)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v55 = v31;
        v30 = a2;
      }
      v56 = v29 + v53;
      a4 = v55;
      if (v55 < v51)
      {
        a2 = v30;
        if (v30 < a3)
          continue;
      }
      goto LABEL_65;
    }
LABEL_64:
    sub_1BC0E8594((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC118890);
    sub_1BC0E8594((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC118890);
LABEL_65:
    sub_1BC26E06C(&v56, &v55, (uint64_t *)&v54);
    return 1;
  }
LABEL_70:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1166A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[5];

  v39 = a3;
  sub_1BC118DAC();
  v37 = *(_QWORD *)(v15 - 8);
  v38 = v15;
  MEMORY[0x1E0C80A78](v15);
  v36 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC2B3710();
  MEMORY[0x1E0C80A78](v17);
  v42[3] = a7;
  v42[4] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v42);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  LOBYTE(a1) = *a5;
  v19 = (_QWORD *)(a6 + qword_1EF3F9C78);
  *v19 = 0xD000000000000014;
  v19[1] = 0x80000001BC2C9680;
  v20 = qword_1EF3F9C80;
  swift_retain();
  sub_1BC2B3704();
  v21 = objc_allocWithZone((Class)sub_1BC2B3734());
  *(_QWORD *)(a6 + v20) = sub_1BC2B3728();
  v22 = qword_1EF3F9C88;
  *(_QWORD *)(a6 + qword_1EF3F9C88) = 0;
  v23 = qword_1EF3F9C98;
  *(_QWORD *)(a6 + qword_1EF3F9C98) = 0;
  *(_QWORD *)(a6 + qword_1EF3F9CA0) = MEMORY[0x1E0DEE9E8];
  sub_1BC0E79F0((uint64_t)v42, a6 + qword_1EF3F9C68);
  v24 = *(void **)(a6 + v22);
  *(_QWORD *)(a6 + v22) = a2;
  v25 = a2;

  *(_QWORD *)(a6 + qword_1EF3F9C90) = a4;
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(a8 + 24);
  v40 = a4;
  swift_retain();
  v27 = v26(a7, a8);
  v28 = v39;
  v41 = v27;
  sub_1BC118C10();
  swift_allocObject();
  *(_QWORD *)(a6 + qword_1EF3F9C70) = sub_1BC2B3EF0();
  *(_BYTE *)(a6 + qword_1EF3F9C60) = a1;
  *(_QWORD *)(a6 + v23) = v28;
  swift_retain();
  swift_release();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC2B2BAC();
  v29 = sub_1BC2B2750();
  v30 = *(_QWORD *)(v29 + qword_1EF3F9C98);
  if (v30)
  {
    swift_retain_n();
    v31 = v30;
  }
  else
  {
    LOBYTE(v41) = 1;
    swift_retain_n();
    v32 = v36;
    sub_1BC2B3F14();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F9DD0, (uint64_t (*)(uint64_t))sub_1BC118DAC, MEMORY[0x1E0C960B0]);
    v33 = v38;
    v31 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v33);
  }
  swift_retain();
  swift_release();
  v41 = v31;
  swift_allocObject();
  swift_weakInit();
  sub_1BC118E08(0, (unint64_t *)&qword_1EF3F9DD8, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  sub_1BC10EA58();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return v29;
}

uint64_t sub_1BC116B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;

  if ((sub_1BC2B239C() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for ScheduleDataSource.DoseItem(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  v8 = v5 == *v7 && v6 == v7[1];
  if (!v8 && (sub_1BC2B53CC() & 1) == 0)
    return 0;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  return sub_1BC2B4D84() & 1;
}

uint64_t sub_1BC116BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  char v20;
  uint64_t (*v21)(_QWORD);
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v4 = sub_1BC2B23F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FutureDateRecencyState(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC11868C();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1BC0FC574(a1, (uint64_t)v14, type metadata accessor for FutureDateRecencyState);
  sub_1BC0FC574(a2, v15, type metadata accessor for FutureDateRecencyState);
  sub_1BC118758();
  v17 = v16;
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  v19 = v18(v14, 2, v16);
  if (v19)
  {
    if (v19 == 1)
    {
      if (v18((char *)v15, 2, v17) != 1)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (v18((char *)v15, 2, v17) == 2)
    {
LABEL_8:
      v20 = 1;
LABEL_11:
      v21 = type metadata accessor for FutureDateRecencyState;
      goto LABEL_12;
    }
  }
  else
  {
    sub_1BC0FC574((uint64_t)v14, (uint64_t)v10, type metadata accessor for FutureDateRecencyState);
    if (!v18((char *)v15, 2, v17))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v20 = sub_1BC2B239C();
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v22(v10, v4);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
LABEL_9:
  v20 = 0;
  v21 = (uint64_t (*)(_QWORD))sub_1BC11868C;
LABEL_12:
  sub_1BC0E8594((uint64_t)v14, v21);
  return v20 & 1;
}

uint64_t sub_1BC116DD0(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _QWORD);
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  v21 = a3;
  v5 = type metadata accessor for ScheduleIntervalItem();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v18 = v3;
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BC125BE4(0, v9, 0);
    v10 = v22;
    sub_1BC118890();
    v19 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    do
    {
      v20(v13, *(_QWORD *)(v13 + *(int *)(v19 + 48)));
      v22 = v10;
      v16 = *(_QWORD *)(v10 + 16);
      v15 = *(_QWORD *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BC125BE4(v15 > 1, v16 + 1, 1);
        v10 = v22;
      }
      *(_QWORD *)(v10 + 16) = v16 + 1;
      sub_1BC0F1B94((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleIntervalItem);
      v13 += v14;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1BC116F3C(uint64_t (*a1)(uint64_t a1), unsigned __int8 *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t i;
  uint64_t j;
  id v20;
  void *v21;
  id v22;
  void *v23;
  float v24;
  float v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  id v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  char **v67;
  id v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;

  v3 = v2;
  v6 = sub_1BC2B3B48();
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  MEMORY[0x1E0C80A78](v6);
  v74 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B38E4();
  v86 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  v11 = *(_QWORD *)(v88 - 8);
  v12 = MEMORY[0x1E0C80A78](v88);
  v85 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v71 - v14;
  LODWORD(v16) = *a2;
  v17 = sub_1BC122554();
  v89 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v17 >> 62)
    goto LABEL_41;
  for (i = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = sub_1BC2B52D0())
  {
    v84 = v15;
    v78 = v3;
    v77 = (int)v16;
    if (i)
    {
      if (i < 1)
      {
        __break(1u);
LABEL_43:
        sub_1BC2B53F0();
        __break(1u);
        goto LABEL_44;
      }
      v81 = (uint64_t)a1;
      v82 = v11;
      for (j = 0; j != i; ++j)
      {
        if ((v17 & 0xC000000000000001) != 0)
          v20 = (id)MEMORY[0x1BCCEE950](j, v17);
        else
          v20 = *(id *)(v17 + 8 * j + 32);
        v21 = v20;
        v22 = objc_msgSend(v20, sel_dose);
        if (v22 && (v23 = v22, objc_msgSend(v22, sel_floatValue), v25 = v24, v23, v25 > 0.0))
        {
          sub_1BC2B5204();
          sub_1BC2B5234();
          sub_1BC2B5240();
          sub_1BC2B5210();
        }
        else
        {

        }
      }
      v26 = swift_bridgeObjectRelease();
      v27 = v89;
      v3 = v78;
      v15 = v84;
      a1 = (uint64_t (*)(uint64_t))v81;
      v11 = v82;
    }
    else
    {
      v26 = swift_bridgeObjectRelease();
      v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    MEMORY[0x1E0C80A78](v26);
    *(&v71 - 2) = (uint64_t)v3;
    *(&v71 - 1) = (uint64_t)a1;
    v28 = (_QWORD *)sub_1BC1EA16C((void (*)(id *))sub_1BC11880C, (uint64_t)(&v71 - 4), (unint64_t)v27);
    swift_release();
    v89 = v28;
    swift_getKeyPath();
    sub_1BC0E7998(0, &qword_1EF3F9D48, type metadata accessor for ScheduleDataSource.DoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC118824();
    v29 = sub_1BC2B4550();
    v73 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    v30 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v89 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v31 = *(_QWORD *)(v29 + 16);
    v16 = &unk_1BC2B9000;
    if (!v31)
      break;
    v32 = *(unsigned __int8 *)(v11 + 80);
    v33 = (v32 + 32) & ~v32;
    v3 = (char *)(v29 + v33);
    v11 = *(_QWORD *)(v11 + 72);
    v81 = v32 | 7;
    v82 = v11 + v33;
    v72 = v29;
    swift_bridgeObjectRetain();
    a1 = type metadata accessor for ScheduleDataSource.DoseItem;
    v79 = xmmword_1BC2B92D0;
    v83 = v10;
    v80 = v11;
    while (1)
    {
      sub_1BC0FC574((uint64_t)v3, (uint64_t)v15, type metadata accessor for ScheduleDataSource.DoseItem);
      sub_1BC218774((uint64_t)objc_msgSend(*(id *)&v15[*(int *)(v88 + 24)], sel_daysOfWeek), v10);
      v17 = sub_1BC107EBC((uint64_t)v10);
      v35 = v30[2];
      v36 = (v34 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        break;
      v38 = v34;
      if (v30[3] < v37)
      {
        sub_1BC15A44C(v37, 1);
        v30 = v89;
        v39 = sub_1BC107EBC((uint64_t)v10);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_43;
        v17 = v39;
      }
      if ((v38 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v86 + 8))(v10, v87);
        v30 = v89;
        v41 = v89[7];
        sub_1BC0F1B94((uint64_t)v15, v85, type metadata accessor for ScheduleDataSource.DoseItem);
        v16 = *(_QWORD **)(v41 + 8 * v17);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v41 + 8 * v17) = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v16 = (_QWORD *)sub_1BC0FA294(0, v16[2] + 1, 1, (unint64_t)v16);
          *(_QWORD *)(v41 + 8 * v17) = v16;
        }
        v44 = v16[2];
        v43 = v16[3];
        if (v44 >= v43 >> 1)
        {
          v16 = (_QWORD *)sub_1BC0FA294(v43 > 1, v44 + 1, 1, (unint64_t)v16);
          *(_QWORD *)(v41 + 8 * v17) = v16;
        }
        v16[2] = v44 + 1;
        v11 = v80;
        sub_1BC0F1B94(v85, (uint64_t)v16 + v33 + v44 * v80, type metadata accessor for ScheduleDataSource.DoseItem);
        v10 = v83;
        v15 = v84;
      }
      else
      {
        sub_1BC0E7998(0, &qword_1EF3F9180, type metadata accessor for ScheduleDataSource.DoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v16 = (_QWORD *)swift_allocObject();
        *((_OWORD *)v16 + 1) = v79;
        sub_1BC0F1B94((uint64_t)v15, (uint64_t)v16 + v33, type metadata accessor for ScheduleDataSource.DoseItem);
        v30[(v17 >> 6) + 8] |= 1 << v17;
        (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))(v30[6] + *(_QWORD *)(v86 + 72) * v17, v10, v87);
        *(_QWORD *)(v30[7] + 8 * v17) = v16;
        v45 = v30[2];
        v46 = __OFADD__(v45, 1);
        v47 = v45 + 1;
        if (v46)
          goto LABEL_40;
        v30[2] = v47;
      }
      v3 += v11;
      if (!--v31)
      {
        v29 = v72;
        swift_bridgeObjectRelease();
        v3 = v78;
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    ;
  }
LABEL_32:
  v48 = objc_msgSend(v3, sel_scheduleType);
  v49 = v77;
  if (v48 != (id)5)
  {
    swift_release();
    sub_1BC0E7998(0, &qword_1EF3F9D58, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v56 = type metadata accessor for ScheduleIntervalItem();
    v57 = *(unsigned __int8 *)(*(_QWORD *)(v56 - 8) + 80);
    v58 = (v57 + 32) & ~v57;
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1BC2B92D0;
    v59 = (char *)(v55 + v58);
    v60 = objc_msgSend(v3, sel_scheduleType);
    v61 = sub_1BC1382C0();
    v62 = v29;
    v64 = v63;
    v65 = v74;
    sub_1BC2B3B24();
    v66 = (void *)objc_opt_self();
    v67 = &selRef_tertiarySystemGroupedBackgroundColor;
    if (!v49)
      v67 = &selRef_tertiarySystemBackgroundColor;
    v68 = objc_msgSend(v66, *v67);
    sub_1BC2B3B18();
    *(_QWORD *)v59 = 0xD000000000000014;
    *((_QWORD *)v59 + 1) = 0x80000001BC2C95A0;
    *((_QWORD *)v59 + 2) = v61;
    *((_QWORD *)v59 + 3) = v64;
    *((_QWORD *)v59 + 4) = v60;
    *((_QWORD *)v59 + 5) = v62;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v59[*(int *)(v56 + 32)], v65, v76);
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  v50 = swift_bridgeObjectRetain();
  v51 = (_QWORD *)sub_1BC133178(v50);
  swift_release();
  v89 = v51;
  v52 = v73;
  sub_1BC114BE4(&v89);
  if (!v52)
  {
    v53 = swift_release();
    v54 = v89;
    MEMORY[0x1E0C80A78](v53);
    *(&v71 - 2) = (uint64_t)v3;
    *((_BYTE *)&v71 - 8) = v49;
    v55 = sub_1BC116DD0((uint64_t)v54, (void (*)(uint64_t, _QWORD))sub_1BC118884, (uint64_t)(&v71 - 4));
    swift_release();
LABEL_38:
    v69 = sub_1BC0F7B74(v55);
    swift_bridgeObjectRelease();
    return v69;
  }
LABEL_44:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BC1176C4(unsigned __int8 *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  id v25;
  void *v26;
  id v27;
  void (*v28)(uint64_t *, _QWORD);
  void *v29;
  uint64_t v30;
  id v31;
  void (*v32)(uint64_t *, _QWORD);
  id v33;
  void (*v34)(uint64_t *, _QWORD);
  id v35;
  void (*v36)(uint64_t *, _QWORD);
  void (*v37)(uint64_t *, _QWORD);
  _QWORD *v38;
  void (*v39)(uint64_t *, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[5];

  v61 = sub_1BC2B2FA8();
  v58 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v60 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1BC2B2C6C();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v59 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v54 = (char *)&v52 - v7;
  v8 = sub_1BC2B2D98();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x1E0C80A78](v8);
  v62 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3BCC();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1BC2B3CD4();
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC2B2594();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, v5);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for CycleData();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a1;
  v25 = v1;
  sub_1BC2B251C();
  sub_1BC20BBE8(v25, (uint64_t)v16, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1BC0F2444((uint64_t)v19, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1BC0F1B94((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
  if (!v24)
  {
    sub_1BC0E8594((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1BC2B3B60();
  CycleData.localizedDescription.getter();
  sub_1BC2B3C98();
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_labelColor);
  v28 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v28(v65, 0);
  v29 = (void *)objc_opt_self();
  v30 = *MEMORY[0x1E0DC4B10];
  v31 = objc_msgSend(v29, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  v32 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BA8();
  v32(v65, 0);
  sub_1BC2B3C74();
  CycleData.localizedNextPhaseDateChangeDescription.getter();
  sub_1BC2B3B6C();
  sub_1BC2B3BF0();
  sub_1BC2B3C2C();
  v33 = objc_msgSend(v26, sel_secondaryLabelColor);
  v34 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BB4();
  v34(v65, 0);
  v35 = objc_msgSend(v29, sel_preferredFontForTextStyle_, v30);
  v36 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BA8();
  v36(v65, 0);
  v37 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C38();
  *v38 = 0x4028000000000000;
  v37(v65, 0);
  v39 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C38();
  *(_QWORD *)(v40 + 16) = 0x4028000000000000;
  v39(v65, 0);
  v41 = v57;
  v65[3] = v57;
  v65[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v65);
  v43 = v56;
  (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 16))(boxed_opaque_existential_1, v13, v41);
  v44 = v54;
  sub_1BC2B3B24();
  v45 = objc_msgSend(v26, sel_tertiarySystemGroupedBackgroundColor);
  sub_1BC2B3B18();
  v46 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v44, 0, 1, v46);
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v59, *MEMORY[0x1E0D2B170], v55);
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v60, *MEMORY[0x1E0D2B8C8], v61);
  v47 = v62;
  sub_1BC2B2D8C();
  sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1BC2B92D0;
  v49 = v64;
  *(_QWORD *)(v48 + 56) = v64;
  *(_QWORD *)(v48 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  v50 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v48 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v63 + 32))(v50, v47, v49);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v41);
  sub_1BC0E8594((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
  return v48;
}

uint64_t sub_1BC117D34(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void (*v21)(uint64_t *, _QWORD);
  id v22;
  void (*v23)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39[5];

  v2 = sub_1BC2B2FA8();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B2C6C();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v11 = sub_1BC2B2D98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC2B3CD4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != 1)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC2B3B60();
  sub_1BC113C88();
  sub_1BC2B3C98();
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_secondaryLabelColor);
  v33 = v12;
  v20 = sub_1BC2B3BE4();
  v32 = v11;
  v21 = (void (*)(uint64_t *, _QWORD))v20;
  sub_1BC2B3BB4();
  v21(v39, 0);
  v22 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  v23 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BA8();
  v23(v39, 0);
  v39[3] = v14;
  v39[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v17, v14);
  sub_1BC2B3B24();
  v25 = objc_msgSend(v18, sel_tertiarySystemGroupedBackgroundColor);
  sub_1BC2B3B18();
  v26 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 0, 1, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v7, *MEMORY[0x1E0D2B170], v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v4, *MEMORY[0x1E0D2B8C8], v37);
  v27 = v38;
  sub_1BC2B2D8C();
  sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BC2B92D0;
  v29 = v32;
  *(_QWORD *)(v28 + 56) = v32;
  *(_QWORD *)(v28 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v28 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(v30, v27, v29);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v28;
}

uint64_t sub_1BC118114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3)
  {
    sub_1BC1B4E7C();
    if (!v3)
    {
      sub_1BC1B4E7C();
      if (!v5)
        goto LABEL_7;
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    sub_1BC1B4E7C();
    if (v4)
LABEL_4:
      swift_bridgeObjectRelease();
  }
LABEL_7:
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v6 = sub_1BC2B4B98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BC118218(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScheduleDataSource(0);
  v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a7);
  return sub_1BC1166A8((uint64_t)v17, a2, a3, a4, a5, v18, a7, a8);
}

unint64_t sub_1BC1182F0()
{
  unint64_t result;

  result = qword_1EF3F9CB0;
  if (!qword_1EF3F9CB0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for ScheduleDataSource.DisplayContext, &type metadata for ScheduleDataSource.DisplayContext);
    atomic_store(result, (unint64_t *)&qword_1EF3F9CB0);
  }
  return result;
}

uint64_t sub_1BC118334()
{
  return sub_1BC0E519C(&qword_1EF3F9CB8, type metadata accessor for ScheduleDataSource, (uint64_t)&protocol conformance descriptor for ScheduleDataSource);
}

uint64_t type metadata accessor for ScheduleDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3F9CC0);
}

uint64_t dispatch thunk of ScheduleItemDisplayable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.prefetchedSchedule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.shouldFetchScheduleLocally.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.ontologyLoggingUnitSingular.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.ontologyLoggingUnitPlural.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.freeTextMedicationForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.freeTextMedicationLoggingUnit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1BC1183EC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ScheduleDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScheduleDataSource.__allocating_init(with:healthStore:isMedicationActivePublisher:analyticsManager:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ScheduleDataSource + v0 + 152))();
}

uint64_t dispatch thunk of ScheduleDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ScheduleDataSource + *v0 + 232))();
}

uint64_t sub_1BC1184B8()
{
  return type metadata accessor for ScheduleDataSource(0);
}

uint64_t getEnumTagSinglePayload for HistoryDisplayContext(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleDataSource.DisplayContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC11859C + 4 * byte_1BC2BA915[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC1185D0 + 4 * byte_1BC2BA910[v4]))();
}

uint64_t sub_1BC1185D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1185D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC1185E0);
  return result;
}

uint64_t sub_1BC1185EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC1185F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC1185F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC118600(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BC11860C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ScheduleDataSource.DisplayContext()
{
  return &type metadata for ScheduleDataSource.DisplayContext;
}

uint64_t sub_1BC118628()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC11864C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1BC118678(void *a1)
{
  uint64_t v1;

  return sub_1BC1126C0(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_1BC118684(void *a1)
{
  return sub_1BC111AC4(a1);
}

void sub_1BC11868C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3F9D28)
  {
    type metadata accessor for FutureDateRecencyState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3F9D28);
  }
}

uint64_t type metadata accessor for FutureDateRecencyState(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3F9E58);
}

uint64_t sub_1BC118700(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC0E7998(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BC118758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9D38)
  {
    v0 = sub_1BC2B23F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9D38);
  }
}

void sub_1BC1187A4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC0E7AD8(255, a3);
    v4 = sub_1BC2B53A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for ScheduleDataSource.DoseItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3F9EC0);
}

id sub_1BC11880C@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC113424(a1, *(_QWORD **)(v2 + 24), a2);
}

unint64_t sub_1BC118824()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9D50;
  if (!qword_1EF3F9D50)
  {
    sub_1BC0E7998(255, &qword_1EF3F9D48, type metadata accessor for ScheduleDataSource.DoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9D50);
  }
  return result;
}

uint64_t sub_1BC118884@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC113ADC(a1, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

void sub_1BC118890()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3F9D60)
  {
    sub_1BC2B38E4();
    sub_1BC0E7998(255, &qword_1EF3F9D48, type metadata accessor for ScheduleDataSource.DoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3F9D60);
  }
}

void sub_1BC118918(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC0E1D38(255, a3);
    v4 = sub_1BC2B4FA0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC118970(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC10F478(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC1189E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC118918(0, (unint64_t *)&qword_1EDA0FD00, &qword_1EDA0FCF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC118A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9D80)
  {
    sub_1BC118E08(255, &qword_1EF3F9D88, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC118AF8();
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9D80);
  }
}

unint64_t sub_1BC118AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9D90;
  if (!qword_1EF3F9D90)
  {
    sub_1BC118E08(255, &qword_1EF3F9D88, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9D90);
  }
  return result;
}

void sub_1BC118B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9D98)
  {
    sub_1BC118C10();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C((unint64_t *)&qword_1EF3F9DA8, (uint64_t (*)(uint64_t))sub_1BC118C10, MEMORY[0x1E0C95FB8]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9D98);
  }
}

void sub_1BC118C10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9DA0)
  {
    sub_1BC118918(255, (unint64_t *)&qword_1EDA0FD00, &qword_1EDA0FCF8);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9DA0);
  }
}

uint64_t sub_1BC118C8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC118CB0()
{
  return sub_1BC10F110();
}

uint64_t sub_1BC118CB8()
{
  return sub_1BC10F330();
}

uint64_t sub_1BC118CC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC118CE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t objectdestroy_10Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC118D34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEB64;
  return sub_1BC10F478(a1, v4, v5, v7, v6);
}

void sub_1BC118DAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9DC8)
  {
    v0 = sub_1BC2B3F08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9DC8);
  }
}

uint64_t sub_1BC118E00()
{
  return sub_1BC28DFD8();
}

void sub_1BC118E08(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, _QWORD, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BC118E64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9DE0;
  if (!qword_1EF3F9DE0)
  {
    sub_1BC118E08(255, (unint64_t *)&qword_1EF3F9DD8, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9DE0);
  }
  return result;
}

void destroy for TransientSchedule(uint64_t a1)
{

}

uint64_t initializeWithCopy for TransientSchedule(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(void **)(a2 + 32);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TransientSchedule(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(void **)(a1 + 32);
  v7 = (void *)a2[4];
  *(_QWORD *)(a1 + 32) = v7;
  v8 = v7;

  v9 = (void *)a2[5];
  v10 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  v11 = v9;

  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TransientSchedule(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);

  v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for TransientSchedule(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransientSchedule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransientSchedule()
{
  return &type metadata for TransientSchedule;
}

uint64_t *sub_1BC1190C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1BC118758();
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1BC2B23F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
    }
  }
  return a1;
}

uint64_t sub_1BC119198(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1BC118758();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1BC2B23F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1BC1191FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BC118758();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1BC2B23F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_1BC1192AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC118758();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1BC2B23F0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_1BC0E8594((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1BC118758);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1BC2B23F0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

void *sub_1BC1193B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BC118758();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1BC2B23F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_1BC119464(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC118758();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1BC2B23F0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_1BC0E8594((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1BC118758);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1BC2B23F0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1BC11956C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC119578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1BC118758();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1BC1195C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1195D0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  sub_1BC118758();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BC119624(uint64_t a1)
{
  uint64_t v2;

  sub_1BC118758();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1BC11965C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC118758();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_1BC11969C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC1196F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B23F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v13;
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  return a1;
}

void sub_1BC119790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

}

uint64_t sub_1BC1197E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;

  v6 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v12;
  swift_bridgeObjectRetain();
  v13 = v12;
  return a1;
}

uint64_t sub_1BC119858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v6 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)(a2 + v10);
  v12 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  v13 = v11;

  return a1;
}

uint64_t sub_1BC1198EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BC119950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v6 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  return a1;
}

uint64_t sub_1BC1199D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1199DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B23F0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC119A5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC119A68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B23F0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BC119AE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC119B64()
{
  return sub_1BC0E519C(&qword_1EF3F9F00, type metadata accessor for ScheduleDataSource.DoseItem, (uint64_t)&unk_1BC2BAB90);
}

unint64_t sub_1BC119B94()
{
  unint64_t result;

  result = qword_1EF3F9F08;
  if (!qword_1EF3F9F08)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BAC78, &type metadata for TransientSchedule);
    atomic_store(result, (unint64_t *)&qword_1EF3F9F08);
  }
  return result;
}

unint64_t sub_1BC119BD8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC119BFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BC119BFC()
{
  unint64_t result;

  result = qword_1EF3F9F10;
  if (!qword_1EF3F9F10)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BAC20, &type metadata for TransientSchedule);
    atomic_store(result, (unint64_t *)&qword_1EF3F9F10);
  }
  return result;
}

uint64_t MedicationEducationAndComponentsItem.primaryEducationContent.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationEducationAndComponentsItem.medicationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationEducationAndComponentsItem.componentsList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationEducationAndComponentsItem.hasEducation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t MedicationEducationAndComponentsItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationEducationAndComponentsItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*MedicationEducationAndComponentsItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MedicationEducationAndComponentsItem.uniqueIdentifier.getter()
{
  uint64_t v1;

  type metadata accessor for MedicationEducationAndComponentsItem();
  sub_1BC2B2438();
  sub_1BC0E008C(&qword_1EF3F9F18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v1 = sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for MedicationEducationAndComponentsItem()
{
  uint64_t result;

  result = qword_1EF3F9FA0;
  if (!qword_1EF3F9FA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MedicationEducationAndComponentsItem.init(medicationName:primaryEducationContent:componentsList:hasEducation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  type metadata accessor for MedicationEducationAndComponentsItemCell();
  sub_1BC0E008C(&qword_1EF3F9F20, v14, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationAndComponentsItemCell);
  *(_QWORD *)(a7 + 48) = sub_1BC2B2930();
  *(_QWORD *)(a7 + 56) = v15;
  type metadata accessor for MedicationEducationAndComponentsItem();
  result = sub_1BC2B242C();
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  *(_QWORD *)a7 = a3;
  *(_QWORD *)(a7 + 8) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6;
  return result;
}

uint64_t type metadata accessor for MedicationEducationAndComponentsItemCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC119ED4()
{
  uint64_t v1;

  sub_1BC2B2438();
  sub_1BC0E008C(&qword_1EF3F9F18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v1 = sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC119F7C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC119FFC();
  return sub_1BC0E1CFC((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void sub_1BC119FFC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = v0;
  sub_1BC11A6E4();
  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v2 = sub_1BC11A288();
  v3 = objc_msgSend(v2, sel_text);

  if (!v3)
  {
    v4 = sub_1BC11A288();
    v3 = objc_msgSend(v4, sel_description);

  }
  sub_1BC2B4460();

  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (id)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v5);

}

uint64_t sub_1BC11A144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC11A194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC119FFC();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void (*sub_1BC11A210(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC11A258;
}

void sub_1BC11A258(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC119FFC();
}

id sub_1BC11A288()
{
  return sub_1BC11A4F4(&OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___primaryLabel);
}

id sub_1BC11A2AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel);
  }
  else
  {
    v4 = sub_1BC11A308();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC11A308()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v7 = sub_1BC2B4460();
  v8 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v7, v8);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A98]);
  objc_msgSend(v2, sel_setFont_, v5);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

id sub_1BC11A4D0()
{
  return sub_1BC11A4F4(&OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___educationLabel);
}

id sub_1BC11A4F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = sub_1BC11A554();
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

id sub_1BC11A554()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v6;
  uint64_t v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v6 = sub_1BC2B4460();
  v7 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v6, v7);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

uint64_t sub_1BC11A6E4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  char v20;
  unsigned int v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  char **v45;
  id v46;
  double v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  double v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  double v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  double v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  char *v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  uint64_t v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v126[5];

  v1 = v0;
  v124 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v4 = (char *)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v118 - v6;
  v8 = sub_1BC2B3B48();
  v122 = *(_QWORD *)(v8 - 8);
  v123 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FA010, (void (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItem);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v118 - v12;
  v14 = type metadata accessor for MedicationEducationAndComponentsItem();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v18, (uint64_t)v126);
  if (!v126[3])
  {
    sub_1BC0E1CFC((uint64_t)v126, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_6;
  }
  sub_1BC0E1B94();
  v19 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, v19 ^ 1u, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_6:
    sub_1BC0E1CFC((uint64_t)v13, &qword_1EF3FA010, (void (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItem);
    sub_1BC2B39A4();
    v22 = v1;
    v23 = sub_1BC2B39D4();
    v24 = sub_1BC2B48C8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v125 = v26;
      *(_DWORD *)v25 = 136446210;
      sub_1BC0E5774(v18, (uint64_t)v126);
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
      v27 = sub_1BC2B4490();
      v126[0] = sub_1BC12540C(v27, v28, &v125);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v23, v24, "Incorrect view model for MedicationEducationAndComponentsItemCell: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v26, -1, -1);
      MEMORY[0x1BCCEF3A0](v25, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v124);
  }
  v124 = (uint64_t)v7;
  sub_1BC11BEC8((uint64_t)v13, (uint64_t)v17);
  v20 = v17[40];
  v119 = v10;
  if ((v20 & 1) != 0)
    v21 = 0;
  else
    v21 = objc_msgSend((id)objc_opt_self(), sel_supportsOntologyBackedMedications);
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BC2B92A0;
  v31 = sub_1BC11A288();
  v32 = objc_msgSend(v31, sel_topAnchor);

  v33 = objc_msgSend(v1, sel_contentView);
  v34 = objc_msgSend(v33, sel_topAnchor);

  sub_1BC2B2654();
  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34);

  *(_QWORD *)(v30 + 32) = v35;
  v36 = sub_1BC11A288();
  v37 = objc_msgSend(v36, sel_leadingAnchor);

  v38 = objc_msgSend(v1, sel_contentView);
  v39 = objc_msgSend(v38, (SEL)&ShapeCell.base_props + 6);

  sub_1BC2B2654();
  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39);

  *(_QWORD *)(v30 + 40) = v40;
  v41 = sub_1BC11A288();
  v42 = objc_msgSend(v41, sel_trailingAnchor);

  v43 = objc_msgSend(v1, sel_contentView);
  v44 = v43;
  v45 = &selRef_centerXAnchor;
  v121 = v21;
  if (v21)
    v45 = &selRef_trailingAnchor;
  v46 = objc_msgSend(v43, *v45);

  sub_1BC2B2654();
  v48 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v46, -v47);

  *(_QWORD *)(v30 + 48) = v48;
  v49 = sub_1BC11A288();
  v50 = objc_msgSend(v49, sel_bottomAnchor);

  v51 = objc_msgSend(v1, sel_contentView);
  v52 = objc_msgSend(v51, sel_bottomAnchor);

  sub_1BC2B2654();
  v54 = objc_msgSend(v50, sel_constraintLessThanOrEqualToAnchor_constant_, v52, -v53);

  *(_QWORD *)(v30 + 56) = v54;
  v55 = sub_1BC11A2AC();
  v56 = objc_msgSend(v55, sel_topAnchor);

  v57 = sub_1BC11A288();
  v58 = objc_msgSend(v57, sel_bottomAnchor);

  v59 = objc_msgSend(v56, (SEL)&selRef_estimatedDimension_ + 7, v58, 2.0);
  *(_QWORD *)(v30 + 64) = v59;
  v60 = sub_1BC11A2AC();
  v61 = objc_msgSend(v60, sel_leadingAnchor);

  v62 = sub_1BC11A288();
  v63 = objc_msgSend(v62, sel_leadingAnchor);

  v64 = objc_msgSend(v61, sel_constraintEqualToAnchor_, v63);
  *(_QWORD *)(v30 + 72) = v64;
  v65 = sub_1BC11A2AC();
  v66 = objc_msgSend(v65, sel_trailingAnchor);

  v67 = sub_1BC11A288();
  v68 = objc_msgSend(v67, sel_trailingAnchor);

  v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v68);
  *(_QWORD *)(v30 + 80) = v69;
  v70 = sub_1BC11A4D0();
  v71 = objc_msgSend(v70, sel_leadingAnchor);

  v72 = objc_msgSend(v1, sel_contentView);
  v73 = objc_msgSend(v72, sel_centerXAnchor);

  sub_1BC2B2654();
  v74 = objc_msgSend(v71, (SEL)&selRef_estimatedDimension_ + 7, v73);

  *(_QWORD *)(v30 + 88) = v74;
  v75 = sub_1BC11A4D0();
  v76 = objc_msgSend(v75, sel_trailingAnchor);

  v77 = objc_msgSend(v1, sel_contentView);
  v78 = objc_msgSend(v77, sel_trailingAnchor);

  sub_1BC2B2654();
  v80 = objc_msgSend(v76, (SEL)&selRef_estimatedDimension_ + 7, v78, -v79);

  *(_QWORD *)(v30 + 96) = v80;
  v81 = sub_1BC11A4D0();
  v82 = objc_msgSend(v81, sel_topAnchor);

  v83 = sub_1BC11A288();
  v84 = objc_msgSend(v83, sel_topAnchor);

  v85 = objc_msgSend(v82, sel_constraintEqualToAnchor_, v84);
  *(_QWORD *)(v30 + 104) = v85;
  v86 = sub_1BC11A4D0();
  v87 = objc_msgSend(v86, sel_bottomAnchor);

  v88 = objc_msgSend(v1, sel_contentView);
  v89 = objc_msgSend(v88, sel_bottomAnchor);

  sub_1BC2B2654();
  v91 = objc_msgSend(v87, (SEL)&selRef_estimatedDimension_ + 7, v89, -v90);

  *(_QWORD *)(v30 + 112) = v91;
  v126[0] = v30;
  sub_1BC2B45A4();
  v120 = v126[0];
  v92 = objc_msgSend(v1, sel_contentView);
  v93 = sub_1BC11A288();
  objc_msgSend(v92, sel_addSubview_, v93);

  v94 = objc_msgSend(v1, sel_contentView);
  v95 = sub_1BC11A2AC();
  objc_msgSend(v94, sel_addSubview_, v95);

  v96 = objc_msgSend(v1, sel_contentView);
  v97 = sub_1BC11A4D0();
  objc_msgSend(v96, sel_addSubview_, v97);

  v98 = v119;
  sub_1BC2B3B24();
  if (v121)
  {
    v99 = sub_1BC11A288();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v100 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v101 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v99, sel_setText_, v101);

    v102 = sub_1BC11A288();
    v103 = (void *)objc_opt_self();
    v104 = objc_msgSend(v103, sel_secondaryLabelColor);
    objc_msgSend(v102, sel_setTextColor_, v104);

    v105 = objc_msgSend(v103, sel_tertiarySystemFillColor);
    sub_1BC2B3B18();
    v106 = v124;
  }
  else
  {
    v107 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
    sub_1BC2B3B18();
    v108 = sub_1BC11A288();
    swift_bridgeObjectRetain();
    v109 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v108, sel_setText_, v109);

    v110 = sub_1BC11A2AC();
    v126[0] = *((_QWORD *)v17 + 4);
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC11BF0C();
    swift_bridgeObjectRetain();
    sub_1BC2B440C();
    swift_bridgeObjectRelease();
    v111 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v110, sel_setText_, v111);

    v112 = sub_1BC11A4D0();
    if (*((_QWORD *)v17 + 1))
    {
      swift_bridgeObjectRetain();
      v113 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
    }
    else
    {
      v113 = 0;
    }
    v106 = v124;
    objc_msgSend(v112, sel_setText_, v113);

  }
  v115 = v122;
  v114 = v123;
  (*(void (**)(uint64_t, char *, uint64_t))(v122 + 16))(v106, v98, v123);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v115 + 56))(v106, 0, 1, v114);
  MEMORY[0x1BCCEE23C](v106);
  v116 = (void *)objc_opt_self();
  sub_1BC11BF6C();
  v117 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v116, sel_activateConstraints_, v117);

  (*(void (**)(char *, uint64_t))(v115 + 8))(v98, v114);
  return sub_1BC11BFA8((uint64_t)v17);
}

id MedicationEducationAndComponentsItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationAndComponentsItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_super v11;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___educationLabel] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MedicationEducationAndComponentsItemCell();
  return objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationAndComponentsItemCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MedicationEducationAndComponentsItemCell.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___educationLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MedicationEducationAndComponentsItemCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id MedicationEducationAndComponentsItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationEducationAndComponentsItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC11B880@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v7 = a2[7];
    v8 = *(int *)(a3 + 36);
    v9 = (uint64_t)a2 + v8;
    v10 = a1 + v8;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v7;
    v11 = sub_1BC2B2438();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1BC2B2438();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(int *)(a3 + 36);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v10 = sub_1BC2B2438();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t assignWithCopy for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationEducationAndComponentsItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC11BCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationEducationAndComponentsItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC11BD5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC11BDD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationEducationAndComponentsItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationEducationAndComponentsItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicationEducationAndComponentsItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicationEducationAndComponentsItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1BC11BEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationEducationAndComponentsItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC11BF0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FB1E0;
  if (!qword_1EF3FB1E0)
  {
    sub_1BC0E2130(255, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FB1E0);
  }
  return result;
}

unint64_t sub_1BC11BF6C()
{
  unint64_t result;

  result = qword_1EDA0FCE0;
  if (!qword_1EDA0FCE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FCE0);
  }
  return result;
}

uint64_t sub_1BC11BFA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationEducationAndComponentsItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Optional<A>.makeAcessoryImage(size:circular:)(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  return sub_1BC11C0F4(a2, a3, a1, v3);
}

UIImage __swiftcall MedicationVisualizationConfig.makeAccessoryImage(size:circular:)(CGSize size, Swift::Bool circular)
{
  uint64_t v2;
  _BOOL8 v3;
  double height;
  double width;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = circular;
  height = size.height;
  width = size.width;
  sub_1BC10926C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B3608();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, v2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v11 = sub_1BC11C0F4(width, height, v3, (uint64_t)v8);
  sub_1BC1092C0((uint64_t)v8);
  return (UIImage)v11;
}

void sub_1BC11C0C0(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_1BC11C0F4(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t result;
  _QWORD aBlock[6];

  sub_1BC10926C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, a1, a2);
  sub_1BC2B3314();
  sub_1BC11C330(a4, (uint64_t)v9);
  sub_1BC2B3308();
  sub_1BC11C374();
  v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultFormat);
  objc_msgSend(v11, sel_setOpaque_, 0);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v11, a1, a2);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v10;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BC11C3D4;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1BC118CE4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC11C0C0;
  aBlock[3] = &block_descriptor_4;
  v15 = _Block_copy(aBlock);
  v16 = v10;
  swift_retain();
  swift_release();
  v17 = objc_msgSend(v12, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v11 & 1) == 0)
    return (uint64_t)v17;
  __break(1u);
  return result;
}

uint64_t sub_1BC11C330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC10926C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC11C374()
{
  unint64_t result;

  result = qword_1EF3FA020;
  if (!qword_1EF3FA020)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FA020);
  }
  return result;
}

uint64_t sub_1BC11C3B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC11C3D4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v1, sel_drawViewHierarchyInRect_afterScreenUpdates_, 1);
}

uint64_t sub_1BC11C410()
{
  return swift_deallocObject();
}

id PregnancyLactationEducationViewController.__allocating_init(listManager:educationType:)(uint64_t a1, unsigned __int8 *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return PregnancyLactationEducationViewController.init(listManager:educationType:)(a1, a2);
}

id PregnancyLactationEducationViewController.init(listManager:educationType:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v29;
  _BOOL4 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  unsigned __int8 v44;

  v39 = sub_1BC2B2438();
  v4 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  v38 = a1;
  v8 = sub_1BC2B3938();
  v9 = sub_1BC11C9E4(v8);
  swift_bridgeObjectRelease();
  if (v9)
    v10 = v9;
  else
    v10 = MEMORY[0x1E0DEE9D8];
  v44 = v7;
  v43 = 0;
  v11 = sub_1BC14E3D4(v10, &v44, &v43);
  v37 = v7;
  v42 = v7;
  v41 = 1;
  v12 = sub_1BC14E3D4(v10, &v42, &v41);
  swift_bridgeObjectRelease();
  v35 = v11;
  v36 = v12;
  if (*(_QWORD *)(v11 + 16))
    v13 = *(_QWORD *)(v12 + 16) != 0;
  else
    v13 = 0;
  v30 = v13;
  sub_1BC0E8710();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC2B92C0;
  type metadata accessor for PregnancyLactationEducationDataSource();
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + qword_1EF3FAFF8) = 0;
  *(_BYTE *)(v15 + qword_1EF3FB000) = v13;
  sub_1BC11D238();
  v34 = v16;
  v17 = *(_QWORD *)(sub_1BC2B2BC4() - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v32 = v19 | 7;
  v33 = ((v19 + 32) & ~v19) + v18;
  v20 = swift_allocObject();
  v31 = xmmword_1BC2B92D0;
  *(_OWORD *)(v20 + 16) = xmmword_1BC2B92D0;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v6, v39);
  sub_1BC2B2BAC();
  v22 = sub_1BC2B2750();
  v23 = sub_1BC11D28C();
  *(_QWORD *)(v14 + 32) = v22;
  *(_QWORD *)(v14 + 40) = v23;
  v24 = swift_allocObject();
  *(_BYTE *)(v24 + qword_1EF3FAFF8) = 1;
  *(_BYTE *)(v24 + qword_1EF3FB000) = v30;
  *(_OWORD *)(swift_allocObject() + 16) = v31;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v21(v6, v39);
  sub_1BC2B2BAC();
  *(_QWORD *)(v14 + 48) = sub_1BC2B2750();
  *(_QWORD *)(v14 + 56) = v23;
  sub_1BC2B2DEC();
  swift_allocObject();
  sub_1BC2B2E04();
  swift_retain();
  v25 = (void *)sub_1BC2B2FE4();
  v40 = v37;
  v26 = v25;
  MedicationSecondaryEducationType.title.getter();
  v27 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setTitle_, v27);
  swift_release();

  swift_release();
  return v26;
}

uint64_t sub_1BC11C7E0(unint64_t a1)
{
  return sub_1BC11C9E4(a1);
}

uint64_t sub_1BC11C7EC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1BC2B5228();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1BCCEE950](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        type metadata accessor for MedicationChartUserInfo(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
        if (v4 == v2)
          return v9;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v6 = j + 1;
        if (__OFADD__(j, 1))
          break;
        type metadata accessor for MedicationChartUserInfo(0);
        v7 = swift_dynamicCastClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v7;
        swift_unknownObjectRetain();
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
        if (v6 == v2)
          return v9;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    sub_1BC2B5228();
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_1BC11C9CC(unint64_t a1)
{
  return sub_1BC11C9E4(a1);
}

uint64_t sub_1BC11C9D8(unint64_t a1)
{
  return sub_1BC11C9E4(a1);
}

uint64_t sub_1BC11C9E4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1BC2B5228();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1BCCEE950](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    sub_1BC2B5228();
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

id PregnancyLactationEducationViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PregnancyLactationEducationViewController.init(coder:)()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC11CC5C()
{
  sub_1BC2B52B8();
  __break(1u);
}

id sub_1BC11CCB4(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for PregnancyLactationEducationViewController();
  return objc_msgSendSuper2(&v2, sel_viewDidLoad);
}

uint64_t sub_1BC11CCF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D2A9E0];
  v3 = sub_1BC2B2918();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BC11CD38(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC10ADC0(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void PregnancyLactationEducationViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PregnancyLactationEducationViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PregnancyLactationEducationViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void PregnancyLactationEducationViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC11CEAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PregnancyLactationEducationViewController.__deallocating_deinit()
{
  return sub_1BC11CEE8((SEL *)&selRef_dealloc);
}

id sub_1BC11CEE8(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for PregnancyLactationEducationViewController();
  return objc_msgSendSuper2(&v4, *a1);
}

Swift::Void __swiftcall PregnancyLactationEducationViewController.viewControllerWillEnterAdaptiveModal()()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_navigationItem);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B4DA8();
  v4 = (void *)sub_1BC2B4928();
  objc_msgSend(v2, sel_setRightBarButtonItem_, v4, 0, 0, 0, sub_1BC11D334, v3);

  v5 = objc_msgSend(v1, sel_navigationController);
  v6 = v5;
  if (v5)
  {
    v7 = objc_msgSend(v5, sel_navigationBar);

    objc_msgSend(v7, sel_setPrefersLargeTitles_, 1);
  }
  v8 = objc_msgSend(v1, sel_navigationController);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_navigationBar);

    sub_1BC2B4AF0();
    objc_msgSend(v10, sel_setDirectionalLayoutMargins_);

  }
}

void sub_1BC11D104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1BCCEF478](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void sub_1BC11D164(void *a1)
{
  id v1;

  v1 = a1;
  PregnancyLactationEducationViewController.viewControllerWillEnterAdaptiveModal()();

}

Swift::Void __swiftcall PregnancyLactationEducationViewController.viewControllerDidLeaveAdaptiveModal()()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);

}

void sub_1BC11D1E0(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

}

void sub_1BC11D238()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8C50)
  {
    sub_1BC2B2BC4();
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8C50);
  }
}

unint64_t sub_1BC11D28C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FA028;
  if (!qword_1EF3FA028)
  {
    v1 = type metadata accessor for PregnancyLactationEducationDataSource();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2F070], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FA028);
  }
  return result;
}

uint64_t type metadata accessor for PregnancyLactationEducationViewController()
{
  uint64_t result;

  result = qword_1EF3FA030;
  if (!qword_1EF3FA030)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC11D310()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC11D334(uint64_t a1)
{
  uint64_t v1;

  sub_1BC11D104(a1, v1);
}

uint64_t sub_1BC11D33C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PregnancyLactationEducationViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PregnancyLactationEducationViewController.__allocating_init(listManager:educationType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for PregnancyLactationEducationViewController))();
}

uint64_t dispatch thunk of PregnancyLactationEducationViewController.providedPresentation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationEducationViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 8))();
}

uint64_t sub_1BC11D3BC()
{
  return type metadata accessor for PregnancyLactationEducationViewController();
}

uint64_t sub_1BC11D3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = (*(uint64_t (**)(void))(a2 + 24))();
  if (!v5)
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v7 = v4;
  sub_1BC2B44FC();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  return v7;
}

uint64_t sub_1BC11D46C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(uint64_t (**)(void))(a2 + 32);
  v5 = v4();
  if (v6)
  {
    v7 = v5;
    v8 = v6;
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    if (v10)
    {
      v11 = v9;
      v12 = v10;
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v13 = (void *)qword_1EDA0FEF8;
      sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BC2B92C0;
      v15 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      v16 = sub_1BC0F2748();
      *(_QWORD *)(v14 + 32) = v7;
      *(_QWORD *)(v14 + 40) = v8;
      *(_QWORD *)(v14 + 96) = v15;
      *(_QWORD *)(v14 + 104) = v16;
      *(_QWORD *)(v14 + 64) = v16;
      *(_QWORD *)(v14 + 72) = v11;
      *(_QWORD *)(v14 + 80) = v12;
      v17 = v13;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      v18 = sub_1BC2B443C();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    swift_bridgeObjectRelease();
  }
  v19 = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  if (!v20)
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  return v19;
}

uint64_t sub_1BC11D638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1)
  {
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC11BF0C();
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B440C();
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = sub_1BC11D46C(a2, a3);
    if (!v9)
      goto LABEL_9;
    v10 = v9;
    if (v7)
    {
      v11 = v8;
      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91D8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC2B92C0;
      *(_QWORD *)(v12 + 32) = v11;
      *(_QWORD *)(v12 + 40) = v10;
      *(_QWORD *)(v12 + 48) = v5;
      *(_QWORD *)(v12 + 56) = v7;
      v5 = sub_1BC2B440C();
      swift_bridgeObjectRelease();
      return v5;
    }
    goto LABEL_7;
  }
  sub_1BC11D46C(a2, a3);
  if (v13)
  {
    v5 = 0;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v5 = 0;
LABEL_9:
  v14 = sub_1BC11D46C(a2, a3);
  if (v15)
  {
    v16 = v14;
    swift_bridgeObjectRelease();
    return v16;
  }
  return v5;
}

uint64_t HKMedicationUserDomainConcept.visualizationConfig.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(v1, sel_userVisualizationConfigJSONString);
  if (v3)
  {
    v4 = v3;
    sub_1BC2B4460();

    sub_1BC2B35B4();
  }
  else
  {
    v5 = sub_1BC2B3608();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
  type metadata accessor for DrugInteractionVisualizationConfig(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t HKMedicationUserDomainConcept.name.getter()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B374C();
}

id HKMedicationUserDomainConcept.nickname.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_userSpecifiedName);
  if (v1)
  {
    sub_1BC2B4460();

    v1 = (id)sub_1BC2B44CC();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1BC11D974@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*v1, sel_userVisualizationConfigJSONString);
  if (v3)
  {
    v4 = v3;
    sub_1BC2B4460();

    sub_1BC2B35B4();
  }
  else
  {
    v5 = sub_1BC2B3608();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
  type metadata accessor for DrugInteractionVisualizationConfig(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC11DA28()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B374C();
}

id sub_1BC11DA78()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_userSpecifiedName);
  if (v1)
  {
    sub_1BC2B4460();

    v1 = (id)sub_1BC2B44CC();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1BC11DAF8()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
}

uint64_t sub_1BC11DB18()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
}

uint64_t sub_1BC11DB38()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE10componentsSaySSGSgvg_0();
}

uint64_t HKDrugInteractionLifestyleFactor.visualizationConfig.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for DrugInteractionVisualizationConfig(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t HKDrugInteractionLifestyleFactor.name.getter(uint64_t a1)
{
  char v2;

  v2 = 0;
  return HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v2, a1);
}

uint64_t HKDrugInteractionLifestyleFactor.nickname.getter()
{
  return 0;
}

uint64_t HKDrugInteractionLifestyleFactor.doseForm.getter()
{
  return 0;
}

uint64_t HKDrugInteractionLifestyleFactor.strength.getter()
{
  return 0;
}

uint64_t HKDrugInteractionLifestyleFactor.components.getter()
{
  return 0;
}

uint64_t sub_1BC11DBE0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  type metadata accessor for DrugInteractionVisualizationConfig(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC11DC18()
{
  uint64_t *v0;
  uint64_t v1;
  char v3;

  v1 = *v0;
  v3 = 0;
  return HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v3, v1);
}

uint64_t sub_1BC11DC40(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC11F0D4(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  sub_1BC11F138((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC11E5B4();
  return sub_1BC11F19C((uint64_t)v5);
}

uint64_t sub_1BC11DCB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  return sub_1BC11F0D4(v3, a1);
}

uint64_t sub_1BC11DD00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  sub_1BC11F138(a1, v3);
  swift_endAccess();
  sub_1BC11E5B4();
  return sub_1BC11F19C(a1);
}

uint64_t (*sub_1BC11DD6C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC11DDB4;
}

uint64_t sub_1BC11DDB4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC11E5B4();
  return result;
}

uint64_t sub_1BC11DDE4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC11DE4C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC11DE94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC11DEE4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BC11DF28()
{
  _BYTE *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden] = 0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for InteractionDetailFactorView();
  v2 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = sub_1BC11E0E0();
  v4 = sub_1BC11E164();
  v5 = sub_1BC11E320();
  objc_msgSend(v2, sel_addSubview_, v3);
  objc_msgSend(v2, sel_addSubview_, v4);
  objc_msgSend(v2, sel_addSubview_, v5);

  sub_1BC11E958();
  return v2;
}

id InteractionDetailFactorView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id sub_1BC11E0E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DrugInteractionVisualizationView()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC11E164()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel);
  }
  else
  {
    v4 = sub_1BC11E1C0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC11E1C0()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B2990()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1 = (id)*MEMORY[0x1E0DC4A88];
  sub_1BC2B2984();
  sub_1BC2B2978();
  v6 = sub_1BC2B4460();
  v7 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v6, v7);

  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1BC11E320()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B2990()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v6 = (id)*MEMORY[0x1E0DC4B10];
    sub_1BC2B2984();
    sub_1BC2B2978();
    v7 = (void *)objc_opt_self();
    v8 = v5;
    v9 = objc_msgSend(v7, sel_secondaryLabelColor);
    objc_msgSend(v8, sel_setTextColor_, v9);

    v16 = sub_1BC2B4460();
    v17 = v10;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v11 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v12 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12, v16, v17);

    objc_msgSend(v11, sel_setNumberOfLines_, 0);
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

id sub_1BC11E508(id result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  id v4;
  void *v5;

  v2 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden) = (_BYTE)result;
  if (v3 != (result & 1))
  {
    v4 = sub_1BC11E320();
    objc_msgSend(v4, sel_setHidden_, *(unsigned __int8 *)(v1 + v2));

    v5 = *(void **)(v1
                  + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint);
    if (v5)
      objc_msgSend(v5, sel_setActive_, *(unsigned __int8 *)(v1 + v2));
    result = *(id *)(v1
                   + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint);
    if (result)
      return objc_msgSend(result, sel_setActive_, (*(_BYTE *)(v1 + v2) & 1) == 0);
  }
  return result;
}

uint64_t sub_1BC11E5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  sub_1BC11F474();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  sub_1BC11F0D4(v4, (uint64_t)&v34);
  if (v35)
  {
    sub_1BC0F2730(&v34, (uint64_t)v36);
    v5 = (char *)sub_1BC11E0E0();
    v6 = v37;
    v7 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    v8 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 0, 1, v8);
    v9 = (uint64_t)&v5[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig];
    swift_beginAccess();
    sub_1BC11F4C8((uint64_t)v3, v9);
    swift_endAccess();
    sub_1BC121EDC();
    v10 = *(void **)&v5[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview];
    if (v10)
      objc_msgSend(v10, sel_hk_alignConstraintsWithView_, v5);
    sub_1BC11F50C((uint64_t)v3);

    v11 = sub_1BC11E164();
    v12 = v37;
    v13 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    sub_1BC11D3C4(v12, v13);
    v14 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setText_, v14);

    v15 = v37;
    v16 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    swift_beginAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1BC11D638(v17, v15, v16);
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = sub_1BC11E320();
    sub_1BC28C714(2.0, v18, v20);

    v22 = v37;
    v23 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    sub_1BC11D46C(v22, v23);
    if (v24)
    {
      v25 = sub_1BC11E320();
      v26 = objc_msgSend(v25, sel_attributedText);

      if (!v26)
      {
        swift_bridgeObjectRelease();
        if (!v20)
          goto LABEL_9;
        goto LABEL_8;
      }
      v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v26);
      v28 = *MEMORY[0x1E0DC1140];
      v29 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      v30 = sub_1BC2B44E4();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_addAttribute_value_range_, v28, v29, 0, v30);

      v31 = sub_1BC11E320();
      objc_msgSend(v31, sel_setAttributedText_, v27);

    }
    if (!v20)
    {
LABEL_9:
      sub_1BC11E508((id)(v20 == 0));
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return sub_1BC11F19C((uint64_t)&v34);
}

id sub_1BC11E958()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC2BAEA0;
  v4 = sub_1BC11E0E0();
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  v6 = objc_msgSend(v1, sel_leadingAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = sub_1BC11E0E0();
  v9 = objc_msgSend(v8, sel_widthAnchor);

  v10 = objc_msgSend(v9, sel_constraintEqualToConstant_, 33.0);
  *(_QWORD *)(v3 + 40) = v10;
  v11 = sub_1BC11E0E0();
  v12 = objc_msgSend(v11, sel_heightAnchor);

  v13 = sub_1BC11E0E0();
  v14 = objc_msgSend(v13, sel_widthAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(_QWORD *)(v3 + 48) = v15;
  v16 = sub_1BC11E0E0();
  v17 = objc_msgSend(v16, sel_centerYAnchor);

  v18 = sub_1BC11E164();
  v19 = objc_msgSend(v18, sel_centerYAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(_QWORD *)(v3 + 56) = v20;
  v21 = sub_1BC11E164();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = sub_1BC11E0E0();
  v24 = objc_msgSend(v23, sel_trailingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 10.0);
  *(_QWORD *)(v3 + 64) = v25;
  v26 = sub_1BC11E164();
  v27 = objc_msgSend(v26, sel_topAnchor);

  v28 = objc_msgSend(v1, sel_topAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v3 + 72) = v29;
  v30 = sub_1BC11E164();
  v31 = objc_msgSend(v30, sel_trailingAnchor);

  v32 = objc_msgSend(v1, sel_trailingAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(_QWORD *)(v3 + 80) = v33;
  v34 = sub_1BC11E320();
  v35 = objc_msgSend(v34, sel_leadingAnchor);

  v36 = sub_1BC11E164();
  v37 = objc_msgSend(v36, sel_leadingAnchor);

  v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v37);
  *(_QWORD *)(v3 + 88) = v38;
  v39 = sub_1BC11E320();
  v40 = objc_msgSend(v39, sel_trailingAnchor);

  v41 = objc_msgSend(v1, sel_trailingAnchor);
  v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  *(_QWORD *)(v3 + 96) = v42;
  v43 = sub_1BC11E320();
  v44 = objc_msgSend(v43, sel_topAnchor);

  v45 = sub_1BC11E164();
  v46 = objc_msgSend(v45, sel_bottomAnchor);

  v47 = objc_msgSend(v44, sel_constraintGreaterThanOrEqualToAnchor_constant_, v46, 2.0);
  *(_QWORD *)(v3 + 104) = v47;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v48 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v48);

  v49 = objc_msgSend(v1, sel_bottomAnchor);
  v50 = sub_1BC11E320();
  v51 = objc_msgSend(v50, sel_bottomAnchor);

  v52 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v51);
  v53 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint] = v52;

  v54 = objc_msgSend(v1, sel_bottomAnchor);
  v55 = sub_1BC11E164();
  v56 = objc_msgSend(v55, sel_bottomAnchor);

  v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
  v58 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint] = v57;

  return sub_1BC11E508((id)1);
}

id InteractionDetailFactorView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void InteractionDetailFactorView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionDetailFactorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionDetailFactorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC11F0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0F1278(0, &qword_1EF3FA088, &qword_1EF3FA090, (uint64_t)&protocol descriptor for InteractionDetailFactorViewModelProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC11F138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0F1278(0, &qword_1EF3FA088, &qword_1EF3FA090, (uint64_t)&protocol descriptor for InteractionDetailFactorViewModelProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC11F19C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0F1278(0, &qword_1EF3FA088, &qword_1EF3FA090, (uint64_t)&protocol descriptor for InteractionDetailFactorViewModelProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s19HealthMedicationsUI27InteractionDetailFactorViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t type metadata accessor for InteractionDetailFactorView()
{
  return objc_opt_self();
}

uint64_t sub_1BC11F2E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  return sub_1BC11F0D4(v3, a2);
}

uint64_t sub_1BC11F338@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.visualizationConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.nickname.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.doseForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.strength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.components.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t method lookup function for InteractionDetailFactorView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionDetailFactorView.viewModelFactor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.viewModelFactor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.viewModelFactor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.ingredients.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.ingredients.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.ingredients.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

void sub_1BC11F474()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA0F8)
  {
    type metadata accessor for DrugInteractionVisualizationConfig(255);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA0F8);
  }
}

uint64_t sub_1BC11F4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC11F474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC11F50C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC11F474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MedicationAvatarItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationAvatarItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for MedicationAvatarItem()
{
  uint64_t result;

  result = qword_1EF3FA160;
  if (!qword_1EF3FA160)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MedicationAvatarItem.uniqueIdentifier.getter()
{
  type metadata accessor for MedicationAvatarItem();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x7449726174617641;
}

uint64_t static MedicationAvatarItem.== infix(_:_:)()
{
  type metadata accessor for MedicationAvatarItem();
  return sub_1BC2B2414();
}

uint64_t MedicationAvatarItem.hash(into:)()
{
  type metadata accessor for MedicationAvatarItem();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC2B43F4();
}

uint64_t MedicationAvatarItem.hashValue.getter()
{
  sub_1BC2B5450();
  type metadata accessor for MedicationAvatarItem();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC11F748()
{
  sub_1BC2B5450();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC11F7C0()
{
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC2B43F4();
}

uint64_t sub_1BC11F824()
{
  sub_1BC2B5450();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC11F898()
{
  return sub_1BC0E519C(&qword_1EF3FA100, (uint64_t (*)(uint64_t))type metadata accessor for MedicationAvatarItem, (uint64_t)&protocol conformance descriptor for MedicationAvatarItem);
}

uint64_t sub_1BC11F8C4()
{
  return sub_1BC2B2414();
}

uint64_t sub_1BC11F8D4()
{
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x7449726174617641;
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationAvatarItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B3608();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (char *)a1 + v12;
    v17 = (char *)a2 + v12;
    v18 = sub_1BC2B2438();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_retain();
    v19(v16, v17, v18);
    v20 = a3[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MedicationAvatarItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1BC2B3608();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_release();
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = sub_1BC2B3608();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = sub_1BC2B2438();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_retain();
  v17(v14, v15, v16);
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v6 = sub_1BC2B3608();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  swift_retain();
  swift_release();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1BC2B3608();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1BC2B3608();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  swift_release();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationAvatarItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC120040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BC2B2438();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationAvatarItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BC120104(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    v10 = sub_1BC2B2438();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_1BC1201B8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC0E1C64(319, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  if (v0 <= 0x3F)
  {
    sub_1BC2B2438();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

id sub_1BC120260()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___pillImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___pillImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___pillImageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1202F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___editButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___editButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___editButton);
  }
  else
  {
    v4 = sub_1BC120354(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC120354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  sub_1BC0E1C64(0, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - v2;
  v4 = sub_1BC2B4E68();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B4DCC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B4EC8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B4EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DC3060], v8);
  sub_1BC2B4DD8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC3190], v4);
  sub_1BC2B4DC0();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v16 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B4E98();
  v17 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v18 = objc_msgSend(v17, sel_titleLabel);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_setAdjustsFontForContentSizeCategory_, 1);

  }
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v17, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v3, v15, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v3, 0, 1, v12);
  sub_1BC2B4EEC();
  objc_msgSend(v17, sel_addTarget_action_forControlEvents_, v22, sel_editButtonTappedWithSender_, 64);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v17;
}

void sub_1BC1207B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  _QWORD v43[2];

  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v43 - v2;
  sub_1BC2B3B30();
  v4 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
  MEMORY[0x1BCCEE23C](v3);
  v5 = objc_msgSend(v0, sel_contentView);
  v6 = sub_1BC120260();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = objc_msgSend(v0, sel_contentView);
  v8 = sub_1BC1202F4();
  objc_msgSend(v7, sel_addSubview_, v8);

  v9 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC2BAF60;
  v11 = sub_1BC120260();
  v12 = objc_msgSend(v11, sel_topAnchor);

  v13 = objc_msgSend(v0, sel_contentView);
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(_QWORD *)(v10 + 32) = v15;
  v16 = sub_1BC120260();
  v17 = objc_msgSend(v16, sel_centerXAnchor);

  v18 = objc_msgSend(v0, sel_contentView);
  v19 = objc_msgSend(v18, sel_centerXAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(_QWORD *)(v10 + 40) = v20;
  v21 = sub_1BC120260();
  v22 = objc_msgSend(v21, sel_widthAnchor);

  v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 80.0);
  *(_QWORD *)(v10 + 48) = v23;
  v24 = sub_1BC120260();
  v25 = objc_msgSend(v24, sel_heightAnchor);

  v26 = objc_msgSend(v25, sel_constraintEqualToConstant_, 80.0);
  *(_QWORD *)(v10 + 56) = v26;
  v27 = sub_1BC1202F4();
  v28 = objc_msgSend(v27, sel_topAnchor);

  v29 = sub_1BC120260();
  v30 = objc_msgSend(v29, sel_bottomAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 8.0);
  *(_QWORD *)(v10 + 64) = v31;
  v32 = sub_1BC1202F4();
  v33 = objc_msgSend(v32, sel_bottomAnchor);

  v34 = objc_msgSend(v0, sel_contentView);
  v35 = objc_msgSend(v34, sel_bottomAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(_QWORD *)(v10 + 72) = v36;
  v37 = sub_1BC1202F4();
  v38 = objc_msgSend(v37, sel_centerXAnchor);

  v39 = objc_msgSend(v0, sel_contentView);
  v40 = objc_msgSend(v39, sel_centerXAnchor);

  v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v40);
  *(_QWORD *)(v10 + 80) = v41;
  v43[1] = v10;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v42 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, v42);

}

uint64_t sub_1BC120C5C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  id v17;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  sub_1BC0E1C64(0, &qword_1EF3FA1E0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for MedicationAvatarItem();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v15, (uint64_t)v30, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v30[3])
  {
    sub_1BC0E1B94();
    v16 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1BC121844((uint64_t)v10, (uint64_t)v14);
      v17 = sub_1BC120260();
      sub_1BC0E1CB0((uint64_t)v14, (uint64_t)v7, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      sub_1BC2B3308();

      return sub_1BC121888((uint64_t)v14);
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v30, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1BC0E1CFC((uint64_t)v10, &qword_1EF3FA1E0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  sub_1BC2B39A4();
  v19 = v0;
  v20 = sub_1BC2B39D4();
  v21 = sub_1BC2B48C8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v28 = v1;
    v29 = v23;
    *(_DWORD *)v22 = 136446210;
    v26 = v22 + 4;
    v27 = v2;
    sub_1BC0E1CB0(v15, (uint64_t)v30, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v24 = sub_1BC2B4490();
    v30[0] = sub_1BC12540C(v24, v25, &v29);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v20, v21, "Incorrect view model for MedicationAvatarCell: %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v23, -1, -1);
    MEMORY[0x1BCCEF3A0](v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

void sub_1BC121030()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - v2;
  v4 = objc_msgSend(v0, sel_viewController);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BC120260();
    sub_1BC2B32FC();

    v7 = objc_allocWithZone((Class)type metadata accessor for MedmojiPickerViewController());
    v8 = (char *)MedmojiPickerViewController.init(config:)((uint64_t)v3);
    *(_QWORD *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate + 8] = &off_1E74B2618;
    swift_unknownObjectWeakAssign();
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v8);
    objc_msgSend(v9, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v9, sel_setModalInPresentation_, 1);
    objc_msgSend(v5, sel_presentViewController_animated_completion_, v9, 1, 0);

  }
}

id sub_1BC1211D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationAvatarCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationAvatarCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC121284@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC1212E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC120C5C();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC121360(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1213A8;
}

uint64_t sub_1BC1213A8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC120C5C();
  return result;
}

uint64_t sub_1BC1213D8(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  id v24;
  void (*v25)(char *, uint64_t);
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];

  v3 = sub_1BC2B39E0();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v34 - v10;
  sub_1BC0E1C64(0, &qword_1EF3FA1E0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - v13;
  v15 = type metadata accessor for MedicationAvatarItem();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v19, (uint64_t)v38, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v38[3])
  {
    sub_1BC0E1B94();
    v20 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1BC121844((uint64_t)v14, (uint64_t)v18);
      v21 = sub_1BC2B3608();
      v22 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      v23 = *(_QWORD *)(v21 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v11, a1, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v11, 0, 1, v21);
      v24 = sub_1BC120260();
      sub_1BC0E1CB0((uint64_t)v11, (uint64_t)v9, (unint64_t *)&qword_1EDA0ECC0, v22);
      sub_1BC2B3308();

      sub_1BC0E1CFC((uint64_t)v11, (unint64_t *)&qword_1EDA0ECC0, v22);
      v25 = *(void (**)(char *, uint64_t))&v18[*(int *)(v15 + 20)];
      swift_retain();
      v25(v18, a1);
      swift_release();
      return sub_1BC121888((uint64_t)v18);
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v38, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1BC0E1CFC((uint64_t)v14, &qword_1EF3FA1E0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  sub_1BC2B39A4();
  v27 = v1;
  v28 = sub_1BC2B39D4();
  v29 = sub_1BC2B48C8();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v37 = v31;
    *(_DWORD *)v30 = 136446210;
    v34 = v30 + 4;
    sub_1BC0E1CB0(v19, (uint64_t)v38, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v32 = sub_1BC2B4490();
    v38[0] = sub_1BC12540C(v32, v33, &v37);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v28, v29, "Incorrect view model for MedicationAvatarCell: %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v31, -1, -1);
    MEMORY[0x1BCCEF3A0](v30, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v5, v36);
}

uint64_t sub_1BC121844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationAvatarItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC121888(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationAvatarItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC1218C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - v5;
  sub_1BC0E1CB0(a1, (uint64_t)&v11 - v5, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  v7 = *a2;
  v8 = v7 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  sub_1BC11F4C8((uint64_t)v6, v8);
  swift_endAccess();
  sub_1BC121EDC();
  v9 = *(void **)(v7 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview);
  if (v9)
    objc_msgSend(v9, sel_hk_alignConstraintsWithView_, v7);
  return sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

uint64_t sub_1BC1219CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

uint64_t sub_1BC121A2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  sub_1BC11F4C8(a1, v3);
  swift_endAccess();
  sub_1BC121EDC();
  v4 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview);
  if (v4)
    objc_msgSend(v4, sel_hk_alignConstraintsWithView_, v1);
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

id (*sub_1BC121AC8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC121B10;
}

id sub_1BC121B10(uint64_t a1, char a2)
{
  id result;
  uint64_t v5;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    sub_1BC121EDC();
    result = *(id *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview);
    if (result)
      return objc_msgSend(result, sel_hk_alignConstraintsWithView_, *(_QWORD *)(a1 + 24));
  }
  return result;
}

id sub_1BC121B68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC121BFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id DrugInteractionVisualizationView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DrugInteractionVisualizationView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig];
  v2 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC121EDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void (*v26)(uint64_t);
  id v27;
  void *v28;
  uint64_t v29;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v29 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v29 - v5;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  v10 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig];
  swift_beginAccess();
  sub_1BC0E1CB0(v17, (uint64_t)v9, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1BC0E1CFC((uint64_t)v9, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  sub_1BC122490((uint64_t)v9, (uint64_t)v16);
  v19 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview], sel_removeFromSuperview);
  sub_1BC1224D4((uint64_t)v16, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *v14;
    v21 = sub_1BC121BFC();
    v22 = HKDrugInteractionLifestyleFactor.image.getter(v20);
    objc_msgSend(v21, sel_setImage_, v22);

    v23 = sub_1BC121BFC();
    v24 = *(void **)&v1[v19];
    *(_QWORD *)&v1[v19] = v23;

    if (!*(_QWORD *)&v1[v19])
      return sub_1BC122518((uint64_t)v16);
    goto LABEL_7;
  }
  sub_1BC109D88((uint64_t)v14, (uint64_t)v6);
  v25 = sub_1BC121B68();
  v26 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
  sub_1BC0E1CB0((uint64_t)v6, v29, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  sub_1BC2B3308();

  v27 = sub_1BC121B68();
  v28 = *(void **)&v1[v19];
  *(_QWORD *)&v1[v19] = v27;

  sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0ECC0, v26);
  if (*(_QWORD *)&v1[v19])
LABEL_7:
    objc_msgSend(v1, sel_addSubview_);
  return sub_1BC122518((uint64_t)v16);
}

id DrugInteractionVisualizationView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void DrugInteractionVisualizationView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DrugInteractionVisualizationView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DrugInteractionVisualizationView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DrugInteractionVisualizationView()
{
  uint64_t result;

  result = qword_1EF3FA228;
  if (!qword_1EF3FA228)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1222D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

uint64_t sub_1BC1223A0()
{
  return type metadata accessor for DrugInteractionVisualizationView();
}

void sub_1BC1223A8()
{
  unint64_t v0;

  sub_1BC0E1C64(319, (unint64_t *)&qword_1EF3FA0F8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DrugInteractionVisualizationView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DrugInteractionVisualizationView.visualizationConfig.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DrugInteractionVisualizationView.visualizationConfig.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DrugInteractionVisualizationView.visualizationConfig.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1BC122490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1224D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC122518(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC122554()
{
  void *v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(unint64_t, uint64_t, uint64_t, unint64_t);
  id v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  id v40;
  id v41;
  id v42;
  unint64_t v43;
  char *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  void (*v50)(unint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v1 = v0;
  v2 = sub_1BC2B20FC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v47 - v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char **)((char *)&v47 - v9);
  sub_1BC0E7998(0, &qword_1EF3FA270, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t)&v47 - v13;
  if (objc_msgSend(v0, sel_scheduleType) != (id)8)
  {
    v29 = objc_msgSend(v0, sel_timeIntervals);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
    v30 = sub_1BC2B458C();

    return v30;
  }
  v15 = MEMORY[0x1E0DEE9D8];
  v58 = MEMORY[0x1E0DEE9D8];
  v16 = objc_msgSend(v1, sel_timeIntervals);
  v54 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
  v17 = sub_1BC2B458C();

  if (v17 >> 62)
    goto LABEL_59;
  v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v57 = v2;
    v48 = v1;
    v49 = v14;
    if (v18)
    {
      v59 = v15;
      sub_1BC125AD8(0, v18 & ~(v18 >> 63), 0);
      if (v18 < 0)
      {
        __break(1u);
        goto LABEL_67;
      }
      v55 = v18;
      v19 = 0;
      v20 = v59;
      v21 = v17;
      v22 = v17 & 0xC000000000000001;
      do
      {
        if (v22)
          v23 = (id)MEMORY[0x1BCCEE950](v19, v21);
        else
          v23 = *(id *)(v21 + 8 * v19 + 32);
        v24 = v23;
        v25 = objc_msgSend(v23, sel_startTimeComponent);
        sub_1BC2B2078();

        v59 = v20;
        v27 = *(_QWORD *)(v20 + 16);
        v26 = *(_QWORD *)(v20 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1BC125AD8(v26 > 1, v27 + 1, 1);
          v20 = v59;
        }
        ++v19;
        *(_QWORD *)(v20 + 16) = v27 + 1;
        v28 = v20
            + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
            + *(_QWORD *)(v3 + 72) * v27;
        v2 = v57;
        (*(void (**)(unint64_t, char **, uint64_t))(v3 + 32))(v28, v10, v57);
      }
      while (v55 != v19);
      swift_bridgeObjectRelease();
      v1 = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
      v20 = MEMORY[0x1E0DEE9D8];
    }
    v59 = v20;
    v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0];
    sub_1BC0E7998(0, &qword_1EF3FA278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC127D04();
    sub_1BC0E519C(&qword_1EF3FA288, v32, MEMORY[0x1E0CAEAD8]);
    v33 = sub_1BC2B4820();
    swift_bridgeObjectRelease();
    v53 = *(_QWORD *)(v33 + 16);
    if (v53)
    {
      v15 = 0;
      v34 = *(unsigned __int8 *)(v3 + 80);
      v51 = v33;
      v52 = v33 + ((v34 + 32) & ~v34);
      v14 = (uint64_t)&selRef_tertiarySystemBackgroundColor;
      v17 = v49;
      while (v15 < *(_QWORD *)(v33 + 16))
      {
        (*(void (**)(unint64_t, unint64_t, unint64_t))(v3 + 16))(v17, v52 + *(_QWORD *)(v3 + 72) * v15, v2);
        v35 = *(void (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v3 + 56);
        v35(v17, 0, 1, v2);
        if ((*(unsigned int (**)(unint64_t, uint64_t, unint64_t))(v3 + 48))(v17, 1, v2) == 1)
          goto LABEL_40;
        v55 = v15;
        (*(void (**)(char *, unint64_t, unint64_t))(v3 + 32))(v56, v17, v2);
        v36 = objc_msgSend(v1, *(SEL *)(v14 + 344));
        v15 = sub_1BC2B458C();

        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          v37 = sub_1BC2B52D0();
          v50 = v35;
          if (v37)
          {
LABEL_24:
            v1 = (void *)(v15 & 0xC000000000000001);
            v2 = 4;
            while (1)
            {
              v10 = (char **)(v2 - 4);
              v38 = v1 ? (id)MEMORY[0x1BCCEE950](v2 - 4, v15) : *(id *)(v15 + 8 * v2);
              v17 = (unint64_t)v38;
              v39 = v2 - 3;
              if (__OFADD__(v10, 1))
                break;
              v40 = objc_msgSend(v38, sel_startTimeComponent);
              sub_1BC2B2078();

              v14 = MEMORY[0x1BCCEB7E8](v6, v56);
              v10 = *(char ***)(v3 + 8);
              ((void (*)(char *, uint64_t))v10)(v6, v57);
              if ((v14 & 1) != 0)
              {
                swift_bridgeObjectRelease_n();
                v41 = (id)v17;
                MEMORY[0x1BCCEDCF0]();
                if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1BC2B45C8();
                sub_1BC2B4604();
                sub_1BC2B45A4();

                goto LABEL_35;
              }

              ++v2;
              if (v39 == v37)
              {
                swift_bridgeObjectRelease_n();
LABEL_35:
                v1 = v48;
                v17 = v49;
                v2 = v57;
                v14 = 0x1E74CB000;
                goto LABEL_19;
              }
            }
            __break(1u);
            goto LABEL_55;
          }
        }
        else
        {
          v37 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          v50 = v35;
          if (v37)
            goto LABEL_24;
        }
        swift_bridgeObjectRelease_n();
        v10 = *(char ***)(v3 + 8);
LABEL_19:
        v15 = v55 + 1;
        ((void (*)(char *, unint64_t))v10)(v56, v2);
        v33 = v51;
        if (v15 == v53)
        {
          v50(v17, 1, 1, v2);
          goto LABEL_40;
        }
      }
      goto LABEL_56;
    }
    v14 = 0x1E74CB000;
    v17 = v49;
    (*(void (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v3 + 56))(v49, 1, 1, v2);
LABEL_40:
    swift_bridgeObjectRelease();
    v42 = objc_msgSend(v1, *(SEL *)(v14 + 344));
    v43 = sub_1BC2B458C();

    if (!(v43 >> 62))
    {
      v2 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v2)
        break;
      goto LABEL_42;
    }
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v2)
      break;
LABEL_42:
    v15 = sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    v3 = v43 & 0xC000000000000001;
    v57 = v43 & 0xFFFFFFFFFFFFFF8;
    v10 = &selRef_tertiarySystemBackgroundColor;
    while (!__OFSUB__(v2--, 1))
    {
      if (v3)
      {
        v45 = (char *)MEMORY[0x1BCCEE950](v2, v43);
      }
      else
      {
        if ((v2 & 0x8000000000000000) != 0)
          goto LABEL_57;
        if (v2 >= *(_QWORD *)(v57 + 16))
          goto LABEL_58;
        v45 = (char *)*(id *)(v43 + 32 + 8 * v2);
      }
      v6 = v45;
      v14 = (uint64_t)objc_msgSend(v45, sel_dose);
      v1 = (void *)sub_1BC2B4D6C();
      if (v14)
      {
        v14 = (uint64_t)(id)v14;
        v17 = sub_1BC2B4D84();

        if ((v17 & 1) != 0)
        {
          v46 = (void *)sub_1BC1276C8(v2, v43);
          goto LABEL_62;
        }
      }
      else
      {

      }
      if (!v2)
        goto LABEL_61;
    }
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    v18 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
LABEL_61:
  v46 = 0;
LABEL_62:
  swift_bridgeObjectRelease();
  if (v46)
  {
    v18 = v46;
    MEMORY[0x1BCCEDCF0]();
    if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_64:
      sub_1BC2B4604();
      sub_1BC2B45A4();

      return v58;
    }
LABEL_67:
    sub_1BC2B45C8();
    goto LABEL_64;
  }
  return v58;
}

uint64_t sub_1BC122D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _QWORD v46[4];
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v54 = a2;
  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0E740, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)v46 - v9;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], v7);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v46 - v11;
  v53 = sub_1BC2B23F0();
  v12 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1BC2B2594();
  v15 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC2B20FC();
  v48 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v47 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v46 - v21;
  v23 = sub_1BC2B2084();
  if ((v24 & 1) != 0)
  {
    v41 = v12;
    v42 = v53;
    sub_1BC2B39A4();
    v43 = sub_1BC2B39D4();
    v44 = sub_1BC2B48C8();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_1BC0DC000, v43, v44, "Cannot infer date from timeComponents; hour is nil.", v45, 2u);
      MEMORY[0x1BCCEF3A0](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v54, 1, 1, v42);
  }
  else
  {
    v46[0] = a1;
    v46[2] = v23;
    v25 = sub_1BC2B20B4();
    if ((v26 & 1) != 0)
      v27 = 0;
    else
      v27 = v25;
    v46[1] = v27;
    sub_1BC2B2564();
    sub_1BC0E7998(0, &qword_1EDA0EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v28 = sub_1BC2B257C();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BC2B92D0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x1E0CB1158], v28);
    sub_1BC14A174(v31);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v32 = objc_msgSend((id)v46[3], sel_startDateTime);
    sub_1BC2B23A8();

    sub_1BC2B24D4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v53);
    v33 = *(void (**)(char *, uint64_t))(v15 + 8);
    v34 = v50;
    v33(v17, v50);
    v35 = v51;
    sub_1BC2B2564();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v35, 0, 1, v34);
    sub_1BC2B20F0();
    sub_1BC2B20A8();
    v36 = v47;
    sub_1BC2B20E4();
    sub_1BC2B2564();
    sub_1BC2B2534();
    v33(v17, v34);
    v37 = *(void (**)(char *, uint64_t))(v48 + 8);
    v38 = v36;
    v39 = v49;
    v37(v38, v49);
    return ((uint64_t (*)(char *, uint64_t))v37)(v22, v39);
  }
}

uint64_t HKMedicationSchedule.makeScheduleItems()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  NSObject *v52;
  NSObject *v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  NSObject *v61;
  NSObject *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  NSObject *v74;
  unint64_t v75;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v63 - v7;
  v9 = sub_1BC2B2594();
  v68 = *(NSObject **)(v9 - 8);
  v69 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B38E4();
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v63 - v16;
  switch((unint64_t)objc_msgSend(v1, sel_scheduleType))
  {
    case 0uLL:
      goto LABEL_42;
    case 1uLL:
    case 2uLL:
    case 4uLL:
      sub_1BC0E2130(0, &qword_1EF3F91E8, (uint64_t)&type metadata for ScheduleListItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BC2B92D0;
      *(_QWORD *)(v18 + 32) = sub_1BC1382C0();
      *(_QWORD *)(v18 + 40) = v19;
      *(_BYTE *)(v18 + 48) = 0;
      return v18;
    case 3uLL:
      v70 = xmmword_1BC2B92D0;
      v21 = objc_msgSend(v1, sel_timeIntervals);
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
      v3 = sub_1BC2B458C();

      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        v6 = (char *)sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (v6)
          goto LABEL_6;
      }
      else
      {
        v6 = *(char **)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v6)
        {
LABEL_6:
          if ((v3 & 0xC000000000000001) != 0)
          {
            v22 = (id)MEMORY[0x1BCCEE950](0, v3);
LABEL_9:
            v23 = v22;
            swift_bridgeObjectRelease();
            v24 = objc_msgSend(v23, sel_daysOfWeek);

            sub_1BC218774((uint64_t)v24, v17);
            sub_1BC2B2564();
            v25 = sub_1BC2B38C0();
            v27 = v26;
            ((void (*)(char *, uint64_t))v68[1].isa)(v11, v69);
            (*(void (**)(char *, NSObject *))(v66 + 8))(v17, v67);
            if (v27)
            {
              v71 = v25;
              v72 = v27;
LABEL_33:
              swift_bridgeObjectRetain();
              v18 = (uint64_t)sub_1BC0F9CC0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
              v42 = *(_QWORD *)(v18 + 16);
              v41 = *(_QWORD *)(v18 + 24);
              if (v42 >= v41 >> 1)
                v18 = (uint64_t)sub_1BC0F9CC0((_QWORD *)(v41 > 1), v42 + 1, 1, (_QWORD *)v18);
              *(_QWORD *)(v18 + 16) = v42 + 1;
              v43 = v18 + 24 * v42;
              *(_QWORD *)(v43 + 32) = v25;
              *(_QWORD *)(v43 + 40) = v27;
              *(_BYTE *)(v43 + 48) = 0;
              swift_arrayDestroy();
              return v18;
            }
LABEL_32:
            v27 = 0xE000000000000000;
            v71 = 0;
            v72 = 0xE000000000000000;
            swift_bridgeObjectRelease();
            v25 = 0;
            goto LABEL_33;
          }
          if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v22 = *(id *)(v3 + 32);
            goto LABEL_9;
          }
LABEL_41:
          __break(1u);
LABEL_42:
          v69 = v2;
          sub_1BC2B39A4();
          v44 = v1;
          v45 = sub_1BC2B39D4();
          v46 = sub_1BC2B48C8();
          v68 = v45;
          if (os_log_type_enabled(v45, v46))
          {
            v47 = swift_slowAlloc();
            v66 = swift_slowAlloc();
            v67 = swift_slowAlloc();
            v74 = v67;
            *(_DWORD *)v47 = 136315394;
            v48 = sub_1BC2B54F8();
            v73 = (id)sub_1BC12540C(v48, v49, (uint64_t *)&v74);
            sub_1BC2B4FD0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v47 + 12) = 2112;
            v73 = v44;
            v50 = v44;
            sub_1BC2B4FD0();
            v51 = v66;
            *(_QWORD *)v66 = v44;

            v52 = v68;
            _os_log_impl(&dword_1BC0DC000, v68, v46, "%s Unexpectedly found schedule with null type. Schedule: %@", (uint8_t *)v47, 0x16u);
            sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            swift_arrayDestroy();
            MEMORY[0x1BCCEF3A0](v51, -1, -1);
            v53 = v67;
            swift_arrayDestroy();
            MEMORY[0x1BCCEF3A0](v53, -1, -1);
            MEMORY[0x1BCCEF3A0](v47, -1, -1);

          }
          else
          {

          }
          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v69);
LABEL_48:
          v74 = 0;
          v75 = 0xE000000000000000;
          sub_1BC2B51BC();
          swift_bridgeObjectRelease();
          v74 = 0xD00000000000001CLL;
          v75 = 0x80000001BC2C9D80;
          v73 = objc_msgSend(v1, sel_scheduleType);
          sub_1BC2B539C();
          sub_1BC2B44FC();
          swift_bridgeObjectRelease();
          sub_1BC2B44FC();
LABEL_51:
          sub_1BC2B52B8();
          __break(1u);
          JUMPOUT(0x1BC123D3CLL);
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 5uLL:
      v28 = objc_msgSend(v1, sel_timeIntervals);
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
      v1 = (void *)sub_1BC2B458C();

      v3 = sub_1BC2B45EC();
      swift_bridgeObjectRelease();
      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        v29 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (v29)
          goto LABEL_13;
      }
      else
      {
        v29 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v29)
        {
LABEL_13:
          v74 = MEMORY[0x1E0DEE9D8];
          v6 = (char *)&v74;
          sub_1BC125AA0(0, v29 & ~(v29 >> 63), 0);
          if ((v29 & 0x8000000000000000) == 0)
          {
            v30 = 0;
            v64 = v3 & 0xC000000000000001;
            v65 = v3;
            do
            {
              if (v64)
                v31 = (id)MEMORY[0x1BCCEE950](v30, v3);
              else
                v31 = *(id *)(v3 + 8 * v30 + 32);
              v32 = v31;
              sub_1BC218774((uint64_t)objc_msgSend(v31, sel_daysOfWeek), v15);
              sub_1BC2B2564();
              v33 = sub_1BC2B38C0();
              v35 = v34;
              ((void (*)(char *, uint64_t))v68[1].isa)(v11, v69);
              (*(void (**)(char *, NSObject *))(v66 + 8))(v15, v67);

              if (v35)
                v36 = v33;
              else
                v36 = 0;
              if (v35)
                v37 = v35;
              else
                v37 = 0xE000000000000000;
              v18 = (uint64_t)v74;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1BC125AA0(0, *(_QWORD *)(v18 + 16) + 1, 1);
                v18 = (uint64_t)v74;
              }
              v39 = *(_QWORD *)(v18 + 16);
              v38 = *(_QWORD *)(v18 + 24);
              if (v39 >= v38 >> 1)
              {
                sub_1BC125AA0(v38 > 1, v39 + 1, 1);
                v18 = (uint64_t)v74;
              }
              ++v30;
              *(_QWORD *)(v18 + 16) = v39 + 1;
              v40 = v18 + 24 * v39;
              *(_QWORD *)(v40 + 32) = v36;
              *(_QWORD *)(v40 + 40) = v37;
              *(_BYTE *)(v40 + 48) = 0;
              v3 = v65;
            }
            while (v29 != v30);
            swift_bridgeObjectRelease();
            return v18;
          }
          __break(1u);
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    case 6uLL:
      v69 = v2;
      sub_1BC2B39A4();
      v54 = v1;
      v55 = sub_1BC2B39D4();
      v56 = sub_1BC2B48C8();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = swift_slowAlloc();
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v74 = v68;
        *(_DWORD *)v57 = 136315394;
        v58 = sub_1BC2B54F8();
        v73 = (id)sub_1BC12540C(v58, v59, (uint64_t *)&v74);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 12) = 2112;
        v73 = v54;
        v60 = v54;
        sub_1BC2B4FD0();
        v61 = v67;
        v67->isa = (Class)v54;

        _os_log_impl(&dword_1BC0DC000, v55, v56, "%s Unexpectedly found schedule with deprecated alternating daily type. Schedule: %@", (uint8_t *)v57, 0x16u);
        sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v61, -1, -1);
        v62 = v68;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v62, -1, -1);
        MEMORY[0x1BCCEF3A0](v57, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v69);
      v74 = 0;
      v75 = 0xE000000000000000;
      sub_1BC2B51BC();
      sub_1BC2B44FC();
      v73 = objc_msgSend(v54, sel_scheduleType);
      sub_1BC2B539C();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      sub_1BC2B44FC();
      goto LABEL_51;
    case 7uLL:
    case 8uLL:
      return _sSo20HKMedicationScheduleC19HealthMedicationsUIE024unittesting_makeCyclicalB5ItemsSayAC0B8ListItemOGyF_0();
    default:
      goto LABEL_48;
  }
}

uint64_t sub_1BC123D60@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_1BC2B38E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC218774((uint64_t)objc_msgSend(*a1, sel_daysOfWeek), v7);
  v8 = sub_1BC2B389C();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  return result;
}

uint64_t _sSo20HKMedicationScheduleC19HealthMedicationsUIE024unittesting_makeCyclicalB5ItemsSayAC0B8ListItemOGyF_0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  id v33;
  unint64_t *v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  Swift::String v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[8];
  uint64_t v73;
  unsigned __int8 v74;

  v1 = v0;
  v2 = sub_1BC2B2594();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - v7;
  v70 = type metadata accessor for CycleData();
  v9 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v5);
  v12 = MEMORY[0x1E0C80A78](v11);
  v66 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v65 - v14;
  v16 = sub_1BC2B23F0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v65 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v65 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v65 - v23;
  v67 = sub_1BC1382C0();
  v71 = v25;
  v26 = objc_msgSend(v0, sel_endDateTime);
  v69 = v17;
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    v30 = v16;
    goto LABEL_6;
  }
  v27 = v26;
  sub_1BC2B23A8();

  v28 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v28(v15, v22, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  v30 = v16;
  if (v29 == 1)
  {
LABEL_6:
    sub_1BC0F2444((uint64_t)v15, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    goto LABEL_7;
  }
  v28(v24, v15, v16);
  sub_1BC2B2330();
  sub_1BC0E519C(qword_1EDA0EA98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v31 = sub_1BC2B4418();
  v32 = *(void (**)(char *, uint64_t))(v69 + 8);
  v32(v22, v16);
  if ((v31 & 1) == 0)
  {
    sub_1BC0E2130(0, &qword_1EF3F91E8, (uint64_t)&type metadata for ScheduleListItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1BC2B92D0;
    v44 = v71;
    *(_QWORD *)(v39 + 32) = v67;
    *(_QWORD *)(v39 + 40) = v44;
    *(_BYTE *)(v39 + 48) = 0;
    v32(v24, v16);
    return v39;
  }
  v32(v24, v16);
LABEL_7:
  v33 = v1;
  sub_1BC2B251C();
  sub_1BC20BBE8(v33, (uint64_t)v4, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v70) == 1)
  {
    swift_bridgeObjectRelease();
    v34 = &qword_1EF3F9D40;
    v35 = type metadata accessor for CycleData;
    v36 = (uint64_t)v8;
LABEL_9:
    sub_1BC0F2444(v36, v34, (uint64_t (*)(uint64_t))v35);
    return MEMORY[0x1E0DEE9D8];
  }
  v37 = v68;
  sub_1BC0F1B94((uint64_t)v8, v68, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
  CycleData.currentPhase.getter((uint64_t)v72);
  v38 = v74;
  if (v74 == 255)
  {
    sub_1BC0E8594(v37, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v41 = v73;
  v42 = v66;
  CycleData.nextCycleChangeDate.getter(v66);
  v43 = v69;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v42, 1, v30) == 1)
  {
    sub_1BC0E8594(v37, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
    swift_bridgeObjectRelease();
    v34 = (unint64_t *)&qword_1EDA0E710;
    v35 = MEMORY[0x1E0CB0870];
    v36 = v42;
    goto LABEL_9;
  }
  v45 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v65, v42, v30);
  v46 = CycleData.localizeCurrentPhaseDescription.getter();
  if (!v47)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v30);
    sub_1BC0E8594(v37, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
    return MEMORY[0x1E0DEE9D8];
  }
  v48 = v46;
  v49 = v47;
  if ((v38 & 1) != 0)
  {
    sub_1BC0E2130(0, &qword_1EF3F91E8, (uint64_t)&type metadata for ScheduleListItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1BC2B9600;
    v59 = v71;
    *(_QWORD *)(v39 + 32) = v67;
    *(_QWORD *)(v39 + 40) = v59;
    *(_BYTE *)(v39 + 48) = 0;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v60 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v61 = sub_1BC2B2144();
    v63 = v62;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v39 + 56) = v61;
    *(_QWORD *)(v39 + 64) = v63;
    *(_BYTE *)(v39 + 72) = 1;
    *(_QWORD *)(v39 + 80) = v48;
    *(_QWORD *)(v39 + 88) = v49;
    *(_BYTE *)(v39 + 96) = 1;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v65, v30);
  }
  else
  {
    sub_1BC0E2130(0, &qword_1EF3F91E8, (uint64_t)&type metadata for ScheduleListItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    if (v41)
    {
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1BC2B9600;
      v50 = v71;
      *(_QWORD *)(v39 + 32) = v67;
      *(_QWORD *)(v39 + 40) = v50;
      *(_BYTE *)(v39 + 48) = 0;
      *(_QWORD *)(v39 + 56) = v48;
      *(_QWORD *)(v39 + 64) = v49;
      *(_BYTE *)(v39 + 72) = 1;
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v51 = (void *)qword_1EDA0FEF8;
      sub_1BC127B70(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_1BC2B92D0;
      v53 = v51;
      swift_bridgeObjectRetain();
      v54 = Date.formattedWithYearIfDifferent()();
      v55 = v45;
      *(_QWORD *)(v52 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v52 + 64) = sub_1BC0F2748();
      *(Swift::String *)(v52 + 32) = v54;
      sub_1BC2B2144();
      v56 = sub_1BC2B443C();
      v58 = v57;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 80) = v56;
      *(_QWORD *)(v39 + 88) = v58;
      *(_BYTE *)(v39 + 96) = 1;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v30);
    }
    else
    {
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1BC2B92C0;
      v64 = v71;
      *(_QWORD *)(v39 + 32) = v67;
      *(_QWORD *)(v39 + 40) = v64;
      *(_BYTE *)(v39 + 48) = 0;
      *(_QWORD *)(v39 + 56) = v48;
      *(_QWORD *)(v39 + 64) = v49;
      *(_BYTE *)(v39 + 72) = 1;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v30);
    }
  }
  sub_1BC0E8594(v37, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
  return v39;
}

uint64_t HKMedicationSchedule.makeItems()()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  if ((objc_msgSend(v0, sel_isUnavailable) & 1) != 0)
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v1 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B2144();
    v4 = v3;
    swift_bridgeObjectRelease();

    sub_1BC0E2130(0, &qword_1EDA0FE50, (uint64_t)&type metadata for MedicationCellItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BC2B92D0;
    v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor, 0xE000000000000000);
    v7 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    sub_1BC2B44FC();
    v8 = v5;
    *(_BYTE *)(v5 + 32) = 0;
    *(_QWORD *)(v5 + 40) = v6;
    *(_QWORD *)(v5 + 48) = v2;
    *(_QWORD *)(v5 + 56) = v4;
    *(_QWORD *)(v5 + 64) = 0xD00000000000001BLL;
    *(_QWORD *)(v5 + 72) = 0x80000001BC2C9E10;
    *(_QWORD *)(v5 + 80) = 0;
    *(_QWORD *)(v5 + 88) = 0xE000000000000000;
  }
  else
  {
    v9 = HKMedicationSchedule.makeScheduleItems()();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v28 = MEMORY[0x1E0DEE9D8];
      sub_1BC125ABC(0, v10, 0);
      v8 = v28;
      v11 = (unsigned __int8 *)(v9 + 48);
      v24 = (id)objc_opt_self();
      do
      {
        v12 = *((_QWORD *)v11 - 2);
        v13 = *((_QWORD *)v11 - 1);
        v14 = *v11;
        v15 = objc_msgSend(v24, sel_secondaryLabelColor, v23);
        v16 = 0x7261646E656C6163;
        if (v14)
          v16 = 0;
        v26 = v16;
        v27 = v15;
        v17 = 0xE800000000000000;
        if (v14)
          v17 = 0;
        v25 = v17;
        sub_1BC127A5C();
        if (qword_1EDA0FEE8 != -1)
          swift_once();
        v18 = (id)qword_1EDA0FEF8;
        swift_bridgeObjectRetain();
        v23 = 0xE000000000000000;
        sub_1BC2B2144();
        swift_bridgeObjectRelease();

        sub_1BC2B44FC();
        swift_bridgeObjectRelease();
        sub_1BC2B44FC();
        sub_1BC127A5C();
        sub_1BC2B44FC();
        sub_1BC127A64();
        v20 = *(_QWORD *)(v28 + 16);
        v19 = *(_QWORD *)(v28 + 24);
        if (v20 >= v19 >> 1)
          sub_1BC125ABC(v19 > 1, v20 + 1, 1);
        *(_QWORD *)(v28 + 16) = v20 + 1;
        v21 = v28 + (v20 << 6);
        *(_BYTE *)(v21 + 32) = 0;
        v11 += 24;
        *(_QWORD *)(v21 + 40) = v27;
        *(_QWORD *)(v21 + 48) = v12;
        *(_QWORD *)(v21 + 56) = v13;
        *(_QWORD *)(v21 + 64) = v26;
        *(_QWORD *)(v21 + 72) = v25;
        *(_QWORD *)(v21 + 80) = 0;
        *(_QWORD *)(v21 + 88) = 0xE000000000000000;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return v8;
}

_QWORD *sub_1BC124A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t i;
  unint64_t v26;
  _QWORD *v27;
  id v29;
  void *v30;
  double v31;
  double v32;
  id v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  void (*v37)(char *, uint64_t, char *);
  char *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, char *);
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  char *v62;
  uint64_t (*v63)(uint64_t);
  char *v64;
  uint64_t v65;
  char v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  __int128 v86;
  char *v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;

  v0 = sub_1BC2B38E4();
  v110 = *(_QWORD *)(v0 - 8);
  v111 = v0;
  v1 = MEMORY[0x1E0C80A78](v0);
  v82 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v98 = (char *)&v82 - v4;
  MEMORY[0x1E0C80A78](v3);
  v109 = (char *)&v82 - v5;
  v108 = type metadata accessor for WeekdaysAndDosages(0);
  v88 = *(_QWORD *)(v108 - 8);
  v6 = MEMORY[0x1E0C80A78](v108);
  v89 = (uint64_t *)((char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v107 = (uint64_t)&v82 - v8;
  v93 = sub_1BC2B2438();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B20FC();
  v103 = *(_QWORD *)(v10 - 8);
  v104 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC2B2594();
  v102 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v82 - v17;
  v83 = sub_1BC2B23F0();
  v19 = *(_QWORD **)(v83 - 8);
  v20 = MEMORY[0x1E0C80A78](v83);
  v87 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v82 - v22;
  v24 = sub_1BC122554();
  v95 = v24;
  if (v24 >> 62)
    goto LABEL_40;
  for (i = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1BC2B52D0())
  {
    v99 = v23;
    v105 = v19;
    v101 = v18;
    v26 = 0;
    v23 = (char *)v95;
    v106 = v95 & 0xC000000000000001;
    v97 = v95 & 0xFFFFFFFFFFFFFF8;
    v96 = v95 + 32;
    v113 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v86 = xmmword_1BC2B92D0;
    v18 = (char *)v83;
    v85 = v12;
    v84 = v13;
    v90 = v15;
    v100 = i;
    while (1)
    {
      if (v106)
      {
        v27 = (_QWORD *)MEMORY[0x1BCCEE950](v26, v23);
      }
      else
      {
        if (v26 >= *(_QWORD *)(v97 + 16))
          goto LABEL_38;
        v27 = *(id *)(v96 + 8 * v26);
      }
      v19 = v27;
      if (__OFADD__(v26++, 1))
        break;
      v29 = objc_msgSend(v27, sel_dose);
      if (v29 && (v30 = v29, objc_msgSend(v29, sel_doubleValue), v32 = v31, v30, v32 == 0.0))
      {

      }
      else
      {
        sub_1BC2B2564();
        v33 = objc_msgSend(v19, sel_startTimeComponent);
        sub_1BC2B2078();

        v34 = v18;
        v35 = (uint64_t)v101;
        sub_1BC2B2534();
        (*(void (**)(char *, uint64_t))(v103 + 8))(v12, v104);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v15, v13);
        v36 = v105;
        if (((unsigned int (*)(uint64_t, uint64_t, char *))v105[6])(v35, 1, v34) == 1)
        {

          sub_1BC0F2444(v35, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
          v18 = v34;
LABEL_24:
          i = v100;
          goto LABEL_5;
        }
        v37 = (void (*)(char *, uint64_t, char *))v36[4];
        v38 = v99;
        v37(v99, v35, v34);
        v39 = objc_msgSend(v19, sel_dose);
        v18 = v34;
        if (!v39)
        {
          ((void (*)(char *, char *))v36[1])(v38, v34);

          v15 = v90;
          v23 = (char *)v95;
          goto LABEL_24;
        }
        v40 = v39;
        v112 = v19;
        objc_msgSend(v39, sel_doubleValue);
        v42 = v41;

        sub_1BC127CB0(0);
        v43 = type metadata accessor for Dosage();
        v44 = *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80);
        v45 = (v44 + 32) & ~v44;
        v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v86;
        v94 = v46;
        v47 = v46 + v45;
        v48 = (void (*)(char *, char *, char *))v36[2];
        v49 = v87;
        v48(v87, v38, v34);
        v50 = v91;
        sub_1BC2B242C();
        (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v47, v50, v93);
        v37((char *)(v47 + *(int *)(v43 + 20)), (uint64_t)v49, v34);
        *(_QWORD *)(v47 + *(int *)(v43 + 24)) = v42;
        v12 = (char *)v113[2];
        v51 = v98;
        if (v12)
        {
          v52 = v88;
          v23 = (char *)((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
          v53 = swift_bridgeObjectRetain();
          v15 = 0;
          v54 = *(_QWORD *)(v52 + 72);
          while (1)
          {
            v55 = v107;
            sub_1BC127D9C((uint64_t)&v23[v53], v107);
            v56 = objc_msgSend(v112, sel_daysOfWeek);
            v57 = v109;
            sub_1BC218774((uint64_t)v56, v109);
            sub_1BC0E519C(&qword_1EF3FA2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC10]);
            v58 = v111;
            sub_1BC2B4568();
            sub_1BC2B4568();
            v13 = v114;
            v59 = v115;
            (*(void (**)(char *, uint64_t))(v110 + 8))(v57, v58);
            sub_1BC0E8594(v55, type metadata accessor for WeekdaysAndDosages);
            if (v59 == v13)
              break;
            ++v15;
            v23 += v54;
            v53 = (uint64_t)v113;
            if (v12 == v15)
            {
              swift_bridgeObjectRelease();
              v51 = v98;
              v18 = (char *)v83;
              goto LABEL_21;
            }
          }
          v19 = v113;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v19 = (_QWORD *)sub_1BC134FE4((unint64_t)v19);
          v18 = (char *)v83;
          i = v100;
          if ((unint64_t)v15 >= v19[2])
            goto LABEL_39;
          v113 = v19;
          sub_1BC130FA8(v94);

          ((void (*)(char *, char *))v105[1])(v99, v18);
          v12 = v85;
          v13 = v84;
          v15 = v90;
        }
        else
        {
LABEL_21:
          v60 = v112;
          v61 = objc_msgSend(v112, sel_daysOfWeek);
          v62 = v109;
          sub_1BC218774((uint64_t)v61, v109);
          v63 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0];
          sub_1BC0E519C(&qword_1EF3FA2A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC18]);
          v64 = v82;
          v65 = v111;
          sub_1BC2B5090();
          sub_1BC0E519C(&qword_1EDA0FAB8, v63, MEMORY[0x1E0D2CC08]);
          v66 = sub_1BC2B4424();
          v67 = *(void (**)(char *, uint64_t))(v110 + 8);
          v67(v64, v65);
          v67(v62, v65);
          if ((v66 & 1) != 0)
            sub_1BC2B3854();
          else
            sub_1BC218774((uint64_t)objc_msgSend(v60, sel_daysOfWeek), v51);
          i = v100;
          v68 = v109;
          v69 = v110;
          v70 = v111;
          (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v109, v51, v111);
          v71 = v91;
          sub_1BC2B242C();
          v72 = sub_1BC2B23FC();
          v74 = v73;
          (*(void (**)(char *, uint64_t))(v92 + 8))(v71, v93);
          v75 = (char *)v89;
          *v89 = v72;
          *((_QWORD *)v75 + 1) = v74;
          v76 = v108;
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v75[*(int *)(v108 + 20)], v68, v70);
          *(_QWORD *)&v75[*(int *)(v76 + 24)] = v94;
          v77 = (unint64_t)v113;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v77 = sub_1BC0F9DF4(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
          v15 = v90;
          v79 = *(_QWORD *)(v77 + 16);
          v78 = *(_QWORD *)(v77 + 24);
          v19 = v98;
          if (v79 >= v78 >> 1)
            v77 = sub_1BC0F9DF4(v78 > 1, v79 + 1, 1, v77);
          *(_QWORD *)(v77 + 16) = v79 + 1;
          v80 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
          v113 = (_QWORD *)v77;
          sub_1BC0F1B94((uint64_t)v89, v77 + v80 + *(_QWORD *)(v88 + 72) * v79, type metadata accessor for WeekdaysAndDosages);

          v67((char *)v19, v111);
          ((void (*)(char *, char *))v105[1])(v99, v18);
          v12 = v85;
          v13 = v84;
        }
        v23 = (char *)v95;
      }
LABEL_5:
      if (v26 == i)
      {
        swift_bridgeObjectRelease();
        return v113;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    ;
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC12540C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BC1254DC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BC127E34((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BC127E34((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1BC1254DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BC2B4FDC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BC125694(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BC2B51EC();
  if (!v8)
  {
    sub_1BC2B52AC();
    __break(1u);
LABEL_17:
    result = sub_1BC2B5318();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BC125694(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BC125728(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC125914(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BC125914(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BC125728(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BC12589C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BC2B51C8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BC2B52AC();
      __break(1u);
LABEL_10:
      v2 = sub_1BC2B4508();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BC2B5318();
    __break(1u);
LABEL_14:
    result = sub_1BC2B52AC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1BC12589C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC0E2130(0, &qword_1EF3FA2E0, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BC125914(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EF3FA2E0, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC125A74(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127DE0, type metadata accessor for WeekdaysAndDosages);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125AA0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC125F00(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125ABC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC12608C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125AD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127D64, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAEAB0]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125B04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC127024(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125B38(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC1263E8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125B54(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC126558(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125B70(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC1266D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125B8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127E18, (uint64_t (*)(_QWORD))sub_1BC0FB470);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125BB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127C94, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125BE4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127CCC, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleIntervalItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125C10(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127D80, type metadata accessor for MedicationSearchItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125C3C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC127024(a1, a2, a3, (_QWORD *)*v3, &qword_1EF3FA2F0, &qword_1EF3FA2F8);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125C70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127E70, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2B350]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125C9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126858(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125CB8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC126A0C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125CD4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126B88(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125CF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC127024(a1, a2, a3, (_QWORD *)*v3, &qword_1EF3FA2B0, (unint64_t *)&qword_1EF3FA2B8);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125D24(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127C78, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2C9E0]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125D50(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC126D20(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125D6C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126E8C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125D88(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC127024(a1, a2, a3, (_QWORD *)*v3, &qword_1EF3FA2D0, &qword_1EF3FA2D8);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125DBC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC1271E8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125DD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127DFC, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2C8C8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125E04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127CB0, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125E30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC127380(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC125E4C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BC11D238, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2B090]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125E78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC127518(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125E94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127BE8, (uint64_t (*)(_QWORD))sub_1BC127C04);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125EC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC126208(a1, a2, a3, (_QWORD *)*v3, sub_1BC127BCC, (uint64_t (*)(_QWORD))type metadata accessor for MedicationChartCodableData);
  *v3 = result;
  return result;
}

uint64_t sub_1BC125EEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC126208(a1, a2, a3, a4, sub_1BC127DE0, type metadata accessor for WeekdaysAndDosages);
}

uint64_t sub_1BC125F00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EF3F91E8, (uint64_t)&type metadata for ScheduleListItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC12608C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EDA0FE50, (uint64_t)&type metadata for MedicationCellItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC126208(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1263E8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EF3FA2C8, (uint64_t)&type metadata for FrequencyInterval, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC126558(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91D8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1266D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E7998(0, &qword_1EF3FA250, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC126844(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC126208(a1, a2, a3, a4, sub_1BC127CE8, (uint64_t (*)(_QWORD))sub_1BC118890);
}

uint64_t sub_1BC126858(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EDA0FE40, (uint64_t)&type metadata for MedicationDoseLogMedicationItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 < a4 || v12 >= v13 + 40 * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC126A0C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EF3F9198, (uint64_t)&type metadata for ScheduledDoseIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC126B88(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E7998(0, &qword_1EF3F91A8, (uint64_t (*)(uint64_t))sub_1BC0FC2C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BC0FC2C0(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC126D20(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EF3FA260, (uint64_t)&type metadata for PauseUsePeriod, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC126E8C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0FC3D4();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91B8, (uint64_t)&type metadata for LoggableDose, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC127024(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    sub_1BC127B70(0, a5, a6);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_1BC0E8778(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1271E8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA630, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC12736C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC126208(a1, a2, a3, a4, sub_1BC127CB0, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
}

uint64_t sub_1BC127380(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E2130(0, &qword_1EF3FA258, (uint64_t)&type metadata for ScheduleTypeOptionItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8])
      memmove(v12, v13, 88 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC127518(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC127B70(0, (unint64_t *)&qword_1EF400100, (unint64_t *)&qword_1EF3F8998);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BC0E8778(0, (unint64_t *)&qword_1EF3F8998);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

unint64_t sub_1BC1276C8(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return MEMORY[0x1BCCEE950]();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BC127720(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC12781C(v6, a2, a3);
  return sub_1BC0F7830;
}

uint64_t (*sub_1BC127774(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC127888(v6, a2, a3);
  return sub_1BC0F7830;
}

uint64_t (*sub_1BC1277C8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC1278FC(v6, a2, a3);
  return sub_1BC0F7830;
}

uint64_t (*sub_1BC12781C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCEE950](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s19HealthMedicationsUI31MedicationInformationDataSourceC14DisplayContextOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1BC127888(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCEE950](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for MedicationInformationDataSource.DisplayContext;
  }
  __break(1u);
  return result;
}

void destroy for MedicationInformationDataSource.DisplayContext(id *a1)
{

}

uint64_t (*sub_1BC1278FC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCEE950](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1BC127968;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC127968()
{
  return swift_release();
}

uint64_t _s19HealthMedicationsUI16ScheduleListItemO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) != 0)
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        v7 = sub_1BC2B53CC();
        goto LABEL_17;
      }
LABEL_16:
      v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5)
      goto LABEL_15;
    goto LABEL_16;
  }
  v7 = 0;
LABEL_17:
  sub_1BC127A5C();
  sub_1BC127A5C();
  sub_1BC127A64();
  sub_1BC127A64();
  return v7 & 1;
}

uint64_t sub_1BC127A5C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC127A64()
{
  return swift_bridgeObjectRelease();
}

uint64_t destroy for ScheduleListItem()
{
  return sub_1BC127A64();
}

uint64_t _s19HealthMedicationsUI16ScheduleListItemOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1BC127A5C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ScheduleListItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1BC127A5C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BC127A64();
  return a1;
}

uint64_t assignWithTake for ScheduleListItem(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BC127A64();
  return a1;
}

ValueMetadata *type metadata accessor for ScheduleListItem()
{
  return &type metadata for ScheduleListItem;
}

void sub_1BC127B70(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC0E8778(255, a3);
    v4 = sub_1BC2B53A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC127BCC(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EDA0EA30, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127BE8(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA238, (uint64_t (*)(uint64_t))sub_1BC127C04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127C04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9118)
  {
    sub_1BC106304(255, (unint64_t *)&qword_1EF3F9120, (unint64_t *)&qword_1EDA0FDE0, 0x1E0DC3658, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9118);
  }
}

void sub_1BC127C78(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA240, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C9E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127C94(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA248, (uint64_t (*)(uint64_t))sub_1BC0FBE74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127CB0(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3F9160, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127CCC(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3F9D58, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127CE8(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA268, (uint64_t (*)(uint64_t))sub_1BC118890, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

unint64_t sub_1BC127D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FA280;
  if (!qword_1EF3FA280)
  {
    sub_1BC0E7998(255, &qword_1EF3FA278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FA280);
  }
  return result;
}

void sub_1BC127D64(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127D80(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA298, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BC127D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeekdaysAndDosages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC127DE0(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3F9100, type metadata accessor for WeekdaysAndDosages, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127DFC(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C8C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC127E18(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3F9108, (uint64_t (*)(uint64_t))sub_1BC0FB470, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BC127E34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1BC127E70(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FA2E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t type metadata accessor for StrengthStepViewController(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FA308);
}

uint64_t sub_1BC127EA4()
{
  return swift_initClassMetadata2();
}

void sub_1BC127EEC(_BYTE *a1@<X8>)
{
  *a1 = 32;
}

uint64_t sub_1BC127EF8()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = MEMORY[0x1E0C95940];
  sub_1BC1287D4(0, &qword_1EF3FA3D0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t))MEMORY[0x1E0C95940]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - v5;
  v9[1] = *(_QWORD *)(*(_QWORD *)(v0 + qword_1EF3FAD98) + 24);
  sub_1BC1285D8();
  sub_1BC128690();
  swift_retain();
  sub_1BC2B4004();
  swift_release();
  sub_1BC128764(&qword_1EF3FA3D8, &qword_1EF3FA3D0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t))v1, MEMORY[0x1E0C95950]);
  v7 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_1BC12802C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  int v2;
  char v3;

  v2 = *(unsigned __int8 *)(result + 24);
  if (v2 == 255)
    v3 = 0;
  else
    v3 = v2 & 1;
  *a2 = v3;
  return result;
}

id sub_1BC128044()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF3FA300;
  v2 = *(void **)(v0 + qword_1EF3FA300);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3FA300);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
    objc_msgSend(v4, sel_setNumberStyle_, 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC1280C8()
{
  char *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  v1 = MEMORY[0x1E0C956F8];
  sub_1BC1287D4(0, &qword_1EF3FA3A8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t))MEMORY[0x1E0C956F8]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v12 - v5;
  v12[1] = *(_QWORD *)(*(_QWORD *)&v0[qword_1EF3FAD98] + 24);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v0;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BC1286FC;
  *(_QWORD *)(v8 + 24) = v7;
  sub_1BC1285D8();
  sub_1BC128690();
  swift_retain();
  v9 = v0;
  sub_1BC2B3FC8();
  swift_release();
  swift_release();
  sub_1BC128764(&qword_1EF3FA3C8, &qword_1EF3FA3A8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t))v1, MEMORY[0x1E0C95708]);
  v10 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

uint64_t sub_1BC128248(void *a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  char v8;
  char v9;
  id v11;
  id v12;
  void *v13;
  id v14;

  if (a4 == 0xFF)
    return 0;
  if ((a4 & 1) != 0)
  {
    if (a2)
    {
      swift_bridgeObjectRetain_n();
      v11 = a3;
      v12 = sub_1BC128044();
      v13 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v12, sel_numberFromString_, v13);
      sub_1BC1287BC((uint64_t)a1, a2, a3, a4);
      sub_1BC1287BC((uint64_t)a1, a2, a3, a4);

      if (!v14)
      {
        v9 = 0;
        return v9 & 1;
      }

    }
    else
    {
      sub_1BC1287BC((uint64_t)a1, 0, a3, a4);
    }
    v9 = 1;
  }
  else
  {
    swift_beginAccess();
    sub_1BC1287A4(a1, a2, a3, a4);
    swift_retain();
    v8 = sub_1BC2B3914();
    sub_1BC1287BC((uint64_t)a1, a2, a3, a4);
    swift_release();
    v9 = v8 ^ 1;
  }
  return v9 & 1;
}

void sub_1BC1283D8(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_1EF3FA300] = 0;
  v4 = a3;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC12844C()
{
  sub_1BC128564();
}

void sub_1BC128464()
{
  uint64_t v0;

}

id sub_1BC128474()
{
  return sub_1BC128598(type metadata accessor for StrengthStepViewController);
}

void sub_1BC128480(uint64_t a1)
{

}

uint64_t sub_1BC128490()
{
  return type metadata accessor for StrengthStepViewController(0);
}

uint64_t type metadata accessor for ManualStrengthStepViewController(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FA358);
}

uint64_t sub_1BC1284AC()
{
  return swift_initClassMetadata2();
}

void sub_1BC1284E8(_BYTE *a1@<X8>)
{
  *a1 = 33;
}

void sub_1BC1284F4()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC12854C()
{
  sub_1BC128564();
}

void sub_1BC128564()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC12858C()
{
  return sub_1BC128598(type metadata accessor for ManualStrengthStepViewController);
}

id sub_1BC128598(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1BC1285D0()
{
  return type metadata accessor for ManualStrengthStepViewController(0);
}

void sub_1BC1285D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA3B0)
  {
    sub_1BC12863C();
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA3B0);
  }
}

void sub_1BC12863C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA3B8)
  {
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA3B8);
  }
}

unint64_t sub_1BC128690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FA3C0;
  if (!qword_1EF3FA3C0)
  {
    sub_1BC1285D8();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FA3C0);
  }
  return result;
}

uint64_t sub_1BC1286D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC1286FC(void *a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  return sub_1BC128248(a1, a2, a3, a4);
}

uint64_t sub_1BC128704()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC128728@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BC128764(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, unint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC1287D4(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1BC1287A4(id result, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_1BC10223C((uint64_t)result, a2, a3, a4 & 1);
  return result;
}

void sub_1BC1287BC(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255)
    sub_1BC10228C(a1, a2, a3, a4 & 1);
}

void sub_1BC1287D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC1285D8();
    v7 = v6;
    v8 = sub_1BC128690();
    v9 = a3(a1, v7, MEMORY[0x1E0DEAFA0], v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC128840(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v27 = a4;
  v28 = a2;
  v26 = a1;
  sub_1BC128A44();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3530();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MedicationSearchItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + qword_1EF3FA300) = 0;
  sub_1BC128A98(a1, (uint64_t)v17);
  v30 = 0;
  v31 = 0;
  if (a3)
    v18 = 0;
  else
    v18 = -1;
  v29 = a3;
  v32 = v18;
  sub_1BC1285D8();
  swift_allocObject();
  v19 = a3;
  v20 = sub_1BC2B3EF0();
  v21 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v27, v10);
  type metadata accessor for MedicationStrengthsDataSource();
  swift_allocObject();
  v22 = sub_1BC1FB354((uint64_t)v17, v20, (uint64_t)v13);
  v23 = v26;
  sub_1BC128A98(v26, (uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  v24 = sub_1BC2A29E4((uint64_t)v9, (uint64_t)v22, v28);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  sub_1BC0FC2B4(v23);
  return v24;
}

void sub_1BC128A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8980)
  {
    type metadata accessor for MedicationSearchItem(255);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8980);
  }
}

uint64_t sub_1BC128A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationSearchItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MedicationHeaderDataSource()
{
  uint64_t result;

  result = qword_1EF3FA3E8;
  if (!qword_1EF3FA3E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC128B18()
{
  return swift_initClassMetadata2();
}

void sub_1BC128B60()
{
  sub_1BC128B90();
}

void sub_1BC128B78()
{
  sub_1BC128B90();
}

void sub_1BC128B90()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC128BB8()
{
  sub_1BC2B2F3C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC128BD4()
{
  return type metadata accessor for MedicationHeaderDataSource();
}

uint64_t storeEnumTagSinglePayload for MedicationHeaderDataSource.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC128C28 + 4 * byte_1BC2BB215[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC128C5C + 4 * byte_1BC2BB210[v4]))();
}

uint64_t sub_1BC128C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC128C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC128C6CLL);
  return result;
}

uint64_t sub_1BC128C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC128C80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC128C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC128C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationHeaderDataSource.State()
{
  return &type metadata for MedicationHeaderDataSource.State;
}

unint64_t sub_1BC128CAC()
{
  unint64_t result;

  result = qword_1EF3FA438;
  if (!qword_1EF3FA438)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BB2B8, &type metadata for MedicationHeaderDataSource.State);
    atomic_store(result, (unint64_t *)&qword_1EF3FA438);
  }
  return result;
}

_QWORD *sub_1BC128CF0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;

  if ((*(_BYTE *)(v1 + qword_1EF3FA3E0) & 1) != 0)
  {
    v3 = 0;
    v4 = 0xE000000000000000;
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v5 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v3 = sub_1BC2B2144();
    v4 = v6;
    swift_bridgeObjectRelease();

  }
  type metadata accessor for MedicationSummaryCollectionViewHeaderCell();
  sub_1BC128E8C();
  v7 = sub_1BC2B2930();
  v9 = v8;
  a1[3] = &type metadata for MedicationSummaryItem;
  a1[4] = sub_1BC128ED4();
  result = (_QWORD *)swift_allocObject();
  *a1 = result;
  result[2] = v3;
  result[3] = v4;
  result[4] = v7;
  result[5] = v9;
  return result;
}

_QWORD *sub_1BC128E30@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BC128CF0(a1);
}

uint64_t sub_1BC128E50()
{
  type metadata accessor for MedicationSummaryCollectionViewHeaderCell();
  sub_1BC128E8C();
  return sub_1BC2B4994();
}

unint64_t sub_1BC128E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FA440;
  if (!qword_1EF3FA440)
  {
    v1 = type metadata accessor for MedicationSummaryCollectionViewHeaderCell();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C2DD8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FA440);
  }
  return result;
}

unint64_t sub_1BC128ED4()
{
  unint64_t result;

  result = qword_1EF3FA448;
  if (!qword_1EF3FA448)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C2D28, &type metadata for MedicationSummaryItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FA448);
  }
  return result;
}

uint64_t sub_1BC128F18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for NotificationFooterDataSource()
{
  uint64_t result;

  result = qword_1EF3FA458;
  if (!qword_1EF3FA458)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC128F80()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC128FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v0 = sub_1BC2B3D34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B2D20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  sub_1BC2B2CC0();
  sub_1BC2B2C90();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  sub_1BC2B2CE4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC28C0], v0);
  sub_1BC2B2C84();
  v12 = sub_1BC2B2D14();
  v11(v10, v4);
  return v12;
}

void sub_1BC1290F8()
{
  sub_1BC129128();
}

void sub_1BC129110()
{
  sub_1BC129128();
}

void sub_1BC129128()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC129150()
{
  return type metadata accessor for NotificationFooterDataSource();
}

uint64_t sub_1BC129158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v4 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v5 = sub_1BC2B2144();
  v7 = v6;
  swift_bridgeObjectRelease();

  LOBYTE(v4) = *(_BYTE *)(v3 + qword_1EF3FA450);
  type metadata accessor for SeparatorFooterCell();
  sub_1BC129CE8();
  v8 = sub_1BC2B2930();
  v10 = v9;
  a1[3] = (uint64_t)&type metadata for SeparatorFooterItem;
  a1[4] = sub_1BC129D2C();
  result = swift_allocObject();
  *a1 = result;
  *(_QWORD *)(result + 16) = v5;
  *(_QWORD *)(result + 24) = v7;
  *(_BYTE *)(result + 32) = (_BYTE)v4;
  *(_QWORD *)(result + 40) = v8;
  *(_QWORD *)(result + 48) = v10;
  return result;
}

uint64_t sub_1BC129294()
{
  type metadata accessor for SeparatorFooterCell();
  sub_1BC129CE8();
  return sub_1BC2B4988();
}

uint64_t sub_1BC1292CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC1292F8()
{
  sub_1BC129F7C();
  return sub_1BC2B4478();
}

uint64_t sub_1BC129328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  void (*v8)(uint64_t *, _QWORD);
  _QWORD *v9;
  void (*v10)(uint64_t *, _QWORD);
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  id v13;
  _BYTE v14[40];
  uint64_t v15[3];
  uint64_t v16;
  uint64_t v17;

  v1 = sub_1BC2B3CD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v5, (uint64_t)v15);
  if (!v16)
    return sub_1BC0F7954((uint64_t)v15);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v7 = v14[24];
    sub_1BC2B3CB0();
    swift_bridgeObjectRetain();
    sub_1BC2B3C98();
    v8 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C38();
    *v9 = 0x4028000000000000;
    v8(v15, 0);
    v10 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C38();
    *(_QWORD *)(v11 + 16) = 0x4028000000000000;
    v10(v15, 0);
    v16 = v1;
    v17 = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
    (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
    MEMORY[0x1BCCEE224](v15);
    sub_1BC1295BC();
    v13 = sub_1BC1294EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setHidden_, (v7 & 1) == 0);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

id sub_1BC1294EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_1BC1295BC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  char v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_contentView);
  v3 = sub_1BC1294EC();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v4 = sub_1BC2B4A6C();

  if ((v4 & 1) == 0)
  {
    v5 = objc_msgSend(v1, sel_contentView);
    v6 = sub_1BC1294EC();
    objc_msgSend(v5, sel_addSubview_, v6);

    v7 = (void *)objc_opt_self();
    sub_1BC0E7940();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC2BA730;
    v9 = sub_1BC1294EC();
    v10 = objc_msgSend(v9, sel_heightAnchor);

    v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, 0.5);
    *(_QWORD *)(v8 + 32) = v11;
    v12 = sub_1BC1294EC();
    v13 = objc_msgSend(v12, sel_leadingAnchor);

    v14 = objc_msgSend(v1, sel_layoutMarginsGuide);
    v15 = objc_msgSend(v14, sel_leadingAnchor);

    v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
    *(_QWORD *)(v8 + 40) = v16;
    v17 = sub_1BC1294EC();
    v18 = objc_msgSend(v17, sel_trailingAnchor);

    v19 = objc_msgSend(v1, sel_layoutMarginsGuide);
    v20 = objc_msgSend(v19, sel_trailingAnchor);

    v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
    *(_QWORD *)(v8 + 48) = v21;
    v22 = sub_1BC1294EC();
    v23 = objc_msgSend(v22, sel_topAnchor);

    v24 = objc_msgSend(v1, sel_contentView);
    v25 = objc_msgSend(v24, sel_topAnchor);

    v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
    *(_QWORD *)(v8 + 56) = v26;
    sub_1BC2B45A4();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v27 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_activateConstraints_, v27);

  }
}

id sub_1BC129A18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorFooterCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SeparatorFooterCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC129AA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC129AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC129328();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC129B5C(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC129BA4;
}

uint64_t sub_1BC129BA8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC129BFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC129328();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC129C6C(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC129BA4;
}

uint64_t sub_1BC129CB8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC129328();
  return result;
}

unint64_t sub_1BC129CE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FA4E0;
  if (!qword_1EF3FA4E0)
  {
    v1 = type metadata accessor for SeparatorFooterCell();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BB3CC, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FA4E0);
  }
  return result;
}

unint64_t sub_1BC129D2C()
{
  unint64_t result;

  result = qword_1EF3FA4E8;
  if (!qword_1EF3FA4E8)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BB494, &type metadata for SeparatorFooterItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FA4E8);
  }
  return result;
}

uint64_t sub_1BC129D70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for SeparatorFooterItem()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SeparatorFooterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeparatorFooterItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SeparatorFooterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeparatorFooterItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeparatorFooterItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeparatorFooterItem()
{
  return &type metadata for SeparatorFooterItem;
}

unint64_t sub_1BC129F7C()
{
  unint64_t result;

  result = qword_1EF3FA4F0;
  if (!qword_1EF3FA4F0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FA4F0);
  }
  return result;
}

uint64_t MedicationShape.previewConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = sub_1BC2B3698();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0FB470();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B37DC();
  v38 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0FB4F4();
  v41 = *(_QWORD *)(v13 - 8);
  v42 = v13;
  MEMORY[0x1E0C80A78](v13);
  v37 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B3350();
  v34 = *(_QWORD *)(v15 - 8);
  v35 = v15;
  MEMORY[0x1E0C80A78](v15);
  v36 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC2B3344();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v30 = v12;
    v31 = v10;
    v32 = v1;
    v33 = a1;
    v45 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B8C(0, v18, 0);
    v19 = *(unsigned __int8 *)(v4 + 80);
    v29[1] = v17;
    v20 = v17 + ((v19 + 32) & ~v19);
    v39 = *(_QWORD *)(v4 + 72);
    v40 = v4;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v21(v6, v20, v3);
      v22 = sub_1BC2B368C();
      v23 = &v9[*(int *)(v44 + 48)];
      v21(v9, (uint64_t)v6, v3);
      if ((v22 & 1) != 0)
      {
        sub_1BC12A328();
        sub_1BC2B4D18();
        sub_1BC2B434C();
        v24 = 0;
      }
      else
      {
        v24 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v23, v24, 1, v42);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v25 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125B8C(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v45;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v26 = *(_QWORD *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BC125B8C(v26 > 1, v27 + 1, 1);
        v25 = v45;
      }
      *(_QWORD *)(v25 + 16) = v27 + 1;
      sub_1BC12A47C((uint64_t)v9, v25+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v27);
      v4 = v40;
      v20 += v39;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v1 = v32;
    v12 = v30;
    v10 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v1, v35);
  sub_1BC12A328();
  sub_1BC2B4D0C();
  sub_1BC2B434C();
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v12, *MEMORY[0x1E0D2CAF0], v10);
  return sub_1BC2B35F0();
}

unint64_t sub_1BC12A328()
{
  unint64_t result;

  result = qword_1EDA0FDE0;
  if (!qword_1EDA0FDE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FDE0);
  }
  return result;
}

uint64_t MedicationShape.shapeImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - v1;
  v3 = sub_1BC2B3608();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MedicationShape.previewConfig.getter((uint64_t)v6);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  v7 = sub_1BC11C0F4(104.0, 104.0, 1, (uint64_t)v2);
  sub_1BC1092C0((uint64_t)v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_1BC12A47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0FB470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t HKMedicationUserDomainConcept.medmojiConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  v7 = objc_msgSend(v2, sel_userVisualizationConfigJSONString);
  if (v7)
  {
    v8 = v7;
    sub_1BC2B4460();

    sub_1BC2B35B4();
    v9 = sub_1BC2B3608();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v6, v9);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    sub_1BC12A654((uint64_t)v6, (uint64_t)&qword_1EDA0ECC0, (uint64_t)MEMORY[0x1E0D2C950], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E7998);
  }
  v11 = sub_1BC2B3608();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

uint64_t sub_1BC12A654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BC12A69C@<X0>(uint64_t a1@<X8>)
{
  return HKMedicationUserDomainConcept.medmojiConfiguration.getter(a1);
}

unint64_t sub_1BC12A6BC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC12A6E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BC12A6E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FDA8;
  if (!qword_1EDA0FDA8)
  {
    v1 = sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDA0);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FDA8);
  }
  return result;
}

uint64_t dispatch thunk of MedicationDoseLogMedicationItemRepresentable.medmojiConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC12A740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  char v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  _BOOL8 v38;
  id v39;
  void *v40;
  uint64_t v41;
  char *v42;
  id v43;
  char *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  char v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v86 - v10;
  v12 = sub_1BC2B3608();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v16)
  {
    v17 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer);
    v18 = *(_QWORD *)(v16 + 32);
    v87 = v9;
    v88 = v14;
    v86 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    if (v18)
    {
      swift_retain();
      v19 = sub_1BC2B32D8();
      swift_release();
      v20 = v19 ^ 1;
    }
    else
    {
      v20 = 1;
    }
    objc_msgSend(v17, sel_setHidden_, v20 & 1, v86);
    v28 = swift_retain();
    sub_1BC12EE38(v28);
    sub_1BC12B41C();
    v30 = v29;
    v31 = (void *)sub_1BC2B4430();
    objc_msgSend(v30, sel_setText_, v31);

    v32 = sub_1BC12B604();
    v33 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v32, sel_setText_, v33);

    v34 = sub_1BC12B6AC();
    v35 = objc_msgSend(*(id *)(v16 + 16), sel_userSpecifiedNotes);
    objc_msgSend(v34, sel_setText_, v35);

    v36 = sub_1BC12B718();
    v37 = *(void **)(v16 + 24);
    if (v37)
      v38 = objc_msgSend(v37, sel_logOrigin) != (id)2;
    else
      v38 = *(_QWORD *)(v16 + 32) == 0;
    objc_msgSend(v36, sel_setHidden_, v38);

    v39 = objc_msgSend(*(id *)(v16 + 16), sel_userVisualizationConfigJSONString);
    if (v39)
    {
      v40 = v39;
      sub_1BC2B4460();

      sub_1BC2B35B4();
      v41 = v88;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v88) == 1)
      {
        sub_1BC12A654((uint64_t)v11, (uint64_t)&qword_1EDA0ECC0, (uint64_t)MEMORY[0x1E0D2C950], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E7998);
      }
      else
      {
        v42 = v86;
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v86, v11, v41);
        v43 = sub_1BC12B618();
        v44 = v87;
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v87, v42, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v44, 0, 1, v41);
        sub_1BC2B3308();

        (*(void (**)(char *, uint64_t))(v13 + 8))(v42, v41);
      }
    }
    v45 = objc_msgSend(*(id *)(v16 + 16), sel_userSpecifiedNotes);
    if (v45)
    {
      v46 = v45;
      sub_1BC2B4460();

      sub_1BC2B44CC();
      v48 = v47;
      swift_bridgeObjectRelease();
      if (v48)
      {
        swift_bridgeObjectRelease();
        v49 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView);
        if (v49)
        {
          v50 = v49;
          objc_msgSend(v50, sel_setSpacing_, 12.0);
          v51 = sub_1BC12C1F0();
          objc_msgSend(v50, sel_removeArrangedSubview_, v51);

          v52 = sub_1BC12C084();
          objc_msgSend(v50, sel_addArrangedSubview_, v52);

          v53 = sub_1BC12C084();
          v54 = objc_msgSend(v53, sel_leadingAnchor);

          v55 = objc_msgSend(v50, sel_leadingAnchor);
          v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

          objc_msgSend(v56, sel_setActive_, 1);
          v57 = sub_1BC12C084();
          v58 = objc_msgSend(v57, sel_trailingAnchor);

          v59 = objc_msgSend(v50, sel_trailingAnchor);
          v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

          objc_msgSend(v60, sel_setActive_, 1);
          v61 = sub_1BC12C558();
          v62 = objc_msgSend(v61, sel_heightAnchor);

          v63 = objc_msgSend(v62, sel_constraintEqualToConstant_, 0.5);
          objc_msgSend(v63, sel_setActive_, 1);

          v64 = sub_1BC12C558();
          v65 = objc_msgSend(v64, sel_leadingAnchor);

          v66 = sub_1BC12C084();
          v67 = objc_msgSend(v66, sel_leadingAnchor);

          v68 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v67);
          objc_msgSend(v68, sel_setActive_, 1);

          v69 = sub_1BC12C558();
          v70 = objc_msgSend(v69, sel_trailingAnchor);

          v71 = sub_1BC12C084();
          v72 = objc_msgSend(v71, sel_trailingAnchor);

          v73 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v72);
          objc_msgSend(v73, sel_setActive_, 1);

          v74 = sub_1BC12C34C();
          v75 = objc_msgSend(v74, sel_leadingAnchor);

          v76 = sub_1BC12C084();
          v77 = objc_msgSend(v76, sel_leadingAnchor);

          v78 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v77);
          objc_msgSend(v78, sel_setActive_, 1);

          v79 = sub_1BC12C34C();
          v80 = objc_msgSend(v79, sel_trailingAnchor);

          v81 = sub_1BC12C084();
          v82 = objc_msgSend(v81, sel_trailingAnchor);

          v83 = objc_msgSend(v80, sel_constraintEqualToAnchor_, v82);
          objc_msgSend(v83, sel_setActive_, 1);

        }
      }
    }
    sub_1BC12B078();
    v84 = *(_QWORD *)(v16 + 48);
    if (v84 == 4)
      v85 = 1;
    else
      v85 = 2 * (v84 == 5);
    sub_1BC130260(v85);
    return swift_release();
  }
  else
  {
    sub_1BC2B39A4();
    v21 = sub_1BC2B39D4();
    v22 = sub_1BC2B48C8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v90 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = sub_1BC2B54F8();
      v89 = sub_1BC12540C(v25, v26, &v90);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v21, v22, "[%s] Couldn't load viewModel", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v24, -1, -1);
      MEMORY[0x1BCCEF3A0](v23, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1BC12B078()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;

  sub_1BC2B4460();
  sub_1BC2B44FC();
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC12B41C();
  v1 = v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v2);

  v3 = sub_1BC12B604();
  sub_1BC2B51BC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  v5 = sub_1BC12B6AC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  v7 = sub_1BC12B718();
  sub_1BC2B51BC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v8 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

  v9 = sub_1BC12B858();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v10 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

  v11 = sub_1BC12B998();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12);

}

void sub_1BC12B41C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel);
  if (v2)
    goto LABEL_4;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v3, sel_setTextColor_, v4);

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B60]);
  v7 = objc_msgSend(v6, sel_fontDescriptor);
  v8 = objc_msgSend(v7, sel_fontDescriptorWithSymbolicTraits_, 32770);

  if (v8)
  {
    v9 = v8;
    objc_msgSend(v6, sel_pointSize);
    v10 = objc_msgSend(v5, sel_fontWithDescriptor_size_, v9);

    objc_msgSend(v3, sel_setFont_, v10);
    objc_msgSend(v3, sel_setNumberOfLines_, 0);
    objc_msgSend(v3, sel_setLineBreakMode_, 4);

    v11 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v3;

    v2 = 0;
LABEL_4:
    v12 = v2;
    return;
  }
  __break(1u);
}

id sub_1BC12B604()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___formStrengthLabel, (uint64_t (*)(void))sub_1BC12F0F0);
}

id sub_1BC12B618()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC12B6AC()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___notesLabel, (uint64_t (*)(void))sub_1BC12F414);
}

id sub_1BC12B6C0(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1BC12B718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  v5 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton;
  v6 = *(void **)(v1
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton);
  if (v6)
  {
    v7 = *(id *)(v1
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton);
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
    sub_1BC12D870(0, 0xD000000000000023, 0x80000001BC2C8960, (void *)0xD000000000000011);
    v9 = sub_1BC2B4EC8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4EEC();
    v10 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v8;
    v7 = v8;

    v6 = 0;
  }
  v11 = v6;
  return v7;
}

id sub_1BC12B858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  v5 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton;
  v6 = *(void **)(v1
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton);
  if (v6)
  {
    v7 = *(id *)(v1
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton);
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
    sub_1BC12D870(0, 0xD000000000000021, 0x80000001BC2C8990, (void *)0xD000000000000015);
    v9 = sub_1BC2B4EC8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4EEC();
    v10 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v8;
    v7 = v8;

    v6 = 0;
  }
  v11 = v6;
  return v7;
}

id sub_1BC12B998()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___doseAmountTimeButton, (uint64_t (*)(uint64_t))sub_1BC12B9AC);
}

void sub_1BC12B9AC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  CGFloat Width;
  id *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  CGRect v41;

  v2 = sub_1BC2B4EC8();
  v40 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v39 - v6;
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v10 = objc_msgSend(v9, sel_fontDescriptor);
  v11 = objc_msgSend(v10, sel_fontDescriptorWithSymbolicTraits_, 32770);

  if (v11)
  {
    v12 = v11;
    objc_msgSend(v9, sel_pointSize);
    v13 = objc_msgSend(v8, sel_fontWithDescriptor_size_, v12);

    v14 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v13, 1);
    objc_msgSend((id)objc_opt_self(), sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(a1, sel_semanticContentAttribute));
    sub_1BC2B4E8C();
    v15 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    sub_1BC2B4E44();
    sub_1BC2B4DF0();
    v16 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v16);

    if (v17)
    {
      v18 = objc_msgSend(v17, sel_imageWithConfiguration_, v14);

    }
    sub_1BC2B4E80();
    sub_1BC2B4E08();
    sub_1BC2B4DE4();
    sub_1BC0E1D38(0, &qword_1EDA0FE08);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v5, v7, v2);
    v19 = (void *)sub_1BC2B4ED4();
    v20 = objc_msgSend(v19, sel_titleLabel);
    if (v20)
    {
      v21 = v20;
      v22 = v12;
      objc_msgSend(v9, sel_pointSize);
      v23 = objc_msgSend(v8, sel_fontWithDescriptor_size_, v22);

      objc_msgSend(v21, sel_setFont_, v23);
    }
    objc_msgSend(v19, sel_setContentHorizontalAlignment_, 1);
    v24 = objc_msgSend(v19, sel_titleLabel);
    objc_msgSend(v24, sel_setNumberOfLines_, 2);

    v25 = (void *)objc_opt_self();
    v26 = v19;
    v27 = objc_msgSend(v25, sel_mainScreen);
    objc_msgSend(v27, sel_bounds);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;

    v41.origin.x = v29;
    v41.origin.y = v31;
    v41.size.width = v33;
    v41.size.height = v35;
    Width = CGRectGetWidth(v41);
    v37 = (id *)MEMORY[0x1E0DC48D0];
    if (Width >= 414.0)
      v37 = (id *)MEMORY[0x1E0DC48C8];
    v38 = *v37;
    objc_msgSend(v26, sel_setMaximumContentSizeCategory_, v38);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v2);
  }
  else
  {
    __break(1u);
  }
}

id sub_1BC12BE40()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationStackView, (uint64_t (*)(uint64_t))sub_1BC12BE54);
}

id sub_1BC12BE54()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2BB4D0;
  sub_1BC12B41C();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = sub_1BC12B604();
  *(_QWORD *)(v0 + 48) = sub_1BC12B998();
  sub_1BC2B45A4();
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v3 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithArrangedSubviews_, v3);

  objc_msgSend(v4, sel_setAxis_, 1);
  objc_msgSend(v4, sel_setAlignment_, 1);
  objc_msgSend(v4, sel_setDistribution_, 0);
  objc_msgSend(v4, sel_setSpacing_, 2.0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v5 + 32) = sub_1BC12B618();
  *(_QWORD *)(v5 + 40) = v4;
  sub_1BC2B45A4();
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  v7 = v4;
  v8 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithArrangedSubviews_, v8);

  objc_msgSend(v9, sel_setAxis_, 0);
  objc_msgSend(v9, sel_setAlignment_, 1);
  objc_msgSend(v7, sel_setDistribution_, 0);
  objc_msgSend(v9, sel_setSpacing_, 12.0);

  return v9;
}

id sub_1BC12C084()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackViewWithNotes, (uint64_t (*)(uint64_t))sub_1BC12C098);
}

id sub_1BC12C098()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2BB4D0;
  *(_QWORD *)(v0 + 32) = sub_1BC12C558();
  *(_QWORD *)(v0 + 40) = sub_1BC12B6AC();
  *(_QWORD *)(v0 + 48) = sub_1BC12C34C();
  sub_1BC2B45A4();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v2 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 1);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setDistribution_, 0);
  objc_msgSend(v3, sel_setSpacing_, 12.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1BC12C1F0()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackView, (uint64_t (*)(uint64_t))sub_1BC12C204);
}

id sub_1BC12C204()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v0 + 32) = sub_1BC12C34C();
  sub_1BC2B45A4();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v2 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 1);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setDistribution_, 0);
  objc_msgSend(v3, sel_setSpacing_, 10.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1BC12C34C()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedTakenStackView, (uint64_t (*)(uint64_t))sub_1BC12C3BC);
}

id sub_1BC12C360(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1BC12C3BC(void *a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v2 + 32) = sub_1BC12B718();
  *(_QWORD *)(v2 + 40) = sub_1BC12B858();
  sub_1BC2B45A4();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  v6 = objc_msgSend(a1, sel_traitCollection);
  v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  v8 = sub_1BC12F7A4((uint64_t)v7);
  objc_msgSend(v5, sel_setAxis_, v8);
  objc_msgSend(v5, sel_setAlignment_, 0);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 8.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v5;
}

id sub_1BC12C558()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC12C61C()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B449C();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AB8]);
  objc_msgSend(v0, sel_setFont_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v4);

  return v0;
}

id sub_1BC12C80C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer];
  v3 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel];
  objc_msgSend(v2, sel_addSubview_, v3);
  sub_1BC2B4AF0();
  objc_msgSend(v3, sel_hk_alignConstraintsWithView_insets_, v2);
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2BB4D0;
  *(_QWORD *)(v4 + 32) = v2;
  v5 = v2;
  *(_QWORD *)(v4 + 40) = sub_1BC12BE40();
  *(_QWORD *)(v4 + 48) = sub_1BC12C1F0();
  sub_1BC2B45A4();
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v7 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithArrangedSubviews_, v7);

  v9 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView;
  v10 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView] = v8;

  result = *(id *)&v1[v9];
  if (result)
  {
    result = objc_msgSend(result, sel_setCustomSpacing_afterView_, v5, 8.0);
    v12 = *(void **)&v1[v9];
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v13, sel_setAxis_, 1);
      objc_msgSend(v13, sel_setAlignment_, 1);
      objc_msgSend(v13, sel_setDistribution_, 0);
      objc_msgSend(v13, sel_setSpacing_, 17.0);
      objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      objc_msgSend(v1, sel_addSubview_, v13);
      v70 = (id)objc_opt_self();
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BC2BB4E0;
      v15 = objc_msgSend(v13, sel_topAnchor);
      v16 = objc_msgSend(v1, sel_topAnchor);
      v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

      *(_QWORD *)(v14 + 32) = v17;
      v18 = objc_msgSend(v13, sel_leadingAnchor);
      v19 = objc_msgSend(v1, sel_leadingAnchor);
      v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

      *(_QWORD *)(v14 + 40) = v20;
      v21 = objc_msgSend(v13, sel_trailingAnchor);
      v22 = objc_msgSend(v1, sel_trailingAnchor);
      v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

      *(_QWORD *)(v14 + 48) = v23;
      v24 = objc_msgSend(v13, sel_bottomAnchor);
      v25 = objc_msgSend(v1, sel_bottomAnchor);
      v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

      *(_QWORD *)(v14 + 56) = v26;
      v27 = sub_1BC12B618();
      v28 = objc_msgSend(v27, sel_topAnchor);

      v29 = sub_1BC12BE40();
      v30 = objc_msgSend(v29, sel_topAnchor);

      v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 5.0);
      *(_QWORD *)(v14 + 64) = v31;
      v32 = sub_1BC12B618();
      v33 = objc_msgSend(v32, sel_leadingAnchor);

      v34 = sub_1BC12BE40();
      v35 = objc_msgSend(v34, sel_leadingAnchor);

      v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
      *(_QWORD *)(v14 + 72) = v36;
      v37 = sub_1BC12B618();
      v38 = objc_msgSend(v37, sel_widthAnchor);

      v39 = objc_msgSend(v38, sel_constraintEqualToConstant_, 64.0);
      *(_QWORD *)(v14 + 80) = v39;
      v40 = sub_1BC12B618();
      v41 = objc_msgSend(v40, sel_heightAnchor);

      v42 = sub_1BC12B618();
      v43 = objc_msgSend(v42, sel_widthAnchor);

      v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
      *(_QWORD *)(v14 + 88) = v44;
      v45 = sub_1BC12C1F0();
      v46 = objc_msgSend(v45, sel_leadingAnchor);

      v47 = objc_msgSend(v13, sel_leadingAnchor);
      v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

      *(_QWORD *)(v14 + 96) = v48;
      v49 = sub_1BC12C1F0();
      v50 = objc_msgSend(v49, sel_trailingAnchor);

      v51 = objc_msgSend(v13, sel_trailingAnchor);
      v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

      *(_QWORD *)(v14 + 104) = v52;
      v53 = sub_1BC12C34C();
      v54 = objc_msgSend(v53, sel_leadingAnchor);

      v55 = sub_1BC12C1F0();
      v56 = objc_msgSend(v55, sel_leadingAnchor);

      v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
      *(_QWORD *)(v14 + 112) = v57;
      v58 = sub_1BC12C34C();
      v59 = objc_msgSend(v58, sel_trailingAnchor);

      v60 = sub_1BC12C1F0();
      v61 = objc_msgSend(v60, sel_trailingAnchor);

      v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v61);
      *(_QWORD *)(v14 + 120) = v62;
      sub_1BC2B45A4();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
      v63 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v70, sel_activateConstraints_, v63);

      v64 = sub_1BC12B858();
      objc_msgSend(v64, sel_addTarget_action_forControlEvents_, v1, sel_didTapRecord_, 64);

      v65 = sub_1BC12B718();
      objc_msgSend(v65, sel_addTarget_action_forControlEvents_, v1, sel_didTapSkip_, 64);

      v66 = sub_1BC12B998();
      objc_msgSend(v66, sel_addTarget_action_forControlEvents_, v1, sel_didTapUnitTime_, 64);

      sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_1BC2B92D0;
      v68 = sub_1BC2B3D40();
      v69 = MEMORY[0x1E0DC29B0];
      *(_QWORD *)(v67 + 32) = v68;
      *(_QWORD *)(v67 + 40) = v69;
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1BC13079C();
      sub_1BC2B4CC4();

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return (id)swift_release();
    }
  }
  return result;
}

void sub_1BC12D0C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1BCCEF478](v4);
  if (v5)
  {
    v6 = (void *)v5;
    type metadata accessor for MedicationDoseLogMedicationView();
    if ((sub_1BC2B4A78() & 1) == 0)
    {
      v7 = sub_1BC12C34C();
      v8 = objc_msgSend(a1, sel_traitCollection);
      v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

      v10 = sub_1BC12F7A4((uint64_t)v9);
      objc_msgSend(v7, sel_setAxis_, v10);

      v6 = v7;
    }

  }
}

void sub_1BC12D1A0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for MedicationDoseLogMedicationView();
  objc_msgSendSuper2(&v16, sel_layoutSubviews);
  sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA630, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B9600;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer];
  objc_msgSend(v2, sel_frame);
  v3 = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v1 + 32) = v4;
  v5 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel];
  objc_msgSend(v5, sel_frame);
  *(_QWORD *)(v1 + 88) = v3;
  *(_QWORD *)(v1 + 64) = v6;
  v7 = objc_msgSend(v5, sel_font);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_lineHeight);
    v10 = v9;

    *(_QWORD *)(v1 + 120) = v3;
    *(_QWORD *)(v1 + 96) = v10;
    sub_1BC2B542C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v2, sel_layer);
    v12 = objc_msgSend(v5, sel_font);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_pointSize);
      v15 = v14;

      objc_msgSend(v11, sel_setCornerRadius_, v15 * 0.5 + 3.0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1BC12D384(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___timeFormatter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___formStrengthLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___notesLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___doseAmountTimeButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackViewWithNotes] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedTakenStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView] = 0;
  v9 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel;
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_1BC12C61C();
  v11 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v13 = objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
  objc_msgSend(v12, sel_setBackgroundColor_, v13);

  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v10[v11] = v12;
  *(_QWORD *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView] = 0;

  v16.receiver = v10;
  v16.super_class = (Class)type metadata accessor for MedicationDoseLogMedicationView();
  v14 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC12C80C();

  return v14;
}

void sub_1BC12D5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v1)
  {
    if (*(_QWORD *)(v1 + 48) == 5)
    {
      v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
      if ((unint64_t)(v2 - 1) >= 2)
        v2 = 6;
    }
    else
    {
      v2 = 5;
    }
    *(_QWORD *)(v1 + 48) = v2;
    v3 = MEMORY[0x1BCCEF478](v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate);
    swift_retain();
    if (v3)
    {
      sub_1BC2113BC(v1);
      swift_unknownObjectRelease();
    }
    v4 = *(_QWORD *)(v1 + 48);
    if (v4 == 4)
      v5 = 1;
    else
      v5 = 2 * (v4 == 5);
    sub_1BC130260(v5);
    swift_release();
  }
}

void sub_1BC12D684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v1)
  {
    if (*(_QWORD *)(v1 + 48) == 4)
    {
      v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
      if ((unint64_t)(v2 - 1) >= 2)
        v2 = 6;
    }
    else
    {
      v2 = 4;
    }
    *(_QWORD *)(v1 + 48) = v2;
    v3 = MEMORY[0x1BCCEF478](v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate);
    swift_retain();
    if (v3)
    {
      sub_1BC2113BC(v1);
      swift_unknownObjectRelease();
    }
    v4 = *(_QWORD *)(v1 + 48);
    if (v4 == 4)
      v5 = 1;
    else
      v5 = 2 * (v4 == 5);
    sub_1BC130260(v5);
    swift_release();
  }
}

uint64_t sub_1BC12D75C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v6;
  uint64_t v7;
  uint64_t v9;

  swift_unknownObjectRetain();
  v6 = a1;
  sub_1BC2B5024();
  v7 = swift_unknownObjectRelease();
  a4(v7);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v9);
}

void sub_1BC12D870(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t inited;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v47 = a4;
  v49 = a2;
  v50 = a3;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0F7B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v47 - v6;
  v7 = sub_1BC2B215C();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v48 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - v10;
  v12 = sub_1BC2B4E68();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC2B4DCC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    sub_1BC2B4EA4();
  else
    sub_1BC2B4EB0();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DC3048], v16);
  sub_1BC2B4DD8();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DC3198], v12);
  sub_1BC2B4DC0();
  if ((a1 & 1) != 0)
  {
    v20 = (void *)objc_opt_self();
    v21 = *MEMORY[0x1E0DC4A88];
    v22 = objc_msgSend(v20, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88], v47);
    v23 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v22, 2);

    swift_bridgeObjectRetain();
    v24 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v24);

    if (v25)
    {
      v26 = objc_msgSend(v25, sel_imageWithConfiguration_, v23);

    }
    sub_1BC2B4E80();
    sub_1BC2B4E08();
    sub_1BC2B4DE4();

  }
  else
  {
    v27 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor, v47);
    sub_1BC2B4E44();
    v21 = *MEMORY[0x1E0DC4A88];
  }
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  LODWORD(v29) = 1036831949;
  objc_msgSend(v28, sel_setHyphenationFactor_, v29);
  v30 = (void *)objc_opt_self();
  v31 = objc_msgSend(v30, sel_preferredFontForTextStyle_, v21);
  v32 = objc_msgSend(v31, sel_fontDescriptor);

  v33 = objc_msgSend(v32, sel_fontDescriptorWithSymbolicTraits_, 2);
  if (v33)
  {
    v34 = objc_msgSend(v30, sel_fontWithDescriptor_size_, v33, 0.0);
    sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE80, (uint64_t (*)(uint64_t))sub_1BC1306C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC2B92C0;
    v36 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    v37 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    *(_QWORD *)(inited + 40) = v34;
    v38 = (void *)*MEMORY[0x1E0DC1178];
    *(_QWORD *)(inited + 64) = v37;
    *(_QWORD *)(inited + 72) = v38;
    *(_QWORD *)(inited + 104) = sub_1BC0E1D38(0, &qword_1EDA0FD78);
    *(_QWORD *)(inited + 80) = v28;
    v39 = v36;
    v47 = v34;
    v40 = v38;
    v41 = v28;
    sub_1BC1069C0(inited);
    sub_1BC2B2168();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v42 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v44 = v52;
    v43 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v48, v11, v53);
    v45 = v51;
    sub_1BC2B2138();
    v46 = sub_1BC2B212C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
    sub_1BC2B4E20();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v43);
  }
  else
  {
    __break(1u);
  }
}

id sub_1BC12DDF8()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationDoseLogMedicationView);
}

uint64_t type metadata accessor for MedicationDoseLogMedicationView()
{
  return objc_opt_self();
}

id sub_1BC12DF5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView);
  }
  else
  {
    type metadata accessor for MedicationDoseLogMedicationView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC12DFE0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  _QWORD v34[3];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v9, (uint64_t)v27);
  if (v28)
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*((_QWORD *)&v29 + 1))
      {
        sub_1BC12ECD4((uint64_t)&v29, (uint64_t)v32);
        v10 = sub_1BC12DF5C();
        v11 = sub_1BC12B618();

        v12 = v33;
        v13 = *(id *)(v33 + 16);
        HKMedicationUserDomainConcept.medmojiConfiguration.getter((uint64_t)v8);

        sub_1BC2B3308();
        v14 = (char *)sub_1BC12DF5C();
        *(_QWORD *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel] = v12;
        swift_retain_n();
        swift_release();
        sub_1BC12A740();

        swift_release();
        v15 = (char *)sub_1BC12DF5C();
        MEMORY[0x1BCCEF478](v34);
        *(_QWORD *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate + 8] = v34[1];
        swift_unknownObjectWeakAssign();

        swift_unknownObjectRelease();
        return sub_1BC0FC390((uint64_t)v32);
      }
    }
    else
    {
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v27);
    v29 = 0u;
    v30 = 0u;
    v31 = 0;
  }
  sub_1BC12A654((uint64_t)&v29, (uint64_t)&unk_1EF3FA5A8, (uint64_t)&type metadata for MedicationDoseLogMedicationItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
  sub_1BC2B39A4();
  v17 = v1;
  v18 = sub_1BC2B39D4();
  v19 = sub_1BC2B48C8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v26 = v2;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    *(_QWORD *)&v29 = v22;
    *(_DWORD *)v21 = 136315138;
    sub_1BC0E5774(v9, (uint64_t)v32);
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v23 = sub_1BC2B4490();
    v32[0] = sub_1BC12540C(v23, v24, (uint64_t *)&v29);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v18, v19, "Incorrect view model for MedicationDoseLogMedicationItem: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v22, -1, -1);
    MEMORY[0x1BCCEF3A0](v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_1BC12E3B4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  objc_class *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  double v27;
  double v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  double v33;
  _DWORD v35[4];
  objc_super v36;

  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v35 - v14;
  v16 = sub_1BC2B3B48();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView] = 0;
  v20 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item];
  v21 = (objc_class *)type metadata accessor for MedicationDoseLogMedicationCell();
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v36.receiver = v4;
  v36.super_class = v21;
  v22 = objc_msgSendSuper2(&v36, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC2B3B24();
  sub_1BC2B3B0C();
  v23 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  sub_1BC2B3B18();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v19, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v24 = v22;
  MEMORY[0x1BCCEE23C](v15);

  v25 = objc_msgSend(v24, sel_contentView);
  v26 = sub_1BC12DF5C();
  objc_msgSend(v25, sel_addSubview_, v26);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v29 = sub_1BC12DF5C();
  v30 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v29, sel_hk_alignConstraintsWithView_insets_, v30, v28, v28, v28, v28);

  v31 = sub_1BC12E714();
  if (v31)
  {
    v32 = v31;
    type metadata accessor for UILayoutPriority(0);
    v35[1] = 1065353216;
    v35[2] = 1148846080;
    sub_1BC0E519C((unint64_t *)&unk_1EDA0FCA8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
    sub_1BC2B39EC();
    LODWORD(v33) = v35[3];
    objc_msgSend(v32, sel_setPriority_, v33);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);

  }
  return v24;
}

void *sub_1BC12E714()
{
  id v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  v0 = sub_1BC12DF5C();
  v1 = objc_msgSend(v0, sel_constraints);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v2 = sub_1BC2B458C();

  if (v2 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1BC2B52D0())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCEE950](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      if (objc_msgSend(v5, sel_firstAttribute) == (id)4)
      {
        swift_bridgeObjectRelease_n();
        return v6;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  return 0;
}

id sub_1BC12E978()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationDoseLogMedicationCell);
}

uint64_t type metadata accessor for MedicationDoseLogMedicationCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC12E9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC12EA2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC12DFE0();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC12EA98(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC12EAE0;
}

uint64_t sub_1BC12EAE0(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC12DFE0();
  return result;
}

unint64_t sub_1BC12EB10()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC236B0C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

uint64_t sub_1BC12EB8C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC12EBF4()
{
  sub_1BC2B44D8();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC12EC3C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC12ECA0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC12ECD4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  return a2;
}

uint64_t sub_1BC12ED1C()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC236B0C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC236B0C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1BC12EE38(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(id *)(a1 + 16);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();

  v3 = *(id *)(a1 + 16);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();

  v4 = objc_msgSend(*(id *)(a1 + 16), sel_userSpecifiedName);
  if (v4)
  {
    v5 = v4;
    sub_1BC2B4460();

    v6 = sub_1BC2B44CC();
    v8 = v7;
    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      sub_1BC2B3740();
      v9 = *(id *)(a1 + 16);
      sub_1BC2B4BEC();
      v11 = v10;

      if (v11)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC2B44CC();
      v13 = v12;
      swift_bridgeObjectRelease();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      goto LABEL_11;
    }
  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v6 = sub_1BC2B3758();
  sub_1BC2B44CC();
  v15 = v14;
  swift_bridgeObjectRelease();
  if (!v15)
    swift_bridgeObjectRelease();
  sub_1BC2B44CC();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRetain();
LABEL_11:
    sub_1BC2B44CC();
    v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19)
    {
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      sub_1BC2B44FC();
    }
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_release();
  return v6;
}

void sub_1BC12F0F0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id *v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  CGFloat Width;
  id v32;
  CGRect v33;
  CGRect v34;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  v3 = objc_msgSend(v1, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v6 = objc_msgSend(v5, sel_fontDescriptor);
  v7 = objc_msgSend(v6, sel_fontDescriptorWithSymbolicTraits_, 0x8000);

  if (v7)
  {
    v8 = v7;
    objc_msgSend(v5, sel_pointSize);
    v9 = objc_msgSend(v4, sel_fontWithDescriptor_size_, v8);

    objc_msgSend(v0, sel_setFont_, v9);
    objc_msgSend(v0, sel_setNumberOfLines_, 2);
    objc_msgSend(v0, sel_setLineBreakMode_, 2);
    v10 = (void *)objc_opt_self();
    v11 = v0;
    v12 = objc_msgSend(v10, sel_mainScreen);
    objc_msgSend(v12, sel_bounds);
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;

    v33.origin.x = v14;
    v33.origin.y = v16;
    v33.size.width = v18;
    v33.size.height = v20;
    if (CGRectGetWidth(v33) >= 390.0)
    {
      v22 = objc_msgSend(v10, sel_mainScreen);
      objc_msgSend(v22, sel_bounds);
      v24 = v23;
      v26 = v25;
      v28 = v27;
      v30 = v29;

      v34.origin.x = v24;
      v34.origin.y = v26;
      v34.size.width = v28;
      v34.size.height = v30;
      Width = CGRectGetWidth(v34);
      v21 = (id *)MEMORY[0x1E0DC48C0];
      if (Width < 414.0)
        v21 = (id *)MEMORY[0x1E0DC48C8];
    }
    else
    {
      v21 = (id *)MEMORY[0x1E0DC48D0];
    }
    v32 = *v21;
    objc_msgSend(v11, sel_setMaximumContentSizeCategory_, v32);

    objc_msgSend(v11, sel_setLineBreakMode_, 4);
  }
  else
  {
    __break(1u);
  }
}

id sub_1BC12F414()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  CGFloat Width;
  id *v17;
  id v18;
  CGRect v20;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v3 = objc_msgSend(v1, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v0, sel_setFont_, v4);

  v5 = (void *)objc_opt_self();
  v6 = v0;
  v7 = objc_msgSend(v5, sel_mainScreen);
  objc_msgSend(v7, sel_bounds);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  v20.origin.x = v9;
  v20.origin.y = v11;
  v20.size.width = v13;
  v20.size.height = v15;
  Width = CGRectGetWidth(v20);
  v17 = (id *)MEMORY[0x1E0DC48C8];
  if (Width >= 414.0)
    v17 = (id *)MEMORY[0x1E0DC48C0];
  v18 = *v17;
  objc_msgSend(v6, sel_setMaximumContentSizeCategory_, v18);

  return v6;
}

BOOL sub_1BC12F61C()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v4;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v0 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v2 = sub_1BC2B44E4();
  swift_bridgeObjectRelease();
  if (v2 < 8)
  {
    v4 = sub_1BC2B44E4();
    swift_bridgeObjectRelease();
    return v4 > 7;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 1;
  }
}

uint64_t sub_1BC12F7A4(uint64_t a1)
{
  uint64_t inited;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double Width;
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  unint64_t v32;
  int64_t v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  void *v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  id v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  char v69;
  void *v70;
  uint64_t v71;
  CGRect v72;
  CGRect v73;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE90, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2BB4F0;
  v3 = (void *)*MEMORY[0x1E0DC48D8];
  v4 = (void *)*MEMORY[0x1E0DC48D0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC48D8];
  *(_QWORD *)(inited + 40) = v4;
  v5 = (void *)*MEMORY[0x1E0DC48C8];
  v6 = (void *)*MEMORY[0x1E0DC48C0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0DC48C8];
  *(_QWORD *)(inited + 56) = v6;
  v7 = (void *)*MEMORY[0x1E0DC48B8];
  *(_QWORD *)(inited + 64) = *MEMORY[0x1E0DC48B8];
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  LOBYTE(v6) = sub_1BC12F61C();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_mainScreen);
  objc_msgSend(v14, sel_bounds);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v72.origin.x = v16;
  v72.origin.y = v18;
  v72.size.width = v20;
  v72.size.height = v22;
  Width = CGRectGetWidth(v72);
  if ((v6 & 1) != 0)
  {
    if (Width < 414.0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    v71 = a1;
    v35 = (void *)*MEMORY[0x1E0DC4918];
    v36 = (void *)*MEMORY[0x1E0DC4900];
    v37 = (void *)*MEMORY[0x1E0DC48F8];
    v38 = (void *)*MEMORY[0x1E0DC48F0];
    v39 = (id)*MEMORY[0x1E0DC4920];
    v40 = v35;
    v41 = v36;
    v42 = v37;
    v43 = v38;
    inited = (uint64_t)sub_1BC0FA760((_QWORD *)1, 10, 1, (_QWORD *)inited);
    v45 = *(_QWORD *)(inited + 16);
    v44 = *(_QWORD *)(inited + 24);
    v46 = v45 + 1;
    v47 = v39;
    if (v45 >= v44 >> 1)
      inited = (uint64_t)sub_1BC0FA760((_QWORD *)(v44 > 1), v45 + 1, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v46;
    *(_QWORD *)(inited + 8 * v45 + 32) = v47;
    v48 = *(_QWORD *)(inited + 24);
    v49 = v45 + 2;
    v34 = v40;
    if ((uint64_t)(v45 + 2) > (uint64_t)(v48 >> 1))
      inited = (uint64_t)sub_1BC0FA760((_QWORD *)(v48 > 1), v45 + 2, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v49;
    *(_QWORD *)(inited + 8 * v46 + 32) = v34;
    v50 = *(_QWORD *)(inited + 24);
    v51 = v45 + 3;
    v52 = v41;
    if ((uint64_t)(v45 + 3) > (uint64_t)(v50 >> 1))
      inited = (uint64_t)sub_1BC0FA760((_QWORD *)(v50 > 1), v45 + 3, 1, (_QWORD *)inited);
    v70 = v47;
    *(_QWORD *)(inited + 16) = v51;
    *(_QWORD *)(inited + 8 * v49 + 32) = v52;
    v53 = *(_QWORD *)(inited + 24);
    v54 = v45 + 4;
    v55 = v42;
    v56 = v43;
    if ((uint64_t)(v45 + 4) > (uint64_t)(v53 >> 1))
      inited = (uint64_t)sub_1BC0FA760((_QWORD *)(v53 > 1), v45 + 4, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v54;
    *(_QWORD *)(inited + 8 * v51 + 32) = v55;
    v57 = *(_QWORD *)(inited + 24);
    v58 = v45 + 5;
    v59 = v56;
    if ((uint64_t)(v45 + 5) > (uint64_t)(v57 >> 1))
      inited = (uint64_t)sub_1BC0FA760((_QWORD *)(v57 > 1), v45 + 5, 1, (_QWORD *)inited);
    a1 = v71;
    *(_QWORD *)(inited + 16) = v58;
    *(_QWORD *)(inited + 8 * v54 + 32) = v59;

    goto LABEL_23;
  }
  if (Width < 390.0)
  {
    v25 = (void *)*MEMORY[0x1E0DC48F0];
    v26 = (id)*MEMORY[0x1E0DC48F8];
    v27 = v25;
    inited = (uint64_t)sub_1BC0FA760((_QWORD *)1, 7, 1, (_QWORD *)inited);
    v28 = *(_QWORD *)(inited + 16);
    v29 = *(_QWORD *)(inited + 24);
    v30 = v28 + 1;
    v31 = v26;
    if (v28 >= v29 >> 1)
      inited = (uint64_t)sub_1BC0FA760((_QWORD *)(v29 > 1), v28 + 1, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v30;
    *(_QWORD *)(inited + 8 * v28 + 32) = v31;
    v32 = *(_QWORD *)(inited + 24);
    v33 = v28 + 2;
    v34 = v27;
    if (v33 > (uint64_t)(v32 >> 1))
      inited = (uint64_t)sub_1BC0FA760((_QWORD *)(v32 > 1), v33, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v33;
    *(_QWORD *)(inited + 8 * v30 + 32) = v34;

    goto LABEL_23;
  }
  v60 = objc_msgSend(v13, sel_mainScreen);
  objc_msgSend(v60, sel_bounds);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;

  v73.origin.x = v62;
  v73.origin.y = v64;
  v73.size.width = v66;
  v73.size.height = v68;
  if (CGRectGetWidth(v73) < 414.0)
  {
    v34 = (id)*MEMORY[0x1E0DC48F0];
    inited = (uint64_t)sub_1BC0FA760((_QWORD *)1, 6, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = 6;
    *(_QWORD *)(inited + 72) = v34;
LABEL_23:

  }
  v69 = sub_1BC23E230(a1, inited);
  swift_bridgeObjectRelease();
  return v69 & 1;
}

uint64_t sub_1BC12FCD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  void *v11;
  void (*v12)(char *, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t inited;
  void **v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t result;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = sub_1BC2B23F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)(a1 + 16);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v6 = sub_1BC2B3410();
  v46 = v7;
  v47 = v6;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v8, sel_setDateStyle_, 0);
  objc_msgSend(v8, sel_setTimeStyle_, 1);
  v9 = a1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v5, v9, v2);
  v11 = (void *)sub_1BC2B2360();
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  v13 = objc_msgSend(v8, sel_stringFromDate_, v11);

  v14 = sub_1BC2B4460();
  v16 = v15;

  v17 = (void *)sub_1BC2B4430();
  v10(v5, v9, v2);
  v18 = (void *)sub_1BC2B2360();
  v12(v5, v2);
  v19 = objc_msgSend(v8, sel_hm_localizableTimeStringKeyWithPrefix_date_, v17, v18);

  sub_1BC2B4460();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v20 = (void *)qword_1EDA0FEF8;
  sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  v45 = xmmword_1BC2B92C0;
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92C0;
  v22 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  v23 = sub_1BC0F2748();
  v24 = v46;
  *(_QWORD *)(v21 + 32) = v47;
  *(_QWORD *)(v21 + 40) = v24;
  *(_QWORD *)(v21 + 96) = v22;
  *(_QWORD *)(v21 + 104) = v23;
  *(_QWORD *)(v21 + 64) = v23;
  *(_QWORD *)(v21 + 72) = v14;
  *(_QWORD *)(v21 + 80) = v16;
  v25 = v20;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  if (*(_QWORD *)(v21 + 16))
  {
    sub_1BC2B443C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v28 = objc_msgSend(v27, sel_fontDescriptor);
  v29 = objc_msgSend(v28, sel_fontDescriptorWithSymbolicTraits_, 32770);

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE80, (uint64_t (*)(uint64_t))sub_1BC1306C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v31 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(inited + 16) = v45;
  v32 = *v31;
  *(_QWORD *)(inited + 32) = *v31;
  v33 = (void *)objc_opt_self();
  v34 = v32;
  v35 = objc_msgSend(v33, sel_systemBlueColor);
  result = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  *(_QWORD *)(inited + 40) = v35;
  v37 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = result;
  *(_QWORD *)(inited + 72) = v37;
  if (v29)
  {
    v38 = v37;
    v39 = v29;
    objc_msgSend(v27, sel_pointSize);
    v40 = objc_msgSend(v26, sel_fontWithDescriptor_size_, v39);

    *(_QWORD *)(inited + 104) = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    *(_QWORD *)(inited + 80) = v40;
    sub_1BC1069C0(inited);
    v41 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v42 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC0E519C((unint64_t *)&qword_1EDA0FD20, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B897C);
    v43 = (void *)sub_1BC2B43AC();
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v41, sel_initWithString_attributes_, v42, v43);

    return (uint64_t)v44;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC130260(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void (*v12)(char *, _QWORD, uint64_t, uint64_t);
  id v13;
  char v14;
  id v15;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  CGFloat Width;
  id *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD v36[2];
  CGRect v37;

  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v36 - v4;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v6)
  {
    v7 = swift_retain();
    v8 = (void *)sub_1BC12FCD4(v7);
    v9 = sub_1BC12B998();
    objc_msgSend(v9, sel_setAttributedTitle_forState_, v8, 0);

    v10 = sub_1BC12B858();
    if (a1 == 2)
    {
      sub_1BC12D870(0, 0xD000000000000021, 0x80000001BC2C8990, (void *)0xD000000000000015);
      v11 = sub_1BC2B4EC8();
      v12 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
      v12(v5, 0, 1, v11);
      sub_1BC2B4EEC();

      v13 = sub_1BC12B718();
      v14 = 1;
    }
    else
    {
      sub_1BC12D870(a1 == 1, 0xD000000000000021, 0x80000001BC2C8990, (void *)0xD000000000000015);
      v11 = sub_1BC2B4EC8();
      v12 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
      v12(v5, 0, 1, v11);
      sub_1BC2B4EEC();

      v13 = sub_1BC12B718();
      v14 = 0;
    }
    sub_1BC12D870(v14, 0xD000000000000023, 0x80000001BC2C8960, (void *)0xD000000000000011);
    v12(v5, 0, 1, v11);
    sub_1BC2B4EEC();

    v15 = sub_1BC12C34C();
    if (sub_1BC12F61C())
    {
      v16 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v16, sel_bounds);
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;

      v37.origin.x = v18;
      v37.origin.y = v20;
      v37.size.width = v22;
      v37.size.height = v24;
      Width = CGRectGetWidth(v37);
      v26 = (id *)MEMORY[0x1E0DC48D0];
      if (Width < 414.0)
        v26 = (id *)MEMORY[0x1E0DC48D8];
    }
    else
    {
      v26 = (id *)MEMORY[0x1E0DC48C8];
    }
    v27 = *v26;
    objc_msgSend(v15, sel_setMaximumContentSizeCategory_, v27);

    v28 = objc_msgSend(*(id *)(v6 + 16), sel_userSpecifiedName);
    if (v28)
    {
      v29 = v28;
      sub_1BC2B4460();

      sub_1BC2B44CC();
      v31 = v30;
      swift_bridgeObjectRelease();
      if (v31)
      {
        swift_bridgeObjectRelease();
        v36[1] = *(_QWORD *)(v6 + 16);
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
        sub_1BC2B3740();
        if (v32)
        {
          sub_1BC2B44CC();
          v34 = v33;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v34)
          {
            v35 = sub_1BC12B604();
            objc_msgSend(v35, sel_setNumberOfLines_, 3);

          }
        }
      }
    }
    swift_release();

  }
}

void sub_1BC1306C0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDA0FD50)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDA0FD50);
  }
}

unint64_t sub_1BC130728()
{
  unint64_t result;

  result = qword_1EF3FB3E0;
  if (!qword_1EF3FB3E0)
  {
    sub_1BC0E7AD8(255, (unint64_t *)&unk_1EF3FA5C0);
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FB3E0);
  }
  return result;
}

uint64_t sub_1BC130770()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC130794(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC12D0C4(a1, a2, v2);
}

unint64_t sub_1BC13079C()
{
  unint64_t result;

  result = qword_1EF3FB3F0;
  if (!qword_1EF3FB3F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FB3F0);
  }
  return result;
}

void sub_1BC1307F0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___timeFormatter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___formStrengthLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___notesLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___doseAmountTimeButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackViewWithNotes] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedTakenStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView] = 0;
  v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel;
  *(_QWORD *)&v0[v1] = sub_1BC12C61C();
  v2 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v2] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t destroy for MedicationDoseLogMedicationItem()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_unknownObjectWeakDestroy();
}

_QWORD *initializeWithCopy for MedicationDoseLogMedicationItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithCopy for MedicationDoseLogMedicationItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  swift_unknownObjectWeakCopyAssign();
  a1[4] = a2[4];
  return a1;
}

uint64_t initializeWithTake for MedicationDoseLogMedicationItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

_QWORD *assignWithTake for MedicationDoseLogMedicationItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  swift_unknownObjectWeakTakeAssign();
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for MedicationDoseLogMedicationItem()
{
  return &type metadata for MedicationDoseLogMedicationItem;
}

unint64_t sub_1BC130B70()
{
  unint64_t result;

  result = qword_1EDA0F7E8;
  if (!qword_1EDA0F7E8)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BB630, &type metadata for MedicationDoseLogMedicationItem);
    atomic_store(result, (unint64_t *)&qword_1EDA0F7E8);
  }
  return result;
}

uint64_t sub_1BC130BB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    sub_1BC2B3E9C();
    sub_1BC0E008C(&qword_1EF3F9718, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    result = sub_1BC2B47E4();
    v1 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v13 >= v9)
      return sub_1BC1061A8();
    v14 = *(_QWORD *)(v17 + 8 * v13);
    v12 = v4 + 1;
    if (!v14)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        return sub_1BC1061A8();
      v14 = *(_QWORD *)(v17 + 8 * v12);
      if (!v14)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          return sub_1BC1061A8();
        v14 = *(_QWORD *)(v17 + 8 * v12);
        if (!v14)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            return sub_1BC1061A8();
          v14 = *(_QWORD *)(v17 + 8 * v12);
          if (!v14)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              return sub_1BC1061A8();
            v14 = *(_QWORD *)(v17 + 8 * v12);
            if (!v14)
            {
              v15 = v4 + 6;
              while (v9 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1BC1061A8();
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16)
      return sub_1BC1061A8();
    while (1)
    {
      sub_1BC2B3E90();
      result = swift_release();
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC2B512C())
      {
        sub_1BC2B3E9C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v23)
          continue;
      }
      return sub_1BC1061A8();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC130E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BC0F9CD4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC130FA8(uint64_t a1)
{
  return sub_1BC131D70(a1, (uint64_t (*)(void))sub_1BC0F9E08, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
}

uint64_t sub_1BC130FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BC0FA038(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC131134(unint64_t a1)
{
  return sub_1BC131BA0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC13567C);
}

uint64_t sub_1BC131140(unint64_t a1)
{
  return sub_1BC131BA0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC1358C0);
}

uint64_t sub_1BC13114C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v5 = v20 + v3;
    if (!__OFADD__(v20, v3))
      goto LABEL_5;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v4 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = v4 + v3;
  if (__OFADD__(v4, v3))
    goto LABEL_24;
LABEL_5:
  v6 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v6;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5)
    v10 = v5;
  swift_bridgeObjectRetain();
  v11 = MEMORY[0x1BCCEE95C](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *v1 = v11;
  v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (*(_QWORD *)(v9 + 24) >> 1) - v12;
  result = sub_1BC135B04(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v16 = v15;
  if (v15 < 1)
    goto LABEL_19;
  v17 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v18 = __OFADD__(v17, v15);
  v19 = v17 + v15;
  if (!v18)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
LABEL_19:
    swift_bridgeObjectRelease();
    if (v16 != v13)
      return sub_1BC2B45A4();
LABEL_26:
    sub_1BC106304(0, &qword_1EF3FA828, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    return sub_1BC2B45A4();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC131340(unint64_t a1)
{
  return sub_1BC131BA0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC135F50);
}

uint64_t sub_1BC13134C(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_1BC0FAC84(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_1BC136EBC((uint64_t)v42, &v4[4 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v15 = v4[2];
    v16 = __OFADD__(v15, result);
    v17 = v15 + result;
    if (v16)
    {
      __break(1u);
      goto LABEL_47;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_1BC1061A8();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v41 = v42[0];
  v13 = v43;
  v40 = v42[1];
  v14 = v44;
  if (v45)
  {
    v18 = (v45 - 1) & v45;
    v19 = v44;
    v20 = __clz(__rbit64(v45)) | (v44 << 6);
    v39 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  v36 = v14 + 1;
  if (__OFADD__(v14, 1))
    goto LABEL_66;
  v39 = (unint64_t)(v13 + 64) >> 6;
  if (v36 >= v39)
    goto LABEL_13;
  v37 = *(_QWORD *)(v40 + 8 * v36);
  v19 = v14 + 1;
  if (!v37)
  {
    v19 = v14 + 2;
    if (v14 + 2 >= v39)
      goto LABEL_13;
    v37 = *(_QWORD *)(v40 + 8 * v19);
    if (!v37)
    {
      v19 = v14 + 3;
      if (v14 + 3 >= v39)
        goto LABEL_13;
      v37 = *(_QWORD *)(v40 + 8 * v19);
      if (!v37)
      {
        v19 = v14 + 4;
        if (v14 + 4 >= v39)
          goto LABEL_13;
        v37 = *(_QWORD *)(v40 + 8 * v19);
        if (!v37)
        {
          v19 = v14 + 5;
          if (v14 + 5 >= v39)
            goto LABEL_13;
          v37 = *(_QWORD *)(v40 + 8 * v19);
          if (!v37)
          {
            v38 = v14 + 6;
            do
            {
              if (v39 == v38)
                goto LABEL_13;
              v37 = *(_QWORD *)(v40 + 8 * v38++);
            }
            while (!v37);
            v19 = v38 - 1;
          }
        }
      }
    }
  }
  v18 = (v37 - 1) & v37;
  v20 = __clz(__rbit64(v37)) + (v19 << 6);
LABEL_18:
  v21 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 32 * v20);
  v22 = *v21;
  v23 = v21[1];
  v24 = v21[2];
  v25 = v21[3];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v26 = v4[3];
    v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v2 + 1)
      break;
    if (v2 < v27)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_1BC0FAC84((_QWORD *)(v26 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v27 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v27)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v28 = &v4[4 * v2 + 4];
    *v28 = v22;
    v28[1] = v23;
    v28[2] = v24;
    v28[3] = v25;
    ++v2;
    if (v18)
    {
      v29 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v30 = v29 | (v19 << 6);
      goto LABEL_41;
    }
    v31 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v31 >= v39)
      goto LABEL_45;
    v32 = *(_QWORD *)(v40 + 8 * v31);
    v33 = v19 + 1;
    if (!v32)
    {
      v33 = v19 + 2;
      if (v19 + 2 >= v39)
        goto LABEL_45;
      v32 = *(_QWORD *)(v40 + 8 * v33);
      if (!v32)
      {
        v33 = v19 + 3;
        if (v19 + 3 >= v39)
          goto LABEL_45;
        v32 = *(_QWORD *)(v40 + 8 * v33);
        if (!v32)
        {
          v33 = v19 + 4;
          if (v19 + 4 >= v39)
            goto LABEL_45;
          v32 = *(_QWORD *)(v40 + 8 * v33);
          if (!v32)
          {
            v33 = v19 + 5;
            if (v19 + 5 >= v39)
              goto LABEL_45;
            v32 = *(_QWORD *)(v40 + 8 * v33);
            if (!v32)
            {
              v34 = v19 + 6;
              while (v39 != v34)
              {
                v32 = *(_QWORD *)(v40 + 8 * v34++);
                if (v32)
                {
                  v33 = v34 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v18 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v33 << 6);
    v19 = v33;
LABEL_41:
    v35 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 32 * v30);
    v22 = *v35;
    v23 = v35[1];
    v24 = v35[2];
    v25 = v35[3];
    if (v2 >= v27)
    {
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1BC131764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BC0FADA4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1318BC(unint64_t a1)
{
  return sub_1BC131BA0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC136194);
}

uint64_t sub_1BC1318C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BC0FAC84(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC131A18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BC0FA658(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  sub_1BC0E8778(0, (unint64_t *)&qword_1EF3F8998);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC131B88(unint64_t a1)
{
  return sub_1BC131BA0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC13661C);
}

uint64_t sub_1BC131B94(unint64_t a1)
{
  return sub_1BC131BA0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC136860);
}

uint64_t sub_1BC131BA0(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1BCCEE95C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1BC2B45A4();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC131D5C(uint64_t a1)
{
  return sub_1BC131D70(a1, (uint64_t (*)(void))sub_1BC0FB368, (uint64_t (*)(_QWORD))sub_1BC0FB470);
}

uint64_t sub_1BC131D70(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  v12 = (*(_QWORD *)(v5 + 24) >> 1) - v11;
  v13 = a3(0);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * v11;
  v18 = a1 + v15;
  v19 = v16 * v10;
  v20 = v17 + v19;
  v21 = v18 + v19;
  if (v18 < v20 && v17 < v21)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v10);
  v25 = v23 + v10;
  if (!v24)
  {
    *(_QWORD *)(v5 + 16) = v25;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t InteractionMedicationItem.interactionResults.getter()
{
  return swift_retain();
}

uint64_t InteractionMedicationItem.stackedMemojiDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 24, a1);
}

uint64_t InteractionMedicationItem.firstItemName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionMedicationItem.firstItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 80, a1);
}

uint64_t InteractionMedicationItem.secondItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 120, a1);
}

uint64_t InteractionMedicationItem.secondItemName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionMedicationItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC131FCC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v5 = (id)MEMORY[0x1BCCEE950](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v2 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v6, sel_uniqueIdentifier);

    v8 = sub_1BC2B4460();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t InteractionMedicationItem.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:secondItemName:secondItemDetailsProviding:healthStore:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, __int128 *a8, __int128 a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  v19 = __swift_mutable_project_boxed_opaque_existential_1(a2, v18);
  v20 = sub_1BC137AAC(a1, v19, a3, a4, a5, a6, a7, a8, a9, a10, v10, v18, v17);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v20;
}

uint64_t InteractionMedicationItem.init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:secondItemName:secondItemDetailsProviding:healthStore:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, __int128 *a8, __int128 a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;

  v26 = a7;
  v27 = a8;
  v25 = a6;
  v24 = a9;
  v17 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v18 = __swift_mutable_project_boxed_opaque_existential_1(a2, v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  v22 = sub_1BC137684(a1, (uint64_t)v20, a3, a4, a5, v25, v26, v27, v24, a10, v10, v17, v16);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v22;
}

uint64_t sub_1BC1322E8()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;

  v1 = (unint64_t *)(*(_QWORD *)(v0 + 16) + 16);
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  sub_1BC13114C(v2);
  sub_1BC13307C(v1);
  return swift_endAccess();
}

uint64_t InteractionMedicationItem.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_bridgeObjectRetain();
  sub_1BC130BB4(v1);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t InteractionMedicationItem.__deallocating_deinit()
{
  InteractionMedicationItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC132414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC136AA8(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1324F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  sub_1BC2B5450();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC136AA8((uint64_t)v4, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1325E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC132614()
{
  return sub_1BC131FCC();
}

uint64_t sub_1BC132634(_QWORD **a1, _QWORD **a2)
{
  return _s19HealthMedicationsUI25InteractionMedicationItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BC132640()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 256))();
}

uint64_t sub_1BC132668(uint64_t a1)
{
  return sub_1BC132414(a1);
}

uint64_t sub_1BC132688()
{
  _BYTE v1[72];

  sub_1BC2B5450();
  sub_1BC132414((uint64_t)v1);
  return sub_1BC2B548C();
}

uint64_t Array<A>.sortedByName()(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;

  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v1 = (uint64_t)sub_1BC133418(v3, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC135D48);
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v4 = v1;
  sub_1BC133100(&v4);
  return v4;
}

uint64_t Array<A>.deduped()(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v1 = a1;
  v52 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_95;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = 0;
    while (1)
    {
      v5 = v1 >> 62;
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        v26 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (!v26)
          goto LABEL_92;
        swift_bridgeObjectRetain();
        v27 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (!v27)
        {
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          swift_bridgeObjectRetain();
          v2 = sub_1BC2B52D0();
          goto LABEL_3;
        }
      }
      else if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_92;
      }
      if ((v1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCEE950](0, v1);
        if (v5)
          goto LABEL_48;
      }
      else
      {
        if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_94;
        v6 = *(_QWORD *)(v1 + 32);
        swift_retain();
        if (v5)
        {
LABEL_48:
          swift_bridgeObjectRetain();
          v28 = sub_1BC2B52D0();
          swift_bridgeObjectRelease();
          if (!v28)
          {
LABEL_97:
            __break(1u);
LABEL_98:
            swift_bridgeObjectRelease();
            __break(1u);
LABEL_99:
            swift_bridgeObjectRelease();
            __break(1u);
LABEL_100:
            result = sub_1BC2B5318();
            __break(1u);
            return result;
          }
          goto LABEL_11;
        }
      }
      if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_97;
LABEL_11:
      sub_1BC137B9C(0, 1);
      v1 = a1;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v29 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (!v29)
          goto LABEL_74;
        v48 = v4;
        swift_bridgeObjectRetain_n();
        v30 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        v50 = v30;
        if (v30)
          goto LABEL_14;
        v8 = v3;
LABEL_53:
        swift_bridgeObjectRelease();
        v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v51 = MEMORY[0x1E0DEE9D8];
        v31 = v8[2];
        if (v31)
        {
          swift_bridgeObjectRetain();
          while (1)
          {
            if (v31 > v8[2])
            {
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
              goto LABEL_87;
            }
            v32 = v8[v31 + 3];
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
              || (a1 & 0x8000000000000000) != 0
              || (a1 & 0x4000000000000000) != 0)
            {
              sub_1BC134FF8(a1);
            }
            v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v32 >= v33)
              goto LABEL_85;
            v34 = v33 - 1;
            v35 = v33 - 1 - v32;
            if (v35 < 0)
              goto LABEL_100;
            v36 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v32 + 0x20);
            memmove((void *)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v32 + 32), (const void *)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v32 + 40), 8 * v35);
            *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v34;
            sub_1BC2B45A4();
            v37 = *(_QWORD *)(v36 + 16);
            swift_retain();
            swift_release();
            swift_beginAccess();
            v38 = *(_QWORD *)(v37 + 16);
            if (v38 >> 62)
            {
              swift_bridgeObjectRetain_n();
              v42 = sub_1BC2B52D0();
              swift_bridgeObjectRelease();
              if (!v42)
              {
LABEL_96:
                swift_bridgeObjectRelease();
                __break(1u);
                goto LABEL_97;
              }
            }
            else
            {
              v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v39)
                goto LABEL_96;
            }
            if ((v38 & 0xC000000000000001) != 0)
            {
              MEMORY[0x1BCCEE950](0, v38);
            }
            else
            {
              if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_86;
              v40 = *(id *)(v38 + 32);
            }
            swift_release();
            v41 = swift_bridgeObjectRelease();
            MEMORY[0x1BCCEDCF0](v41);
            if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BC2B45C8();
            --v31;
            sub_1BC2B4604();
            sub_1BC2B45A4();
            if (!v31)
            {
              swift_bridgeObjectRelease();
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        v44 = (unint64_t *)(*(_QWORD *)(v6 + 16) + 16);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        sub_1BC13114C(v51);
        v4 = v48;
        sub_1BC13307C(v44);
        swift_endAccess();
        swift_bridgeObjectRelease();
        v45 = swift_retain();
        MEMORY[0x1BCCEDCF0](v45);
        if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
        swift_bridgeObjectRelease();
        swift_release();
        v1 = a1;
        if (!(a1 >> 62))
          goto LABEL_77;
LABEL_82:
        swift_bridgeObjectRetain();
        v46 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (!v46)
        {
LABEL_87:
          v3 = (_QWORD *)v52;
          break;
        }
      }
      else
      {
        v50 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v50)
        {
          v48 = v4;
          swift_bridgeObjectRetain();
LABEL_14:
          v49 = v6;
          v7 = 4;
          v8 = v3;
          while (1)
          {
            v9 = v7 - 4;
            if ((a1 & 0xC000000000000001) != 0)
            {
              v10 = MEMORY[0x1BCCEE950](v7 - 4, v1);
              v11 = v7 - 3;
              if (__OFADD__(v9, 1))
                goto LABEL_89;
            }
            else
            {
              v10 = *(_QWORD *)(v1 + 8 * v7);
              swift_retain();
              v11 = v7 - 3;
              if (__OFADD__(v9, 1))
              {
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
                goto LABEL_93;
              }
            }
            v12 = *(_QWORD *)(v6 + 16);
            v13 = *(_QWORD *)(v10 + 16);
            swift_beginAccess();
            v14 = *(_QWORD *)(v13 + 16);
            if (v14 >> 62)
            {
              swift_bridgeObjectRetain_n();
              swift_retain();
              v24 = sub_1BC2B52D0();
              swift_bridgeObjectRelease();
              if (!v24)
                goto LABEL_98;
            }
            else
            {
              v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              swift_retain();
              if (!v15)
                goto LABEL_98;
            }
            if ((v14 & 0xC000000000000001) != 0)
            {
              v16 = (_QWORD *)MEMORY[0x1BCCEE950](0, v14);
            }
            else
            {
              if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_90;
              v16 = *(id *)(v14 + 32);
            }
            v1 = (unint64_t)v16;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v17 = *(_QWORD *)(v12 + 16);
            if (v17 >> 62)
            {
              swift_bridgeObjectRetain_n();
              v25 = sub_1BC2B52D0();
              swift_bridgeObjectRelease();
              if (!v25)
                goto LABEL_99;
            }
            else
            {
              v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v18)
                goto LABEL_99;
            }
            if ((v17 & 0xC000000000000001) != 0)
            {
              v19 = (id)MEMORY[0x1BCCEE950](0, v17);
            }
            else
            {
              if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_91;
              v19 = *(id *)(v17 + 32);
            }
            v20 = v19;
            swift_bridgeObjectRelease();
            v21 = objc_msgSend(v20, sel_hasSameAncestorIdentifiersAsInteractionResult_, v1);
            swift_release();

            if (v21)
            {
              v6 = v49;
              v1 = a1;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v8 = sub_1BC0FA8A8(0, v8[2] + 1, 1, v8);
              v23 = v8[2];
              v22 = v8[3];
              if (v23 >= v22 >> 1)
                v8 = sub_1BC0FA8A8((_QWORD *)(v22 > 1), v23 + 1, 1, v8);
              v8[2] = v23 + 1;
              v8[v23 + 4] = v9;
            }
            else
            {
              v6 = v49;
              v1 = a1;
            }
            swift_release();
            ++v7;
            if (v11 == v50)
              goto LABEL_53;
          }
        }
LABEL_74:
        v43 = swift_retain();
        MEMORY[0x1BCCEDCF0](v43);
        if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
        swift_release();
        if (a1 >> 62)
          goto LABEL_82;
LABEL_77:
        if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_87;
      }
    }
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

Swift::Void __swiftcall InteractionMedicationItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  sub_1BC137938(in);
}

uint64_t InteractionMedicationItem.deselectionBehavior(in:)()
{
  uint64_t v0;

  type metadata accessor for InteractionMedicationItem();
  sub_1BC0E008C(&qword_1EF3FA638, v0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationItem, (uint64_t)&protocol conformance descriptor for InteractionMedicationItem);
  return sub_1BC2B2B70();
}

void sub_1BC132FF8(uint64_t a1, void *a2)
{
  sub_1BC137938(a2);
}

uint64_t sub_1BC133020()
{
  type metadata accessor for InteractionMedicationItem();
  return sub_1BC2B2B70();
}

uint64_t sub_1BC13307C(unint64_t *a1)
{
  unint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_1BC134FF8(v2);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1BC13364C(v6);
  return sub_1BC2B45A4();
}

uint64_t sub_1BC133100(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC26E254();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC133E38(v6);
  return sub_1BC2B5210();
}

size_t sub_1BC133178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  size_t result;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC1381C0(0, &qword_1EF3FA268, 255, (uint64_t (*)(uint64_t))sub_1BC118890, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC118890();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v7);
  if (v5)
  {
    if (result - v6 != 0x8000000000000000 || v5 != -1)
    {
      v7[2] = v1;
      v7[3] = 2 * ((uint64_t)(result - v6) / v5);
      v10 = sub_1BC136BBC(&v11, (uint64_t)v7 + v6, v1, a1);
      swift_bridgeObjectRetain();
      sub_1BC1061A8();
      if (v10 == v1)
        return (size_t)v7;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC1332A8(unint64_t a1)
{
  return sub_1BC133418(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC1358C0);
}

_QWORD *sub_1BC1332B4(unint64_t a1)
{
  return sub_1BC133418(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC135D48);
}

size_t sub_1BC1332C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC1381C0(0, &qword_1EF3F9160, 255, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = *(_QWORD *)(type metadata accessor for Dosage() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_1BC1370D4(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1BC1061A8();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1333F0(uint64_t a1)
{
  return sub_1BC133530(a1, (unint64_t *)&qword_1EDA0FD88, 0x1E0D2C460, (unint64_t *)&unk_1EDA0FD90);
}

_QWORD *sub_1BC13340C(unint64_t a1)
{
  return sub_1BC133418(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC1363D8);
}

_QWORD *sub_1BC133418(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1BC0E7940();
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1BC133514(uint64_t a1)
{
  return sub_1BC133530(a1, &qword_1EF3FA790, 0x1E0CB6C18, &qword_1EF3FA798);
}

uint64_t sub_1BC133530(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = sub_1BC2B5108();
    if (v8)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v8 <= 0)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BC0E7940();
    v9 = (_QWORD *)swift_allocObject();
    v10 = _swift_stdlib_malloc_size(v9);
    v11 = v10 - 32;
    if (v10 < 32)
      v11 = v10 - 25;
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1BC13738C(&v14, v9 + 4, v8, a1, a2, a3, a4);
  result = sub_1BC1061A8();
  if (v12 == (_QWORD *)v8)
    return (uint64_t)v9;
  __break(1u);
  return result;
}

void sub_1BC13364C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;

  v3 = a1[1];
  v4 = sub_1BC2B5390();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_131;
    if (v3)
      sub_1BC134660(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_139;
  v102 = v4;
  v99 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v113 = MEMORY[0x1E0DEE9D8];
    v111 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_97:
      if (v11 >= 2)
      {
        v93 = *v99;
        do
        {
          v94 = v11 - 2;
          if (v11 < 2)
            goto LABEL_126;
          if (!v93)
            goto LABEL_138;
          v95 = *(_QWORD *)&v8[16 * v94 + 32];
          v96 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1BC1348B4((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), v93 + 8 * v96, v111);
          if (v1)
            break;
          if (v96 < v95)
            goto LABEL_127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1BC26E1A0((uint64_t)v8);
          if (v94 >= *((_QWORD *)v8 + 2))
            goto LABEL_128;
          v97 = &v8[16 * v94 + 32];
          *(_QWORD *)v97 = v95;
          *((_QWORD *)v97 + 1) = v96;
          v98 = *((_QWORD *)v8 + 2);
          if (v11 > v98)
            goto LABEL_129;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((_QWORD *)v8 + 2) = v98 - 1;
          v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_108:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC2B45A4();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
    v7 = sub_1BC2B45F8();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v111 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v113 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v100 = *a1 - 8;
  v101 = *a1 + 16;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v107 = v3;
  v112 = *a1;
  while (1)
  {
    v12 = v9++;
    v108 = v12;
    if (v9 < v3)
    {
      v103 = v8;
      v13 = *(void **)(v10 + 8 * v12);
      v14 = *(id *)(v10 + 8 * v9);
      v15 = v13;
      v16 = objc_msgSend(v14, sel_identifier);
      v109 = objc_msgSend(v16, sel_rawIdentifier);

      v17 = objc_msgSend(v15, sel_identifier);
      v105 = objc_msgSend(v17, sel_rawIdentifier);

      v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        v18 = (id *)(v101 + 8 * v12);
        while (1)
        {
          v19 = *(v18 - 1);
          v20 = *v18;
          v21 = v19;
          v22 = objc_msgSend(v20, sel_identifier);
          v23 = objc_msgSend(v22, sel_rawIdentifier);

          v24 = objc_msgSend(v21, sel_identifier);
          v25 = objc_msgSend(v24, sel_rawIdentifier);

          if ((uint64_t)v109 < (uint64_t)v105 == (uint64_t)v23 >= (uint64_t)v25)
            break;
          ++v9;
          ++v18;
          v3 = v107;
          if (v107 == v9)
          {
            v9 = v107;
            goto LABEL_22;
          }
        }
        v3 = v107;
LABEL_22:
        v12 = v108;
      }
      v8 = v103;
      v10 = v112;
      if ((uint64_t)v109 < (uint64_t)v105)
      {
        if (v9 < v12)
          goto LABEL_132;
        if (v12 < v9)
        {
          v26 = (uint64_t *)(v100 + 8 * v9);
          v27 = v9;
          v28 = v12;
          v29 = (uint64_t *)(v112 + 8 * v12);
          do
          {
            if (v28 != --v27)
            {
              if (!v112)
                goto LABEL_137;
              v30 = *v29;
              *v29 = *v26;
              *v26 = v30;
            }
            ++v28;
            --v26;
            ++v29;
          }
          while (v28 < v27);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_130;
      if (v9 - v12 < v102)
        break;
    }
LABEL_49:
    if (v9 < v12)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BC26DEB8(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v44 = *((_QWORD *)v8 + 2);
    v43 = *((_QWORD *)v8 + 3);
    v11 = v44 + 1;
    v10 = v112;
    if (v44 >= v43 >> 1)
    {
      v92 = sub_1BC26DEB8((char *)(v43 > 1), v44 + 1, 1, v8);
      v10 = v112;
      v8 = v92;
    }
    *((_QWORD *)v8 + 2) = v11;
    v45 = v8 + 32;
    v46 = &v8[16 * v44 + 32];
    *(_QWORD *)v46 = v12;
    *((_QWORD *)v46 + 1) = v9;
    if (v44)
    {
      while (1)
      {
        v47 = v11 - 1;
        if (v11 >= 4)
        {
          v52 = &v45[16 * v11];
          v53 = *((_QWORD *)v52 - 8);
          v54 = *((_QWORD *)v52 - 7);
          v58 = __OFSUB__(v54, v53);
          v55 = v54 - v53;
          if (v58)
            goto LABEL_114;
          v57 = *((_QWORD *)v52 - 6);
          v56 = *((_QWORD *)v52 - 5);
          v58 = __OFSUB__(v56, v57);
          v50 = v56 - v57;
          v51 = v58;
          if (v58)
            goto LABEL_115;
          v59 = v11 - 2;
          v60 = &v45[16 * v11 - 32];
          v62 = *(_QWORD *)v60;
          v61 = *((_QWORD *)v60 + 1);
          v58 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          if (v58)
            goto LABEL_117;
          v58 = __OFADD__(v50, v63);
          v64 = v50 + v63;
          if (v58)
            goto LABEL_120;
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            v58 = __OFSUB__(v83, v84);
            v85 = v83 - v84;
            if (v58)
              goto LABEL_124;
            v75 = v50 < v85;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v76 = *((_QWORD *)v8 + 4);
            v77 = *((_QWORD *)v8 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
            goto LABEL_80;
          }
          v49 = *((_QWORD *)v8 + 4);
          v48 = *((_QWORD *)v8 + 5);
          v58 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          v51 = v58;
        }
        if ((v51 & 1) != 0)
          goto LABEL_116;
        v59 = v11 - 2;
        v65 = &v45[16 * v11 - 32];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v68 = __OFSUB__(v66, v67);
        v69 = v66 - v67;
        v70 = v68;
        if (v68)
          goto LABEL_119;
        v71 = &v45[16 * v47];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v58 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v58)
          goto LABEL_122;
        if (__OFADD__(v69, v74))
          goto LABEL_123;
        if (v69 + v74 >= v50)
        {
          v75 = v50 < v74;
LABEL_86:
          if (v75)
            v47 = v59;
          goto LABEL_88;
        }
LABEL_80:
        if ((v70 & 1) != 0)
          goto LABEL_118;
        v78 = &v45[16 * v47];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v58 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v58)
          goto LABEL_121;
        if (v81 < v69)
          goto LABEL_14;
LABEL_88:
        v86 = v47 - 1;
        if (v47 - 1 >= v11)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10)
          goto LABEL_136;
        v87 = &v45[16 * v86];
        v88 = *(_QWORD *)v87;
        v89 = &v45[16 * v47];
        v90 = *((_QWORD *)v89 + 1);
        sub_1BC1348B4((id *)(v10 + 8 * *(_QWORD *)v87), (id *)(v10 + 8 * *(_QWORD *)v89), v10 + 8 * v90, v111);
        if (v1)
          goto LABEL_108;
        if (v90 < v88)
          goto LABEL_111;
        if (v47 > *((_QWORD *)v8 + 2))
          goto LABEL_112;
        *(_QWORD *)v87 = v88;
        *(_QWORD *)&v45[16 * v86 + 8] = v90;
        v91 = *((_QWORD *)v8 + 2);
        if (v47 >= v91)
          goto LABEL_113;
        v11 = v91 - 1;
        memmove(&v45[16 * v47], v89 + 16, 16 * (v91 - 1 - v47));
        *((_QWORD *)v8 + 2) = v91 - 1;
        v10 = v112;
        if (v91 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v107;
    if (v9 >= v107)
      goto LABEL_97;
  }
  if (__OFADD__(v12, v102))
    goto LABEL_133;
  if (v12 + v102 >= v3)
    v31 = v3;
  else
    v31 = v12 + v102;
  if (v31 >= v12)
  {
    if (v9 != v31)
    {
      v104 = v8;
      v106 = v31;
      v32 = v100 + 8 * v9;
      do
      {
        v33 = *(void **)(v10 + 8 * v9);
        v34 = v12;
        v110 = v32;
        while (1)
        {
          v35 = *(void **)v32;
          v36 = v33;
          v37 = v35;
          v38 = objc_msgSend(v36, sel_identifier);
          v39 = objc_msgSend(v38, sel_rawIdentifier);

          v40 = objc_msgSend(v37, sel_identifier);
          v41 = objc_msgSend(v40, sel_rawIdentifier);

          if ((uint64_t)v39 >= (uint64_t)v41)
            break;
          v10 = v112;
          if (!v112)
            goto LABEL_135;
          v42 = *(void **)v32;
          v33 = *(void **)(v32 + 8);
          *(_QWORD *)v32 = v33;
          *(_QWORD *)(v32 + 8) = v42;
          v32 -= 8;
          if (v9 == ++v34)
            goto LABEL_42;
        }
        v10 = v112;
LABEL_42:
        ++v9;
        v12 = v108;
        v32 = v110 + 8;
      }
      while (v9 != v106);
      v9 = v106;
      v8 = v104;
    }
    goto LABEL_49;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  sub_1BC2B52AC();
  __break(1u);
}

uint64_t sub_1BC133E38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  BOOL v25;
  BOOL v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;

  v2 = v1;
  v4 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_166;
    if (v4)
      return sub_1BC134794(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_174;
  v102 = result;
  v105 = v4;
  v100 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    v111 = MEMORY[0x1E0DEE9D8];
    v109 = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_132:
      if (v13 >= 2)
      {
        v90 = *v100;
        do
        {
          v91 = v13 - 2;
          if (v13 < 2)
            goto LABEL_161;
          if (!v90)
            goto LABEL_173;
          v92 = v9;
          v93 = v9 + 32;
          v94 = *(_QWORD *)&v9[16 * v91 + 32];
          v95 = *(_QWORD *)&v9[16 * v13 + 24];
          sub_1BC134C70((char *)(v90 + 8 * v94), (char *)(v90 + 8 * *(_QWORD *)&v93[16 * v13 - 16]), v90 + 8 * v95, v109);
          if (v2)
            break;
          if (v95 < v94)
            goto LABEL_162;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v92 = sub_1BC26E1A0((uint64_t)v92);
          if (v91 >= *((_QWORD *)v92 + 2))
            goto LABEL_163;
          v96 = &v92[16 * v91 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v92 + 2);
          if (v13 > v97)
            goto LABEL_164;
          v9 = v92;
          memmove(&v92[16 * v13 + 16], &v92[16 * v13 + 32], 16 * (v97 - v13));
          *((_QWORD *)v92 + 2) = v97 - 1;
          v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_143:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC2B45A4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v6 >> 1;
    type metadata accessor for InteractionMedicationItem();
    v8 = sub_1BC2B45F8();
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v109 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v111 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v101 = *a1 - 8;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = v105;
  v110 = *a1;
  while (1)
  {
    v14 = v10;
    v15 = v10 + 1;
    if (v10 + 1 >= v12)
      goto LABEL_56;
    v16 = *(_QWORD **)(v11 + 8 * v15);
    v104 = v10;
    v17 = *(_QWORD **)(v11 + 8 * v10);
    v18 = v16[8] == v17[8] && v16[9] == v17[9];
    if (!v18 && (sub_1BC2B53CC() & 1) == 0)
      break;
    if (v16[20] != v17[20] || v16[21] != v17[21])
      break;
    v20 = v104 + 2;
    if (v104 + 2 < v105)
    {
      v106 = 0;
      v11 = v110;
      goto LABEL_32;
    }
    v15 = v104 + 2;
    v11 = v110;
    v14 = v104;
LABEL_56:
    if (v15 < v105)
    {
      if (__OFSUB__(v15, v14))
        goto LABEL_165;
      if (v15 - v14 < v102)
      {
        if (__OFADD__(v14, v102))
          goto LABEL_167;
        v32 = v105;
        if (v14 + v102 < v105)
          v32 = v14 + v102;
        if (v32 < v14)
        {
LABEL_168:
          __break(1u);
          goto LABEL_169;
        }
        if (v15 != v32)
        {
          v103 = v32;
          v98 = v9;
          v99 = v2;
          v33 = (_QWORD *)(v101 + 8 * v15);
          do
          {
            v34 = *(_QWORD **)(v11 + 8 * v15);
            v35 = v14;
            v107 = v33;
            while (1)
            {
              v36 = *v33;
              v37 = v34[8] == *(_QWORD *)(*v33 + 64) && v34[9] == *(_QWORD *)(*v33 + 72);
              if ((v37 || (sub_1BC2B53CC() & 1) != 0)
                && v34[20] == *(_QWORD *)(v36 + 160)
                && v34[21] == *(_QWORD *)(v36 + 168))
              {
                break;
              }
              if ((sub_1BC2B53CC() & 1) == 0)
              {
                v11 = v110;
                goto LABEL_66;
              }
              v11 = v110;
              if (!v110)
                goto LABEL_170;
              v39 = *v33;
              v34 = (_QWORD *)v33[1];
              *v33 = v34;
              v33[1] = v39;
              --v33;
              if (v15 == ++v35)
                goto LABEL_66;
            }
            v11 = v110;
LABEL_66:
            ++v15;
            v33 = v107 + 1;
          }
          while (v15 != v103);
          v15 = v103;
          v9 = v98;
          v2 = v99;
        }
      }
    }
    if (v15 < v14)
      goto LABEL_160;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1BC26DEB8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v41 = *((_QWORD *)v9 + 2);
    v40 = *((_QWORD *)v9 + 3);
    v13 = v41 + 1;
    v11 = v110;
    if (v41 >= v40 >> 1)
    {
      v89 = sub_1BC26DEB8((char *)(v40 > 1), v41 + 1, 1, v9);
      v11 = v110;
      v9 = v89;
    }
    *((_QWORD *)v9 + 2) = v13;
    v42 = v9 + 32;
    v43 = &v9[16 * v41 + 32];
    *(_QWORD *)v43 = v14;
    *((_QWORD *)v43 + 1) = v15;
    v108 = v15;
    if (v41)
    {
      while (1)
      {
        v44 = v13 - 1;
        if (v13 >= 4)
        {
          v49 = &v42[16 * v13];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_149;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_150;
          v56 = v13 - 2;
          v57 = &v42[16 * v13 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_152;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_155;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_159;
            v72 = v47 < v82;
            goto LABEL_121;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v73 = *((_QWORD *)v9 + 4);
            v74 = *((_QWORD *)v9 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_115;
          }
          v46 = *((_QWORD *)v9 + 4);
          v45 = *((_QWORD *)v9 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_151;
        v56 = v13 - 2;
        v62 = &v42[16 * v13 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_154;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_157;
        if (__OFADD__(v66, v71))
          goto LABEL_158;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_121:
          if (v72)
            v44 = v56;
          goto LABEL_123;
        }
LABEL_115:
        if ((v67 & 1) != 0)
          goto LABEL_153;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_156;
        if (v78 < v66)
          goto LABEL_14;
LABEL_123:
        v83 = v44 - 1;
        if (v44 - 1 >= v13)
        {
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
          goto LABEL_168;
        }
        if (!v11)
          goto LABEL_171;
        v84 = &v42[16 * v83];
        v85 = *(_QWORD *)v84;
        v86 = &v42[16 * v44];
        v87 = *((_QWORD *)v86 + 1);
        sub_1BC134C70((char *)(v11 + 8 * *(_QWORD *)v84), (char *)(v11 + 8 * *(_QWORD *)v86), v11 + 8 * v87, v109);
        if (v2)
          goto LABEL_143;
        if (v87 < v85)
          goto LABEL_146;
        if (v44 > *((_QWORD *)v9 + 2))
          goto LABEL_147;
        *(_QWORD *)v84 = v85;
        *(_QWORD *)&v42[16 * v83 + 8] = v87;
        v88 = *((_QWORD *)v9 + 2);
        if (v44 >= v88)
          goto LABEL_148;
        v13 = v88 - 1;
        memmove(&v42[16 * v44], v86 + 16, 16 * (v88 - 1 - v44));
        *((_QWORD *)v9 + 2) = v88 - 1;
        v11 = v110;
        if (v88 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v12 = v105;
    v10 = v108;
    if (v108 >= v105)
      goto LABEL_132;
  }
  v106 = sub_1BC2B53CC();
  v20 = v104 + 2;
  v11 = v110;
  if (v104 + 2 >= v105)
  {
LABEL_46:
    v15 = v20;
    v14 = v104;
    if ((v106 & 1) == 0)
      goto LABEL_56;
    if (v20 < v104)
      goto LABEL_169;
    goto LABEL_48;
  }
  while (1)
  {
LABEL_32:
    v23 = *(_QWORD **)(v11 + 8 * v20);
    v24 = *(_QWORD **)(v11 + 8 * v15);
    v25 = v23[8] == v24[8] && v23[9] == v24[9];
    if (!v25 && (sub_1BC2B53CC() & 1) == 0 || (v23[20] == v24[20] ? (v26 = v23[21] == v24[21]) : (v26 = 0), !v26))
    {
      v21 = sub_1BC2B53CC();
      v11 = v110;
      if (((v106 ^ v21) & 1) != 0)
        goto LABEL_46;
      goto LABEL_31;
    }
    v11 = v110;
    if ((v106 & 1) != 0)
      break;
LABEL_31:
    v22 = v20 + 1;
    v15 = v20;
    v20 = v22;
    if (v22 >= v105)
    {
      v20 = v22;
      goto LABEL_46;
    }
  }
  v14 = v104;
  if (v20 >= v104)
  {
LABEL_48:
    if (v14 < v20)
    {
      v27 = (uint64_t *)(v101 + 8 * v20);
      v28 = v20;
      v29 = v14;
      v30 = (uint64_t *)(v11 + 8 * v14);
      do
      {
        if (v29 != --v28)
        {
          if (!v11)
            goto LABEL_172;
          v31 = *v30;
          *v30 = *v27;
          *v27 = v31;
        }
        ++v29;
        --v27;
        ++v30;
      }
      while (v29 < v28);
    }
    v15 = v20;
    goto LABEL_56;
  }
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

void sub_1BC134660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v18;
  uint64_t v19;

  if (a3 != a2)
  {
    v4 = a3;
    v19 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(void **)(v19 + 8 * v4);
    v7 = a1;
    v18 = v5;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_identifier);
      v12 = objc_msgSend(v11, sel_rawIdentifier);

      v13 = objc_msgSend(v10, sel_identifier);
      v14 = objc_msgSend(v13, sel_rawIdentifier);

      if ((uint64_t)v12 >= (uint64_t)v14)
      {
LABEL_4:
        ++v4;
        v5 = v18 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v19)
        break;
      v15 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v15;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC134794(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v13 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v15 = *a4;
    v5 = (_QWORD *)(*a4 + 8 * a3 - 8);
LABEL_5:
    v6 = *(_QWORD **)(v15 + 8 * v4);
    v7 = v13;
    v14 = v5;
    while (1)
    {
      v8 = *v5;
      v9 = v6[8] == *(_QWORD *)(*v5 + 64) && v6[9] == *(_QWORD *)(*v5 + 72);
      if ((v9 || (sub_1BC2B53CC() & 1) != 0)
        && ((result = v6[20], result == *(_QWORD *)(v8 + 160)) ? (v10 = v6[21] == *(_QWORD *)(v8 + 168)) : (v10 = 0), v10)
        || (result = sub_1BC2B53CC(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v5 = v14 + 1;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v15)
        break;
      v11 = *v5;
      v6 = (_QWORD *)v5[1];
      *v5 = v6;
      v5[1] = v11;
      --v5;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC1348B4(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id *v21;
  void **v22;
  char *v23;
  id *v24;
  id *v25;
  char *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t result;
  id *v35;
  unint64_t v37;
  char *v38;
  id *v39;
  char *v41;
  void **v42;
  id *v43;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v43 = __src;
  v42 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7)
      goto LABEL_46;
    if (a4 != a2 || &a2[v11] <= a4)
      memmove(a4, a2, 8 * v11);
    v23 = (char *)&a4[v11];
    v41 = v23;
    v43 = v4;
    if (v5 >= v4 || v9 < 8)
      goto LABEL_45;
    v24 = (id *)(a3 - 8);
    v25 = v4;
    v35 = v5;
    while (1)
    {
      v37 = (unint64_t)v23;
      v39 = v24 + 1;
      v26 = v23 - 8;
      v27 = *--v25;
      v28 = *((id *)v23 - 1);
      v29 = v27;
      v30 = objc_msgSend(v28, sel_identifier);
      v31 = objc_msgSend(v30, sel_rawIdentifier);

      v32 = objc_msgSend(v29, sel_identifier);
      v33 = objc_msgSend(v32, sel_rawIdentifier);

      if ((uint64_t)v31 < (uint64_t)v33)
        break;
      v41 = v26;
      if ((unint64_t)v39 < v37 || (unint64_t)v24 >= v37)
      {
        *v24 = *(id *)v26;
        v25 = v4;
        v23 = v26;
        goto LABEL_43;
      }
      if (v39 != (id *)v37)
        *v24 = *(id *)v26;
      v25 = v4;
      v23 = v26;
      if (v4 <= v35)
        goto LABEL_45;
LABEL_44:
      --v24;
      v4 = v25;
      if (v23 <= (char *)a4)
        goto LABEL_45;
    }
    v23 = (char *)v37;
    if (v39 != v4 || v24 >= v4)
      *v24 = *v25;
    v43 = v25;
LABEL_43:
    if (v25 <= v35)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v38 = (char *)&a4[v8];
    v41 = v38;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v12 = a4;
      do
      {
        v13 = v5;
        v14 = *v12;
        v15 = *v4;
        v16 = v14;
        v17 = objc_msgSend(v15, sel_identifier);
        v18 = objc_msgSend(v17, sel_rawIdentifier);

        v19 = objc_msgSend(v16, sel_identifier);
        v20 = objc_msgSend(v19, sel_rawIdentifier);

        if ((uint64_t)v18 >= (uint64_t)v20)
        {
          v22 = v13;
          if (v13 != v12)
            *v13 = *v12;
          v42 = ++v12;
          v21 = v4;
        }
        else
        {
          v21 = v4 + 1;
          v22 = v13;
          if (v13 < v4 || v13 >= v21 || v13 != v4)
            *v13 = *v4;
        }
        v5 = v22 + 1;
        if (v12 >= (void **)v38)
          break;
        v4 = v21;
      }
      while ((unint64_t)v21 < a3);
      v43 = v5;
    }
LABEL_45:
    sub_1BC26E078(&v43, &v42, &v41);
    return 1;
  }
LABEL_46:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC134C70(char *__src, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  BOOL v30;
  uint64_t result;
  char *v33;
  char *v34;
  char *v35;
  char *v37;
  char *v38;
  char *v39;

  v4 = a2;
  v5 = __src;
  v6 = a2 - __src;
  v7 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v7 = a2 - __src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v39 = __src;
  v38 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[8 * v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v21 = &a4[8 * v11];
      v37 = v21;
      v39 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v22 = (char *)(a3 - 8);
        v23 = v4;
        while (1)
        {
          v35 = v21;
          v33 = v22 + 8;
          v25 = (_QWORD *)*((_QWORD *)v21 - 1);
          v21 -= 8;
          v24 = v25;
          v27 = *((_QWORD *)v23 - 1);
          v23 -= 8;
          v26 = v27;
          v28 = *(_QWORD *)(v27 + 72);
          v29 = v24[8] == *(_QWORD *)(v27 + 64) && v24[9] == v28;
          if ((v29 || (sub_1BC2B53CC() & 1) != 0)
            && (v24[20] == *(_QWORD *)(v26 + 160) ? (v30 = v24[21] == *(_QWORD *)(v26 + 168)) : (v30 = 0), v30)
            || (sub_1BC2B53CC() & 1) == 0)
          {
            v37 = v21;
            if (v33 < v35 || v22 >= v35 || v33 != v35)
              *(_QWORD *)v22 = *(_QWORD *)v21;
            v23 = v4;
            if (v4 <= v5)
              goto LABEL_65;
          }
          else
          {
            if (v33 != v4 || v22 >= v4)
              *(_QWORD *)v22 = *(_QWORD *)v23;
            v39 = v23;
            v21 = v35;
            if (v23 <= v5)
              goto LABEL_65;
          }
          v22 -= 8;
          v4 = v23;
          if (v21 <= a4)
            goto LABEL_65;
        }
      }
      goto LABEL_65;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[8 * v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v34 = &a4[8 * v8];
    v37 = v34;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v12 = a4;
      do
      {
        v13 = v4;
        v14 = *(_QWORD *)v4;
        v15 = *(_QWORD *)v12;
        v16 = *(_QWORD *)(*(_QWORD *)v4 + 64);
        v17 = *(_QWORD *)(*(_QWORD *)v4 + 72);
        v18 = v16 == *(_QWORD *)(*(_QWORD *)v12 + 64) && v17 == *(_QWORD *)(*(_QWORD *)v12 + 72);
        if ((v18 || (sub_1BC2B53CC() & 1) != 0)
          && (*(_QWORD *)(v14 + 160) == *(_QWORD *)(v15 + 160)
            ? (v19 = *(_QWORD *)(v14 + 168) == *(_QWORD *)(v15 + 168))
            : (v19 = 0),
              v19)
          || (sub_1BC2B53CC() & 1) == 0)
        {
          if (v5 != v12)
            *(_QWORD *)v5 = *(_QWORD *)v12;
          v12 += 8;
          v38 = v12;
          v20 = v13;
        }
        else
        {
          v20 = v13 + 8;
          if (v5 < v13 || v5 >= v20 || v5 != v13)
            *(_QWORD *)v5 = *(_QWORD *)v13;
        }
        v5 += 8;
        if (v12 >= v34)
          break;
        v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      v39 = v5;
    }
LABEL_65:
    sub_1BC26E078(&v39, &v38, &v37);
    return 1;
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC134FE4(unint64_t a1)
{
  return sub_1BC0F9DF4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_1BC134FF8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1BCCEE95CLL);
}

uint64_t sub_1BC135060(unint64_t a1)
{
  return sub_1BC0F9E08(0, *(_QWORD *)(a1 + 16), 0, a1);
}

char *sub_1BC135074(uint64_t a1)
{
  return sub_1BC0FB248(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC135088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v7 = a1;
    v6 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (v23 < v5)
    goto LABEL_31;
LABEL_4:
  v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v6 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v6 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v6;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v6 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x1BCCEE95C](v10, v14, 1, v6);
  swift_bridgeObjectRelease();
  *v4 = v6;
  v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v7);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return sub_1BC2B45A4();
  }
  if (!(v6 >> 62))
  {
    v16 = *(_QWORD *)(v13 + 16);
    v17 = v16 - v5;
    if (!__OFSUB__(v16, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  v17 = v24 - v5;
  if (__OFSUB__(v24, v5))
    goto LABEL_40;
LABEL_21:
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v15 + 1);
    v19 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v19 || v18 >= &v19[8 * v17])
      memmove(v18, v19, 8 * v17);
    if (!(v6 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v21 = v25 + v8;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

char *sub_1BC135370(uint64_t a1, int64_t a2, char a3)
{
  char **v3;
  char *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  char *result;
  int64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  size_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *v3;
  v6 = *((_QWORD *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v10 > *((_QWORD *)v5 + 3) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    result = sub_1BC0FB248(result, v13, 1, v5);
    v5 = result;
  }
  v14 = v5 + 32;
  v15 = &v5[a1 + 32];
  if (!v9)
    goto LABEL_20;
  v16 = *((_QWORD *)v5 + 2);
  v17 = v16 - a2;
  if (__OFSUB__(v16, a2))
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    result = v15 + 1;
    v18 = &v14[a2];
    if (v15 + 1 != &v14[a2] || result >= &v18[v17])
      result = (char *)memmove(result, v18, v17);
    v19 = *((_QWORD *)v5 + 2);
    v20 = __OFADD__(v19, v9);
    v21 = v19 + v9;
    if (!v20)
    {
      *((_QWORD *)v5 + 2) = v21;
LABEL_20:
      *v15 = a3;
      *v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1354CC(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1BC0FA038(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(_QWORD *)v3 = v5;
  }
  v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v15 = v5[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v14 + 40);
    v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17])
      memmove(v18, v19, 40 * v17);
    v20 = v5[2];
    v16 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v16)
    {
      v5[2] = v21;
LABEL_20:
      sub_1BC0E79F0(a3, v14);
      return sub_1BC1380D8(a3);
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC13567C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, &qword_1EF3FA7C0, &qword_1EF3FA7B8, 0x1E0CB6CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA7C8, &qword_1EF3FA7C0, &qword_1EF3FA7B8, 0x1E0CB6CE8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127720(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, &qword_1EF3FA7B8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1358C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA810, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127720(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC135B04(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, &qword_1EF3FA828, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA830, &qword_1EF3FA828, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127720(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC135D48(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t i;
  uint64_t (*v16)();
  uint64_t *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t (*v20[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC1381C0(0, &qword_1EF3FA818, v11, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138218(v12, v13, v14);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v16 = sub_1BC1277C8(v20, i, a3);
          v18 = *v17;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v16)(v20, 0);
          *(_QWORD *)(a1 + 8 * i) = v18;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for InteractionMedicationItem();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC135F50(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, &qword_1EF3FA7A8, (unint64_t *)&qword_1EDA0FCE0, 0x1E0CB3718, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA7B0, &qword_1EF3FA7A8, (unint64_t *)&qword_1EDA0FCE0, 0x1E0CB3718);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127774(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC136194(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, &qword_1EF3FA800, &qword_1EDA0FD80, 0x1E0D2C428, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA808, &qword_1EF3FA800, &qword_1EDA0FD80, 0x1E0D2C428);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127720(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FD80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1363D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, &qword_1EDA0FC48, (unint64_t *)&qword_1EDA0FD88, 0x1E0D2C460, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA7A0, &qword_1EDA0FC48, (unint64_t *)&qword_1EDA0FD88, 0x1E0D2C460);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127720(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD88);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC13661C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, &qword_1EF3FA7F0, &qword_1EF3FA7E8, 0x1E0D2C478, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA7F8, &qword_1EF3FA7F0, &qword_1EF3FA7E8, 0x1E0D2C478);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127720(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, &qword_1EF3FA7E8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC136860(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC106304(0, &qword_1EF3FA7D8, (unint64_t *)&qword_1EDA0FDB8, 0x1E0D2C4A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC138278(&qword_1EF3FA7E0, &qword_1EF3FA7D8, (unint64_t *)&qword_1EDA0FDB8, 0x1E0D2C4A0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC127720(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

void sub_1BC136AA8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    sub_1BC2B545C();
    swift_bridgeObjectRetain();
    v3 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_1BC2B545C();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1BCCEE950](i, a2);
      sub_1BC2B4D90();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_1BC2B4D90();

      --v3;
    }
    while (v3);
  }
}

uint64_t sub_1BC136BBC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1BC118890();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - v13;
  v15 = *(_QWORD *)(a4 + 64);
  v35 = a4 + 64;
  v16 = -1 << *(_BYTE *)(a4 + 32);
  if (-v16 < 64)
    v17 = ~(-1 << -(char)v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  if (!a2)
  {
    v19 = 0;
    a3 = 0;
LABEL_39:
    v29 = v35;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v32 = -1 << *(_BYTE *)(a4 + 32);
  v33 = a1;
  v19 = 0;
  v20 = 0;
  v34 = (unint64_t)(63 - v16) >> 6;
  v31 = v34 - 1;
  v21 = a3;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = sub_1BC2B38E4();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v27 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v23, v28);
    *(_QWORD *)&v11[*(int *)(v37 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v23);
    sub_1BC0F1B94((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC118890);
    sub_1BC0F1B94((uint64_t)v14, a2, (uint64_t (*)(_QWORD))sub_1BC118890);
    if (v20 == v21)
    {
      a3 = v21;
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v36 + 72);
    result = swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_8;
LABEL_9:
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v24 >= v34)
      goto LABEL_33;
    v25 = *(_QWORD *)(v35 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v34)
      {
        v18 = 0;
        v19 = v24;
      }
      else
      {
        v25 = *(_QWORD *)(v35 + 8 * v19);
        if (v25)
          goto LABEL_14;
        v26 = v24 + 2;
        if (v24 + 2 >= v34)
          goto LABEL_33;
        v25 = *(_QWORD *)(v35 + 8 * v26);
        if (v25)
        {
LABEL_17:
          v24 = v26;
          goto LABEL_18;
        }
        v19 = v24 + 3;
        if (v24 + 3 < v34)
        {
          v25 = *(_QWORD *)(v35 + 8 * v19);
          if (v25)
          {
LABEL_14:
            v24 = v19;
            goto LABEL_18;
          }
          v26 = v24 + 4;
          if (v24 + 4 >= v34)
          {
LABEL_33:
            v18 = 0;
            goto LABEL_37;
          }
          v25 = *(_QWORD *)(v35 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              v24 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_42;
              if (v24 >= v34)
              {
                v18 = 0;
                v19 = v31;
                goto LABEL_37;
              }
              v25 = *(_QWORD *)(v35 + 8 * v24);
              ++v26;
              if (v25)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v18 = 0;
        v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      v16 = v32;
      a1 = v33;
      goto LABEL_39;
    }
LABEL_18:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v24 << 6);
    v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1BC136EBC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v16);
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1BC1370D4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for Dosage();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_1BC13817C(*(_QWORD *)(v36 + 56) + v29 * v25, (uint64_t)v12);
    sub_1BC0F1B94((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    result = sub_1BC0F1B94((uint64_t)v15, a2, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BC13738C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1BC2B50CC();
    sub_1BC0E1D38(0, a5);
    sub_1BC1093B4(a7, a5);
    result = (_QWORD *)sub_1BC2B47E4();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1BC2B512C())
        goto LABEL_40;
      sub_1BC0E1D38(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BC137684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, __int128 *a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  __int128 v24[2];
  uint64_t v25[6];

  v25[3] = a12;
  v25[4] = a13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(boxed_opaque_existential_1, a2, a12);
  type metadata accessor for InteractionMedicationCell();
  sub_1BC0E008C(&qword_1EF3FA838, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationCell, (uint64_t)&protocol conformance descriptor for InteractionMedicationCell);
  *(_QWORD *)(a11 + 176) = sub_1BC2B2930();
  *(_QWORD *)(a11 + 184) = v20;
  *(_QWORD *)(a11 + 216) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a11 + 224) = 0;
  *(_OWORD *)(a11 + 192) = a9;
  *(_QWORD *)(a11 + 208) = a10;
  *(_QWORD *)(a11 + 16) = a1;
  if (a6 == a3 && a7 == a4 || (sub_1BC2B53CC() & 1) == 0)
  {
    *(_QWORD *)(a11 + 64) = a3;
    *(_QWORD *)(a11 + 72) = a4;
    sub_1BC0F2730(a5, a11 + 80);
    *(_QWORD *)(a11 + 160) = a6;
    *(_QWORD *)(a11 + 168) = a7;
    sub_1BC0F2730(a8, a11 + 120);
    sub_1BC0E79F0((uint64_t)v25, a11 + 24);
  }
  else
  {
    *(_QWORD *)(a11 + 64) = a6;
    *(_QWORD *)(a11 + 72) = a7;
    sub_1BC0E79F0((uint64_t)a8, a11 + 80);
    *(_QWORD *)(a11 + 160) = a3;
    *(_QWORD *)(a11 + 168) = a4;
    sub_1BC0E79F0((uint64_t)a5, a11 + 120);
    (*(void (**)(__int128 *__return_ptr, uint64_t))(a13 + 40))(v24, a12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a5);
    sub_1BC0F2730(v24, a11 + 24);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  return a11;
}

uint64_t _s19HealthMedicationsUI25InteractionMedicationItemC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  char v10;

  v4 = a1[2];
  v5 = a2[2];
  swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1BC16C500(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    if (a1[8] == a2[8] && a1[9] == a2[9] || (v9 = sub_1BC2B53CC(), v10 = 0, (v9 & 1) != 0))
    {
      if (a1[20] == a2[20] && a1[21] == a2[21])
        v10 = 1;
      else
        v10 = sub_1BC2B53CC();
    }
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

void sub_1BC137938(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _BYTE v20[40];
  _BYTE v21[40];
  _BYTE v22[48];

  v2 = v1;
  v3 = v1[2];
  sub_1BC0E79F0((uint64_t)(v1 + 3), (uint64_t)v22);
  v4 = v1[9];
  v18 = v1[8];
  v5 = v1 + 10;
  sub_1BC0E79F0((uint64_t)v5, (uint64_t)v21);
  v6 = v2[13];
  v7 = v2[14];
  __swift_project_boxed_opaque_existential_0(v5, v6);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = v8(v6, v7);
  v10 = v2[20];
  v11 = v2[21];
  sub_1BC0E79F0((uint64_t)(v2 + 15), (uint64_t)v20);
  v13 = v2[18];
  v12 = v2[19];
  __swift_project_boxed_opaque_existential_0(v2 + 15, v13);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  v15 = v14(v13, v12);
  v16 = objc_allocWithZone((Class)type metadata accessor for InteractionResultDetailViewController());
  v17 = sub_1BC10B658(v3, (uint64_t)v22, v18, v4, (uint64_t)v21, v9, v10, v11, (uint64_t)v20, v15);
  swift_release();
  objc_msgSend(v17, sel_setModalPresentationStyle_, 2);
  objc_msgSend(a1, sel_showAdaptively_sender_, v17, v2);
  sub_1BC2B37E8();

}

uint64_t sub_1BC137AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, __int128 *a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;

  v25 = a7;
  v26 = a8;
  v23 = a5;
  v24 = a6;
  v22 = a9;
  v17 = *(_QWORD *)(a12 - 8);
  MEMORY[0x1E0C80A78](a1);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InteractionMedicationItem();
  v20 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, a12);
  return sub_1BC137684(a1, (uint64_t)v19, a3, a4, v23, v24, v25, v26, v22, a10, v20, a12, a13);
}

uint64_t sub_1BC137B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x1BCCEE95C](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for InteractionMedicationItem();
  swift_arrayDestroy();
  if (!v5)
    return sub_1BC2B45A4();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_1BC2B45A4();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for InteractionMedicationItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC137EB0(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FA640, a2, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationItem, (uint64_t)&protocol conformance descriptor for InteractionMedicationItem);
}

uint64_t method lookup function for InteractionMedicationItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionMedicationItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of InteractionMedicationItem.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:secondItemName:secondItemDetailsProviding:healthStore:analyticsManager:roomType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of InteractionMedicationItem.addInteractionResults(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of InteractionMedicationItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of InteractionMedicationItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t sub_1BC137F30(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1BC0F9E08(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for Dosage() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1380D8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC138114();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC138114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA7D0)
  {
    sub_1BC0E8778(255, (unint64_t *)&qword_1EDA0F7C0);
    v0 = sub_1BC2B51F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA7D0);
  }
}

uint64_t sub_1BC13817C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC1381C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = a4(a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC138218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  uint64_t v4;

  result = qword_1EF3FA820;
  if (!qword_1EF3FA820)
  {
    sub_1BC1381C0(255, &qword_1EF3FA818, a3, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, (unint64_t *)&qword_1EF3FA820);
  }
  return result;
}

uint64_t sub_1BC138278(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC106304(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF50], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC1382C0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t result;
  _QWORD v14[2];
  id v15;
  unint64_t v16;

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_scheduleType);
  switch((unint64_t)v5)
  {
    case 0uLL:
      goto LABEL_20;
    case 1uLL:
      sub_1BC243AE0((uint64_t)&v15);
      if ((v16 & 1) != 0)
      {
        sub_1BC2B39A4();
        v8 = v0;
        v9 = sub_1BC2B39D4();
        v10 = sub_1BC2B48C8();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v11 = 134217984;
          v15 = objc_msgSend(v8, (SEL)&selRef_activeXDaysPauseYDaysWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_cycleStartDateComponents_note_+ 1);
          sub_1BC2B4FD0();

          _os_log_impl(&dword_1BC0DC000, v9, v10, "Attempted to display localizedString with nil frequencyInterval for %ld returning empty string", v11, 0xCu);
          MEMORY[0x1BCCEF3A0](v11, -1, -1);
        }
        else
        {

          v9 = v8;
        }

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_17:
        if (qword_1EF3F8098 != -1)
          swift_once();
        v5 = (id)qword_1EF402600;
        swift_bridgeObjectRetain();
      }
      else
      {
        v6 = sub_1BC243C38(1);
LABEL_14:
        v5 = (id)v6;
      }
      goto LABEL_20;
    case 2uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_12;
      goto LABEL_21;
    case 3uLL:
    case 5uLL:
      v6 = sub_1BC138CF0();
      if (!v7)
        goto LABEL_17;
      goto LABEL_14;
    case 4uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_12;
      goto LABEL_21;
    case 6uLL:
      goto LABEL_17;
    case 7uLL:
    case 8uLL:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_12;
LABEL_21:
      swift_once();
LABEL_12:
      v12 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v5 = (id)sub_1BC2B2144();
      swift_bridgeObjectRelease();

LABEL_20:
      result = (uint64_t)v5;
      break;
    default:
      v15 = 0;
      v16 = 0xE000000000000000;
      sub_1BC2B51BC();
      swift_bridgeObjectRelease();
      v15 = (id)0xD00000000000002DLL;
      v16 = 0x80000001BC2CA860;
      v14[1] = objc_msgSend(v0, sel_scheduleType);
      sub_1BC2B539C();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      result = sub_1BC2B52B8();
      __break(1u);
      break;
  }
  return result;
}

void sub_1BC138704()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v0 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v1 = sub_1BC2B2144();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF402600 = v1;
  *(_QWORD *)algn_1EF402608 = v3;
}

void sub_1BC1387D0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  id v19;
  void *v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __int128 v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;

  v1 = sub_1BC2B2438();
  v55 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B23F0();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B38E4();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WeekdaysAndDosages(0);
  v9 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  v50 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = objc_msgSend(v0, sel_timeIntervals);
  sub_1BC1390BC();
  v13 = sub_1BC2B458C();

  v14 = MEMORY[0x1E0DEE9D8];
  v58 = MEMORY[0x1E0DEE9D8];
  if (!(v13 >> 62))
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_33;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_16;
LABEL_3:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  v48 = v1;
  for (i = 0; i != v15; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v17 = (id)MEMORY[0x1BCCEE950](i, v13);
    else
      v17 = *(id *)(v13 + 8 * i + 32);
    v18 = v17;
    v19 = objc_msgSend(v17, sel_dose);
    if (v19 && (v20 = v19, objc_msgSend(v19, sel_floatValue), v22 = v21, v20, v22 > 0.0))
    {
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v23 = v58;
  v1 = v48;
  v14 = MEMORY[0x1E0DEE9D8];
  if (v58 < 0)
    goto LABEL_33;
LABEL_17:
  if ((v23 & 0x4000000000000000) == 0)
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (!v24)
    {
LABEL_32:
      swift_release();
      return;
    }
    goto LABEL_19;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  v24 = sub_1BC2B52D0();
  swift_release();
  if (!v24)
    goto LABEL_32;
LABEL_19:
  v58 = v14;
  sub_1BC125A74(0, v24 & ~(v24 >> 63), 0);
  if ((v24 & 0x8000000000000000) == 0)
  {
    v25 = 0;
    v47 = v23 & 0xC000000000000001;
    v46 = xmmword_1BC2B92D0;
    v48 = v23;
    do
    {
      if (v47)
        v26 = (id)MEMORY[0x1BCCEE950](v25, v23);
      else
        v26 = *(id *)(v23 + 8 * v25 + 32);
      v27 = v26;
      v28 = objc_msgSend(v26, sel_daysOfWeek, v46);
      sub_1BC218774((uint64_t)v28, v56);
      sub_1BC127CB0(0);
      v29 = type metadata accessor for Dosage();
      v30 = *(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80);
      v31 = (v30 + 32) & ~v30;
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v46;
      sub_1BC2B23E4();
      v33 = objc_msgSend(v27, sel_dose);
      if (v33)
      {
        v34 = v33;
        objc_msgSend(v33, sel_doubleValue);
        v36 = v35;

      }
      else
      {
        v36 = 0;
      }
      v37 = v32 + v31;
      sub_1BC2B242C();
      v38 = v55;
      (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v37, v3, v1);
      (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v37 + *(int *)(v29 + 20), v57, v54);
      *(_QWORD *)(v37 + *(int *)(v29 + 24)) = v36;
      sub_1BC2B242C();
      v39 = sub_1BC2B23FC();
      v41 = v40;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v3, v1);
      *v11 = v39;
      v11[1] = v41;
      v42 = v49;
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))((char *)v11 + *(int *)(v49 + 20), v56, v52);

      *(uint64_t *)((char *)v11 + *(int *)(v42 + 24)) = v32;
      v43 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125A74(0, *(_QWORD *)(v43 + 16) + 1, 1);
        v43 = v58;
      }
      v45 = *(_QWORD *)(v43 + 16);
      v44 = *(_QWORD *)(v43 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_1BC125A74(v44 > 1, v45 + 1, 1);
        v43 = v58;
      }
      ++v25;
      *(_QWORD *)(v43 + 16) = v45 + 1;
      sub_1BC1390F8((uint64_t)v11, v43+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v45);
      v23 = v48;
    }
    while (v24 != v25);
    goto LABEL_32;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1BC138CF0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = type metadata accessor for WeekdaysAndDosages(0);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v1 = (char *)v31 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1BC2B2594();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B38E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v31 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v31 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v31 - v16;
  MEMORY[0x1E0C80A78](v15);
  v34 = (char *)v31 - v18;
  sub_1BC1387D0();
  v20 = v19;
  v41 = 0;
  v39 = sub_1BC139040(&qword_1EDA0FAC0, MEMORY[0x1E0D2CC20]);
  sub_1BC2B54EC();
  v21 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v33 = v17;
  v21(v14, v17, v4);
  v22 = *(_QWORD *)(v20 + 16);
  if (v22)
  {
    v31[1] = v20;
    v32 = v2;
    v23 = v20 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    v38 = *(_QWORD *)(v38 + 72);
    swift_bridgeObjectRetain();
    v37 = v21;
    do
    {
      sub_1BC127D9C(v23, (uint64_t)v1);
      v24 = &v1[*(int *)(v40 + 20)];
      sub_1BC139040(&qword_1EF3FA2A0, MEMORY[0x1E0D2CC10]);
      sub_1BC2B4568();
      sub_1BC2B54EC();
      v37(v8, v24, v4);
      sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
      sub_1BC2B5078();
      sub_1BC139080((uint64_t)v1);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      v25 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v25(v14, v11, v4);
      v23 += v38;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v2 = v32;
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  }
  v26 = v34;
  v25(v34, v14, v4);
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v33, v4);
  swift_bridgeObjectRelease();
  v28 = v35;
  sub_1BC2B2564();
  v29 = sub_1BC2B38C0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v2);
  v27(v26, v4);
  return v29;
}

uint64_t sub_1BC139040(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC2B38E4();
    result = MEMORY[0x1BCCEF2BC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC139080(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeekdaysAndDosages(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC1390BC()
{
  unint64_t result;

  result = qword_1EDA0FDB8;
  if (!qword_1EDA0FDB8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FDB8);
  }
  return result;
}

uint64_t sub_1BC1390F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeekdaysAndDosages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC13913C()
{
  uint64_t result;

  result = sub_1BC2B4430();
  qword_1EDA0ED30 = result;
  return result;
}

id static NSNotificationName.UserDidRequestToShowCurrentMedication.getter()
{
  return sub_1BC139264(&qword_1EDA0FCF0, (id *)&qword_1EDA0ED30);
}

void static NSNotificationName.UserDidRequestToShowCurrentMedication.setter(void *a1)
{
  sub_1BC1392D4(a1, &qword_1EDA0FCF0, (void **)&qword_1EDA0ED30);
}

uint64_t (*static NSNotificationName.UserDidRequestToShowCurrentMedication.modify())()
{
  if (qword_1EDA0FCF0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC139214()
{
  uint64_t result;

  result = sub_1BC2B4430();
  qword_1EF3FA840 = result;
  return result;
}

id static NSNotificationName.UserDidAddMedicationWhenNotificationsDisabled.getter()
{
  return sub_1BC139264(&qword_1EF3F80A8, (id *)&qword_1EF3FA840);
}

id sub_1BC139264(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return *a2;
}

void static NSNotificationName.UserDidAddMedicationWhenNotificationsDisabled.setter(void *a1)
{
  sub_1BC1392D4(a1, &qword_1EF3F80A8, (void **)&qword_1EF3FA840);
}

void sub_1BC1392D4(void *a1, _QWORD *a2, void **a3)
{
  void *v5;

  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  v5 = *a3;
  *a3 = a1;

}

uint64_t (*static NSNotificationName.UserDidAddMedicationWhenNotificationsDisabled.modify())()
{
  if (qword_1EF3F80A8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC1393A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC2B467C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BC2B4670();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC2B461C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BC1394FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D2A9C0];
  v3 = sub_1BC2B2918();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id MedicationConceptDetailViewController.medication.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1EF3FA848);
}

uint64_t sub_1BC139550()
{
  return sub_1BC139754();
}

uint64_t sub_1BC13955C(uint64_t a1)
{
  return sub_1BC1397A4(a1, &qword_1EF3FA850);
}

uint64_t (*sub_1BC139568())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BC1395AC(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + qword_1EF3FA858);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_1BC13960C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + qword_1EF3FA858);
  swift_beginAccess();
  return *v1;
}

void sub_1BC139650(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + qword_1EF3FA858);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1BC1396A0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC1396E4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC139748()
{
  return sub_1BC139754();
}

uint64_t sub_1BC139754()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC139798(uint64_t a1)
{
  return sub_1BC1397A4(a1, &qword_1EF3FA860);
}

uint64_t sub_1BC1397A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_release();
}

uint64_t (*sub_1BC1397F0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC139834()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;

  v1 = qword_1EF3FA870;
  v2 = *(void **)(v0 + qword_1EF3FA870);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3FA870);
  }
  else
  {
    v4 = (_QWORD *)(v0 + qword_1EF3FA858);
    swift_beginAccess();
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB69B8]), sel_initWithHealthStore_, *v4);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC1398D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v1 = qword_1EF3FA878;
  v2 = *(void **)(v0 + qword_1EF3FA878);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3FA878);
  }
  else
  {
    v4 = v0;
    sub_1BC2B3998();
    v5 = (id *)(v0 + qword_1EF3FA858);
    swift_beginAccess();
    v6 = *v5;
    v7 = (void *)sub_1BC2B398C();
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

_QWORD *MedicationConceptDetailViewController.__allocating_init(medication:healthStore:listManager:provenance:incompatibilityCache:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return MedicationConceptDetailViewController.init(medication:healthStore:listManager:provenance:incompatibilityCache:)(a1, a2, a3, a4, a5);
}

_QWORD *MedicationConceptDetailViewController.init(medication:healthStore:listManager:provenance:incompatibilityCache:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(id);
  _QWORD *v26;
  objc_super v28;
  uint64_t v29;
  uint64_t v30;

  v10 = (uint64_t *)&v5[qword_1EF3FA868];
  v29 = sub_1BC2B4460();
  v30 = v11;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v12 = v30;
  v13 = v5;
  swift_bridgeObjectRelease();
  *v10 = v29;
  v10[1] = v12;
  *(_QWORD *)&v13[qword_1EF3FA870] = 0;
  *(_QWORD *)&v13[qword_1EF3FA878] = 0;
  *(_QWORD *)&v13[qword_1EF3FA880] = 0;
  *(_QWORD *)&v13[qword_1EF3FA848] = a1;
  *(_QWORD *)&v13[qword_1EF3FA850] = a3;
  *(_QWORD *)&v13[qword_1EF3FA858] = a2;
  v14 = a1;
  swift_retain();
  v15 = a2;
  v16 = objc_msgSend(v14, sel_localizedOntologyEducationContent);
  v17 = v16;
  if (v16)
  {
    v29 = (uint64_t)v16;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B284C();
    v19 = v18;

    if (v19)
      swift_bridgeObjectRelease();
  }
  v20 = objc_msgSend(v14, sel_localizedOntologyEducationContent);
  if (v20)
  {
    v21 = v20;
    v29 = (uint64_t)v20;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B2864();
    v23 = v22;

    if (v23)
      swift_bridgeObjectRelease();
  }
  sub_1BC2B3818();
  swift_allocObject();
  *(_QWORD *)&v13[qword_1EF3FA860] = sub_1BC2B37F4();
  *(_QWORD *)&v13[qword_1EF3FA888] = a5;
  swift_retain();

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for MedicationConceptDetailViewController();
  v24 = objc_msgSendSuper2(&v28, sel_initWithCollectionViewLayout_, 0);
  v25 = *(void (**)(id))(class metadata base offset for MedicationConceptDetailViewController
                                  + (*MEMORY[0x1E0DEEDD8] & *v24)
                                  + 232);
  v26 = v24;
  v25(v14);
  swift_release();
  swift_release();

  return v26;
}

uint64_t type metadata accessor for MedicationConceptDetailViewController()
{
  uint64_t result;

  result = qword_1EF3FA8B0;
  if (!qword_1EF3FA8B0)
    return swift_getSingletonMetadata();
  return result;
}

id MedicationConceptDetailViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1BC139D04(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s19HealthMedicationsUI37MedicationConceptDetailViewControllerC5coderACSgSo7NSCoderC_tcfc_0();
}

void sub_1BC139D28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  char *v31;
  void **v32;
  objc_super v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v1);
  v31 = (char *)&v31 - v2;
  v3 = *(void **)&v0[qword_1EF3FA848];
  v4 = &v0[qword_1EF3FA850];
  swift_beginAccess();
  v5 = *(_QWORD *)v4;
  v6 = (void **)&v0[qword_1EF3FA858];
  v32 = (void **)&v0[qword_1EF3FA858];
  swift_beginAccess();
  v7 = *v6;
  v8 = &v0[qword_1EF3FA860];
  swift_beginAccess();
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)&v0[qword_1EF3FA888];
  v11 = type metadata accessor for MedicationConceptDetailDataSourceProvider();
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = v5;
  *((_QWORD *)v12 + 3) = v3;
  *((_QWORD *)v12 + 4) = v7;
  *((_QWORD *)v12 + 5) = v9;
  *((_QWORD *)v12 + 6) = v10;
  *((_QWORD *)v12 + 7) = 0;
  v36 = v11;
  v37 = sub_1BC0E519C(&qword_1EF3FA890, (uint64_t (*)(uint64_t))type metadata accessor for MedicationConceptDetailDataSourceProvider, (uint64_t)&unk_1BC2C657C);
  v34 = v12;
  v13 = v3;
  swift_retain();
  v14 = v7;
  swift_retain();
  swift_retain();
  sub_1BC2B3008();
  v15 = (objc_class *)type metadata accessor for MedicationConceptDetailViewController();
  v33.receiver = v0;
  v33.super_class = v15;
  objc_msgSendSuper2(&v33, sel_viewDidLoad);
  v16 = sub_1BC2B467C();
  v17 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v31, 1, 1, v16);
  sub_1BC2B4658();
  v18 = v0;
  v19 = sub_1BC2B464C();
  v20 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x1E0DF06E8];
  v20[2] = v19;
  v20[3] = v21;
  v20[4] = v18;
  sub_1BC1393A8(v17, (uint64_t)&unk_1EF3FA8A0, (uint64_t)v20);
  swift_release();
  swift_retain();
  sub_1BC2B37E8();
  swift_release();
  v34 = v18;
  v22 = *MEMORY[0x1E0D2F3F8];
  v23 = *v32;
  v24 = sub_1BC0E519C(&qword_1EF3FA8A8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationConceptDetailViewController, (uint64_t)&protocol conformance descriptor for MedicationConceptDetailViewController);
  v25 = v23;
  MEMORY[0x1BCCEC7CC](0xD000000000000014, 0x80000001BC2CA950, v22, v25, v15, v24);

  v26 = objc_msgSend(v18, sel_navigationController);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, sel_navigationBar);

    v29 = *(_QWORD *)&v18[qword_1EF3FA868 + 8];
    v34 = *(char **)&v18[qword_1EF3FA868];
    v35 = v29;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v30 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setAccessibilityIdentifier_, v30);

  }
}

void sub_1BC13A098(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC139D28();

}

uint64_t sub_1BC13A0CC(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  swift_retain();
  v2 = objc_msgSend(a1, sel_localizedOntologyEducationContent);
  if (v2)
  {
    v3 = v2;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B2864();
    v5 = v4;

    if (v5)
      swift_bridgeObjectRelease();
  }
  sub_1BC2B3800();
  swift_release();
  swift_retain();
  v6 = objc_msgSend(a1, sel_localizedOntologyEducationContent);
  if (v6)
  {
    v7 = v6;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B284C();
    v9 = v8;

    if (v9)
      swift_bridgeObjectRelease();
  }
  sub_1BC2B380C();
  swift_release();
  sub_1BC13A24C(a1);
  return sub_1BC13A3A8(a1);
}

uint64_t sub_1BC13A24C(void *a1)
{
  void *v1;
  void *v3;
  uint64_t result;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD v9[5];

  v9[0] = a1;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B3758();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v3);

  sub_1BC2B2FFC();
  if (!v9[3])
    return sub_1BC10B92C((uint64_t)v9, &qword_1EF3FA930, &qword_1EF3FA938);
  sub_1BC0E8778(0, &qword_1EF3FA938);
  type metadata accessor for MedicationConceptDetailDataSourceProvider();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v5 = *(void **)(v8 + 24);
    *(_QWORD *)(v8 + 24) = a1;
    v6 = a1;

    sub_1BC28D3C8();
    v7 = *(id *)(v8 + 24);
    sub_1BC2B3EC0();
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_1BC13A3A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v2 = v1;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  sub_1BC13BDD8();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC13BF34();
  result = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = qword_1EF3FA880;
  if (!*(_QWORD *)(v2 + qword_1EF3FA880))
  {
    v27 = a1;
    v28 = result;
    v29 = v14;
    v18 = sub_1BC1398D4();
    v19 = sub_1BC2B3980();

    v31 = v19;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
    v30 = (id)sub_1BC2B4A0C();
    v20 = sub_1BC2B49C4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
    sub_1BC13BE80(0, &qword_1EF3FA908, (void (*)(uint64_t))MEMORY[0x1E0D2F000]);
    sub_1BC13BEDC();
    v26 = v9;
    sub_1BC1019D8();
    sub_1BC2B4064();
    sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);

    swift_release();
    v21 = swift_allocObject();
    v22 = v27;
    *(_QWORD *)(v21 + 16) = v27;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    sub_1BC0E519C(&qword_1EF3FA920, (uint64_t (*)(uint64_t))sub_1BC13BDD8, MEMORY[0x1E0C95CB8]);
    v23 = v22;
    sub_1BC2B3FC8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v8);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BC0E519C(&qword_1EF3FA928, (uint64_t (*)(uint64_t))sub_1BC13BF34, MEMORY[0x1E0C95708]);
    v24 = v28;
    v25 = sub_1BC2B40A0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v24);
    *(_QWORD *)(v2 + v17) = v25;
    return swift_release();
  }
  return result;
}

unint64_t sub_1BC13A6C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  uint64_t i;
  id v14;
  void *v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  BOOL v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;

  v6 = sub_1BC2B3974();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, unint64_t))(v7 + 16))(v9, a1, v6);
  if ((*(unsigned int (**)(uint64_t *, unint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x1E0D2EFF8])
  {
    *a3 = 0;
    return (*(uint64_t (**)(uint64_t *, unint64_t))(v7 + 8))(v9, v6);
  }
  (*(void (**)(uint64_t *, unint64_t))(v7 + 96))(v9, v6);
  v10 = *v9;
  v23 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v6 = v10;
    else
      v6 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v11 = result;
    if (result)
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_21;
LABEL_4:
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  for (i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x1BCCEE950](i, v10);
    else
      v14 = *(id *)(v10 + 8 * i + 32);
    v15 = v14;
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x1BCCEDCF0]();
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
      sub_1BC2B4604();
      sub_1BC2B45A4();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v16 = v23;
LABEL_22:
  swift_bridgeObjectRelease();
  v17 = a2;
  v6 = sub_1BC13B6F4(v16, v17);
  swift_bridgeObjectRelease();

  if (!(v6 >> 62))
  {
    v18 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_24;
LABEL_31:
    result = swift_bridgeObjectRelease();
    *a3 = 0;
    return result;
  }
  v18 = sub_1BC2B52D0();
  if (!v18)
    goto LABEL_31;
LABEL_24:
  v19 = __OFSUB__(v18, 1);
  result = v18 - 1;
  if (v19)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v20 = (id)MEMORY[0x1BCCEE950](result, v6);
    goto LABEL_29;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v6 + 8 * result + 32);
LABEL_29:
    v21 = v20;
    result = swift_bridgeObjectRelease();
    *a3 = v21;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1BC13A988(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BC13A24C(v2);

  }
}

uint64_t sub_1BC13A9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[21] = a4;
  v5 = sub_1BC2B39E0();
  v4[22] = v5;
  v4[23] = *(_QWORD *)(v5 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  sub_1BC2B4658();
  v4[26] = sub_1BC2B464C();
  v4[27] = sub_1BC2B461C();
  v4[28] = v6;
  return swift_task_switch();
}

uint64_t sub_1BC13AA84()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (void *)v0[21];
  sub_1BC2B39A4();
  v2 = v1;
  v3 = sub_1BC2B39D4();
  v4 = sub_1BC2B48B0();
  if (os_log_type_enabled(v3, v4))
  {
    v20 = v0[23];
    v5 = (void *)v0[21];
    v21 = v0[22];
    v22 = v0[25];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v23 = v7;
    v0[19] = v5;
    type metadata accessor for MedicationConceptDetailViewController();
    v8 = v5;
    v9 = sub_1BC2B4490();
    v0[20] = sub_1BC12540C(v9, v10, &v23);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v3, v4, "[%{public}s] Marking interaction shard as required during viewing DDI overview", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v11(v22, v21);
  }
  else
  {
    v12 = v0[25];
    v13 = v0[22];
    v14 = v0[23];
    v15 = (void *)v0[21];

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[29] = v11;
  v16 = sub_1BC139834();
  v0[30] = v16;
  v0[2] = v0;
  v0[3] = sub_1BC13ACC8;
  v17 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v18 = v0 + 10;
  v18[1] = 0x40000000;
  v18[2] = sub_1BC2311D4;
  v18[3] = &block_descriptor_5;
  v18[4] = v17;
  objc_msgSend(v16, sel_markInteractionsShardAsRequiredWithCompletion_, v18);
  return swift_continuation_await();
}

uint64_t sub_1BC13ACC8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 248) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC13AD24()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 240);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC13AD6C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29[2];

  v2 = *(void **)(v0 + 240);
  v1 = *(void **)(v0 + 248);
  v3 = *(void **)(v0 + 168);
  swift_release();
  swift_willThrow();

  sub_1BC2B39A4();
  v4 = v3;
  v5 = v1;
  v6 = v4;
  v7 = v1;
  v8 = sub_1BC2B39D4();
  v9 = sub_1BC2B48C8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 248);
    v27 = *(_QWORD *)(v0 + 192);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v11 = *(void **)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v29[0] = v13;
    *(_DWORD *)v12 = 136446466;
    *(_QWORD *)(v0 + 120) = v11;
    type metadata accessor for MedicationConceptDetailViewController();
    v14 = v11;
    v15 = sub_1BC2B4490();
    *(_QWORD *)(v0 + 128) = sub_1BC12540C(v15, v16, v29);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    *(_QWORD *)(v0 + 136) = v10;
    v17 = v10;
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    v18 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 144) = sub_1BC12540C(v18, v19, v29);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v8, v9, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v13, -1, -1);
    MEMORY[0x1BCCEF3A0](v12, -1, -1);

    v28(v27, v26);
  }
  else
  {
    v20 = *(void **)(v0 + 248);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v22 = *(_QWORD *)(v0 + 192);
    v24 = *(void **)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 176);

    v21(v22, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC13B018(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC10ADC0(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void MedicationConceptDetailViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationConceptDetailViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationConceptDetailViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationConceptDetailViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC13B18C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC13B1BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

id MedicationConceptDetailViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationConceptDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC13B290(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

Swift::Void __swiftcall MedicationConceptDetailViewController.presentMedicationsInputViewController()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
  swift_allocObject();
  v2 = sub_1BC2B3EF0();
  v3 = *(void **)&v0[qword_1EF3FA848];
  v4 = objc_allocWithZone((Class)type metadata accessor for MedicationsInputViewController());
  swift_retain();
  v5 = MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(v2, v3, 0, 0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v5);
  objc_msgSend(v6, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v6, sel_setModalInPresentation_, 1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v6, 1, 0);
  swift_release();

}

uint64_t MedicationConceptDetailViewController.getLogDoseViewController(medication:prefillLogDate:prefillDosage:)(void *a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  void **v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v8 = sub_1BC2B23F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_allocObject();
  v12 = a1;
  v13 = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v12, 0, 0, v11, 0, a3);
  sub_1BC2B23E4();
  v25 = (uint64_t)v12;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v14 = sub_1BC2B3758();
  v16 = v15;
  sub_1BC0E7940();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v17 + 32) = v13;
  v25 = v17;
  sub_1BC2B45A4();
  v18 = v25;
  type metadata accessor for MedicationDoseLogListViewModel(0);
  v19 = (_QWORD *)swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))((uint64_t)v19 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v11, v8);
  v20 = (_QWORD *)((char *)v19 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *v20 = v14;
  v20[1] = v16;
  v19[2] = v18;
  v21 = (void **)(v4 + qword_1EF3FA858);
  swift_beginAccess();
  v22 = *v21;
  objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  return MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v19, 0, v22, 0, 4, 0, 2, 0);
}

uint64_t sub_1BC13B644(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BC13B6A8;
  return v6(a1);
}

uint64_t sub_1BC13B6A8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC13B6F4(unint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  id v9;
  char v10;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x1BCCEE950](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
        v8 = objc_msgSend(v6, sel_semanticIdentifier);
        v9 = objc_msgSend(a2, sel_semanticIdentifier);
        v10 = sub_1BC2B4D84();

        if ((v10 & 1) != 0)
        {
          sub_1BC2B5204();
          sub_1BC2B5234();
          sub_1BC2B5240();
          sub_1BC2B5210();
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
          return v13;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v3 = sub_1BC2B52D0();
      if (!v3)
        return MEMORY[0x1E0DEE9D8];
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

void _s19HealthMedicationsUI37MedicationConceptDetailViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (uint64_t *)&v0[qword_1EF3FA868];
  v3 = sub_1BC2B4460();
  v4 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  *v1 = v3;
  v1[1] = v4;
  *(_QWORD *)&v0[qword_1EF3FA870] = 0;
  *(_QWORD *)&v0[qword_1EF3FA878] = 0;
  *(_QWORD *)&v0[qword_1EF3FA880] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC13B990()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC13B9BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC0FEB64;
  return sub_1BC13A9E0(a1, v4, v5, v6);
}

void sub_1BC13BA28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FD00)
  {
    sub_1BC0E1D38(255, &qword_1EDA0FCF8);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FD00);
  }
}

uint64_t sub_1BC13BA8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &qword_1EF3FA850, a2);
}

uint64_t sub_1BC13BA98(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC1396E4(a1, a2, a3, a4, &qword_1EF3FA850);
}

id sub_1BC13BAB4@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + qword_1EF3FA858);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1BC13BB08@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &qword_1EF3FA860, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_retain();
}

uint64_t sub_1BC13BB64(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC1396E4(a1, a2, a3, a4, &qword_1EF3FA860);
}

uint64_t sub_1BC13BB80()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationConceptDetailViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.providedPresentation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 72))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.listManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.listManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 88))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.listManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 96))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.healthStore.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 104))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.healthStore.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 112))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.healthStore.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 120))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.analyticsManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 128))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.analyticsManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 136))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.analyticsManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 144))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.__allocating_init(medication:healthStore:listManager:provenance:incompatibilityCache:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController + v0 + 224))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.setUp(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 232))();
}

uint64_t sub_1BC13BDD0()
{
  return type metadata accessor for MedicationConceptDetailViewController();
}

void sub_1BC13BDD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA900)
  {
    sub_1BC13BE80(255, &qword_1EF3FA908, (void (*)(uint64_t))MEMORY[0x1E0D2F000]);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC13BEDC();
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA900);
  }
}

void sub_1BC13BE80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC2B3EE4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC13BEDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FA910;
  if (!qword_1EF3FA910)
  {
    sub_1BC13BE80(255, &qword_1EF3FA908, (void (*)(uint64_t))MEMORY[0x1E0D2F000]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FA910);
  }
  return result;
}

void sub_1BC13BF34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA918)
  {
    sub_1BC13BDD8();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDA0);
    sub_1BC0E519C(&qword_1EF3FA920, (uint64_t (*)(uint64_t))sub_1BC13BDD8, MEMORY[0x1E0C95CB8]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA918);
  }
}

uint64_t sub_1BC13BFD8()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1BC13BFFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC13A6C0(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BC13C004()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC13C028(void **a1)
{
  uint64_t v1;

  sub_1BC13A988(a1, v1);
}

uint64_t sub_1BC13C030()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC13C054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC0FEB64;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF3FA940 + dword_1EF3FA940))(a1, v4);
}

uint64_t AddMedicationItem.init(enabled:onTap:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t v9;

  type metadata accessor for AddMedicationCell();
  sub_1BC13C15C();
  result = sub_1BC2B2930();
  *(_QWORD *)a4 = 0xD000000000000011;
  *(_QWORD *)(a4 + 8) = 0x80000001BC2BB9A0;
  *(_BYTE *)(a4 + 16) = a1;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  *(_QWORD *)(a4 + 40) = result;
  *(_QWORD *)(a4 + 48) = v9;
  return result;
}

uint64_t type metadata accessor for AddMedicationCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC13C15C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FA950;
  if (!qword_1EF3FA950)
  {
    v1 = type metadata accessor for AddMedicationCell();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for AddMedicationCell, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FA950);
  }
  return result;
}

uint64_t AddMedicationItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t AddMedicationItem.uniqueIdentifier.getter()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t static AddMedicationItem.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t AddMedicationItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t AddMedicationItem.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC13C310()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC13C358()
{
  return sub_1BC2B44D8();
}

uint64_t sub_1BC13C360()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC13C3A4(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC2B53CC();
}

id sub_1BC13C3D8()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___iconView, (uint64_t (*)(void))sub_1BC13C3EC);
}

id sub_1BC13C3EC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8FF8);
  v0 = (void *)sub_1BC2B4D60();
  v1 = (void *)sub_1BC2B4430();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v2);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setContentMode_, 1);
  return v3;
}

id sub_1BC13C4D4()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedLabel, (uint64_t (*)(void))sub_1BC13C4E8);
}

id sub_1BC13C4E8()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  objc_msgSend(v3, sel_setIsAccessibilityElement_, 1);
  v5 = (void *)qword_1EDA0FEF8;
  v6 = v3;
  v7 = v5;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityLabel_, v8, 0xE000000000000000);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v9 = (void *)sub_1BC2B4C64();
  objc_msgSend(v6, sel_setFont_, v9);

  v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v10);

  return v6;
}

id sub_1BC13C810()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___detailLabel, (uint64_t (*)(void))sub_1BC13C824);
}

id sub_1BC13C824()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v3, sel_setFont_, v5);

  v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTextColor_, v6);

  return v3;
}

id sub_1BC13CAAC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC13CB6C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel];
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v7 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v8 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v8);

    v9 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    objc_msgSend(v5, sel_setTextColor_, v9);

    v10 = (void *)sub_1BC2B4430();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v10);

    v11 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v5;
    v3 = v5;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id AddMedicationView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  objc_super v11;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___iconView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for AddMedicationView();
  v9 = objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC13D008();

  return v9;
}

uint64_t type metadata accessor for AddMedicationView()
{
  return objc_opt_self();
}

void sub_1BC13D008()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;

  sub_1BC2B263C();
  v1 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  v2 = sub_1BC13C3D8();
  objc_msgSend(v0, sel_addSubview_, v2);

  v3 = sub_1BC13C4D4();
  objc_msgSend(v0, sel_addSubview_, v3);

  v4 = sub_1BC13C810();
  objc_msgSend(v0, sel_addSubview_, v4);

  v5 = sub_1BC13CAAC();
  objc_msgSend(v0, sel_addSubview_, v5);

  v6 = sub_1BC13CB6C();
  objc_msgSend(v0, sel_addSubview_, v6);

  v87 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2BB9B0;
  v8 = sub_1BC13C3D8();
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v0, sel_topAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, 12.0);

  *(_QWORD *)(v7 + 32) = v11;
  v12 = sub_1BC13C3D8();
  v13 = objc_msgSend(v12, sel_leadingAnchor);

  v14 = objc_msgSend(v0, (SEL)&ShapeCell.base_props + 6);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 12.0);

  *(_QWORD *)(v7 + 40) = v15;
  v16 = sub_1BC13C3D8();
  v17 = objc_msgSend(v16, sel_widthAnchor);

  v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, 60.0);
  *(_QWORD *)(v7 + 48) = v18;
  v19 = sub_1BC13C3D8();
  v20 = objc_msgSend(v19, sel_heightAnchor);

  v21 = objc_msgSend(v20, (SEL)&selRef_fontDescriptor + 2, 60.0);
  *(_QWORD *)(v7 + 56) = v21;
  v22 = sub_1BC13C4D4();
  v23 = objc_msgSend(v22, (SEL)&ShapeCell.base_props + 6);

  v24 = sub_1BC13C3D8();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, 12.0);
  *(_QWORD *)(v7 + 64) = v26;
  v27 = sub_1BC13C4D4();
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = objc_msgSend(v0, sel_trailingAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, -12.0);

  *(_QWORD *)(v7 + 72) = v30;
  v31 = sub_1BC13C4D4();
  v32 = objc_msgSend(v31, sel_topAnchor);

  v33 = objc_msgSend(v0, sel_topAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 12.0);

  *(_QWORD *)(v7 + 80) = v34;
  v35 = sub_1BC13C4D4();
  v36 = objc_msgSend(v35, sel_bottomAnchor);

  v37 = sub_1BC13C810();
  v38 = objc_msgSend(v37, sel_topAnchor);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, -4.0);
  *(_QWORD *)(v7 + 88) = v39;
  v40 = sub_1BC13C810();
  v41 = objc_msgSend(v40, (SEL)&ShapeCell.base_props + 6);

  v42 = sub_1BC13C4D4();
  v43 = objc_msgSend(v42, (SEL)&ShapeCell.base_props + 6);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(_QWORD *)(v7 + 96) = v44;
  v45 = sub_1BC13C810();
  v46 = objc_msgSend(v45, sel_trailingAnchor);

  v47 = sub_1BC13C4D4();
  v48 = objc_msgSend(v47, sel_trailingAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(_QWORD *)(v7 + 104) = v49;
  v50 = sub_1BC13C810();
  v51 = objc_msgSend(v50, sel_bottomAnchor);

  v52 = sub_1BC13CAAC();
  v53 = objc_msgSend(v52, sel_topAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, -12.0);
  *(_QWORD *)(v7 + 112) = v54;
  v55 = sub_1BC13CAAC();
  v56 = objc_msgSend(v55, sel_heightAnchor);

  v57 = objc_msgSend(v56, sel_constraintEqualToConstant_, 1.0);
  *(_QWORD *)(v7 + 120) = v57;
  v58 = sub_1BC13CAAC();
  v59 = objc_msgSend(v58, sel_leadingAnchor);

  v60 = sub_1BC13C4D4();
  v61 = objc_msgSend(v60, sel_leadingAnchor);

  v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v61);
  *(_QWORD *)(v7 + 128) = v62;
  v63 = sub_1BC13CAAC();
  v64 = objc_msgSend(v63, sel_trailingAnchor);

  v65 = sub_1BC13C4D4();
  v66 = objc_msgSend(v65, sel_trailingAnchor);

  v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v66);
  *(_QWORD *)(v7 + 136) = v67;
  v68 = sub_1BC13CAAC();
  v69 = objc_msgSend(v68, sel_bottomAnchor);

  v70 = sub_1BC13CB6C();
  v71 = objc_msgSend(v70, sel_topAnchor);

  v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_constant_, v71, -14.0);
  *(_QWORD *)(v7 + 144) = v72;
  v73 = sub_1BC13CB6C();
  v74 = objc_msgSend(v73, sel_leadingAnchor);

  v75 = sub_1BC13C3D8();
  v76 = objc_msgSend(v75, sel_trailingAnchor);

  v77 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v76, 12.0);
  *(_QWORD *)(v7 + 152) = v77;
  v78 = sub_1BC13CB6C();
  v79 = objc_msgSend(v78, sel_trailingAnchor);

  v80 = sub_1BC13C4D4();
  v81 = objc_msgSend(v80, sel_trailingAnchor);

  v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v81);
  *(_QWORD *)(v7 + 160) = v82;
  v83 = sub_1BC13CB6C();
  v84 = objc_msgSend(v83, sel_bottomAnchor);

  v85 = objc_msgSend(v0, sel_bottomAnchor);
  v86 = objc_msgSend(v84, sel_constraintEqualToAnchor_constant_, v85, -12.0);

  *(_QWORD *)(v7 + 168) = v86;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v88 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v87, sel_activateConstraints_, v88);

}

id AddMedicationView.__deallocating_deinit()
{
  return sub_1BC0F3CF0(type metadata accessor for AddMedicationView);
}

uint64_t sub_1BC13D93C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC13E6FC();
  return sub_1BC0E1CFC((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC13D9D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC13DA34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC13E6FC();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC13DAB0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC13DAF8;
}

uint64_t sub_1BC13DAF8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC13E6FC();
  return result;
}

id sub_1BC13DB28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView);
  }
  else
  {
    type metadata accessor for AddMedicationView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_actionButtonTappedWithSender_, 64);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id _s19HealthMedicationsUI17AddMedicationViewC5frameACSo6CGRectV_tcfC_0(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id AddMedicationCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  objc_super v12;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for AddMedicationCell();
  v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC13DDF0();

  return v10;
}

void sub_1BC13DDF0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  sub_1BC2B263C();
  v1 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  v2 = objc_msgSend(v0, sel_contentView);
  v3 = sub_1BC13DB28();
  objc_msgSend(v2, sel_addSubview_, v3);

  v4 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC2BA730;
  v6 = sub_1BC13DB28();
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v0, sel_contentView);
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(_QWORD *)(v5 + 32) = v10;
  v11 = sub_1BC13DB28();
  v12 = objc_msgSend(v11, sel_bottomAnchor);

  v13 = objc_msgSend(v0, sel_contentView);
  v14 = objc_msgSend(v13, sel_bottomAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(_QWORD *)(v5 + 40) = v15;
  v16 = sub_1BC13DB28();
  v17 = objc_msgSend(v16, sel_leadingAnchor);

  v18 = objc_msgSend(v0, sel_contentView);
  v19 = objc_msgSend(v18, sel_leadingAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(_QWORD *)(v5 + 48) = v20;
  v21 = sub_1BC13DB28();
  v22 = objc_msgSend(v21, sel_trailingAnchor);

  v23 = objc_msgSend(v0, sel_contentView);
  v24 = objc_msgSend(v23, sel_trailingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v5 + 56) = v25;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v26 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v26);

}

uint64_t sub_1BC13E124()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v18;
  id v19;
  objc_super v20;

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v20 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = (void *)sub_1BC2B3AE8();
  v12 = (objc_class *)type metadata accessor for AddMedicationCell();
  v20.receiver = v1;
  v20.super_class = v12;
  objc_msgSendSuper2(&v20, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1BCCEE230]();
    v13 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      v14 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
      sub_1BC0E1CB0((uint64_t)v10, (uint64_t)v8, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v8);
      v15 = (uint64_t)v10;
      return sub_1BC0E1CFC(v15, &qword_1EDA0FAF0, v14);
    }
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D00();
    sub_1BC2B3B18();
    v18 = v10;
  }
  else
  {
    MEMORY[0x1BCCEE230]();
    v16 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16))
    {
      v14 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
      sub_1BC0E1CB0((uint64_t)v5, (uint64_t)v8, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v8);
      v15 = (uint64_t)v5;
      return sub_1BC0E1CFC(v15, &qword_1EDA0FAF0, v14);
    }
    v19 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
    sub_1BC2B3B18();
    v18 = v5;
  }
  return MEMORY[0x1BCCEE23C](v18);
}

uint64_t sub_1BC13E3F4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  uint64_t v19[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v5, (uint64_t)v19, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v19[3])
  {
    sub_1BC0E1B94();
    if ((swift_dynamicCast() & 1) != 0)
    {
      ((void (*)(void))v18[3])();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v19, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  }
  sub_1BC2B39A4();
  v7 = v0;
  v8 = sub_1BC2B39D4();
  v9 = sub_1BC2B48C8();
  if (os_log_type_enabled(v8, v9))
  {
    v17 = v1;
    v10 = swift_slowAlloc();
    v16 = v2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19[0] = v12;
    *(_DWORD *)v11 = 136446210;
    v15 = v11 + 4;
    sub_1BC0E1CB0(v5, (uint64_t)v18, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v13 = sub_1BC2B4490();
    v18[0] = sub_1BC12540C(v13, v14, v19);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v8, v9, "Incorrect view model for AddMedicationItem: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v12, -1, -1);
    MEMORY[0x1BCCEF3A0](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v4, v17);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1BC13E6FC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  void *v14;
  char **v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void (*v21)(uint64_t);
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - v10;
  v12 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v12, (uint64_t)v36, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v36[3])
  {
    sub_1BC0E1CFC((uint64_t)v36, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
LABEL_9:
    sub_1BC2B39A4();
    v23 = v1;
    v24 = sub_1BC2B39D4();
    v25 = sub_1BC2B48C8();
    if (os_log_type_enabled(v24, v25))
    {
      v33 = v2;
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v32 = v3;
      v28 = v27;
      v36[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v31 = v26 + 4;
      sub_1BC0E1CB0(v12, (uint64_t)&v34, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
      v29 = sub_1BC2B4490();
      v34 = sub_1BC12540C(v29, v30, v36);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v24, v25, "Incorrect view model for AddMedicationItem: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v28, -1, -1);
      MEMORY[0x1BCCEF3A0](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v5, v33);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC0E1B94();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_9;
  v13 = v35;
  v14 = (void *)objc_opt_self();
  v15 = &selRef_linkColor;
  if (!v13)
    v15 = &selRef_secondaryLabelColor;
  v16 = objc_msgSend(v14, *v15);
  v17 = sub_1BC13DB28();
  sub_1BC2B4EE0();

  v18 = sub_1BC2B4EC8();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v11, 1, v18))
  {
    v19 = v16;
    sub_1BC2B4E44();
  }
  v20 = sub_1BC13DB28();
  v21 = (void (*)(uint64_t))MEMORY[0x1E0DC3228];
  sub_1BC0E1CB0((uint64_t)v11, (uint64_t)v9, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  sub_1BC2B4EEC();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return sub_1BC0E1CFC((uint64_t)v11, &qword_1EDA0FE00, v21);
}

id AddMedicationCell.__deallocating_deinit()
{
  return sub_1BC0F3CF0(type metadata accessor for AddMedicationCell);
}

unint64_t sub_1BC13EAEC()
{
  unint64_t result;

  result = qword_1EF3FA990;
  if (!qword_1EF3FA990)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for AddMedicationItem, &type metadata for AddMedicationItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FA990);
  }
  return result;
}

uint64_t sub_1BC13EB78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

ValueMetadata *type metadata accessor for AddMedicationItem()
{
  return &type metadata for AddMedicationItem;
}

uint64_t method lookup function for AddMedicationView()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for AddMedicationCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AddMedicationCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AddMedicationCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AddMedicationCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t type metadata accessor for VisualizationModificationStepViewController()
{
  uint64_t result;

  result = qword_1EF3FA9D8;
  if (!qword_1EF3FA9D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC13EC98()
{
  return swift_initClassMetadata2();
}

void sub_1BC13ECF4(_BYTE *a1@<X8>)
{
  *a1 = 0x80;
}

uint64_t sub_1BC13ED00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  unint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];

  v4 = v3;
  v48 = a3;
  v49 = a1;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v42 - v7;
  v9 = sub_1BC2B3350();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B32B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = qword_1EF3FA9C0;
  v16 = v3;
  result = sub_1BC2B3290();
  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v44 = v8;
  v45 = v9;
  v46 = a2;
  v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  v19(v14, result + v18, v11);
  swift_bridgeObjectRelease();
  v20 = sub_1BC2B32A8();
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v14, v11);
  v51[0] = v20;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FAA30, (void (*)(uint64_t))sub_1BC12A328);
  swift_allocObject();
  v22 = sub_1BC2B3EF0();
  v43 = v4;
  *(_QWORD *)&v4[v15] = v22;
  v23 = qword_1EF3FA9C8;
  result = sub_1BC2B3284();
  if (!*(_QWORD *)(result + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v42 = v15;
  v19(v14, result + v18, v11);
  swift_bridgeObjectRelease();
  v24 = sub_1BC2B32A8();
  v21(v14, v11);
  v51[0] = v24;
  swift_allocObject();
  v25 = v23;
  *(_QWORD *)&v16[v23] = sub_1BC2B3EF0();
  v26 = qword_1EF3FA9D0;
  result = sub_1BC2B3284();
  if (*(_QWORD *)(result + 16))
  {
    v19(v14, result + v18, v11);
    swift_bridgeObjectRelease();
    v27 = sub_1BC2B32A8();
    v21(v14, v11);
    v51[0] = v27;
    swift_allocObject();
    *(_QWORD *)&v16[v26] = sub_1BC2B3EF0();
    *(_QWORD *)&v16[qword_1EF402620] = MEMORY[0x1E0DEE9E8];
    v28 = v48;
    v29 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v47, v48, v45);
    sub_1BC13BE80(0, &qword_1EF3FAA38, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    swift_allocObject();
    v30 = sub_1BC2B3EF0();
    v31 = *(_QWORD *)&v43[v42];
    v32 = *(_QWORD *)&v16[v25];
    v33 = *(_QWORD *)&v16[v26];
    LOBYTE(v51[0]) = 0;
    type metadata accessor for VisualizationModificationDataSource();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    v34 = sub_1BC272164(v30, v31, v32, v33, (unsigned __int8 *)v51);

    v35 = v49;
    v36 = (uint64_t)v44;
    sub_1BC0E8644(v49, (uint64_t)v44);
    sub_1BC0E8644(v36, (uint64_t)&v16[qword_1EF402658]);
    sub_1BC13FAE8(0);
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v34;
    v38 = (_QWORD *)(v34 + qword_1EF4011E0);
    swift_beginAccess();
    *(_QWORD *)(v37 + 24) = *v38;
    *(_QWORD *)&v16[qword_1EF3FAD98] = v37;
    *(_QWORD *)&v16[qword_1EF3FADA0] = v46;
    sub_1BC2B2DEC();
    sub_1BC0E8710();
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1BC2B92D0;
    v40 = MEMORY[0x1E0D2B148];
    *(_QWORD *)(v39 + 32) = v34;
    *(_QWORD *)(v39 + 40) = v40;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1BC2B2E10();
    v41 = sub_1BC2B2FE4();
    swift_release();
    swift_release();
    sub_1BC0E1CFC(v36, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v28, v29);
    sub_1BC0E1CFC(v35, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
    return v41;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1BC13F1C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC13F8A4();
}

void sub_1BC13F1EC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  _QWORD v27[5];

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3FAA28, sub_1BC0FBE74);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - v3;
  sub_1BC0FBE74(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v10, 1);

  v11 = (void *)sub_1BC2B25C4();
  v26 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v11);

  if (v26)
  {
    type metadata accessor for ColorCell(0);
    v12 = swift_dynamicCastClass();
    if (!v12)
    {

      return;
    }
    v13 = v12 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
    swift_beginAccess();
    sub_1BC0E5774(v13, (uint64_t)v27);
    if (v27[3])
    {
      sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
      v14 = v26;
      v15 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, v15 ^ 1u, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
      {
        sub_1BC13F860((uint64_t)v4, (uint64_t)v9);
        sub_1BC2B2FD8();
        v16 = sub_1BC2B2DE0();
        swift_release();
        if (*(_QWORD *)(v16 + 16))
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_getObjectType();
          v17 = sub_1BC2B2A5C();
          swift_unknownObjectRelease();
          v18 = sub_1BC2B25F4();
          if ((v18 & 0x8000000000000000) == 0)
          {
            if (v18 < *(_QWORD *)(v17 + 16))
            {
              v19 = v17 + 16 * v18;
              v21 = *(_QWORD *)(v19 + 32);
              v20 = *(_QWORD *)(v19 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (v21 == 0xD000000000000011 && v20 == 0x80000001BC2CADA0
                || (sub_1BC2B53CC() & 1) != 0
                || v21 == 0xD000000000000012 && v20 == 0x80000001BC2CADC0
                || (sub_1BC2B53CC() & 1) != 0
                || v21 == 0x756F72676B636162 && v20 == 0xEF726F6C6F43646ELL)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                v24 = sub_1BC2B53CC();
                swift_bridgeObjectRelease();
                if ((v24 & 1) == 0)
                {
                  sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC0FBE74);

                  return;
                }
              }
              swift_retain();
              v22 = (void *)sub_1BC2B32A8();
              v27[0] = v22;
              sub_1BC2B3EC0();

              swift_release();
              sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
              return;
            }
            goto LABEL_27;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_27:
        __break(1u);
        return;
      }
    }
    else
    {
      v23 = v26;
      sub_1BC0E8594((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
    }

    sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EF3FAA28, sub_1BC0FBE74);
  }
}

uint64_t sub_1BC13F6A4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC13F1EC(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC13F754()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC13F780()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1BC13F7CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisualizationModificationStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC13F800()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC13F858()
{
  return type metadata accessor for VisualizationModificationStepViewController();
}

uint64_t sub_1BC13F860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0FBE74(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC13F8A4()
{
  char *v0;
  void (*v1)(char *, unint64_t, uint64_t);
  void (*v2)(char *, uint64_t);
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v0;
  v5 = sub_1BC2B32B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_1EF3FA9C0;
  v10 = sub_1BC2B3290();
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_5;
  v3 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v1 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  v1(v8, v10 + v3, v5);
  swift_bridgeObjectRelease();
  v11 = sub_1BC2B32A8();
  v2 = *(void (**)(char *, uint64_t))(v6 + 8);
  v2(v8, v5);
  v15 = v11;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FAA30, (void (*)(uint64_t))sub_1BC12A328);
  swift_allocObject();
  *(_QWORD *)&v4[v9] = sub_1BC2B3EF0();
  v9 = qword_1EF3FA9C8;
  v10 = sub_1BC2B3284();
  if (!*(_QWORD *)(v10 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v1(v8, v10 + v3, v5);
  swift_bridgeObjectRelease();
  v12 = sub_1BC2B32A8();
  v2(v8, v5);
  v15 = v12;
  swift_allocObject();
  *(_QWORD *)&v4[v9] = sub_1BC2B3EF0();
  v9 = qword_1EF3FA9D0;
  v10 = sub_1BC2B3284();
  if (!*(_QWORD *)(v10 + 16))
  {
    __break(1u);
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  v1(v8, v10 + v3, v5);
  swift_bridgeObjectRelease();
  v13 = sub_1BC2B32A8();
  v2(v8, v5);
  v15 = v13;
  swift_allocObject();
  *(_QWORD *)&v4[v9] = sub_1BC2B3EF0();
  *(_QWORD *)&v4[qword_1EF402620] = MEMORY[0x1E0DEE9E8];

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC13FAE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF3FAA40)
  {
    v2 = type metadata accessor for VisualizationModificationDataSource();
    v3 = sub_1BC0E519C(&qword_1EF3FAA48, (uint64_t (*)(uint64_t))type metadata accessor for VisualizationModificationDataSource, (uint64_t)&protocol conformance descriptor for VisualizationModificationDataSource);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF3FAA40);
  }
}

uint64_t sub_1BC13FB64()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MedicationOnboardingFlowManager(319);
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC13FC28()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1EF3FAA70);
}

void sub_1BC13FC38()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  char v9;
  id v10;
  id v11;
  unint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[2];
  objc_super v20;

  v1 = v0;
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  v3 = sub_1BC2B2E70();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for OnboardingStepViewController(0, *(_QWORD *)(v2 + qword_1EF402638), *(_QWORD *)(v2 + qword_1EF402638 + 8), v7);
  v20.receiver = v1;
  v20.super_class = v8;
  objc_msgSendSuper2(&v20, sel_viewDidLoad);
  sub_1BC2B2E64();
  v9 = sub_1BC2B2E58();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v9 & 1) == 0)
    goto LABEL_7;
  v10 = objc_msgSend(v1, sel_navigationItem);
  v11 = objc_msgSend(v10, sel_rightBarButtonItems);

  if (v11)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
    v12 = sub_1BC2B458C();

  }
  else
  {
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v19[1] = v12;
  v13 = (void *)sub_1BC2B4430();
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v13);

  v19[0] = v1;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithImage_style_target_action_, v14, 0, sub_1BC2B53C0(), sel_tapToRadarButtonTappedWithSender_);
  swift_unknownObjectRelease();

  if (!(v12 >> 62)
    || (swift_bridgeObjectRetain(), v18 = sub_1BC2B52D0(),
                                    swift_bridgeObjectRelease(),
                                    (v18 & 0x8000000000000000) == 0))
  {
    sub_1BC135088(0, 0, (uint64_t)v15);
    v16 = objc_msgSend(v1, sel_navigationItem);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
    v17 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setRightBarButtonItems_, v17);

LABEL_7:
    sub_1BC13FF18();
    return;
  }
  __break(1u);
}

void sub_1BC13FEE4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC13FC38();

}

void sub_1BC13FF18()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;

  v1 = *(void **)&v0[qword_1EF3FAA68];
  if (v1)
  {
    v2 = v0;
    if (v0[qword_1EF3FAA70] == 1)
    {
      v32 = v1;
      v3 = objc_msgSend(v0, sel_headerView);
      v4 = objc_msgSend(v3, sel_customIconContainerView);

      if (v4)
      {
        v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v32);
        objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        objc_msgSend(v5, sel_setContentMode_, 1);
        v6 = objc_msgSend(v2, sel_headerView);
        objc_msgSend(v6, sel_addSubview_, v5);

        v7 = objc_msgSend(v2, sel_contentView);
        v8 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
        objc_msgSend(v7, sel_setBackgroundColor_, v8);

        sub_1BC0E7940();
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1BC2BA730;
        v10 = objc_msgSend(v2, sel_headerView);
        v11 = objc_msgSend(v10, sel_topAnchor);

        v12 = objc_msgSend(v5, sel_topAnchor);
        v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

        *(_QWORD *)(v9 + 32) = v13;
        v14 = objc_msgSend(v2, sel_headerView);
        v15 = objc_msgSend(v14, sel_centerXAnchor);

        v16 = objc_msgSend(v5, sel_centerXAnchor);
        v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

        *(_QWORD *)(v9 + 40) = v17;
        v18 = objc_msgSend(v2, sel_headerView);
        v19 = objc_msgSend(v18, sel_widthAnchor);

        v20 = objc_msgSend(v5, sel_widthAnchor);
        v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

        *(_QWORD *)(v9 + 48) = v21;
        v22 = objc_msgSend(v5, sel_heightAnchor);
        v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 80.0);

        *(_QWORD *)(v9 + 56) = v23;
        v33 = v9;
        sub_1BC2B45A4();
        v24 = &v2[qword_1EF3FAA58];
        if (v24[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)] >= 0xA0u)
        {
          v25 = objc_msgSend(v2, sel_contentView);
          v26 = objc_msgSend(v25, sel_topAnchor);

          v27 = objc_msgSend(v2, sel_headerView);
          v28 = objc_msgSend(v27, sel_bottomAnchor);

          v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, 15.0);
          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();
        }
        v30 = (void *)objc_opt_self();
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
        v31 = (void *)sub_1BC2B4580();
        swift_bridgeObjectRelease();
        objc_msgSend(v30, sel_activateConstraints_, v31);

      }
      else
      {

      }
    }
  }
}

void *sub_1BC140408()
{
  void *v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (objc_msgSend(v0, sel_isFirstResponder))
  {
    v1 = v0;
  }
  else
  {
    v2 = objc_msgSend(v0, sel_subviews);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
    v3 = sub_1BC2B458C();

    if (v3 >> 62)
      goto LABEL_16;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v4)
    {
      v5 = 4;
      while (1)
      {
        v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCEE950](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v0 = (void *)sub_1BC140408();

        if (v0)
        {
          swift_bridgeObjectRelease();
          return v0;
        }
        ++v5;
        if (v8 == v4)
          goto LABEL_12;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v4 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v0;
}

void sub_1BC140554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  swift_getAssociatedTypeWitness();
  v1 = sub_1BC2B4FA0();
  MEMORY[0x1E0C80A78](v1);
  v2 = v0 + qword_1EF3FAA58;
  v3 = (char *)sub_1BC14061C
     + 4
     * byte_1BC2BBB90[*(unsigned __int8 *)(v2
                                         + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)) >> 5];
  __asm { BR              X11 }
}

void sub_1BC14061C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((a1 & 1) != 0)
  {
    sub_1BC14840C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v3, 1, 1, v2);
    swift_retain();
    sub_1BC2B3EC0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v1);
  }
  sub_1BC140720();
  sub_1BC140BB8();
}

uint64_t sub_1BC1406B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC12D75C(a1, a2, a3, (void (*)(uint64_t))sub_1BC140554);
}

void sub_1BC1406C4()
{
  sub_1BC140720();
  sub_1BC140BB8();
}

uint64_t sub_1BC1406DC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC12D75C(a1, a2, a3, (void (*)(uint64_t))sub_1BC1406C4);
}

id sub_1BC1406E8()
{
  void *v0;

  sub_1BC140720();
  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1BC140714(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC12D75C(a1, a2, a3, (void (*)(uint64_t))sub_1BC1406E8);
}

void sub_1BC140720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = v0 + qword_1EF3FAA58;
  v4 = (char *)&loc_1BC1407CC
     + dword_1BC140A4C[*(unsigned __int8 *)(v3
                                          + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)) >> 5];
  __asm { BR              X11 }
}

uint64_t sub_1BC1407DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BC2B3ED8();
  v3 = *(void **)(v2 - 72);
  if (v3)
  {
    objc_msgSend(*(id *)(v2 - 72), sel_scheduleType);

  }
  sub_1BC2B3668();
  sub_1BC2B3278();
  swift_retain();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC2B3ED8();
  v4 = *(void **)(v2 - 72);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(v2 - 72), sel_endDateTime);

    if (v5)
    {
      sub_1BC2B23A8();

      v6 = sub_1BC2B23F0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 0, 1, v6);
    }
    else
    {
      v6 = sub_1BC2B23F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
    }
    sub_1BC141D44(v1, v0);
    sub_1BC2B23F0();
    (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0, 1, v6);
  }
  else
  {
    v7 = sub_1BC2B23F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v0, 1, 1, v7);
  }
  sub_1BC0E1CFC(v0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC2B3638();
  swift_allocObject();
  sub_1BC2B362C();
  sub_1BC2B36D4();
  sub_1BC2B36C8();
  return swift_release();
}

id sub_1BC140A64()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1BC0E1C64(0, &qword_1EF3FAB20, (void (*)(uint64_t))MEMORY[0x1E0D2CDD8]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - v2;
  v4 = sub_1BC2B3098();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B30C8();
  sub_1BC2B30BC();
  sub_1BC2B30B0();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v3, &qword_1EF3FAB20, (void (*)(uint64_t))MEMORY[0x1E0D2CDD8]);
    return _s19HealthMedicationsUI0B10TapToRadarC19medicationsTracking14viewControllerySo06UIViewJ0CSg_tFZ_0(v0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_1BC2B308C();
    MEMORY[0x1BCCEC7FC](v7, v0);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1BC140BAC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC12D75C(a1, a2, a3, (void (*)(uint64_t))sub_1BC140A64);
}

void sub_1BC140BB8()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF3FAB18, (uint64_t)v12);
    swift_release();
  }
}

uint64_t sub_1BC140E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  v6 = sub_1BC2B39E0();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_1BC2B4658();
  v5[11] = sub_1BC2B464C();
  v5[12] = sub_1BC2B461C();
  v5[13] = v7;
  return swift_task_switch();
}

uint64_t sub_1BC140EF4()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_buttonTray);
  objc_msgSend(v1, sel_showButtonsBusy);

  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3254();
  swift_release();
  *(_QWORD *)(v0 + 112) = sub_1BC2B3938();
  swift_release();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v2;
  *v2 = v0;
  v2[1] = sub_1BC140FB4;
  return sub_1BC298B40();
}

uint64_t sub_1BC140FB4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC141014()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(void **)(v0 + 48);
  swift_release();
  sub_1BC14140C();
  sub_1BC141344();
  sub_1BC141940(v1);
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
  v3 = objc_msgSend(v2, sel_buttonTray);
  objc_msgSend(v3, sel_showButtonsAvailable);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC1410B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 128);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC2B39A4();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48C8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 80);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v22 = v8;
    *(_DWORD *)v7 = 136446722;
    v9 = sub_1BC2B54F8();
    *(_QWORD *)(v0 + 16) = sub_1BC12540C(v9, v10, &v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = sub_1BC12540C(0xD000000000000023, 0x80000001BC2CAFF0, &v22);
    sub_1BC2B4FD0();
    *(_WORD *)(v7 + 22) = 2080;
    *(_QWORD *)(v0 + 32) = v6;
    v11 = v6;
    sub_1BC0F6274();
    v12 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 40) = sub_1BC12540C(v12, v13, &v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%{public}s.%{public}s]: Failed to save medication with %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v8, -1, -1);
    MEMORY[0x1BCCEF3A0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v14 = *(void **)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC141344()
{
  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  sub_1BC2B314C();
  if ((sub_1BC2B3188() & 1) == 0)
  {
    type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3194();
  }
  return swift_release();
}

void sub_1BC14140C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_getObjectType();
  v0 = sub_1BC2B39E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48B0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v21 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_1BC2B54F8();
    v19 = v0;
    v20 = sub_1BC12540C(v8, v9, &v21);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%{public}s]: Submitting Tips Discoverability Signal", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  v10 = objc_msgSend((id)BiomeLibrary(), sel_Discoverability);
  swift_unknownObjectRelease();
  v11 = objc_msgSend(v10, sel_Signals);
  swift_unknownObjectRelease();
  v12 = objc_msgSend(v11, sel_source);
  sub_1BC2B4460();
  sub_1BC141708();
  v13 = objc_allocWithZone(MEMORY[0x1E0D01FF0]);
  v14 = (void *)sub_1BC2B4430();
  v15 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v13, sel_initWithContentIdentifier_context_osBuild_userInfo_, v14, v15, v16, 0);

  objc_msgSend(v12, sel_sendEvent_, v17);
}

uint64_t sub_1BC141708()
{
  void *v0;
  uint64_t result;
  void *v2;

  v0 = (void *)sub_1BC2B4430();
  result = MGGetStringAnswer();
  if (result)
  {
    v2 = (void *)result;
    sub_1BC2B4460();

    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    return 760434537;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC1417A4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC1417D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BC141D98(v0 + qword_1EF3FAA58);
  swift_bridgeObjectRelease();

  swift_release();
}

id sub_1BC141850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for OnboardingStepViewController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF402638), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF402638 + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_1BC1418A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1BC141D98(a1 + qword_1EF3FAA58);
  swift_bridgeObjectRelease();

  swift_release();
}

uint64_t type metadata accessor for OnboardingStepViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OnboardingStepViewController);
}

void sub_1BC141940(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void (*v18)(char *, uint64_t);
  BOOL v19;
  id v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v2 = sub_1BC2B23F0();
  v25 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v21 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  sub_1BC2B2684();
  sub_1BC2B2678();
  v11 = (void *)sub_1BC2B266C();
  swift_release();
  v12 = objc_msgSend(v11, sel_authorizationStatus);

  if (a1 >> 62)
    goto LABEL_19;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v13)
  {
    v22 = v12;
    v24 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    v14 = 4;
    v23 = a1;
    while (1)
    {
      v15 = v24 ? (id)MEMORY[0x1BCCEE950](v14 - 4, a1) : *(id *)(a1 + 8 * v14);
      v16 = v15;
      a1 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v12 = (id)v13;
      v17 = objc_msgSend(v15, sel_creationDate);
      sub_1BC2B23A8();

      sub_1BC2B23E4();
      sub_1BC2B233C();
      v18 = *(void (**)(char *, uint64_t))(v25 + 8);
      v18(v5, v2);
      LOBYTE(v17) = sub_1BC2B2378();
      v18(v8, v2);
      v18(v10, v2);

      if ((v17 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return;
      }
      ++v14;
      v13 = (uint64_t)v12;
      v19 = a1 == (_QWORD)v12;
      a1 = v23;
      if (v19)
      {
        swift_bridgeObjectRelease();
        v12 = v22;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    v13 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
LABEL_12:
  if (v12 != (id)2)
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_1EF3F80A8 != -1)
      swift_once();
    swift_beginAccess();
    objc_msgSend(v20, sel_postNotificationName_object_, qword_1EF3FA840, 0);

  }
}

uint64_t sub_1BC141C1C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC141C48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEB64;
  return sub_1BC140E60(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC141CC0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC141CEC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_showViewController_sender_, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC141D00()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC141D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC141D98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationOnboardingFlowManager(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCEF220](a1, v6, a5);
}

uint64_t InteractionSummaryItemState.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (!*v1 || v3 == 1)
    return sub_1BC2B545C();
  sub_1BC2B545C();
  return sub_1BC136AA4(a1, v3);
}

uint64_t InteractionSummaryItemState.hashValue.getter()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC2B5450();
  sub_1BC2B545C();
  if (v1 > 1)
    sub_1BC136AA4(v3, v1);
  return sub_1BC2B548C();
}

uint64_t sub_1BC141EE0()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC2B5450();
  sub_1BC2B545C();
  if (v1 > 1)
    sub_1BC136AA4(v3, v1);
  return sub_1BC2B548C();
}

uint64_t sub_1BC141F50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (!*v1 || v3 == 1)
    return sub_1BC2B545C();
  sub_1BC2B545C();
  return sub_1BC136AA4(a1, v3);
}

uint64_t sub_1BC141FBC()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC2B5450();
  sub_1BC2B545C();
  if (v1 > 1)
    sub_1BC136AA4(v3, v1);
  return sub_1BC2B548C();
}

unint64_t InteractionSummaryItem.itemState.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BC1427AC(v2);
}

void *InteractionSummaryItem.filteringMedication.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t InteractionSummaryItem.listManager.getter()
{
  return swift_retain();
}

id InteractionSummaryItem.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

uint64_t InteractionSummaryItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *InteractionSummaryItem.__allocating_init(itemState:filteringMedication:listManager:healthStore:didSelectCellCallback:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v12 = (_QWORD *)swift_allocObject();
  v13 = *a1;
  type metadata accessor for InteractionSummaryItemCell();
  sub_1BC0E008C(&qword_1EDA0F9B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell, (uint64_t)&protocol conformance descriptor for InteractionSummaryItemCell);
  v12[8] = sub_1BC2B2930();
  v12[9] = v14;
  v12[2] = v13;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a5;
  v12[7] = a6;
  return v12;
}

_QWORD *InteractionSummaryItem.init(itemState:filteringMedication:listManager:healthStore:didSelectCellCallback:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;

  v12 = *a1;
  type metadata accessor for InteractionSummaryItemCell();
  sub_1BC0E008C(&qword_1EDA0F9B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell, (uint64_t)&protocol conformance descriptor for InteractionSummaryItemCell);
  v6[8] = sub_1BC2B2930();
  v6[9] = v13;
  v6[2] = v12;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

unint64_t sub_1BC1421E0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3 <= 1)
    return sub_1BC2B545C();
  sub_1BC2B545C();
  swift_bridgeObjectRetain();
  sub_1BC136AA4(a1, v3);
  return sub_1BC1427BC(v3);
}

uint64_t InteractionSummaryItem.deinit()
{
  uint64_t v0;

  sub_1BC1427BC(*(_QWORD *)(v0 + 16));

  swift_release();
  sub_1BC0F2600(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionSummaryItem.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC1427BC(*(_QWORD *)(v0 + 16));

  swift_release();
  sub_1BC0F2600(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC142310()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE v3[72];

  sub_1BC2B5450();
  sub_1BC2B44D8();
  v1 = *(_QWORD *)(v0 + 16);
  sub_1BC2B545C();
  if (v1 > 1)
    sub_1BC136AA4(v3, v1);
  return sub_1BC2B548C();
}

uint64_t sub_1BC142390()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC1423C0(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI22InteractionSummaryItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BC1423CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 152))();
}

unint64_t sub_1BC1423F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *v1;
  sub_1BC2B44D8();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= 1)
    return sub_1BC2B545C();
  sub_1BC2B545C();
  swift_bridgeObjectRetain();
  sub_1BC136AA4(a1, v4);
  return sub_1BC1427BC(v4);
}

uint64_t sub_1BC14247C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  sub_1BC2B5450();
  v1 = *v0;
  sub_1BC2B44D8();
  v2 = *(_QWORD *)(v1 + 16);
  sub_1BC2B545C();
  if (v2 > 1)
  {
    swift_bridgeObjectRetain();
    sub_1BC136AA4(v4, v2);
    sub_1BC1427BC(v2);
  }
  return sub_1BC2B548C();
}

Swift::Void __swiftcall InteractionSummaryItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  uint64_t v2;
  void (*v3)(UIViewController *);

  v3 = *(void (**)(UIViewController *))(v2 + 48);
  if (v3)
    v3(in);
}

uint64_t InteractionSummaryItem.deselectionBehavior(in:)()
{
  uint64_t v0;

  type metadata accessor for InteractionSummaryItem();
  sub_1BC0E008C(&qword_1EF3FAB28, v0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItem, (uint64_t)&protocol conformance descriptor for InteractionSummaryItem);
  return sub_1BC2B2B70();
}

uint64_t sub_1BC1425A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t result;

  v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 48);
  if (v3)
    return v3(a2);
  return result;
}

uint64_t sub_1BC1425D8()
{
  type metadata accessor for InteractionSummaryItem();
  return sub_1BC2B2B70();
}

uint64_t _s19HealthMedicationsUI22InteractionSummaryItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
    if (!v3)
    {
      v4 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v2 != 1)
  {
    if (v3 >= 2)
    {
      sub_1BC1427AC(*(_QWORD *)(a1 + 16));
      sub_1BC1427AC(v3);
      sub_1BC1427AC(v2);
      sub_1BC1427AC(v3);
      v5 = sub_1BC16C514(v2, v3);
      sub_1BC1427BC(v2);
      sub_1BC1427BC(v3);
      v4 = v3;
      v3 = v2;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if (v3 != 1)
  {
LABEL_9:
    sub_1BC1427AC(*(_QWORD *)(a1 + 16));
    sub_1BC1427AC(v3);
    v5 = 0;
    v4 = v2;
    goto LABEL_11;
  }
  v4 = 1;
LABEL_7:
  v5 = 1;
LABEL_11:
  sub_1BC1427BC(v4);
  sub_1BC1427BC(v3);
  return v5 & 1;
}

uint64_t _s19HealthMedicationsUI27InteractionSummaryItemStateO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      v2 = 0;
      v4 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v2 != 1)
  {
    if (v3 >= 2)
    {
      sub_1BC1427AC(*a2);
      sub_1BC1427AC(v2);
      v4 = sub_1BC16C514(v2, v3);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
LABEL_8:
    sub_1BC1427AC(*a2);
    sub_1BC1427AC(v2);
    v4 = 0;
    goto LABEL_10;
  }
  v2 = 1;
  v4 = 1;
LABEL_10:
  sub_1BC1427BC(v2);
  sub_1BC1427BC(v3);
  return v4 & 1;
}

unint64_t sub_1BC1427AC(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_1BC1427BC(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for InteractionSummaryItem()
{
  return objc_opt_self();
}

unint64_t sub_1BC1427F0()
{
  unint64_t result;

  result = qword_1EF3FAB30;
  if (!qword_1EF3FAB30)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionSummaryItemState, &type metadata for InteractionSummaryItemState);
    atomic_store(result, (unint64_t *)&qword_1EF3FAB30);
  }
  return result;
}

uint64_t sub_1BC142834(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(qword_1EF3FAB38, a2, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItem, (uint64_t)&protocol conformance descriptor for InteractionSummaryItem);
}

uint64_t *initializeBufferWithCopyOfBuffer for InteractionSummaryItemState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for InteractionSummaryItemState(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for InteractionSummaryItemState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for InteractionSummaryItemState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionSummaryItemState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for InteractionSummaryItemState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1BC142A50(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BC142A68(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for InteractionSummaryItemState()
{
  return &type metadata for InteractionSummaryItemState;
}

uint64_t method lookup function for InteractionSummaryItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSummaryItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of InteractionSummaryItem.__allocating_init(itemState:filteringMedication:listManager:healthStore:didSelectCellCallback:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of InteractionSummaryItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of InteractionSummaryItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t destroy for MedicationsDayHistoryLineItem()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19HealthMedicationsUI29MedicationsDayHistoryLineItemVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationsDayHistoryLineItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MedicationsDayHistoryLineItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationsDayHistoryLineItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationsDayHistoryLineItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsDayHistoryLineItem()
{
  return &type metadata for MedicationsDayHistoryLineItem;
}

unint64_t sub_1BC142C68()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16))
    return 0xD000000000000011;
  else
    return 0xD000000000000015;
}

uint64_t sub_1BC142CA8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1BC142CB0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

_QWORD *sub_1BC142CB8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v14 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v14;
    v15 = a3[9];
    v26 = (char *)a1 + v15;
    v16 = (char *)a2 + v15;
    v17 = sub_1BC2B23F0();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v14;
    v18(v26, v16, v17);
    v20 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC142DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v5 = a1 + *(int *)(a2 + 36);
  v6 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC142E9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = a3[9];
  v24 = a1 + v14;
  v15 = a2 + v14;
  v16 = sub_1BC2B23F0();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v13;
  v17(v24, v15, v16);
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC142FAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = *(void **)(a2 + v10);
  v12 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  v13 = v11;

  v14 = a3[9];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v18 = a3[11];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1430E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1BC1431A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v12 = a3[8];
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  v14 = a3[9];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1432A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1432B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BC2B23F0();
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1BC14335C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC143368(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1BC2B23F0();
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for MedicationsDayHistoryItem()
{
  uint64_t result;

  result = qword_1EF3FAB98;
  if (!qword_1EF3FAB98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC14344C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = sub_1BC2B23F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BC14350C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC143558()
{
  return sub_1BC2B44D8();
}

uint64_t sub_1BC143568()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1435B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1435E4()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x6F74736948796144;
}

unint64_t sub_1BC143670()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FABE8;
  if (!qword_1EF3FABE8)
  {
    v1 = type metadata accessor for MedicationsDayHistoryItem();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BBEC8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FABE8);
  }
  return result;
}

uint64_t sub_1BC1436B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v4 = type metadata accessor for MedicationsDayHistoryItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(int *)(v8 + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  if (v12 == *v14 && v13 == v14[1])
  {
    sub_1BC143860(a1, (uint64_t)&v22 - v9);
    sub_1BC143860(a2, (uint64_t)v7);
LABEL_8:
    v18 = *(int *)(v4 + 28);
    v19 = *(_QWORD *)&v7[v18];
    if (*(_QWORD *)&v10[v18])
    {
      if (v19)
      {
        swift_bridgeObjectRetain();
        v20 = swift_bridgeObjectRetain();
        v17 = sub_1BC16CE20(v20, v19);
        swift_bridgeObjectRelease();
        sub_1BC1438A4((uint64_t)v7);
        sub_1BC1438A4((uint64_t)v10);
        swift_bridgeObjectRelease();
        return v17 & 1;
      }
      swift_bridgeObjectRetain();
      sub_1BC1438A4((uint64_t)v7);
      sub_1BC1438A4((uint64_t)v10);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BC1438A4((uint64_t)v7);
      sub_1BC1438A4((uint64_t)v10);
      if (!v19)
      {
        v17 = 1;
        return v17 & 1;
      }
    }
    swift_bridgeObjectRelease();
    v17 = 0;
    return v17 & 1;
  }
  v16 = sub_1BC2B53CC();
  sub_1BC143860(a1, (uint64_t)v10);
  sub_1BC143860(a2, (uint64_t)v7);
  if ((v16 & 1) != 0)
    goto LABEL_8;
  sub_1BC1438A4((uint64_t)v7);
  sub_1BC1438A4((uint64_t)v10);
  v17 = 0;
  return v17 & 1;
}

uint64_t sub_1BC143860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsDayHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1438A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationsDayHistoryItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MedicationSearchFieldItem.init(onActive:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B242C();
  v10 = sub_1BC2B23FC();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for MedicationSearchFieldCell();
  sub_1BC1439C0();
  result = sub_1BC2B2930();
  *a3 = v10;
  a3[1] = v12;
  a3[2] = a1;
  a3[3] = a2;
  a3[4] = result;
  a3[5] = v14;
  return result;
}

uint64_t type metadata accessor for MedicationSearchFieldCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC1439C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FABF0;
  if (!qword_1EF3FABF0)
  {
    v1 = type metadata accessor for MedicationSearchFieldCell();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BC0A4, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FABF0);
  }
  return result;
}

uint64_t MedicationSearchFieldItem.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationSearchFieldItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicationSearchFieldItem.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t MedicationSearchFieldItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationSearchFieldItem.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

unint64_t sub_1BC143B1C()
{
  unint64_t result;

  result = qword_1EF3FABF8;
  if (!qword_1EF3FABF8)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationSearchFieldItem, &type metadata for MedicationSearchFieldItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FABF8);
  }
  return result;
}

uint64_t sub_1BC143B60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for MedicationSearchFieldItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
    swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MedicationSearchFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2 + 2;
  v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MedicationSearchFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  if (!a1[2])
  {
    if (v4)
    {
      v6 = a2[3];
      a1[2] = v4;
      a1[3] = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  swift_release();
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MedicationSearchFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[2];
  if (!a1[2])
  {
    if (v5)
    {
      v7 = a2[3];
      a1[2] = v5;
      a1[3] = v7;
      goto LABEL_8;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_release();
LABEL_8:
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchFieldItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationSearchFieldItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationSearchFieldItem()
{
  return &type metadata for MedicationSearchFieldItem;
}

id sub_1BC143E30()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell____lazy_storage___searchBar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell____lazy_storage___searchBar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell____lazy_storage___searchBar);
  }
  else
  {
    v4 = sub_1BC143E90(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC143E90(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C38]), sel_init);
  objc_msgSend(v2, sel_setSearchBarStyle_, 2);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPlaceholder_, v4, 0xE000000000000000);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setDelegate_, a1);
  objc_msgSend(v2, sel_setAutocorrectionType_, 1);
  objc_msgSend(v2, sel_setSpellCheckingType_, 1);
  return v2;
}

void sub_1BC144168()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC143E30();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2BA730;
  v5 = objc_msgSend(v0, sel_contentView);
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = sub_1BC143E30();
  v8 = objc_msgSend(v7, sel_leadingAnchor);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v0, sel_contentView);
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  v12 = sub_1BC143E30();
  v13 = objc_msgSend(v12, sel_trailingAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(_QWORD *)(v4 + 40) = v14;
  v15 = objc_msgSend(v0, sel_contentView);
  v16 = objc_msgSend(v15, sel_topAnchor);

  v17 = sub_1BC143E30();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v4 + 48) = v19;
  v20 = objc_msgSend(v0, sel_contentView);
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  v22 = sub_1BC143E30();
  v23 = objc_msgSend(v22, sel_bottomAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v4 + 56) = v24;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v25 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v25);

}

id sub_1BC144450()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSearchFieldCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1444B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC144508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC144560())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1BC1445A4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void (*v8)(uint64_t);
  _BYTE v9[24];
  uint64_t v10;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_viewController);
  if (v4)
  {
    v7 = v4;
    type metadata accessor for NewMedicationOnboardingViewController();
    if (swift_dynamicCastClass())
    {
      objc_msgSend(a1, sel_resignFirstResponder);
      v5 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell_item;
      swift_beginAccess();
      sub_1BC0E5774(v5, (uint64_t)v9);
      if (v10)
      {
        sub_1BC0E1B94();
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_1BC0F2690((uint64_t)v8);
          swift_bridgeObjectRelease();
          sub_1BC0F2600((uint64_t)v8);
          v6 = swift_bridgeObjectRelease();
          if (v8)
          {
            v8(v6);
            sub_1BC0F2600((uint64_t)v8);
          }
        }
      }
      else
      {
        sub_1BC0F7954((uint64_t)v9);
      }
      sub_1BC233678(a1, v2);

    }
    else
    {

    }
  }
}

id sub_1BC144768(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id result;

  v2 = *a1;
  v3 = *a2;
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel);
  swift_beginAccess();
  *v4 = v2;
  sub_1BC144DC4();
  result = *(id *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview);
  if (result)
    return objc_msgSend(result, sel_hk_alignConstraintsWithView_, v3);
  return result;
}

uint64_t sub_1BC1447E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

id sub_1BC144824(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  id result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel);
  swift_beginAccess();
  *v3 = a1;
  sub_1BC144DC4();
  result = *(id *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview);
  if (result)
    return objc_msgSend(result, sel_hk_alignConstraintsWithView_, v1);
  return result;
}

id (*sub_1BC144898(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1448E0;
}

id sub_1BC1448E0(uint64_t a1, char a2)
{
  id result;
  uint64_t v5;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    sub_1BC144DC4();
    result = *(id *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview);
    if (result)
      return objc_msgSend(result, sel_hk_alignConstraintsWithView_, *(_QWORD *)(a1 + 24));
  }
  return result;
}

id sub_1BC144938()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel);
  }
  else
  {
    v4 = sub_1BC144994();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC144994()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B2990()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1 = (id)*MEMORY[0x1E0DC4B10];
  sub_1BC2B2984();
  sub_1BC2B2978();
  v2 = (void *)objc_opt_self();
  v3 = v0;
  v4 = objc_msgSend(v2, sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTextColor_, v4);

  v9 = sub_1BC2B4460();
  v10 = v5;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v6 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v9, v10);

  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v6;
}

id sub_1BC144B44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton);
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v4 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B2144();
    v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0xD000000000000014, 0x80000001BC2C76D0);
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id DrugInteractionSeverityLevelView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DrugInteractionSeverityLevelView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC144DC4()
{
  char *v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview], sel_removeFromSuperview);
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel];
  swift_beginAccess();
  if ((unint64_t)(*v2 - 2) >= 3)
  {
    if (*v2 != 1)
    {
      sub_1BC2B52B8();
      __break(1u);
      return;
    }
    v6 = sub_1BC144B44();
  }
  else
  {
    v3 = sub_1BC144938();
    sub_1BC253DF0(0xD000000000000016, 0x80000001BC2CB2C0, *v2);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v4 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v5 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setText_, v5, 0xE000000000000000);

    v6 = sub_1BC144938();
  }
  v7 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v6;

  if (*(_QWORD *)&v0[v1])
    objc_msgSend(v0, sel_addSubview_);
}

id DrugInteractionSeverityLevelView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void DrugInteractionSeverityLevelView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DrugInteractionSeverityLevelView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DrugInteractionSeverityLevelView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DrugInteractionSeverityLevelView()
{
  return objc_opt_self();
}

uint64_t sub_1BC1450A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t method lookup function for DrugInteractionSeverityLevelView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DrugInteractionSeverityLevelView.severityLevel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DrugInteractionSeverityLevelView.severityLevel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DrugInteractionSeverityLevelView.severityLevel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void FlexibleText.hash(into:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1BC2B545C();
    v3 = v1;
    sub_1BC2B4D90();
    sub_1BC145984(v1, v2, 1);
  }
  else
  {
    sub_1BC2B545C();
    sub_1BC2B44D8();
  }
}

uint64_t FlexibleText.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BC2B5450();
  sub_1BC2B545C();
  if ((v3 & 1) != 0)
  {
    v4 = v1;
    sub_1BC2B4D90();
    sub_1BC145984(v1, v2, 1);
  }
  else
  {
    sub_1BC2B44D8();
  }
  return sub_1BC2B548C();
}

uint64_t sub_1BC1452B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BC2B5450();
  sub_1BC2B545C();
  if ((v3 & 1) != 0)
  {
    v4 = v1;
    sub_1BC2B4D90();
    sub_1BC145984(v1, v2, 1);
  }
  else
  {
    sub_1BC2B44D8();
  }
  return sub_1BC2B548C();
}

void sub_1BC14534C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1BC2B545C();
    v3 = v1;
    sub_1BC2B4D90();
    sub_1BC145984(v1, v2, 1);
  }
  else
  {
    sub_1BC2B545C();
    sub_1BC2B44D8();
  }
}

uint64_t sub_1BC1453CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BC2B5450();
  sub_1BC2B545C();
  if ((v3 & 1) != 0)
  {
    v4 = v1;
    sub_1BC2B4D90();
    sub_1BC145984(v1, v2, 1);
  }
  else
  {
    sub_1BC2B44D8();
  }
  return sub_1BC2B548C();
}

uint64_t TitleWithSubtitleItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TitleWithSubtitleItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TitleWithSubtitleItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

id TitleWithSubtitleItem.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;

  v2 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BC145994(v2, v3, v4);
}

id TitleWithSubtitleItem.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;

  v2 = *(void **)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BC145994(v2, v3, v4);
}

uint64_t TitleWithSubtitleItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TitleWithSubtitleItem.init(title:subtitle:uniqueIdentifier:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v8 = *a1;
  v9 = a1[1];
  v10 = *((_BYTE *)a1 + 16);
  v11 = *a2;
  v12 = a2[1];
  v13 = *((_BYTE *)a2 + 16);
  swift_beginAccess();
  v14 = qword_1EF3FC888;
  *(_QWORD *)a5 = qword_1EF3FC880;
  *(_QWORD *)(a5 + 8) = v14;
  *(_QWORD *)(a5 + 16) = v8;
  *(_QWORD *)(a5 + 24) = v9;
  *(_BYTE *)(a5 + 32) = v10;
  *(_QWORD *)(a5 + 40) = v11;
  *(_QWORD *)(a5 + 48) = v12;
  *(_BYTE *)(a5 + 56) = v13;
  *(_QWORD *)(a5 + 64) = a3;
  *(_QWORD *)(a5 + 72) = a4;
  return swift_bridgeObjectRetain();
}

uint64_t TitleWithSubtitleItem.hash(into:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(void **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_BYTE *)(v0 + 56);
  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    sub_1BC2B545C();
    sub_1BC2B44D8();
    if ((v5 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    sub_1BC2B545C();
    v7 = v4;
    sub_1BC2B4D90();
    sub_1BC145984(v4, v3, 1);
    goto LABEL_6;
  }
  sub_1BC2B545C();
  v6 = v1;
  sub_1BC2B4D90();
  sub_1BC145984(v1, v2, 1);
  if ((v5 & 1) != 0)
    goto LABEL_5;
LABEL_3:
  sub_1BC2B545C();
  sub_1BC2B44D8();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t TitleWithSubtitleItem.hashValue.getter()
{
  sub_1BC2B5450();
  TitleWithSubtitleItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC14573C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC145768()
{
  sub_1BC2B5450();
  TitleWithSubtitleItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1457DC()
{
  sub_1BC2B5450();
  TitleWithSubtitleItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t _s19HealthMedicationsUI12FlexibleTextO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      sub_1BC102870();
      v4 = 1;
      sub_1BC145994(v5, v6, 1);
      sub_1BC145994(v2, v3, 1);
      v8 = sub_1BC2B4D84();
      v7 = 1;
      goto LABEL_13;
    }
LABEL_5:
    sub_1BC145994(*(void **)a2, *(_QWORD *)(a2 + 8), v7);
    sub_1BC145994(v2, v3, v4);
    v8 = 0;
    goto LABEL_13;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    goto LABEL_5;
  if (v2 == v5 && v3 == v6)
    v8 = 1;
  else
    v8 = sub_1BC2B53CC();
  sub_1BC145994(v5, v6, 0);
  sub_1BC145994(v2, v3, 0);
  v4 = 0;
  v7 = 0;
LABEL_13:
  sub_1BC145984(v2, v3, v4);
  sub_1BC145984(v5, v6, v7);
  return v8 & 1;
}

void sub_1BC145984(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

id sub_1BC145994(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t _s19HealthMedicationsUI21TitleWithSubtitleItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t result;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = *(void **)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 56);
  v8 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  v10 = *(void **)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 56);
  if ((v4 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) == 0)
    {
      v23 = *(_QWORD *)(a2 + 64);
      v24 = *(_QWORD *)(a1 + 72);
      v21 = *(_QWORD *)(a1 + 64);
      v22 = *(_QWORD *)(a2 + 72);
      v25 = *(_QWORD *)(a1 + 48);
      if (v3 == v8 && v2 == v7)
      {
        v12 = *(_QWORD *)(a2 + 48);
        sub_1BC145994(v3, v2, 0);
        sub_1BC145994(v3, v2, 0);
        sub_1BC145984(v3, v2, 0);
        sub_1BC145984(v3, v2, 0);
      }
      else
      {
        v12 = *(_QWORD *)(a2 + 48);
        v17 = sub_1BC2B53CC();
        sub_1BC145994(v8, v7, 0);
        sub_1BC145994(v3, v2, 0);
        sub_1BC145984(v3, v2, 0);
        sub_1BC145984(v8, v7, 0);
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
      goto LABEL_11;
    }
LABEL_6:
    sub_1BC145994(*(void **)(a2 + 16), *(_QWORD *)(a2 + 24), v9);
    sub_1BC145994(v3, v2, v4);
    sub_1BC145984(v3, v2, v4);
    v14 = v8;
    v15 = v7;
    v16 = v9;
LABEL_17:
    sub_1BC145984(v14, v15, v16);
    return 0;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) == 0)
    goto LABEL_6;
  v12 = *(_QWORD *)(a2 + 48);
  v24 = *(_QWORD *)(a1 + 72);
  v25 = *(_QWORD *)(a1 + 48);
  v22 = *(_QWORD *)(a2 + 72);
  v23 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a1 + 64);
  sub_1BC102870();
  sub_1BC145994(v8, v7, 1);
  sub_1BC145994(v3, v2, 1);
  sub_1BC145994(v8, v7, 1);
  sub_1BC145994(v3, v2, 1);
  v13 = sub_1BC2B4D84();
  sub_1BC145984(v3, v2, 1);
  sub_1BC145984(v8, v7, 1);
  sub_1BC145984(v8, v7, 1);
  sub_1BC145984(v3, v2, 1);
  if ((v13 & 1) == 0)
    return 0;
LABEL_11:
  if ((v6 & 1) != 0)
  {
    if ((v11 & 1) != 0)
    {
      sub_1BC102870();
      sub_1BC145994(v10, v12, 1);
      sub_1BC145994(v5, v25, 1);
      sub_1BC145994(v10, v12, 1);
      sub_1BC145994(v5, v25, 1);
      v19 = sub_1BC2B4D84();
      sub_1BC145984(v5, v25, 1);
      sub_1BC145984(v10, v12, 1);
      sub_1BC145984(v10, v12, 1);
      sub_1BC145984(v5, v25, 1);
      if ((v19 & 1) != 0)
        goto LABEL_24;
      return 0;
    }
    goto LABEL_16;
  }
  if ((v11 & 1) != 0)
  {
LABEL_16:
    sub_1BC145994(v10, v12, v11);
    sub_1BC145994(v5, v25, v6);
    sub_1BC145984(v5, v25, v6);
    v14 = v10;
    v15 = v12;
    v16 = v11;
    goto LABEL_17;
  }
  if (v5 == v10 && v25 == v12)
  {
    sub_1BC145994(v5, v25, 0);
    sub_1BC145994(v5, v25, 0);
    sub_1BC145984(v5, v25, 0);
    sub_1BC145984(v5, v25, 0);
  }
  else
  {
    v20 = sub_1BC2B53CC();
    sub_1BC145994(v10, v12, 0);
    sub_1BC145994(v5, v25, 0);
    sub_1BC145984(v5, v25, 0);
    sub_1BC145984(v10, v12, 0);
    result = 0;
    if ((v20 & 1) == 0)
      return result;
  }
LABEL_24:
  if (v21 == v23 && v24 == v22)
    return 1;
  else
    return sub_1BC2B53CC();
}

unint64_t sub_1BC145DD8()
{
  unint64_t result;

  result = qword_1EF3FAD48;
  if (!qword_1EF3FAD48)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for FlexibleText, &type metadata for FlexibleText);
    atomic_store(result, (unint64_t *)&qword_1EF3FAD48);
  }
  return result;
}

unint64_t sub_1BC145E20()
{
  unint64_t result;

  result = qword_1EF3FAD50;
  if (!qword_1EF3FAD50)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for TitleWithSubtitleItem, &type metadata for TitleWithSubtitleItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FAD50);
  }
  return result;
}

void destroy for FlexibleText(uint64_t a1)
{
  sub_1BC145984(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19HealthMedicationsUI12FlexibleTextOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC145994(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FlexibleText(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC145994(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BC145984(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FlexibleText(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BC145984(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FlexibleText()
{
  return &type metadata for FlexibleText;
}

uint64_t destroy for TitleWithSubtitleItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1BC145984(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_1BC145984(*(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TitleWithSubtitleItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1BC145994(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(void **)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1BC145994(v8, v9, v10);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TitleWithSubtitleItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_1BC145994(v4, v5, v6);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  sub_1BC145984(v7, v8, v9);
  v10 = *(void **)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_1BC145994(v10, v11, v12);
  v13 = *(void **)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  sub_1BC145984(v13, v14, v15);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for TitleWithSubtitleItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;
  char v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1BC145984(v6, v7, v8);
  v9 = *(_BYTE *)(a2 + 56);
  v10 = *(void **)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v9;
  sub_1BC145984(v10, v11, v12);
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TitleWithSubtitleItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TitleWithSubtitleItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TitleWithSubtitleItem()
{
  return &type metadata for TitleWithSubtitleItem;
}

uint64_t sub_1BC1462C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  void *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  _QWORD v42[2];
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v1 = v0;
  v2 = sub_1BC2B3848();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v56 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)v42 - v6;
  v7 = sub_1BC2B2594();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B38E4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v58 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  sub_1BC2B3890();
  sub_1BC2B2564();
  v17 = sub_1BC2B3824();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v54 = v16;
  v55 = v12;
  v18 = v16;
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v18, v11);
  v20 = *(char **)(v17 + 16);
  if (v20)
  {
    v52 = sel_didTapDay_;
    v50 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_disabledDays];
    v49 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_dayViews];
    v21 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v42[1] = v17;
    v22 = v17 + v21;
    v51 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays];
    swift_beginAccess();
    v23 = (char *)v22;
    v24 = *(_QWORD *)(v3 + 72);
    v47 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v48 = v24;
    v45 = *MEMORY[0x1E0D2F528];
    v46 = 0x80000001BC2CB360;
    v26 = v57;
    v25 = v58;
    v53 = v3;
    v44 = v2;
    v43 = v19;
    do
    {
      v57 = v23;
      v58 = v20;
      v27 = v47;
      v47(v26, v23, v2);
      v28 = (uint64_t)v56;
      v27(v56, v26, v2);
      v29 = objc_allocWithZone((Class)type metadata accessor for DayPickerDay());
      v30 = sub_1BC19346C(v28);
      sub_1BC2B3830();
      v31 = sub_1BC2B4460();
      v33 = v32;
      v59 = 0;
      v60 = 0xE000000000000000;
      v34 = v30;
      sub_1BC2B51BC();
      swift_bridgeObjectRelease();
      v59 = 0xD000000000000022;
      v60 = v46;
      v61 = sub_1BC2B383C();
      sub_1BC2B539C();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      v59 = v31;
      v60 = v33;
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setAccessibilityIdentifier_, v35);

      v36 = v54;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v51, v11);
      sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
      LOBYTE(v27) = sub_1BC2B5030();
      v37 = v43;
      v43(v36, v11);
      objc_msgSend(v34, sel_setSelected_, v27 & 1);
      v38 = v34;
      objc_msgSend(v38, sel_setEnabled_, (sub_1BC2B5030() & 1) == 0);

      objc_msgSend(v38, sel_addTarget_action_forControlEvents_, v1, v52, 64);
      v39 = v49;
      swift_beginAccess();
      v40 = v38;
      MEMORY[0x1BCCEDCF0]();
      if (*(_QWORD *)((*(_QWORD *)v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v39 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_1BC2B45C8();
      sub_1BC2B4604();
      sub_1BC2B45A4();
      swift_endAccess();
      objc_msgSend(v1, sel_addSubview_, v40);

      v37(v25, v11);
      v2 = v44;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v44);
      v23 = &v57[v48];
      v20 = v58 - 1;
    }
    while (v58 != (char *)1);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BC1467D0()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id *v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  unint64_t v42;

  v42 = MEMORY[0x1E0DEE9D8];
  v1 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v41 = objc_msgSend(v1, sel_topAnchor);

  v2 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v40 = objc_msgSend(v2, sel_bottomAnchor);

  v3 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = (id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_dayViews];
  swift_beginAccess();
  v6 = (unint64_t)*v5;
  if ((unint64_t)*v5 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v36 = v0;
  if (v7)
  {
    if (v7 >= 1)
    {
      v8 = 0;
      v9 = 0;
      v38 = v6;
      v39 = v6 & 0xC000000000000001;
      v10 = v4;
      v37 = v7;
      while (1)
      {
        if (v39)
          v12 = (id)MEMORY[0x1BCCEE950](v9, v6);
        else
          v12 = *(id *)(v6 + 8 * v9 + 32);
        v4 = v12;
        objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v36);
        v13 = objc_msgSend(v4, sel_leadingAnchor);
        v6 = (unint64_t)objc_msgSend(v13, sel_constraintEqualToAnchor_, v10);

        v14 = objc_msgSend(v4, sel_topAnchor);
        v15 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v41);

        v16 = objc_msgSend(v4, sel_bottomAnchor);
        v17 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v16);

        v0 = (char *)v42;
        if (v42 >> 62)
        {
          swift_bridgeObjectRetain();
          v30 = sub_1BC2B52D0();
          swift_bridgeObjectRelease();
          v19 = v30 + 3;
          if (__OFADD__(v30, 3))
          {
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        else
        {
          v18 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
          v19 = v18 + 3;
          if (__OFADD__(v18, 3))
            goto LABEL_32;
        }
        sub_1BC177590(v19, 1);
        sub_1BC2B45A4();
        v20 = (id)v6;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
        v21 = v15;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
        v22 = v17;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();

        v23 = objc_msgSend(v4, sel_heightAnchor);
        v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 44.0);

        LODWORD(v25) = 1144750080;
        objc_msgSend(v24, sel_setPriority_, v25);
        v26 = v24;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
        if (v8)
        {
          v27 = v8;
          v28 = objc_msgSend(v4, sel_widthAnchor);
          v29 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v27);

          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();

        }
        else
        {
          v8 = objc_msgSend(v4, sel_widthAnchor);
        }
        ++v9;
        v11 = v4;
        v4 = objc_msgSend(v11, sel_trailingAnchor);

        v10 = v4;
        v6 = v38;
        if (v37 == v9)
          goto LABEL_29;
      }
    }
    __break(1u);
  }
  else
  {
    v8 = 0;
LABEL_29:
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v36, sel_layoutMarginsGuide);
    v32 = objc_msgSend(v31, sel_trailingAnchor);

    v33 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v4);
    MEMORY[0x1BCCEDCF0]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC2B45C8();
    sub_1BC2B4604();
    sub_1BC2B45A4();
    v34 = (void *)objc_opt_self();
    sub_1BC11BF6C();
    v35 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_activateConstraints_, v35);

  }
}

uint64_t sub_1BC146E78(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unsigned int v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  sub_1BC1474E8();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B38E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v20 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  objc_msgSend(a1, sel_setSelected_, objc_msgSend(a1, sel_isSelected) ^ 1);
  sub_1BC2B3830();
  v16 = objc_msgSend(a1, sel_isSelected);
  v17 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays];
  if (v16)
  {
    swift_beginAccess();
    sub_1BC1470E8(v13, (uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  else
  {
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v17, v6);
    sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
    sub_1BC2B503C();
    if ((sub_1BC2B5060() & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v18 = 1;
    }
    else
    {
      sub_1BC2B506C();
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v5, v10, v6);
      v18 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v18, 1, v6);
    sub_1BC14753C((uint64_t)v5);
  }
  swift_endAccess();
  objc_msgSend(v1, sel_sendActionsForControlEvents_, 4096);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
}

uint64_t sub_1BC1470E8(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;

  v29 = a1;
  sub_1BC147578();
  v5 = v4;
  v6 = MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - v8;
  v10 = sub_1BC2B38E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v24 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v26 = v2;
  v17(v14, v2, v10);
  sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
  sub_1BC2B503C();
  sub_1BC139040(&qword_1EDA0FAB8, MEMORY[0x1E0D2CC08]);
  v25 = a2;
  v18 = sub_1BC2B4424() ^ 1;
  v28 = v5;
  v19 = &v9[*(int *)(v5 + 48)];
  *v9 = v18 & 1;
  if ((v18 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v21 = v25;
    v17(v19, v25, v10);
    v17(v14, v21, v10);
    sub_1BC2B5078();
    v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v20(v19, v16, v10);
  }
  v22 = &v27[*(int *)(v28 + 48)];
  v20(v22, v19, v10);
  v20(v29, v22, v10);
  return v18 & 1;
}

id sub_1BC147384()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayPicker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC147428()
{
  return type metadata accessor for DayPicker();
}

uint64_t type metadata accessor for DayPicker()
{
  uint64_t result;

  result = qword_1EF3FAD88;
  if (!qword_1EF3FAD88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC14746C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B38E4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BC1474E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FAC8)
  {
    sub_1BC2B38E4();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FAC8);
  }
}

uint64_t sub_1BC14753C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC1474E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC147578()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDA0FC80)
  {
    sub_1BC2B38E4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDA0FC80);
  }
}

uint64_t SpecificationStepViewController.init(item:dataSource:listManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = *MEMORY[0x1E0DEEDD8] & *v3;
  sub_1BC0E8644(a1, (uint64_t)v3 + qword_1EF402658);
  v8 = *(_QWORD *)(v7 + class metadata base offset for SpecificationStepViewController + 8);
  type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(0, *(_QWORD *)(v7 + class metadata base offset for SpecificationStepViewController), v8, v9);
  v10 = v3;
  v11 = swift_unknownObjectRetain();
  v15 = sub_1BC148324(v11, v12, v13, v14);
  swift_unknownObjectRelease();
  *(_QWORD *)((char *)v10 + qword_1EF3FAD98) = v15;
  *(_QWORD *)((char *)v10 + qword_1EF3FADA0) = a3;
  swift_retain();

  sub_1BC2B2DEC();
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
  }
  else
  {
    sub_1BC0E8710();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BC2B92D0;
    v17 = *(_QWORD *)(v8 + 8);
    *(_QWORD *)(v16 + 32) = a2;
    *(_QWORD *)(v16 + 40) = v17;
    swift_unknownObjectRetain();
    sub_1BC2B2E10();
  }
  v18 = sub_1BC2B2FE4();
  swift_unknownObjectRelease();
  swift_release();
  sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC128A44);
  return v18;
}

uint64_t type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource);
}

void SpecificationStepViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC147778()
{
  sub_1BC1483C8();
  return swift_retain();
}

uint64_t sub_1BC14778C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1EF3FADA0);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1BC1477DC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC147820()
{
  sub_1BC14840C();
  return swift_retain();
}

uint64_t sub_1BC147834()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v1 = (uint64_t *)((*MEMORY[0x1E0DEEDD8] & *v0) + class metadata base offset for SpecificationStepViewController);
  v3 = *v1;
  v2 = v1[1];
  swift_getAssociatedTypeWitness();
  sub_1BC2B4FA0();
  v4 = sub_1BC2B3EE4();
  MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v4);
  v5 = sub_1BC2B3DF4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - v7;
  v12[1] = *(_QWORD *)(*(_QWORD *)((char *)v0 + qword_1EF3FAD98) + 24);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v2;
  swift_retain();
  sub_1BC2B4004();
  swift_release();
  swift_release();
  MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95950], v5);
  v10 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t sub_1BC1479E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v7[16];

  sub_1BC118DAC();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7[15] = 0;
  sub_1BC2B3F14();
  sub_1BC148498();
  v5 = sub_1BC2B3FBC();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

void sub_1BC147A84()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v15[4];

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = objc_msgSend(v0, sel_navigationItem);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v5 = type metadata accessor for SpecificationStepViewController(0, *(_QWORD *)(v1 + class metadata base offset for SpecificationStepViewController), *(_QWORD *)(v1 + class metadata base offset for SpecificationStepViewController + 8), v4);
  v15[3] = v5;
  v15[0] = v0;
  v6 = v0;
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  if (v5)
  {
    v8 = __swift_project_boxed_opaque_existential_0(v15, v5);
    v9 = *(_QWORD *)(v5 - 8);
    MEMORY[0x1E0C80A78](v8);
    v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = sub_1BC2B53C0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v7, 2, v12, sel_cancelTapped_, v15[0]);

  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_setRightBarButtonItem_, v14);

}

uint64_t sub_1BC147CAC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BC147CD8(_BYTE *a1@<X8>)
{
  *a1 = 64;
}

uint64_t SpecificationStepViewController.__allocating_init(item:dataSource:listManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SpecificationStepViewController.init(item:dataSource:listManager:)(a1, a2, a3);
}

id SpecificationStepViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t SpecificationStepViewController.init(coder:)(uint64_t a1)
{
  return sub_1BC148150(a1, (uint64_t (*)(_QWORD, _QWORD))sub_1BC1484F8);
}

void sub_1BC147D78()
{
  sub_1BC1484F8();
}

uint64_t sub_1BC147DB0(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_1BC147DC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  sub_1BC147A84();
  v3 = (objc_class *)type metadata accessor for SpecificationStepViewController(0, *(_QWORD *)(v1 + class metadata base offset for SpecificationStepViewController), *(_QWORD *)(v1 + class metadata base offset for SpecificationStepViewController + 8), v2);
  v9.receiver = v0;
  v9.super_class = v3;
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v4 = objc_msgSend(v0, sel_collectionView);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

    v6 = objc_msgSend(v0, sel_collectionView);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      objc_msgSend(v7, sel_setBackgroundColor_, v8);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC147ECC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC147DC8();

}

void sub_1BC147F00(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC1484E0();

}

void sub_1BC147F4C(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  __int128 v6[2];
  uint64_t v7;
  id v8;
  _QWORD v9[4];

  v2 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC2B25C4();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    v8 = v4;
    sub_1BC14855C();
    sub_1BC0E8778(0, &qword_1EF3F9B08);
    v5 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC0F2730(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_0(v9, v9[3]);
      sub_1BC2B2B28();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1BC0E8594((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC148598);
    }
  }
}

uint64_t sub_1BC148094(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC147F4C(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SpecificationStepViewController.init(dataSource:)(uint64_t a1)
{
  return sub_1BC148150(a1, (uint64_t (*)(_QWORD, _QWORD))sub_1BC14839C);
}

uint64_t sub_1BC148150(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + class metadata base offset for SpecificationStepViewController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + class metadata base offset for SpecificationStepViewController + 8));
}

id SpecificationStepViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void SpecificationStepViewController.init(collectionViewLayout:)()
{
  sub_1BC148600();
}

void sub_1BC1481E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC148600();
}

uint64_t sub_1BC14822C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return sub_1BC0E8594(v0 + qword_1EF402658, (uint64_t (*)(_QWORD))sub_1BC128A44);
}

id SpecificationStepViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for SpecificationStepViewController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for SpecificationStepViewController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for SpecificationStepViewController+ 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BC1482CC(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_1BC0E8594(a1 + qword_1EF402658, (uint64_t (*)(_QWORD))sub_1BC128A44);
}

uint64_t *sub_1BC148324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);

  type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  v6 = (uint64_t *)swift_allocObject();
  v7 = *v6;
  v6[2] = a1;
  v9 = *(_QWORD *)(v7 + 80);
  v8 = *(_QWORD *)(v7 + 88);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 32);
  swift_unknownObjectRetain();
  v6[3] = v10(v9, v8);
  return v6;
}

void sub_1BC14839C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1483C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1EF3FADA0;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BC14840C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + qword_1EF3FAD98) + 24);
}

uint64_t sub_1BC148420()
{
  return swift_deallocObject();
}

uint64_t sub_1BC148430@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(a1, 1, AssociatedTypeWitness);
  *a2 = (_DWORD)result != 1;
  return result;
}

unint64_t sub_1BC148498()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9DD0;
  if (!qword_1EF3F9DD0)
  {
    sub_1BC118DAC();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9DD0);
  }
  return result;
}

id sub_1BC1484E0()
{
  void *v0;

  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1BC1484F8()
{
  sub_1BC2B52B8();
  __break(1u);
}

uint64_t type metadata accessor for SpecificationStepViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SpecificationStepViewController);
}

unint64_t sub_1BC14855C()
{
  unint64_t result;

  result = qword_1EF400110;
  if (!qword_1EF400110)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF400110);
  }
  return result;
}

void sub_1BC148598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400120)
  {
    sub_1BC0E8778(255, &qword_1EF3F9B08);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400120);
  }
}

void sub_1BC148600()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC14862C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1BC1483C8();
  return swift_retain();
}

uint64_t sub_1BC148654()
{
  uint64_t v0;

  v0 = swift_retain();
  return sub_1BC14778C(v0);
}

uint64_t sub_1BC14867C()
{
  return 16;
}

__n128 sub_1BC148688(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1BC148694()
{
  unint64_t v0;

  sub_1BC128A44();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t method lookup function for SpecificationStepViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SpecificationStepViewController.listManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 40))();
}

uint64_t dispatch thunk of SpecificationStepViewController.listManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 48))();
}

uint64_t dispatch thunk of SpecificationStepViewController.listManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 56))();
}

uint64_t dispatch thunk of SpecificationStepViewController.step.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 64))();
}

uint64_t dispatch thunk of SpecificationStepViewController.resultPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 72))();
}

uint64_t dispatch thunk of SpecificationStepViewController.canStepForwardPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of SpecificationStepViewController.shouldProceedManuallyPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 88))();
}

uint64_t dispatch thunk of SpecificationStepViewController.__allocating_init(item:dataSource:listManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController + v0 + 96))();
}

uint64_t sub_1BC148854()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1BC1488A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, char *, uint64_t);
  char v49;
  unint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, char *);
  void (*v68)(char *, char *);
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86[3];
  uint64_t v87[2];

  v74 = a4;
  v82 = a2;
  v83 = a3;
  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  v73 = v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v70 - v9;
  v80 = sub_1BC2B2024();
  v10 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v84 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v70 - v16;
  v18 = sub_1BC2B23F0();
  v19 = *(char **)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v76 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v79 = (char *)&v70 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v78 = (char *)&v70 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v70 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v70 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v70 - v32;
  sub_1BC149068(a1, v83, (uint64_t)v17);
  v81 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v19 + 6);
  if (v81(v17, 1, v18) == 1)
  {
    v34 = v72;
    v35 = v73;
    sub_1BC0F8D88((uint64_t)v17);
    sub_1BC2B39C8();
    (*((void (**)(char *, uint64_t, uint64_t))v19 + 2))(v76, a1, v18);
    v36 = sub_1BC2B39D4();
    v37 = v18;
    v38 = sub_1BC2B48C8();
    if (os_log_type_enabled(v36, v38))
    {
      v39 = swift_slowAlloc();
      v84 = (char *)swift_slowAlloc();
      v86[0] = (uint64_t)v84;
      *(_DWORD *)v39 = 136315394;
      v40 = sub_1BC2B54F8();
      v87[0] = sub_1BC12540C(v40, v41, v86);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      sub_1BC0E519C(&qword_1EF401820, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v42 = v76;
      v43 = sub_1BC2B539C();
      v87[0] = sub_1BC12540C(v43, v44, v86);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v19 + 1))(v42, v37);
      _os_log_impl(&dword_1BC0DC000, v36, v38, "<%s> Failed to strip date of unrelated components %s", (uint8_t *)v39, 0x16u);
      v45 = v84;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v45, -1, -1);
      MEMORY[0x1BCCEF3A0](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v77, v34);
    }
    else
    {
      (*((void (**)(char *, uint64_t))v19 + 1))(v76, v37);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v77, v34);
    }
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v46 = v17;
    v47 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v19 + 4);
    v47(v33, v46, v18);
    v48 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v19 + 2);
    v48(v31, v33, v18);
    v49 = sub_1BC2B2378();
    v70 = v33;
    if ((v49 & 1) != 0)
    {
      v75 = v47;
      v50 = MEMORY[0x1E0DEE9D8];
      v76 = v19;
      v77 = (char *)v18;
      v51 = v78;
      while (1)
      {
        sub_1BC2B2540();
        if (v81(v15, 1, v18) == 1)
          break;
        v75(v28, v15, v18);
        v48(v51, v31, v18);
        v48(v79, v28, v18);
        sub_1BC2B2000();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v50 = sub_1BC0FA8CC(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
        v53 = *(_QWORD *)(v50 + 16);
        v52 = *(_QWORD *)(v50 + 24);
        if (v53 >= v52 >> 1)
          v50 = sub_1BC0FA8CC(v52 > 1, v53 + 1, 1, v50);
        *(_QWORD *)(v50 + 16) = v53 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v50+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v53, v84, v80);
        v19 = v76;
        v18 = (uint64_t)v77;
        (*((void (**)(char *, char *, char *))v76 + 5))(v31, v28, v77);
        if ((sub_1BC2B2378() & 1) == 0)
          goto LABEL_16;
      }
      sub_1BC0F8D88((uint64_t)v15);
      v56 = v71;
      sub_1BC2B39C8();
      v57 = sub_1BC2B39D4();
      v58 = sub_1BC2B48C8();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = swift_slowAlloc();
        v60 = swift_slowAlloc();
        v87[0] = v60;
        *(_DWORD *)v59 = 136315394;
        v61 = sub_1BC2B54F8();
        v86[0] = sub_1BC12540C(v61, v62, v87);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 12) = 2080;
        swift_beginAccess();
        sub_1BC0E519C(&qword_1EF401820, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
        v63 = v19;
        v64 = v77;
        v65 = sub_1BC2B539C();
        v85 = sub_1BC12540C(v65, v66, v87);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v57, v58, "<%s> Failed to add interval to current start date %s", (uint8_t *)v59, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v60, -1, -1);
        MEMORY[0x1BCCEF3A0](v59, -1, -1);

        (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);
        v67 = (void (*)(char *, char *))*((_QWORD *)v63 + 1);
        v67(v70, v64);
        v67(v31, v64);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v73 + 8))(v56, v72);
        v68 = (void (*)(char *, char *))*((_QWORD *)v19 + 1);
        v69 = v77;
        v68(v70, v77);
        v68(v31, v69);
      }
    }
    else
    {
      v50 = MEMORY[0x1E0DEE9D8];
LABEL_16:
      v54 = (void (*)(char *, uint64_t))*((_QWORD *)v19 + 1);
      v54(v70, v18);
      v54(v31, v18);
    }
  }
  return v50;
}

uint64_t sub_1BC149068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _QWORD, uint64_t);
  unint64_t v26;
  void (*v27)(unint64_t, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a1;
  v32 = a3;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0E740, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], v4);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  v11 = sub_1BC2B20FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B2594();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
  v16 = sub_1BC2B25B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_1BC2B20E4();
  LOBYTE(v10) = MEMORY[0x1BCCEB7E8](a2, v14);
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30 = v11;
  v17(v14, v11);
  sub_1BC0E7998(0, &qword_1EDA0EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = sub_1BC2B257C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v22 = 2 * v20;
  v23 = swift_allocObject();
  if ((v10 & 1) != 0)
  {
    *(_OWORD *)(v23 + 16) = xmmword_1BC2BC350;
    v24 = v23 + v21;
    v25 = *(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104);
    v25(v24, *MEMORY[0x1E0CB1158], v18);
    v25(v24 + v20, *MEMORY[0x1E0CB1160], v18);
    v25(v24 + v22, *MEMORY[0x1E0CB1130], v18);
    v25(v24 + 3 * v20, *MEMORY[0x1E0CB1140], v18);
  }
  else
  {
    *(_OWORD *)(v23 + 16) = xmmword_1BC2B9600;
    v26 = v23 + v21;
    v27 = *(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104);
    v27(v26, *MEMORY[0x1E0CB1158], v18);
    v27(v26 + v20, *MEMORY[0x1E0CB1160], v18);
    v27(v26 + v22, *MEMORY[0x1E0CB1130], v18);
  }
  sub_1BC14A174(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC2B24D4();
  swift_bridgeObjectRelease();
  sub_1BC2B2534();
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v30);
}

uint64_t sub_1BC149440(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v8[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v3 = (void *)sub_1BC2B2360();
  v4 = (void *)sub_1BC2B2360();
  v8[4] = sub_1BC14A418;
  v8[5] = v2;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1BC149838;
  v8[3] = &block_descriptor_7;
  v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateStatisticsFromDate_toDate_withBlock_, v3, v4, v5);
  _Block_release(v5);

  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v6;
}

id sub_1BC149570(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id result;
  void *v16;
  unint64_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BC0FC518(0, (unint64_t *)&unk_1EDA0E6E8, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - v7;
  v9 = sub_1BC2B23F0();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1BC2B2024();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, sel_sumQuantity);
  if (result)
  {
    v16 = result;
    v30 = v6;
    v17 = (unint64_t *)(a3 + 16);
    v18 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
    objc_msgSend(v16, sel_doubleValueForUnit_, v18);
    v20 = v19;

    v21 = objc_msgSend(a1, sel_startDate);
    sub_1BC2B23A8();

    v22 = objc_msgSend(a1, sel_endDate);
    sub_1BC2B23A8();

    sub_1BC2B2000();
    v23 = *(int *)(v31 + 48);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v14, v11);
    *(_QWORD *)&v8[v23] = v20;
    swift_beginAccess();
    v24 = *v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v17 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v24 = sub_1BC0FA8E0(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
      *v17 = v24;
    }
    v27 = *(_QWORD *)(v24 + 16);
    v26 = *(_QWORD *)(v24 + 24);
    v28 = v30;
    if (v27 >= v26 >> 1)
    {
      v24 = sub_1BC0FA8E0(v26 > 1, v27 + 1, 1, v24);
      *v17 = v24;
    }
    *(_QWORD *)(v24 + 16) = v27 + 1;
    sub_1BC14AE50((uint64_t)v8, v24+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v27, (unint64_t *)&unk_1EDA0E6E8, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
    return (id)swift_endAccess();
  }
  return result;
}

void sub_1BC149838(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

unint64_t sub_1BC149894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  unint64_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = sub_1BC2B23F0();
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v37 - v5;
  sub_1BC0FC518(0, &qword_1EDA0E718, v6);
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v37 - v12;
  MEMORY[0x1E0C80A78](v11);
  v43 = (uint64_t)&v37 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC0FC518(0, (unint64_t *)&unk_1EDA0E6E8, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v38 = *(_QWORD *)(v16 + 72);
  v39 = v15;
  v37 = a1;
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x1E0DEE9D8];
  v19 = &qword_1EDA0E718;
  v20 = MEMORY[0x1E0CB0870];
  v21 = (uint64_t)v40;
  v22 = v41;
  do
  {
    v48 = v14;
    v23 = *(_QWORD *)(v17 + *(int *)(v39 + 48));
    v24 = *(int *)(v45 + 48);
    sub_1BC2B200C();
    v25 = (void (*)(uint64_t))v20;
    v26 = v42;
    sub_1BC2B1FF4();
    sub_1BC2B2264();
    sub_1BC2B2264();
    sub_1BC2B2258();
    v27 = *(void (**)(char *, uint64_t))(v46 + 8);
    v28 = v26;
    v29 = v19;
    v30 = v10;
    v31 = v47;
    v27(v28, v47);
    v32 = v31;
    v10 = v30;
    v19 = v29;
    v20 = (uint64_t (*)(void))v25;
    v27(v22, v32);
    *(_QWORD *)(v21 + v24) = v23;
    v33 = v43;
    sub_1BC14AE50(v21, v43, v19, v25);
    sub_1BC14AE50(v33, (uint64_t)v10, v19, v25);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_1BC0FAB34(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
    v35 = *(_QWORD *)(v18 + 16);
    v34 = *(_QWORD *)(v18 + 24);
    if (v35 >= v34 >> 1)
      v18 = sub_1BC0FAB34(v34 > 1, v35 + 1, 1, v18);
    *(_QWORD *)(v18 + 16) = v35 + 1;
    sub_1BC14AE50((uint64_t)v10, v18+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v35, v19, v25);
    v17 += v38;
    v14 = v48 - 1;
  }
  while (v48 != 1);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1BC149BB0()
{
  sub_1BC2B2264();
  sub_1BC2B2264();
  return sub_1BC2B2258();
}

uint64_t sub_1BC149C08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t);
  unint64_t *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD aBlock[7];

  v8 = sub_1BC2B23F0();
  v68 = *(_QWORD *)(v8 - 8);
  v69 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v67 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v64 = (char *)v55 - v11;
  sub_1BC0FC518(0, &qword_1EDA0E718, v12);
  v65 = *(_QWORD *)(v13 - 8);
  v66 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v70 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v63 = (char *)v55 - v17;
  MEMORY[0x1E0C80A78](v16);
  v62 = (uint64_t)v55 - v18;
  v19 = sub_1BC2B2594();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2564();
  v59 = v22;
  v58 = sub_1BC1488A0(a1, a2, a3, (uint64_t)v22);
  v23 = swift_allocObject();
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 16) = MEMORY[0x1E0DEE9D8];
  v25 = (void *)sub_1BC2B2360();
  v26 = (void *)sub_1BC2B2360();
  aBlock[4] = sub_1BC14A418;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC149838;
  aBlock[3] = &block_descriptor_5;
  v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_enumerateStatisticsFromDate_toDate_withBlock_, v25, v26, v27);
  _Block_release(v27);

  swift_beginAccess();
  v28 = *(_QWORD *)(v23 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  v29 = *(char **)(v28 + 16);
  if (v29)
  {
    v56 = v20;
    v57 = v19;
    sub_1BC0FC518(0, (unint64_t *)&unk_1EDA0E6E8, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = v28 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    v60 = *(_QWORD *)(v31 + 72);
    v61 = v30;
    v55[1] = v28;
    swift_bridgeObjectRetain();
    v33 = &qword_1EDA0E718;
    v34 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    v35 = (uint64_t)v70;
    v36 = v64;
    do
    {
      v70 = v29;
      v37 = *(_QWORD *)(v32 + *(int *)(v61 + 48));
      v38 = *(int *)(v66 + 48);
      sub_1BC2B200C();
      v39 = v24;
      v40 = v34;
      v41 = v33;
      v42 = v67;
      sub_1BC2B1FF4();
      sub_1BC2B2264();
      sub_1BC2B2264();
      v43 = v63;
      sub_1BC2B2258();
      v44 = *(void (**)(char *, uint64_t))(v68 + 8);
      v45 = v42;
      v46 = v69;
      v44(v45, v69);
      v47 = v46;
      v33 = v41;
      v34 = v40;
      v24 = v39;
      v44(v36, v47);
      *(_QWORD *)&v43[v38] = v37;
      v48 = (uint64_t)v43;
      v49 = v62;
      sub_1BC14AE50(v48, v62, v33, v34);
      sub_1BC14AE50(v49, v35, v33, v34);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_1BC0FAB34(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
      v51 = *(_QWORD *)(v24 + 16);
      v50 = *(_QWORD *)(v24 + 24);
      v52 = v70;
      if (v51 >= v50 >> 1)
        v24 = sub_1BC0FAB34(v50 > 1, v51 + 1, 1, v24);
      *(_QWORD *)(v24 + 16) = v51 + 1;
      sub_1BC14AE50(v35, v24+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v51, v33, v34);
      v32 += v60;
      v29 = v52 - 1;
    }
    while (v29);
    swift_bridgeObjectRelease();
    v19 = v57;
    v20 = v56;
  }
  swift_bridgeObjectRelease();
  v53 = sub_1BC14A420(v58, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v59, v19);
  return v53;
}

double sub_1BC14A0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  double v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  if (v1 == 1)
  {
    v2 = 0;
    result = 0.0;
LABEL_8:
    v6 = v1 - v2;
    v7 = (double *)(a1 + 8 * v2 + 32);
    do
    {
      v8 = *v7++;
      result = result + v8;
      --v6;
    }
    while (v6);
    return result;
  }
  v2 = v1 & 0x7FFFFFFFFFFFFFFELL;
  v4 = (double *)(a1 + 40);
  result = 0.0;
  v5 = v1 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    result = result + *(v4 - 1) + *v4;
    v4 += 2;
    v5 -= 2;
  }
  while (v5);
  if (v1 != v2)
    goto LABEL_8;
  return result;
}

uint64_t MedicationChartStatisticsFormatter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MedicationChartStatisticsFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BC14A174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1BC2B257C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1BC14AE9C(0, &qword_1EDA0E9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1EDA0E720, MEMORY[0x1E0CB11D0]);
    v9 = sub_1BC2B51A4();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1BC0E519C(&qword_1EDA0E720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1BC2B43E8();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1BC0E519C(&qword_1EDA0E728, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1BC2B4424();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1BC14A3F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BC14A418(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC149570(a1, a2, v2);
}

uint64_t sub_1BC14A420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, char *, uint64_t);
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;

  sub_1BC0FC440();
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x1E0C80A78](v4);
  v60 = (uint64_t)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B2024();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v67 = (char *)v51 - v11;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E6D0, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v51 - v14;
  sub_1BC0FC518(0, &qword_1EDA0E718, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v68 = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v64 = (uint64_t)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v51 - v20;
  v22 = *(_QWORD *)(a2 + 16);
  if (!v22)
    return MEMORY[0x1E0DEE9D8];
  v63 = a2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  sub_1BC14AD6C(v63, (uint64_t)v51 - v20);
  v58 = *(_QWORD *)(a1 + 16);
  if (v58)
  {
    v57 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v56 = *(_QWORD *)(v7 + 72);
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v51[1] = a1;
    swift_bridgeObjectRetain();
    v24 = 0;
    v25 = 0;
    v59 = MEMORY[0x1E0DEE9D8];
    v65 = v7;
    v66 = v23;
    v55 = v15;
    v62 = v17;
    v26 = v23;
    do
    {
      v61 = v25;
      v26(v15, v57 + v56 * v25, v6);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v28(v15, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
      {
        v49 = v59;
        goto LABEL_31;
      }
      v29 = v67;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v67, v15, v6);
      v26(v10, (uint64_t)v29, v6);
      v54 = v28;
      if (v24 >= v22)
      {
        v35 = *(void (**)(char *, uint64_t))(v7 + 8);
        v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v35(v10, v6);
      }
      else
      {
        v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v34 = sub_1BC2B2018();
          v35 = *(void (**)(char *, uint64_t))(v7 + 8);
          v35(v10, v6);
          if ((v34 & 1) == 0)
            break;
          v36 = *(int *)(v68 + 48);
          v37 = *(_QWORD *)&v21[v36];
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1BC0FAB64(0, v30[2] + 1, 1, v30);
            v30 = (_QWORD *)result;
          }
          v40 = v30[2];
          v39 = v30[3];
          if (v40 >= v39 >> 1)
          {
            result = (uint64_t)sub_1BC0FAB64((_QWORD *)(v39 > 1), v40 + 1, 1, v30);
            v30 = (_QWORD *)result;
          }
          v30[2] = v40 + 1;
          v30[v40 + 4] = v37;
          v41 = v24 + 1;
          v7 = v65;
          if (v24 + 1 < v22)
          {
            if (v24 < -1)
            {
              __break(1u);
              return result;
            }
            v31 = v64;
            sub_1BC14AD6C(v63 + *(_QWORD *)(v62 + 72) * v41, v64);
            v32 = *(_QWORD *)(v31 + *(int *)(v68 + 48));
            v33 = sub_1BC2B23F0();
            (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v21, v31, v33);
            *(_QWORD *)&v21[v36] = v32;
          }
          v26 = v66;
          v66(v10, (uint64_t)v67, v6);
          v24 = v41;
          if (v22 == v41)
          {
            v24 = v22;
            v35(v10, v6);
            break;
          }
        }
      }
      if (v30[2])
      {
        v42 = *(int *)(v53 + 48);
        v43 = (void (*)(uint64_t, char *, uint64_t))v26;
        v44 = v60;
        v43(v60, v67, v6);
        *(_QWORD *)(v44 + v42) = v30;
        v45 = v59;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v45 = sub_1BC0FAB50(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
        v47 = *(_QWORD *)(v45 + 16);
        v46 = *(_QWORD *)(v45 + 24);
        if (v47 >= v46 >> 1)
          v45 = sub_1BC0FAB50(v46 > 1, v47 + 1, 1, v45);
        *(_QWORD *)(v45 + 16) = v47 + 1;
        v48 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
        v59 = v45;
        sub_1BC14AE0C(v60, v45 + v48 + *(_QWORD *)(v52 + 72) * v47);
        v26 = v66;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v27 = v61 + 1;
      v35(v67, v6);
      v25 = v27;
      v15 = v55;
    }
    while (v27 != v58);
    v49 = v59;
    v54(v55, 1, 1, v6);
  }
  else
  {
    v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v49 = MEMORY[0x1E0DEE9D8];
    v50(v15, 1, 1, v6);
  }
LABEL_31:
  swift_bridgeObjectRelease();
  sub_1BC14ADC0((uint64_t)v21);
  return v49;
}

uint64_t type metadata accessor for MedicationChartStatisticsFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicationChartStatisticsFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.dateIntervales(startDate:endDate:interval:calendar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.stripDate(_:statisticInterval:calendar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.createValueStatisticWindowTuplesFrom(_:startDate:endDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.transformDateIntervalsToMidpointDate(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.midpointDate(start:end:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.summarizeValuesBelongingTo(dateIntervals:in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.synthesizeDateIntervaledStatisticsWithStartDate(_:endDate:statisticsInterval:statisticCollection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.sumOfDoubleValuesIn(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1BC14A9BC(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1BC14AE9C(0, &qword_1EDA0FE28, (uint64_t (*)(uint64_t))sub_1BC14AD30, (unint64_t *)&unk_1EDA0FD90, MEMORY[0x1E0DEFCF8]);
      v3 = sub_1BC2B51A4();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v39 = v1;
    while (1)
    {
      v8 = MEMORY[0x1BCCEE950](v7, v1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_1BC2B4D78();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_1BC14AD30();
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_1BC2B4D84();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v1 = v39;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1BC2B4D84();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v39;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v41)
        return;
    }
  }
  v24 = 0;
  v40 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v1 + 32 + 8 * v24);
    v26 = sub_1BC2B4D78();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1BC14AD30();
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1BC2B4D84();

      if ((v33 & 1) != 0)
        goto LABEL_24;
      v34 = ~v27;
      v28 = (v28 + 1) & v34;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if ((v30 & (1 << v28)) != 0)
      {
        while (1)
        {
          v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
          v36 = sub_1BC2B4D84();

          if ((v36 & 1) != 0)
            break;
          v28 = (v28 + 1) & v34;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v4 = v41;
        goto LABEL_25;
      }
LABEL_32:
      v4 = v41;
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v4)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t sub_1BC14AD30()
{
  unint64_t result;

  result = qword_1EDA0FD88;
  if (!qword_1EDA0FD88)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FD88);
  }
  return result;
}

uint64_t sub_1BC14AD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0FC518(0, &qword_1EDA0E718, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC14ADC0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0FC518(0, &qword_1EDA0E718, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC14AE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0FC440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC14AE50(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC0FC518(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1BC14AE9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC0E519C(a4, a3, a5);
    v9 = sub_1BC2B51B0();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC14AF24()
{
  return swift_retain();
}

uint64_t sub_1BC14AF34(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v4 = *a2;
  v5 = qword_1EF3FAEC0;
  swift_retain();
  result = sub_1BC2B3338();
  if (*(_QWORD *)(result + 16) < 8uLL)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = result;
  v8 = v2 + v5;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B3350() - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  *(_QWORD *)v8 = v7;
  *(_QWORD *)(v8 + 8) = v7 + v10;
  *(_OWORD *)(v8 + 16) = xmmword_1BC2BC3A0;
  v11 = qword_1EF3FAEC8;
  result = sub_1BC2B3338();
  if (*(_QWORD *)(result + 16) < 0x1CuLL)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v12 = v2 + v11;
  *(_QWORD *)v12 = result;
  *(_QWORD *)(v12 + 8) = result + v10;
  *(_OWORD *)(v12 + 16) = xmmword_1BC2BC3B0;
  v13 = qword_1EF3FAED0;
  result = sub_1BC2B3338();
  if (*(_QWORD *)(result + 16) < 0x28uLL)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v14 = v2 + v13;
  *(_QWORD *)v14 = result;
  *(_QWORD *)(v14 + 8) = result + v10;
  *(_OWORD *)(v14 + 16) = xmmword_1BC2BC3C0;
  v15 = qword_1EF3FAED8;
  result = sub_1BC2B3338();
  v16 = *(_QWORD *)(result + 16);
  if (v16 >= 0x28)
  {
    v17 = (uint64_t *)(v2 + v15);
    *v17 = result;
    v17[1] = result + v10;
    v17[2] = 40;
    v17[3] = (2 * v16) | 1;
    *(_QWORD *)(v2 + qword_1EF3FAEE0) = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)(v2 + qword_1EF3FAEA8) = a1;
    swift_retain();
    swift_release();
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC2B2BC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
    sub_1BC2B2BAC();
    *(_BYTE *)(swift_allocObject() + 16) = v4;
    v18 = sub_1BC2B2F18();
    swift_retain();
    sub_1BC14B7CC();
    swift_release();
    swift_release();
    return v18;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BC14B164(uint64_t a1, void *a2, char a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  void *v34;
  double v35;
  double v36;
  void *v37;
  double v38;
  double v39;
  char *v40;
  void *v41;
  id v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v58 = a1;
  v4 = a3 & 1;
  v5 = sub_1BC2B2D20();
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B2AE0();
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a2, sel_traitCollection);
  v11 = sub_1BC2B4A3C();

  v54 = v4;
  if (v11 < 3 || v4 == 0)
  {
    v13 = (void *)objc_opt_self();
    v14 = 3.5;
    if ((objc_msgSend(v13, sel_hk_currentDeviceHas4InchScreen) & 1) == 0)
    {
      if (objc_msgSend(v13, sel_hk_currentDeviceHas4Point7InchScreen))
        v14 = 3.5;
      else
        v14 = 4.0;
    }
  }
  else
  {
    v14 = 44.0;
  }
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_fractionalWidthDimension_, 0.25);
  v17 = objc_msgSend(v15, sel_fractionalHeightDimension_, 1.0);
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_sizeWithWidthDimension_heightDimension_, v16, v17);

  v20 = (void *)objc_opt_self();
  v55 = v19;
  v21 = objc_msgSend(v20, sel_itemWithLayoutSize_, v19);
  sub_1BC2B4AF0();
  objc_msgSend(v21, sel_setContentInsets_);
  v22 = objc_msgSend(v15, sel_fractionalWidthDimension_, 1.0);
  v23 = objc_msgSend(v15, sel_fractionalWidthDimension_, 0.25);
  v24 = objc_msgSend(v18, sel_sizeWithWidthDimension_heightDimension_, v22, v23);

  v25 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v26 + 32) = v21;
  v59 = v26;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, &qword_1EF3FAFA0);
  v27 = v21;
  v28 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v25, sel_horizontalGroupWithLayoutSize_subitems_, v24, v28);

  sub_1BC2B2ABC();
  v30 = objc_msgSend((id)objc_opt_self(), sel_sectionWithGroup_, v29);
  objc_msgSend(v30, sel_setContentInsetsReference_, sub_1BC2B2AA4());
  v31 = (void *)sub_1BC2B2A8C();
  objc_msgSend(v31, sel_contentInsets);
  v33 = v32;

  v34 = (void *)sub_1BC2B2A8C();
  objc_msgSend(v34, sel_contentInsets);
  v36 = v35;

  objc_msgSend(v30, sel_setContentInsets_, v33, v14, v36, v14);
  if (!v58 && v54)
  {
    v37 = (void *)sub_1BC2B2A8C();
    objc_msgSend(v37, sel_contentInsets);
    v39 = v38;

    objc_msgSend(v30, sel_contentInsets);
    objc_msgSend(v30, sel_setContentInsets_, v39 + 30.0);
LABEL_24:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v57);

    return (uint64_t)v30;
  }
  if (v58 < 1)
    goto LABEL_24;
  v58 = (uint64_t)v24;
  v40 = v51;
  sub_1BC2B2C9C();
  v41 = (void *)sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
  v42 = objc_msgSend(v41, sel_boundarySupplementaryItems);

  if (!v42)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FAFA8);
    sub_1BC2B458C();
    v42 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v30, sel_setBoundarySupplementaryItems_, v42);

  objc_msgSend(v30, sel_setSupplementaryContentInsetsReference_, 3);
  v43 = objc_msgSend(v30, sel_boundarySupplementaryItems);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FAFA8);
  v44 = sub_1BC2B458C();

  v50 = v27;
  if (!(v44 >> 62))
  {
    v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v45)
      goto LABEL_18;
LABEL_26:

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v57);
    return (uint64_t)v30;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v45 = result;
  if (!result)
    goto LABEL_26;
LABEL_18:
  if (v45 >= 1)
  {
    v47 = 0;
    do
    {
      if ((v44 & 0xC000000000000001) != 0)
        v48 = (id)MEMORY[0x1BCCEE950](v47, v44);
      else
        v48 = *(id *)(v44 + 8 * v47 + 32);
      v49 = v48;
      ++v47;
      objc_msgSend(v48, sel_contentInsets, v50);
      objc_msgSend(v49, sel_setContentInsets_);
      objc_msgSend(v49, sel_contentInsets);
      objc_msgSend(v49, sel_setContentInsets_);

    }
    while (v45 != v47);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC14B7CC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  id v13;

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - v3;
  sub_1BC14CA80();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v0 + qword_1EF3FAEA8);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  swift_retain();
  v13 = (id)sub_1BC2B4A0C();
  v10 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1BC0E85D0();
  sub_1BC0E519C(&qword_1EF3FAF90, (uint64_t (*)(uint64_t))sub_1BC0E85D0, MEMORY[0x1E0C95FB8]);
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v4, (unint64_t *)&qword_1EDA0FCC0, v1);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FAF98, (uint64_t (*)(uint64_t))sub_1BC14CA80, MEMORY[0x1E0C95CB8]);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC14BA20(unint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC14BA7C(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC14BA7C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE v33[16];
  unint64_t v34;
  _QWORD v35[2];
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42[16];
  unint64_t v43;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = *(_QWORD *)(sub_1BC2B2BC4() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC2BC350;
  v39 = v1;
  v40 = v6;
  v7 = v6 + v5;
  v8 = *(_QWORD *)(v1 + qword_1EF3FAEC0 + 8);
  v9 = *(_QWORD *)(v1 + qword_1EF3FAEC0 + 16);
  v10 = *(_QWORD *)(v1 + qword_1EF3FAEC0 + 24);
  v41 = a1;
  v43 = a1;
  swift_unknownObjectRetain();
  sub_1BC1BAEE4((void (*)(_QWORD *__return_ptr, char *))sub_1BC14CB78, (uint64_t)v42, v8, v9, v10);
  swift_unknownObjectRelease();
  sub_1BC2B2BAC();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v38 = v7 + v4;
  v37 = v4;
  v11 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v34 = 0xE000000000000000;
  v12 = sub_1BC2B2144();
  v35[1] = v13;
  v36 = (_QWORD *)v12;
  swift_bridgeObjectRelease();

  v14 = v39;
  v15 = *(_QWORD *)(v39 + qword_1EF3FAEC8 + 8);
  v16 = v7;
  v35[0] = v7;
  v17 = *(_QWORD *)(v39 + qword_1EF3FAEC8 + 16);
  v18 = *(_QWORD *)(v39 + qword_1EF3FAEC8 + 24);
  MEMORY[0x1E0C80A78](v19);
  v20 = v41;
  v34 = v41;
  swift_unknownObjectRetain();
  sub_1BC1BAEE4((void (*)(_QWORD *__return_ptr, char *))sub_1BC14C954, (uint64_t)v33, v15, v17, v18);
  swift_unknownObjectRelease();
  v21 = sub_1BC2B2BAC();
  v36 = v35;
  v38 = v16 + 2 * v37;
  v22 = v14;
  v23 = v14 + qword_1EF3FAED0;
  v24 = *(_QWORD *)(v14 + qword_1EF3FAED0 + 8);
  v25 = *(_QWORD *)(v14 + qword_1EF3FAED0 + 16);
  v26 = *(_QWORD *)(v23 + 24);
  MEMORY[0x1E0C80A78](v21);
  v34 = v20;
  swift_unknownObjectRetain();
  sub_1BC1BAEE4((void (*)(_QWORD *__return_ptr, char *))sub_1BC14CB78, (uint64_t)v33, v24, v25, v26);
  swift_unknownObjectRelease();
  v27 = sub_1BC2B2BAC();
  v28 = v22 + qword_1EF3FAED8;
  v29 = *(_QWORD *)(v22 + qword_1EF3FAED8 + 8);
  v30 = *(_QWORD *)(v28 + 16);
  v31 = *(_QWORD *)(v28 + 24);
  MEMORY[0x1E0C80A78](v27);
  v34 = v41;
  swift_unknownObjectRetain();
  sub_1BC1BAEE4((void (*)(_QWORD *__return_ptr, char *))sub_1BC14CB78, (uint64_t)v33, v29, v30, v31);
  swift_unknownObjectRelease();
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC14BE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char v23;
  uint64_t (*v24)(uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;

  v33 = a2;
  v35 = a3;
  sub_1BC14C970();
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v32 - v12;
  v14 = sub_1BC2B3350();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = *(void (**)(void))(v15 + 16);
  v34 = (char *)&v32 - v20;
  v19();
  ((void (*)(char *, uint64_t, uint64_t))v19)(v13, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v21 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_1BC14C9E8((uint64_t)v13, (uint64_t)v7);
  sub_1BC14C9E8(v33, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v22((uint64_t)v7, 1, v14) != 1)
  {
    sub_1BC14C9E8((uint64_t)v7, (uint64_t)v11);
    if (v22(v21, 1, v14) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v18, v21, v14);
      v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0];
      sub_1BC0E519C(&qword_1EF3FAEF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], MEMORY[0x1E0D2C708]);
      v23 = sub_1BC2B4424();
      v25 = *(void (**)(char *, uint64_t))(v15 + 8);
      v25(v18, v14);
      sub_1BC0F2444((uint64_t)v13, &qword_1EF3F8958, v24);
      v25(v11, v14);
      sub_1BC0F2444((uint64_t)v7, &qword_1EF3F8958, v24);
      goto LABEL_8;
    }
    sub_1BC0F2444((uint64_t)v13, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
    goto LABEL_6;
  }
  sub_1BC0F2444((uint64_t)v13, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  if (v22(v21, 1, v14) != 1)
  {
LABEL_6:
    sub_1BC14CA44((uint64_t)v7);
    v23 = 0;
    goto LABEL_8;
  }
  sub_1BC0F2444((uint64_t)v7, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  v23 = 1;
LABEL_8:
  sub_1BC0E8470(0);
  v27 = v26;
  v28 = v35;
  v35[3] = v26;
  v28[4] = sub_1BC0E519C(&qword_1EF3FAF80, (uint64_t (*)(uint64_t))sub_1BC0E8470, (uint64_t)&protocol conformance descriptor for MedmojiConfigItem<A>);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  result = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v15 + 32))(boxed_opaque_existential_1, v34, v14);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v27 + 36)) = v23 & 1;
  v31 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v27 + 40));
  *v31 = 0;
  v31[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_1BC14C1DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  v5 = sub_1BC2B2BC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B25F4() == 1)
  {
    v9 = sub_1BC2B2C0C();
    result = sub_1BC2B25F4();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(v9 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * result, v5);
      swift_bridgeObjectRelease();
      sub_1BC2B2BB8();
      v12 = v11;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (v12)
      {
        v13 = sub_1BC2B2D68();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
        v14 = sub_1BC2B2D80();
        v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
        a1[3] = v14;
        a1[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v15, MEMORY[0x1E0D2B310]);
        __swift_allocate_boxed_opaque_existential_1(a1);
        return sub_1BC2B2D74();
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    if ((unint64_t)(sub_1BC2B25F4() - 5) < 0xFFFFFFFFFFFFFFFDLL)
    {
LABEL_7:
      v16 = sub_1BC2B296C();
      v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a1[3] = v16;
      a1[4] = sub_1BC0E519C(&qword_1EF3F8B68, v17, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a1);
      return sub_1BC2B2960();
    }
    v18 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    type metadata accessor for SeparatorHeaderCell();
    sub_1BC0E519C(&qword_1EF3FAEB0, (uint64_t (*)(uint64_t))type metadata accessor for SeparatorHeaderCell, (uint64_t)&unk_1BC2BF5C4);
    v19 = sub_1BC2B2930();
    v21 = v20;
    a1[3] = (uint64_t)&type metadata for SeparatorHeaderItem;
    result = sub_1BC14C48C();
    a1[4] = result;
    *a1 = (uint64_t)v18;
    a1[1] = v19;
    a1[2] = v21;
  }
  return result;
}

unint64_t sub_1BC14C48C()
{
  unint64_t result;

  result = qword_1EF3FAEB8;
  if (!qword_1EF3FAEB8)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BF594, &type metadata for SeparatorHeaderItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FAEB8);
  }
  return result;
}

void VisualizationShapeDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
  sub_1BC14C51C();
}

void VisualizationShapeDataSource.init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
  sub_1BC14C51C();
}

void VisualizationShapeDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
  sub_1BC14C51C();
}

void sub_1BC14C51C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void VisualizationShapeDataSource.init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
  sub_1BC14C51C();
}

uint64_t sub_1BC14C55C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t VisualizationShapeDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2F3C();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VisualizationShapeDataSource.__deallocating_deinit()
{
  sub_1BC2B2F3C();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1BC14C6D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC14C1DC(a1);
}

Swift::Void __swiftcall VisualizationShapeDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  type metadata accessor for SeparatorHeaderCell();
  sub_1BC0E519C(&qword_1EF3FAEB0, (uint64_t (*)(uint64_t))type metadata accessor for SeparatorHeaderCell, (uint64_t)&unk_1BC2BF5C4);
  sub_1BC2B4994();
  type metadata accessor for ShapeCell(0);
  sub_1BC0E519C(&qword_1EF3FAEE8, type metadata accessor for ShapeCell, (uint64_t)&unk_1BC2C62BC);
  sub_1BC2B497C();
}

uint64_t sub_1BC14C79C()
{
  return sub_1BC0E519C(&qword_1EF3FAEF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], MEMORY[0x1E0D2C708]);
}

uint64_t sub_1BC14C7C8()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  type metadata accessor for SeparatorHeaderCell();
  sub_1BC0E519C(&qword_1EF3FAEB0, (uint64_t (*)(uint64_t))type metadata accessor for SeparatorHeaderCell, (uint64_t)&unk_1BC2BF5C4);
  sub_1BC2B4994();
  type metadata accessor for ShapeCell(0);
  sub_1BC0E519C(&qword_1EF3FAEE8, type metadata accessor for ShapeCell, (uint64_t)&unk_1BC2C62BC);
  return sub_1BC2B497C();
}

uint64_t type metadata accessor for VisualizationShapeDataSource()
{
  uint64_t result;

  result = qword_1EF3FAF28;
  if (!qword_1EF3FAF28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC14C8A8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for VisualizationShapeDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualizationShapeDataSource.currentValuePublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationShapeDataSource + *v0 + 48))();
}

uint64_t dispatch thunk of VisualizationShapeDataSource.supplementaryItem(ofKind:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationShapeDataSource + *v0 + 224))();
}

uint64_t sub_1BC14C94C()
{
  return type metadata accessor for VisualizationShapeDataSource();
}

uint64_t sub_1BC14C954@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC14BE74(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BC14C970()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FAF78)
  {
    sub_1BC0E7998(255, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FAF78);
  }
}

uint64_t sub_1BC14C9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC14CA44(uint64_t a1)
{
  uint64_t v2;

  sub_1BC14C970();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC14CA80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FAF88)
  {
    sub_1BC0E85D0();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF3FAF90, (uint64_t (*)(uint64_t))sub_1BC0E85D0, MEMORY[0x1E0C95FB8]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FAF88);
  }
}

uint64_t sub_1BC14CB34()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC14CB58(unint64_t a1)
{
  return sub_1BC14BA20(a1);
}

uint64_t sub_1BC14CB60()
{
  return swift_deallocObject();
}

uint64_t sub_1BC14CB70(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC14B164(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_1BC14CB78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC14C954(a1, a2);
}

uint64_t sub_1BC14CB8C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  sub_1BC0E1B40((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC14CC00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC14CC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC14CCB8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC14CCFC()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1BC14CD10);
}

id sub_1BC14CD10()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  double v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v1 = (void *)sub_1BC2B4C64();
  objc_msgSend(v0, sel_setFont_, v1);

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v2 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0xE000000000000000);

  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v7) = 1036831949;
  objc_msgSend(v4, sel__setHyphenationFactor_, v7);
  return v4;
}

id sub_1BC14CFF4()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1BC14D008);
}

id sub_1BC14D008()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v1 = (void *)sub_1BC2B4C64();
  objc_msgSend(v0, sel_setFont_, v1);

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v2 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0xE000000000000000);

  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v4;
}

uint64_t type metadata accessor for InteractionFactorsHeaderCell()
{
  return objc_opt_self();
}

void sub_1BC14D46C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC14CCFC();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = sub_1BC14CFF4();
  objc_msgSend(v3, sel_addSubview_, v4);

  v41 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC2BAF60;
  v6 = sub_1BC14CCFC();
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v0, sel_contentView);
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(_QWORD *)(v5 + 32) = v10;
  v11 = sub_1BC14CCFC();
  v12 = objc_msgSend(v11, sel_leadingAnchor);

  v13 = objc_msgSend(v0, sel_contentView);
  v14 = objc_msgSend(v13, sel_leadingAnchor);

  if (qword_1EF3F8160 != -1)
    swift_once();
  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&qword_1EF402A18);

  *(_QWORD *)(v5 + 40) = v15;
  v16 = sub_1BC14CCFC();
  v17 = objc_msgSend(v16, sel_trailingAnchor);

  v18 = objc_msgSend(v0, sel_contentView);
  v19 = objc_msgSend(v18, sel_trailingAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -*(double *)&qword_1EF402A28);
  *(_QWORD *)(v5 + 48) = v20;
  v21 = sub_1BC14CFF4();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = objc_msgSend(v0, sel_contentView);
  v24 = objc_msgSend(v23, sel_leadingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, *(double *)&qword_1EF402A18);
  *(_QWORD *)(v5 + 56) = v25;
  v26 = sub_1BC14CFF4();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = objc_msgSend(v0, sel_contentView);
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, -*(double *)&qword_1EF402A28);
  *(_QWORD *)(v5 + 64) = v30;
  v31 = sub_1BC14CFF4();
  v32 = objc_msgSend(v31, sel_topAnchor);

  v33 = sub_1BC14CCFC();
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 15.0);
  *(_QWORD *)(v5 + 72) = v35;
  v36 = sub_1BC14CFF4();
  v37 = objc_msgSend(v36, sel_bottomAnchor);

  v38 = objc_msgSend(v0, sel_contentView);
  v39 = objc_msgSend(v38, sel_bottomAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(_QWORD *)(v5 + 80) = v40;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v42 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v42);

}

uint64_t sub_1BC14D950()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  id v13;
  objc_super v14;

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = (void *)sub_1BC2B3AE8();
  v9 = (objc_class *)type metadata accessor for InteractionFactorsHeaderCell();
  v14.receiver = v1;
  v14.super_class = v9;
  objc_msgSendSuper2(&v14, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1BCCEE230]();
  v10 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
  {
    v11 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC0E1CB0((uint64_t)v7, (uint64_t)v5, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCEE23C](v5);
    return sub_1BC0E1CFC((uint64_t)v7, &qword_1EDA0FAF0, v11);
  }
  else
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    sub_1BC2B3B18();
    return MEMORY[0x1BCCEE23C](v7);
  }
}

id InteractionFactorsHeaderCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1BC14DBDC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC14DC20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t method lookup function for InteractionFactorsHeaderCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsHeaderCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1BC14DCE8()
{
  return MedicationOnboardingDataSource.cellBackgroundConfiguration.getter();
}

uint64_t MedicationOnboardingDataSource.cellBackgroundConfiguration.getter()
{
  id v0;

  sub_1BC2B3B24();
  v0 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  return sub_1BC2B3B18();
}

uint64_t dispatch thunk of MedicationOnboardingDataSource.currentValuePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicationOnboardingDataSource.cellBackgroundConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1BC14DD54()
{
  id v0;

  sub_1BC2B3B24();
  v0 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  return sub_1BC2B3B18();
}

uint64_t sub_1BC14DD98@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1BC2B395C();
  v3 = sub_1BC11C7E0(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC14DDDC()
{
  _BYTE *v0;
  id v1;
  uint64_t v2;

  if ((*v0 & 1) != 0)
  {
    if (qword_1EF3F8148 != -1)
      swift_once();
  }
  else if (qword_1EF3F8148 != -1)
  {
    swift_once();
  }
  v1 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  return v2;
}

BOOL static MedicationInformationImportance.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MedicationInformationImportance.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t MedicationInformationImportance.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

unint64_t sub_1BC14DF98()
{
  unint64_t result;

  result = qword_1EF3FAFF0;
  if (!qword_1EF3FAFF0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationInformationImportance, &type metadata for MedicationInformationImportance);
    atomic_store(result, (unint64_t *)&qword_1EF3FAFF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MedicationInformationImportance(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC14E028 + 4 * byte_1BC2BC595[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC14E05C + 4 * asc_1BC2BC590[v4]))();
}

uint64_t sub_1BC14E05C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC14E064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC14E06CLL);
  return result;
}

uint64_t sub_1BC14E078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC14E080);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC14E084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC14E08C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationInformationImportance()
{
  return &type metadata for MedicationInformationImportance;
}

uint64_t type metadata accessor for PregnancyLactationEducationDataSource()
{
  uint64_t result;

  result = qword_1EF3FB008;
  if (!qword_1EF3FB008)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC14E0E4()
{
  return swift_initClassMetadata2();
}

void sub_1BC14E12C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC14E158()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC14E174()
{
  return type metadata accessor for PregnancyLactationEducationDataSource();
}

uint64_t sub_1BC14E17C()
{
  type metadata accessor for MedicationInformationOverviewCell();
  sub_1BC0E519C(&qword_1EF3FB060, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationOverviewCell, (uint64_t)&protocol conformance descriptor for MedicationInformationOverviewCell);
  sub_1BC2B497C();
  sub_1BC2B2D5C();
  return sub_1BC2B4994();
}

uint64_t sub_1BC14E1E8()
{
  return sub_1BC14E714();
}

uint64_t sub_1BC14E20C()
{
  sub_1BC0E519C(&qword_1EF3FB068, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationEducationDataSource, (uint64_t)&unk_1BC2BC6F0);
  return sub_1BC2B3074();
}

uint64_t sub_1BC14E26C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  _QWORD v11[2];

  sub_1BC14E7EC();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v11[0]) = *(_BYTE *)(*v1 + qword_1EF3FAFF8);
  v11[0] = sub_1BC14DDDC();
  v11[1] = v6;
  sub_1BC0FF070();
  sub_1BC2B5000();
  swift_bridgeObjectRelease();
  v7 = sub_1BC2B2D68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = sub_1BC2B2D80();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
  a1[3] = v8;
  a1[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v9, MEMORY[0x1E0D2B310]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1BC2B2D74();
}

uint64_t sub_1BC14E3A8()
{
  return sub_1BC0E519C(&qword_1EF3FB058, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationEducationDataSource, (uint64_t)&unk_1BC2BC6C0);
}

uint64_t sub_1BC14E3D4(uint64_t a1, unsigned __int8 *a2, char *a3)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  char v30[24];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *a3;
  v29 = *a2;
  v30[0] = v29;
  v5 = Array<A>.groupByCritical(for:)(v30, a1);
  if ((v3 & 1) != 0)
  {
    *(_QWORD *)v30 = v4;
    swift_bridgeObjectRetain();
    v6 = swift_bridgeObjectRetain();
    sub_1BC131140(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v5 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v33 = MEMORY[0x1E0DEE9D8];
      sub_1BC125B04(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
        break;
      v8 = v33;
      type metadata accessor for MedicationInformationOverviewCell();
      v9 = 0;
      v28 = v5 & 0xC000000000000001;
      v27 = v29 - 1;
      v10 = v5;
      while (v7 != v9)
      {
        if (v28)
          v11 = (id)MEMORY[0x1BCCEE950](v9, v5);
        else
          v11 = *(id *)(v5 + 8 * v9 + 32);
        v12 = v11;
        v13 = type metadata accessor for MedicationInformationOverviewItem();
        v14 = swift_allocObject();
        sub_1BC0E519C(&qword_1EF3FB060, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationOverviewCell, (uint64_t)&protocol conformance descriptor for MedicationInformationOverviewCell);
        v15 = v12;
        *(_QWORD *)(v14 + 32) = sub_1BC2B2930();
        *(_QWORD *)(v14 + 40) = v16;
        *(_QWORD *)(v14 + 16) = v15;
        *(_BYTE *)(v14 + 24) = v29;
        if (v27 >= 2)
          goto LABEL_22;
        v31 = v13;
        v32 = sub_1BC0E519C((unint64_t *)&unk_1EF3FB070, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationOverviewItem, (uint64_t)&protocol conformance descriptor for MedicationInformationOverviewItem);

        *(_QWORD *)v30 = v14;
        v33 = v8;
        v18 = *(_QWORD *)(v8 + 16);
        v17 = *(_QWORD *)(v8 + 24);
        if (v18 >= v17 >> 1)
          sub_1BC125B04(v17 > 1, v18 + 1, 1);
        ++v9;
        v19 = v31;
        v20 = v32;
        v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
        MEMORY[0x1E0C80A78](v21);
        v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v24 + 16))(v23);
        sub_1BC2241D0(v18, (uint64_t)v23, &v33, v19, v20);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        v8 = v33;
        v5 = v10;
        if (v7 == v9)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v7 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    result = sub_1BC2B52B8();
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BC14E714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = v0;
  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + qword_1EF3FB000) == 1)
  {
    sub_1BC2B2C9C();
    sub_1BC2B2CD8();
  }
  else
  {
    sub_1BC2B2CC0();
    sub_1BC2B2CD8();
    sub_1BC2B2D08();
  }
  v6 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

void sub_1BC14E7EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8E68)
  {
    sub_1BC2B2D68();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8E68);
  }
}

uint64_t MedicationDetailsCardItem.init(detailsDisplayable:medication:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v6 = type metadata accessor for MedicationDetailsCardItem();
  sub_1BC2B242C();
  v7 = (uint64_t *)(a3 + *(int *)(v6 + 28));
  type metadata accessor for MedicationDetailsCardCell();
  sub_1BC0E008C((unint64_t *)&unk_1EF3FB080, v8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardCell);
  *v7 = sub_1BC2B2930();
  v7[1] = v9;
  result = sub_1BC0F2730(a1, a3);
  *(_QWORD *)(a3 + *(int *)(v6 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for MedicationDetailsCardItem()
{
  uint64_t result;

  result = qword_1EF3FB158;
  if (!qword_1EF3FB158)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for MedicationDetailsCardCell()
{
  return objc_opt_self();
}

uint64_t MedicationDetailsCardItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationDetailsCardItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t MedicationDetailsCardItem.uniqueIdentifier.getter()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  type metadata accessor for MedicationDetailsCardItem();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t static MedicationDetailsCardItem.== infix(_:_:)()
{
  type metadata accessor for MedicationDetailsCardItem();
  return sub_1BC2B2414();
}

uint64_t MedicationDetailsCardItem.hash(into:)()
{
  type metadata accessor for MedicationDetailsCardItem();
  sub_1BC2B2438();
  sub_1BC0E008C((unint64_t *)&unk_1EF3F8FE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC2B43F4();
}

uint64_t MedicationDetailsCardItem.hashValue.getter()
{
  sub_1BC2B5450();
  type metadata accessor for MedicationDetailsCardItem();
  sub_1BC2B2438();
  sub_1BC0E008C((unint64_t *)&unk_1EF3F8FE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC14EB20()
{
  sub_1BC2B5450();
  sub_1BC2B2438();
  sub_1BC0E008C((unint64_t *)&unk_1EF3F8FE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC14EB9C()
{
  sub_1BC2B2438();
  sub_1BC0E008C((unint64_t *)&unk_1EF3F8FE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC2B43F4();
}

uint64_t sub_1BC14EC04()
{
  sub_1BC2B5450();
  sub_1BC2B2438();
  sub_1BC0E008C((unint64_t *)&unk_1EF3F8FE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC14EC7C()
{
  return sub_1BC2B2414();
}

id sub_1BC14EC90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC14ED24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  double v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    LODWORD(v6) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 1, v6);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v14 = sub_1BC2B4460();
    v15 = v7;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v10 = (void *)sub_1BC2B4C64();
    objc_msgSend(v8, sel_setFont_, v10);

    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC14EF10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v13 = sub_1BC2B4460();
    v14 = v6;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v7 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v8 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v13, v14);

    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v9 = (void *)sub_1BC2B4C64();
    objc_msgSend(v7, sel_setFont_, v9);

    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC14F0E0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView];
  }
  else
  {
    v4 = sub_1BC14F140(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC14F140(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  HKUIOnePixel();
  objc_msgSend(v2, sel_setSeparatorThickness_);
  v3 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
  objc_msgSend(v2, sel_setColor_, v3);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v4 = v2;
  v5 = objc_msgSend(a1, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_horizontalSizeClass);

  objc_msgSend(v4, sel_setHidden_, v6 == (id)2);
  return v4;
}

id sub_1BC14F24C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v14 = sub_1BC2B4460();
    v15 = v6;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v7 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v8 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v14, v15);

    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v9 = (void *)sub_1BC2B4C64();
    objc_msgSend(v7, sel_setFont_, v9);

    v10 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v7, sel_setTextColor_, v10);

    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

uint64_t sub_1BC14F454()
{
  return sub_1BC14FD48(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageConstraints, (uint64_t (*)(uint64_t))sub_1BC14F468);
}

uint64_t sub_1BC14F468(char *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA730;
  v3 = sub_1BC14EC90();
  v4 = objc_msgSend(v3, sel_topAnchor);

  v5 = objc_msgSend(a1, sel_contentView);
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(a1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_horizontalSizeClass);

  v9 = 24.0;
  if (v8 == (id)1)
    v9 = 16.0;
  v10 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, v9);

  *(_QWORD *)(v2 + 32) = v10;
  v11 = sub_1BC14EC90();
  v12 = objc_msgSend(v11, sel_leadingAnchor);

  v13 = objc_msgSend(a1, sel_contentView);
  v14 = objc_msgSend(v13, sel_layoutMarginsGuide);

  v15 = objc_msgSend(v14, sel_leadingAnchor);
  v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v2 + 40) = v16;
  v17 = sub_1BC14EC90();
  v18 = objc_msgSend(v17, sel_widthAnchor);

  v19 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize;
  v20 = objc_msgSend(v18, sel_constraintEqualToConstant_, *(double *)&a1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize]);

  *(_QWORD *)(v2 + 48) = v20;
  v21 = sub_1BC14EC90();
  v22 = objc_msgSend(v21, sel_heightAnchor);

  v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, *(double *)&a1[v19]);
  *(_QWORD *)(v2 + 56) = v23;
  sub_1BC2B45A4();
  return v2;
}

uint64_t sub_1BC14F6F4()
{
  return sub_1BC14FD48(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesConstraints, (uint64_t (*)(uint64_t))sub_1BC14F708);
}

uint64_t sub_1BC14F708(char *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  double v40;
  id v41;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BAF60;
  v3 = sub_1BC14EF10();
  v4 = objc_msgSend(v3, sel_bottomAnchor);

  v5 = sub_1BC14F0E0();
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin;
  v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, -*(double *)&a1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin]);

  *(_QWORD *)(v2 + 32) = v8;
  v9 = sub_1BC14F0E0();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = sub_1BC14EF10();
  v12 = objc_msgSend(v11, sel_leadingAnchor);

  v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(_QWORD *)(v2 + 40) = v13;
  v14 = sub_1BC14F0E0();
  v15 = objc_msgSend(v14, sel_trailingAnchor);

  v16 = sub_1BC14EF10();
  v17 = objc_msgSend(v16, sel_trailingAnchor);

  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(_QWORD *)(v2 + 48) = v18;
  v19 = sub_1BC14F0E0();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = sub_1BC14F24C();
  v22 = objc_msgSend(v21, sel_topAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, -*(double *)&a1[v7]);
  *(_QWORD *)(v2 + 56) = v23;
  v24 = sub_1BC14F24C();
  v25 = objc_msgSend(v24, sel_leadingAnchor);

  v26 = sub_1BC14F0E0();
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(_QWORD *)(v2 + 64) = v28;
  v29 = sub_1BC14F24C();
  v30 = objc_msgSend(v29, sel_trailingAnchor);

  v31 = sub_1BC14F0E0();
  v32 = objc_msgSend(v31, sel_trailingAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v32);
  *(_QWORD *)(v2 + 72) = v33;
  v34 = sub_1BC14F24C();
  v35 = objc_msgSend(v34, sel_bottomAnchor);

  v36 = objc_msgSend(a1, sel_contentView);
  v37 = objc_msgSend(v36, sel_bottomAnchor);

  v38 = objc_msgSend(a1, sel_traitCollection);
  v39 = objc_msgSend(v38, sel_horizontalSizeClass);

  v40 = 24.0;
  if (v39 == (id)1)
    v40 = 16.0;
  v41 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, -v40);

  *(_QWORD *)(v2 + 80) = v41;
  sub_1BC2B45A4();
  return v2;
}

uint64_t sub_1BC14FB08()
{
  return sub_1BC14FD48(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___emptyNotesConstraints, (uint64_t (*)(uint64_t))sub_1BC14FB1C);
}

uint64_t sub_1BC14FB1C(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  id v18;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92B0;
  v3 = sub_1BC14EF10();
  v4 = objc_msgSend(v3, sel_lastBaselineAnchor);

  v5 = objc_msgSend(a1, sel_contentView);
  v6 = objc_msgSend(v5, sel_bottomAnchor);

  v7 = objc_msgSend(a1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_horizontalSizeClass);

  if (v8 == (id)1)
    v9 = 16.0;
  else
    v9 = 24.0;
  v10 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, -v9);

  *(_QWORD *)(v2 + 32) = v10;
  v11 = sub_1BC14EC90();
  v12 = objc_msgSend(v11, sel_bottomAnchor);

  v13 = objc_msgSend(a1, sel_contentView);
  v14 = objc_msgSend(v13, sel_bottomAnchor);

  v15 = objc_msgSend(a1, sel_traitCollection);
  v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  if (v16 == (id)1)
    v17 = 16.0;
  else
    v17 = 24.0;
  v18 = objc_msgSend(v12, sel_constraintLessThanOrEqualToAnchor_constant_, v14, -v17);

  *(_QWORD *)(v2 + 40) = v18;
  sub_1BC2B45A4();
  return v2;
}

uint64_t sub_1BC14FD34()
{
  return sub_1BC14FD48(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionConstraints, (uint64_t (*)(uint64_t))sub_1BC14FDA8);
}

uint64_t sub_1BC14FD48(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = a2(v2);
    *(_QWORD *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1BC14FDA8()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92B0;
  v1 = sub_1BC14EF10();
  v2 = objc_msgSend(v1, sel_leadingAnchor);

  v3 = sub_1BC14ED24();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = objc_msgSend(v2, sel_constraintEqualToAnchor_, v4);
  *(_QWORD *)(v0 + 32) = v5;
  v6 = sub_1BC14EF10();
  v7 = objc_msgSend(v6, sel_trailingAnchor);

  v8 = sub_1BC14ED24();
  v9 = objc_msgSend(v8, sel_trailingAnchor);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(_QWORD *)(v0 + 40) = v10;
  sub_1BC2B45A4();
  return v0;
}

id MedicationDetailsCardCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationDetailsCardCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize] = 0x4054000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin] = 0x4028000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageConstraints] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesConstraints] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___emptyNotesConstraints] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionConstraints] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = MEMORY[0x1E0DEE9D8];
  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item];
  v10 = (objc_class *)type metadata accessor for MedicationDetailsCardCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v15.receiver = v4;
  v15.super_class = v10;
  v11 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC15011C();
  v12 = objc_msgSend(v11, sel_traitCollection);
  v13 = objc_msgSend(v12, sel_horizontalSizeClass);

  if (v13 == (id)1)
    sub_1BC150650();
  else
    sub_1BC150A0C();

  return v11;
}

id sub_1BC15011C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id result;
  void *v12;
  unsigned int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - v3;
  v5 = sub_1BC2B3B48();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B263C();
  v9 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  sub_1BC2B3B24();
  v10 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
  sub_1BC2B3B18();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1BCCEE23C](v4);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v13)
    {
      v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, v1, sel_cellTripleTapped_);
      objc_msgSend(v14, sel_setNumberOfTapsRequired_, 3);
      objc_msgSend(v1, sel_addGestureRecognizer_, v14);

    }
    v15 = objc_msgSend(v1, sel_contentView);
    v16 = sub_1BC14EC90();
    objc_msgSend(v15, sel_addSubview_, v16);

    v17 = objc_msgSend(v1, sel_contentView);
    v18 = sub_1BC14ED24();
    objc_msgSend(v17, sel_addSubview_, v18);

    v19 = objc_msgSend(v1, sel_contentView);
    v20 = sub_1BC14EF10();
    objc_msgSend(v19, sel_addSubview_, v20);

    v21 = objc_msgSend(v1, sel_contentView);
    v22 = sub_1BC14F0E0();
    objc_msgSend(v21, sel_addSubview_, v22);

    v23 = objc_msgSend(v1, sel_contentView);
    v24 = sub_1BC14F24C();
    objc_msgSend(v23, sel_addSubview_, v24);

    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BC2B92D0;
    v26 = sub_1BC2B3CE0();
    v27 = MEMORY[0x1E0DC23D0];
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v27;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BC13079C();
    sub_1BC2B4CC4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC1504F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCEF478](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = objc_msgSend(a2, sel_horizontalSizeClass);
    v9 = objc_msgSend(a1, sel_traitCollection);
    v10 = objc_msgSend(v9, sel_horizontalSizeClass);

    if (v8 != v10)
    {
      v11 = (void *)objc_opt_self();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_deactivateConstraints_, v12);

      v13 = objc_msgSend(v7, sel_traitCollection);
      v14 = objc_msgSend(v13, sel_horizontalSizeClass);

      if (v14 == (id)1)
        sub_1BC150650();
      else
        sub_1BC150A0C();
      sub_1BC150F78();
    }

  }
}

void sub_1BC150650()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;

  v1 = v0;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA730;
  v3 = sub_1BC14ED24();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = sub_1BC14EC90();
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = sub_1BC14ED24();
  v9 = objc_msgSend(v8, sel_trailingAnchor);

  v10 = objc_msgSend(v1, sel_contentView);
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  v12 = objc_msgSend(v1, sel_traitCollection);
  v13 = objc_msgSend(v12, sel_horizontalSizeClass);

  if (v13 == (id)1)
    v14 = 16.0;
  else
    v14 = 24.0;
  v15 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, -v14);

  *(_QWORD *)(v2 + 40) = v15;
  v16 = sub_1BC14ED24();
  v17 = objc_msgSend(v16, sel_topAnchor);

  v18 = sub_1BC14EC90();
  v19 = objc_msgSend(v18, sel_bottomAnchor);

  v20 = objc_msgSend(v1, sel_traitCollection);
  v21 = objc_msgSend(v20, sel_horizontalSizeClass);

  if (v21 == (id)1)
    v22 = 16.0;
  else
    v22 = 24.0;
  v23 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, v22);

  *(_QWORD *)(v2 + 48) = v23;
  v24 = sub_1BC14ED24();
  v25 = objc_msgSend(v24, sel_bottomAnchor);

  v26 = sub_1BC14EF10();
  v27 = objc_msgSend(v26, sel_topAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -2.0);
  *(_QWORD *)(v2 + 56) = v28;
  sub_1BC2B45A4();
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = v2;
  swift_bridgeObjectRelease();
  v29 = (void *)objc_opt_self();
  sub_1BC14F454();
  v30 = swift_bridgeObjectRetain();
  sub_1BC131340(v30);
  v31 = sub_1BC14FD34();
  sub_1BC131340(v31);
  v32 = sub_1BC14F6F4();
  sub_1BC131340(v32);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v33 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v33);

}

void sub_1BC150A0C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;

  v1 = v0;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA730;
  v3 = sub_1BC14ED24();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = sub_1BC14EC90();
  v6 = objc_msgSend(v5, sel_trailingAnchor);

  v7 = objc_msgSend(v1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_horizontalSizeClass);

  if (v8 == (id)1)
    v9 = 16.0;
  else
    v9 = 24.0;
  v10 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, v9);

  *(_QWORD *)(v2 + 32) = v10;
  v11 = sub_1BC14ED24();
  v12 = objc_msgSend(v11, sel_trailingAnchor);

  v13 = objc_msgSend(v1, sel_contentView);
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v1, sel_traitCollection);
  v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  if (v16 == (id)1)
    v17 = 16.0;
  else
    v17 = 24.0;
  v18 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, -v17);

  *(_QWORD *)(v2 + 40) = v18;
  v19 = sub_1BC14ED24();
  v20 = objc_msgSend(v19, sel_topAnchor);

  v21 = sub_1BC14EC90();
  v22 = objc_msgSend(v21, sel_topAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v2 + 48) = v23;
  v24 = sub_1BC14ED24();
  v25 = objc_msgSend(v24, sel_bottomAnchor);

  v26 = sub_1BC14EF10();
  v27 = objc_msgSend(v26, sel_topAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -2.0);
  *(_QWORD *)(v2 + 56) = v28;
  sub_1BC2B45A4();
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = v2;
  swift_bridgeObjectRelease();
  v29 = (void *)objc_opt_self();
  sub_1BC14F454();
  v30 = swift_bridgeObjectRetain();
  sub_1BC131340(v30);
  v31 = sub_1BC14FD34();
  sub_1BC131340(v31);
  v32 = sub_1BC14F6F4();
  sub_1BC131340(v32);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v33 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v33);

}

uint64_t sub_1BC150DC4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC150F78();
  return sub_1BC0E8594((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC150E3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC150E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC150F78();
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t (*sub_1BC150F00(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC150F48;
}

uint64_t sub_1BC150F48(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC150F78();
  return result;
}

uint64_t sub_1BC150F78()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;

  v1 = v0;
  v59 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v59 - v10;
  sub_1BC0E7998(0, &qword_1EF3FB1C0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem, v5);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v59 - v13;
  v15 = type metadata accessor for MedicationDetailsCardItem();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v19, (uint64_t)v61);
  if (v62)
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v20 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1BC152714((uint64_t)v14, (uint64_t)v18);
      sub_1BC0E79F0((uint64_t)v18, (uint64_t)v61);
      v21 = v62;
      v22 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
      v23 = sub_1BC14EC90();
      sub_1BC11C330((uint64_t)v11, (uint64_t)v9);
      sub_1BC2B3308();

      v24 = sub_1BC14ED24();
      v25 = v62;
      v26 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
      v27 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setText_, v27);

      v28 = sub_1BC14EF10();
      sub_1BC1516B4(v61);
      if (v29)
      {
        v30 = (void *)sub_1BC2B4430();
        swift_bridgeObjectRelease();
      }
      else
      {
        v30 = 0;
      }
      objc_msgSend(v28, sel_setText_, v30, v59);

      v39 = sub_1BC14F24C();
      v40 = v62;
      v41 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v41 + 40))(v40, v41);
      if (v42)
      {
        v43 = (void *)sub_1BC2B4430();
        swift_bridgeObjectRelease();
      }
      else
      {
        v43 = 0;
      }
      objc_msgSend(v39, sel_setText_, v43);

      v44 = v62;
      v45 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v45 + 40))(v44, v45);
      if (v46 && (sub_1BC2B44CC(), v48 = v47, swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), v48))
      {
        v49 = sub_1BC14F24C();
        objc_msgSend(v49, sel_setHidden_, 0);

        v50 = sub_1BC14F0E0();
        v51 = objc_msgSend(v1, sel_traitCollection);
        v52 = objc_msgSend(v51, sel_horizontalSizeClass);

        objc_msgSend(v50, sel_setHidden_, v52 == (id)2);
        v53 = (void *)objc_opt_self();
        sub_1BC14FB08();
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
        v54 = (void *)sub_1BC2B4580();
        swift_bridgeObjectRelease();
        objc_msgSend(v53, sel_deactivateConstraints_, v54);

        sub_1BC14F6F4();
      }
      else
      {
        v55 = sub_1BC14F24C();
        objc_msgSend(v55, sel_setHidden_, 1);

        v56 = sub_1BC14F0E0();
        objc_msgSend(v56, sel_setHidden_, 1);

        v53 = (void *)objc_opt_self();
        sub_1BC14F6F4();
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
        v57 = (void *)sub_1BC2B4580();
        swift_bridgeObjectRelease();
        objc_msgSend(v53, sel_deactivateConstraints_, v57);

        sub_1BC14FB08();
      }
      v58 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v53, sel_activateConstraints_, v58);

      sub_1BC0F2444((uint64_t)v11, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
      sub_1BC0E8594((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for MedicationDetailsCardItem);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v61, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1BC0F2444((uint64_t)v14, &qword_1EF3FB1C0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem);
  sub_1BC2B39A4();
  v31 = v1;
  v32 = sub_1BC2B39D4();
  v33 = sub_1BC2B48C8();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v60 = v35;
    *(_DWORD *)v34 = 136446210;
    sub_1BC0E5774(v19, (uint64_t)v61);
    sub_1BC0E84E8();
    v36 = sub_1BC2B4490();
    v61[0] = sub_1BC12540C(v36, v37, &v60);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v32, v33, "Incorrect view model for MedicationDetailsCardCell: %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v35, -1, -1);
    MEMORY[0x1BCCEF3A0](v34, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v59);
}

uint64_t sub_1BC1516B4(_QWORD *a1)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  sub_1BC152758();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92C0;
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  v5 = sub_1BC2B44CC();
  v7 = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  v10 = sub_1BC2B44CC();
  v12 = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v12;
  if (!v7)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v12)
      goto LABEL_12;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1BC0FA054(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_1BC0FA054((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[2 * v15];
  v16[4] = v5;
  v16[5] = v7;
  if (v12)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BC0FA054(0, v13[2] + 1, 1, v13);
    v18 = v13[2];
    v17 = v13[3];
    if (v18 >= v17 >> 1)
      v13 = sub_1BC0FA054((_QWORD *)(v17 > 1), v18 + 1, 1, v13);
    v13[2] = v18 + 1;
    v19 = &v13[2 * v18];
    v19[4] = v10;
    v19[5] = v12;
  }
LABEL_12:
  swift_release();
  sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC11BF0C();
  v20 = sub_1BC2B440C();
  swift_bridgeObjectRelease();
  return v20;
}

id MedicationDetailsCardCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDetailsCardCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC151A2C()
{
  return sub_1BC0E008C(&qword_1EF3FB0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardItem);
}

uint64_t sub_1BC151A5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for MedicationDetailsCardItem(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BC2B2438();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v14;
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v14;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MedicationDetailsCardItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for MedicationDetailsCardItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a1 + v10);
  v12 = *(void **)((char *)a2 + v10);
  *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
  v13 = v12;

  v14 = a3[7];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDetailsCardItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC151E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationDetailsCardItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC151F08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC151F7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationDetailsCardCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationDetailsCardCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of MedicationDetailsCardCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of MedicationDetailsCardCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

void sub_1BC152064()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize] = 0x4054000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin] = 0x4028000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___emptyNotesConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = MEMORY[0x1E0DEE9D8];
  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  sub_1BC2B52B8();
  __break(1u);
}

id sub_1BC152178()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  id v17;
  void *v18;
  void *v19;
  objc_class *v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  id result;
  void *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  objc_super v44;
  uint64_t v45;
  _QWORD v46[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v41 - v6;
  sub_1BC0E7998(0, &qword_1EF3FB1C0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  v11 = type metadata accessor for MedicationDetailsCardItem();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v15, (uint64_t)v46);
  if (!v46[3])
  {
    sub_1BC0E8594((uint64_t)v46, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_7:
    sub_1BC0F2444((uint64_t)v10, &qword_1EF3FB1C0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem);
    sub_1BC2B39A4();
    v27 = v0;
    v28 = sub_1BC2B39D4();
    v29 = sub_1BC2B48C8();
    if (os_log_type_enabled(v28, v29))
    {
      v43 = v2;
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45 = v31;
      *(_DWORD *)v30 = 136446210;
      v42 = (uint8_t *)v1;
      sub_1BC0E5774(v15, (uint64_t)v46);
      sub_1BC0E84E8();
      v32 = sub_1BC2B4490();
      v46[0] = sub_1BC12540C(v32, v33, &v45);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v28, v29, "Incorrect view model for MedicationDetailsCardCell: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v31, -1, -1);
      MEMORY[0x1BCCEF3A0](v30, -1, -1);

      return (id)(*(uint64_t (**)(char *, uint8_t *))(v43 + 8))(v5, v42);
    }
    else
    {

      return (id)(*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v16 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_7;
  sub_1BC152714((uint64_t)v10, (uint64_t)v14);
  v17 = objc_msgSend(v0, sel_viewController);
  if (v17)
  {
    v18 = v17;
    v19 = *(void **)&v14[*(int *)(v11 + 24)];
    v20 = (objc_class *)type metadata accessor for OntologyInfoInternalViewController();
    v21 = objc_allocWithZone(v20);
    type metadata accessor for OntologyIDDataSource();
    swift_allocObject();
    v22 = v19;
    v23 = (char *)v21;
    OntologyIDDataSource.init(with:)(v19);
    *(_QWORD *)&v23[OBJC_IVAR____TtC19HealthMedicationsUI34OntologyInfoInternalViewController_conceptsDataSource] = v24;

    v44.receiver = v23;
    v44.super_class = v20;
    result = objc_msgSendSuper2(&v44, sel_initWithUsingInsetStyling_, 1);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v26 = result;

    objc_msgSend(v18, sel_showViewController_sender_, v26, 0);
  }
  else
  {
    sub_1BC2B39A4();
    v34 = v0;
    v35 = sub_1BC2B39D4();
    v36 = sub_1BC2B48C8();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v45 = v38;
      v43 = v2;
      *(_DWORD *)v37 = 136446210;
      v42 = v37 + 4;
      sub_1BC0E5774(v15, (uint64_t)v46);
      sub_1BC0E84E8();
      v39 = sub_1BC2B4490();
      v46[0] = sub_1BC12540C(v39, v40, &v45);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v35, v36, "Incorrect ViewController for MedicationDetailsCardCell: %{public}s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v38, -1, -1);
      MEMORY[0x1BCCEF3A0](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
  }
  return (id)sub_1BC0E8594((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for MedicationDetailsCardItem);
}

uint64_t sub_1BC152714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationDetailsCardItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC152758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FB1C8)
  {
    sub_1BC0E2130(255, (unint64_t *)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FB1C8);
  }
}

uint64_t sub_1BC1527C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC1527E8(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC1504F8(a1, a2, v2);
}

uint64_t sub_1BC1527F0(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t result;

  v1 = 0;
  switch(a1)
  {
    case 0:
      result = sub_1BC2B52B8();
      __break(1u);
      return result;
    case 1:
      if (qword_1EDA0FEE8 != -1)
        goto LABEL_13;
      goto LABEL_11;
    case 2:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
      goto LABEL_13;
    case 3:
    case 5:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
      goto LABEL_13;
    case 4:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
      goto LABEL_13;
    case 7:
    case 8:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
LABEL_13:
      swift_once();
LABEL_11:
      v2 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v1 = sub_1BC2B2144();
      swift_bridgeObjectRelease();

      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_1BC152AD8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t result;

  v1 = 0;
  switch(a1)
  {
    case 0:
      result = sub_1BC2B52B8();
      __break(1u);
      return result;
    case 1:
      if (qword_1EDA0FEE8 != -1)
        goto LABEL_13;
      goto LABEL_11;
    case 2:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
      goto LABEL_13;
    case 3:
    case 5:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
      goto LABEL_13;
    case 7:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
      goto LABEL_13;
    case 8:
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_11;
LABEL_13:
      swift_once();
LABEL_11:
      v2 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v1 = sub_1BC2B2144();
      swift_bridgeObjectRelease();

      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t TipAction.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TipAction.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TipAction.action.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t TipAction.init(title:accessibilityIdentifier:action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t static TipAction.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t TipAction.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t TipAction.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC152F60()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC152FC4()
{
  sub_1BC2B44D8();
  return sub_1BC2B44D8();
}

uint64_t sub_1BC153000()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t MedicationsCategoryTipItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t MedicationsCategoryTipItem.uniqueIdentifier.getter()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t MedicationsCategoryTipItem.init(identifier:headerView:titleText:bodyText:bodyTextLineLimit:buttonTitle:imageSystemName:imageTintColor:baseIdentifier:didTapActionButton:didTapDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v27;
  uint64_t v28;
  int *v29;
  char *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t result;

  type metadata accessor for MedicationCategoryTipCell();
  sub_1BC0E008C(&qword_1EF3FB1F0, v27, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCategoryTipCell, (uint64_t)&protocol conformance descriptor for MedicationCategoryTipCell);
  a9[2] = sub_1BC2B2930();
  a9[3] = v28;
  *a9 = a1;
  a9[1] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = a5;
  a9[7] = a6;
  a9[8] = a7;
  a9[9] = a8;
  v29 = (int *)type metadata accessor for MedicationsCategoryTipItem(0);
  v30 = (char *)a9 + v29[10];
  *(_OWORD *)v30 = a12;
  *((_QWORD *)v30 + 2) = a13;
  *((_QWORD *)v30 + 3) = 0x4041000000000000;
  type metadata accessor for TipImage(0);
  swift_storeEnumTagMultiPayload();
  v31 = (_QWORD *)((char *)a9 + v29[12]);
  *v31 = a14;
  v31[1] = a15;
  v32 = (_QWORD *)((char *)a9 + v29[11]);
  *v32 = a18;
  v32[1] = a19;
  sub_1BC10A700(0, &qword_1EF3FB1F8);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(result + 32) = a10;
  *(_QWORD *)(result + 40) = a11;
  strcpy((char *)(result + 48), "ActionButton");
  *(_BYTE *)(result + 61) = 0;
  *(_WORD *)(result + 62) = -5120;
  *(_QWORD *)(result + 64) = a16;
  *(_QWORD *)(result + 72) = a17;
  *(_QWORD *)((char *)a9 + v29[13]) = result;
  return result;
}

uint64_t type metadata accessor for MedicationCategoryTipCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationsCategoryTipItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FB270);
}

uint64_t type metadata accessor for TipImage(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0ECB0);
}

uint64_t MedicationsCategoryTipItem.init(identifier:headerView:titleText:bodyText:bodyTextLineLimit:image:baseIdentifier:actions:didTapDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t result;
  _QWORD *v27;
  _QWORD *v28;

  type metadata accessor for MedicationCategoryTipCell();
  sub_1BC0E008C(&qword_1EF3FB1F0, v23, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCategoryTipCell, (uint64_t)&protocol conformance descriptor for MedicationCategoryTipCell);
  a9[2] = sub_1BC2B2930();
  a9[3] = v24;
  *a9 = a1;
  a9[1] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = a5;
  a9[7] = a6;
  a9[8] = a7;
  a9[9] = a8;
  v25 = (int *)type metadata accessor for MedicationsCategoryTipItem(0);
  result = sub_1BC0F1B94(a10, (uint64_t)a9 + v25[10], type metadata accessor for TipImage);
  v27 = (_QWORD *)((char *)a9 + v25[12]);
  *v27 = a11;
  v27[1] = a12;
  v28 = (_QWORD *)((char *)a9 + v25[11]);
  *v28 = a14;
  v28[1] = a15;
  *(_QWORD *)((char *)a9 + v25[13]) = a13;
  return result;
}

uint64_t MedicationsCategoryTipItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationsCategoryTipItem(0) + 52));
  sub_1BC2B545C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BC2B44D8();
      sub_1BC2B44D8();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 48;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationsCategoryTipItem.hashValue.getter()
{
  sub_1BC2B5450();
  MedicationsCategoryTipItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1535E0()
{
  sub_1BC2B5450();
  MedicationsCategoryTipItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC153620()
{
  sub_1BC2B5450();
  MedicationsCategoryTipItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC15365C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC15368C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0FC574(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC153714();
  return sub_1BC0E8594((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC153714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  uint64_t v22[5];

  swift_getObjectType();
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FB2F0, type metadata accessor for MedicationsCategoryTipItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - v6;
  v8 = type metadata accessor for MedicationsCategoryTipItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v12, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (v22[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v13 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1BC0F1B94((uint64_t)v7, (uint64_t)v11, type metadata accessor for MedicationsCategoryTipItem);
      sub_1BC153C4C((uint64_t)v11);
      return sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationsCategoryTipItem);
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1BC0F2444((uint64_t)v7, (unint64_t *)&unk_1EF3FB2F0, type metadata accessor for MedicationsCategoryTipItem);
  sub_1BC2B39A4();
  v15 = sub_1BC2B39D4();
  v16 = sub_1BC2B48C8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_1BC2B54F8();
    v21[1] = sub_1BC12540C(v19, v20, v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v15, v16, "[%s] Incorrect view model for MedicationsCategoryTipCell", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v18, -1, -1);
    MEMORY[0x1BCCEF3A0](v17, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1BC153A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC153A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC153714();
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t (*sub_1BC153B08(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC153B50;
}

uint64_t sub_1BC153B50(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC153714();
  return result;
}

void sub_1BC153C4C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  int EnumCaseMultiPayload;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = v1;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v67 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v68 = (uint64_t)&v66 - v7;
  v74 = type metadata accessor for TipImage(0);
  v8 = MEMORY[0x1E0C80A78](v74);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v66 - v11;
  v71 = *(void **)(a1 + 32);
  v13 = v71;
  v14 = type metadata accessor for MedicationsCategoryTipItem(0);
  v15 = *(_QWORD *)(a1 + *(int *)(v14 + 52));
  v16 = *(int *)(v14 + 40);
  v17 = v14;
  v72 = v14;
  v73 = a1 + v16;
  sub_1BC0FC574(a1 + v16, (uint64_t)v12, type metadata accessor for TipImage);
  v18 = (uint64_t *)(a1 + *(int *)(v17 + 44));
  v19 = *v18;
  v20 = v18[1];
  v21 = objc_allocWithZone((Class)type metadata accessor for MedicationsCategoryRoomTipView(0));
  v22 = v13;
  v70 = v22;
  swift_bridgeObjectRetain();
  sub_1BC0F2690(v19);
  v23 = sub_1BC158AFC(v13, v15, v12, v19, v20);
  sub_1BC0F2600(v19);

  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v24 = objc_msgSend(v2, sel_contentView);
  objc_msgSend(v24, sel_addSubview_, v23);

  v69 = (id)objc_opt_self();
  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC2BA730;
  v26 = objc_msgSend(v23, sel_topAnchor);
  v27 = objc_msgSend(v2, sel_contentView);
  v28 = objc_msgSend(v27, sel_topAnchor);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(_QWORD *)(v25 + 32) = v29;
  v30 = objc_msgSend(v23, sel_bottomAnchor);
  v31 = objc_msgSend(v2, sel_contentView);
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v32);
  *(_QWORD *)(v25 + 40) = v33;
  v34 = objc_msgSend(v23, sel_leadingAnchor);
  v35 = objc_msgSend(v2, sel_contentView);
  v36 = objc_msgSend(v35, sel_leadingAnchor);

  v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v36);
  *(_QWORD *)(v25 + 48) = v37;
  v38 = objc_msgSend(v23, sel_trailingAnchor);
  v39 = objc_msgSend(v2, sel_contentView);
  v40 = objc_msgSend(v39, sel_trailingAnchor);

  v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v40);
  *(_QWORD *)(v25 + 56) = v41;
  v75 = v25;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v42 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v42);

  v43 = *(void **)&v23[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  *(_QWORD *)&v23[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView] = v71;
  v44 = v70;

  v45 = sub_1BC154864();
  v46 = (void *)sub_1BC2B4430();
  objc_msgSend(v45, sel_setText_, v46);

  v47 = sub_1BC154AF0();
  v48 = (void *)sub_1BC2B4430();
  objc_msgSend(v47, sel_setText_, v48);

  v49 = sub_1BC154AF0();
  objc_msgSend(v49, sel_setNumberOfLines_, *(_QWORD *)(a1 + 72));

  v50 = (uint64_t *)(a1 + *(int *)(v72 + 48));
  v52 = *v50;
  v51 = v50[1];
  v53 = &v23[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_baseIdentifier];
  *(_QWORD *)v53 = v52;
  *((_QWORD *)v53 + 1) = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC0FC574(v73, (uint64_t)v10, type metadata accessor for TipImage);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v55 = v68;
      sub_1BC109D88((uint64_t)v10, v68);
      v56 = sub_1BC1546DC();
      sub_1BC11C330(v55, v67);
      sub_1BC2B3308();

      sub_1BC0F2444(v55, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
      return;
    }
    v64 = *(void **)v10;
    v65 = sub_1BC154504();
    objc_msgSend(v65, sel_setImage_, v64);

  }
  else
  {
    v57 = (void *)*((_QWORD *)v10 + 2);
    v58 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, 5, *((double *)v10 + 3));
    v59 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v60 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v59, v58);

    v61 = sub_1BC154504();
    objc_msgSend(v61, sel_setImage_, v60);

    v62 = sub_1BC154504();
    v63 = v57;
    objc_msgSend(v62, sel_setTintColor_, v63);

  }
}

id MedicationCategoryTipCell.__deallocating_deinit(uint64_t a1)
{
  return sub_1BC156ED4(a1, type metadata accessor for MedicationCategoryTipCell);
}

uint64_t sub_1BC15440C(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints] = a1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC16D050(v3, v2);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    v5 = (void *)objc_opt_self();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v6 = (void *)sub_1BC2B4580();
    objc_msgSend(v5, sel_deactivateConstraints_, v6);

    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v7);

    objc_msgSend(v1, sel_setNeedsLayout);
  }
  return swift_bridgeObjectRelease();
}

id sub_1BC154504()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___iconImageView, (uint64_t (*)(uint64_t))sub_1BC154518);
}

id sub_1BC154518()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setContentMode_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v0, sel_setTintColor_, v1);

  v2 = sub_1BC2B4460();
  v4 = v3;
  v5 = v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v8 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6, v8, v4);

  return v5;
}

id sub_1BC1546DC()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___medicationView, (uint64_t (*)(uint64_t))sub_1BC1546F0);
}

id sub_1BC1546F0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = sub_1BC2B4460();
  v3 = v2;
  v4 = v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v7, v3);

  return v4;
}

id sub_1BC154864()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_1BC154878);
}

id sub_1BC154878(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  uint64_t v14;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = sub_1BC2B4460();
  v5 = v4;
  v6 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v14 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v14, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  v8 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4A88], 1024);
  objc_msgSend(v6, sel_setFont_, v8);

  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  v9 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v9);

  v10 = v6;
  v11 = objc_msgSend(a1, sel_backgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  LODWORD(v12) = 1132068864;
  objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 0, v12);
  return v10;
}

id sub_1BC154AF0()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___detailLabel, (uint64_t (*)(uint64_t))sub_1BC154B04);
}

id sub_1BC154B04(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  uint64_t v14;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = sub_1BC2B4460();
  v5 = v4;
  v6 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v14 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v14, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v6, sel_setFont_, v8);

  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  v9 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v6, sel_setTextColor_, v9);

  v10 = v6;
  v11 = objc_msgSend(a1, sel_backgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  LODWORD(v12) = 1132068864;
  objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 0, v12);
  return v10;
}

id sub_1BC154DA8()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1BC154DF0);
}

id sub_1BC154DF0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_didTapDismiss, 64);
  v3 = sub_1BC2B4460();
  v5 = v4;
  v6 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v9 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v9, v5);

  return v6;
}

id sub_1BC154F84()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView);
  }
  else
  {
    v4 = v0;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v5 = (void *)sub_1BC2B4C64();
    v6 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v5);

    v7 = v6;
    v8 = (void *)sub_1BC2B4430();
    v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v8, v7);

    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v10, sel_setPreferredSymbolConfiguration_, v7);
    objc_msgSend(v10, sel_setContentMode_, 1);
    if (v9)
    {
      v11 = (void *)objc_opt_self();
      v12 = v9;
      v13 = objc_msgSend(v11, sel_quaternaryLabelColor);
      v14 = objc_msgSend(v12, sel_imageWithTintColor_renderingMode_, v13, 1);

    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(v10, sel_setImage_, v14);

    v15 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v16 = v2;
  return v3;
}

id sub_1BC1551A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 0);
    objc_msgSend(v4, sel_setDistribution_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC155260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  id v6;
  id v7;
  int v8;
  objc_super v9;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = (unsigned __int8 *)MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_traitCollection);
    v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);
    v8 = sub_1BC2B4ACC() & 1;

    if (v8 != v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout])
    {
      sub_1BC155A1C(v8);
      objc_msgSend(v5, sel_invalidateIntrinsicContentSize);
      v9.receiver = v5;
      v9.super_class = (Class)type metadata accessor for MedicationsCategoryRoomTipView(0);
      objc_msgSendSuper2(&v9, sel_layoutSubviews);
    }

  }
}

id sub_1BC155360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  unint64_t v15;

  v0 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
  objc_msgSend(v4, sel_setSeparatorThickness_, 0.5);
  v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
  objc_msgSend(v4, sel_setColor_, v5);

  v6 = sub_1BC2B4460();
  v8 = v7;
  v14 = 46;
  v15 = 0xE100000000000000;
  v9 = v4;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v14 = v6;
  v15 = v8;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v11 = v14;
  v10 = v15;
  v14 = 46;
  v15 = 0xE100000000000000;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v14 = v11;
  v15 = v10;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);

  return v9;
}

id sub_1BC1555B4(__int128 *a1)
{
  void *v1;
  void *v2;
  __int128 v3;
  id v4;
  id v5;
  void *v6;
  _OWORD *v7;
  __int128 v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v2 = v1;
  v3 = a1[1];
  v26 = *a1;
  v27 = v3;
  v28 = a1[2];
  v4 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1BC2B4460();
  v5 = v4;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  v7 = (_OWORD *)swift_allocObject();
  v8 = v27;
  v7[1] = v26;
  v7[2] = v8;
  v7[3] = v28;
  sub_1BC158AB4((uint64_t)&v26);
  v9 = (void *)sub_1BC2B4DA8();
  objc_msgSend(v5, sel_addAction_forControlEvents_, v9, 64, 0, 0, 0, sub_1BC158A94, v7);

  v10 = v5;
  v11 = objc_msgSend(v2, sel_backgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  v12 = objc_msgSend(v10, sel_titleLabel);
  if (v12)
  {
    v13 = v12;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v14 = (void *)sub_1BC2B4C64();
    objc_msgSend(v13, sel_setFont_, v14);

  }
  v15 = objc_msgSend(v10, sel_titleLabel);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_setAdjustsFontForContentSizeCategory_, 1);

  }
  v17 = objc_msgSend(v10, sel_titleLabel);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  }
  v19 = objc_msgSend(v10, sel_titleLabel);
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, sel_setNumberOfLines_, 0);

  }
  v21 = objc_msgSend(v10, sel_titleLabel);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    objc_msgSend(v22, sel_setTextColor_, v23);

  }
  v24 = (void *)sub_1BC2B4430();
  objc_msgSend(v10, sel_setTitle_forState_, v24, 0);

  objc_msgSend(v10, sel_setContentHorizontalAlignment_, 4);
  return v10;
}

void sub_1BC155A1C(int a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint32_t *p_align;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  void *v86;
  char v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  id v101;
  uint64_t v102;
  BOOL v103;
  void *v104;
  char **v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  int v120;
  uint64_t v121;
  unint64_t v122;

  v2 = v1;
  swift_getObjectType();
  v4 = (_QWORD *)sub_1BC2B39E0();
  p_align = (uint32_t *)*(v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC154F84();
  v9 = objc_msgSend(v8, sel_image);

  if (!v9)
    goto LABEL_14;
  v120 = a1;
  v119 = v9;
  objc_msgSend(v9, sel_size);
  v11 = v10;
  v13 = v12;
  objc_msgSend(v2, sel_setLayoutMargins_, 11.0, 13.0, 11.0, 13.0);
  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC2BC920;
  v15 = sub_1BC154DA8();
  v16 = objc_msgSend(v15, sel_topAnchor);

  v17 = objc_msgSend(v2, sel_topAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v14 + 32) = v18;
  v19 = sub_1BC154DA8();
  v20 = objc_msgSend(v19, sel_trailingAnchor);

  v21 = objc_msgSend(v2, sel_trailingAnchor);
  v22 = objc_msgSend(v20, (SEL)&selRef_sharedBehavior + 6, v21);

  *(_QWORD *)(v14 + 40) = v22;
  v23 = sub_1BC154DA8();
  v24 = objc_msgSend(v23, sel_widthAnchor);

  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, v11 + 26.0);
  *(_QWORD *)(v14 + 48) = v25;
  v26 = sub_1BC154DA8();
  v27 = objc_msgSend(v26, sel_heightAnchor);

  v28 = objc_msgSend(v27, sel_constraintEqualToConstant_, v13 + 22.0);
  *(_QWORD *)(v14 + 56) = v28;
  v29 = sub_1BC154F84();
  v30 = objc_msgSend(v29, sel_topAnchor);

  v31 = objc_msgSend(v2, sel_topAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, 11.0);

  *(_QWORD *)(v14 + 64) = v32;
  v33 = sub_1BC154F84();
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  v35 = objc_msgSend(v2, sel_trailingAnchor);
  v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v35, -13.0);

  *(_QWORD *)(v14 + 72) = v36;
  v37 = sub_1BC154F84();
  v38 = objc_msgSend(v37, sel_widthAnchor);

  v39 = objc_msgSend(v38, sel_constraintGreaterThanOrEqualToConstant_, v11);
  *(_QWORD *)(v14 + 80) = v39;
  v40 = sub_1BC154AF0();
  v41 = objc_msgSend(v40, sel_topAnchor);

  v42 = sub_1BC154864();
  p_align = &stru_1E74C9FE8.align;
  v43 = objc_msgSend(v42, sel_bottomAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 4.0);
  *(_QWORD *)(v14 + 88) = v44;
  v45 = sub_1BC154AF0();
  v46 = objc_msgSend(v45, sel_leadingAnchor);

  v47 = sub_1BC154864();
  v48 = objc_msgSend(v47, sel_leadingAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(_QWORD *)(v14 + 96) = v49;
  v50 = sub_1BC154AF0();
  v51 = objc_msgSend(v50, sel_trailingAnchor);

  v52 = objc_msgSend(v2, sel_trailingAnchor);
  v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v52, -13.0);

  *(_QWORD *)(v14 + 104) = v53;
  v54 = sub_1BC154AF0();
  v55 = objc_msgSend(v54, sel_bottomAnchor);

  v56 = sub_1BC1551A0();
  v57 = objc_msgSend(v56, sel_topAnchor);

  v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v57, -11.0);
  *(_QWORD *)(v14 + 112) = v58;
  v59 = sub_1BC1551A0();
  v60 = objc_msgSend(v59, sel_topAnchor);

  v61 = sub_1BC154AF0();
  v62 = objc_msgSend(v61, sel_bottomAnchor);

  v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_constant_, v62, 11.0);
  *(_QWORD *)(v14 + 120) = v63;
  v64 = sub_1BC1551A0();
  v65 = objc_msgSend(v64, sel_trailingAnchor);

  v66 = objc_msgSend(v2, sel_trailingAnchor);
  v67 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v66);

  *(_QWORD *)(v14 + 128) = v67;
  v68 = sub_1BC1551A0();
  v69 = objc_msgSend(v68, sel_bottomAnchor);

  v70 = objc_msgSend(v2, sel_bottomAnchor);
  v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

  *(_QWORD *)(v14 + 136) = v71;
  v122 = v14;
  sub_1BC2B45A4();
  v72 = v122;
  v73 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView;
  v74 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  if (v74)
  {
    v75 = v74;
    v76 = objc_msgSend(v75, sel_topAnchor);
    v77 = objc_msgSend(v2, sel_topAnchor);
    v78 = objc_msgSend(v76, sel_constraintEqualToAnchor_constant_, v77, 11.0);

    v79 = objc_msgSend(v75, sel_trailingAnchor);
    v80 = sub_1BC154F84();
    p_align = (uint32_t *)objc_msgSend(v80, sel_leadingAnchor);

    v81 = objc_msgSend(v79, sel_constraintLessThanOrEqualToAnchor_constant_, p_align, 11.0);
    if (v72 >> 62)
    {
      swift_bridgeObjectRetain();
      v116 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      v83 = v116 + 2;
      if (!__OFADD__(v116, 2))
      {
LABEL_5:
        sub_1BC177590(v83, 1);
        sub_1BC2B45A4();
        v72 = (unint64_t)v78;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_6:
          sub_1BC2B4604();
          sub_1BC2B45A4();
          v84 = v81;
          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();

          goto LABEL_9;
        }
LABEL_32:
        sub_1BC2B45C8();
        goto LABEL_6;
      }
    }
    else
    {
      v82 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
      v83 = v82 + 2;
      if (!__OFADD__(v82, 2))
        goto LABEL_5;
    }
    __break(1u);
    goto LABEL_32;
  }
LABEL_9:
  v85 = sub_1BC154864();
  v86 = v85;
  v87 = v120;
  if ((v120 & 1) == 0)
  {
    v101 = objc_msgSend(v85, sel_topAnchor);

    v102 = *(_QWORD *)&v2[v73];
    v103 = v102 == 0;
    if (v102)
      v104 = *(void **)&v2[v73];
    else
      v104 = v2;
    v105 = &selRef_bottomAnchor;
    if (v103)
      v105 = &selRef_topAnchor;
    v106 = objc_msgSend(v104, *v105);
    v4 = objc_msgSend(v101, sel_constraintEqualToAnchor_constant_, v106, 11.0);

    v107 = sub_1BC154864();
    v108 = objc_msgSend(v107, sel_trailingAnchor);

    v109 = sub_1BC154F84();
    v110 = objc_msgSend(v109, sel_leadingAnchor);

    v7 = (char *)objc_msgSend(v108, sel_constraintEqualToAnchor_constant_, v110, -10.0);
    if (v122 >> 62)
    {
      swift_bridgeObjectRetain();
      v118 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      v94 = v118 + 2;
      if (!__OFADD__(v118, 2))
        goto LABEL_24;
    }
    else
    {
      v111 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10);
      v94 = v111 + 2;
      if (!__OFADD__(v111, 2))
      {
LABEL_24:
        sub_1BC177590(v94, 1);
        sub_1BC2B45A4();
        v112 = v4;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
        v113 = v7;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();

        v114 = v122;
        v115 = sub_1BC15674C(v87 & 1);
        v121 = v114;
        sub_1BC131340(v115);
        sub_1BC15440C(v121);

        v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout] = v87 & 1;
        return;
      }
    }
    __break(1u);
    return;
  }
  v88 = objc_msgSend(v85, sel_trailingAnchor);

  v89 = objc_msgSend(v2, sel_trailingAnchor);
  v4 = objc_msgSend(v88, sel_constraintEqualToAnchor_constant_, v89, -13.0);

  v90 = sub_1BC1551A0();
  v91 = objc_msgSend(v90, sel_leadingAnchor);

  v92 = objc_msgSend(v2, sel_leadingAnchor);
  v7 = (char *)objc_msgSend(v91, sel_constraintEqualToAnchor_constant_, v92, 13.0);

  if (v122 >> 62)
  {
    swift_bridgeObjectRetain();
    v117 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v94 = v117 + 2;
    if (!__OFADD__(v117, 2))
      goto LABEL_24;
  }
  else
  {
    v93 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10);
    v94 = v93 + 2;
    if (!__OFADD__(v93, 2))
      goto LABEL_24;
  }
  __break(1u);
LABEL_14:
  sub_1BC2B39A4();
  v95 = sub_1BC2B39D4();
  v96 = sub_1BC2B48C8();
  if (os_log_type_enabled(v95, v96))
  {
    v97 = (uint8_t *)swift_slowAlloc();
    v98 = swift_slowAlloc();
    v122 = v98;
    *(_DWORD *)v97 = 136315138;
    v99 = sub_1BC2B54F8();
    v121 = sub_1BC12540C(v99, v100, (uint64_t *)&v122);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v95, v96, "[%s] Dismiss button image is nil.", v97, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v98, -1, -1);
    MEMORY[0x1BCCEF3A0](v97, -1, -1);
  }

  (*((void (**)(char *, _QWORD *))p_align + 1))(v7, v4);
}

uint64_t sub_1BC15674C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  void *v15;
  char **v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t result;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v2 = v1;
  v4 = type metadata accessor for TipImage(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (id *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC0FC574((uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_tipImage], (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v9 = sub_1BC1546DC();
      sub_1BC0E8594((uint64_t)v6, type metadata accessor for TipImage);
      goto LABEL_7;
    }

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v9 = sub_1BC154504();
LABEL_7:
  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC2BA730;
  v11 = objc_msgSend(v9, sel_topAnchor);
  v12 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView;
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  v14 = v13 == 0;
  if (v13)
    v15 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  else
    v15 = v2;
  v16 = &selRef_bottomAnchor;
  if (v14)
    v16 = &selRef_topAnchor;
  v17 = objc_msgSend(v15, *v16);
  v18 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v17, 11.0);

  *(_QWORD *)(v10 + 32) = v18;
  v19 = objc_msgSend(v9, sel_leadingAnchor);
  v20 = objc_msgSend(v2, sel_leadingAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 13.0);

  *(_QWORD *)(v10 + 40) = v21;
  v22 = objc_msgSend(v9, sel_widthAnchor);
  v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 45.0);

  *(_QWORD *)(v10 + 48) = v23;
  v24 = objc_msgSend(v9, sel_heightAnchor);
  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 45.0);

  *(_QWORD *)(v10 + 56) = v25;
  v54 = v10;
  sub_1BC2B45A4();
  v26 = *(void **)&v2[v12];
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v27, sel_leadingAnchor);
    v29 = objc_msgSend(v9, sel_leadingAnchor);
    v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

    v31 = v30;
    MEMORY[0x1BCCEDCF0]();
    if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC2B45C8();
    sub_1BC2B4604();
    sub_1BC2B45A4();

  }
  v32 = sub_1BC154864();
  v33 = v32;
  if ((a1 & 1) != 0)
  {
    v34 = objc_msgSend(v32, sel_topAnchor);

    v35 = objc_msgSend(v9, sel_bottomAnchor);
    v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v35, 4.0);

    v37 = sub_1BC154864();
    v38 = objc_msgSend(v37, sel_leadingAnchor);

    v39 = objc_msgSend(v9, sel_leadingAnchor);
    v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

    v33 = (void *)v54;
    if (v54 >> 62)
    {
      swift_bridgeObjectRetain();
      v51 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      result = v51 + 2;
      if (!__OFADD__(v51, 2))
        goto LABEL_23;
    }
    else
    {
      v41 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = v41 + 2;
      if (!__OFADD__(v41, 2))
        goto LABEL_23;
    }
    __break(1u);
  }
  v43 = objc_msgSend(v33, sel_leadingAnchor);

  v44 = objc_msgSend(v9, sel_trailingAnchor);
  v36 = objc_msgSend(v43, sel_constraintEqualToAnchor_constant_, v44, 11.0);

  v45 = sub_1BC1551A0();
  v46 = objc_msgSend(v45, sel_leadingAnchor);

  v47 = objc_msgSend(v9, sel_trailingAnchor);
  v40 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v47, 11.0);

  if (v54 >> 62)
  {
    swift_bridgeObjectRetain();
    v52 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    result = v52 + 2;
    if (!__OFADD__(v52, 2))
      goto LABEL_23;
LABEL_33:
    __break(1u);
    return result;
  }
  v48 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = v48 + 2;
  if (__OFADD__(v48, 2))
    goto LABEL_33;
LABEL_23:
  sub_1BC177590(result, 1);
  sub_1BC2B45A4();
  v49 = v36;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  v50 = v40;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();

  return v54;
}

id MedicationsCategoryRoomTipView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void MedicationsCategoryRoomTipView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationsCategoryRoomTipView.__deallocating_deinit()
{
  return sub_1BC156ED4(0, (uint64_t (*)(void))type metadata accessor for MedicationsCategoryRoomTipView);
}

id sub_1BC156ED4(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t _s19HealthMedicationsUI0B15CategoryTipItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v17;
  char v18;
  char v20;
  uint64_t v22;

  v4 = type metadata accessor for MedicationsCategoryTipItem(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (uint64_t *)((char *)&v22 - v9);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v22 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
  {
    sub_1BC0FC574(a1, (uint64_t)&v22 - v14, type metadata accessor for MedicationsCategoryTipItem);
    sub_1BC0FC574(a2, (uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
  }
  else
  {
    v17 = sub_1BC2B53CC();
    sub_1BC0FC574(a1, (uint64_t)v15, type metadata accessor for MedicationsCategoryTipItem);
    sub_1BC0FC574(a2, (uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
    if ((v17 & 1) == 0)
    {
      sub_1BC0E8594((uint64_t)v15, type metadata accessor for MedicationsCategoryTipItem);
      sub_1BC0E8594((uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
      sub_1BC0FC574(a2, (uint64_t)v10, type metadata accessor for MedicationsCategoryTipItem);
      sub_1BC0FC574(a1, (uint64_t)v7, type metadata accessor for MedicationsCategoryTipItem);
LABEL_14:
      v20 = 0;
      goto LABEL_16;
    }
  }
  v18 = sub_1BC16CD9C(*(_QWORD *)&v15[*(int *)(v4 + 52)], *(_QWORD *)&v13[*(int *)(v4 + 52)]);
  sub_1BC0E8594((uint64_t)v15, type metadata accessor for MedicationsCategoryTipItem);
  sub_1BC0E8594((uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
  sub_1BC0FC574(a2, (uint64_t)v10, type metadata accessor for MedicationsCategoryTipItem);
  sub_1BC0FC574(a1, (uint64_t)v7, type metadata accessor for MedicationsCategoryTipItem);
  if ((v18 & 1) == 0)
    goto LABEL_14;
  if (*v10 == *v7 && v10[1] == v7[1])
    v20 = 1;
  else
    v20 = sub_1BC2B53CC();
LABEL_16:
  sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationsCategoryTipItem);
  sub_1BC0E8594((uint64_t)v7, type metadata accessor for MedicationsCategoryTipItem);
  return v20 & 1;
}

uint64_t type metadata accessor for MedicationsCategoryRoomTipView(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0ECA0);
}

unint64_t sub_1BC157248()
{
  unint64_t result;

  result = qword_1EF3FB208;
  if (!qword_1EF3FB208)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for TipAction, &type metadata for TipAction);
    atomic_store(result, (unint64_t *)&qword_1EF3FB208);
  }
  return result;
}

uint64_t sub_1BC15728C()
{
  return sub_1BC0E008C(&qword_1EF3FB210, 255, type metadata accessor for MedicationsCategoryTipItem, (uint64_t)&protocol conformance descriptor for MedicationsCategoryTipItem);
}

uint64_t sub_1BC1572BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a2, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t destroy for TipAction()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for TipAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TipAction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TipAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TipAction()
{
  return &type metadata for TipAction;
}

char *initializeBufferWithCopyOfBuffer for TipImage(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = *a2;
      *(_QWORD *)a1 = *a2;
      v12 = v11;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1BC2B3608();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char **, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      v13 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v13;
      v15 = a2[2];
      v14 = a2[3];
      *((_QWORD *)a1 + 2) = v15;
      *((_QWORD *)a1 + 3) = v14;
      swift_bridgeObjectRetain();
      v16 = v15;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for TipImage(uint64_t a1)
{
  int EnumCaseMultiPayload;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v3 = *(void **)a1;
      goto LABEL_6;
    case 1:
      v4 = sub_1BC2B3608();
      v5 = *(_QWORD *)(v4 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      break;
    case 0:
      swift_bridgeObjectRelease();
      v3 = *(void **)(a1 + 16);
LABEL_6:

      break;
  }
}

void **initializeWithCopy for TipImage(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = *a2;
    *a1 = *a2;
    v9 = v8;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1BC2B3608();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void **, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v12 = a2[2];
    v11 = a2[3];
    a1[2] = v12;
    a1[3] = v11;
    swift_bridgeObjectRetain();
    v13 = v12;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for TipImage(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for TipImage);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = *a2;
      *a1 = *a2;
      v9 = v8;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1BC2B3608();
      v6 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v10 = a2[2];
      a1[2] = v10;
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      v11 = v10;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TipImage(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC2B3608();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TipImage(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for TipImage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC2B3608();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchItem.Source(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for MedicationSearchItem.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1BC157B68()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1BC157B78()
{
  unint64_t v0;

  sub_1BC0E7998(319, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationsCategoryTipItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  id v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  void **v38;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[2];
    v9 = a2[3];
    v11 = (void *)a2[4];
    v10 = a2[5];
    a1[4] = (uint64_t)v11;
    a1[5] = v10;
    v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    v14 = a3[10];
    v38 = (void **)((char *)a1 + v14);
    v15 = (void **)((char *)a2 + v14);
    a1[2] = v8;
    a1[3] = v9;
    type metadata accessor for TipImage(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v22 = *v15;
      *v38 = *v15;
      v23 = v22;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v18 = sub_1BC2B3608();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v38, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v19 + 16))(v38, v15, v18);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v19 + 56))(v38, 0, 1, v18);
      }
    }
    else
    {
      v24 = v15[1];
      *v38 = *v15;
      v38[1] = v24;
      v26 = v15[2];
      v25 = v15[3];
      v38[2] = v26;
      v38[3] = v25;
      swift_bridgeObjectRetain();
      v27 = v26;
    }
    swift_storeEnumTagMultiPayload();
    v28 = a3[11];
    v29 = (uint64_t *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    if (*v30)
    {
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    v32 = a3[12];
    v33 = a3[13];
    v34 = (uint64_t *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    *(uint64_t *)((char *)v4 + v33) = *(uint64_t *)((char *)a2 + v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MedicationsCategoryTipItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  type metadata accessor for TipImage(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = *(void **)v4;
LABEL_6:

    goto LABEL_9;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      goto LABEL_9;
    swift_bridgeObjectRelease();
    v6 = *(void **)(v4 + 16);
    goto LABEL_6;
  }
  v7 = sub_1BC2B3608();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
LABEL_9:
  if (*(_QWORD *)(a1 + *(int *)(a2 + 44)))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MedicationsCategoryTipItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  id v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  v9 = (void *)a2[4];
  v8 = a2[5];
  a1[4] = v9;
  a1[5] = v8;
  v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  v11 = a2[9];
  a1[8] = a2[8];
  a1[9] = v11;
  v12 = a3[10];
  v13 = (void **)((char *)a1 + v12);
  v14 = (void **)((char *)a2 + v12);
  a1[2] = v6;
  a1[3] = v7;
  type metadata accessor for TipImage(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v21 = *v14;
    *v13 = *v14;
    v22 = v21;
    v19 = a3;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v17 = sub_1BC2B3608();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = a3;
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void **, void **, uint64_t))(v18 + 16))(v13, v14, v17);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
  }
  else
  {
    v19 = a3;
    v23 = v14[1];
    *v13 = *v14;
    v13[1] = v23;
    v25 = v14[2];
    v24 = v14[3];
    v13[2] = v25;
    v13[3] = v24;
    swift_bridgeObjectRetain();
    v26 = v25;
  }
  swift_storeEnumTagMultiPayload();
  v27 = v19[11];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  if (*v29)
  {
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  v31 = v19[12];
  v32 = v19[13];
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MedicationsCategoryTipItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void **v10;
  void **v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = v7;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  if (a1 != a2)
  {
    v9 = a3[10];
    v10 = (void **)((char *)a1 + v9);
    v11 = (void **)((char *)a2 + v9);
    sub_1BC0E8594((uint64_t)a1 + v9, type metadata accessor for TipImage);
    type metadata accessor for TipImage(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = *v11;
      *v10 = *v11;
      v17 = v16;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_1BC2B3608();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
    }
    else
    {
      *v10 = *v11;
      v10[1] = v11[1];
      v18 = v11[2];
      v10[2] = v18;
      v10[3] = v11[3];
      swift_bridgeObjectRetain();
      v19 = v18;
    }
    swift_storeEnumTagMultiPayload();
  }
  v20 = a3[11];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a1 + v20);
  v24 = *(_QWORD *)((char *)a2 + v20);
  if (!v23)
  {
    if (v24)
    {
      v26 = *((_QWORD *)v22 + 1);
      *v21 = v24;
      v21[1] = v26;
      swift_retain();
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_17;
  }
  if (!v24)
  {
    swift_release();
    goto LABEL_16;
  }
  v25 = *((_QWORD *)v22 + 1);
  *v21 = v24;
  v21[1] = v25;
  swift_retain();
  swift_release();
LABEL_17:
  v27 = a3[12];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MedicationsCategoryTipItem(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[10];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  v11 = type metadata accessor for TipImage(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_1BC2B3608();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v15 = a3[11];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  return a1;
}

_QWORD *assignWithTake for MedicationsCategoryTipItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[8];
  a1[7] = a2[7];
  a1[8] = v10;
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  if (a1 != a2)
  {
    v11 = a3[10];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_1BC0E8594((uint64_t)a1 + v11, type metadata accessor for TipImage);
    v14 = type metadata accessor for TipImage(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v13, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  v18 = a3[11];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)((char *)a1 + v18);
  v22 = *(_QWORD *)((char *)a2 + v18);
  if (!v21)
  {
    if (v22)
    {
      v24 = *((_QWORD *)v20 + 1);
      *v19 = v22;
      v19[1] = v24;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    goto LABEL_15;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_14;
  }
  v23 = *((_QWORD *)v20 + 1);
  *v19 = v22;
  v19[1] = v23;
  swift_release();
LABEL_15:
  v25 = a3[12];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationsCategoryTipItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC158794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TipImage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationsCategoryTipItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC15881C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TipImage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC158890()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TipImage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationCategoryTipCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationCategoryTipCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicationCategoryTipCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicationCategoryTipCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t sub_1BC158998()
{
  return type metadata accessor for MedicationsCategoryRoomTipView(0);
}

uint64_t sub_1BC1589A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TipImage(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for MedicationsCategoryRoomTipView()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC158A60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC158A94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1BC158AB4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *sub_1BC158AFC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  void *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  id v38;
  id *v39;
  int EnumCaseMultiPayload;
  char *v41;
  id v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)();
  id v65;
  uint64_t v66;
  uint64_t (*v67)();
  id v68;
  id v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  id *v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  objc_super v86;

  *(_QWORD *)&v80 = type metadata accessor for TipImage(0);
  MEMORY[0x1E0C80A78](v80);
  v81 = (id *)((char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions] = MEMORY[0x1E0DEE9D8];
  v14 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView] = 0;
  v15 = (uint64_t *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_onDismiss];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_baseIdentifier];
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints] = v13;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___iconImageView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___medicationView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView] = 0;
  v17 = *(void **)&v5[v14];
  *(_QWORD *)&v5[v14] = a1;
  v18 = v5;
  v77 = a1;

  *(_QWORD *)&v5[v12] = a2;
  swift_bridgeObjectRelease();
  v19 = *v15;
  *v15 = a4;
  v15[1] = a5;
  v78 = a4;
  v79 = a5;
  sub_1BC0F2690(a4);
  v20 = (uint64_t)a3;
  sub_1BC0F2600(v19);
  sub_1BC0FC574((uint64_t)a3, (uint64_t)&v18[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_tipImage], type metadata accessor for TipImage);

  v21 = (objc_class *)type metadata accessor for MedicationsCategoryRoomTipView(0);
  v86.receiver = v18;
  v86.super_class = v21;
  v22 = objc_msgSendSuper2(&v86, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v23 = (void *)objc_opt_self();
  v24 = v22;
  v25 = objc_msgSend(v23, sel_secondarySystemBackgroundColor);
  objc_msgSend(v24, sel_setBackgroundColor_, v25);

  v26 = v24;
  sub_1BC2B263C();
  v27 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  if (a1)
  {
    v28 = v77;
    objc_msgSend(v28, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v26, sel_addSubview_, v28);

  }
  v29 = v26;
  v30 = sub_1BC154F84();
  objc_msgSend(v29, sel_addSubview_, v30);

  v31 = v29;
  v32 = sub_1BC154DA8();
  objc_msgSend(v31, sel_addSubview_, v32);

  v33 = v31;
  v34 = sub_1BC154864();
  objc_msgSend(v33, sel_addSubview_, v34);

  v35 = v33;
  v36 = sub_1BC154AF0();
  objc_msgSend(v35, sel_addSubview_, v36);

  v37 = (char *)v35;
  v38 = sub_1BC1551A0();
  objc_msgSend(v37, sel_addSubview_, v38);

  v39 = v81;
  sub_1BC0FC574((uint64_t)a3, (uint64_t)v81, type metadata accessor for TipImage);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v41 = v37;
      v42 = sub_1BC1546DC();
      objc_msgSend(v41, sel_addSubview_, v42);

      sub_1BC0E8594((uint64_t)v39, type metadata accessor for TipImage);
      goto LABEL_9;
    }

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v43 = v37;
  v44 = sub_1BC154504();
  objc_msgSend(v43, sel_addSubview_, v44);

LABEL_9:
  v45 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions;
  v46 = *(_QWORD *)(*(_QWORD *)&v37[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions] + 16);
  if (v46)
  {
    v77 = a3;
    v76 = swift_bridgeObjectRetain();
    v47 = v37;
    v48 = v76 + 40;
    do
    {
      v50 = *(_QWORD *)(v48 - 8);
      v49 = *(_QWORD *)v48;
      v51 = v45;
      v52 = *(_QWORD *)(v48 + 8);
      v53 = *(_QWORD *)(v48 + 32);
      swift_bridgeObjectRetain();
      v80 = *(_OWORD *)(v48 + 16);
      v81 = (id *)v80;
      swift_bridgeObjectRetain();
      swift_retain();
      v54 = sub_1BC1551A0();
      v55 = sub_1BC155360();
      objc_msgSend(v54, sel_addArrangedSubview_, v55, v76);

      *(_QWORD *)&v82 = v50;
      *((_QWORD *)&v82 + 1) = v49;
      v83 = v52;
      v45 = v51;
      v84 = v80;
      v85 = v53;
      v56 = sub_1BC1555B4(&v82);
      v57 = sub_1BC1551A0();
      objc_msgSend(v57, sel_addArrangedSubview_, v56);

      v58 = objc_msgSend(v56, sel_heightAnchor);
      v59 = objc_msgSend(v58, sel_constraintGreaterThanOrEqualToConstant_, 44.0);

      objc_msgSend(v59, sel_setActive_, 1);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v48 += 48;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease();
    v20 = (uint64_t)v77;
    v37 = v47;
  }
  v60 = sub_1BC154F84();
  v61 = v78;
  if (v78)
  {
    v62 = swift_allocObject();
    v63 = v79;
    *(_QWORD *)(v62 + 16) = v61;
    *(_QWORD *)(v62 + 24) = v63;
    v64 = sub_1BC15941C;
  }
  else
  {
    v64 = 0;
    v63 = v79;
  }
  sub_1BC0F2690(v61);
  sub_1BC0F2600((uint64_t)v64);
  objc_msgSend(v60, sel_setHidden_, v61 == 0);

  v65 = sub_1BC154DA8();
  if (v61)
  {
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = v61;
    *(_QWORD *)(v66 + 24) = v63;
    v67 = sub_1BC159410;
  }
  else
  {
    v67 = 0;
  }
  sub_1BC0F2690(v61);
  sub_1BC0F2600((uint64_t)v67);
  objc_msgSend(v65, sel_setHidden_, v61 == 0);

  v68 = objc_msgSend(v37, sel_traitCollection);
  v69 = objc_msgSend(v68, sel_preferredContentSizeCategory);
  v70 = sub_1BC2B4ACC();

  sub_1BC155A1C(v70 & 1);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_1BC2B92D0;
  v72 = sub_1BC2B3D40();
  v73 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v71 + 32) = v72;
  *(_QWORD *)(v71 + 40) = v73;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  v74 = v37;
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1BC0E8594(v20, type metadata accessor for TipImage);
  return v74;
}

void sub_1BC1592B4()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView] = 0;
  v2 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_onDismiss];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_baseIdentifier];
  *v3 = 0;
  v3[1] = 0xE000000000000000;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints] = v1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___iconImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___medicationView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC1593C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC1593E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC155260(a1, a2, v2);
}

uint64_t sub_1BC1593EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC159410()
{
  uint64_t v0;

  return sub_1BC172564(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t Array<A>.groupByCritical(for:)(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t result;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a1;
  swift_getKeyPath();
  if (a2 < 0 || (a2 & 0x4000000000000000) != 0)
  {
    swift_retain();
    v11 = swift_bridgeObjectRetain();
    v4 = (uint64_t)sub_1BC1332A8(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v15 = v4;
  sub_1BC15D86C(&v15);
  swift_release();
  swift_release();
  v5 = v15;
  v15 = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v5 + 16);
    swift_retain();
    if (v6)
      goto LABEL_7;
LABEL_16:
    swift_release_n();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  v6 = sub_1BC2B52D0();
  if (!v6)
    goto LABEL_16;
LABEL_7:
  if (v6 < 1)
  {
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    v7 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCEE950](v7, v5);
      else
        v8 = *(id *)(v5 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v12 = v8;
      sub_1BC159618(&v12, v3, &v15, &v14, &v13);

    }
    while (v6 != v7);
    swift_release_n();
    return v15;
  }
  return result;
}

uint64_t sub_1BC1595C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  result = sub_1BC2B3764();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC159618(void **a1, char a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;

  v28 = a5;
  sub_1BC0E7998(0, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - v13;
  v15 = *a1;
  sub_1BC2B4BD4();
  sub_1BC15DC94((uint64_t)v14, (uint64_t)v12);
  v16 = sub_1BC2B3788();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
  {
    sub_1BC15D914((uint64_t)v12);
    goto LABEL_10;
  }
  if (a2 == 1)
    v18 = sub_1BC2B3770();
  else
    v18 = sub_1BC2B377C();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
  if ((v19 & 1) == 0)
  {
LABEL_10:
    v21 = v15;
    sub_1BC1D0CF8(v21, a2);
    v23 = v22;

    swift_bridgeObjectRelease();
    v24 = v21;
    if (v23)
    {
      MEMORY[0x1BCCEDCF0](v24);
      if (*(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
    }
    else
    {
      v25 = v28;
      MEMORY[0x1BCCEDCF0](v24);
      if (*(_QWORD *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
    }
    goto LABEL_16;
  }
  v20 = v15;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
LABEL_16:
  sub_1BC2B4604();
  sub_1BC2B45A4();
  return sub_1BC15D914((uint64_t)v14);
}

uint64_t Array<A>.cellContent(for:)(unsigned __int8 *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint32_t *p_align;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;

  sub_1BC0E7998(0, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  p_align = (uint32_t *)((char *)&v36 - v8);
  v10 = *a1;
  v41 = MEMORY[0x1E0DEE9D8];
  if (a2 >> 62)
    goto LABEL_42;
  v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
    v32 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) == 0)
    {
LABEL_44:
      if ((v32 & 0x4000000000000000) == 0)
      {
        v33 = *(_QWORD *)(v32 + 16);
        goto LABEL_46;
      }
    }
LABEL_53:
    swift_bridgeObjectRetain();
    v33 = sub_1BC2B52D0();
    swift_release();
LABEL_46:
    swift_release();
    if (v33 <= 0)
    {
      if (v31 < 0)
        goto LABEL_54;
    }
    else
    {
      sub_1BC253C70(v33, 1);
      if (v31 < 0)
        goto LABEL_54;
    }
    if ((v31 & 0x4000000000000000) == 0)
    {
      v34 = *(_QWORD *)(v31 + 16);
LABEL_52:
      swift_release();
      return v34;
    }
LABEL_54:
    swift_bridgeObjectRetain();
    v34 = sub_1BC2B52D0();
    swift_release();
    goto LABEL_52;
  }
LABEL_3:
  v38 = a2;
  v39 = a2 & 0xC000000000000001;
  v12 = 4;
  while (1)
  {
    if (v39)
      v14 = (id)MEMORY[0x1BCCEE950](v12 - 4, a2);
    else
      v14 = *(id *)(a2 + 8 * v12);
    a2 = (unint64_t)v14;
    v15 = v12 - 3;
    if (__OFADD__(v12 - 4, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
      v11 = sub_1BC2B52D0();
      if (!v11)
        goto LABEL_43;
      goto LABEL_3;
    }
    if (v10 == 1)
    {
      sub_1BC2B4BD4();
      v16 = sub_1BC2B3788();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(uint32_t *, uint64_t, uint64_t))(v17 + 48))(p_align, 1, v16) == 1)
      {
        v13 = (uint64_t)p_align;
LABEL_5:
        sub_1BC15D914(v13);
        goto LABEL_6;
      }
      v18 = sub_1BC2B3770();
      (*(void (**)(uint32_t *, uint64_t))(v17 + 8))(p_align, v16);
      goto LABEL_19;
    }
    if (v10 != 2)
      break;
    sub_1BC2B4BD4();
    v19 = sub_1BC2B3788();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) == 1)
    {
      v13 = v7;
      goto LABEL_5;
    }
    v18 = sub_1BC2B377C();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v19);
LABEL_19:
    if ((v18 & 1) != 0)
    {
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
      goto LABEL_7;
    }
LABEL_6:

LABEL_7:
    a2 = v38;
    ++v12;
    if (v15 == v11)
    {
      swift_bridgeObjectRelease();
      v37 = v41;
      v41 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      v7 = 4;
      p_align = &stru_1E74C9FE8.align;
      while (1)
      {
        if (v39)
          v22 = (id)MEMORY[0x1BCCEE950](v7 - 4, a2);
        else
          v22 = *(id *)(a2 + 8 * v7);
        v23 = v22;
        a2 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          goto LABEL_41;
        v24 = objc_msgSend(v22, sel_localizedOntologyEducationContent);
        v25 = v24;
        if (v10 == 1)
        {
          if (!v24)
            goto LABEL_22;
          v40 = v24;
          sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
          v26 = sub_1BC2B2864();
        }
        else
        {
          if (!v24)
            goto LABEL_22;
          v40 = v24;
          sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
          v26 = sub_1BC2B2858();
        }
        v28 = v26;
        v29 = v27;

        if (v29)
        {
          swift_bridgeObjectRelease();
          v30 = HIBYTE(v29) & 0xF;
          if ((v29 & 0x2000000000000000) == 0)
            v30 = v28 & 0xFFFFFFFFFFFFLL;
          if (v30)
          {
            sub_1BC2B5204();
            sub_1BC2B5234();
            sub_1BC2B5240();
            sub_1BC2B5210();
            goto LABEL_23;
          }
        }
LABEL_22:

LABEL_23:
        ++v7;
        v21 = a2 == v11;
        a2 = v38;
        if (v21)
        {
          swift_bridgeObjectRelease();
          v31 = v41;
          v32 = v37;
          if ((v37 & 0x8000000000000000) == 0)
            goto LABEL_44;
          goto LABEL_53;
        }
      }
    }
  }
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

uint64_t Array<A>.countBySeverityLevel.getter(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;

  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B52D0();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v4 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)MEMORY[0x1BCCEE950](v4 - 4, a1);
        else
          v5 = *(id *)(a1 + 8 * v4);
        v6 = v5;
        v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        v8 = objc_msgSend(v5, sel_severityLevel);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v11 = sub_1BC107E08((uint64_t)v8);
        v12 = v3[2];
        v13 = (v10 & 1) == 0;
        v14 = v12 + v13;
        if (__OFADD__(v12, v13))
          goto LABEL_21;
        v15 = v10;
        if (v3[3] >= v14)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BC15BE10();
        }
        else
        {
          sub_1BC15ADB8(v14, isUniquelyReferenced_nonNull_native);
          v16 = sub_1BC107E08((uint64_t)v8);
          if ((v15 & 1) != (v17 & 1))
          {
            type metadata accessor for HKDrugInteractionSeverityLevel(0);
            result = sub_1BC2B53F0();
            __break(1u);
            return result;
          }
          v11 = v16;
        }
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          v3[(v11 >> 6) + 8] |= 1 << v11;
          v18 = 8 * v11;
          *(_QWORD *)(v3[6] + v18) = v8;
          *(_QWORD *)(v3[7] + v18) = 0;
          v19 = v3[2];
          v20 = __OFADD__(v19, 1);
          v21 = v19 + 1;
          if (v20)
            goto LABEL_23;
          v3[2] = v21;
        }
        v22 = v3[7];
        v23 = *(_QWORD *)(v22 + 8 * v11);
        v20 = __OFADD__(v23, 1);
        v24 = v23 + 1;
        if (v20)
          goto LABEL_22;
        *(_QWORD *)(v22 + 8 * v11) = v24;

        ++v4;
        if (v7 == v2)
          goto LABEL_26;
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_26:
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

id Array<A>.count.getter(unint64_t a1)
{
  uint64_t inited;
  id result;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  BOOL v14;

  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  sub_1BC2B314C();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F91C8, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B9600;
  *(_OWORD *)(inited + 32) = xmmword_1BC2B92D0;
  *(_QWORD *)(inited + 48) = 3;
  if ((sub_1BC2B3170() & 1) != 0)
  {
    result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v4 = result;
    v5 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v5)
    {
      inited = (uint64_t)sub_1BC0FB014((_QWORD *)1, 4, 1, (_QWORD *)inited);
      *(_QWORD *)(inited + 16) = 4;
      *(_QWORD *)(inited + 56) = 4;
    }
  }
  v6 = *(_QWORD *)(inited + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(inited + 8 * v7 + 32);
      v10 = Array<A>.countBySeverityLevel.getter(a1);
      if (*(_QWORD *)(v10 + 16) && (v11 = sub_1BC107E08(v9), (v12 & 1) != 0))
        v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
      else
        v13 = 0;
      swift_bridgeObjectRelease();
      v14 = __OFADD__(v8, v13);
      v8 += v13;
      if (v14)
        __break(1u);
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return (id)v8;
}

id Array<A>.interactionSummaryTitle()(unint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  id result;
  void *v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  v1 = Array<A>.countBySeverityLevel.getter(a1);
  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  sub_1BC2B314C();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F91C8, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B9600;
  *(_OWORD *)(inited + 32) = xmmword_1BC2B92D0;
  *(_QWORD *)(inited + 48) = 3;
  if ((sub_1BC2B3170() & 1) == 0)
    goto LABEL_5;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v5)
    {
      v6 = sub_1BC0FB014((_QWORD *)1, 4, 1, (_QWORD *)inited);
      v6[2] = 4;
      v6[7] = 4;
    }
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = swift_bridgeObjectRetain();
    sub_1BC15C668(v7, v1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v8 = (void *)objc_opt_self();
    v9 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v8, sel_localizedStringByJoiningStrings_, v9);

    v11 = sub_1BC2B4460();
    swift_release();
    return (id)v11;
  }
  __break(1u);
  return result;
}

id Array<A>.interactionSummaryTitleColor()(unint64_t a1)
{
  uint64_t v1;
  void *v2;
  char **v3;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v1 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v2 = (void *)objc_opt_self();
  v3 = &selRef_secondaryLabelColor;
  if (v1)
    v3 = &selRef_labelColor;
  return objc_msgSend(v2, *v3);
}

uint64_t sub_1BC15A44C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1BC2B38E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BC15D968();
  v42 = a2;
  v10 = sub_1BC2B52E8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_1BC0E519C(&qword_1EF3F9928, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC00]);
    result = sub_1BC2B43E8();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BC15A7DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  sub_1BC1092FC();
  v6 = sub_1BC2B52E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1BC2B4D78();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC15AAA8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC15DA94();
  v36 = a2;
  v6 = sub_1BC2B52E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC2B5450();
    sub_1BC2B44D8();
    result = sub_1BC2B548C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC15ADB8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;

  v3 = v2;
  v5 = *v2;
  sub_1BC15DC14();
  result = sub_1BC2B52E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v18 >= v12)
          goto LABEL_31;
        v19 = v33[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_31;
          v19 = v33[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v33[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v19 = v33[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = 8 * v17;
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v21);
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21);
      sub_1BC2B5450();
      sub_1BC2B545C();
      result = sub_1BC2B548C();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = 8 * v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v15) = v22;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v15) = v23;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC15B080(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC15DB10(0, &qword_1EF3FB310, (void (*)(uint64_t))sub_1BC15DB6C);
  v36 = a2;
  v6 = sub_1BC2B52E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC2B5450();
    sub_1BC2B44D8();
    result = sub_1BC2B548C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC15B3A0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;

  v3 = v2;
  v5 = type metadata accessor for Dosage();
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BC15DB10(0, (unint64_t *)&qword_1EF3F9938, v9);
  v44 = a2;
  v10 = sub_1BC2B52E8();
  v11 = v10;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v8 + 32);
  v13 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v2;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_34;
      v25 = v42[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v41)
              goto LABEL_34;
            v25 = v42[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v43 + 72);
    v31 = *(_QWORD *)(v8 + 56) + v30 * v22;
    if ((v44 & 1) != 0)
    {
      sub_1BC109088(v31, (uint64_t)v7);
    }
    else
    {
      sub_1BC13817C(v31, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_1BC2B5450();
    sub_1BC2B44D8();
    result = sub_1BC2B548C();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    result = sub_1BC109088((uint64_t)v7, *(_QWORD *)(v11 + 56) + v30 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BC15B714(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  v48 = sub_1BC2B2024();
  v4 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v2;
  v6 = *v2;
  sub_1BC15DA14();
  v7 = sub_1BC2B52E8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
    v37 = v41;
LABEL_42:
    *v37 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 64);
  v43 = (_QWORD *)(v6 + 64);
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v42 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  v40 = a2;
  v16 = 16;
  if ((a2 & 1) != 0)
    v16 = 32;
  v44 = v6;
  v45 = v16;
  while (1)
  {
    if (v12)
    {
      v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v20 = v19 | (v15 << 6);
      goto LABEL_24;
    }
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v42)
    {
      swift_release();
      v37 = v41;
      v22 = v43;
      if ((v40 & 1) != 0)
      {
LABEL_37:
        v38 = 1 << *(_BYTE *)(v6 + 32);
        if (v38 >= 64)
          bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v38;
        *(_QWORD *)(v6 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v43;
    v23 = v43[v21];
    ++v15;
    if (!v23)
    {
      v15 = v21 + 1;
      if (v21 + 1 >= v42)
        goto LABEL_34;
      v23 = v43[v15];
      if (!v23)
        break;
    }
LABEL_23:
    v12 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v4 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + v45))(v47, *(_QWORD *)(v6 + 48) + v25 * v20, v48);
    v26 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 32 * v20);
    v46 = v26[3];
    v27 = v26[2];
    v28 = v26[1];
    v29 = *v26;
    sub_1BC0E519C(&qword_1EDA0E6B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F0]);
    result = sub_1BC2B43E8();
    v30 = -1 << *(_BYTE *)(v8 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v13 + 8 * (v31 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v13 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v13 + 8 * v32);
      }
      while (v36 == -1);
      v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v8 + 48) + v25 * v17, v47, v48);
    v18 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 32 * v17);
    *v18 = v29;
    v18[1] = v28;
    v18[2] = v27;
    v18[3] = v46;
    ++*(_QWORD *)(v8 + 16);
    v6 = v44;
  }
  v24 = v21 + 2;
  if (v24 >= v42)
  {
LABEL_34:
    swift_release();
    v37 = v41;
    if ((v40 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v43[v24];
  if (v23)
  {
    v15 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v42)
      goto LABEL_34;
    v23 = v43[v15];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

id sub_1BC15BAD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BC1092FC();
  v2 = *v0;
  v3 = sub_1BC2B52DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    if (!v21)
      break;
LABEL_23:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1BC15BC60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BC15DA94();
  v2 = *v0;
  v3 = sub_1BC2B52DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC15BE10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_1BC15DC14();
  v2 = *v0;
  v3 = sub_1BC2B52DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC15BF98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BC15DB10(0, &qword_1EF3FB310, (void (*)(uint64_t))sub_1BC15DB6C);
  v2 = *v0;
  v3 = sub_1BC2B52DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC15C158()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for Dosage();
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC15DB10(0, (unint64_t *)&qword_1EF3F9938, v5);
  v6 = *v0;
  v7 = sub_1BC2B52DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v29 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v30 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(v31 + 72) * v18;
    sub_1BC13817C(*(_QWORD *)(v6 + 56) + v23, (uint64_t)v4);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v22;
    v24[1] = v21;
    sub_1BC109088((uint64_t)v4, *(_QWORD *)(v8 + 56) + v23);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC15C390()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = sub_1BC2B2024();
  v1 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC15DA14();
  v33 = v0;
  v3 = *v0;
  v4 = sub_1BC2B52DC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = (void *)swift_release();
    v31 = v33;
LABEL_28:
    *v31 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  v9 = 0;
  v10 = *(_QWORD *)(v3 + 16);
  v38 = v5;
  v39 = v3;
  *(_QWORD *)(v5 + 16) = v10;
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v34 = v3 + 64;
  v35 = (unint64_t)(v11 + 63) >> 6;
  v15 = v36;
  v14 = v37;
  v16 = v5;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v9 << 6);
      v19 = v39;
      goto LABEL_12;
    }
    v28 = v9 + 1;
    v19 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v35)
      goto LABEL_26;
    v29 = *(_QWORD *)(v34 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v35)
        goto LABEL_26;
      v29 = *(_QWORD *)(v34 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v13 = (v29 - 1) & v29;
    v18 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 32 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + v21);
    v23 = *v22;
    v24 = v22[1];
    v25 = v22[2];
    v26 = v22[3];
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v27 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v21);
    *v27 = v23;
    v27[1] = v24;
    v27[2] = v25;
    v27[3] = v26;
  }
  v30 = v28 + 2;
  if (v30 >= v35)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v33;
    v5 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v34 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v35)
      goto LABEL_26;
    v29 = *(_QWORD *)(v34 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC15C604()
{
  return MEMORY[0x1E0D2CCA8];
}

uint64_t sub_1BC15C610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  result = sub_1BC2B3764();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC15C668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = a1;
    v5 = swift_bridgeObjectRetain();
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v24 = v2;
    v25 = v5;
    while (1)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v9 = *(_QWORD *)(v4 + 8 * v6 + 32);
        v10 = sub_1BC107E08(v9);
        if ((v11 & 1) != 0)
        {
          v12 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v10);
          if (v12)
            break;
        }
      }
LABEL_4:
      if (v2 == ++v6)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v7;
      }
    }
    switch(v9)
    {
      case 1:
      case 2:
      case 3:
      case 4:
        v26 = v7;
        sub_1BC2B44FC();
        swift_bridgeObjectRelease();
        if (qword_1EDA0FEE8 != -1)
          swift_once();
        v13 = (void *)qword_1EDA0FEF8;
        sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1BC2B92D0;
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v14 + 32) = v12;
        v15 = v13;
        swift_bridgeObjectRetain();
        v16 = sub_1BC2B2144();
        v18 = v17;
        if (*(_QWORD *)(v14 + 16))
        {
          v16 = sub_1BC2B443C();
          v20 = v19;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v18 = v20;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();

        v7 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BC0FA054(0, v26[2] + 1, 1, v26);
        v2 = v24;
        v4 = v25;
        v22 = v7[2];
        v21 = v7[3];
        if (v22 >= v21 >> 1)
          v7 = sub_1BC0FA054((_QWORD *)(v21 > 1), v22 + 1, 1, v7);
        v7[2] = v22 + 1;
        v8 = &v7[2 * v22];
        v8[4] = v16;
        v8[5] = v18;
        goto LABEL_4;
      default:
        result = sub_1BC2B52B8();
        __break(1u);
        break;
    }
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BC15C9D8(id *a1, id *__src, id *a3, char *__dst)
{
  id *v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  id *v15;
  void *v16;
  id v17;
  id v18;
  char v20;
  id *v21;
  id *v22;
  id *v23;
  void *v24;
  id v25;
  id v26;
  char v28;
  char *v29;
  uint64_t result;
  char *v31;
  void **v33;
  id *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void **v40;
  id *v41;

  v5 = a3;
  v6 = __src;
  v7 = (char *)__src - (char *)a1;
  v8 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v8 = (char *)__src - (char *)a1;
  v9 = v8 >> 3;
  v10 = (char *)a3 - (char *)__src;
  v11 = (char *)a3 - (char *)__src + 7;
  if ((char *)a3 - (char *)__src >= 0)
    v11 = (char *)a3 - (char *)__src;
  v12 = v11 >> 3;
  v41 = a1;
  v40 = (void **)__dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_54;
    if (__dst != (char *)__src || &__src[v12] <= (id *)__dst)
      memmove(__dst, __src, 8 * v12);
    v31 = __dst;
    v22 = (id *)&__dst[8 * v12];
    v39 = (char *)v22;
    v41 = v6;
    if (a1 >= v6 || v10 < 8)
    {
LABEL_53:
      sub_1BC26E078(&v41, &v40, &v39);
      return 1;
    }
    v23 = v6;
    while (1)
    {
      v34 = v5;
      v24 = *--v23;
      v25 = *(v22 - 1);
      v26 = v24;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v37 == v35 && v38 == v36)
        break;
      v28 = sub_1BC2B53CC();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = (char *)v34;
      v5 = v34 - 1;
      if ((v28 & 1) == 0)
        goto LABEL_46;
      if (v34 != v6 || v5 >= v6)
        *v5 = *v23;
      v41 = v23;
LABEL_51:
      if (v23 > a1)
      {
        v6 = v23;
        if (v22 > (id *)v31)
          continue;
      }
      goto LABEL_53;
    }

    swift_bridgeObjectRelease_n();
    v29 = (char *)v34;
    v5 = v34 - 1;
LABEL_46:
    v39 = (char *)(v22 - 1);
    if (v29 < (char *)v22 || v5 >= v22 || v29 != (char *)v22)
      *v5 = *(v22 - 1);
    v23 = v6;
    --v22;
    goto LABEL_51;
  }
  if (v7 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v9] <= (id *)__dst)
      memmove(__dst, a1, 8 * v9);
    v33 = (void **)&__dst[8 * v9];
    v39 = (char *)v33;
    if (v6 < v5 && v7 >= 8)
    {
      v13 = (void **)__dst;
      v14 = a1;
      while (1)
      {
        v15 = v5;
        v16 = *v13;
        v17 = *v6;
        v18 = v16;
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        if (v37 == v35 && v38 == v36)
          break;
        v20 = sub_1BC2B53CC();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
          goto LABEL_23;
        v21 = v6 + 1;
        v5 = v15;
        if (v14 < v6 || v14 >= v21 || v14 != v6)
          *v14 = *v6;
LABEL_26:
        ++v14;
        if (v13 < v33)
        {
          v6 = v21;
          if (v21 < v5)
            continue;
        }
        v41 = v14;
        goto LABEL_53;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v5 = v15;
      if (v14 != v13)
        *v14 = *v13;
      v40 = ++v13;
      v21 = v6;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  swift_release();
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC15CD94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v15 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v17 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v17 + 8 * v4);
    v7 = v15;
    v16 = v5;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = v6;
      v10 = v8;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v20 == v18 && v21 == v19)
      {

        result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v5 = v16 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v12 = sub_1BC2B53CC();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
        goto LABEL_5;
      if (!v17)
        break;
      v13 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v13;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC15CEE4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  unsigned __int8 v23;
  void *v24;
  id v25;
  id v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  char v41;
  void *v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  id *v92;
  id *v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  id *v102;
  id *v103;
  id *v104;
  char *v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *__dst;
  unsigned __int8 v116;
  uint64_t v117;
  id *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v3 = a1[1];
  swift_retain_n();
  v4 = sub_1BC2B5390();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_154;
    if (v3)
    {
      swift_retain();
      sub_1BC15CD94(0, v3, 1, a1);
    }
    return swift_release_n();
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_162;
  v110 = v4;
  v113 = v3;
  v119 = v1;
  v107 = a1;
  if (v3 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    v126 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_119:
      if (v13 >= 2)
      {
        v96 = *v107;
        v121 = *v107;
        do
        {
          v97 = v13 - 2;
          if (v13 < 2)
            goto LABEL_149;
          if (!v96)
            goto LABEL_161;
          v98 = v9;
          v99 = v9 + 32;
          v100 = *(_QWORD *)&v9[16 * v97 + 32];
          v101 = *(_QWORD *)&v9[16 * v13 + 24];
          v102 = (id *)(v96 + 8 * v100);
          v103 = (id *)(v96 + 8 * *(_QWORD *)&v99[16 * v13 - 16]);
          v104 = (id *)(v96 + 8 * v101);
          swift_retain();
          sub_1BC15C9D8(v102, v103, v104, __dst);
          if (v119)
            goto LABEL_116;
          swift_release();
          if (v101 < v100)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v98 = sub_1BC26E1A0((uint64_t)v98);
          if (v97 >= *((_QWORD *)v98 + 2))
            goto LABEL_151;
          v105 = &v98[16 * v97 + 32];
          *(_QWORD *)v105 = v100;
          *((_QWORD *)v105 + 1) = v101;
          v106 = *((_QWORD *)v98 + 2);
          if (v13 > v106)
            goto LABEL_152;
          v9 = v98;
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v106 - v13));
          *((_QWORD *)v98 + 2) = v106 - 1;
          v13 = v106 - 1;
          v96 = v121;
        }
        while (v106 > 2);
      }
      swift_bridgeObjectRelease();
LABEL_131:
      *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC2B45A4();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    v7 = sub_1BC2B45F8();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    __dst = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v126 = v7;
  }
  v10 = 0;
  v11 = *a1;
  v108 = *a1 + 16;
  v109 = *a1 - 8;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = v113;
  v120 = *a1;
  while (2)
  {
    v14 = v10;
    v15 = v10 + 1;
    v114 = v10;
    if (v10 + 1 >= v12)
      goto LABEL_46;
    v16 = *(void **)(v11 + 8 * v10);
    v17 = *(id *)(v11 + 8 * v15);
    v18 = v16;
    swift_getAtKeyPath();
    swift_getAtKeyPath();
    if (v124 == v122 && v125 == v123)
      v116 = 0;
    else
      v116 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v15 = v14 + 2;
    if (v14 + 2 >= v113)
      goto LABEL_37;
    v20 = v14;
    v21 = v14 + 2;
    v22 = (id *)(v108 + 8 * v20);
    while (1)
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = v24;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v124 == v122 && v125 == v123)
      {

        swift_bridgeObjectRelease_n();
        if ((v116 & 1) != 0)
        {
          v11 = v120;
          v15 = v21;
          v14 = v114;
          goto LABEL_38;
        }
        goto LABEL_26;
      }
      v23 = sub_1BC2B53CC();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v116 ^ v23) & 1) != 0)
        break;
LABEL_26:
      ++v22;
      if (v113 == ++v21)
      {
        v15 = v113;
        goto LABEL_36;
      }
    }
    v15 = v21;
LABEL_36:
    v14 = v114;
LABEL_37:
    v11 = v120;
    if ((v116 & 1) != 0)
    {
LABEL_38:
      if (v15 < v14)
        goto LABEL_155;
      if (v14 < v15)
      {
        v28 = (uint64_t *)(v109 + 8 * v15);
        v29 = v15;
        v30 = v14;
        v31 = (uint64_t *)(v11 + 8 * v14);
        do
        {
          if (v30 != --v29)
          {
            if (!v11)
              goto LABEL_160;
            v32 = *v31;
            *v31 = *v28;
            *v28 = v32;
          }
          ++v30;
          --v28;
          ++v31;
        }
        while (v30 < v29);
      }
    }
LABEL_46:
    if (v15 >= v113)
      goto LABEL_69;
    if (__OFSUB__(v15, v14))
      goto LABEL_153;
    if (v15 - v14 >= v110)
    {
LABEL_69:
      if (v15 < v14)
        goto LABEL_148;
      v112 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1BC26DEB8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v44 = *((_QWORD *)v9 + 2);
      v43 = *((_QWORD *)v9 + 3);
      v13 = v44 + 1;
      v11 = v120;
      if (v44 >= v43 >> 1)
      {
        v95 = sub_1BC26DEB8((char *)(v43 > 1), v44 + 1, 1, v9);
        v11 = v120;
        v9 = v95;
      }
      *((_QWORD *)v9 + 2) = v13;
      v45 = v9 + 32;
      v46 = &v9[16 * v44 + 32];
      *(_QWORD *)v46 = v14;
      *((_QWORD *)v46 + 1) = v15;
      if (!v44)
      {
        v13 = 1;
LABEL_15:
        v10 = v112;
        v12 = v113;
        if (v112 >= v113)
          goto LABEL_119;
        continue;
      }
      while (1)
      {
        v47 = v13 - 1;
        if (v13 >= 4)
        {
          v52 = &v45[16 * v13];
          v53 = *((_QWORD *)v52 - 8);
          v54 = *((_QWORD *)v52 - 7);
          v58 = __OFSUB__(v54, v53);
          v55 = v54 - v53;
          if (v58)
            goto LABEL_137;
          v57 = *((_QWORD *)v52 - 6);
          v56 = *((_QWORD *)v52 - 5);
          v58 = __OFSUB__(v56, v57);
          v50 = v56 - v57;
          v51 = v58;
          if (v58)
            goto LABEL_138;
          v59 = v13 - 2;
          v60 = &v45[16 * v13 - 32];
          v62 = *(_QWORD *)v60;
          v61 = *((_QWORD *)v60 + 1);
          v58 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          if (v58)
            goto LABEL_140;
          v58 = __OFADD__(v50, v63);
          v64 = v50 + v63;
          if (v58)
            goto LABEL_143;
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            v58 = __OFSUB__(v83, v84);
            v85 = v83 - v84;
            if (v58)
              goto LABEL_147;
            v75 = v50 < v85;
            goto LABEL_106;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v76 = *((_QWORD *)v9 + 4);
            v77 = *((_QWORD *)v9 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
            goto LABEL_100;
          }
          v49 = *((_QWORD *)v9 + 4);
          v48 = *((_QWORD *)v9 + 5);
          v58 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          v51 = v58;
        }
        if ((v51 & 1) != 0)
          goto LABEL_139;
        v59 = v13 - 2;
        v65 = &v45[16 * v13 - 32];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v68 = __OFSUB__(v66, v67);
        v69 = v66 - v67;
        v70 = v68;
        if (v68)
          goto LABEL_142;
        v71 = &v45[16 * v47];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v58 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v58)
          goto LABEL_145;
        if (__OFADD__(v69, v74))
          goto LABEL_146;
        if (v69 + v74 >= v50)
        {
          v75 = v50 < v74;
LABEL_106:
          if (v75)
            v47 = v59;
          goto LABEL_108;
        }
LABEL_100:
        if ((v70 & 1) != 0)
          goto LABEL_141;
        v78 = &v45[16 * v47];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v58 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v58)
          goto LABEL_144;
        if (v81 < v69)
          goto LABEL_15;
LABEL_108:
        v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!v11)
          goto LABEL_159;
        v87 = &v45[16 * v86];
        v88 = *(_QWORD *)v87;
        v89 = v47;
        v90 = &v45[16 * v47];
        v91 = *((_QWORD *)v90 + 1);
        v92 = (id *)(v11 + 8 * *(_QWORD *)v87);
        v118 = (id *)(v11 + 8 * *(_QWORD *)v90);
        v93 = (id *)(v11 + 8 * v91);
        swift_retain();
        sub_1BC15C9D8(v92, v118, v93, __dst);
        if (v119)
        {
LABEL_116:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_131;
        }
        swift_release();
        if (v91 < v88)
          goto LABEL_134;
        if (v89 > *((_QWORD *)v9 + 2))
          goto LABEL_135;
        *(_QWORD *)v87 = v88;
        v45 = v9 + 32;
        *(_QWORD *)&v9[16 * v86 + 40] = v91;
        v94 = *((_QWORD *)v9 + 2);
        if (v89 >= v94)
          goto LABEL_136;
        v13 = v94 - 1;
        memmove(v90, v90 + 16, 16 * (v94 - 1 - v89));
        *((_QWORD *)v9 + 2) = v94 - 1;
        v11 = v120;
        if (v94 <= 2)
          goto LABEL_15;
      }
    }
    break;
  }
  if (__OFADD__(v14, v110))
    goto LABEL_156;
  v33 = v113;
  if (v14 + v110 < v113)
    v33 = v14 + v110;
  if (v33 >= v14)
  {
    if (v15 != v33)
    {
      v34 = v109 + 8 * v15;
      v111 = v33;
      do
      {
        v35 = *(void **)(v11 + 8 * v15);
        v36 = v14;
        v117 = v34;
        while (1)
        {
          v37 = *(void **)v34;
          v38 = v35;
          v39 = v37;
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v124 == v122 && v125 == v123)
            break;
          v41 = sub_1BC2B53CC();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v41 & 1) == 0)
            goto LABEL_56;
          v11 = v120;
          if (!v120)
            goto LABEL_158;
          v42 = *(void **)v34;
          v35 = *(void **)(v34 + 8);
          *(_QWORD *)v34 = v35;
          *(_QWORD *)(v34 + 8) = v42;
          v34 -= 8;
          if (v15 == ++v36)
            goto LABEL_57;
        }

        swift_bridgeObjectRelease_n();
LABEL_56:
        v11 = v120;
LABEL_57:
        ++v15;
        v34 = v117 + 8;
        v14 = v114;
      }
      while (v15 != v111);
      v15 = v111;
    }
    goto LABEL_69;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  swift_release_n();
  __break(1u);
LABEL_159:
  swift_release_n();
  __break(1u);
LABEL_160:
  swift_release_n();
  __break(1u);
LABEL_161:
  swift_release_n();
  __break(1u);
LABEL_162:
  swift_release_n();
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC15D86C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  swift_retain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC26F234();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  swift_retain();
  sub_1BC15CEE4(v6);
  swift_release();
  sub_1BC2B5210();
  return swift_release_n();
}

uint64_t sub_1BC15D914(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E7998(0, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC15D968()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FB300)
  {
    sub_1BC2B38E4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0];
    sub_1BC0E7998(255, &qword_1EF3F9D48, type metadata accessor for ScheduleDataSource.DoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC0E519C(&qword_1EF3F9928, v0, MEMORY[0x1E0D2CC00]);
    v1 = sub_1BC2B530C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FB300);
  }
}

void sub_1BC15DA14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0E9F8)
  {
    sub_1BC2B2024();
    sub_1BC0E519C(&qword_1EDA0E6B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F0]);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0E9F8);
  }
}

void sub_1BC15DA94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FB308)
  {
    sub_1BC0E7998(255, &qword_1EF3F91A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FB308);
  }
}

void sub_1BC15DB10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC2B530C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC15DB6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F91B8)
  {
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F91B8);
  }
}

unint64_t sub_1BC15DBC0()
{
  unint64_t result;

  result = qword_1EDA0FED0;
  if (!qword_1EDA0FED0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FED0);
  }
  return result;
}

void sub_1BC15DC14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FB318)
  {
    type metadata accessor for HKDrugInteractionSeverityLevel(255);
    sub_1BC0E519C(&qword_1EF3FB320, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel, (uint64_t)&unk_1BC2B7C40);
    v0 = sub_1BC2B530C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FB318);
  }
}

uint64_t sub_1BC15DC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double MedicationSearchOptionsFieldItem.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1BC2B2438();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B242C();
  v6 = sub_1BC2B23FC();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for MedicationSearchOptionsFieldCell();
  sub_1BC15DDC4();
  v9 = sub_1BC2B2930();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v8;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v11;
  return result;
}

uint64_t type metadata accessor for MedicationSearchOptionsFieldCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC15DDC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8E90;
  if (!qword_1EF3F8E90)
  {
    v1 = type metadata accessor for MedicationSearchOptionsFieldCell();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationSearchOptionsFieldCell, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E90);
  }
  return result;
}

uint64_t MedicationSearchOptionsFieldItem.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC15DE34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC16063C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1BC0F2690(v3);
}

uint64_t sub_1BC15DE98(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC16060C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 16);
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v7);
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t MedicationSearchOptionsFieldItem.onScanTapped.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t MedicationSearchOptionsFieldItem.onScanTapped.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC0F2600(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MedicationSearchOptionsFieldItem.onScanTapped.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC15DF98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, _QWORD *);

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC1605E4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1BC0F2690(v3);
}

uint64_t sub_1BC15DFFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC16058C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 32);
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v7);
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t MedicationSearchOptionsFieldItem.onSearchTapped.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t MedicationSearchOptionsFieldItem.onSearchTapped.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC0F2600(*(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MedicationSearchOptionsFieldItem.onSearchTapped.modify())()
{
  return nullsub_1;
}

uint64_t MedicationSearchOptionsFieldItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicationSearchOptionsFieldItem.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t MedicationSearchOptionsFieldItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationSearchOptionsFieldItem.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC15E1E4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1BC0E1B40((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC15E258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC15E2B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC15E310())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC15E354(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC15E3BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC15E410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC15E46C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC15E4B0()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1BC15E4C4);
}

id sub_1BC15E4C4()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  sub_1BC0E7940();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2BB4D0;
  *(_QWORD *)(v0 + 32) = sub_1BC15E5B4();
  *(_QWORD *)(v0 + 40) = sub_1BC15EE70();
  *(_QWORD *)(v0 + 48) = sub_1BC15EA4C();
  sub_1BC2B45A4();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0F3E98();
  v2 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 0);
  objc_msgSend(v3, sel_setDistribution_, 0);
  return v3;
}

id sub_1BC15E5B4()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___searchButton, (uint64_t (*)(uint64_t))sub_1BC15E5C8);
}

id sub_1BC15E5C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  sub_1BC0E1C64(0, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v1);
  v27 = (char *)&v27 - v2;
  sub_1BC0E1C64(0, &qword_1EF3FB388, (void (*)(uint64_t))MEMORY[0x1E0DC2628]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - v4;
  v6 = sub_1BC2B4DCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B4EC8();
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  sub_1BC2B4EBC();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v14 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B4E98();
  v15 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  sub_1BC2B4E44();
  sub_1BC2B4DE4();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DC3048], v6);
  sub_1BC2B4DD8();
  v16 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 1);
  v17 = (void *)sub_1BC2B4430();
  v18 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v17, v16);

  v19 = v18;
  sub_1BC2B4E80();
  sub_1BC2B3D28();
  v20 = sub_1BC2B3D1C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
  sub_1BC2B4E50();
  v22 = v29;
  v21 = v30;
  v23 = v27;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v27, v12, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
  sub_1BC2B4EEC();
  objc_msgSend(v13, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, v28, sel_onSearch, 64);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v24 = objc_msgSend(v13, sel_heightAnchor);
  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 44.0);

  objc_msgSend(v25, sel_setActive_, 1);
  objc_msgSend(v13, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
  return v13;
}

id sub_1BC15EA20()
{
  return objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
}

id sub_1BC15EA4C()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___scanButton, (uint64_t (*)(uint64_t))sub_1BC15EA60);
}

id sub_1BC15EA60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v27;
  uint64_t v28;

  sub_1BC0E1C64(0, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - v3;
  v5 = sub_1BC2B4DCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B4EC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  sub_1BC2B4EBC();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DC3048], v5);
  sub_1BC2B4DD8();
  type metadata accessor for MedicationSearchOptionsFieldCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = (void *)sub_1BC2B4430();
  v17 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v16);

  sub_1BC2B4E80();
  v18 = sub_1BC2B4E74();
  if (v18)
  {
    v19 = (void *)v18;
    v27 = v15;
    v28 = a1;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v20 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v21 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setAccessibilityLabel_, v21);

    v15 = v27;
    a1 = v28;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
  sub_1BC2B4EEC();
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, a1, sel_onScan, 64);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v22 = objc_msgSend(v13, sel_widthAnchor);
  v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 64.0);

  objc_msgSend(v23, sel_setActive_, 1);
  v24 = objc_msgSend(v13, sel_heightAnchor);
  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 44.0);

  objc_msgSend(v25, sel_setActive_, 1);
  objc_msgSend(v13, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48D8]);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

id sub_1BC15EE70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v5 = objc_msgSend(v4, sel_widthAnchor);
    v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 8.0);

    objc_msgSend(v6, sel_setActive_, 1);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

char *sub_1BC15EF3C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double Width;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  CGRect v29;
  CGRect v30;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier];
  v26 = sub_1BC2B4460();
  v27 = v11;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v12 = v4;
  swift_bridgeObjectRelease();
  *v10 = v26;
  v10[1] = v27;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___stackView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___searchButton] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___scanButton] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace] = 0;

  v28.receiver = v12;
  v28.super_class = (Class)type metadata accessor for MedicationSearchOptionsFieldCell();
  v13 = (char *)objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = (uint64_t *)&v13[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier];
  swift_beginAccess();
  v15 = *v14;
  v16 = v14[1];
  swift_bridgeObjectRetain();
  v17 = v13;
  sub_1BC15F90C(v15, v16);
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  v18 = objc_msgSend(v17, sel_contentView);
  v19 = objc_msgSend(v18, sel_heightAnchor);

  v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, 54.0);
  objc_msgSend(v20, sel_setActive_, 1);

  v21 = objc_msgSend(v17, sel_contentView);
  v22 = sub_1BC15E4B0();
  objc_msgSend(v21, sel_addSubview_, v22);

  v23 = sub_1BC15E4B0();
  objc_msgSend(v17, sel_bounds);
  Width = CGRectGetWidth(v29);
  objc_msgSend(v17, sel_bounds);
  objc_msgSend(v23, sel_setFrame_, 0.0, 0.0, Width, CGRectGetHeight(v30) + -10.0);

  return v17;
}

uint64_t sub_1BC15F2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  void (*v4)();
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[2];
  uint64_t (*v10)(uint64_t);
  void *v11;
  void (*v12)();
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v1, (uint64_t)v14, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v15)
    return sub_1BC0E1CFC((uint64_t)v14, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v3 = (uint64_t)v10;
    v4 = v12;
    v5 = (void *)objc_opt_self();
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v12 = sub_1BC160470;
    v13 = v6;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v10 = sub_1BC1AEAE4;
    v11 = &block_descriptor_8;
    v7 = _Block_copy(v9);
    swift_release();
    objc_msgSend(v5, sel_animateWithDuration_animations_, v7, 0.4);
    _Block_release(v7);
    if (v4)
    {
      v8 = sub_1BC15E5B4();
      ((void (*)(uint64_t, id))v4)(v0, v8);
      swift_bridgeObjectRelease();
      sub_1BC0F2600(v3);
      sub_1BC0F2600((uint64_t)v4);

    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BC0F2600(v3);
      sub_1BC0F2600(0);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BC15F4B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  _BYTE v28[24];

  sub_1BC0E1C64(0, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = &v28[-v7];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v28[-v9];
  v11 = a1 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1BCCEF478](a1 + 16);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_1BC15EA4C();

    objc_msgSend(v14, sel_setAlpha_, 0.0);
  }
  swift_beginAccess();
  v15 = MEMORY[0x1BCCEF478](v11);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = sub_1BC15EE70();

    objc_msgSend(v17, sel_setAlpha_, 0.0);
  }
  swift_beginAccess();
  v18 = MEMORY[0x1BCCEF478](v11);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = sub_1BC15E5B4();

    sub_1BC2B4EE0();
    v21 = sub_1BC2B4EC8();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v10, 1, v21))
    {
      v22 = (void (*)(uint64_t))MEMORY[0x1E0DC3228];
      sub_1BC0E1CB0((uint64_t)v10, (uint64_t)v8, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
      sub_1BC2B4EEC();

      sub_1BC0E1CFC((uint64_t)v10, &qword_1EDA0FE00, v22);
    }
    else
    {
      sub_1BC2B4E98();
      sub_1BC2B4EEC();

    }
  }
  swift_beginAccess();
  v23 = MEMORY[0x1BCCEF478](v11);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = sub_1BC15E5B4();

    sub_1BC2B4EE0();
    v26 = sub_1BC2B4EC8();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v5, 1, v26))
    {
      v27 = (void (*)(uint64_t))MEMORY[0x1E0DC3228];
      sub_1BC0E1CB0((uint64_t)v5, (uint64_t)v8, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
      sub_1BC2B4EEC();

      sub_1BC0E1CFC((uint64_t)v5, &qword_1EDA0FE00, v27);
    }
    else
    {
      sub_1BC2B4E80();
      sub_1BC2B4EEC();

    }
  }
}

uint64_t sub_1BC15F7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v1, (uint64_t)v6, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v7)
    return sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    if (v4)
    {
      v4(v0);
      swift_bridgeObjectRelease();
      v3 = (uint64_t)v4;
    }
    else
    {
      swift_bridgeObjectRelease();
      v3 = 0;
    }
    sub_1BC0F2600(v3);
    sub_1BC0F2600(v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BC15F90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v8 = sub_1BC15E5B4();
    v25 = a1;
    v26 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

    v10 = sub_1BC15E5B4();
    v11 = objc_msgSend(v10, sel_titleLabel);

    if (v11)
    {
      v25 = a1;
      v26 = a2;
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      v12 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12);

    }
    v13 = sub_1BC15E5B4();
    v14 = objc_msgSend(v13, sel_imageView);

    if (v14)
    {
      v25 = a1;
      v26 = a2;
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      v15 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setAccessibilityIdentifier_, v15);

    }
    v16 = sub_1BC15EA4C();
    v25 = a1;
    v26 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v17 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setAccessibilityIdentifier_, v17);

    v18 = sub_1BC15EA4C();
    v19 = objc_msgSend(v18, sel_imageView);

    if (v19)
    {
      v25 = a1;
      v26 = a2;
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      v24 = (id)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setAccessibilityIdentifier_, v24);

    }
  }
  else
  {
    sub_1BC2B39A4();
    v20 = sub_1BC2B39D4();
    v21 = sub_1BC2B48C8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1BC0DC000, v20, v21, "Cannot assign automation IDs as there is no base Identifier.", v22, 2u);
      MEMORY[0x1BCCEF3A0](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id MedicationSearchOptionsFieldCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSearchOptionsFieldCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1BC15FD68())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1BC15FDAC(uint64_t a1, uint64_t a2)
{
  sub_1BC15F90C(a1, a2);
}

uint64_t sub_1BC15FDCC()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC15FE24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC15FE84())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BC15FED0()
{
  unint64_t result;

  result = qword_1EF3FB338;
  if (!qword_1EF3FB338)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationSearchOptionsFieldItem, &type metadata for MedicationSearchOptionsFieldItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FB338);
  }
  return result;
}

uint64_t sub_1BC15FF24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC15FF8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for MedicationSearchOptionsFieldItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
    swift_release();
  if (*(_QWORD *)(a1 + 32))
    swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MedicationSearchOptionsFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2 + 2;
  v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  v8 = a2[4];
  if (v8)
  {
    v9 = a2[5];
    a1[4] = v8;
    a1[5] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MedicationSearchOptionsFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  if (a1[2])
  {
    if (v4)
    {
      v5 = a2[3];
      a1[2] = v4;
      a1[3] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[3];
    a1[2] = v4;
    a1[3] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  v7 = a2[4];
  if (!a1[4])
  {
    if (v7)
    {
      v9 = a2[5];
      a1[4] = v7;
      a1[5] = v9;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_retain();
  swift_release();
LABEL_15:
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for MedicationSearchOptionsFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[2];
  if (a1[2])
  {
    if (v5)
    {
      v6 = a2[3];
      a1[2] = v5;
      a1[3] = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  v8 = a2[4];
  if (!a1[4])
  {
    if (v8)
    {
      v10 = a2[5];
      a1[4] = v8;
      a1[5] = v10;
      goto LABEL_15;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_15;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  v9 = a2[5];
  a1[4] = v8;
  a1[5] = v9;
  swift_release();
LABEL_15:
  v11 = a2[7];
  a1[6] = a2[6];
  a1[7] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchOptionsFieldItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationSearchOptionsFieldItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationSearchOptionsFieldItem()
{
  return &type metadata for MedicationSearchOptionsFieldItem;
}

uint64_t method lookup function for MedicationSearchOptionsFieldCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.baseIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.baseIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.baseIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t sub_1BC16044C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC160470()
{
  uint64_t v0;

  sub_1BC15F4B8(v0);
}

void sub_1BC160478()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier];
  v4 = sub_1BC2B4460();
  v5 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  *v2 = v4;
  v2[1] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___stackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___searchButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___scanButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC16058C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  v5 = a2;
  v6 = a1;
  return v3(&v6, &v5);
}

uint64_t sub_1BC1605C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1605E4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

uint64_t sub_1BC16060C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1BC16063C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1BC16066C()
{
  return swift_deallocClassInstance();
}

id sub_1BC16067C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  _s30HealthMedicationsUIBundleClassCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EDA0FF10 = (uint64_t)result;
  return result;
}

id static NSBundle.healthMedicationsUI.getter()
{
  if (qword_1EDA0FF20 != -1)
    swift_once();
  return (id)qword_1EDA0FF10;
}

uint64_t _s30HealthMedicationsUIBundleClassCMa()
{
  return objc_opt_self();
}

uint64_t sub_1BC160730(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  sub_1BC0E1B40((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC160794@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1607E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC16083C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC160880()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell____lazy_storage___separatorView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    v5 = objc_msgSend((id)objc_opt_self(), sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t type metadata accessor for InteractionSeparatorLineCell()
{
  return objc_opt_self();
}

void sub_1BC160AD8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC160880();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2BA730;
  v5 = sub_1BC160880();
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v0, sel_contentView);
  v8 = objc_msgSend(v7, sel_leadingAnchor);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = sub_1BC160880();
  v11 = objc_msgSend(v10, sel_topAnchor);

  v12 = objc_msgSend(v0, sel_contentView);
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(_QWORD *)(v4 + 40) = v14;
  v15 = sub_1BC160880();
  v16 = objc_msgSend(v15, sel_bottomAnchor);

  v17 = objc_msgSend(v0, sel_contentView);
  v18 = objc_msgSend(v17, sel_bottomAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v4 + 48) = v19;
  v20 = sub_1BC160880();
  v21 = objc_msgSend(v20, sel_trailingAnchor);

  v22 = objc_msgSend(v0, sel_contentView);
  v23 = objc_msgSend(v22, sel_trailingAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v4 + 56) = v24;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v25 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v25);

}

id InteractionSeparatorLineCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSeparatorLineCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1BC160E28())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC160E6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for InteractionSeparatorLineCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSeparatorLineCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of InteractionSeparatorLineCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionSeparatorLineCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t sub_1BC160F24(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_1BC2B50C0();
    v5 = v4;
    v6 = sub_1BC2B5144();
    v8 = MEMORY[0x1BCCEE860](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_1BC1648A8(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_1BC217B0C(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_1BC1648A8(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_1BC2180BC(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC161030()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_interactionType);
  v2 = objc_msgSend(v0, sel_medication);
  v3 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
  v4 = v3;
  if (v1 != (id)1)
  {
    if (v3)
    {
      sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
      v5 = sub_1BC2B2858();
      goto LABEL_6;
    }
LABEL_7:

    return 0;
  }
  if (!v3)
    goto LABEL_7;
  sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
  v5 = sub_1BC2B2864();
LABEL_6:
  v6 = v5;

  return v6;
}

__n128 sub_1BC161134()
{
  __n128 result;

  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EF402690 = (__int128)result;
  unk_1EF4026A0 = result;
  return result;
}

uint64_t sub_1BC161148(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC163AD4();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC1611B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC161208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC163AD4();
  return sub_1BC0F7954(a1);
}

void (*sub_1BC161274(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1612BC;
}

void sub_1BC1612BC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC163AD4();
}

id sub_1BC1612EC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v31;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  v10 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton;
  v11 = qword_1EF3F8148;
  v12 = v4;
  if (v11 != -1)
    swift_once();
  v13 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v14 = sub_1BC2B2144();
  v16 = v15;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v14, v16, 0xD000000000000012, 0x80000001BC2CC3A0);
  v18 = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v10] = v18;
  v19 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton;
  v20 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v21 = sub_1BC2B2144();
  v23 = v22;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v21, v23, 0xD000000000000012, 0x80000001BC2CC3F0);
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v19] = v25;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;

  v31.receiver = v12;
  v31.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  v26 = objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4, 0xE000000000000000);
  sub_1BC1628D4();
  sub_1BC162C44();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC2B92D0;
  v28 = sub_1BC2B3D40();
  v29 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v27 + 32) = v28;
  *(_QWORD *)(v27 + 40) = v29;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v26;
}

id sub_1BC161654(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  objc_super v22;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton;
  v5 = qword_1EF3F8148;
  v6 = v1;
  if (v5 != -1)
    swift_once();
  v7 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v8 = sub_1BC2B2144();
  v10 = v9;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v8, v10, 0xD000000000000012, 0x80000001BC2CC3A0);
  v12 = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v4] = v12;
  v13 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton;
  v14 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v15 = sub_1BC2B2144();
  v17 = v16;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v15, v17, 0xD000000000000012, 0x80000001BC2CC3F0);
  v19 = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v13] = v19;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;

  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  v20 = objc_msgSendSuper2(&v22, sel_initWithCoder_, a1, 0xE000000000000000);

  return v20;
}

uint64_t sub_1BC1618DC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  objc_msgSendSuper2(&v5, sel_awakeFromNib);
  sub_1BC1628D4();
  sub_1BC162C44();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92D0;
  v2 = sub_1BC2B3D40();
  v3 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC161A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
    if ((sub_1BC2B4A78() & 1) == 0)
      sub_1BC162C44();

  }
}

uint64_t sub_1BC161A68()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  id v18;
  objc_super v19;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v19 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = (void *)sub_1BC2B3AE8();
  v12 = (objc_class *)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  v19.receiver = v1;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1BCCEE230]();
    v13 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_1BC1640DC((uint64_t)v10, (uint64_t)v8);
      MEMORY[0x1BCCEE23C](v8);
      v14 = (uint64_t)v10;
      return sub_1BC164138(v14);
    }
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D00();
    sub_1BC2B3B18();
    v17 = v10;
  }
  else
  {
    MEMORY[0x1BCCEE230]();
    v15 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15))
    {
      sub_1BC1640DC((uint64_t)v5, (uint64_t)v8);
      MEMORY[0x1BCCEE23C](v8);
      v14 = (uint64_t)v5;
      return sub_1BC164138(v14);
    }
    v18 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_1BC2B3B18();
    v17 = v5;
  }
  return MEMORY[0x1BCCEE23C](v17);
}

id sub_1BC161D04()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v6 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC2B4C88();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC161DC4()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___dismissLabel, (uint64_t (*)(void))sub_1BC161DD8);
}

id sub_1BC161DD8()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  id result;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  v14 = sub_1BC2B4460();
  v15 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v14, v15);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAdjustsFontSizeToFitWidth_, 1);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v5);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 1, v6);
  LODWORD(v7) = 1148846080;
  objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 0, v7);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v8 = (void *)sub_1BC2B4C64();
  objc_msgSend(v3, sel_setFont_, v8);
  sub_1BC0E1D38(0, &qword_1EF3FB480);
  result = (id)MEMORY[0x1BCCEE4B8](v8);
  if (result)
  {
    v10 = result;
    v11 = objc_msgSend(result, sel_imageWithRenderingMode_, 2);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12B0]), sel_init);
    objc_msgSend(v12, sel_setImage_, v11);
    sub_1BC0E1D38(0, &qword_1EF3FB488);
    v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v12);
    objc_msgSend(v3, sel_setAttributedText_, v13);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC1620E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v14 = sub_1BC2B4460();
    v15 = v7;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v8, sel_setTextColor_, v10);

    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC16230C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v14 = sub_1BC2B4460();
    v15 = v7;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v8, sel_setTextColor_, v10);

    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_setNumberOfLines_, 3);
    objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC162530()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC162608()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___learnMoreLabel, (uint64_t (*)(void))sub_1BC16261C);
}

id sub_1BC16261C()
{
  id v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = qword_1EDA0FEE8;
  v2 = v0;
  if (v1 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v4, 0xE000000000000000);

  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v5 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v7 = (void *)sub_1BC2B4C64();
  objc_msgSend(v5, sel_setFont_, v7);

  v8 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  objc_msgSend(v5, sel_setTextColor_, v8);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);

  return v5;
}

uint64_t sub_1BC1628D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - v3;
  v5 = sub_1BC2B3B48();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v8;
  sub_1BC2B3B24();
  v9 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  sub_1BC2B3B18();
  v37 = v5;
  v38 = v6;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1BCCEE23C](v4);
  v10 = sub_1BC161D04();
  v11 = sub_1BC161DC4();
  v12 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton];
  v13 = *(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton];
  v14 = v12;
  v15 = sub_1BC1620E4();
  v16 = sub_1BC16230C();
  v34 = sub_1BC162530();
  v36 = sub_1BC162608();
  v17 = v10;
  v35 = v17;
  v18 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v18, sel_addSubview_, v17);

  v19 = v11;
  v20 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v20, sel_addSubview_, v19);

  v21 = v13;
  v22 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v22, sel_addSubview_, v21);

  v23 = v14;
  v24 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v24, sel_addSubview_, v23);

  v25 = v15;
  v26 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, v25);

  v27 = v16;
  v28 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v28, sel_addSubview_, v27);

  v29 = v34;
  v30 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v30, sel_addSubview_, v29);

  v31 = v36;
  v32 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v32, sel_addSubview_, v31);

  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v37);
}

void sub_1BC162C44()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  char *v129;
  id v130;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v128 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_activeConstraints;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  sub_1BC0E7940();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2BCEA0;
  v5 = sub_1BC161D04();
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v1, sel_contentView);
  v8 = objc_msgSend(v7, sel_leadingAnchor);

  if (qword_1EF3F80B8 != -1)
    swift_once();
  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *((double *)&xmmword_1EF402690 + 1));

  *(_QWORD *)(v4 + 32) = v9;
  v10 = sub_1BC161D04();
  v11 = objc_msgSend(v10, sel_topAnchor);

  v12 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton;
  v13 = objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton), sel_bottomAnchor);
  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, 12.0);

  *(_QWORD *)(v4 + 40) = v14;
  v15 = sub_1BC161D04();
  v16 = objc_msgSend(v15, sel_topAnchor);

  v129 = (char *)v12;
  v17 = objc_msgSend(*(id *)((char *)v1 + v12), sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 12.0);

  *(_QWORD *)(v4 + 48) = v18;
  v19 = sub_1BC161D04();
  v20 = objc_msgSend(v19, sel_widthAnchor);

  v21 = objc_msgSend(v20, sel_constraintEqualToConstant_, 36.0);
  *(_QWORD *)(v4 + 56) = v21;
  v22 = sub_1BC161D04();
  v23 = objc_msgSend(v22, sel_heightAnchor);

  v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 36.0);
  *(_QWORD *)(v4 + 64) = v24;
  v25 = sub_1BC161DC4();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v1, sel_contentView);
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  if (qword_1EF3F8110 != -1)
    swift_once();
  v29 = objc_msgSend(v26, (SEL)&selRef_estimatedDimension_ + 7, v28, -*(double *)&qword_1EF4028B8);

  *(_QWORD *)(v4 + 72) = v29;
  v30 = sub_1BC161DC4();
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = objc_msgSend(v1, sel_contentView);
  v33 = objc_msgSend(v32, sel_topAnchor);

  v34 = objc_msgSend(v31, (SEL)&selRef_estimatedDimension_ + 7, v33, *(double *)&qword_1EF4026A8);
  *(_QWORD *)(v4 + 80) = v34;
  v35 = objc_msgSend(*(id *)((char *)v1 + v12), sel_leadingAnchor);
  v36 = objc_msgSend(v1, sel_contentView);
  v37 = objc_msgSend(v36, sel_leadingAnchor);

  v38 = objc_msgSend(v35, (SEL)&selRef_estimatedDimension_ + 7, v37, 16.0);
  *(_QWORD *)(v4 + 88) = v38;
  v39 = objc_msgSend(*(id *)((char *)v1 + v12), sel_trailingAnchor);
  v40 = objc_msgSend(v1, sel_contentView);
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = objc_msgSend(v39, sel_constraintLessThanOrEqualToAnchor_constant_, v41, *(double *)&qword_1EF4026A8);
  *(_QWORD *)(v4 + 96) = v42;
  v43 = objc_msgSend(*(id *)((char *)v1 + v12), sel_topAnchor);
  v44 = objc_msgSend(v1, sel_contentView);
  v45 = objc_msgSend(v44, sel_topAnchor);

  v46 = objc_msgSend(v43, sel_constraintEqualToAnchor_constant_, v45, *(double *)&xmmword_1EF402690);
  *(_QWORD *)(v4 + 104) = v46;
  v47 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton;
  v48 = objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton), sel_leadingAnchor);
  v49 = objc_msgSend(v1, sel_contentView);
  v50 = objc_msgSend(v49, sel_leadingAnchor);

  v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_constant_, v50, 16.0);
  *(_QWORD *)(v4 + 112) = v51;
  v52 = objc_msgSend(*(id *)((char *)v1 + v47), sel_trailingAnchor);
  v53 = objc_msgSend(v1, sel_contentView);
  v54 = objc_msgSend(v53, sel_trailingAnchor);

  v55 = objc_msgSend(v52, sel_constraintLessThanOrEqualToAnchor_constant_, v54, *(double *)&qword_1EF4026A8);
  *(_QWORD *)(v4 + 120) = v55;
  v56 = objc_msgSend(*(id *)((char *)v1 + v47), sel_topAnchor);
  v57 = objc_msgSend(v1, sel_contentView);
  v58 = objc_msgSend(v57, sel_topAnchor);

  v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_constant_, v58, *(double *)&xmmword_1EF402690);
  *(_QWORD *)(v4 + 128) = v59;
  v60 = sub_1BC1620E4();
  v61 = objc_msgSend(v60, sel_leadingAnchor);

  v62 = sub_1BC161D04();
  v63 = objc_msgSend(v62, sel_trailingAnchor);

  v64 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v63, *((double *)&xmmword_1EF402690 + 1));
  *(_QWORD *)(v4 + 136) = v64;
  v65 = sub_1BC1620E4();
  v66 = objc_msgSend(v65, sel_trailingAnchor);

  v67 = objc_msgSend(v1, sel_contentView);
  v68 = objc_msgSend(v67, sel_trailingAnchor);

  v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v68, -*(double *)&qword_1EF4026A8);
  *(_QWORD *)(v4 + 144) = v69;
  v70 = sub_1BC1620E4();
  v71 = objc_msgSend(v70, sel_topAnchor);

  v72 = objc_msgSend(*(id *)&v129[(_QWORD)v1], sel_bottomAnchor);
  v73 = objc_msgSend(v71, (SEL)&selRef_estimatedDimension_ + 7, v72, 12.0);

  *(_QWORD *)(v4 + 152) = v73;
  v74 = sub_1BC1620E4();
  v75 = objc_msgSend(v74, sel_topAnchor);

  v76 = objc_msgSend(*(id *)((char *)v1 + v47), sel_bottomAnchor);
  v77 = objc_msgSend(v75, (SEL)&selRef_estimatedDimension_ + 7, v76, 12.0);

  *(_QWORD *)(v4 + 160) = v77;
  v78 = sub_1BC16230C();
  v79 = objc_msgSend(v78, sel_leadingAnchor);

  v80 = sub_1BC1620E4();
  v81 = objc_msgSend(v80, sel_leadingAnchor);

  v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v81);
  *(_QWORD *)(v4 + 168) = v82;
  v83 = sub_1BC16230C();
  v84 = objc_msgSend(v83, sel_trailingAnchor);

  v85 = objc_msgSend(v1, sel_contentView);
  v86 = objc_msgSend(v85, sel_trailingAnchor);

  v87 = objc_msgSend(v84, (SEL)&selRef_estimatedDimension_ + 7, v86, -*(double *)&qword_1EF4026A8);
  *(_QWORD *)(v4 + 176) = v87;
  v88 = sub_1BC16230C();
  v89 = objc_msgSend(v88, sel_topAnchor);

  v90 = sub_1BC1620E4();
  v91 = objc_msgSend(v90, sel_bottomAnchor);

  v92 = objc_msgSend(v89, (SEL)&selRef_estimatedDimension_ + 7, v91, 6.0);
  *(_QWORD *)(v4 + 184) = v92;
  v93 = sub_1BC162530();
  v94 = objc_msgSend(v93, sel_leadingAnchor);

  v95 = sub_1BC16230C();
  v96 = objc_msgSend(v95, sel_leadingAnchor);

  v97 = objc_msgSend(v94, sel_constraintEqualToAnchor_, v96);
  *(_QWORD *)(v4 + 192) = v97;
  v98 = sub_1BC162530();
  v99 = objc_msgSend(v98, sel_trailingAnchor);

  v100 = objc_msgSend(v1, sel_contentView);
  v101 = objc_msgSend(v100, sel_trailingAnchor);

  v102 = objc_msgSend(v99, sel_constraintEqualToAnchor_, v101);
  *(_QWORD *)(v4 + 200) = v102;
  v103 = sub_1BC162530();
  v104 = objc_msgSend(v103, sel_topAnchor);

  v105 = sub_1BC16230C();
  v106 = objc_msgSend(v105, sel_bottomAnchor);

  v107 = objc_msgSend(v104, (SEL)&selRef_estimatedDimension_ + 7, v106, 12.0);
  *(_QWORD *)(v4 + 208) = v107;
  v108 = sub_1BC162608();
  v109 = objc_msgSend(v108, sel_leadingAnchor);

  v110 = sub_1BC16230C();
  v111 = objc_msgSend(v110, sel_leadingAnchor);

  v112 = objc_msgSend(v109, sel_constraintEqualToAnchor_, v111);
  *(_QWORD *)(v4 + 216) = v112;
  v113 = sub_1BC162608();
  v114 = objc_msgSend(v113, sel_trailingAnchor);

  v115 = objc_msgSend(v1, sel_contentView);
  v116 = objc_msgSend(v115, sel_trailingAnchor);

  v117 = objc_msgSend(v114, sel_constraintLessThanOrEqualToAnchor_, v116);
  *(_QWORD *)(v4 + 224) = v117;
  v118 = sub_1BC162608();
  v119 = objc_msgSend(v118, sel_centerYAnchor);

  v120 = sub_1BC162530();
  v121 = objc_msgSend(v120, sel_bottomAnchor);

  v122 = objc_msgSend(v119, sel_constraintEqualToAnchor_constant_, v121, 22.0);
  *(_QWORD *)(v4 + 232) = v122;
  v123 = objc_msgSend(v1, sel_contentView);
  v124 = objc_msgSend(v123, sel_bottomAnchor);

  v125 = sub_1BC162530();
  v126 = objc_msgSend(v125, sel_bottomAnchor);

  v127 = objc_msgSend(v124, sel_constraintEqualToAnchor_constant_, v126, 44.0);
  *(_QWORD *)(v4 + 240) = v127;
  sub_1BC2B45A4();
  *(_QWORD *)((char *)v1 + v128) = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v130 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v130);

}

void sub_1BC163AD4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  unsigned int v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint8_t *v36;
  uint64_t v37;
  _QWORD v38[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v7 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item];
  swift_beginAccess();
  sub_1BC0E5774(v7, (uint64_t)v38);
  if (v38[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v8 = v37;
      v9 = sub_1BC161D04();
      v10 = objc_msgSend(*(id *)(v8 + 16), sel_medication);
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

      sub_1BC2B3308();
      v11 = sub_1BC1620E4();
      v12 = objc_msgSend(*(id *)(v8 + 16), sel_medication);
      v38[0] = v12;
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      sub_1BC2B3764();

      v13 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setText_, v13);

      v14 = sub_1BC16230C();
      sub_1BC161030();
      if (!v15)
      {
        if (qword_1EF3F8148 != -1)
          swift_once();
        v26 = (id)qword_1EF3FE7F0;
        swift_bridgeObjectRetain();
        sub_1BC2B2144();
        swift_bridgeObjectRelease();

      }
      v27 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setText_, v27);

      v28 = sub_1BC16230C();
      v29 = *(id *)(v8 + 16);
      sub_1BC161030();

      swift_bridgeObjectRelease();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
      v30 = (void *)sub_1BC2B4C64();
      objc_msgSend(v28, sel_setFont_, v30);

      v31 = *(void **)(v8 + 16);
      v32 = *(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton];
      objc_msgSend(v32, sel_setHidden_, objc_msgSend(v31, sel_interactionType) == (id)2);

      v33 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton];
      v34 = *(void **)(v8 + 16);
      v35 = v33;
      objc_msgSend(v35, sel_setHidden_, objc_msgSend(v34, sel_interactionType) == (id)1);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v38);
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, sel_showSensitiveLogItems);

    if (v18)
    {
      sub_1BC2B39A4();
      v19 = v1;
      v20 = sub_1BC2B39D4();
      v21 = sub_1BC2B48C8();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_DWORD *)v22 = 136315138;
        v36 = v22 + 4;
        v37 = v23;
        sub_1BC0E5774(v7, (uint64_t)v38);
        sub_1BC0E84E8();
        v24 = sub_1BC2B4490();
        v38[0] = sub_1BC12540C(v24, v25, &v37);
        sub_1BC2B4FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v20, v21, "Incorrect view model for PregnancyLactationInteractionCriticalAlertItem: %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v23, -1, -1);
        MEMORY[0x1BCCEF3A0](v22, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for PregnancyLactationInteractionCriticalAlertCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1640B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC1640D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC161A00(a1, a2, v2);
}

uint64_t sub_1BC1640DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC164138(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC16418C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FB400;
  if (!qword_1EF3FB400)
  {
    v1 = sub_1BC0E1D38(255, &qword_1EF3FB3F8);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FB400);
  }
  return result;
}

void sub_1BC164308(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  void *v15;
  objc_class *v16;
  id v17;
  void *v18;
  unsigned int v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  objc_super v31;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_bridgeObjectRetain();
  v9 = (void *)sub_1BC160F24(v8);
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_7;
  v10 = sub_1BC161DC4();
  v11 = MEMORY[0x1BCCEE41C](v9, v10, 36.0, 36.0);

  if ((v11 & 1) == 0)
  {

LABEL_7:
    sub_1BC0E1D38(0, &qword_1EF3FB3F8);
    sub_1BC16418C();
    v15 = (void *)sub_1BC2B47A8();
    v16 = (objc_class *)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
    v31.receiver = v2;
    v31.super_class = v16;
    objc_msgSendSuper2(&v31, sel_touchesEnded_withEvent_, v15, a2);

    return;
  }
  v12 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v12, (uint64_t)v30);
  if (v30[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = *(void (**)(uint64_t))(v29 + 56);
      v14 = swift_retain();
      v13(v14);

      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v30);
  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_showSensitiveLogItems);

    if (v19)
    {
      sub_1BC2B39A4();
      v20 = v2;
      v21 = sub_1BC2B39D4();
      v22 = sub_1BC2B48C8();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v29 = v28;
        *(_DWORD *)v23 = 136315138;
        v27[1] = v23 + 4;
        sub_1BC0E5774(v12, (uint64_t)v30);
        sub_1BC0E84E8();
        v24 = sub_1BC2B4490();
        v30[0] = sub_1BC12540C(v24, v25, &v29);
        sub_1BC2B4FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v21, v22, "Incorrect view model for PregnancyLactationInteractionCriticalAlertItem: %s", v23, 0xCu);
        v26 = v28;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v26, -1, -1);
        MEMORY[0x1BCCEF3A0](v23, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {

    }
  }
  else
  {
    __break(1u);
  }
}

id PregnancyLactationInteractionCriticalAlertCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1647F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for PregnancyLactationInteractionCriticalAlertCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t sub_1BC1648A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for ColorSelectionViewController()
{
  uint64_t result;

  result = qword_1EF3FB4D8;
  if (!qword_1EF3FB4D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1648F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC164954(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(_QWORD, _QWORD);
  int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t result;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  unint64_t v133;
  void (*v134)(char *, uint64_t);
  void (*v135)(char *, unint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t (*v157)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;

  v161 = a1;
  sub_1BC0FB4F4();
  v141 = v2;
  v142 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v131 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FB528, (void (*)(uint64_t))sub_1BC127C04);
  MEMORY[0x1E0C80A78](v4);
  v160 = (uint64_t)&v127 - v5;
  sub_1BC127C04();
  v154 = v6;
  v159 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v128 = (uint64_t)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v129 = (uint64_t)&v127 - v10;
  MEMORY[0x1E0C80A78](v9);
  v130 = (uint64_t)&v127 - v11;
  v12 = sub_1BC2B3698();
  v156 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v152 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC166544();
  v162 = v14;
  v155 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v150 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1665AC(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v151 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v127 - v19;
  v145 = sub_1BC2B32B4();
  v140 = *(_QWORD **)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v144 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1BC2B3350();
  v153 = *(_QWORD *)(v149 - 8);
  v22 = MEMORY[0x1E0C80A78](v149);
  v132 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v143 = (char *)&v127 - v25;
  MEMORY[0x1E0C80A78](v24);
  v148 = (char *)&v127 - v26;
  sub_1BC10926C();
  v28 = MEMORY[0x1E0C80A78](v27);
  v137 = (uint64_t)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v127 - v31;
  v33 = MEMORY[0x1E0C80A78](v30);
  v139 = (uint64_t)&v127 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v147 = (uint64_t *)((char *)&v127 - v36);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v127 - v37;
  v158 = qword_1EF3FB4A8;
  v39 = sub_1BC2B3608();
  v40 = *(_QWORD *)(v39 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v38, 1, 1, v39);
  sub_1BC13BE80(0, &qword_1EF3FB540, (void (*)(uint64_t))sub_1BC10926C);
  swift_allocObject();
  v41 = v1;
  *(_QWORD *)&v1[v158] = sub_1BC2B3EF0();
  v146 = v41;
  *(_QWORD *)&v41[qword_1EF3FB4C8] = MEMORY[0x1E0DEE9E8];
  v42 = (void (*)(_QWORD, _QWORD))v147;
  sub_1BC0FC574(v161, (uint64_t)v147, (uint64_t (*)(_QWORD))sub_1BC10926C);
  v157 = *(uint64_t (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t))(v40 + 48);
  v43 = v157(v42, 1, v39);
  v158 = v39;
  v138 = v40;
  if (v43 == 1)
  {
    v45 = v148;
    v44 = v149;
    v46 = v153;
    sub_1BC0E8594((uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BC10926C);
    result = sub_1BC2B3338();
    if (!*(_QWORD *)(result + 16))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v45, result + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)), v44);
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = v143;
    sub_1BC2B35FC();
    (*(void (**)(_QWORD, uint64_t))(v40 + 8))(v42, v39);
    v49 = v48;
    v44 = v149;
    (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v148, v49, v149);
  }
  sub_1BC13BE80(0, &qword_1EF3FAA38, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  swift_allocObject();
  v50 = sub_1BC2B3EF0();
  v51 = qword_1EF3FB4A0;
  *(_QWORD *)&v146[qword_1EF3FB4A0] = v50;
  result = sub_1BC2B3284();
  v52 = v144;
  v53 = v145;
  if (!*(_QWORD *)(result + 16))
    goto LABEL_42;
  v136 = v51;
  v54 = v140;
  v55 = (*((unsigned __int8 *)v140 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v140 + 80);
  v56 = (void (*)(char *, unint64_t, uint64_t))v140[2];
  v56(v144, result + v55, v145);
  swift_bridgeObjectRelease();
  v143 = (char *)sub_1BC2B32A8();
  v57 = (void (*)(char *, uint64_t))v54[1];
  v57(v52, v53);
  result = sub_1BC2B3284();
  if (!*(_QWORD *)(result + 16))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v133 = v55;
  v135 = v56;
  v56(v52, result + v55, v53);
  swift_bridgeObjectRelease();
  v140 = (_QWORD *)sub_1BC2B32A8();
  v57(v52, v53);
  v58 = v139;
  sub_1BC0FC574(v161, v139, (uint64_t (*)(_QWORD))sub_1BC10926C);
  v59 = v158;
  v60 = v157((void (*)(_QWORD, _QWORD))v58, 1, v158);
  v134 = v57;
  if (v60 != 1)
  {
    v61 = v132;
    sub_1BC2B35FC();
    v147 = *(uint64_t **)(v138 + 8);
    ((void (*)(uint64_t, uint64_t))v147)(v58, v59);
    v62 = sub_1BC2B3344();
    (*(void (**)(char *, uint64_t))(v153 + 8))(v61, v44);
    v63 = sub_1BC271DF4(v62);
    result = swift_bridgeObjectRelease();
    v64 = 0;
    v148 = (char *)v12;
    v149 = v63;
    v65 = *(_QWORD *)(v63 + 16);
    v66 = v160;
    v68 = (unint64_t *)v151;
    v67 = (uint64_t)v152;
    v69 = v156;
    v153 = v65;
    while (1)
    {
      v70 = v162;
      if (v64 == v65)
      {
        v71 = 1;
        v64 = v65;
      }
      else
      {
        if (v64 >= *(_QWORD *)(v149 + 16))
        {
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        v72 = &v150[*(int *)(v162 + 48)];
        (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v72, v149+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v64, v12);
        v73 = (char *)v68 + *(int *)(v162 + 48);
        *v68 = v64;
        v74 = v72;
        v70 = v162;
        v66 = v160;
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v73, v74, v12);
        v71 = 0;
        ++v64;
      }
      v75 = v155;
      (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v68, v71, 1, v70);
      sub_1BC0F1B94((uint64_t)v68, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC1665AC);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v20, 1, v70) == 1)
      {
        swift_bridgeObjectRelease();
        v53 = v145;
        goto LABEL_36;
      }
      v76 = *(_QWORD *)v20;
      (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v67, &v20[*(int *)(v70 + 48)], v12);
      sub_1BC0FC574(v161, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BC10926C);
      v77 = v158;
      if (v157((void (*)(_QWORD, _QWORD))v32, 1, v158) == 1)
        break;
      v78 = sub_1BC2B35D8();
      ((void (*)(char *, uint64_t))v147)(v32, v77);
      if (*(_QWORD *)(v78 + 16))
      {
        v79 = sub_1BC1080FC(v67);
        v69 = v156;
        if ((v80 & 1) != 0)
        {
          sub_1BC0FC574(*(_QWORD *)(v78 + 56) + *(_QWORD *)(v159 + 72) * v79, v160, (uint64_t (*)(_QWORD))sub_1BC127C04);
          v81 = 0;
        }
        else
        {
          v81 = 1;
        }
      }
      else
      {
        v81 = 1;
        v69 = v156;
      }
      v82 = v159;
      v66 = v160;
      v83 = v154;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56))(v160, v81, 1, v154);
      swift_bridgeObjectRelease();
      v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v66, 1, v83);
      v12 = (uint64_t)v148;
      v68 = (unint64_t *)v151;
      v67 = (uint64_t)v152;
      if (v84 == 1)
      {
LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v12);
        result = sub_1BC0E1CFC(v66, &qword_1EF3FB528, (void (*)(uint64_t))sub_1BC127C04);
        v65 = v153;
      }
      else
      {
        v85 = v130;
        sub_1BC0F1B94(v66, v130, (uint64_t (*)(_QWORD))sub_1BC127C04);
        v86 = v85;
        if (v76)
        {
          v94 = v128;
          sub_1BC0FC574(v86, v128, (uint64_t (*)(_QWORD))sub_1BC127C04);
          v95 = v141;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v94, 1, v141) == 1)
          {
            sub_1BC0E8594(v94, (uint64_t (*)(_QWORD))sub_1BC127C04);
            result = sub_1BC2B3284();
            if (!*(_QWORD *)(result + 16))
              goto LABEL_47;
            v96 = v144;
            v135(v144, result + v133, v145);
            swift_bridgeObjectRelease();
            v97 = (_QWORD *)sub_1BC2B32A8();

            v134(v96, v145);
          }
          else
          {
            v98 = v94;
            v97 = (_QWORD *)sub_1BC2B4334();
            v99 = v98;
            v67 = (uint64_t)v152;
            (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v99, v95);

          }
          v140 = v97;
          sub_1BC0E8594(v130, (uint64_t (*)(_QWORD))sub_1BC127C04);
          result = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v67, v12);
          v66 = v160;
          v65 = v153;
        }
        else
        {
          v87 = v129;
          sub_1BC0FC574(v85, v129, (uint64_t (*)(_QWORD))sub_1BC127C04);
          v88 = v142;
          v89 = v141;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v87, 1, v141) == 1)
          {
            sub_1BC0E8594(v87, (uint64_t (*)(_QWORD))sub_1BC127C04);
            result = sub_1BC2B3284();
            if (!*(_QWORD *)(result + 16))
              goto LABEL_46;
            v91 = v144;
            v90 = v145;
            v135(v144, result + v133, v145);
            swift_bridgeObjectRelease();
            v92 = (char *)sub_1BC2B32A8();

            v134(v91, v90);
          }
          else
          {
            v93 = v88;
            v92 = (char *)sub_1BC2B4334();
            (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v87, v89);

          }
          v143 = v92;
          v67 = (uint64_t)v152;
          sub_1BC0E8594(v130, (uint64_t (*)(_QWORD))sub_1BC127C04);
          result = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v67, v12);
          v66 = v160;
          v65 = v153;
        }
      }
    }
    sub_1BC0E8594((uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BC10926C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56))(v66, 1, 1, v154);
    v69 = v156;
    goto LABEL_11;
  }
  sub_1BC0E8594(v58, (uint64_t (*)(_QWORD))sub_1BC10926C);
LABEL_36:
  v100 = v143;
  v163 = v143;
  sub_1BC1665C0();
  swift_allocObject();
  v101 = v100;
  v102 = sub_1BC2B3EF0();
  v103 = qword_1EF3FB4B8;
  v104 = v146;
  *(_QWORD *)&v146[qword_1EF3FB4B8] = v102;
  v105 = v140;
  v163 = (char *)v140;
  swift_allocObject();
  v106 = v105;
  v107 = sub_1BC2B3EF0();
  v108 = qword_1EF3FB4C0;
  *(_QWORD *)&v104[qword_1EF3FB4C0] = v107;
  v109 = v137;
  sub_1BC0FC574(v161, v137, (uint64_t (*)(_QWORD))sub_1BC10926C);
  v110 = v158;
  v111 = v157((void (*)(_QWORD, _QWORD))v109, 1, v158);
  v112 = v141;
  v113 = v142;
  if (v111 != 1)
  {
    v116 = v131;
    sub_1BC2B35CC();
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v109, v110);
    v115 = sub_1BC2B4334();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v116, v112);
    goto LABEL_40;
  }
  sub_1BC0E8594(v109, (uint64_t (*)(_QWORD))sub_1BC10926C);
  result = sub_1BC2B3290();
  if (*(_QWORD *)(result + 16))
  {
    v114 = v144;
    v135(v144, result + v133, v53);
    swift_bridgeObjectRelease();
    v115 = sub_1BC2B32A8();
    v134(v114, v53);
LABEL_40:
    v163 = (char *)v115;
    swift_allocObject();
    v117 = sub_1BC2B3EF0();
    v118 = v146;
    *(_QWORD *)&v146[qword_1EF3FB4B0] = v117;
    v119 = *(_QWORD *)&v118[v136];
    v120 = *(_QWORD *)&v118[v103];
    v121 = *(_QWORD *)&v118[v108];
    LOBYTE(v163) = 1;
    type metadata accessor for VisualizationModificationDataSource();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v122 = sub_1BC272164(v119, v117, v120, v121, (unsigned __int8 *)&v163);
    v123 = qword_1EF3FB4D0;
    *(_QWORD *)&v118[qword_1EF3FB4D0] = v122;

    sub_1BC2B2DEC();
    sub_1BC0E8710();
    v124 = swift_allocObject();
    *(_OWORD *)(v124 + 16) = xmmword_1BC2B92D0;
    v125 = MEMORY[0x1E0D2B148];
    *(_QWORD *)(v124 + 32) = *(_QWORD *)&v118[v123];
    *(_QWORD *)(v124 + 40) = v125;
    swift_retain();
    sub_1BC2B2E10();
    v126 = (id)sub_1BC2B2FE4();
    sub_1BC1659F8();

    sub_1BC0E8594(v161, (uint64_t (*)(_QWORD))sub_1BC10926C);
    return (uint64_t)v126;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

void sub_1BC1657C0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ColorSelectionViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

    v3 = objc_msgSend(v0, sel_collectionView);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC16589C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC1657C0();

}

void sub_1BC1658D0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  sub_1BC10926C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = qword_1EF3FB4A8;
  v9 = sub_1BC2B3608();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  sub_1BC13BE80(0, &qword_1EF3FB540, (void (*)(uint64_t))sub_1BC10926C);
  swift_allocObject();
  v10 = a3;
  *(_QWORD *)&a1[v8] = sub_1BC2B3EF0();
  *(_QWORD *)&a1[qword_1EF3FB4C8] = MEMORY[0x1E0DEE9E8];

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC1659F8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD v13[4];
  id v14;

  v1 = (void (*)(uint64_t))MEMORY[0x1E0DEF868];
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - v3;
  sub_1BC166634();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(*(_QWORD *)(v0 + qword_1EF3FB4D0) + qword_1EF4011E0);
  swift_beginAccess();
  v13[1] = *v10;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  swift_retain();
  v14 = (id)sub_1BC2B4A0C();
  v11 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_1BC13BE80(0, &qword_1EF3FB540, (void (*)(uint64_t))sub_1BC10926C);
  sub_1BC1666DC();
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0FCC0, v1);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC0E519C(&qword_1EF3FB558, (uint64_t (*)(uint64_t))sub_1BC166634, MEMORY[0x1E0C95CB8]);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

void sub_1BC165C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  sub_1BC10926C();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = sub_1BC2B3608();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = MEMORY[0x1BCCEF478](a2 + 16);
  if (v14)
  {
    v15 = (void *)v14;
    sub_1BC0FC574(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC10926C);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {

      sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC10926C);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      v16 = v15;
      v17 = sub_1BC2B2FF0();

      if (v17)
      {
        sub_1BC2B2E88();
        swift_release();
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v13, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        swift_retain();
        sub_1BC2B3EC0();

        swift_release();
        sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC10926C);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1BC165E54(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  _QWORD v26[5];

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3FAA28, sub_1BC0FBE74);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - v3;
  sub_1BC0FBE74(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v10, 1);

  v11 = (void *)sub_1BC2B25C4();
  v25 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v11);

  if (!v25)
    return;
  type metadata accessor for ColorCell(0);
  v12 = swift_dynamicCastClass();
  if (!v12)
  {

    return;
  }
  v13 = v12 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v13, (uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (!v26[3])
  {
    v22 = v25;
    sub_1BC0E8594((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
    goto LABEL_14;
  }
  sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
  v14 = v25;
  v15 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, v15 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
LABEL_14:

    sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EF3FAA28, sub_1BC0FBE74);
    return;
  }
  sub_1BC0F1B94((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
  type metadata accessor for VisualizationModificationDataSource();
  swift_retain();
  v16 = sub_1BC2B2A5C();
  swift_release();
  v17 = sub_1BC2B25F4();
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v17 < *(_QWORD *)(v16 + 16))
  {
    v18 = v16 + 16 * v17;
    v20 = *(_QWORD *)(v18 + 32);
    v19 = *(_QWORD *)(v18 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v20 == 0xD000000000000011 && v19 == 0x80000001BC2CADA0
      || (sub_1BC2B53CC() & 1) != 0
      || v20 == 0xD000000000000012 && v19 == 0x80000001BC2CADC0
      || (sub_1BC2B53CC() & 1) != 0
      || v20 == 0x756F72676B636162 && v19 == 0xEF726F6C6F43646ELL)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC0FBE74);

        return;
      }
    }
    swift_retain();
    v21 = (void *)sub_1BC2B32A8();
    v26[0] = v21;
    sub_1BC2B3EC0();

    swift_release();
    sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
    return;
  }
  __break(1u);
}

uint64_t sub_1BC1662F8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC165E54(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC1663A8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC1663D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC166404()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

id sub_1BC166480()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ColorSelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1664B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BC16653C()
{
  return type metadata accessor for ColorSelectionViewController();
}

void sub_1BC166544()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FB530)
  {
    sub_1BC2B3698();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FB530);
  }
}

void sub_1BC1665AC(uint64_t a1)
{
  sub_1BC0E1C64(a1, &qword_1EF3FB538, (void (*)(uint64_t))sub_1BC166544);
}

void sub_1BC1665C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FAA30)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDE0);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FAA30);
  }
}

void sub_1BC166634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FB548)
  {
    sub_1BC13BE80(255, &qword_1EF3FB540, (void (*)(uint64_t))sub_1BC10926C);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC1666DC();
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FB548);
  }
}

unint64_t sub_1BC1666DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FB550;
  if (!qword_1EF3FB550)
  {
    sub_1BC13BE80(255, &qword_1EF3FB540, (void (*)(uint64_t))sub_1BC10926C);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FB550);
  }
  return result;
}

uint64_t sub_1BC166734()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC166758(uint64_t a1)
{
  uint64_t v1;

  sub_1BC165C64(a1, v1);
}

id sub_1BC166760()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v14 - v1;
  v3 = sub_1BC2B4E68();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B4EC8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC2B4E8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DC3190], v3);
  sub_1BC2B4DC0();
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  sub_1BC2B4E44();
  _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0();
  sub_1BC2B4E80();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  sub_1BC2B4EEC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1BC166920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v35 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v30 - v4;
  v5 = sub_1BC2B3AB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B3A7C();
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38];
  sub_1BC0E7998(0, &qword_1EDA0FAE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], v2);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v30 - v17;
  v19 = v1
      + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell____lazy_storage___plusAccessory;
  swift_beginAccess();
  sub_1BC118700(v19, (uint64_t)v18, &qword_1EDA0FAE8, v12);
  v20 = sub_1BC2B3AD0();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v35, v18, v20);
  sub_1BC0F2444((uint64_t)v18, &qword_1EDA0FAE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38]);
  v31 = *(id *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_logButton);
  sub_1BC16A32C();
  v23 = (uint64_t (**)())&v8[*(int *)(v22 + 48)];
  v24 = *MEMORY[0x1E0DC1C20];
  v25 = sub_1BC2B3A34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v8, v24, v25);
  *v23 = sub_1BC10E2F8;
  v23[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DC1D18], v5);
  v26 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v34, 1, 1, v26);
  v27 = v31;
  sub_1BC2B3A70();
  v28 = v35;
  sub_1BC2B39F8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v16, v28, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
  swift_beginAccess();
  sub_1BC16A3DC((uint64_t)v16, v19);
  return swift_endAccess();
}

uint64_t sub_1BC166C54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  id v25;
  _BOOL4 v26;
  double v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char **v37;
  id v38;
  void (*v39)(uint64_t *, _QWORD);
  void (*v40)(uint64_t *, _QWORD);
  uint64_t v41;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v43;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v52 - v7;
  v9 = sub_1BC2B3B48();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B3CD4();
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem, v5);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v52 - v16;
  v18 = type metadata accessor for MedicationsRecordDoseItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item];
  swift_beginAccess();
  sub_1BC0FC574(v22, (uint64_t)v60, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (v61)
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v23 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, v23 ^ 1u, 1, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      v24 = sub_1BC16A130((uint64_t)v17, (uint64_t)v21);
      MEMORY[0x1BCCEE284](v24);
      swift_bridgeObjectRetain();
      sub_1BC2B3C98();
      v25 = objc_msgSend(v1, sel_traitCollection);
      v26 = objc_msgSend(v25, sel_userInterfaceStyle) == (id)2;

      v27 = dbl_1BC2BCF70[v26];
      sub_1BC2B3B3C();
      v28 = (void *)objc_opt_self();
      v29 = objc_msgSend(v28, sel_systemCyanColor);
      v30 = objc_msgSend(v29, sel_colorWithAlphaComponent_, v27);

      sub_1BC2B3B18();
      v31 = v57;
      v32 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v8, v11, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v8, 0, 1, v32);
      MEMORY[0x1BCCEE23C](v8);
      sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v33 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B3AD0() - 8) + 80);
      v34 = (v33 + 32) & ~v33;
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BC2B92D0;
      sub_1BC166920(v35 + v34);
      sub_1BC2B4AFC();
      v36 = v21[*(int *)(v18 + 40)];
      v37 = &selRef_labelColor;
      if (!v21[*(int *)(v18 + 40)])
        v37 = &selRef_secondaryLabelColor;
      v38 = objc_msgSend(v28, *v37);
      v39 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
      sub_1BC2B3BB4();
      v39(v60, 0);
      v40 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
      sub_1BC2B3B84();
      v40(v60, 0);
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_logButton], sel_setEnabled_, v36);
      v41 = v54;
      v61 = v54;
      v62 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v60);
      v43 = v53;
      (*(void (**)(uint64_t *, char *, uint64_t))(v53 + 16))(boxed_opaque_existential_1, v14, v41);
      MEMORY[0x1BCCEE224](v60);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v58);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v41);
      return sub_1BC0E8594((uint64_t)v21, type metadata accessor for MedicationsRecordDoseItem);
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v60, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  sub_1BC0F2444((uint64_t)v17, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem);
  sub_1BC2B39A4();
  v45 = v1;
  v46 = sub_1BC2B39D4();
  v47 = sub_1BC2B48C8();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v59 = v49;
    *(_DWORD *)v48 = 136315138;
    sub_1BC0FC574(v22, (uint64_t)v60, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    sub_1BC0E84E8();
    v50 = sub_1BC2B4490();
    v60[0] = sub_1BC12540C(v50, v51, &v59);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v46, v47, "Incorrect view model for MedicationsRecordDoseItem: %s", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v49, -1, -1);
    MEMORY[0x1BCCEF3A0](v48, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v4, v56);
}

uint64_t sub_1BC1672D8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  objc_class *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  char *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[5];
  objc_super v55;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v50 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v50 - v12;
  sub_1BC0E7998(0, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem, v5);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v50 - v15;
  v17 = type metadata accessor for MedicationsRecordDoseItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (void *)sub_1BC2B3AE8();
  v22 = (objc_class *)type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
  v55.receiver = v1;
  v55.super_class = v22;
  objc_msgSendSuper2(&v55, sel__bridgedUpdateConfigurationUsingState_, v21);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_logButton], sel_addTarget_action_forControlEvents_, v1, sel_didTapAccessory, 64);
  v23 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item];
  swift_beginAccess();
  sub_1BC0FC574(v23, (uint64_t)v54, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (!v54[3])
  {
    sub_1BC0E8594((uint64_t)v54, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_8;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v24 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v24 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_8:
    sub_1BC0F2444((uint64_t)v16, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem);
    sub_1BC2B39A4();
    v29 = v1;
    v30 = sub_1BC2B39D4();
    v31 = sub_1BC2B48C8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v53 = v33;
      *(_DWORD *)v32 = 136315138;
      sub_1BC0FC574(v23, (uint64_t)v54, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
      sub_1BC0E84E8();
      v34 = sub_1BC2B4490();
      v54[0] = sub_1BC12540C(v34, v35, &v53);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v30, v31, "Incorrect view model for MedicationsRecordDoseItem: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v33, -1, -1);
      MEMORY[0x1BCCEF3A0](v32, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v4, v52);
  }
  v25 = (uint64_t)v20;
  sub_1BC16A130((uint64_t)v16, (uint64_t)v20);
  if ((v20[*(int *)(v17 + 40)] & 1) != 0)
  {
    if (objc_msgSend(v1, sel_isHighlighted))
    {
      MEMORY[0x1BCCEE230]();
      v26 = sub_1BC2B3B48();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v13, 1, v26))
      {
        v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
        sub_1BC118700((uint64_t)v13, (uint64_t)v11, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
        MEMORY[0x1BCCEE23C](v11);
        sub_1BC0E8594(v25, type metadata accessor for MedicationsRecordDoseItem);
        v28 = (uint64_t)v13;
        return sub_1BC0F2444(v28, &qword_1EDA0FAF0, v27);
      }
      sub_1BC12A328();
      v39 = (void *)objc_opt_self();
      v40 = objc_msgSend(v39, sel_systemCyanColor);
      v41 = objc_msgSend(v40, sel_colorWithAlphaComponent_, 0.2);

      v42 = objc_msgSend(v39, sel_systemCyanColor);
      v43 = objc_msgSend(v42, sel_colorWithAlphaComponent_, 0.3);

      sub_1BC2B4CF4();
      sub_1BC2B3B18();
      v44 = v13;
    }
    else
    {
      v37 = (uint64_t)v50;
      MEMORY[0x1BCCEE230]();
      v38 = sub_1BC2B3B48();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
        sub_1BC118700(v37, (uint64_t)v11, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
        MEMORY[0x1BCCEE23C](v11);
        sub_1BC0E8594(v25, type metadata accessor for MedicationsRecordDoseItem);
        v28 = v37;
        return sub_1BC0F2444(v28, &qword_1EDA0FAF0, v27);
      }
      sub_1BC12A328();
      v45 = (void *)objc_opt_self();
      v46 = objc_msgSend(v45, sel_systemCyanColor);
      v47 = objc_msgSend(v46, sel_colorWithAlphaComponent_, 0.1);

      v48 = objc_msgSend(v45, sel_systemCyanColor);
      v49 = objc_msgSend(v48, sel_colorWithAlphaComponent_, 0.2);

      sub_1BC2B4CF4();
      sub_1BC2B3B18();
      v44 = (char *)v37;
    }
    MEMORY[0x1BCCEE23C](v44);
  }
  return sub_1BC0E8594(v25, type metadata accessor for MedicationsRecordDoseItem);
}

uint64_t sub_1BC167A5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[16] = v0;
  v2 = sub_1BC2B39E0();
  v1[17] = v2;
  v1[18] = *(_QWORD *)(v2 - 8);
  v1[19] = swift_task_alloc();
  sub_1BC0E7998(0, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v1[20] = swift_task_alloc();
  v3 = type metadata accessor for MedicationsRecordDoseItem(0);
  v1[21] = v3;
  v1[22] = *(_QWORD *)(v3 - 8);
  v1[23] = swift_task_alloc();
  sub_1BC2B4658();
  v1[24] = sub_1BC2B464C();
  v1[25] = sub_1BC2B461C();
  v1[26] = v4;
  return swift_task_switch();
}

uint64_t sub_1BC167B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  void *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v1, v0 + 16, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v5 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v4, v5 ^ 1u, 1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) != 1)
    {
      v6 = *(_QWORD *)(v0 + 184);
      v7 = *(_QWORD *)(v0 + 168);
      sub_1BC16A130(*(_QWORD *)(v0 + 160), v6);
      *(_QWORD *)(v0 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C490]), sel_initWithHealthStore_, *(_QWORD *)(v6 + *(int *)(v7 + 28)));
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v8;
      *v8 = v0;
      v8[1] = sub_1BC167EC0;
      return sub_1BC2B4B20();
    }
  }
  else
  {
    sub_1BC0E8594(v0 + 16, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v4, 1, 1, v2);
  }
  v10 = *(_QWORD *)(v0 + 160);
  v11 = *(void **)(v0 + 128);
  swift_release();
  sub_1BC0F2444(v10, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem);
  sub_1BC2B39A4();
  v12 = v11;
  v13 = sub_1BC2B39D4();
  v14 = sub_1BC2B48C8();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 152);
  v18 = *(void **)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 136);
  if (v15)
  {
    v25 = *(_QWORD *)(v0 + 152);
    v20 = (uint8_t *)swift_slowAlloc();
    v24 = v17;
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v20 = 136315138;
    sub_1BC0FC574(v1, v0 + 56, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    sub_1BC0E84E8();
    v22 = sub_1BC2B4490();
    *(_QWORD *)(v0 + 120) = sub_1BC12540C(v22, v23, &v26);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v13, v14, "Incorrect view model for MedicationsRecordDoseItem: %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v21, -1, -1);
    MEMORY[0x1BCCEF3A0](v20, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v19);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1BC167EC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC167F28()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release();
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_16:

    v5 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    sub_1BC0E8594(*(_QWORD *)(v0 + 184), type metadata accessor for MedicationsRecordDoseItem);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_16;
LABEL_3:
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC125B54(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v18;
    v6 = v1 & 0xC000000000000001;
    v17 = *(_QWORD *)(v0 + 232) + 32;
    do
    {
      if (v6)
        v7 = (id)MEMORY[0x1BCCEE950](v4, *(_QWORD *)(v0 + 232));
      else
        v7 = *(id *)(v17 + 8 * v4);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_medicationIdentifier);
      if (v9)
      {
        v10 = v9;
        v11 = sub_1BC2B4460();
        v13 = v12;

      }
      else
      {

        v11 = 0;
        v13 = 0xE000000000000000;
      }
      v15 = *(_QWORD *)(v18 + 16);
      v14 = *(_QWORD *)(v18 + 24);
      if (v15 >= v14 >> 1)
        sub_1BC125B54(v14 > 1, v15 + 1, 1);
      ++v4;
      *(_QWORD *)(v18 + 16) = v15 + 1;
      v16 = v18 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
    }
    while (v2 != v4);

    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC168110()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 184);
  swift_release();

  sub_1BC0E8594(v2, type metadata accessor for MedicationsRecordDoseItem);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC168180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v6 = sub_1BC2B39E0();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5[12] = swift_task_alloc();
  v7 = sub_1BC2B23F0();
  v5[13] = v7;
  v5[14] = *(_QWORD *)(v7 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = sub_1BC2B4658();
  v5[19] = sub_1BC2B464C();
  v8 = (_QWORD *)swift_task_alloc();
  v5[20] = v8;
  *v8 = v5;
  v8[1] = sub_1BC168294;
  return sub_1BC167A5C();
}

uint64_t sub_1BC168294(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc();
  sub_1BC2B461C();
  return swift_task_switch();
}

uint64_t sub_1BC168324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  _QWORD *v56;
  void *v57;
  id v58;
  _QWORD *v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_1BC168D44(v4);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v66(v1, v5, v2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  v7 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 96);
  if (v6 == 1)
  {
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v61(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
    sub_1BC0F2444(v10, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v9 + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v61(v7, v10, v8);
  }
  v11 = *(_QWORD *)(v0 + 40);
  v68 = MEMORY[0x1E0DEE9D8];
  v69 = MEMORY[0x1E0DEE9D8];
  if (v11 >> 62)
  {
LABEL_56:
    swift_bridgeObjectRetain();
    v12 = sub_1BC2B52D0();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v13 = *(_QWORD *)(v0 + 168);
  if (v12)
  {
    v14 = 0;
    v64 = *(_QWORD **)(v0 + 168);
    v65 = v11 & 0xC000000000000001;
    v67 = *(_QWORD *)(v13 + 16);
    v62 = *(_QWORD *)(v0 + 40) + 32;
    v63 = v11 & 0xFFFFFFFFFFFFFF8;
    v60 = (_QWORD *)(v13 + 72);
    while (1)
    {
      if (v65)
      {
        v16 = (id)MEMORY[0x1BCCEE950](v14, *(_QWORD *)(v0 + 40));
      }
      else
      {
        if (v14 >= *(_QWORD *)(v63 + 16))
          goto LABEL_54;
        v16 = *(id *)(v62 + 8 * v14);
      }
      v11 = (unint64_t)v16;
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      v18 = *(char **)(v0 + 120);
      v66((uint64_t)v18, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
      type metadata accessor for MedicationsDoseLogViewModel(0);
      swift_allocObject();
      v11 = (unint64_t)(id)v11;
      MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)((void *)v11, 0, 0, v18, v14, 1.0);
      v19 = objc_msgSend((id)v11, sel_semanticIdentifier);
      v20 = objc_msgSend(v19, sel_stringValue);

      v21 = sub_1BC2B4460();
      v23 = v22;

      if (v67)
      {
        v24 = v64[4] == v21 && v64[5] == v23;
        if (v24 || (sub_1BC2B53CC() & 1) != 0)
        {
LABEL_8:
          swift_bridgeObjectRelease();
          v15 = swift_retain();
          MEMORY[0x1BCCEDCF0](v15);
          if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          goto LABEL_10;
        }
        if (v67 != 1)
        {
          if (v64[6] == v21 && v64[7] == v23 || (sub_1BC2B53CC() & 1) != 0)
            goto LABEL_8;
          if (v67 != 2)
          {
            v26 = v60;
            v27 = 2;
            do
            {
              v28 = v27 + 1;
              if (__OFADD__(v27, 1))
                goto LABEL_55;
              v29 = *(v26 - 1) == v21 && *v26 == v23;
              if (v29 || (sub_1BC2B53CC() & 1) != 0)
                goto LABEL_8;
              ++v27;
              v26 += 2;
            }
            while (v28 != v67);
          }
        }
      }
      swift_bridgeObjectRelease();
      v25 = swift_retain();
      MEMORY[0x1BCCEDCF0](v25);
      if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
LABEL_10:
      sub_1BC2B4604();
      sub_1BC2B45A4();

      swift_release();
      v14 = v17;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v30 = v68;
        if (v68 >> 62)
          goto LABEL_46;
LABEL_40:
        v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_41;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = MEMORY[0x1E0DEE9D8];
  if (!(MEMORY[0x1E0DEE9D8] >> 62))
    goto LABEL_40;
LABEL_46:
  swift_bridgeObjectRetain();
  v31 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
LABEL_41:
  if (v31)
  {
    v66(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 104));
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v32 = *(_QWORD *)(v0 + 120);
    v33 = *(_QWORD *)(v0 + 104);
    v34 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v35 = sub_1BC2B2144();
    v37 = v36;

    swift_bridgeObjectRelease();
    type metadata accessor for MedicationDoseLogListViewModel(0);
    v38 = swift_allocObject();
    v61(v38 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v32, v33);
    v39 = (uint64_t *)(v38 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
    *v39 = v35;
    v39[1] = v37;
    *(_QWORD *)(v38 + 16) = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (v69 >> 62)
  {
    swift_bridgeObjectRetain();
    v40 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v40)
      goto LABEL_50;
LABEL_58:
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  v40 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v40)
    goto LABEL_58;
LABEL_50:
  v66(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 104));
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v41 = *(_QWORD *)(v0 + 120);
  v42 = *(_QWORD *)(v0 + 104);
  v43 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v44 = sub_1BC2B2144();
  v46 = v45;

  swift_bridgeObjectRelease();
  type metadata accessor for MedicationDoseLogListViewModel(0);
  v40 = swift_allocObject();
  v61(v40 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v41, v42);
  v47 = (uint64_t *)(v40 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *v47 = v44;
  v47[1] = v46;
  *(_QWORD *)(v40 + 16) = v69;
LABEL_59:
  v48 = *(_QWORD *)(v0 + 136);
  v49 = *(_QWORD *)(v0 + 104);
  v50 = *(_QWORD *)(v0 + 112);
  v52 = *(void **)(v0 + 56);
  v51 = *(_QWORD *)(v0 + 64);
  v53 = *(void **)(v0 + 32);
  v54 = objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  swift_retain();
  v55 = v52;
  v56 = (_QWORD *)swift_retain();
  v57 = (void *)MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v56, v40, v55, 0, v51, 0, 2, 0);
  v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v57);
  objc_msgSend(v58, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v58, sel_setModalInPresentation_, 1);
  objc_msgSend(v53, sel_presentViewController_animated_completion_, v58, 1, 0);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC168B14()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 176);
  swift_release();
  sub_1BC2B39A4();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48C8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 176);
    v7 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 88);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v20 = v9;
    *(_QWORD *)(v0 + 16) = v6;
    v10 = v6;
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    v11 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 24) = sub_1BC12540C(v11, v12, &v20);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v4, v5, "Could not show logging view error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v9, -1, -1);
    MEMORY[0x1BCCEF3A0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v18);
  }
  else
  {
    v13 = *(void **)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC168D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  _QWORD v27[3];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v36 = a1;
  v1 = sub_1BC2B23F0();
  v31 = *(_QWORD *)(v1 - 8);
  v32 = (void (*)(char *, uint64_t))v1;
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC2B2594();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B20FC();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)v27 - v9;
  sub_1BC2B2564();
  sub_1BC0E7998(0, &qword_1EDA0EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27[2] = v10;
  v11 = sub_1BC2B257C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v27[1] = v14 | 7;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC2BC350;
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104);
  v17(v16 + v15, *MEMORY[0x1E0CB1140], v11);
  v17(v16 + v15 + v13, *MEMORY[0x1E0CB1178], v11);
  v17(v16 + v15 + 2 * v13, *MEMORY[0x1E0CB1188], v11);
  v17(v16 + v15 + 3 * v13, *MEMORY[0x1E0CB10E8], v11);
  sub_1BC14A174(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v18 = v28;
  sub_1BC2B23B4();
  sub_1BC2B24D4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD))(v31 + 8))(v18, v32);
  v19 = v30;
  v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v5, v30);
  sub_1BC2B2564();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC2B9600;
  v17(v20 + v15, *MEMORY[0x1E0CB1158], v11);
  v17(v20 + v15 + v13, *MEMORY[0x1E0CB1160], v11);
  v17(v20 + v15 + 2 * v13, *MEMORY[0x1E0CB1130], v11);
  sub_1BC14A174(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v21 = v33;
  sub_1BC2B24D4();
  swift_bridgeObjectRelease();
  v22 = v32;
  v32(v5, v19);
  v23 = v37;
  sub_1BC2B2084();
  sub_1BC2B2090();
  sub_1BC2B20B4();
  sub_1BC2B20C0();
  sub_1BC2B20CC();
  sub_1BC2B20D8();
  sub_1BC2B2048();
  sub_1BC2B2054();
  sub_1BC2B2564();
  sub_1BC2B2534();
  v22(v5, v19);
  v24 = v35;
  v25 = *(void (**)(char *, uint64_t))(v34 + 8);
  v25(v21, v35);
  return ((uint64_t (*)(char *, uint64_t))v25)(v23, v24);
}

uint64_t sub_1BC16912C()
{
  void *v0;
  void *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t i;
  id v32;
  void *v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  void (**v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (**v68)(uint64_t);
  id v69;
  uint64_t ObjectType;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v72 = (char *)&v69 - v4;
  v5 = sub_1BC2B39E0();
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v69 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v69 - v12;
  sub_1BC0E7998(0, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem, v2);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v69 - v15;
  v17 = (int *)type metadata accessor for MedicationsRecordDoseItem(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x1E0C80A78](v17);
  v71 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v69 - v21;
  v75 = v1;
  v23 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v23, (uint64_t)v77, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (!v77[3])
  {
    sub_1BC0E8594((uint64_t)v77, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_20;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v24 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v16, v24 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_20:
    sub_1BC0F2444((uint64_t)v16, &qword_1EDA0F838, type metadata accessor for MedicationsRecordDoseItem);
    sub_1BC2B39A4();
    v34 = v75;
    v35 = sub_1BC2B39D4();
    v36 = sub_1BC2B48C8();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v76 = v38;
      *(_DWORD *)v37 = 136315138;
      sub_1BC0FC574(v23, (uint64_t)v77, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
      sub_1BC0E84E8();
      v39 = sub_1BC2B4490();
      v77[0] = sub_1BC12540C(v39, v40, &v76);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v35, v36, "Incorrect view model for MedicationsRecordDoseItem: %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v38, -1, -1);
      MEMORY[0x1BCCEF3A0](v37, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v8, v74);
  }
  sub_1BC16A130((uint64_t)v16, (uint64_t)v22);
  if ((v22[v17[10]] & 1) == 0)
  {
LABEL_38:
    v55 = (uint64_t)v22;
    return sub_1BC0E8594(v55, type metadata accessor for MedicationsRecordDoseItem);
  }
  v25 = objc_msgSend(v75, sel_viewController);
  if (!v25)
  {
    sub_1BC2B39C8();
    v41 = sub_1BC2B39D4();
    v42 = sub_1BC2B48C8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1BC0DC000, v41, v42, "Unable to show logging view controller because MedicationsRecordDoseCollectionViewCell vc cannot be resolved.", v43, 2u);
      MEMORY[0x1BCCEF3A0](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v73 + 8))(v11, v74);
    goto LABEL_38;
  }
  v26 = v25;
  if (!*(_QWORD *)&v22[v17[8]])
  {
    v44 = v22;
    sub_1BC2B39C8();
    v45 = sub_1BC2B39D4();
    v46 = sub_1BC2B48E0();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v69 = v26;
      v48 = (uint8_t *)v47;
      v49 = swift_slowAlloc();
      v77[0] = v49;
      *(_DWORD *)v48 = 136315138;
      v50 = sub_1BC2B54F8();
      v76 = sub_1BC12540C(v50, v51, v77);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v45, v46, "[%s] Could not present MedicationsLogViewController because MedicationsRecordDoseItem did not have a specified medication or a list manager.", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v49, -1, -1);
      v52 = v48;
      v26 = v69;
      MEMORY[0x1BCCEF3A0](v52, -1, -1);
    }

    v53 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v13, v74);
    v54 = (void (**)(uint64_t))&v44[v17[11]];
    if (*v54)
      (*v54)(v53);

    v55 = (uint64_t)v44;
    return sub_1BC0E8594(v55, type metadata accessor for MedicationsRecordDoseItem);
  }
  v69 = v25;
  v74 = swift_retain();
  v27 = sub_1BC2B3938();
  v28 = v27;
  v77[0] = MEMORY[0x1E0DEE9D8];
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v29 = result;
    if (result)
      goto LABEL_8;
LABEL_34:
    swift_bridgeObjectRelease();
    v73 = MEMORY[0x1E0DEE9D8];
LABEL_35:
    swift_bridgeObjectRelease();
    v56 = sub_1BC2B467C();
    v57 = (uint64_t)v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v72, 1, 1, v56);
    v58 = v71;
    sub_1BC0FC574((uint64_t)v22, v71, type metadata accessor for MedicationsRecordDoseItem);
    sub_1BC2B4658();
    v59 = v75;
    v60 = v69;
    v61 = sub_1BC2B464C();
    v62 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v63 = v22;
    v64 = (_QWORD *)swift_allocObject();
    v65 = MEMORY[0x1E0DF06E8];
    v64[2] = v61;
    v64[3] = v65;
    v64[4] = v59;
    v64[5] = v60;
    v64[6] = v73;
    sub_1BC16A130(v58, (uint64_t)v64 + v62);
    v66 = (uint64_t)v64;
    v22 = v63;
    sub_1BC1393A8(v57, (uint64_t)&unk_1EF3FB580, v66);
    swift_release();
    v67 = swift_release();
    v68 = (void (**)(uint64_t))&v63[v17[11]];
    if (*v68)
      (*v68)(v67);

    goto LABEL_38;
  }
  v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v29)
    goto LABEL_34;
LABEL_8:
  ObjectType = (uint64_t)v22;
  if (v29 >= 1)
  {
    for (i = 0; i != v29; ++i)
    {
      if ((v28 & 0xC000000000000001) != 0)
        v32 = (id)MEMORY[0x1BCCEE950](i, v28);
      else
        v32 = *(id *)(v28 + 8 * i + 32);
      v33 = v32;
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v77[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v73 = v77[0];
    v22 = (char *)ObjectType;
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC169994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_1BC2B4658();
  v7[6] = sub_1BC2B464C();
  v7[7] = sub_1BC2B461C();
  v7[8] = v8;
  return swift_task_switch();
}

uint64_t sub_1BC169A04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = type metadata accessor for MedicationsRecordDoseItem(0);
  v3 = v1 + *(int *)(v2 + 36);
  v4 = *(_QWORD *)(v1 + *(int *)(v2 + 28));
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1BC169A84;
  return sub_1BC168180(v0[3], v0[4], v3, v4, 2);
}

uint64_t sub_1BC169A84()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC169AD0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BC169CD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC169D6C()
{
  return type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
}

uint64_t type metadata accessor for MedicationsRecordDoseCollectionViewCell(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0F968);
}

void sub_1BC169D88()
{
  unint64_t v0;

  sub_1BC0E7998(319, &qword_1EDA0FAE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC169E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC169E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC166C54();
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t (*sub_1BC169EF0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC169F38;
}

uint64_t sub_1BC169F38(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC166C54();
  return result;
}

uint64_t sub_1BC169F68()
{
  return sub_1BC16912C();
}

uint64_t type metadata accessor for MedicationsRecordDoseItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0F828);
}

uint64_t sub_1BC169FA0()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC16A000()
{
  sub_1BC2B44D8();
  return sub_1BC2B44D8();
}

uint64_t sub_1BC16A048()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC16A0A4()
{
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x6D65744965736F44;
}

uint64_t sub_1BC16A0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(int *)(a3 + 24);
  if (*(_QWORD *)(a1 + v3) == *(_QWORD *)(a2 + v3) && *(_QWORD *)(a1 + v3 + 8) == *(_QWORD *)(a2 + v3 + 8))
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t sub_1BC16A130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsRecordDoseItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC16A174()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)type metadata accessor for MedicationsRecordDoseItem(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 56) & ~v2);
  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v5 = v3 + v1[9];
  v6 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(v3 + v1[11]))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC16A284(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MedicationsRecordDoseItem(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BC0FEB64;
  return sub_1BC169994(a1, v5, v6, v7, v8, v9, v10);
}

void sub_1BC16A32C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDA0FAD0)
  {
    sub_1BC2B3A34();
    sub_1BC16A39C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDA0FAD0);
  }
}

unint64_t sub_1BC16A39C()
{
  unint64_t result;

  result = qword_1EDA0FED8;
  if (!qword_1EDA0FED8)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EDA0FED8);
  }
  return result;
}

uint64_t sub_1BC16A3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, &qword_1EDA0FAE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1BC16A438(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = *(void **)((char *)a2 + v16);
    *(_QWORD *)((char *)a1 + v16) = v18;
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    v19 = a3[9];
    v30 = (char *)a1 + v19;
    v20 = (char *)a2 + v19;
    v21 = sub_1BC2B23F0();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v18;
    swift_retain();
    v22(v30, v20, v21);
    v24 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    if (*v26)
    {
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
  }
  return a1;
}

uint64_t sub_1BC16A590(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v5 = a1 + a2[9];
  v6 = sub_1BC2B23F0();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[11]))
    return swift_release();
  return result;
}

uint64_t sub_1BC16A654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v18 = a3[9];
  v28 = a1 + v18;
  v19 = a2 + v18;
  v20 = sub_1BC2B23F0();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v17;
  swift_retain();
  v21(v28, v19, v20);
  v23 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  if (*v25)
  {
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  return a1;
}

uint64_t sub_1BC16A780(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = *(void **)(a2 + v13);
  v15 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  v16 = v14;

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v21 = a3[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *(_QWORD *)(a1 + v21);
  v25 = *v23;
  if (!v24)
  {
    if (v25)
    {
      v27 = v23[1];
      *v22 = v25;
      v22[1] = v27;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    return a1;
  }
  if (!v25)
  {
    swift_release();
    goto LABEL_7;
  }
  v26 = v23[1];
  *v22 = v25;
  v22[1] = v26;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BC16A8F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  return a1;
}

uint64_t sub_1BC16A9D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  if (!*(_QWORD *)(a1 + v23))
  {
    if (v26)
    {
      v28 = v25[1];
      *v24 = v26;
      v24[1] = v28;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    return a1;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_7;
  }
  v27 = v25[1];
  *v24 = v26;
  v24[1] = v27;
  swift_release();
  return a1;
}

uint64_t sub_1BC16AB10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC16AB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BC2B23F0();
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1BC16ABC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC16ABD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1BC2B23F0();
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1BC16AC7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = sub_1BC2B23F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1BC16AD3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0F820;
  if (!qword_1EDA0F820)
  {
    v1 = type metadata accessor for MedicationsRecordDoseItem(255);
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BD100, v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0F820);
  }
  return result;
}

uint64_t MedicationOptionsDataSource.currentValuePublisher.getter()
{
  sub_1BC16BBF8();
  return swift_retain();
}

uint64_t MedicationOptionsDataSource.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E8644(v1 + qword_1EF4026C0, a1);
}

_QWORD *MedicationOptionsDataSource.__allocating_init(item:currentValuePublisher:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  swift_allocObject();
  v4 = sub_1BC16BC08(a1, a2);
  swift_release();
  return v4;
}

_QWORD *MedicationOptionsDataSource.init(item:currentValuePublisher:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2 = sub_1BC16BC08(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1BC16AE34()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC16AE40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v19 = *v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - v2;
  v18 = *(_QWORD *)(v19 + class metadata base offset for MedicationOptionsDataSource);
  sub_1BC2B4FA0();
  v4 = sub_1BC2B3EE4();
  v5 = sub_1BC16C140();
  v6 = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v4);
  v7 = sub_1BC0E519C((unint64_t *)&qword_1EDA0FCC8, (uint64_t (*)(uint64_t))sub_1BC16C140, MEMORY[0x1E0DEF7F8]);
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v24 = v7;
  v8 = sub_1BC2B3E60();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - v10;
  v21 = *(uint64_t *)((char *)v0 + qword_1EF3FB588);
  swift_retain();
  v20 = (id)sub_1BC2B4A0C();
  v12 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v3, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = (_QWORD *)swift_allocObject();
  v15 = v19;
  v14[2] = v18;
  v14[3] = *(_QWORD *)(class metadata base offset for MedicationOptionsDataSource + v15 + 8);
  v14[4] = v13;
  MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v8);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC16B0F8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC16B174();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC16B14C()
{
  return sub_1BC2B3ED8();
}

uint64_t sub_1BC16B174()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 80))();
  sub_1BC2B2C24();
  v1 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v0 + 88))(v1);
  sub_1BC2B2C24();
  v2 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v0 + 96))(v2);
  sub_1BC2B2C24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC16B224()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
  sub_1BC2B497C();
  sub_1BC2B3038();
  return sub_1BC2B497C();
}

void *sub_1BC16B2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = (void *)sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_, 0.0);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_);
  return v4;
}

uint64_t sub_1BC16B370(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t);
  void (*v18)(_BYTE *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v23[32];

  v3 = sub_1BC2B2D20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v23[-v9];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v23[-v11];
  sub_1BC2B2CC0();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 104))(a1);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_1BC2B2C9C();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v12, v3);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v12, v10, v3);
  }
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 112))(a1);
  v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v10, v12, v3);
    sub_1BC2B2C90();
    v17 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
    v17(v10, v3);
    v17(v12, v3);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v12, v7, v3);
  }
  v18 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *(_QWORD *)(v19 + 16) = 0;
  v18(v23, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v10, v12, v3);
  v20 = sub_1BC267620();
  v21 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v21(v10, v3);
  v21(v12, v3);
  return v20;
}

uint64_t sub_1BC16B564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v7;
  uint64_t v8;

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1BC2B2CC0();
    v7 = (void *)sub_1BC2B2D14();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v7, sel_contentInsets);
    objc_msgSend(v7, sel_setContentInsets_, 0.0);
    objc_msgSend(v7, sel_contentInsets);
    objc_msgSend(v7, sel_setContentInsets_);
  }
  else
  {
    if (!a1)
      return sub_1BC16B370(0);
    sub_1BC2B2CC0();
    v7 = (void *)sub_1BC2B2D14();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return (uint64_t)v7;
}

uint64_t sub_1BC16B694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - v8;
  v10 = sub_1BC2B2438();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B4460() == a1 && v14 == a2;
  v33 = a3;
  if (v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
LABEL_13:
    v24 = sub_1BC2B25F4();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v3 + 112))(v24);
    v34 = 0x74497265746F6F46;
    v35 = 0xEB000000005F6D65;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v25 = sub_1BC2B2EDC();
    v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
    v27 = v33;
    v33[3] = v25;
    v27[4] = sub_1BC0E519C(&qword_1EF3F8B78, v26, MEMORY[0x1E0D2B6A8]);
    __swift_allocate_boxed_opaque_existential_1(v27);
    return sub_1BC2B2ED0();
  }
  if (sub_1BC2B4460() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
    v20 = v33;
  }
  else
  {
    v19 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    v20 = v33;
    if ((v19 & 1) == 0)
    {
      v21 = sub_1BC2B296C();
      v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      v20[3] = v21;
      v20[4] = sub_1BC0E519C(&qword_1EF3F8B68, v22, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(v20);
      return sub_1BC2B2960();
    }
  }
  v28 = sub_1BC2B25F4();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v3 + 104))(v28);
  v29 = sub_1BC2B2D68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 1, 1, v29);
  v30 = sub_1BC2B2D80();
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
  v20[3] = v30;
  v20[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v31, MEMORY[0x1E0D2B310]);
  __swift_allocate_boxed_opaque_existential_1(v20);
  return sub_1BC2B2D74();
}

void MedicationOptionsDataSource.__allocating_init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationOptionsDataSource.init(arrangedSections:identifier:)()
{
  sub_1BC16BEF8();
}

uint64_t sub_1BC16BA2C()
{
  uint64_t v0;

  swift_release();
  sub_1BC0F2444(v0 + qword_1EF4026C0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  return swift_bridgeObjectRelease();
}

uint64_t MedicationOptionsDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_release();
  sub_1BC0F2444(v0 + qword_1EF4026C0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationOptionsDataSource.__deallocating_deinit()
{
  MedicationOptionsDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC16BAFC()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + **v0 + 144))();
}

uint64_t sub_1BC16BB30()
{
  sub_1BC16BBF8();
  return swift_retain();
}

uint64_t sub_1BC16BB44()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + **v0 + 168))();
}

uint64_t sub_1BC16BB78()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + **v0 + 176))();
}

uint64_t sub_1BC16BBAC()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationOptionsDataSource<A>);
  return sub_1BC2B3074();
}

uint64_t sub_1BC16BBF8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1EF3FB588);
}

_QWORD *sub_1BC16BC08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = v2;
  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + qword_1EF3FB590) = MEMORY[0x1E0DEE9E8];
  sub_1BC0E8644(a1, v3 + qword_1EF4026C0);
  *(_QWORD *)(v3 + qword_1EF3FB588) = a2;
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  swift_retain();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v10 = (_QWORD *)sub_1BC2B2C00();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B9600;
  v11 = *(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v10 + 80);
  v12 = swift_retain_n();
  v11(v12);
  v13 = sub_1BC2B2BAC();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v10 + 88))(v13);
  v14 = sub_1BC2B2BAC();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v10 + 96))(v14);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC16AE40();
  swift_release();
  sub_1BC0F2444(a1, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  return v10;
}

void sub_1BC16BEF8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC16BF24(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(class metadata base offset for MedicationOptionsDataSource + a2 + 8);
}

void sub_1BC16BF38()
{
  JUMPOUT(0x1BCCEF2BCLL);
}

void sub_1BC16BF48()
{
  unint64_t v0;

  sub_1BC0E7998(319, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t type metadata accessor for MedicationOptionsDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MedicationOptionsDataSource);
}

uint64_t method lookup function for MedicationOptionsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.value.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 40))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.__allocating_init(item:currentValuePublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + v0 + 72))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.makeItems()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 80))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.makeFooterItems()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 88))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.makeAlternativeSelectionItems()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 96))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.headerTitle(atIndex:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 104))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.footerText(atIndex:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 112))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.selectedValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 128))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.registerCells(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 144))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.footerLayout(environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 152))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.itemsLayout(section:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 168))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.supplementaryItem(ofKind:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 176))();
}

unint64_t sub_1BC16C140()
{
  unint64_t result;

  result = qword_1EDA0FFF0;
  if (!qword_1EDA0FFF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FFF0);
  }
  return result;
}

uint64_t sub_1BC16C17C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC16C1A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC16C1C4()
{
  return sub_1BC16B0F8();
}

uint64_t _s19HealthMedicationsUI24CustomStrengthOptionItemV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1BC2B53CC(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1BC2B53CC();
  }
  return result;
}

uint64_t destroy for ScheduledDoseIdentifier()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ScheduledDoseIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ScheduledDoseIdentifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ScheduledDoseIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledDoseIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledDoseIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledDoseIdentifier()
{
  return &type metadata for ScheduledDoseIdentifier;
}

unint64_t sub_1BC16C418()
{
  unint64_t result;

  result = qword_1EF3FB648;
  if (!qword_1EF3FB648)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BD2A8, &type metadata for ScheduledDoseIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF3FB648);
  }
  return result;
}

uint64_t static HKDrugInteractionResultCollection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  char v6;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BC16C528(v4, v5, (uint64_t)&qword_1EDA0FD68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1BC16C500(uint64_t a1, unint64_t a2)
{
  return sub_1BC16C528(a1, a2, (uint64_t)&qword_1EDA0FD68);
}

uint64_t sub_1BC16C514(uint64_t a1, unint64_t a2)
{
  return sub_1BC16C528(a1, a2, (uint64_t)&unk_1EDA0FD80);
}

uint64_t sub_1BC16C528(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;

  v6 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  v8 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  v9 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9)
    return 0;
LABEL_4:
  if (!v7)
    return 1;
  v10 = a1 & 0xFFFFFFFFFFFFFF8;
  v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v10 = a1;
  if (v6)
    v11 = v10;
  v12 = a2 & 0xFFFFFFFFFFFFFF8;
  v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v12 = a2;
  if (v8)
    v13 = v12;
  if (v11 == v13)
    return 1;
  if (v7 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x1BCCEE950](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v9 = (void *)result;
  v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v15 = (id)MEMORY[0x1BCCEE950](0, a2);
LABEL_21:
    v16 = v15;
    sub_1BC0E1D38(0, (unint64_t *)a3);
    a3 = sub_1BC2B4D84();

    if ((a3 & 1) != 0)
    {
      v17 = 1 - v7;
      for (i = 5; ; ++i)
      {
        v7 = v17 + i == 5;
        if (v17 + i == 5)
          return v7;
        v22 = i - 4;
        if (v23)
        {
          a3 = MEMORY[0x1BCCEE950](i - 4, a1);
          if (v8)
            goto LABEL_23;
        }
        else
        {
          if (v22 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_23:
            v19 = (id)MEMORY[0x1BCCEE950](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v22 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v19 = *(id *)(a2 + 8 * i);
LABEL_24:
        v20 = v19;
        v21 = sub_1BC2B4D84();

        if ((v21 & 1) == 0)
          return v7;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

BOOL sub_1BC16C7B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1BC16C81C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_1BC16CD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    for (i = (_QWORD *)(a2 + 40); ; i += 6)
    {
      v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_1BC2B53CC() & 1) == 0)
        break;
      v3 += 6;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

unint64_t sub_1BC16CE20(unint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = a2;
  v3 = result;
  v4 = result >> 62;
  if (result >> 62)
    goto LABEL_30;
  v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a2 >> 62;
  if (!(a2 >> 62))
    goto LABEL_3;
  while (2)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1BC2B52D0();
    result = swift_bridgeObjectRelease();
    if (v5 != v13)
      goto LABEL_32;
LABEL_4:
    if (!v5)
      goto LABEL_27;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    if (v3 < 0)
      v7 = v3;
    if (!v4)
      v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
    v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    v14 = v2 & 0xFFFFFFFFFFFFFF8;
    if (v2 < 0)
      v8 = v2;
    if (v6)
      v9 = v8;
    if (v7 == v9)
    {
LABEL_27:
      LOBYTE(v2) = 1;
      return v2 & 1;
    }
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    sub_1BC2B33B0();
    v10 = 0;
    v11 = v2 & 0xC000000000000001;
    v15 = v2;
    v4 = v5 - 1;
    while (v5 != v10)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1BCCEE950](v10, v3);
        if (v11)
          goto LABEL_19;
      }
      else
      {
        swift_retain();
        if (v11)
        {
LABEL_19:
          MEMORY[0x1BCCEE950](v10, v15);
          goto LABEL_23;
        }
      }
      if (v10 >= *(_QWORD *)(v14 + 16))
        goto LABEL_29;
      swift_retain();
LABEL_23:
      sub_1BC0E008C(&qword_1EF3FB738, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C750], MEMORY[0x1E0D2C760]);
      v2 = sub_1BC2B4424();
      swift_release();
      swift_release();
      if ((v2 & 1) != 0 && v4 != v10++)
        continue;
      return v2 & 1;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B52D0();
    result = swift_bridgeObjectRelease();
    v6 = (unint64_t)v2 >> 62;
    if ((unint64_t)v2 >> 62)
      continue;
    break;
  }
LABEL_3:
  if (v5 == *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
LABEL_32:
  LOBYTE(v2) = 0;
  return v2 & 1;
}

id sub_1BC16D050(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x1BCCEE950](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x1BCCEE950](0, v2);
LABEL_21:
    v14 = v13;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v15 = sub_1BC2B4D84();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x1BCCEE950](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1BCCEE950](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_1BC2B4D84();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_1BC2B4D84();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

BOOL sub_1BC16D344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  double v28;
  double v29;
  _BOOL8 result;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for Dosage();
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v31 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v31 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v31 - v16;
  MEMORY[0x1E0C80A78](v15);
  v21 = (char *)&v31 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 == *(_QWORD *)(a2 + 16))
  {
    if (!v22 || a1 == a2)
      return 1;
    v34 = a2;
    v35 = v19;
    v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v31 = *(_QWORD *)(v18 + 72);
    v32 = v11;
    v24 = v22 - 1;
    v33 = v14;
    v25 = v19;
    while (1)
    {
      v36 = v24;
      sub_1BC13817C(a1 + v23, (uint64_t)v21);
      sub_1BC13817C(a2 + v23, (uint64_t)v17);
      v26 = sub_1BC2B2414();
      sub_1BC13817C((uint64_t)v21, (uint64_t)v14);
      sub_1BC13817C((uint64_t)v17, (uint64_t)v11);
      if ((v26 & 1) == 0)
        break;
      v27 = sub_1BC2B239C();
      sub_1BC16DC44((uint64_t)v11);
      sub_1BC16DC44((uint64_t)v14);
      sub_1BC13817C((uint64_t)v21, (uint64_t)v8);
      sub_1BC13817C((uint64_t)v17, v25);
      if ((v27 & 1) == 0)
        goto LABEL_12;
      v28 = *(double *)&v8[*(int *)(v4 + 24)];
      sub_1BC16DC44((uint64_t)v8);
      v29 = *(double *)(v25 + *(int *)(v4 + 24));
      sub_1BC16DC44(v25);
      sub_1BC16DC44((uint64_t)v17);
      sub_1BC16DC44((uint64_t)v21);
      v24 = v36 - 1;
      result = v28 == v29;
      if (v28 == v29)
      {
        v23 += v31;
        v14 = v33;
        a2 = v34;
        v11 = v32;
        if (v36)
          continue;
      }
      return result;
    }
    sub_1BC16DC44((uint64_t)v11);
    sub_1BC16DC44((uint64_t)v14);
    sub_1BC13817C((uint64_t)v21, (uint64_t)v8);
    v25 = v35;
    sub_1BC13817C((uint64_t)v17, v35);
LABEL_12:
    sub_1BC16DC44(v25);
    sub_1BC16DC44((uint64_t)v8);
    sub_1BC16DC44((uint64_t)v17);
    sub_1BC16DC44((uint64_t)v21);
  }
  return 0;
}

uint64_t sub_1BC16D5F0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  id v4;
  id v5;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v4 = (id)MEMORY[0x1BCCEE950](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v1 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC16D6B4(void *a1)
{
  uint64_t v1;
  id v3;

  swift_beginAccess();
  v3 = a1;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  return swift_endAccess();
}

uint64_t sub_1BC16D74C()
{
  unint64_t v0;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC13114C(v0);
  return swift_endAccess();
}

uint64_t sub_1BC16D79C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  void *v7;
  id v8;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v6 = (id)MEMORY[0x1BCCEE950](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 32);
LABEL_6:
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v7, sel_hasSameAncestorIdentifiersAsInteractionResult_, a1);

    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC16D888()
{
  uint64_t v0;

  swift_beginAccess();
  sub_1BC13307C((unint64_t *)(v0 + 16));
  return swift_endAccess();
}

uint64_t HKDrugInteractionResultCollection.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HKDrugInteractionResultCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t HKDrugInteractionResultCollection.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1BC136AA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t HKDrugInteractionResultCollection.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_1BC2B5450();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC136AA4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC16D9DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BC16C528(v4, v5, (uint64_t)&qword_1EDA0FD68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1BC16DA80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  sub_1BC2B5450();
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1BC136AA4(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC16DAEC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_1BC136AA4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC16DB48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  sub_1BC2B5450();
  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1BC136AA4(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC16DBB0(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FB650, a2, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionResultCollection, (uint64_t)&protocol conformance descriptor for HKDrugInteractionResultCollection);
}

uint64_t type metadata accessor for HKDrugInteractionResultCollection()
{
  return objc_opt_self();
}

uint64_t method lookup function for HKDrugInteractionResultCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.first.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.append(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.append(contentsOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.hasSameAncestors(as:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.sortByIdentifier()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1BC16DC44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MedicationSecondaryEducationViewController.__allocating_init(type:educationDisplayable:content:attribution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BC16DC98(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC16E650);
}

uint64_t MedicationSecondaryEducationViewController.init(type:educationDisplayable:content:attribution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BC16DC98(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC16E4CC);
}

uint64_t sub_1BC16DC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(a2, v15);
  v18 = a7(a1, v17, a3, a4, a5, a6, v7, v15, v16);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v18;
}

void sub_1BC16DD3C()
{
  sub_1BC2B52B8();
  __break(1u);
}

Swift::Void __swiftcall MedicationSecondaryEducationViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1BC16DDCC();
}

void sub_1BC16DDCC()
{
  _BYTE *v0;
  uint64_t *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  if (v0[qword_1EF3FB740])
  {
    if (v0[qword_1EF3FB740] == 1)
    {
      if (qword_1EF3F8148 == -1)
      {
LABEL_9:
        v1 = &qword_1EF3FE7F0;
        goto LABEL_10;
      }
    }
    else if (qword_1EF3F8148 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = &qword_1EDA0FEF8;
LABEL_10:
  v2 = (id)*v1;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v3, 0xE000000000000000);

  v4 = objc_msgSend(v0, sel_collectionView);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
    objc_msgSend(v5, sel_setBackgroundColor_, v6);

    v7 = objc_msgSend(v0, sel_collectionView);
    if (v7)
    {
      v8 = v7;
      sub_1BC2B4460();
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      v9 = (id)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC16E150(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_1BC16DDCC();

}

void MedicationSecondaryEducationViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationSecondaryEducationViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationSecondaryEducationViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationSecondaryEducationViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC16E268(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationSecondaryEducationViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall MedicationSecondaryEducationViewController.viewControllerWillEnterAdaptiveModal()()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  objc_msgSend(v0, sel_setModalPresentationStyle_, 2);
  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B4DA8();
  v3 = (id)sub_1BC2B4928();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_1BC11D334, v2);

}

void sub_1BC16E3F8(void *a1)
{
  id v1;

  v1 = a1;
  MedicationSecondaryEducationViewController.viewControllerWillEnterAdaptiveModal()();

}

Swift::Void __swiftcall MedicationSecondaryEducationViewController.viewControllerDidLeaveAdaptiveModal()()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);

}

void sub_1BC16E474(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

}

void *sub_1BC16E4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;

  v28 = a5;
  v29 = a6;
  v14 = *(_QWORD *)(a8 - 8);
  v15 = (unsigned __int8 *)MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v15;
  *(_BYTE *)(v19 + qword_1EF3FB740) = *v15;
  type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
  swift_allocObject();
  v30 = v18;
  type metadata accessor for MedicationSecondaryEducationDataSource(0);
  v20 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, a8);
  v21 = a7;
  v22 = sub_1BC109790(&v30, (uint64_t)v17, a3, a4, v28, v29, v20, a8, a9);
  sub_1BC0E8710();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC2B92D0;
  v24 = sub_1BC16E79C();
  *(_QWORD *)(v23 + 32) = v22;
  *(_QWORD *)(v23 + 40) = v24;
  sub_1BC2B2E04();

  swift_retain();
  v25 = (void *)sub_1BC2B2FE4();
  objc_msgSend(v25, sel_setModalPresentationStyle_, 2);
  swift_release();
  return v25;
}

void *sub_1BC16E650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, Class a7, uint64_t a8, uint64_t a9)
{
  return sub_1BC16E4CC(a1, a2, a3, a4, a5, a6, objc_allocWithZone(a7), a8, a9);
}

uint64_t sub_1BC16E6CC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t type metadata accessor for MedicationSecondaryEducationViewController()
{
  uint64_t result;

  result = qword_1EF3FB748;
  if (!qword_1EF3FB748)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC16E72C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationSecondaryEducationViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationSecondaryEducationViewController.__allocating_init(type:educationDisplayable:content:attribution:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationSecondaryEducationViewController + v0 + 8))();
}

uint64_t sub_1BC16E794()
{
  return type metadata accessor for MedicationSecondaryEducationViewController();
}

unint64_t sub_1BC16E79C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FB798;
  if (!qword_1EF3FB798)
  {
    v1 = type metadata accessor for MedicationSecondaryEducationDataSource(255);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2F070], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FB798);
  }
  return result;
}

uint64_t type metadata accessor for FormStepViewController(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FB7A0);
}

uint64_t sub_1BC16E7F8()
{
  return sub_1BC0E5468();
}

void sub_1BC16E804(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_1BC16E80C()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC16E864()
{
  sub_1BC128564();
}

id sub_1BC16E87C()
{
  return sub_1BC128598(type metadata accessor for FormStepViewController);
}

uint64_t sub_1BC16E888()
{
  return type metadata accessor for FormStepViewController(0);
}

uint64_t type metadata accessor for ManualFormStepViewController(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FB7F0);
}

uint64_t sub_1BC16E8A4()
{
  return sub_1BC0E5468();
}

void sub_1BC16E8B0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void sub_1BC16E8BC()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC16E914()
{
  sub_1BC128564();
}

id sub_1BC16E92C()
{
  return sub_1BC128598(type metadata accessor for ManualFormStepViewController);
}

uint64_t sub_1BC16E938()
{
  return type metadata accessor for ManualFormStepViewController(0);
}

uint64_t sub_1BC16E940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - v7;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - v10;
  objc_allocWithZone((Class)type metadata accessor for FormStepViewController(0));
  sub_1BC128A98(a1, (uint64_t)v11);
  v12 = type metadata accessor for MedicationSearchItem(0);
  v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 0, 1, v12);
  sub_1BC16EB08(a3, (uint64_t)v8);
  sub_1BC16EB5C();
  swift_allocObject();
  v14 = sub_1BC2B3EF0();
  type metadata accessor for MedicationFormsDataSource();
  swift_allocObject();
  v15 = sub_1BC26BA7C((uint64_t)v11, v14);
  sub_1BC128A98(a1, (uint64_t)v11);
  v13(v11, 0, 1, v12);
  v16 = sub_1BC2A29D8((uint64_t)v11, (uint64_t)v15, a2);
  swift_release();
  swift_release();
  sub_1BC16EBD0(a3);
  sub_1BC0FC2B4(a1);
  return v16;
}

uint64_t sub_1BC16EB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC16EB5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FB848)
  {
    sub_1BC0E1C64(255, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FB848);
  }
}

uint64_t sub_1BC16EBD0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC16EC1C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t result;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B3848();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)&v24 - v13, a1, v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v14, v8);
  if ((_DWORD)result == *MEMORY[0x1E0D2CB40])
  {
    if ((*a2 & 1) == 0)
      *a2 |= 1uLL;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D2CB50])
  {
    if ((*a2 & 2) == 0)
      *a2 |= 2uLL;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D2CB78])
  {
    if ((*a2 & 4) == 0)
      *a2 |= 4uLL;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D2CB70])
  {
    if ((*a2 & 8) == 0)
      *a2 |= 8uLL;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D2CB38])
  {
    if ((*a2 & 0x10) == 0)
      *a2 |= 0x10uLL;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D2CB68])
  {
    if ((*a2 & 0x20) == 0)
      *a2 |= 0x20uLL;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D2CB48])
  {
    if ((*a2 & 0x40) == 0)
      *a2 |= 0x40uLL;
  }
  else
  {
    sub_1BC2B39A4();
    v15(v12, a1, v8);
    v17 = sub_1BC2B39D4();
    v18 = sub_1BC2B48C8();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v29 = v27;
      *(_DWORD *)v20 = 136315394;
      v26 = v17;
      v28 = sub_1BC12540C(0x737961646B656557, 0xE800000000000000, &v29);
      v25 = v19;
      sub_1BC2B4FD0();
      *(_WORD *)(v20 + 12) = 2048;
      v24 = v20 + 14;
      v21 = sub_1BC2B383C();
      v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v12, v8);
      v28 = v21;
      sub_1BC2B4FD0();
      v17 = v26;
      _os_log_impl(&dword_1BC0DC000, v26, (os_log_type_t)v25, "[%s] Encountered unknown Day = %ld", (uint8_t *)v20, 0x16u);
      v23 = v27;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v23, -1, -1);
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
    }
    else
    {
      v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v12, v8);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return ((uint64_t (*)(char *, uint64_t))v22)(v14, v8);
  }
  return result;
}

uint64_t sub_1BC16EFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE v31[32];
  uint64_t v32;
  _BYTE v33[8];
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;

  v2 = v1;
  v4 = sub_1BC2B2438();
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x1E0C80A78](v4);
  v20 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + qword_1EF3FB858) = a1;
  v32 = 1;
  v19 = v2;
  swift_retain();
  swift_retain();
  v33[0] = sub_1BC2B31A0() & 1;
  v34 = 2;
  v35 = sub_1BC2B31DC() & 1;
  v36 = 3;
  v23 = a1;
  v37 = sub_1BC2B31B8() & 1;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1BC2B5228();
  v27 = sub_1BC12A328();
  v26 = (id)objc_opt_self();
  v6 = type metadata accessor for InteractionFactorsLifestyleOptionsItem();
  v7 = 0;
  v24 = 0x80000001BC2CCAC0;
  v25 = v6;
  do
  {
    v9 = *(_QWORD *)&v31[v7 + 32];
    v10 = v33[v7];
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + qword_1EF3FBF58) = v9;
    *(_BYTE *)(v11 + qword_1EF3FBF50) = v10;
    v12 = v26;
    v13 = objc_msgSend(v26, sel_systemBackgroundColor);
    v14 = objc_msgSend(v12, sel_secondarySystemBackgroundColor);
    sub_1BC2B4CE8();

    HKDrugInteractionLifestyleFactor.image.getter(v9);
    switch(v9)
    {
      case 0:
        break;
      case 1:
      case 2:
      case 3:
        v28 = 0;
        v29 = 0xE000000000000000;
        sub_1BC2B51BC();
        swift_bridgeObjectRelease();
        v28 = 0xD000000000000011;
        v29 = v24;
        sub_1BC2B44FC();
        swift_bridgeObjectRelease();
        sub_1BC2B44FC();
        sub_1BC2B44FC();
        if (qword_1EDA0FEE8 != -1)
          swift_once();
        v8 = (id)qword_1EDA0FEF8;
        swift_bridgeObjectRetain();
        sub_1BC2B2144();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        break;
      default:
        sub_1BC2B52B8();
        __break(1u);
        JUMPOUT(0x1BC16F4E0);
    }
    sub_1BC2B2DB0();
    sub_1BC2B5204();
    sub_1BC2B5234();
    sub_1BC2B5240();
    sub_1BC2B5210();
    v7 += 16;
  }
  while (v7 != 48);
  *(_QWORD *)(v19 + qword_1EF3FB850) = v30;
  swift_release();
  v15 = sub_1BC2B2750();
  swift_retain();
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  sub_1BC11D238();
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC0F80B8(*(_QWORD *)(v15 + qword_1EF3FB850));
  v16 = v20;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v22);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1BC16F4F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  __int128 v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = *v0;
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)((char *)v0 + qword_1EF3FB850);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v6 = result;
    if (result)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v6)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v6 >= 1)
  {
    v9 = 0;
    v29 = qword_1EF3FB858;
    v30 = v5 & 0xC000000000000001;
    *(_QWORD *)&v8 = 136446466;
    v23 = v8;
    v22[1] = MEMORY[0x1E0DEE9B8] + 8;
    v25 = v1;
    v26 = v0;
    v24 = v4;
    v28 = v6;
    while (1)
    {
      if (v30)
      {
        v10 = MEMORY[0x1BCCEE950](v9, v5);
      }
      else
      {
        v10 = *(_QWORD *)(v5 + 8 * v9 + 32);
        swift_retain();
      }
      v11 = qword_1EF3FBF58;
      v12 = *(_QWORD *)(v10 + qword_1EF3FBF58);
      switch(v12)
      {
        case 3:
          sub_1BC2B31C4();
          break;
        case 2:
          sub_1BC2B31E8();
          break;
        case 1:
          sub_1BC2B31AC();
          break;
        default:
          sub_1BC2B39A4();
          swift_retain_n();
          v13 = sub_1BC2B39D4();
          v14 = sub_1BC2B48C8();
          if (os_log_type_enabled(v13, v14))
          {
            v15 = swift_slowAlloc();
            v16 = swift_slowAlloc();
            v32 = v16;
            *(_DWORD *)v15 = v23;
            v17 = sub_1BC2B54F8();
            *(_QWORD *)(v15 + 4) = sub_1BC12540C(v17, v18, &v32);
            swift_bridgeObjectRelease();
            *(_WORD *)(v15 + 12) = 2080;
            v31 = *(_QWORD *)(v10 + v11);
            type metadata accessor for HKDrugInteractionLifestyleFactor(0);
            v19 = sub_1BC2B4478();
            *(_QWORD *)(v15 + 14) = sub_1BC12540C(v19, v20, &v32);
            swift_release_n();
            v4 = v24;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BC0DC000, v13, v14, "%{public}s Unrecognized DDI factor: %s", (uint8_t *)v15, 0x16u);
            swift_arrayDestroy();
            v21 = v16;
            v1 = v25;
            MEMORY[0x1BCCEF3A0](v21, -1, -1);
            MEMORY[0x1BCCEF3A0](v15, -1, -1);
            swift_release();

          }
          else
          {

            swift_release_n();
          }
          (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
          v6 = v28;
          goto LABEL_7;
      }
      swift_release();
LABEL_7:
      if (v6 == ++v9)
        return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

void InteractionFactorsLifestyleOptionsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionFactorsLifestyleOptionsDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC16F8C4()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t InteractionFactorsLifestyleOptionsDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionFactorsLifestyleOptionsDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC16F980()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionFactorsLifestyleOptionsDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionFactorsLifestyleOptionsDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2DA4();
  sub_1BC2B497C();
}

uint64_t sub_1BC16FA00()
{
  sub_1BC2B2DA4();
  return sub_1BC2B497C();
}

unint64_t sub_1BC16FA38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FB860;
  if (!qword_1EF3FB860)
  {
    v1 = type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionFactorsLifestyleOptionsDataSource, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FB860);
  }
  return result;
}

uint64_t type metadata accessor for InteractionFactorsLifestyleOptionsDataSource()
{
  uint64_t result;

  result = qword_1EF3FB868;
  if (!qword_1EF3FB868)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC16FABC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsLifestyleOptionsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsLifestyleOptionsDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsLifestyleOptionsDataSource + *v0 + 24))();
}

uint64_t dispatch thunk of InteractionFactorsLifestyleOptionsDataSource.commitChanges()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsLifestyleOptionsDataSource + *v0 + 32))();
}

uint64_t sub_1BC16FB50()
{
  return type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
}

unint64_t sub_1BC16FB58()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  type metadata accessor for MedicationLogDetailsUnitItem();
  sub_1BC236B0C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

id sub_1BC16FC18()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView);
  }
  else
  {
    type metadata accessor for MedicationLogDetailsUnitView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC16FC9C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  char *v15;
  char *v16;
  char *v17;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, qword_1EF3FB9C0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  v9 = type metadata accessor for MedicationLogDetailsUnitItem();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v13, (uint64_t)v28);
  if (v28[3])
  {
    sub_1BC0E1B94();
    v14 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1BC171D0C((uint64_t)v8, (uint64_t)v12);
      v15 = (char *)sub_1BC16FC18();
      *(_QWORD *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel] = *(_QWORD *)&v12[*(int *)(v9 + 20)];
      swift_retain_n();
      swift_release();
      sub_1BC170514();

      swift_release();
      v16 = (char *)sub_1BC16FC18();
      v17 = &v12[*(int *)(v9 + 24)];
      MEMORY[0x1BCCEF478](v17);
      *(_QWORD *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate + 8] = *((_QWORD *)v17 + 1);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      return sub_1BC0FC20C((uint64_t)v12);
    }
  }
  else
  {
    sub_1BC0F2444((uint64_t)v28, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1BC0F2444((uint64_t)v8, qword_1EF3FB9C0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem);
  sub_1BC2B39A4();
  v19 = v1;
  v20 = sub_1BC2B39D4();
  v21 = sub_1BC2B48C8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v26 = v2;
    v27 = v23;
    *(_DWORD *)v22 = 136315138;
    sub_1BC0E5774(v13, (uint64_t)v28);
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v24 = sub_1BC2B4490();
    v28[0] = sub_1BC12540C(v24, v25, &v27);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v20, v21, "Incorrect view model for MedicationLogDetailsUnitItem: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v23, -1, -1);
    MEMORY[0x1BCCEF3A0](v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_1BC17007C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  objc_super v30;

  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView] = 0;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item];
  v14 = (objc_class *)type metadata accessor for MedicationLogDetailsUnitCell();
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v30.receiver = v4;
  v30.super_class = v14;
  v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = objc_msgSend(v15, sel_contentView);
  v17 = sub_1BC16FC18();
  objc_msgSend(v16, sel_addSubview_, v17);

  v18 = sub_1BC16FC18();
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v27 = sub_1BC16FC18();
  v28 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v27, sel_hk_alignConstraintsWithView_insets_, v28, v20, v22, v24, v26);

  return v15;
}

id sub_1BC1702F4()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationLogDetailsUnitCell);
}

uint64_t type metadata accessor for MedicationLogDetailsUnitCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC17036C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1703BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC16FC9C();
  return sub_1BC0F2444(a1, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC170438(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC170480;
}

uint64_t sub_1BC170480(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC16FC9C();
  return result;
}

uint64_t sub_1BC1704B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2BD640, a3);
  return sub_1BC2B2B34();
}

uint64_t sub_1BC170514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;

  v1 = sub_1BC2B24A4();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel);
  if (v6)
  {
    swift_retain();
    v7 = sub_1BC17076C();
    sub_1BC17176C();
    v8 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setText_, v8);

    v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText);
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText + 8)
      && (swift_bridgeObjectRetain(),
          sub_1BC2B44CC(),
          v11 = v10,
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          v11))
    {
      return swift_release();
    }
    else
    {
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      sub_1BC2B2498();
      v12 = sub_1BC2B33F8();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      *v9 = v12;
      v9[1] = v14;
      swift_bridgeObjectRelease();
      if (v9[1])
      {
        swift_bridgeObjectRetain();
        v15 = sub_1BC170A98();
        v16 = (void *)sub_1BC2B4430();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setText_, v16);

      }
      v17 = sub_1BC170C74();
      v18 = *(id *)(v6 + 16);
      sub_1BC2B4BC8();

      v19 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setText_, v19);

      return swift_release();
    }
  }
  return result;
}

id sub_1BC17076C()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1BC170780);
}

id sub_1BC170780()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  v7 = sub_1BC2B4460();
  v8 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v7, v8);

  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v3, sel_setFont_, v5);

  return v3;
}

id sub_1BC170950()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueAffixStackView, (uint64_t (*)(uint64_t))sub_1BC170964);
}

id sub_1BC170964()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  sub_1BC0E7940();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v0 + 32) = sub_1BC170A98();
  *(_QWORD *)(v0 + 40) = sub_1BC170C74();
  sub_1BC2B45A4();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v2 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 0);
  objc_msgSend(v3, sel_setAlignment_, 3);
  objc_msgSend(v3, sel_setDistribution_, 0);
  objc_msgSend(v3, sel_setSpacing_, 0.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1BC170A98()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueTextField, (uint64_t (*)(uint64_t))sub_1BC170AAC);
}

id sub_1BC170AAC(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3DB8]), sel_init);
  objc_msgSend(v2, sel_setDelegate_, a1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v2, sel_setFont_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  v9 = sub_1BC2B4460();
  v10 = v5;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v6 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v9, v10);

  objc_msgSend(v6, sel_setKeyboardType_, 8);
  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v6;
}

id sub_1BC170C74()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___countingAffixLabel, (uint64_t (*)(void))sub_1BC170C88);
}

id sub_1BC170C88()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v9;
  uint64_t v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  v9 = sub_1BC2B4460();
  v10 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v10);

  v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v4, sel_setFont_, v6);

  v7 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  return v4;
}

void sub_1BC170E94()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v2 + 32) = sub_1BC17076C();
  *(_QWORD *)(v2 + 40) = sub_1BC170950();
  sub_1BC2B45A4();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 0.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v5);
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2BA730;
  v8 = objc_msgSend(v5, sel_topAnchor);
  v9 = objc_msgSend(v1, sel_topAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(v5, sel_leadingAnchor);
  v12 = objc_msgSend(v1, sel_leadingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v5, sel_trailingAnchor);
  v15 = objc_msgSend(v1, sel_trailingAnchor);
  if (qword_1EF3F80C0 != -1)
    swift_once();
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, -*(double *)&qword_1EF3FB8C0);

  *(_QWORD *)(v7 + 48) = v16;
  v17 = objc_msgSend(v5, sel_bottomAnchor);
  v18 = objc_msgSend(v1, sel_bottomAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v7 + 56) = v19;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v20 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v20);

  v21 = sub_1BC170A98();
  objc_msgSend(v21, sel_addTarget_action_forControlEvents_, v1, sel_didChangeText_, 0x20000);

}

void sub_1BC171250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1BC2B24A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC170A98();
  v7 = objc_msgSend(v6, sel_text);

  if (v7)
  {
    v8 = sub_1BC2B4460();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText);
  *v11 = v8;
  v11[1] = v10;
  swift_bridgeObjectRelease();
  if (v11[1])
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BC170A98();
    v13 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setText_, v13);

  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  swift_bridgeObjectRetain();
  sub_1BC2B2498();
  sub_1BC2B3404();
  v15 = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = sub_1BC17076C();
  sub_1BC17176C();
  v17 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setText_, v17);

  v18 = (void *)MEMORY[0x1BCCEF478](v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate);
  if (v18)
  {
    v19 = objc_msgSend(v18, sel_navigationItem);
    v20 = objc_msgSend(v19, sel_rightBarButtonItem);

    objc_msgSend(v20, sel_setEnabled_, v15 > 0.0);
    swift_unknownObjectRelease();

  }
}

uint64_t sub_1BC1714FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B24A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText + 8))
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    swift_bridgeObjectRetain();
    sub_1BC2B2498();
    sub_1BC2B3404();
    v11 = v10;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v11;
  }
  else
  {
    sub_1BC2B39A4();
    v13 = sub_1BC2B39D4();
    v14 = sub_1BC2B48C8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v20 = v16;
      *(_DWORD *)v15 = 136315138;
      v19[1] = v15 + 4;
      v17 = sub_1BC2B54F8();
      v19[2] = sub_1BC12540C(v17, v18, &v20);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v13, v14, "[%s] Couldn't retrieve unit value", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v16, -1, -1);
      MEMORY[0x1BCCEF3A0](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
}

uint64_t sub_1BC17176C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel);
  if (v6)
  {
    v7 = *(void **)(v6 + 16);
    swift_retain();
    v8 = v7;
    v9 = sub_1BC2B4BA4();
    swift_release();

  }
  else
  {
    sub_1BC2B39B0();
    v10 = sub_1BC2B39D4();
    v11 = sub_1BC2B48C8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = sub_1BC2B54F8();
      v17 = sub_1BC12540C(v14, v15, &v18);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v10, v11, "[%s] item is not a MedicationsDoseLogViewModel", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v13, -1, -1);
      MEMORY[0x1BCCEF3A0](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return v9;
}

id sub_1BC17196C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueAffixStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueTextField] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___countingAffixLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for MedicationLogDetailsUnitView();
  v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC170E94();

  return v10;
}

id sub_1BC171A90()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationLogDetailsUnitView);
}

uint64_t type metadata accessor for MedicationLogDetailsUnitView()
{
  return objc_opt_self();
}

void sub_1BC171B48(void *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a1, sel_endOfDocument);
  v3 = objc_msgSend(a1, sel_textRangeFromPosition_toPosition_, v2, v2);
  objc_msgSend(a1, sel_setSelectedTextRange_, v3);

}

uint64_t type metadata accessor for MedicationLogDetailsUnitItem()
{
  uint64_t result;

  result = qword_1EF3FBA20;
  if (!qword_1EF3FBA20)
    return swift_getSingletonMetadata();
  return result;
}

double sub_1BC171CD4()
{
  double v0;
  double result;

  sub_1BC2B2F00();
  sub_1BC2B2EF4();
  result = v0 * 0.5;
  qword_1EF3FB8C0 = *(_QWORD *)&result;
  return result;
}

uint64_t sub_1BC171D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationLogDetailsUnitItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC171D50()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueAffixStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueTextField] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___countingAffixLabel] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC171E10(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t (*v14)(uint64_t);
  _QWORD aBlock[6];

  v2 = sub_1BC2B42E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B4304();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v10 = (void *)sub_1BC2B4A0C();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  aBlock[4] = sub_1BC172194;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_9;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  swift_release();
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC9textField_24shouldChangeCharactersIn17replacementStringSbSo06UITextI0C_So8_NSRangeVSStF_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v16;

  v6 = sub_1BC2B24A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_text);
  if (v10)
  {
    v11 = v10;
    v12 = (void *)sub_1BC2B4430();
    v13 = objc_msgSend(v11, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v12);

    sub_1BC2B4460();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    sub_1BC2B2498();
    v14 = sub_1BC2B33EC();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1BC172170()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC172194()
{
  uint64_t v0;

  sub_1BC171B48(*(void **)(v0 + 16));
}

unint64_t sub_1BC17219C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FFE0;
  if (!qword_1EDA0FFE0)
  {
    sub_1BC0E7998(255, (unint64_t *)&qword_1EDA0FFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FFE0);
  }
  return result;
}

uint64_t sub_1BC1721FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC172208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC172284()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC172290(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC172308()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC172390()
{
  return sub_1BC0E519C((unint64_t *)&unk_1EF3FBA60, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem, (uint64_t)&unk_1BC2BD6D0);
}

uint64_t TileItem.init(titleText:bodyText:subBodyText:buttonTitle:imageSystemName:background:didTapView:didTapDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t result;
  _QWORD *v31;
  _QWORD *v32;

  sub_1BC2B242C();
  v21 = (int *)type metadata accessor for TileItem(0);
  v22 = (uint64_t *)(a9 + v21[5]);
  type metadata accessor for TileItemCell();
  sub_1BC0E008C(&qword_1EF3FBA70, v23, (uint64_t (*)(uint64_t))type metadata accessor for TileItemCell, (uint64_t)&protocol conformance descriptor for TileItemCell);
  *v22 = sub_1BC2B2930();
  v22[1] = v24;
  v25 = (_QWORD *)(a9 + v21[6]);
  *v25 = a1;
  v25[1] = a2;
  v26 = (_QWORD *)(a9 + v21[7]);
  *v26 = a3;
  v26[1] = a4;
  v27 = (_QWORD *)(a9 + v21[8]);
  *v27 = a5;
  v27[1] = a6;
  v28 = (_QWORD *)(a9 + v21[9]);
  *v28 = a7;
  v28[1] = a8;
  v29 = (_QWORD *)(a9 + v21[10]);
  *v29 = a10;
  v29[1] = a11;
  result = sub_1BC0F1B94(a12, a9 + v21[11], type metadata accessor for TileItem.Background);
  v31 = (_QWORD *)(a9 + v21[12]);
  *v31 = a13;
  v31[1] = a14;
  v32 = (_QWORD *)(a9 + v21[13]);
  *v32 = a15;
  v32[1] = a16;
  return result;
}

uint64_t type metadata accessor for TileItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FBAE0);
}

uint64_t type metadata accessor for TileItemCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TileItem.Background(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FBBA8);
}

uint64_t sub_1BC172564(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t TileItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC2B2438();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TileItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TileItem(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TileItem.uniqueIdentifier.getter()
{
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x6D657449656C6954;
}

uint64_t TileItem.hash(into:)()
{
  type metadata accessor for TileItem(0);
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t static TileItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(int *)(type metadata accessor for TileItem(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t TileItem.hashValue.getter()
{
  sub_1BC2B5450();
  type metadata accessor for TileItem(0);
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC172750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(int *)(a3 + 20);
  if (*(_QWORD *)(a1 + v3) == *(_QWORD *)(a2 + v3) && *(_QWORD *)(a1 + v3 + 8) == *(_QWORD *)(a2 + v3 + 8))
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t sub_1BC172784()
{
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x6D657449656C6954;
}

uint64_t sub_1BC1727DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0FC574(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC172864();
  return sub_1BC0E8594((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC172864()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  char *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void *v41;
  id v42;
  char *v43;
  id v44;
  void *v45;
  char *v46;
  id v47;
  void *v48;
  char *v49;
  id v50;
  void *v51;
  char *v52;
  id v53;
  void *v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  id v67;
  id v68;
  objc_class *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t ObjectType;
  objc_super v77;
  uint64_t v78;
  uint64_t v79[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)&v70 - v8;
  v9 = sub_1BC2B3B48();
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for TileItem.Background(0);
  MEMORY[0x1E0C80A78](v75);
  v12 = (void **)((char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FBCB0, type metadata accessor for TileItem, v6);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v70 - v14;
  v16 = (int *)type metadata accessor for TileItem(0);
  v17 = *((_QWORD *)v16 - 1);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v20, (uint64_t)v79, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (v79[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v21 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v15, v21 ^ 1u, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16) != 1)
    {
      v22 = (uint64_t)v19;
      sub_1BC0F1B94((uint64_t)v15, (uint64_t)v19, type metadata accessor for TileItem);
      if (*(_QWORD *)&v19[v16[10] + 8])
      {
        v23 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v24 = objc_msgSend(v23, sel_configurationWithPointSize_weight_, 5, 34.0);
        v25 = (void *)sub_1BC2B4430();
        swift_bridgeObjectRelease();
        v26 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v25, v24);

        v27 = sub_1BC173224();
        v28 = *(id *)&v27[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView];

        objc_msgSend(v28, sel_setImage_, v26);
      }
      else
      {
        v36 = sub_1BC173224();
        v28 = *(id *)&v36[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView];

        objc_msgSend(v28, sel_setImage_, 0);
      }

      sub_1BC0FC574((uint64_t)&v19[v16[11]], (uint64_t)v12, type metadata accessor for TileItem.Background);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v38 = v71;
        v37 = v72;
        v39 = v73;
        (*(void (**)(char *, void **, uint64_t))(v72 + 32))(v71, v12, v73);
        v40 = v74;
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v74, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v39);
        MEMORY[0x1BCCEE23C](v40);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
      }
      else
      {
        v41 = *v12;
        v42 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v42, sel_setBackgroundColor_, v41);

      }
      v43 = sub_1BC173224();
      v44 = sub_1BC174C48();

      swift_bridgeObjectRetain();
      v45 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v44, sel_setText_, v45);

      v46 = sub_1BC173224();
      v47 = sub_1BC174E48();

      swift_bridgeObjectRetain();
      v48 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v47, sel_setText_, v48);

      v49 = sub_1BC173224();
      v50 = sub_1BC174ED0();

      if (*(_QWORD *)(v22 + v16[8] + 8))
      {
        swift_bridgeObjectRetain();
        v51 = (void *)sub_1BC2B4430();
        swift_bridgeObjectRelease();
      }
      else
      {
        v51 = 0;
      }
      objc_msgSend(v50, sel_setText_, v51);

      v52 = sub_1BC173224();
      v53 = sub_1BC1755C8();

      swift_bridgeObjectRetain();
      v54 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v53, sel_setTitle_forState_, v54, 0);

      v55 = sub_1BC173224();
      v56 = (uint64_t *)(v22 + v16[12]);
      v58 = *v56;
      v57 = v56[1];
      v59 = &v55[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onTap];
      *(_QWORD *)v59 = v58;
      *((_QWORD *)v59 + 1) = v57;
      swift_retain();

      swift_release();
      v60 = sub_1BC173224();
      v61 = (uint64_t *)(v22 + v16[13]);
      v62 = *v61;
      v63 = v61[1];
      v64 = (uint64_t *)&v60[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
      v65 = *(_QWORD *)&v60[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
      *v64 = v62;
      v64[1] = v63;
      sub_1BC0F2690(v62);
      sub_1BC0F2690(v62);
      sub_1BC0F2600(v65);
      sub_1BC177178();
      sub_1BC0F2600(v62);

      v66 = sub_1BC173224();
      v67 = objc_msgSend(v66, sel_traitCollection);
      v68 = objc_msgSend(v67, sel_preferredContentSizeCategory);
      LOBYTE(v63) = sub_1BC2B4ACC();

      sub_1BC175DCC(v63 & 1);
      objc_msgSend(v66, sel_invalidateIntrinsicContentSize);
      v69 = (objc_class *)type metadata accessor for TileTipView();
      v77.receiver = v66;
      v77.super_class = v69;
      objc_msgSendSuper2(&v77, sel_layoutSubviews);

      return sub_1BC0E8594(v22, type metadata accessor for TileItem);
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v79, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v17 + 56))(v15, 1, 1, v16);
  }
  sub_1BC177778((uint64_t)v15);
  sub_1BC2B39A4();
  v29 = sub_1BC2B39D4();
  v30 = sub_1BC2B48C8();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v79[0] = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = sub_1BC2B54F8();
    v78 = sub_1BC12540C(v33, v34, v79);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v29, v30, "[%s] Incorrect view model for TileItemCell", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v32, -1, -1);
    MEMORY[0x1BCCEF3A0](v31, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

