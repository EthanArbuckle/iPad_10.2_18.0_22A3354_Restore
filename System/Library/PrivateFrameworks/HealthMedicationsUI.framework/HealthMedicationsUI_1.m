uint64_t sub_1BC1730E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC173138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC172864();
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t (*sub_1BC1731AC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1731F4;
}

uint64_t sub_1BC1731F4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC172864();
  return result;
}

char *sub_1BC173224()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView);
  }
  else
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapView;
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapView);
    v7 = *(_QWORD *)(v5 + 8);
    v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapDismiss);
    v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapDismiss + 8);
    objc_allocWithZone((Class)type metadata accessor for TileTipView());
    swift_retain();
    sub_1BC0F2690(v8);
    v10 = sub_1BC1758BC(v6, v7, v8, v9);
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC1732FC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  objc_super v18;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapDismiss];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView] = 0;
  v11 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapView];
  *(_QWORD *)v11 = nullsub_1;
  *((_QWORD *)v11 + 1) = 0;
  v12 = *v10;
  *v10 = 0;
  v10[1] = 0;
  sub_1BC0F2600(v12);
  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for TileItemCell();
  v13 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC2B263C();
  v14 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  v15 = objc_msgSend(v13, sel_contentView);
  v16 = sub_1BC173224();
  objc_msgSend(v15, sel_addSubview_, v16);

  sub_1BC173500();
  return v13;
}

void sub_1BC173500()
{
  void *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v1 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA730;
  v3 = sub_1BC173224();
  v4 = objc_msgSend(v3, sel_topAnchor);

  v5 = objc_msgSend(v0, sel_contentView);
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = sub_1BC173224();
  v9 = objc_msgSend(v8, sel_bottomAnchor);

  v10 = objc_msgSend(v0, sel_contentView);
  v11 = objc_msgSend(v10, sel_bottomAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(_QWORD *)(v2 + 40) = v12;
  v13 = sub_1BC173224();
  v14 = objc_msgSend(v13, sel_leadingAnchor);

  v15 = objc_msgSend(v0, sel_contentView);
  v16 = objc_msgSend(v15, sel_layoutMarginsGuide);

  v17 = objc_msgSend(v16, sel_leadingAnchor);
  v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v2 + 48) = v18;
  v19 = sub_1BC173224();
  v20 = objc_msgSend(v19, sel_trailingAnchor);

  v21 = objc_msgSend(v0, sel_contentView);
  v22 = objc_msgSend(v21, sel_trailingAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v2 + 56) = v23;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v24 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v24);

}

id TileItemCell.__deallocating_deinit()
{
  return sub_1BC0F3CF0(type metadata accessor for TileItemCell);
}

uint64_t sub_1BC1737F0()
{
  return sub_1BC0E008C(&qword_1EF3FBA80, 255, type metadata accessor for TileItem, (uint64_t)&protocol conformance descriptor for TileItem);
}

uint64_t sub_1BC173888@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a2, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t *initializeBufferWithCopyOfBuffer for TileItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  void **v47;
  void **v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (uint64_t *)((char *)a1 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (uint64_t *)((char *)a1 + v25);
    v30 = (uint64_t *)((char *)a2 + v25);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[11];
    v47 = (void **)((char *)a1 + v32);
    v48 = (void **)((char *)a2 + v32);
    type metadata accessor for TileItem.Background(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v33 = sub_1BC2B3B48();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v47, v48, v33);
    }
    else
    {
      v35 = *v48;
      *v47 = *v48;
      v36 = v35;
    }
    swift_storeEnumTagMultiPayload();
    v37 = a3[12];
    v38 = a3[13];
    v39 = (uint64_t *)((char *)a1 + v37);
    v40 = (uint64_t *)((char *)a2 + v37);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = (uint64_t *)((char *)a1 + v38);
    v43 = (uint64_t *)((char *)a2 + v38);
    v44 = *v43;
    swift_retain();
    if (v44)
    {
      v45 = v43[1];
      *v42 = v44;
      v42[1] = v45;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v42 = *(_OWORD *)v43;
    }
  }
  return a1;
}

uint64_t destroy for TileItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (id *)(a1 + *(int *)(a2 + 44));
  type metadata accessor for TileItem.Background(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC2B3B48();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {

  }
  result = swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 52)))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void **v45;
  void **v46;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_QWORD *)(a1 + v24);
  v29 = (_QWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[11];
  v45 = (void **)(a1 + v31);
  v46 = (void **)(a2 + v31);
  type metadata accessor for TileItem.Background(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = sub_1BC2B3B48();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v45, v46, v32);
  }
  else
  {
    v33 = *v46;
    *v45 = *v46;
    v34 = v33;
  }
  swift_storeEnumTagMultiPayload();
  v35 = a3[12];
  v36 = a3[13];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = (_QWORD *)(a1 + v36);
  v41 = (uint64_t *)(a2 + v36);
  v42 = *v41;
  swift_retain();
  if (v42)
  {
    v43 = v41[1];
    *v40 = v42;
    v40[1] = v43;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
  }
  return a1;
}

uint64_t assignWithCopy for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void **v26;
  void **v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v25 = a3[11];
    v26 = (void **)(a1 + v25);
    v27 = (void **)(a2 + v25);
    sub_1BC0E8594(a1 + v25, type metadata accessor for TileItem.Background);
    type metadata accessor for TileItem.Background(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_1BC2B3B48();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      v29 = *v27;
      *v26 = *v27;
      v30 = v29;
    }
    swift_storeEnumTagMultiPayload();
  }
  v31 = a3[12];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  v35 = a3[13];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v38 = *(_QWORD *)(a1 + v35);
  v39 = *v37;
  if (!v38)
  {
    if (v39)
    {
      v41 = v37[1];
      *v36 = v39;
      v36[1] = v41;
      swift_retain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    return a1;
  }
  if (!v39)
  {
    swift_release();
    goto LABEL_12;
  }
  v40 = v37[1];
  *v36 = v39;
  v36[1] = v40;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[11];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = type metadata accessor for TileItem.Background(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_1BC2B3B48();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t assignWithTake for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[10];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v37 = a3[11];
    v38 = (void *)(a1 + v37);
    v39 = (const void *)(a2 + v37);
    sub_1BC0E8594(a1 + v37, type metadata accessor for TileItem.Background);
    v40 = type metadata accessor for TileItem.Background(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = sub_1BC2B3B48();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
  }
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  v42 = a3[13];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v45 = *(_QWORD *)(a1 + v42);
  v46 = *v44;
  if (!v45)
  {
    if (v46)
    {
      v48 = v44[1];
      *v43 = v46;
      v43[1] = v48;
      return a1;
    }
LABEL_11:
    *(_OWORD *)v43 = *(_OWORD *)v44;
    return a1;
  }
  if (!v46)
  {
    swift_release();
    goto LABEL_11;
  }
  v47 = v44[1];
  *v43 = v46;
  v43[1] = v47;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TileItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC174378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for TileItem.Background(0);
    v10 = a1 + *(int *)(a3 + 44);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for TileItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC174430(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for TileItem.Background(0);
    v12 = a1 + *(int *)(a4 + 44);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1BC1744D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TileItem.Background(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for TileItem.Background(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC2B3B48();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = *a2;
      *(_QWORD *)a1 = *a2;
      v9 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for TileItem.Background(id *a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1BC2B3B48();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {

  }
}

void **initializeWithCopy for TileItem.Background(void **a1, void **a2)
{
  uint64_t v4;
  void *v5;
  id v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1BC2B3B48();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = *a2;
    *a1 = *a2;
    v6 = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for TileItem.Background(void **a1, void **a2)
{
  uint64_t v4;
  void *v5;
  id v6;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for TileItem.Background);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1BC2B3B48();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      v5 = *a2;
      *a1 = *a2;
      v6 = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TileItem.Background(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC2B3B48();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TileItem.Background(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for TileItem.Background);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC2B3B48();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BC1748FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B3B48();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t method lookup function for TileItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TileItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TileItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TileItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1BC1749D0(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints] = a1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC16D050(v3, v2);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    v5 = (void *)objc_opt_self();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v6 = (void *)sub_1BC2B4580();
    objc_msgSend(v5, sel_deactivateConstraints_, v6);

    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v7);

    objc_msgSend(v1, sel_setNeedsLayout);
  }
  return swift_bridgeObjectRelease();
}

id sub_1BC174AC8()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setContentMode_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v0, sel_setTintColor_, v1);

  v6 = sub_1BC2B4460();
  v7 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v6, v7);

  return v3;
}

id sub_1BC174C48()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1BC174C5C);
}

id sub_1BC174C5C()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v8 = sub_1BC2B4460();
  v9 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v8, v9);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  v4 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4A88], 1024);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  LODWORD(v6) = 1132068864;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v6);
  return v2;
}

id sub_1BC174E48()
{
  return sub_1BC174E70(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___detailLabel);
}

id sub_1BC174E70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = sub_1BC174EFC();
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

id sub_1BC174ED0()
{
  return sub_1BC174E70(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___subdetailLabel);
}

id sub_1BC174EFC()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v8 = sub_1BC2B4460();
  v9 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v8, v9);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  LODWORD(v6) = 1132068864;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v6);
  return v2;
}

id sub_1BC1750E0()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___separatorView, (uint64_t (*)(void))sub_1BC1750F4);
}

id sub_1BC1750F4()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_opaqueSeparatorColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  v5 = sub_1BC2B4460();
  v6 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v3, v5, v6);

  return v0;
}

id sub_1BC175244()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1BC175258);
}

id sub_1BC175258(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_didTapDismiss, 64);
  v7 = sub_1BC2B4460();
  v8 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v7, v8);

  return v4;
}

id sub_1BC1753AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView);
  }
  else
  {
    v4 = v0;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v5 = (void *)sub_1BC2B4C64();
    v6 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v5);

    v7 = v6;
    v8 = (void *)sub_1BC2B4430();
    v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v8, v7);

    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v10, sel_setPreferredSymbolConfiguration_, v7);
    objc_msgSend(v10, sel_setContentMode_, 1);
    if (v9)
    {
      v11 = (void *)objc_opt_self();
      v12 = v9;
      v13 = objc_msgSend(v11, sel_quaternaryLabelColor);
      v14 = objc_msgSend(v12, sel_imageWithTintColor_renderingMode_, v13, 1);

    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(v10, sel_setImage_, v14);

    v15 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v16 = v2;
  return v3;
}

id sub_1BC1755C8()
{
  return sub_1BC12C360(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___actionButton, (uint64_t (*)(uint64_t))sub_1BC1755DC);
}

id sub_1BC1755DC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v2 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v19 = sub_1BC2B4460();
  v20 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v19, v20);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, a1, sel_didTapView, 64);
  v6 = objc_msgSend(v4, sel_titleLabel);
  if (v6)
  {
    v7 = v6;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v8 = (void *)sub_1BC2B4C64();
    objc_msgSend(v7, sel_setFont_, v8);

  }
  v9 = objc_msgSend(v4, sel_titleLabel);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);

  }
  v11 = objc_msgSend(v4, sel_titleLabel);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  }
  v13 = objc_msgSend(v4, sel_titleLabel);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_setNumberOfLines_, 0);

  }
  v15 = objc_msgSend(v4, sel_titleLabel);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    objc_msgSend(v16, sel_setTextColor_, v17);

  }
  objc_msgSend(v4, sel_setContentHorizontalAlignment_, 4);
  return v4;
}

char *sub_1BC1758BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  char *v22;
  id v23;
  char *v24;
  id v25;
  char *v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  objc_super v38;

  v9 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
  *v9 = 0;
  v9[1] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints] = MEMORY[0x1E0DEE9D8];
  v10 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView;
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_1BC174AC8();
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___subdetailLabel] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint] = 0;
  v12 = &v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onTap];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  v13 = *v9;
  *v9 = a3;
  v9[1] = a4;
  swift_retain();
  sub_1BC0F2690(a3);
  sub_1BC0F2600(v13);

  v38.receiver = v11;
  v38.super_class = (Class)type metadata accessor for TileTipView();
  v14 = (char *)objc_msgSendSuper2(&v38, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC2B263C();
  v15 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView]);
  v16 = v14;
  v17 = sub_1BC1753AC();
  objc_msgSend(v16, sel_addSubview_, v17);

  v18 = v16;
  v19 = sub_1BC175244();
  objc_msgSend(v18, sel_addSubview_, v19);

  v20 = v18;
  v21 = sub_1BC174C48();
  objc_msgSend(v20, sel_addSubview_, v21);

  v22 = v20;
  v23 = sub_1BC174E48();
  objc_msgSend(v22, sel_addSubview_, v23);

  v24 = v22;
  v25 = sub_1BC174ED0();
  objc_msgSend(v24, sel_addSubview_, v25);

  v26 = v24;
  v27 = sub_1BC1750E0();
  objc_msgSend(v26, sel_addSubview_, v27);

  v28 = v26;
  v29 = sub_1BC1755C8();
  objc_msgSend(v28, sel_addSubview_, v29);

  v30 = objc_msgSend(v28, sel_traitCollection);
  v31 = objc_msgSend(v30, sel_preferredContentSizeCategory);
  v32 = sub_1BC2B4ACC();

  sub_1BC175DCC(v32 & 1);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BC2B92D0;
  v34 = sub_1BC2B3D40();
  v35 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v33 + 32) = v34;
  *(_QWORD *)(v33 + 40) = v35;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  v36 = v28;
  sub_1BC2B4CC4();
  sub_1BC0F2600(a3);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return (char *)v36;
}

void sub_1BC175CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  objc_class *v6;
  id v7;
  id v8;
  int v9;
  objc_super v10;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (unsigned __int8 *)v4;
    v6 = (objc_class *)type metadata accessor for TileTipView();
    if ((sub_1BC2B4A78() & 1) == 0)
    {
      v7 = objc_msgSend(v5, sel_traitCollection);
      v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);
      v9 = sub_1BC2B4ACC() & 1;

      if (v9 != v5[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout])
      {
        sub_1BC175DCC(v9);
        objc_msgSend(v5, sel_invalidateIntrinsicContentSize);
        v10.receiver = v5;
        v10.super_class = v6;
        objc_msgSendSuper2(&v10, sel_layoutSubviews);
      }
    }

  }
}

void sub_1BC175DCC(int a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  double v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  unint64_t v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  NSObject *v124;
  uint64_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  uint64_t v135;
  void *v136;
  void *v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  uint64_t v151;
  char v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  double v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  id v175;
  id v176;
  id v177;
  int v178;
  uint64_t v179;
  uint64_t v180;

  v2 = v1;
  swift_getObjectType();
  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v173 - v9;
  v11 = sub_1BC1753AC();
  v12 = objc_msgSend(v11, sel_image);

  if (v12)
  {
    objc_msgSend(v12, sel_size);
    v14 = v13;
    v16 = v15;
    v17 = sub_1BC1755C8();
    v18 = objc_msgSend(v17, sel_titleLabel);

    if (v18)
    {
      v178 = a1;
      v175 = v12;
      sub_1BC177178();
      objc_msgSend(v2, sel_setLayoutMargins_, 11.0, 13.0, 11.0, 13.0);
      v176 = objc_msgSend(v2, sel_layoutMarginsGuide);
      sub_1BC0E7940();
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1BC2BD770;
      v20 = sub_1BC175244();
      v21 = objc_msgSend(v20, sel_topAnchor);

      v22 = objc_msgSend(v2, sel_topAnchor);
      v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

      *(_QWORD *)(v19 + 32) = v23;
      v24 = sub_1BC175244();
      v177 = v18;
      v25 = objc_msgSend(v24, sel_trailingAnchor);

      v26 = objc_msgSend(v2, sel_trailingAnchor);
      v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

      *(_QWORD *)(v19 + 40) = v27;
      v28 = sub_1BC175244();
      v29 = objc_msgSend(v28, sel_widthAnchor);

      v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, v14 + 26.0);
      *(_QWORD *)(v19 + 48) = v30;
      v31 = sub_1BC175244();
      v32 = objc_msgSend(v31, sel_heightAnchor);

      v33 = objc_msgSend(v32, sel_constraintEqualToConstant_, v16 + 22.0);
      *(_QWORD *)(v19 + 56) = v33;
      v34 = sub_1BC1753AC();
      v35 = objc_msgSend(v34, sel_topAnchor);

      v36 = objc_msgSend(v2, sel_topAnchor);
      v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, 11.0);

      *(_QWORD *)(v19 + 64) = v37;
      v38 = sub_1BC1753AC();
      v39 = objc_msgSend(v38, sel_trailingAnchor);

      v40 = objc_msgSend(v2, sel_layoutMarginsGuide);
      v41 = objc_msgSend(v40, sel_trailingAnchor);

      v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v41);
      *(_QWORD *)(v19 + 72) = v42;
      v43 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView];
      v44 = objc_msgSend(v43, sel_topAnchor);
      v45 = objc_msgSend(v2, sel_topAnchor);
      v46 = objc_msgSend(v44, (SEL)&selRef_estimatedDimension_ + 7, v45, 11.0);

      *(_QWORD *)(v19 + 80) = v46;
      v47 = objc_msgSend(v43, sel_leadingAnchor);
      v48 = objc_msgSend(v2, (SEL)&ShapeCell.base_props + 6);
      v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

      *(_QWORD *)(v19 + 88) = v49;
      v50 = objc_msgSend(v43, sel_widthAnchor);
      v51 = objc_msgSend(v50, sel_constraintEqualToConstant_, 45.0);

      *(_QWORD *)(v19 + 96) = v51;
      v174 = v43;
      v52 = objc_msgSend(v43, sel_heightAnchor);
      v53 = objc_msgSend(v52, sel_constraintEqualToConstant_, 45.0);

      *(_QWORD *)(v19 + 104) = v53;
      v54 = sub_1BC174E48();
      v55 = objc_msgSend(v54, sel_topAnchor);

      v56 = sub_1BC174C48();
      v57 = objc_msgSend(v56, sel_bottomAnchor);

      v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v57, 4.0);
      *(_QWORD *)(v19 + 112) = v58;
      v59 = sub_1BC174E48();
      v60 = objc_msgSend(v59, sel_leadingAnchor);

      v61 = sub_1BC174C48();
      v62 = objc_msgSend(v61, sel_leadingAnchor);

      v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v62);
      *(_QWORD *)(v19 + 120) = v63;
      v64 = sub_1BC174E48();
      v65 = objc_msgSend(v64, sel_trailingAnchor);

      v66 = objc_msgSend(v2, sel_trailingAnchor);
      v67 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v66);

      *(_QWORD *)(v19 + 128) = v67;
      v68 = sub_1BC174ED0();
      v69 = objc_msgSend(v68, sel_leadingAnchor);

      v70 = sub_1BC174C48();
      v71 = objc_msgSend(v70, sel_leadingAnchor);

      v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v71);
      *(_QWORD *)(v19 + 136) = v72;
      v73 = sub_1BC174ED0();
      v74 = objc_msgSend(v73, sel_trailingAnchor);

      v75 = objc_msgSend(v2, sel_trailingAnchor);
      v76 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v75);

      *(_QWORD *)(v19 + 144) = v76;
      v77 = sub_1BC174ED0();
      v78 = objc_msgSend(v77, sel_bottomAnchor);

      v79 = sub_1BC1750E0();
      v80 = objc_msgSend(v79, sel_topAnchor);

      v81 = -11.0;
      v82 = objc_msgSend(v78, sel_constraintEqualToAnchor_constant_, v80, -11.0);

      *(_QWORD *)(v19 + 152) = v82;
      v83 = sub_1BC1750E0();
      v84 = objc_msgSend(v83, sel_heightAnchor);

      v85 = objc_msgSend(v84, sel_constraintEqualToConstant_, 1.0);
      *(_QWORD *)(v19 + 160) = v85;
      v86 = sub_1BC1750E0();
      v87 = objc_msgSend(v86, sel_leadingAnchor);

      v88 = sub_1BC174E48();
      v89 = objc_msgSend(v88, sel_leadingAnchor);

      v90 = objc_msgSend(v87, sel_constraintEqualToAnchor_, v89);
      *(_QWORD *)(v19 + 168) = v90;
      v91 = sub_1BC1750E0();
      v92 = objc_msgSend(v91, sel_trailingAnchor);

      v93 = objc_msgSend(v2, sel_trailingAnchor);
      v94 = objc_msgSend(v92, sel_constraintEqualToAnchor_, v93);

      *(_QWORD *)(v19 + 176) = v94;
      v95 = sub_1BC1750E0();
      v96 = objc_msgSend(v95, sel_bottomAnchor);

      v97 = v177;
      v98 = objc_msgSend(v177, sel_topAnchor);
      v99 = objc_msgSend(v96, sel_constraintEqualToAnchor_constant_, v98, -11.0);

      *(_QWORD *)(v19 + 184) = v99;
      v100 = sub_1BC1755C8();
      v101 = objc_msgSend(v100, sel_leadingAnchor);

      v102 = sub_1BC174E48();
      v103 = objc_msgSend(v102, sel_leadingAnchor);

      v104 = objc_msgSend(v101, sel_constraintEqualToAnchor_, v103);
      *(_QWORD *)(v19 + 192) = v104;
      v105 = sub_1BC1755C8();
      v106 = objc_msgSend(v105, sel_trailingAnchor);

      v107 = sub_1BC174E48();
      v108 = objc_msgSend(v107, sel_trailingAnchor);

      v109 = objc_msgSend(v106, sel_constraintLessThanOrEqualToAnchor_, v108);
      *(_QWORD *)(v19 + 200) = v109;
      v110 = objc_msgSend(v97, sel_bottomAnchor);
      v111 = objc_msgSend(v176, sel_bottomAnchor);
      v112 = objc_msgSend(v110, sel_constraintEqualToAnchor_, v111);

      *(_QWORD *)(v19 + 208) = v112;
      v180 = v19;
      sub_1BC2B45A4();
      v113 = v180;
      v114 = sub_1BC174ED0();
      v115 = objc_msgSend(v114, sel_text);

      if (v115)
      {
        sub_1BC2B4460();

        sub_1BC2B44CC();
        v117 = v116;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v117)
          v81 = 0.0;
      }
      else
      {
        v81 = 0.0;
      }
      v130 = sub_1BC174E48();
      v131 = objc_msgSend(v130, sel_bottomAnchor);

      v132 = sub_1BC174ED0();
      v133 = objc_msgSend(v132, sel_topAnchor);

      v134 = objc_msgSend(v131, sel_constraintEqualToAnchor_constant_, v133, v81);
      v135 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint;
      v136 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint];
      *(_QWORD *)&v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint] = v134;

      v137 = *(void **)&v2[v135];
      if (v137)
        objc_msgSend(v137, sel_setActive_, 1);
      if ((v178 & 1) != 0)
      {
        v138 = sub_1BC174C48();
        v139 = objc_msgSend(v138, sel_topAnchor);

        v140 = v174;
        v141 = objc_msgSend(v174, sel_bottomAnchor);
        v142 = objc_msgSend(v139, sel_constraintEqualToAnchor_constant_, v141, 4.0);

        v143 = sub_1BC174C48();
        v144 = objc_msgSend(v143, sel_leadingAnchor);

        v145 = objc_msgSend(v140, sel_leadingAnchor);
        v146 = objc_msgSend(v144, (SEL)&selRef_sharedBehavior + 6, v145);

        v147 = sub_1BC174C48();
        v148 = objc_msgSend(v147, sel_trailingAnchor);

        v149 = objc_msgSend(v2, sel_trailingAnchor);
        v150 = objc_msgSend(v148, (SEL)&selRef_sharedBehavior + 6, v149);

        if (v113 >> 62)
        {
          swift_bridgeObjectRetain();
          v151 = sub_1BC2B52D0();
          swift_bridgeObjectRelease();
        }
        else
        {
          v151 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v152 = v178;
        v153 = v177;
        if (__OFADD__(v151, 3))
        {
          __break(1u);
        }
        else
        {
          sub_1BC177590(v151 + 3, 1);
          sub_1BC2B45A4();
          v113 = (unint64_t)v142;
          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_20:
            sub_1BC2B4604();
            sub_1BC2B45A4();
            v154 = v146;
            MEMORY[0x1BCCEDCF0]();
            if (*(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BC2B45C8();
            sub_1BC2B4604();
            sub_1BC2B45A4();
            v155 = v150;
            MEMORY[0x1BCCEDCF0]();
            if (*(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BC2B45C8();
            sub_1BC2B4604();
            sub_1BC2B45A4();
LABEL_42:

            sub_1BC1749D0(v180);
            v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout] = v152 & 1;
            return;
          }
        }
        sub_1BC2B45C8();
        goto LABEL_20;
      }
      v156 = v174;
      if (objc_msgSend(v174, sel_isHidden))
        v157 = objc_msgSend(v2, sel_leadingAnchor);
      else
        v157 = objc_msgSend(v156, sel_trailingAnchor);
      v158 = v157;
      if (objc_msgSend(v156, sel_isHidden))
        v159 = 0.0;
      else
        v159 = 11.0;
      v160 = sub_1BC174C48();
      v161 = objc_msgSend(v160, sel_topAnchor);

      v162 = objc_msgSend(v2, sel_topAnchor);
      v163 = objc_msgSend(v161, sel_constraintEqualToAnchor_constant_, v162, 11.0);

      v164 = sub_1BC174C48();
      v165 = objc_msgSend(v164, sel_leadingAnchor);

      v174 = v158;
      v166 = objc_msgSend(v165, sel_constraintEqualToAnchor_constant_, v158, v159);

      v167 = sub_1BC174C48();
      v168 = objc_msgSend(v167, sel_trailingAnchor);

      v169 = sub_1BC1753AC();
      v170 = objc_msgSend(v169, sel_leadingAnchor);

      v171 = objc_msgSend(v168, sel_constraintEqualToAnchor_constant_, v170, -10.0);
      if (v113 >> 62)
      {
        swift_bridgeObjectRetain();
        v172 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v172 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v152 = v178;
      v153 = v177;
      if (__OFADD__(v172, 3))
      {
        __break(1u);
      }
      else
      {
        sub_1BC177590(v172 + 3, 1);
        sub_1BC2B45A4();
        v113 = (unint64_t)v163;
        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_37:
          sub_1BC2B4604();
          sub_1BC2B45A4();
          v154 = v166;
          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();
          v155 = v171;
          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();

          goto LABEL_42;
        }
      }
      sub_1BC2B45C8();
      goto LABEL_37;
    }
    sub_1BC2B39A4();
    v124 = sub_1BC2B39D4();
    v125 = sub_1BC2B48C8();
    if (os_log_type_enabled(v124, (os_log_type_t)v125))
    {
      v126 = (uint8_t *)swift_slowAlloc();
      v127 = swift_slowAlloc();
      v180 = v127;
      v175 = v12;
      *(_DWORD *)v126 = 136315138;
      v128 = sub_1BC2B54F8();
      v179 = sub_1BC12540C(v128, v129, &v180);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v124, (os_log_type_t)v125, "[%s] Action button label is nil.", v126, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v127, -1, -1);
      MEMORY[0x1BCCEF3A0](v126, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    sub_1BC2B39A4();
    v118 = sub_1BC2B39D4();
    v119 = sub_1BC2B48C8();
    if (os_log_type_enabled(v118, v119))
    {
      v120 = (uint8_t *)swift_slowAlloc();
      v121 = swift_slowAlloc();
      v180 = v121;
      *(_DWORD *)v120 = 136315138;
      v122 = sub_1BC2B54F8();
      v179 = sub_1BC12540C(v122, v123, &v180);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v118, v119, "[%s] Dismiss button image is nil.", v120, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v121, -1, -1);
      MEMORY[0x1BCCEF3A0](v120, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

void sub_1BC177178()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  id v21;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView);
  v2 = objc_msgSend(v1, sel_image);
  v3 = v2;
  if (v2)

  objc_msgSend(v1, sel_setHidden_, v3 == 0);
  v4 = sub_1BC174ED0();
  v5 = sub_1BC174ED0();
  v6 = objc_msgSend(v5, sel_text);

  if (v6 && (sub_1BC2B4460(), v6, sub_1BC2B44CC(), v8 = v7, swift_bridgeObjectRelease(), v8))
  {
    swift_bridgeObjectRelease();
    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  objc_msgSend(v4, sel_setHidden_, v9);

  v10 = sub_1BC175244();
  v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss);
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss + 8);
  if (v12)
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v12;
    *(_QWORD *)(v14 + 24) = v13;
    v15 = sub_1BC1777D0;
  }
  else
  {
    v15 = 0;
  }
  sub_1BC0F2690(v12);
  sub_1BC0F2600((uint64_t)v15);
  objc_msgSend(v10, sel_setHidden_, v12 == 0);

  v16 = sub_1BC1753AC();
  v17 = *v11;
  v18 = v11[1];
  v21 = v16;
  if (*v11)
  {
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v17;
    *(_QWORD *)(v19 + 24) = v18;
    v20 = sub_1BC118CE4;
  }
  else
  {
    v20 = 0;
  }
  sub_1BC0F2690(v17);
  sub_1BC0F2600((uint64_t)v20);
  objc_msgSend(v21, sel_setHidden_, v17 == 0);

}

id sub_1BC177460()
{
  return sub_1BC0F3CF0(type metadata accessor for TileTipView);
}

uint64_t type metadata accessor for TileTipView()
{
  return objc_opt_self();
}

uint64_t sub_1BC17756C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC177590(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1BCCEE95C](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

void sub_1BC17764C()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints] = MEMORY[0x1E0DEE9D8];
  v2 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView;
  *(_QWORD *)&v0[v2] = sub_1BC174AC8();
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___subdetailLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC17774C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC177770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC175CAC(a1, a2, v2);
}

uint64_t sub_1BC177778(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FBCB0, type metadata accessor for TileItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC1777D4()
{
  qword_1EF402718 = 0;
}

uint64_t sub_1BC1777E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC1798A0();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC177850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1778A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1798A0();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC17790C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC177954;
}

uint64_t sub_1BC177954(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1798A0();
  return result;
}

id sub_1BC1779B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  void *v13;
  id v14;
  uint64_t v16;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 2);
    v7 = sub_1BC2B4460();
    v9 = v8;
    v10 = v5;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v16 = v7;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v16, v9);

    LODWORD(v12) = 1148846080;
    objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 1, v12);
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

id sub_1BC177C14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator);
  }
  else
  {
    v4 = sub_1BC177C70();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC177C70()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  double v4;

  sub_1BC1CE090();
  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 0);
  v3 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v2, sel_setTintColor_, v3);

  objc_msgSend(v2, sel_setContentMode_, 1);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);

  return v2;
}

id sub_1BC177D80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B34DC()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1BC2B3314();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC177E90()
{
  return sub_1BC177F88(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___medicationDetailStackView, 0.0);
}

id sub_1BC177F04()
{
  return sub_1BC177F88(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___scheduleStackView, 2.0);
}

id sub_1BC177F78()
{
  return sub_1BC177F88(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___metaScheduleStackView, 0.0);
}

id sub_1BC177F88(uint64_t *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v7;
  void *v8;
  id v9;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v7, sel_setAxis_, 1);
    objc_msgSend(v7, sel_setAlignment_, 1);
    objc_msgSend(v7, sel_setSpacing_, a2);
    v8 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v7;
    v5 = v7;

    v4 = 0;
  }
  v9 = v4;
  return v5;
}

id sub_1BC1780B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView);
  }
  else
  {
    v4 = sub_1BC178148();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC178148()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  sub_1BC0E7940();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2BB4D0;
  *(_QWORD *)(v0 + 32) = sub_1BC177E90();
  *(_QWORD *)(v0 + 40) = sub_1BC177F04();
  *(_QWORD *)(v0 + 48) = sub_1BC177F78();
  sub_1BC2B45A4();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v2 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAxis_, 1);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setSpacing_, 6.0);
  return v3;
}

id sub_1BC178270()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint];
  }
  else
  {
    v4 = objc_msgSend(v0, sel_heightAnchor);
    v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, 118.0);

    v6 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC178314(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v23;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier];
  *(_QWORD *)v9 = 0xD000000000000016;
  *((_QWORD *)v9 + 1) = 0x80000001BC2BD9C0;
  v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___medicationDetailStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___scheduleStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___metaScheduleStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView] = 0;
  v11 = v4;
  sub_1BC2B39A4();
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint] = 0;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for MedicationListItemCell();
  v12 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  v13 = sub_1BC1779B4();
  v14 = sub_1BC1780B4();
  v15 = sub_1BC177D80();
  v16 = sub_1BC177C14();
  objc_msgSend(v12, sel_addSubview_, v13);
  objc_msgSend(v12, sel_addSubview_, v14);
  objc_msgSend(v12, sel_addSubview_, v15);
  objc_msgSend(v12, sel_addSubview_, v16);

  sub_1BC178930();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC2B92C0;
  v18 = sub_1BC2B3D40();
  v19 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v19;
  v20 = sub_1BC2B4328();
  v21 = sub_1BC0E519C(&qword_1EF3FBD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2F348], MEMORY[0x1E0D2F340]);
  *(_QWORD *)(v17 + 48) = v20;
  *(_QWORD *)(v17 + 56) = v21;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v12;
}

id sub_1BC1785E8(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v19;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier];
  *(_QWORD *)v3 = 0xD000000000000016;
  *((_QWORD *)v3 + 1) = 0x80000001BC2BD9C0;
  v4 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___medicationDetailStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___scheduleStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___metaScheduleStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView] = 0;
  v5 = v1;
  sub_1BC2B39A4();
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint] = 0;

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for MedicationListItemCell();
  v6 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    v9 = sub_1BC1779B4();
    v10 = sub_1BC1780B4();
    v11 = sub_1BC177D80();
    v12 = sub_1BC177C14();
    objc_msgSend(v8, sel_addSubview_, v9);
    objc_msgSend(v8, sel_addSubview_, v10);
    objc_msgSend(v8, sel_addSubview_, v11);
    objc_msgSend(v8, sel_addSubview_, v12);

    sub_1BC178930();
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BC2B92C0;
    v14 = sub_1BC2B3D40();
    v15 = MEMORY[0x1E0DC29B0];
    *(_QWORD *)(v13 + 32) = v14;
    *(_QWORD *)(v13 + 40) = v15;
    v16 = sub_1BC2B4328();
    v17 = sub_1BC0E519C(&qword_1EF3FBD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2F348], MEMORY[0x1E0D2F340]);
    *(_QWORD *)(v13 + 48) = v16;
    *(_QWORD *)(v13 + 56) = v17;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BC13079C();
    sub_1BC2B4CC4();

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {

  }
  return v7;
}

void sub_1BC1788B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BC1798A0();

  }
  swift_beginAccess();
  v6 = MEMORY[0x1BCCEF478](v3);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1BC178930();

  }
}

void sub_1BC178930()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;

  v1 = v0;
  v2 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints];
  swift_bridgeObjectRetain();
  v4 = sub_1BC178270();
  swift_bridgeObjectRetain();
  v5 = v4;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
  v6 = (void *)objc_opt_self();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  swift_bridgeObjectRelease();

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v7 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_deactivateConstraints_, v7);

  v8 = sub_1BC2B4CB8();
  sub_1BC0E7940();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC2BD920;
  v10 = sub_1BC177D80();
  v11 = objc_msgSend(v10, sel_topAnchor);

  v12 = objc_msgSend(v1, sel_topAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v9 + 32) = v13;
  v14 = sub_1BC177D80();
  v15 = objc_msgSend(v14, sel_leadingAnchor);

  v16 = objc_msgSend(v1, sel_leadingAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v9 + 40) = v17;
  v18 = sub_1BC177D80();
  v19 = v18;
  if ((v8 & 1) != 0)
  {
    v20 = objc_msgSend(v18, sel_heightAnchor);

    v21 = objc_msgSend(v20, sel_constraintEqualToConstant_, 102.0);
    *(_QWORD *)(v9 + 48) = v21;
    v22 = sub_1BC177D80();
    v23 = objc_msgSend(v22, sel_trailingAnchor);

    v24 = objc_msgSend(v1, sel_trailingAnchor);
    v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

    *(_QWORD *)(v9 + 56) = v25;
    v26 = sub_1BC1779B4();
    v27 = objc_msgSend(v26, sel_leadingAnchor);

    v28 = objc_msgSend(v1, sel_leadingAnchor);
    v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v28, 16.0);

    *(_QWORD *)(v9 + 64) = v29;
    v30 = sub_1BC1779B4();
    v31 = objc_msgSend(v30, sel_topAnchor);

    v32 = sub_1BC177D80();
    v33 = objc_msgSend(v32, sel_bottomAnchor);

    v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 16.0);
    *(_QWORD *)(v9 + 72) = v34;
    v35 = sub_1BC1779B4();
    v36 = objc_msgSend(v35, sel_trailingAnchor);

    v37 = sub_1BC177C14();
    v38 = objc_msgSend(v37, sel_leadingAnchor);

    v39 = objc_msgSend(v36, sel_constraintLessThanOrEqualToAnchor_constant_, v38, -8.0);
    *(_QWORD *)(v9 + 80) = v39;
    v40 = sub_1BC177C14();
    v41 = objc_msgSend(v40, sel_trailingAnchor);

    v42 = objc_msgSend(v1, sel_trailingAnchor);
    v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v42, -16.0);

    *(_QWORD *)(v9 + 88) = v43;
    v44 = sub_1BC177C14();
    v45 = objc_msgSend(v44, sel_firstBaselineAnchor);

    v46 = sub_1BC1779B4();
    v47 = objc_msgSend(v46, sel_firstBaselineAnchor);

    v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v47);
    *(_QWORD *)(v9 + 96) = v48;
    v49 = sub_1BC1780B4();
    v50 = objc_msgSend(v49, sel_topAnchor);

    v51 = sub_1BC1779B4();
    v52 = objc_msgSend(v51, sel_bottomAnchor);

    if (qword_1EF3F80C8 != -1)
      swift_once();
    v53 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v52, -*(double *)&qword_1EF402718);

    *(_QWORD *)(v9 + 104) = v53;
    v54 = sub_1BC1780B4();
    v55 = objc_msgSend(v54, sel_leadingAnchor);

    v56 = sub_1BC1779B4();
    v57 = objc_msgSend(v56, sel_leadingAnchor);

    v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v57);
    *(_QWORD *)(v9 + 112) = v58;
    v59 = sub_1BC1780B4();
    v60 = objc_msgSend(v59, sel_trailingAnchor);

    v61 = objc_msgSend(v1, sel_trailingAnchor);
    v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_constant_, v61, -34.0);

    *(_QWORD *)(v9 + 120) = v62;
    v63 = sub_1BC1780B4();
    v64 = objc_msgSend(v63, sel_bottomAnchor);

    v65 = objc_msgSend(v1, sel_bottomAnchor);
    v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v65, -16.0);
  }
  else
  {
    v67 = objc_msgSend(v18, sel_widthAnchor);

    v68 = objc_msgSend(v67, sel_constraintEqualToConstant_, 102.0);
    *(_QWORD *)(v9 + 48) = v68;
    v69 = sub_1BC177D80();
    v70 = objc_msgSend(v69, sel_bottomAnchor);

    v71 = objc_msgSend(v1, sel_bottomAnchor);
    v72 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v71);

    *(_QWORD *)(v9 + 56) = v72;
    v73 = sub_1BC1779B4();
    v74 = objc_msgSend(v73, sel_leadingAnchor);

    v75 = sub_1BC177D80();
    v76 = objc_msgSend(v75, sel_trailingAnchor);

    v77 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v76, 16.0);
    *(_QWORD *)(v9 + 64) = v77;
    v78 = sub_1BC1779B4();
    v79 = objc_msgSend(v78, sel_topAnchor);

    v80 = objc_msgSend(v1, sel_topAnchor);
    v81 = objc_msgSend(v79, sel_constraintEqualToAnchor_constant_, v80, 16.0);

    *(_QWORD *)(v9 + 72) = v81;
    v82 = sub_1BC1779B4();
    v83 = objc_msgSend(v82, sel_trailingAnchor);

    v84 = sub_1BC177C14();
    v85 = objc_msgSend(v84, sel_leadingAnchor);

    v86 = objc_msgSend(v83, sel_constraintLessThanOrEqualToAnchor_constant_, v85, -8.0);
    *(_QWORD *)(v9 + 80) = v86;
    v87 = sub_1BC177C14();
    v88 = objc_msgSend(v87, sel_trailingAnchor);

    v89 = objc_msgSend(v1, sel_trailingAnchor);
    v90 = objc_msgSend(v88, sel_constraintEqualToAnchor_constant_, v89, -16.0);

    *(_QWORD *)(v9 + 88) = v90;
    v91 = sub_1BC177C14();
    v92 = objc_msgSend(v91, sel_firstBaselineAnchor);

    v93 = sub_1BC1779B4();
    v94 = objc_msgSend(v93, sel_firstBaselineAnchor);

    v95 = objc_msgSend(v92, sel_constraintEqualToAnchor_, v94);
    *(_QWORD *)(v9 + 96) = v95;
    v96 = sub_1BC1780B4();
    v97 = objc_msgSend(v96, sel_topAnchor);

    v98 = sub_1BC1779B4();
    v99 = objc_msgSend(v98, sel_bottomAnchor);

    if (qword_1EF3F80C8 != -1)
      swift_once();
    v100 = objc_msgSend(v97, sel_constraintEqualToAnchor_constant_, v99, *(double *)&qword_1EF402718);

    *(_QWORD *)(v9 + 104) = v100;
    v101 = sub_1BC1780B4();
    v102 = objc_msgSend(v101, sel_leadingAnchor);

    v103 = sub_1BC1779B4();
    v104 = objc_msgSend(v103, sel_leadingAnchor);

    v105 = objc_msgSend(v102, sel_constraintEqualToAnchor_, v104);
    *(_QWORD *)(v9 + 112) = v105;
    v106 = sub_1BC1780B4();
    v107 = objc_msgSend(v106, sel_trailingAnchor);

    v108 = objc_msgSend(v1, sel_trailingAnchor);
    v109 = objc_msgSend(v107, sel_constraintEqualToAnchor_constant_, v108, -8.0);

    *(_QWORD *)(v9 + 120) = v109;
    v110 = sub_1BC1780B4();
    v64 = objc_msgSend(v110, sel_lastBaselineAnchor);

    v65 = objc_msgSend(v1, sel_bottomAnchor);
    v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v65, -16.0);
  }
  v111 = v66;

  *(_QWORD *)(v9 + 128) = v111;
  sub_1BC2B45A4();
  *(_QWORD *)&v1[v2] = v9;
  swift_bridgeObjectRelease();
  v112 = *(_QWORD *)&v1[v2];
  swift_bridgeObjectRetain();
  v113 = sub_1BC178270();
  swift_bridgeObjectRetain();
  v114 = v113;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  swift_bridgeObjectRelease();

  v115 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v115);

}

uint64_t sub_1BC179600()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  id v18;
  objc_super v19;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v19 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = (void *)sub_1BC2B3AE8();
  v12 = (objc_class *)type metadata accessor for MedicationListItemCell();
  v19.receiver = v1;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1BCCEE230]();
    v13 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_1BC1640DC((uint64_t)v10, (uint64_t)v8);
      MEMORY[0x1BCCEE23C](v8);
      v14 = (uint64_t)v10;
      return sub_1BC164138(v14);
    }
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D00();
    sub_1BC2B3B18();
    v17 = v10;
  }
  else
  {
    MEMORY[0x1BCCEE230]();
    v15 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15))
    {
      sub_1BC1640DC((uint64_t)v5, (uint64_t)v8);
      MEMORY[0x1BCCEE23C](v8);
      v14 = (uint64_t)v5;
      return sub_1BC164138(v14);
    }
    v18 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
    sub_1BC2B3B18();
    v17 = v5;
  }
  return MEMORY[0x1BCCEE23C](v17);
}

uint64_t sub_1BC1798A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v54;
  id v55;
  _QWORD v56[2];
  _QWORD *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FBD28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2F3A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v62 = (char *)v56 - v7;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], v5);
  MEMORY[0x1E0C80A78](v8);
  v70 = v0;
  v9 = (uint64_t)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item];
  swift_beginAccess();
  sub_1BC0E5774(v9, (uint64_t)&v80);
  if (!v82)
  {
    sub_1BC0F7954((uint64_t)&v80);
LABEL_6:
    sub_1BC2B39A4();
    v44 = v70;
    v45 = sub_1BC2B39D4();
    v46 = sub_1BC2B48C8();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v78 = v1;
      v48 = (uint8_t *)v47;
      v49 = v2;
      v50 = swift_slowAlloc();
      v79 = v50;
      *(_DWORD *)v48 = 136446210;
      sub_1BC0E5774(v9, (uint64_t)&v80);
      sub_1BC17C1C8(0, (unint64_t *)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC0E7AD8);
      v51 = sub_1BC2B4490();
      *(_QWORD *)&v80 = sub_1BC12540C(v51, v52, &v79);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v45, v46, "Incorrect view model for MedicationListItemCell: %{public}s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v50, -1, -1);
      MEMORY[0x1BCCEF3A0](v48, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v4, v78);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for MedicationListItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v10 = v79;
  v69 = *MEMORY[0x1E0D2F528];
  v11 = sub_1BC2B4460();
  v13 = v12;
  *(_QWORD *)&v80 = 46;
  *((_QWORD *)&v80 + 1) = 0xE100000000000000;
  v14 = v70;
  v15 = *(_QWORD *)&v70[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier];
  v16 = *(_QWORD *)&v70[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier + 8];
  swift_bridgeObjectRetain();
  v68 = v15;
  sub_1BC2B44FC();
  v67 = v16;
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v79 = *(_QWORD *)(v10 + 80);
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v80 = v11;
  *((_QWORD *)&v80 + 1) = v13;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);

  sub_1BC2B263C();
  v18 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  v19 = sub_1BC177D80();
  v20 = *(void **)(v10 + 16);
  v21 = *(id *)(v10 + 24);
  swift_retain();
  v22 = v20;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  swift_release();

  sub_1BC2B3308();
  v23 = sub_1BC1779B4();
  *(_QWORD *)&v80 = *(_QWORD *)(v10 + 16);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B3758();
  v24 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setText_, v24);

  v25 = sub_1BC1779B4();
  v66 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v26 = (void *)sub_1BC2B4C64();
  objc_msgSend(v25, sel_setFont_, v26);

  v27 = sub_1BC177E90();
  v28 = sub_1BC177F04();
  v29 = sub_1BC177F78();
  v30 = v27;
  sub_1BC2B4C94();

  v31 = v28;
  sub_1BC2B4C94();

  v32 = v29;
  sub_1BC2B4C94();

  v33 = *(_OWORD *)(v10 + 16);
  v56[1] = v10;
  v34 = *(_QWORD *)(v10 + 32);
  v80 = v33;
  v81 = v34;
  v57 = MedicationListViewData.items.getter();
  v35 = v57[2];
  if (v35)
  {
    v64 = *MEMORY[0x1E0DC4B10];
    v63 = *MEMORY[0x1E0DC1440];
    v65 = 0x80000001BC2CD230;
    v61 = *MEMORY[0x1E0DC1140];
    v60 = *MEMORY[0x1E0DC1138];
    v59 = xmmword_1BC2B92C0;
    v58 = MEMORY[0x1E0DEE9B8] + 8;
    v73 = v35;
    v36 = *((unsigned __int8 *)v57 + 32);
    v37 = (void *)v57[5];
    v75 = v57[6];
    v71 = v57[8];
    v38 = v57[9];
    v74 = v57[10];
    v39 = v57[11];
    v40 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
    v77 = v39;
    swift_bridgeObjectRetain();
    v41 = v37;
    swift_bridgeObjectRetain();
    v78 = v38;
    swift_bridgeObjectRetain();
    v42 = objc_msgSend(v40, sel_init);
    sub_1BC2B4460();
    *(_QWORD *)&v80 = 0;
    *((_QWORD *)&v80 + 1) = 0xE000000000000000;
    v43 = v42;
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v80 = 46;
    *((_QWORD *)&v80 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    v76 = v41;
    v72 = v36;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v54 = sub_1BC177F78();
  v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v54, sel_addArrangedSubview_, v55);

  swift_bridgeObjectRetain();
  sub_1BC2B4AFC();
  return swift_release();
}

uint64_t type metadata accessor for MedicationListItemCell()
{
  uint64_t result;

  result = qword_1EDA0E5A8;
  if (!qword_1EDA0E5A8)
    return swift_getSingletonMetadata();
  return result;
}

id MedicationListItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationListItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC17A7CC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v1, (uint64_t)v6);
  if (v7)
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    type metadata accessor for MedicationListItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_beginAccess();
      swift_retain();
      swift_release();
      sub_1BC0E5774(v1, (uint64_t)v6);
      if (v7)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v2 = *(id *)(v5 + 16);
          swift_release();
          v3 = sub_1BC2B3944();
          swift_release();

          return (v3 & 1) == 0;
        }
      }
      else
      {
        sub_1BC0F7954((uint64_t)v6);
      }
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v6);
  }
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

void sub_1BC17A974()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  char v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[3];
  void *v23;
  uint64_t (*v24)(uint64_t, void *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  ObjectType = swift_getObjectType();
  v2 = sub_1BC2B3968();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v6, (uint64_t)aBlock);
  if (!v23)
    goto LABEL_21;
  v20 = v0;
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for MedicationListItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  swift_beginAccess();
  swift_retain();
  swift_release();
  sub_1BC0E5774(v6, (uint64_t)aBlock);
  if (!v23)
    goto LABEL_19;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  v7 = *(id *)(v28 + 16);
  swift_release();
  v8 = sub_1BC2B3944();
  swift_release();

  sub_1BC0E5774(v6, (uint64_t)aBlock);
  if (!v23)
  {
LABEL_21:
    sub_1BC0F7954((uint64_t)aBlock);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  swift_beginAccess();
  swift_retain();
  swift_release();
  sub_1BC0E5774(v6, (uint64_t)aBlock);
  if (!v23)
    goto LABEL_19;
  v21 = ObjectType;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  v9 = *(id *)(v27 + 16);
  swift_release();
  ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(v9);
  swift_release();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
    return;
  sub_1BC0E5774(v6, (uint64_t)aBlock);
  if (!v23)
    goto LABEL_19;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_27;
  v10 = *(id *)(v27 + 16);
  swift_release();
  v11 = objc_msgSend(v10, sel_firstOntologyCoding);

  if (!v11)
    return;

  sub_1BC0E5774(v6, (uint64_t)aBlock);
  if (!v23)
    goto LABEL_23;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    while (1)
    {
LABEL_22:
      sub_1BC2B52B8();
      __break(1u);
LABEL_23:
      sub_1BC0F7954((uint64_t)aBlock);
    }
  }
  v12 = v27;
  swift_beginAccess();
  v13 = *(id *)(v12 + 40);
  swift_release();
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C440]), sel_initWithHealthStore_, v13);

  sub_1BC0E5774(v6, (uint64_t)aBlock);
  if (!v23)
  {
LABEL_19:
    sub_1BC0F7954((uint64_t)aBlock);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  v15 = *(id *)(v26 + 16);
  swift_release();
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17 = swift_allocObject();
  v18 = v21;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v18;
  v24 = sub_1BC17C1C0;
  v25 = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC2599E8;
  v23 = &block_descriptor_17;
  v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_deleteDismissedPregnancyLactationInteractionsForMedication_interactionTypes_completion_, v15, 0, v19);
  _Block_release(v19);

}

uint64_t sub_1BC17AE58(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t (*v39)(_BYTE *, uint64_t);
  _BYTE *v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _BYTE v49[4];
  int v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58[6];

  v58[4] = *MEMORY[0x1E0C80C00];
  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v49[-v10];
  if (a2)
  {
    swift_beginAccess();
    result = MEMORY[0x1BCCEF478](a3 + 16);
    if (!result)
      return result;
    v13 = (void *)result;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v9, result + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_logger, v5);

    swift_retain();
    v14 = a2;
    swift_retain();
    v15 = a2;
    v16 = sub_1BC2B39D4();
    v17 = sub_1BC2B48C8();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      v50 = v17;
      v53 = v5;
      v18 = swift_slowAlloc();
      v51 = (_QWORD *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v58[0] = v52;
      *(_DWORD *)v18 = 136446978;
      v19 = sub_1BC2B54F8();
      v55 = sub_1BC12540C(v19, v20, v58);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      v55 = 0xD000000000000015;
      v56 = 0x80000001BC2CD210;
      v21 = sub_1BC2B44A8();
      v55 = sub_1BC12540C(v21, v22, v58);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2112;
      swift_beginAccess();
      v23 = MEMORY[0x1BCCEF478](a3 + 16);
      v24 = (id)v23;
      if (!v23)
      {
        v55 = 0;
        goto LABEL_18;
      }
      v25 = v23 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
      swift_beginAccess();
      sub_1BC0E5774(v25, (uint64_t)&v55);
      if (v57)
      {
        sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
        type metadata accessor for MedicationListItem();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v26 = *(id *)(v54 + 16);

          swift_release();
          v24 = objc_msgSend(v26, sel_semanticIdentifier);

          v55 = (uint64_t)v24;
LABEL_18:
          sub_1BC2B4FD0();
          v42 = v51;
          *v51 = v24;
          swift_release_n();
          *(_WORD *)(v18 + 32) = 2080;
          v55 = (uint64_t)a2;
          v43 = a2;
          sub_1BC17C1C8(0, &qword_1EF3F8D40, (uint64_t)&qword_1EDA0FEA0, MEMORY[0x1E0DEDAF0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC0E7AD8);
          v44 = sub_1BC2B4478();
          v55 = sub_1BC12540C(v44, v45, v58);
          sub_1BC2B4FD0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1BC0DC000, v16, (os_log_type_t)v50, "%{public}s] Unexpected error deleting dismissed %s interactions for medication: %@, error: %s", (uint8_t *)v18, 0x2Au);
          sub_1BC17C1C8(0, (unint64_t *)&qword_1EF3F90B8, (uint64_t)&qword_1EF3FBD20, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC0E1D38);
          swift_arrayDestroy();
          MEMORY[0x1BCCEF3A0](v42, -1, -1);
          v46 = v52;
          swift_arrayDestroy();
          MEMORY[0x1BCCEF3A0](v46, -1, -1);
          MEMORY[0x1BCCEF3A0](v18, -1, -1);

          v39 = *(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8);
          v40 = v9;
LABEL_21:
          v41 = v53;
          return v39(v40, v41);
        }

        goto LABEL_27;
      }

LABEL_25:
      swift_release();
      sub_1BC0F7954((uint64_t)&v55);
LABEL_28:
      result = sub_1BC2B52B8();
      __break(1u);
      return result;
    }
    swift_release_n();

    v39 = *(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8);
    v40 = v9;
  }
  else
  {
    swift_beginAccess();
    result = MEMORY[0x1BCCEF478](a3 + 16);
    if (!result)
      return result;
    v27 = (void *)result;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v11, result + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_logger, v5);

    swift_retain_n();
    v28 = sub_1BC2B39D4();
    v29 = sub_1BC2B48E0();
    if (os_log_type_enabled(v28, v29))
    {
      v53 = v5;
      v30 = swift_slowAlloc();
      v51 = (_QWORD *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v58[0] = v52;
      *(_DWORD *)v30 = 136446722;
      v31 = sub_1BC2B54F8();
      v55 = sub_1BC12540C(v31, v32, v58);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v55 = 0xD000000000000015;
      v56 = 0x80000001BC2CD210;
      v33 = sub_1BC2B44A8();
      v55 = sub_1BC12540C(v33, v34, v58);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2112;
      swift_beginAccess();
      v35 = MEMORY[0x1BCCEF478](a3 + 16);
      v36 = (id)v35;
      if (v35)
      {
        v37 = v35 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
        swift_beginAccess();
        sub_1BC0E5774(v37, (uint64_t)&v55);
        if (!v57)
          goto LABEL_25;
        sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
        type metadata accessor for MedicationListItem();
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_27:
          swift_release();
          goto LABEL_28;
        }
        v38 = *(id *)(v54 + 16);

        swift_release();
        v36 = objc_msgSend(v38, sel_semanticIdentifier);

        v55 = (uint64_t)v36;
      }
      else
      {
        v55 = 0;
      }
      sub_1BC2B4FD0();
      v47 = v51;
      *v51 = v36;
      swift_release_n();
      _os_log_impl(&dword_1BC0DC000, v28, v29, "%{public}s] Successfully deleted dismissed %s interactions for medication: %@", (uint8_t *)v30, 0x20u);
      sub_1BC17C1C8(0, (unint64_t *)&qword_1EF3F90B8, (uint64_t)&qword_1EF3FBD20, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC0E1D38);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v47, -1, -1);
      v48 = v52;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v48, -1, -1);
      MEMORY[0x1BCCEF3A0](v30, -1, -1);

      v39 = *(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8);
      v40 = v11;
      goto LABEL_21;
    }

    swift_release_n();
    v39 = *(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8);
    v40 = v11;
  }
  v41 = v5;
  return v39(v40, v41);
}

uint64_t MedicationListItemCell.leadingSwipeActionsConfigurationProvider.getter()
{
  return 0;
}

id MedicationListItemCell.trailingSwipeActionsConfigurationProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if ((sub_1BC17A7CC() & 1) != 0)
    v2 = sub_1BC17BBBC((uint64_t)sub_1BC17BAE4, v1);
  else
    v2 = sub_1BC17BDD8((uint64_t)sub_1BC17B9F4, v0);
  v3 = v2;
  sub_1BC0E7940();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v4 + 32) = v3;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, &qword_1EF3FBCD0);
  v5 = v3;
  v6 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v6);
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1BC17B878()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC17B89C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;

  v7 = a5 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCEF478](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v10;
    v11[3] = a3;
    v11[4] = a4;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a3;
    *(_QWORD *)(v12 + 24) = a4;
    swift_retain_n();
    swift_retain();
    v13 = _sSo17UIAlertControllerC19HealthMedicationsUIE31makeAlertForArchivingMedication9onConfirm0K6CancelAByyc_yycSgtFZ_0((uint64_t)sub_1BC17C248, (uint64_t)v11, (uint64_t)sub_1BC17C278, v12);
    swift_release();
    swift_release();
    swift_release();
    v14 = objc_msgSend(v9, sel_viewController);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, sel_presentViewController_animated_completion_, v13, 1, 0);

    }
  }
  else
  {
    a3();
  }
}

void sub_1BC17B9F4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1BC17B89C(a1, a2, a3, a4, v4);
}

uint64_t sub_1BC17B9FC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BC17A974();

  }
  return a2(1);
}

void sub_1BC17BA68(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = a5 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCEF478](v6);
  if (v7)
  {
    v8 = (void *)v7;
    sub_1BC17A974();
    ((void (*)(uint64_t))a3)(1);

  }
  else
  {
    a3();
  }
}

void sub_1BC17BAE4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1BC17BA68(a1, a2, a3, a4, v4);
}

id sub_1BC17BAEC()
{
  return MedicationListItemCell.trailingSwipeActionsConfigurationProvider.getter();
}

void sub_1BC17BB0C(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, sub_1BC17C188, v8);
  swift_release();
  swift_release();

}

id sub_1BC17BBBC(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD aBlock[6];

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v4 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_retain();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC17BB0C;
  aBlock[3] = &block_descriptor_10;
  v6 = _Block_copy(aBlock);
  v7 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  v8 = (void *)sub_1BC2B4430();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

id sub_1BC17BDD8(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD aBlock[6];

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v4 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_retain();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC17BB0C;
  aBlock[3] = &block_descriptor_10;
  v6 = _Block_copy(aBlock);
  v7 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  v8 = (void *)sub_1BC2B4430();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

uint64_t sub_1BC17BFF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t sub_1BC17C04C()
{
  return type metadata accessor for MedicationListItemCell();
}

uint64_t sub_1BC17C054()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B39E0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationListItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationListItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MedicationListItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MedicationListItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

void sub_1BC17C15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1788B4(a1, a2, v2);
}

uint64_t sub_1BC17C164()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC17C188(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1BC17C19C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC17C1C0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC17AE58(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1BC17C1C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BC2B4FA0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC17C21C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC17C248()
{
  uint64_t v0;

  return sub_1BC17B9FC(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1BC17C254()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC17C278()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t InteractionNoneFoundItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC17C2D8()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  return v2;
}

uint64_t InteractionNoneFoundItem.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for InteractionNoneFoundCell();
  sub_1BC0E008C(&qword_1EF3FBD30, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell, (uint64_t)&protocol conformance descriptor for InteractionNoneFoundCell);
  *(_QWORD *)(v0 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t InteractionNoneFoundItem.init()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for InteractionNoneFoundCell();
  sub_1BC0E008C(&qword_1EF3FBD30, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell, (uint64_t)&protocol conformance descriptor for InteractionNoneFoundCell);
  *(_QWORD *)(v0 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t sub_1BC17C3F4()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t InteractionNoneFoundItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionNoneFoundItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC17C478()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC17C4B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC17C4E8()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  return v2;
}

uint64_t sub_1BC17C53C(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI24InteractionNoneFoundItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BC17C548()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 112))();
}

uint64_t sub_1BC17C570()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC17C5B8()
{
  sub_1BC2B5450();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t _s19HealthMedicationsUI24InteractionNoneFoundItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v7;
  v3 = v9;
  v8 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  if (v4 == v8 && v3 == v10)
    v5 = 1;
  else
    v5 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BC17C6E4(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FBD38, a2, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNoneFoundItem, (uint64_t)&protocol conformance descriptor for InteractionNoneFoundItem);
}

uint64_t type metadata accessor for InteractionNoneFoundItem()
{
  return objc_opt_self();
}

uint64_t method lookup function for InteractionNoneFoundItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionNoneFoundItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of InteractionNoneFoundItem.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InteractionNoneFoundItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of InteractionNoneFoundItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1BC17C768(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC17C7C4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC17C80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC17C85C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC17C898()
{
  uint64_t v1;

  sub_1BC2B2438();
  sub_1BC0E008C(&qword_1EF3F9F18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v1 = sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t MedicationComponentsItem.__allocating_init(medicationName:componentsList:hasEducation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = swift_allocObject();
  type metadata accessor for MedicationComponentsItemCell();
  sub_1BC0E008C(&qword_1EF3FBE00, v9, (uint64_t (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationComponentsItemCell);
  *(_QWORD *)(v8 + 48) = sub_1BC2B2930();
  *(_QWORD *)(v8 + 56) = v10;
  sub_1BC2B242C();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4;
  return v8;
}

uint64_t MedicationComponentsItem.init(medicationName:componentsList:hasEducation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for MedicationComponentsItemCell();
  sub_1BC0E008C(&qword_1EF3FBE00, v9, (uint64_t (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationComponentsItemCell);
  *(_QWORD *)(v4 + 48) = sub_1BC2B2930();
  *(_QWORD *)(v4 + 56) = v10;
  sub_1BC2B242C();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_BYTE *)(v4 + 40) = a4;
  return v4;
}

uint64_t type metadata accessor for MedicationComponentsItemCell()
{
  return objc_opt_self();
}

uint64_t MedicationComponentsItem.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24MedicationComponentsItem_uuid;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MedicationComponentsItem.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24MedicationComponentsItem_uuid;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC17CB6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC17CBB8()
{
  uint64_t v1;

  sub_1BC2B2438();
  sub_1BC0E008C(&qword_1EF3F9F18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v1 = sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC17CC78(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC17DD78();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC17CCE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC17CD38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC17DD78();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC17CDA4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC17CDEC;
}

uint64_t sub_1BC17CDEC(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC17DD78();
  return result;
}

id sub_1BC17CE1C()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___primaryLabel, (uint64_t (*)(void))sub_1BC17CE30);
}

id sub_1BC17CE30()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  double v4;
  id v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v7 = sub_1BC2B4460();
  v8 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v7, v8);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v4);
  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v2, sel_setFont_, v5);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

id sub_1BC17CFDC()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___componentsLabel, (uint64_t (*)(void))sub_1BC17CFF0);
}

id sub_1BC17CFF0()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v8 = sub_1BC2B4460();
  v9 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v8, v9);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  LODWORD(v5) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A98]);
  objc_msgSend(v2, sel_setFont_, v6);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

id sub_1BC17D1D4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  objc_super v12;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsWithoutEducationLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for MedicationComponentsItemCell();
  v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC17D388();

  return v10;
}

id sub_1BC17D2C4(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsWithoutEducationLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MedicationComponentsItemCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t sub_1BC17D388()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - v3;
  v5 = sub_1BC2B3B48();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v0, sel_contentView);
  v10 = sub_1BC17CE1C();
  objc_msgSend(v9, sel_addSubview_, v10);

  v11 = objc_msgSend(v1, sel_contentView);
  v12 = sub_1BC17CFDC();
  objc_msgSend(v11, sel_addSubview_, v12);

  sub_1BC2B3B24();
  v13 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
  sub_1BC2B3B18();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1BCCEE23C](v4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC17D534()
{
  return sub_1BC17D8EC(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsLabel, -8.0);
}

uint64_t sub_1BC17D544()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel];
  }
  else
  {
    v2 = sub_1BC17D5A8(v0);
    *(_QWORD *)&v0[v1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC17D5A8(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BDB30;
  v3 = sub_1BC17CE1C();
  v4 = objc_msgSend(v3, sel_topAnchor);

  v5 = objc_msgSend(a1, sel_contentView);
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 8.0);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = sub_1BC17CE1C();
  v9 = objc_msgSend(v8, sel_bottomAnchor);

  v10 = objc_msgSend(a1, sel_contentView);
  v11 = objc_msgSend(v10, sel_bottomAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, -8.0);
  *(_QWORD *)(v2 + 40) = v12;
  v13 = sub_1BC17CE1C();
  v14 = objc_msgSend(v13, sel_leadingAnchor);

  v15 = objc_msgSend(a1, sel_contentView);
  v16 = objc_msgSend(v15, sel_layoutMarginsGuide);

  v17 = objc_msgSend(v16, sel_leadingAnchor);
  v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v2 + 48) = v18;
  v19 = sub_1BC17CE1C();
  v20 = objc_msgSend(v19, sel_trailingAnchor);

  v21 = objc_msgSend(a1, sel_contentView);
  v22 = objc_msgSend(v21, sel_layoutMarginsGuide);

  v23 = objc_msgSend(v22, sel_trailingAnchor);
  v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v2 + 56) = v24;
  v25 = objc_msgSend(a1, sel_contentView);
  v26 = objc_msgSend(v25, sel_heightAnchor);

  v27 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToConstant_, 44.0);
  *(_QWORD *)(v2 + 64) = v27;
  sub_1BC2B45A4();
  return v2;
}

uint64_t sub_1BC17D8DC()
{
  return sub_1BC17D8EC(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsWithoutEducationLabel, -16.0);
}

uint64_t sub_1BC17D8EC(uint64_t *a1, double a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *(_QWORD *)&v2[*a1];
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = sub_1BC17D94C(v2, a2);
    *(_QWORD *)&v2[v3] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1BC17D94C(void *a1, double a2)
{
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2BAF60;
  v5 = sub_1BC17CE1C();
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(a1, sel_contentView);
  v8 = objc_msgSend(v7, sel_topAnchor);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, 16.0);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = sub_1BC17CE1C();
  v11 = objc_msgSend(v10, sel_leadingAnchor);

  v12 = objc_msgSend(a1, sel_contentView);
  v13 = objc_msgSend(v12, sel_layoutMarginsGuide);

  v14 = objc_msgSend(v13, sel_leadingAnchor);
  v15 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v4 + 40) = v15;
  v16 = sub_1BC17CE1C();
  v17 = objc_msgSend(v16, sel_trailingAnchor);

  v18 = objc_msgSend(a1, sel_contentView);
  v19 = objc_msgSend(v18, sel_layoutMarginsGuide);

  v20 = objc_msgSend(v19, sel_trailingAnchor);
  v21 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v4 + 48) = v21;
  v22 = sub_1BC17CFDC();
  v23 = objc_msgSend(v22, sel_topAnchor);

  v24 = sub_1BC17CE1C();
  v25 = objc_msgSend(v24, sel_bottomAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, 2.0);
  *(_QWORD *)(v4 + 56) = v26;
  v27 = sub_1BC17CFDC();
  v28 = objc_msgSend(v27, sel_leadingAnchor);

  v29 = sub_1BC17CE1C();
  v30 = objc_msgSend(v29, sel_leadingAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  *(_QWORD *)(v4 + 64) = v31;
  v32 = sub_1BC17CFDC();
  v33 = objc_msgSend(v32, sel_trailingAnchor);

  v34 = sub_1BC17CE1C();
  v35 = objc_msgSend(v34, sel_trailingAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(_QWORD *)(v4 + 72) = v36;
  v37 = sub_1BC17CFDC();
  v38 = objc_msgSend(v37, sel_bottomAnchor);

  v39 = objc_msgSend(a1, sel_contentView);
  v40 = objc_msgSend(v39, sel_bottomAnchor);

  v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v40, a2);
  *(_QWORD *)(v4 + 80) = v41;
  sub_1BC2B45A4();
  return v4;
}

uint64_t sub_1BC17DD78()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v6, (uint64_t)v31);
  if (v31[3])
  {
    sub_1BC0E1B94();
    type metadata accessor for MedicationComponentsItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = v30;
      v8 = sub_1BC17CE1C();
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setText_, v9);

      v10 = sub_1BC17CFDC();
      v31[0] = *(_QWORD *)(v7 + 32);
      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC11BF0C();
      swift_bridgeObjectRetain();
      sub_1BC2B440C();
      swift_bridgeObjectRelease();
      v11 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v11);

      if (*(_QWORD *)(*(_QWORD *)(v7 + 32) + 16))
      {
        v12 = *(unsigned __int8 *)(v7 + 40);
        v13 = (void *)objc_opt_self();
        if (v12 != 1)
        {
          sub_1BC17D8DC();
          sub_1BC11BF6C();
          v26 = (void *)sub_1BC2B4580();
          swift_bridgeObjectRelease();
          objc_msgSend(v13, sel_activateConstraints_, v26);

          sub_1BC17D544();
          v27 = (void *)sub_1BC2B4580();
          swift_bridgeObjectRelease();
          objc_msgSend(v13, sel_deactivateConstraints_, v27);

          sub_1BC17D534();
          goto LABEL_14;
        }
        sub_1BC17D534();
        sub_1BC11BF6C();
        v14 = (void *)sub_1BC2B4580();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_activateConstraints_, v14);

        sub_1BC17D544();
      }
      else
      {
        v13 = (void *)objc_opt_self();
        sub_1BC17D544();
        sub_1BC11BF6C();
        v24 = (void *)sub_1BC2B4580();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_activateConstraints_, v24);

        sub_1BC17D534();
      }
      v25 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_deactivateConstraints_, v25);

      sub_1BC17D8DC();
LABEL_14:
      v28 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_deactivateConstraints_, v28);

      return swift_release();
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v31);
  }
  sub_1BC2B39A4();
  v15 = v1;
  v16 = sub_1BC2B39D4();
  v17 = sub_1BC2B48C8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v29 = v2;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v30 = v20;
    *(_DWORD *)v19 = 136446210;
    sub_1BC0E5774(v6, (uint64_t)v31);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v21 = sub_1BC2B4490();
    v31[0] = sub_1BC12540C(v21, v22, &v30);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v16, v17, "Incorrect view model for MedicationListItemCell: %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v20, -1, -1);
    MEMORY[0x1BCCEF3A0](v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v29);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id MedicationComponentsItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationComponentsItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC17E338@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC17E384@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t sub_1BC17E3DC()
{
  return type metadata accessor for MedicationComponentsItem();
}

uint64_t type metadata accessor for MedicationComponentsItem()
{
  uint64_t result;

  result = qword_1EF3FBE38;
  if (!qword_1EF3FBE38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC17E420()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationComponentsItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationComponentsItem.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationComponentsItem.reuseIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationComponentsItem.reuseIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationComponentsItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationComponentsItem.__allocating_init(medicationName:componentsList:hasEducation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for MedicationComponentsItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationComponentsItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationComponentsItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicationComponentsItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t InteractionFactorsLifestyleOptionsItem.__allocating_init(factor:enabled:)(uint64_t a1, char a2)
{
  swift_allocObject();
  return InteractionFactorsLifestyleOptionsItem.init(factor:enabled:)(a1, a2);
}

uint64_t InteractionFactorsLifestyleOptionsItem.isOn.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1EF3FBF50);
}

uint64_t InteractionFactorsLifestyleOptionsItem.init(factor:enabled:)(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v8;

  *(_QWORD *)(v2 + qword_1EF3FBF58) = a1;
  *(_BYTE *)(v2 + qword_1EF3FBF50) = a2;
  sub_1BC12A328();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  v6 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
  sub_1BC2B4CE8();

  HKDrugInteractionLifestyleFactor.image.getter(a1);
  v8 = 0;
  HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v8, a1);
  return sub_1BC2B2DB0();
}

uint64_t InteractionFactorsLifestyleOptionsItem.handleSwitchValueChanged(_:for:)(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1EF3FBF50) = result;
  return result;
}

void InteractionFactorsLifestyleOptionsItem.__allocating_init(image:text:detailText:backgroundColor:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionFactorsLifestyleOptionsItem.init(image:text:detailText:backgroundColor:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t InteractionFactorsLifestyleOptionsItem.__deallocating_deinit()
{
  _s19HealthMedicationsUI38InteractionFactorsLifestyleOptionsItemCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC17E728()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1EF3FBF50);
}

uint64_t sub_1BC17E738()
{
  return sub_1BC2B2F48();
}

uint64_t sub_1BC17E740(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1EF3FBF50) = result;
  return result;
}

uint64_t type metadata accessor for InteractionFactorsLifestyleOptionsItem()
{
  uint64_t result;

  result = qword_1EF3FBF60;
  if (!qword_1EF3FBF60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC17E78C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsLifestyleOptionsItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsLifestyleOptionsItem.__allocating_init(factor:enabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsLifestyleOptionsItem + v0 + 16))();
}

uint64_t sub_1BC17E800()
{
  return type metadata accessor for InteractionFactorsLifestyleOptionsItem();
}

uint64_t sub_1BC17E808()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MedicationMarkdownItemCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC17E88C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC17E968();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t MedicationMarkdownItemCell.item.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC17E968();
  return sub_1BC0F7954(a1);
}

void sub_1BC17E968()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  id v21;
  char v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v5, (uint64_t)v33);
  if (!v33[3])
  {
    sub_1BC0F7954((uint64_t)v33);
LABEL_6:
    sub_1BC2B39A4();
    v11 = v0;
    v12 = sub_1BC2B39D4();
    v13 = sub_1BC2B48C8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v31 = v1;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc();
      v32 = v16;
      *(_DWORD *)v15 = 136446210;
      sub_1BC0E5774(v5, (uint64_t)v33);
      sub_1BC0E84E8();
      v17 = sub_1BC2B4490();
      v33[0] = sub_1BC12540C(v17, v18, &v32);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v12, v13, "Incorrect view model for MedicationMarkdownItem: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v16, -1, -1);
      MEMORY[0x1BCCEF3A0](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v31);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1BC0E1B94();
  type metadata accessor for MedicationMarkdownItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v6 = v32;
  v7 = *(unsigned __int8 *)(v32 + 64);
  v8 = sub_1BC17EDFC();
  v9 = v8;
  if (v7 == 1)
  {
    v10 = sub_1BC17EED0();
    objc_msgSend(v9, sel_insertArrangedSubview_atIndex_, v10, 0);
LABEL_12:

    goto LABEL_13;
  }
  v19 = objc_msgSend(v8, sel_arrangedSubviews);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v20 = sub_1BC2B458C();

  v21 = sub_1BC17EED0();
  v22 = sub_1BC23E1B8((uint64_t)v21, v20);
  swift_bridgeObjectRelease();

  if ((v22 & 1) != 0)
  {
    v9 = sub_1BC17EDFC();
    v10 = sub_1BC17EED0();
    objc_msgSend(v9, sel_removeArrangedSubview_, v10);
    goto LABEL_12;
  }
LABEL_13:
  v23 = sub_1BC17F000();
  swift_bridgeObjectRetain();
  v24 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setText_, v24);

  v25 = sub_1BC17F160();
  if (*(_QWORD *)(v6 + 56))
  {
    swift_bridgeObjectRetain();
    v26 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
  }
  objc_msgSend(v25, sel_setText_, v26);

  v27 = sub_1BC17F160();
  if (*(_QWORD *)(v6 + 56)
    && (swift_bridgeObjectRetain(), sub_1BC2B44CC(), v29 = v28, swift_bridgeObjectRelease(), v29))
  {
    swift_bridgeObjectRelease();
    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  objc_msgSend(v27, sel_setHidden_, v30);
  swift_release();

}

void (*MedicationMarkdownItemCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC17EDCC;
}

void sub_1BC17EDCC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC17E968();
}

id sub_1BC17EDFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 16.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC17EED0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton);
  }
  else
  {
    if (qword_1EF3F8148 != -1)
      swift_once();
    v4 = (id)qword_1EF3FE7F0;
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B2144();
    v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0x616369746972432ELL, 0xE90000000000006CLL);
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC17F000()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v3 = v5;
    v7 = (void *)sub_1BC2B4580();
    v8 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v8);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC17F160()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v3 = v5;
    v8 = (void *)sub_1BC2B4580();
    v9 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC17F2FC(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  _QWORD v46[2];
  objc_super v47;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_1BC2B3CD4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel] = 0;
  v47.receiver = v4;
  v47.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v47, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 0);
  v16 = sub_1BC17EDFC();
  v17 = sub_1BC17F000();
  objc_msgSend(v16, sel_addArrangedSubview_, v17);

  v18 = sub_1BC17EDFC();
  v19 = sub_1BC17F160();
  objc_msgSend(v18, sel_addArrangedSubview_, v19);

  v20 = objc_msgSend(v15, sel_contentView);
  v21 = sub_1BC17EDFC();
  objc_msgSend(v20, sel_addSubview_, v21);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v30 = sub_1BC17EDFC();
  v31 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v30, sel_hk_alignHorizontalConstraintsWithView_insets_, v31, v23, v25, v27, v29);

  v32 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BC2B92B0;
  v34 = sub_1BC17EDFC();
  v35 = objc_msgSend(v34, sel_topAnchor);

  v36 = objc_msgSend(v15, sel_contentView);
  v37 = objc_msgSend(v36, sel_topAnchor);

  v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, 16.0);
  *(_QWORD *)(v33 + 32) = v38;
  v39 = sub_1BC17EDFC();
  v40 = objc_msgSend(v39, sel_bottomAnchor);

  v41 = objc_msgSend(v15, sel_contentView);
  v42 = objc_msgSend(v41, sel_bottomAnchor);

  v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v42, -16.0);
  *(_QWORD *)(v33 + 40) = v43;
  v46[1] = v33;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v44 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v44);

  return v15;
}

id MedicationMarkdownItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC17F850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC17F8A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC17E968();
  return sub_1BC0F7954(a1);
}

void (*sub_1BC17F90C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC17EDCC;
}

uint64_t sub_1BC17F954()
{
  return sub_1BC2B2930();
}

uint64_t sub_1BC17F95C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t type metadata accessor for MedicationMarkdownItem()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationMarkdownItemCell()
{
  return objc_opt_self();
}

uint64_t MedicationNicknameNotes.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_1BC2B5468();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
    if (v1)
    {
LABEL_3:
      sub_1BC2B5468();
      swift_bridgeObjectRetain();
      sub_1BC2B44D8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC2B5468();
    if (v1)
      goto LABEL_3;
  }
  return sub_1BC2B5468();
}

uint64_t MedicationNicknameNotes.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1BC2B5450();
  if (!v1)
  {
    sub_1BC2B5468();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_1BC2B5468();
    return sub_1BC2B548C();
  }
  sub_1BC2B5468();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_1BC2B5468();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC17FB88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_1BC2B5468();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
    if (v1)
    {
LABEL_3:
      sub_1BC2B5468();
      swift_bridgeObjectRetain();
      sub_1BC2B44D8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC2B5468();
    if (v1)
      goto LABEL_3;
  }
  return sub_1BC2B5468();
}

uint64_t sub_1BC17FC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1BC2B5450();
  if (!v1)
  {
    sub_1BC2B5468();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_1BC2B5468();
    return sub_1BC2B548C();
  }
  sub_1BC2B5468();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_1BC2B5468();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t _s19HealthMedicationsUI23MedicationNicknameNotesV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1BC2B53CC(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1BC2B53CC() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BC17FDC8()
{
  unint64_t result;

  result = qword_1EF3FC090;
  if (!qword_1EF3FC090)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationNicknameNotes, &type metadata for MedicationNicknameNotes);
    atomic_store(result, (unint64_t *)&qword_1EF3FC090);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationNicknameNotes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationNicknameNotes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationNicknameNotes()
{
  return &type metadata for MedicationNicknameNotes;
}

uint64_t InteractionFactorsHeaderItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsHeaderItem.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1BC0E008C(&qword_1EF3FC098, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderCell);
  *(_QWORD *)(v0 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t InteractionFactorsHeaderItem.init()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1BC0E008C(&qword_1EF3FC098, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderCell);
  *(_QWORD *)(v0 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t static InteractionFactorsHeaderItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BC2B53CC();
}

uint64_t InteractionFactorsHeaderItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionFactorsHeaderItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC180030(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1BC2B53CC();
  }
}

uint64_t sub_1BC18005C(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FC0A0, a2, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderItem, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderItem);
}

uint64_t type metadata accessor for InteractionFactorsHeaderItem()
{
  return objc_opt_self();
}

uint64_t method lookup function for InteractionFactorsHeaderItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

char *InteractionStackedMedmojiView.__allocating_init(width:)(double a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return InteractionStackedMedmojiView.init(width:)(a1);
}

uint64_t InteractionStackedMedmojiDataProvider.severityLevel.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t InteractionStackedMedmojiDataProvider.severityLevel.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*InteractionStackedMedmojiDataProvider.severityLevel.modify())()
{
  return nullsub_1;
}

uint64_t InteractionStackedMedmojiDataProvider.firstItemConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 20);
  return sub_1BC1224D4(v3, a1);
}

uint64_t InteractionStackedMedmojiDataProvider.firstItemConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 20);
  return sub_1BC182088(a1, v3);
}

uint64_t (*InteractionStackedMedmojiDataProvider.firstItemConfig.modify())()
{
  type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  return nullsub_1;
}

uint64_t InteractionStackedMedmojiDataProvider.secondItemConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 24);
  return sub_1BC1224D4(v3, a1);
}

uint64_t InteractionStackedMedmojiDataProvider.secondItemConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 24);
  return sub_1BC182088(a1, v3);
}

uint64_t (*InteractionStackedMedmojiDataProvider.secondItemConfig.modify())()
{
  type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  return nullsub_1;
}

uint64_t InteractionStackedMedmojiDataProvider.reversedItemConfig()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;

  v3 = *v1;
  v4 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  v5 = (uint64_t)v1 + *(int *)(v4 + 24);
  a1[3] = v4;
  a1[4] = sub_1BC0E519C(&qword_1EF3FC160, type metadata accessor for InteractionStackedMedmojiDataProvider, (uint64_t)&protocol conformance descriptor for InteractionStackedMedmojiDataProvider);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1BC1224D4(v5, (uint64_t)boxed_opaque_existential_1 + *(int *)(v4 + 20));
  result = sub_1BC1224D4((uint64_t)v1 + *(int *)(v4 + 20), (uint64_t)boxed_opaque_existential_1 + *(int *)(v4 + 24));
  *boxed_opaque_existential_1 = v3;
  return result;
}

BOOL static InteractionStackedMedmojiDataProvider.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (*a1 == *a2
    && (v4 = type metadata accessor for InteractionStackedMedmojiDataProvider(0),
        _s19HealthMedicationsUI34DrugInteractionVisualizationConfigO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + *(int *)(v4 + 20), (uint64_t)a2 + *(int *)(v4 + 20))))
  {
    return _s19HealthMedicationsUI34DrugInteractionVisualizationConfigO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + *(int *)(v4 + 24), (uint64_t)a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1BC180368()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1BC180370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC1224D4(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1BC180380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC1224D4(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_1BC180390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;

  v5 = *v3;
  v6 = (uint64_t)v3 + *(int *)(a1 + 24);
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1BC1224D4(v6, (uint64_t)boxed_opaque_existential_1 + *(int *)(a1 + 20));
  result = sub_1BC1224D4((uint64_t)v3 + *(int *)(a1 + 20), (uint64_t)boxed_opaque_existential_1 + *(int *)(a1 + 24));
  *boxed_opaque_existential_1 = v5;
  return result;
}

uint64_t sub_1BC1803FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  if (*a1 == *a2
    && (static DrugInteractionVisualizationConfig.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20)) & 1) != 0)
  {
    return static DrugInteractionVisualizationConfig.== infix(_:_:)((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24));
  }
  else
  {
    return 0;
  }
}

id sub_1BC18046C()
{
  return sub_1BC180490(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstMedmojiView);
}

id sub_1BC180478()
{
  return sub_1BC180574(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstImageView);
}

id sub_1BC180484()
{
  return sub_1BC180490(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondMedmojiView);
}

id sub_1BC180490(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = v1;
    v6 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v7 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC2B4C88();

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v8 = *(void **)(v5 + v2);
    *(_QWORD *)(v5 + v2) = v6;
    v4 = v6;

    v3 = 0;
  }
  v9 = v3;
  return v4;
}

id sub_1BC180568()
{
  return sub_1BC180574(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondImageView);
}

id sub_1BC180574(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

uint64_t sub_1BC1805F4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, &qword_1EF3F88F8, (void (*)(uint64_t))sub_1BC1820CC);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  sub_1BC182120((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC18068C();
  return sub_1BC0E1CFC((uint64_t)v5, &qword_1EF3F88F8, (void (*)(uint64_t))sub_1BC1820CC);
}

void sub_1BC18068C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  void (*v44)(uint64_t);
  id v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;

  v1 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v94 = (uint64_t *)((char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v93 - v5;
  v7 = MEMORY[0x1E0C80A78](v4);
  v96 = (uint64_t *)((char *)&v93 - v8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v93 - v9;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v95 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v98 = (uint64_t)&v93 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v93 - v16;
  v18 = (_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig);
  swift_beginAccess();
  v19 = v18[3];
  if (v19)
  {
    v97 = v6;
    v20 = v0;
    v21 = v18[4];
    v22 = __swift_project_boxed_opaque_existential_0(v18, v19);
    v23 = *(_QWORD *)(v19 - 8);
    MEMORY[0x1E0C80A78](v22);
    v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v19, v21);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v19);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BC0E8594((uint64_t)v10, type metadata accessor for DrugInteractionVisualizationConfig);
      v27 = v18[3];
      v28 = v20;
      v29 = (uint64_t)v97;
      if (!v27)
        return;
      v30 = v18[4];
      v31 = __swift_project_boxed_opaque_existential_0(v18, v18[3]);
      v32 = *(_QWORD *)(v27 - 8);
      MEMORY[0x1E0C80A78](v31);
      v34 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v34);
      v35 = *(void (**)(uint64_t, uint64_t))(v30 + 24);
      v36 = v30;
      v37 = v96;
      v35(v27, v36);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v27);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v38 = sub_1BC182194(*v37);
        v39 = sub_1BC180478();
        objc_msgSend(v39, sel_setImage_, v38);

        v40 = sub_1BC180478();
        objc_msgSend(v40, sel_setHidden_, v38 == 0);

        v41 = sub_1BC18046C();
        objc_msgSend(v41, sel_setHidden_, 1);

        v42 = v18[3];
        if (!v42)
          return;
      }
      else
      {
        sub_1BC0E8594((uint64_t)v37, type metadata accessor for DrugInteractionVisualizationConfig);
        v42 = v18[3];
        if (!v42)
          return;
      }
    }
    else
    {
      sub_1BC109D88((uint64_t)v10, (uint64_t)v17);
      v28 = v20;
      v43 = sub_1BC18046C();
      v44 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      sub_1BC0E1CB0((uint64_t)v17, v98, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      sub_1BC2B3308();

      v45 = sub_1BC18046C();
      objc_msgSend(v45, sel_setHidden_, 0);

      v46 = sub_1BC180478();
      objc_msgSend(v46, sel_setHidden_, 1);

      sub_1BC0E1CFC((uint64_t)v17, (unint64_t *)&qword_1EDA0ECC0, v44);
      v29 = (uint64_t)v97;
      v42 = v18[3];
      if (!v42)
        return;
    }
    v47 = v18[4];
    v48 = __swift_project_boxed_opaque_existential_0(v18, v42);
    v49 = *(_QWORD *)(v42 - 8);
    MEMORY[0x1E0C80A78](v48);
    v51 = (char *)&v93 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v49 + 16))(v51);
    (*(void (**)(uint64_t, uint64_t))(v47 + 32))(v42, v47);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v42);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BC0E8594(v29, type metadata accessor for DrugInteractionVisualizationConfig);
      v52 = v18[3];
      if (v52)
      {
        v53 = v18[4];
        v54 = __swift_project_boxed_opaque_existential_0(v18, v18[3]);
        v55 = *(_QWORD *)(v52 - 8);
        MEMORY[0x1E0C80A78](v54);
        v57 = (char *)&v93 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v55 + 16))(v57);
        v58 = v94;
        (*(void (**)(uint64_t, uint64_t))(v53 + 32))(v52, v53);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v52);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v59 = sub_1BC182194(*v58);
          v60 = sub_1BC180568();
          objc_msgSend(v60, sel_setImage_, v59);

          v61 = sub_1BC180568();
          objc_msgSend(v61, sel_setHidden_, v59 == 0);

          v62 = sub_1BC180484();
          objc_msgSend(v62, sel_setHidden_, 1);

          v63 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint;
          v64 = *(void **)(v28 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint);
          if (v64)
          {
            v65 = (void *)objc_opt_self();
            sub_1BC0E7940();
            v66 = swift_allocObject();
            *(_OWORD *)(v66 + 16) = xmmword_1BC2B7770;
            *(_QWORD *)(v66 + 32) = v64;
            v99 = v66;
            sub_1BC2B45A4();
            sub_1BC11BF6C();
            v67 = v64;
            v68 = (void *)sub_1BC2B4580();
            swift_bridgeObjectRelease();
            objc_msgSend(v65, sel_deactivateConstraints_, v68);

          }
          v69 = sub_1BC180568();
          v70 = objc_msgSend(v69, sel_topAnchor);

          if (EnumCaseMultiPayload == 1)
            v71 = sub_1BC180478();
          else
            v71 = sub_1BC18046C();
          v72 = objc_msgSend(v71, sel_bottomAnchor);

          v90 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v72, -4.0);
          v91 = *(void **)(v28 + v63);
          *(_QWORD *)(v28 + v63) = v90;

          v92 = *(id *)(v28 + v63);
          objc_msgSend(v92, sel_setActive_, 1);

        }
        else
        {
          sub_1BC0E8594((uint64_t)v58, type metadata accessor for DrugInteractionVisualizationConfig);
        }
      }
    }
    else
    {
      v73 = v95;
      sub_1BC109D88(v29, v95);
      v74 = sub_1BC180484();
      sub_1BC0E1CB0(v73, v98, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      sub_1BC2B3308();

      v75 = sub_1BC180484();
      objc_msgSend(v75, sel_setHidden_, 0);

      v76 = sub_1BC180568();
      objc_msgSend(v76, sel_setHidden_, 1);

      v77 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint;
      v78 = *(void **)(v28 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint);
      if (v78)
      {
        v79 = (void *)objc_opt_self();
        sub_1BC0E7940();
        v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1BC2B7770;
        *(_QWORD *)(v80 + 32) = v78;
        v99 = v80;
        sub_1BC2B45A4();
        sub_1BC11BF6C();
        v81 = v78;
        v82 = (void *)sub_1BC2B4580();
        swift_bridgeObjectRelease();
        objc_msgSend(v79, sel_deactivateConstraints_, v82);

      }
      v83 = sub_1BC180484();
      v84 = objc_msgSend(v83, sel_topAnchor);

      if (EnumCaseMultiPayload == 1)
        v85 = sub_1BC180478();
      else
        v85 = sub_1BC18046C();
      v86 = v85;
      v87 = objc_msgSend(v85, sel_bottomAnchor);

      v88 = objc_msgSend(v84, sel_constraintEqualToAnchor_constant_, v87, -4.0);
      v89 = *(void **)(v28 + v77);
      *(_QWORD *)(v28 + v77) = v88;

      objc_msgSend(*(id *)(v28 + v77), sel_setActive_, 1);
      sub_1BC0E1CFC(v73, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    }
  }
}

uint64_t sub_1BC180FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, &qword_1EF3F88F8, (void (*)(uint64_t))sub_1BC1820CC);
}

uint64_t sub_1BC18102C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  sub_1BC182120(a1, v3);
  swift_endAccess();
  sub_1BC18068C();
  return sub_1BC0E1CFC(a1, &qword_1EF3F88F8, (void (*)(uint64_t))sub_1BC1820CC);
}

void (*sub_1BC1810A8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1810F0;
}

void sub_1BC1810F0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC18068C();
}

char *InteractionStackedMedmojiView.init(width:)(double a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  id v87;
  objc_super v88;

  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstMedmojiView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondMedmojiView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondImageView] = 0;
  v2 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint] = 0;
  *(double *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_width] = a1;
  v88.receiver = v1;
  v88.super_class = (Class)type metadata accessor for InteractionStackedMedmojiView();
  v3 = objc_msgSendSuper2(&v88, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = sub_1BC180484();
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = v3;
  v6 = sub_1BC180568();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = v5;
  v8 = sub_1BC18046C();
  objc_msgSend(v7, sel_addSubview_, v8);

  v9 = (char *)v7;
  v10 = sub_1BC180478();
  objc_msgSend(v9, sel_addSubview_, v10);

  v87 = (id)objc_opt_self();
  sub_1BC0E7940();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2BDF80;
  v12 = sub_1BC18046C();
  v13 = objc_msgSend(v12, sel_leadingAnchor);

  v14 = objc_msgSend(v9, (SEL)&ShapeCell.base_props + 6);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v11 + 32) = v15;
  v16 = sub_1BC18046C();
  v17 = objc_msgSend(v16, sel_trailingAnchor);

  v18 = objc_msgSend(v9, sel_trailingAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v11 + 40) = v19;
  v20 = sub_1BC18046C();
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v9, sel_topAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(_QWORD *)(v11 + 48) = v23;
  v24 = sub_1BC18046C();
  v25 = objc_msgSend(v24, sel_widthAnchor);

  v26 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_width;
  v27 = objc_msgSend(v25, sel_constraintEqualToConstant_, *(double *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_width]);

  *(_QWORD *)(v11 + 56) = v27;
  v28 = sub_1BC18046C();
  v29 = objc_msgSend(v28, sel_heightAnchor);

  v30 = objc_msgSend(v29, (SEL)&selRef_fontDescriptor + 2, *(double *)&v9[v26]);
  *(_QWORD *)(v11 + 64) = v30;
  v31 = sub_1BC180478();
  v32 = objc_msgSend(v31, (SEL)&ShapeCell.base_props + 6);

  v33 = objc_msgSend(v9, (SEL)&ShapeCell.base_props + 6);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(_QWORD *)(v11 + 72) = v34;
  v35 = sub_1BC180478();
  v36 = objc_msgSend(v35, sel_trailingAnchor);

  v37 = objc_msgSend(v9, sel_trailingAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v11 + 80) = v38;
  v39 = sub_1BC180478();
  v40 = objc_msgSend(v39, sel_topAnchor);

  v41 = objc_msgSend(v9, sel_topAnchor);
  v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  *(_QWORD *)(v11 + 88) = v42;
  v43 = sub_1BC180478();
  v44 = objc_msgSend(v43, sel_widthAnchor);

  v45 = objc_msgSend(v44, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(_QWORD *)(v11 + 96) = v45;
  v46 = sub_1BC180478();
  v47 = objc_msgSend(v46, sel_heightAnchor);

  v48 = objc_msgSend(v47, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(_QWORD *)(v11 + 104) = v48;
  v49 = sub_1BC180484();
  v50 = objc_msgSend(v49, sel_leadingAnchor);

  v51 = objc_msgSend(v9, sel_leadingAnchor);
  v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

  *(_QWORD *)(v11 + 112) = v52;
  v53 = sub_1BC180484();
  v54 = objc_msgSend(v53, sel_trailingAnchor);

  v55 = objc_msgSend(v9, sel_trailingAnchor);
  v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

  *(_QWORD *)(v11 + 120) = v56;
  v57 = sub_1BC180484();
  v58 = objc_msgSend(v57, sel_bottomAnchor);

  v59 = objc_msgSend(v9, sel_bottomAnchor);
  v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(_QWORD *)(v11 + 128) = v60;
  v61 = sub_1BC180484();
  v62 = objc_msgSend(v61, sel_widthAnchor);

  v63 = objc_msgSend(v62, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(_QWORD *)(v11 + 136) = v63;
  v64 = sub_1BC180484();
  v65 = objc_msgSend(v64, sel_heightAnchor);

  v66 = objc_msgSend(v65, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(_QWORD *)(v11 + 144) = v66;
  v67 = sub_1BC180568();
  v68 = objc_msgSend(v67, sel_leadingAnchor);

  v69 = objc_msgSend(v9, sel_leadingAnchor);
  v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_, v69);

  *(_QWORD *)(v11 + 152) = v70;
  v71 = sub_1BC180568();
  v72 = objc_msgSend(v71, sel_trailingAnchor);

  v73 = objc_msgSend(v9, sel_trailingAnchor);
  v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v73);

  *(_QWORD *)(v11 + 160) = v74;
  v75 = sub_1BC180568();
  v76 = objc_msgSend(v75, sel_bottomAnchor);

  v77 = objc_msgSend(v9, sel_bottomAnchor);
  v78 = objc_msgSend(v76, sel_constraintEqualToAnchor_, v77);

  *(_QWORD *)(v11 + 168) = v78;
  v79 = sub_1BC180568();
  v80 = objc_msgSend(v79, sel_widthAnchor);

  v81 = objc_msgSend(v80, (SEL)&selRef_fontDescriptor + 2, *(double *)&v9[v26]);
  *(_QWORD *)(v11 + 176) = v81;
  v82 = sub_1BC180568();
  v83 = objc_msgSend(v82, sel_heightAnchor);

  v84 = objc_msgSend(v83, (SEL)&selRef_fontDescriptor + 2, *(double *)&v9[v26]);
  *(_QWORD *)(v11 + 184) = v84;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v85 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v87, sel_activateConstraints_, v85);

  return v9;
}

id InteractionStackedMedmojiView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id InteractionStackedMedmojiView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void InteractionStackedMedmojiView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionStackedMedmojiView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionStackedMedmojiView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL _s19HealthMedicationsUI34DrugInteractionVisualizationConfigO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _BOOL8 v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t);
  char v36;
  void (*v37)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1BC2B3608();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC183688();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, v5);
  v12 = MEMORY[0x1E0C80A78](v11);
  v40 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - v14;
  v16 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char **)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v39 - v20;
  sub_1BC1836F8();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = &v25[*(int *)(v23 + 48)];
  sub_1BC1224D4(a1, (uint64_t)v25);
  sub_1BC1224D4(a2, (uint64_t)v26);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BC1224D4((uint64_t)v25, (uint64_t)v21);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BC0E1CFC((uint64_t)v21, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      goto LABEL_6;
    }
    sub_1BC109D88((uint64_t)v26, (uint64_t)v15);
    v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BC109D88((uint64_t)v21, (uint64_t)v10);
    sub_1BC0E1CB0((uint64_t)v15, v29, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v30 = v41;
    v31 = v42;
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    if (v32((uint64_t)v10, 1, v42) == 1)
    {
      sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      if (v32(v29, 1, v31) == 1)
      {
        sub_1BC0E1CFC((uint64_t)v10, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        v27 = 1;
        goto LABEL_16;
      }
    }
    else
    {
      v33 = v40;
      sub_1BC0E1CB0((uint64_t)v10, v40, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      if (v32(v29, 1, v31) != 1)
      {
        v34 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v39, v29, v31);
        v35 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
        sub_1BC0E519C(&qword_1EF3FC320, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], MEMORY[0x1E0D2C960]);
        v36 = sub_1BC2B4424();
        v37 = *(void (**)(char *, uint64_t))(v30 + 8);
        v37(v34, v31);
        sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, v35);
        v37((char *)v33, v31);
        sub_1BC0E1CFC((uint64_t)v10, (unint64_t *)&qword_1EDA0ECC0, v35);
        if ((v36 & 1) != 0)
        {
          v27 = 1;
          goto LABEL_16;
        }
LABEL_15:
        v27 = 0;
        goto LABEL_16;
      }
      sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v31);
    }
    sub_1BC0E8594((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC183688);
    goto LABEL_15;
  }
  sub_1BC1224D4((uint64_t)v25, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = *v19 == *(_QWORD *)v26;
LABEL_16:
    v28 = type metadata accessor for DrugInteractionVisualizationConfig;
    goto LABEL_17;
  }
LABEL_6:
  v27 = 0;
  v28 = (uint64_t (*)(_QWORD))sub_1BC1836F8;
LABEL_17:
  sub_1BC0E8594((uint64_t)v25, v28);
  return v27;
}

uint64_t type metadata accessor for InteractionStackedMedmojiDataProvider(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FC2A8);
}

uint64_t type metadata accessor for DrugInteractionVisualizationConfig(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FC218);
}

uint64_t sub_1BC182088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC1820CC()
{
  unint64_t result;

  result = qword_1EF3FD860;
  if (!qword_1EF3FD860)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FD860);
  }
  return result;
}

uint64_t sub_1BC182120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E1C64(0, &qword_1EF3F88F8, (void (*)(uint64_t))sub_1BC1820CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for InteractionStackedMedmojiView()
{
  return objc_opt_self();
}

id sub_1BC182194(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  id v4;

  if (a1 != 1 && a1 != 3 && a1 != 2)
    return 0;
  type metadata accessor for InteractionFactorsCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v3, v2);

  return v4;
}

void _s19HealthMedicationsUI29InteractionStackedMedmojiViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstMedmojiView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondMedmojiView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondImageView] = 0;
  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC182348(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC0E519C(&qword_1EF3FC1A0, type metadata accessor for InteractionStackedMedmojiDataProvider, (uint64_t)&protocol conformance descriptor for InteractionStackedMedmojiDataProvider);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC182384@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, &qword_1EF3F88F8, (void (*)(uint64_t))sub_1BC1820CC);
}

uint64_t *initializeBufferWithCopyOfBuffer for DrugInteractionVisualizationConfig(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_1BC2B3608();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DrugInteractionVisualizationConfig(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_1BC2B3608();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BC2B3608();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BC2B3608();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BC2B3608();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BC2B3608();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1BC182978()
{
  unint64_t v0;

  sub_1BC0E1C64(319, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.severityLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.firstItemConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.secondItemConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.reversedItemConfig()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for InteractionStackedMedmojiDataProvider(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = sub_1BC2B3608();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    v15 = *(int *)(a3 + 24);
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v18 = sub_1BC2B3608();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t destroy for InteractionStackedMedmojiDataProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DrugInteractionVisualizationConfig(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    v5 = sub_1BC2B3608();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  v7 = a1 + *(int *)(a2 + 24);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v9 = sub_1BC2B3608();
    v10 = *(_QWORD *)(v9 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  }
  return result;
}

_QWORD *initializeWithCopy for InteractionStackedMedmojiDataProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_1BC2B3608();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v16 = sub_1BC2B3608();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for InteractionStackedMedmojiDataProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BC0E8594((uint64_t)a1 + v6, type metadata accessor for DrugInteractionVisualizationConfig);
    v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = sub_1BC2B3608();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    v13 = *(int *)(a3 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_1BC0E8594((uint64_t)a1 + v13, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v16 = sub_1BC2B3608();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_QWORD *initializeWithTake for InteractionStackedMedmojiDataProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_1BC2B3608();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v16 = sub_1BC2B3608();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for InteractionStackedMedmojiDataProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BC0E8594((uint64_t)a1 + v6, type metadata accessor for DrugInteractionVisualizationConfig);
    v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = sub_1BC2B3608();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    v13 = *(int *)(a3 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_1BC0E8594((uint64_t)a1 + v13, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v16 = sub_1BC2B3608();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionStackedMedmojiDataProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC183500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
}

uint64_t storeEnumTagSinglePayload for InteractionStackedMedmojiDataProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC183558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v7);
}

uint64_t sub_1BC1835A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DrugInteractionVisualizationConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for InteractionStackedMedmojiView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.stackedMemojiConfig.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.stackedMemojiConfig.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.stackedMemojiConfig.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.__allocating_init(width:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

void sub_1BC183688()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FC310)
  {
    sub_1BC0E1C64(255, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FC310);
  }
}

void sub_1BC1836F8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FC318)
  {
    type metadata accessor for DrugInteractionVisualizationConfig(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FC318);
  }
}

uint64_t type metadata accessor for PauseDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FC350);
}

uint64_t sub_1BC18376C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC1837C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];
  _QWORD v17[2];

  v5 = v4;
  v16[1] = a4;
  v10 = sub_1BC2B2438();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + qword_1EF3FC348) = 0;
  *(_QWORD *)(v5 + qword_1EF3FC338) = a2;
  *(_QWORD *)(v5 + qword_1EF3FC340) = a3;
  *(_QWORD *)(v5 + qword_1EF3FC328) = a1;
  *(_QWORD *)(v5 + qword_1EF3FC330) = a4;
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v14 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC18398C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_1BC18398C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v15 = *v0;
  sub_1BC185258();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)((char *)v0 + qword_1EF3FC330);
  v16 = *(_QWORD *)((char *)v0 + qword_1EF3FC328);
  v17 = v7;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
  sub_1BC13BE80(0, &qword_1EF3FC448, (void (*)(uint64_t))sub_1BC185340);
  sub_1BC1854C4((unint64_t *)&qword_1EF3FC458, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
  sub_1BC1854C4(&qword_1EF3FC460, &qword_1EF3FC448, (void (*)(uint64_t))sub_1BC185340);
  sub_1BC2B3FF8();
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = swift_allocObject();
  v10 = v15;
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC1853B8;
  *(_QWORD *)(v11 + 24) = v9;
  sub_1BC0E519C(&qword_1EF3FC468, (uint64_t (*)(uint64_t))sub_1BC185258, MEMORY[0x1E0C95698]);
  v12 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)((char *)v1 + qword_1EF3FC348) = v12;
  return swift_release();
}

uint64_t sub_1BC183B90(uint64_t result, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v2 = *a2;
  if (v2 != 2)
  {
    v3 = result;
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v4 = result;
      if ((unint64_t)(v3 - 7) > 1)
      {
        return swift_release();
      }
      else
      {
        v5 = *(_QWORD *)(result + qword_1EF3FC340);
        v7 = v2 & 1;
        sub_1BC184FEC(v5, (char *)&v7);
        v6 = *(_QWORD *)(v4 + qword_1EF3FC338);
        v7 = v2 & 1;
        sub_1BC184FEC(v6, (char *)&v7);
        v7 = v2 & 1;
        sub_1BC183C74(&v7);
        sub_1BC2B2C24();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1BC183C74(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, ValueMetadata *, unint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t *v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char v30;

  v3 = sub_1BC2B2438();
  MEMORY[0x1E0C80A78](v3);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - v5;
  v7 = *a1;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC2B92C0;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v26 = (uint64_t *)(v8 + 32);
  v9 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v10 = sub_1BC2B2144();
  v23 = v11;
  v24 = v10;
  swift_bridgeObjectRelease();

  sub_1BC2B3B24();
  v28 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  sub_1BC2B4D24();
  sub_1BC2B3B18();
  v12 = sub_1BC2B3B48();
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v27(v6, 0, 1, v12);
  v30 = v7;
  sub_1BC1DD634(&v30);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1BC2B242C();
  v22 = v1;
  v13 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0D2A8F0];
  sub_1BC18517C(0, &qword_1EF3FC428, MEMORY[0x1E0D2A8F0]);
  v25 = v14;
  *(_QWORD *)(v8 + 56) = v14;
  v15 = sub_1BC1851D8(&qword_1EF3FC430, &qword_1EF3FC428, v13, MEMORY[0x1E0D2A8F8]);
  v21 = v7;
  v16 = v15;
  *(_QWORD *)(v8 + 64) = v15;
  __swift_allocate_boxed_opaque_existential_1(v26);
  sub_1BC184A10();
  sub_1BC2B2900();
  v26 = (uint64_t *)(v8 + 72);
  v17 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v24 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3B24();
  sub_1BC2B4D24();
  sub_1BC2B3B18();
  v27(v6, 0, 1, v12);
  v29 = v21;
  sub_1BC1DD634(&v29);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1BC2B242C();
  v18 = v26;
  *(_QWORD *)(v8 + 96) = v25;
  *(_QWORD *)(v8 + 104) = v16;
  __swift_allocate_boxed_opaque_existential_1(v18);
  sub_1BC2B2900();
  return v8;
}

uint64_t sub_1BC184110@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3ED8();
    return swift_release();
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = -1;
  }
  return result;
}

uint64_t sub_1BC184190()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3EC0();
    return swift_release();
  }
  return result;
}

void sub_1BC184214()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC184240()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC18429C()
{
  sub_1BC2B2C60();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC184318()
{
  return type metadata accessor for PauseDataSource(0);
}

uint64_t type metadata accessor for NextPauseDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FC3A0);
}

uint64_t sub_1BC184334()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC184370()
{
  uint64_t (*v0)(uint64_t, ValueMetadata *, unint64_t);

  type metadata accessor for ScheduleDurationCell();
  sub_1BC0E519C(&qword_1EF3FC3F8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationCell, (uint64_t)&protocol conformance descriptor for ScheduleDurationCell);
  sub_1BC2B4994();
  v0 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0D2B3D8];
  sub_1BC18517C(0, &qword_1EF3FC400, MEMORY[0x1E0D2B3D8]);
  sub_1BC1851D8(&qword_1EF3FC410, &qword_1EF3FC400, v0, MEMORY[0x1E0D2B3E0]);
  return sub_1BC2B497C();
}

uint64_t sub_1BC18441C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (sub_1BC2B4460() == a1 && v5 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      v8 = sub_1BC2B296C();
      v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v8;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v9, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v11 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v12 = sub_1BC2B2144();
  v14 = v13;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  v15 = sub_1BC2B2930();
  v17 = v16;
  sub_1BC2B2930();
  swift_bridgeObjectRelease();
  a3[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  a3[4] = sub_1BC184A54();
  result = swift_allocObject();
  *a3 = result;
  *(_QWORD *)(result + 16) = v12;
  *(_QWORD *)(result + 24) = v14;
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = nullsub_1;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = v15;
  *(_QWORD *)(result + 64) = v17;
  return result;
}

void *sub_1BC184620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2C9C();
  v4 = (void *)sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC2B4AD8();
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_setContentInsetsReference_, 1);
  return v4;
}

uint64_t sub_1BC1846D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC18441C(a1, a2, a3);
}

uint64_t sub_1BC1846E4()
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2BE1A8);
  return sub_1BC2B3074();
}

uint64_t sub_1BC184730@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_1BC2B2438();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1856C8(*a1);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC2B92D0;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_1BC2B2BAC();
  *a2 = v8;
  return result;
}

uint64_t sub_1BC184864()
{
  sub_1BC2B2EB8();
  return sub_1BC2B497C();
}

void *sub_1BC184898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  sub_1BC2B2DC8();
  v4 = (void *)sub_1BC2B2D14();
  swift_unknownObjectRelease();
  sub_1BC2B4AD8();
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_, -10.0);
  objc_msgSend(v4, sel_setContentInsetsReference_, 1);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_1BC184988()
{
  sub_1BC184994();
}

void sub_1BC184994()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1849C0()
{
  sub_1BC2B2B1C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1849DC()
{
  return type metadata accessor for NextPauseDataSource(0);
}

uint64_t sub_1BC1849E4()
{
  return sub_1BC0E519C(&qword_1EF3FC3F0, type metadata accessor for PauseDataSource, (uint64_t)&unk_1BC2BE150);
}

unint64_t sub_1BC184A10()
{
  unint64_t result;

  result = qword_1EF3FC408;
  if (!qword_1EF3FC408)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for PauseUsePeriod, &type metadata for PauseUsePeriod);
    atomic_store(result, (unint64_t *)&qword_1EF3FC408);
  }
  return result;
}

unint64_t sub_1BC184A54()
{
  unint64_t result;

  result = qword_1EF3FC420;
  if (!qword_1EF3FC420)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2B9CD4, &type metadata for ScheduleHeaderItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FC420);
  }
  return result;
}

uint64_t sub_1BC184A98()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC184ACC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;

  v39 = *v1;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - v4;
  v6 = sub_1BC2B42EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC18540C();
  v32 = v10;
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC185504(0);
  v14 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  v37 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1855E0();
  v38 = v17;
  v41 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v33 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC18568C(0);
  v40 = v19;
  v42 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v35 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a1;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
  sub_1BC0E1D38(0, &qword_1EDA0FCF8);
  sub_1BC1854C4((unint64_t *)&qword_1EF3F9DA8, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
  sub_1BC2B3FC8();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF538], v6);
  v21 = (void *)sub_1BC2B4A30();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v43 = v21;
  v22 = sub_1BC2B49C4();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v5, 1, 1, v22);
  sub_1BC0E519C(&qword_1EF3FC480, (uint64_t (*)(uint64_t))sub_1BC18540C, MEMORY[0x1E0C95708]);
  sub_1BC1019D8();
  v24 = v32;
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v5, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v24);
  *(_QWORD *)(swift_allocObject() + 16) = v39;
  sub_1BC0E7998(0, &qword_1EF3FC490, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC0E519C(&qword_1EF3FC498, (uint64_t (*)(uint64_t))sub_1BC185504, MEMORY[0x1E0C95CB8]);
  v25 = v33;
  v26 = v36;
  sub_1BC2B4004();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v26);
  v43 = (id)sub_1BC2B4A0C();
  v23(v5, 1, 1, v22);
  sub_1BC0E519C(&qword_1EF3FC4A8, (uint64_t (*)(uint64_t))sub_1BC1855E0, MEMORY[0x1E0C95950]);
  v27 = v35;
  v28 = v38;
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v5, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v28);
  sub_1BC0E519C((unint64_t *)&unk_1EF3FC4B0, (uint64_t (*)(uint64_t))sub_1BC18568C, MEMORY[0x1E0C95CB8]);
  v29 = v40;
  sub_1BC2B3FB0();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v29);
  sub_1BC2B2E40();
  sub_1BC2B2A68();
  swift_release();
  return sub_1BC2B2B10();
}

uint64_t sub_1BC184FEC(uint64_t a1, char *a2)
{
  char v2;
  uint64_t result;
  double v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *a2;
  sub_1BC2B3ED8();
  if (v6 == 255)
    return sub_1BC2B3EC0();
  result = sub_1BC2B3ED8();
  if ((v6 & 1) == 0)
  {
    if ((v2 & 1) != 0)
      return result;
    if ((unsigned __int128)(v5 * (__int128)7) >> 64 != (7 * v5) >> 63)
      __break(1u);
    return sub_1BC2B3EC0();
  }
  if ((v2 & 1) == 0)
    return result;
  v4 = ceil((double)v5 / 7.0);
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  return sub_1BC2B3EC0();
}

uint64_t sub_1BC185118()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC18513C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC184110(a1);
}

uint64_t sub_1BC18515C()
{
  return sub_1BC184190();
}

void sub_1BC18517C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC184A10();
    v7 = a3(a1, &type metadata for PauseUsePeriod, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC1851D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC18517C(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC185218@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC184110(a1);
}

uint64_t sub_1BC185238()
{
  return sub_1BC184190();
}

void sub_1BC185258()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FC438)
  {
    sub_1BC13BE80(255, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
    sub_1BC13BE80(255, &qword_1EF3FC448, (void (*)(uint64_t))sub_1BC185340);
    sub_1BC1854C4((unint64_t *)&qword_1EF3FC458, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
    sub_1BC1854C4(&qword_1EF3FC460, &qword_1EF3FC448, (void (*)(uint64_t))sub_1BC185340);
    v0 = sub_1BC2B3D64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FC438);
  }
}

void sub_1BC185340()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FC450)
  {
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FC450);
  }
}

uint64_t sub_1BC185394()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1853B8(uint64_t result, unsigned __int8 *a2)
{
  return sub_1BC183B90(result, a2);
}

uint64_t sub_1BC1853C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1853E4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD *))(v1 + 16))(*a1, a1 + 1);
}

void sub_1BC18540C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FC470)
  {
    sub_1BC13BE80(255, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
    sub_1BC0E1D38(255, &qword_1EDA0FCF8);
    sub_1BC1854C4((unint64_t *)&qword_1EF3F9DA8, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FC470);
  }
}

uint64_t sub_1BC1854C4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC13BE80(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC185504(uint64_t a1)
{
  sub_1BC185528(a1, &qword_1EF3FC478, (uint64_t (*)(uint64_t))sub_1BC18540C, &qword_1EF3FC480, MEMORY[0x1E0C95708]);
}

void sub_1BC185528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(a4, a3, a5);
    sub_1BC1019D8();
    v9 = sub_1BC2B3E60();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC1855E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FC488)
  {
    sub_1BC185504(255);
    sub_1BC0E7998(255, &qword_1EF3FC490, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC0E519C(&qword_1EF3FC498, (uint64_t (*)(uint64_t))sub_1BC185504, MEMORY[0x1E0C95CB8]);
    v0 = sub_1BC2B3DF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FC488);
  }
}

void sub_1BC18568C(uint64_t a1)
{
  sub_1BC185528(a1, &qword_1EF3FC4A0, (uint64_t (*)(uint64_t))sub_1BC1855E0, &qword_1EF3FC4A8, MEMORY[0x1E0C95950]);
}

uint64_t sub_1BC1856B0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC1856C0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC184730(a1, a2);
}

uint64_t sub_1BC1856C8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  uint64_t v37;

  v2 = sub_1BC2B39E0();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B2438();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B2594();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  v15 = type metadata accessor for CycleData();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v33 = v5;
    v19 = a1;
    sub_1BC2B251C();
    sub_1BC20BBE8(v19, (uint64_t)v11, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {

      sub_1BC0F2444((uint64_t)v14, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    }
    else
    {
      sub_1BC185B10((uint64_t)v14, (uint64_t)v18);
      v20 = CycleData.localizedNextPhaseDateChangeDescription.getter();
      if (v21)
      {
        v35 = v20;
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1BC2B92D0;
        v36[0] = 0x74497265746F6F46;
        v36[1] = 0xEB000000005F6D65;
        sub_1BC2B242C();
        sub_1BC2B23FC();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v33);
        sub_1BC2B44FC();
        swift_bridgeObjectRelease();
        v23 = sub_1BC2B2EDC();
        v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
        *(_QWORD *)(v22 + 56) = v23;
        *(_QWORD *)(v22 + 64) = sub_1BC0E519C(&qword_1EF3F8B78, v24, MEMORY[0x1E0D2B6A8]);
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 32));
        sub_1BC2B2ED0();

        sub_1BC185B54((uint64_t)v18);
        return v22;
      }
      sub_1BC185B54((uint64_t)v18);

    }
  }
  sub_1BC2B39C8();
  v25 = a1;
  v26 = sub_1BC2B39D4();
  v27 = sub_1BC2B48C8();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v36[0] = v29;
    *(_DWORD *)v28 = 136315138;
    v37 = (uint64_t)a1;
    sub_1BC13BA28();
    v30 = sub_1BC2B4F94();
    v37 = sub_1BC12540C(v30, v31, v36);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v26, v27, "[MedicationsPauseDataSource] Unable to set the next phase footer information because contextual information is nil. Current Schedule: %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v29, -1, -1);
    MEMORY[0x1BCCEF3A0](v28, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v35);
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC185B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CycleData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC185B54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CycleData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC185B90()
{
  uint64_t result;
  uint64_t v1;

  sub_1BC2B2F00();
  result = sub_1BC2B2EF4();
  qword_1EF3FC4C0 = v1;
  return result;
}

double sub_1BC185BC0()
{
  double result;

  if (qword_1EF3F80D0 != -1)
    swift_once();
  result = *(double *)&qword_1EF3FC4C0 * 0.5;
  *(double *)&qword_1EF3FC4C8 = *(double *)&qword_1EF3FC4C0 * 0.5;
  return result;
}

uint64_t DurationDatePickerItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DurationDatePickerItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t DurationDatePickerItem.uniqueIdentifier.getter()
{
  type metadata accessor for DurationDatePickerItem();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000017;
}

uint64_t type metadata accessor for DurationDatePickerItem()
{
  uint64_t result;

  result = qword_1EF3FC578;
  if (!qword_1EF3FC578)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DurationDatePickerItem.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 20);
  v4 = sub_1BC2B2438();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DurationDatePickerItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DurationDatePickerItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.title.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t DurationDatePickerItem.placeholderText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DurationDatePickerItem.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.placeholderText.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t DurationDatePickerItem.cellAccessories.getter()
{
  type metadata accessor for DurationDatePickerItem();
  return swift_bridgeObjectRetain();
}

uint64_t DurationDatePickerItem.cellAccessories.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for DurationDatePickerItem() + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.cellAccessories.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t DurationDatePickerItem.backgroundConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 36);
  v4 = sub_1BC2B3B48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DurationDatePickerItem.backgroundConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 36);
  v4 = sub_1BC2B3B48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DurationDatePickerItem.backgroundConfiguration.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t sub_1BC185FF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  if (*a1)
    v3 = a1[1];
  else
    v3 = 0;
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  v5 = *v4;
  sub_1BC0F2690(v2);
  result = sub_1BC0F2600(v5);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t DurationDatePickerItem.dataProvider.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t DurationDatePickerItem.dataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.dataProvider.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t sub_1BC18610C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC118CE4;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC186184(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC118CE4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  v8 = *v7;
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DurationDatePickerItem.updateHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t DurationDatePickerItem.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.updateHandler.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t sub_1BC1862CC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC1777D0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC186344(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC1777D0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  v8 = *v7;
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DurationDatePickerItem.deletionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t DurationDatePickerItem.deletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.deletionHandler.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t DurationDatePickerItem.isEditEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 52));
}

uint64_t DurationDatePickerItem.isEditEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DurationDatePickerItem();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.isEditEnabled.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t DurationDatePickerItem.datePickerMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 56));
}

uint64_t DurationDatePickerItem.datePickerMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DurationDatePickerItem();
  *(_QWORD *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.datePickerMode.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t DurationDatePickerItem.datePickerStyle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 60));
}

uint64_t DurationDatePickerItem.datePickerStyle.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DurationDatePickerItem();
  *(_QWORD *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.datePickerStyle.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t DurationDatePickerItem.minimumDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 64);
  return sub_1BC186618(v3, a1);
}

uint64_t sub_1BC186618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DurationDatePickerItem.minimumDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 64);
  return sub_1BC1866A4(a1, v3);
}

uint64_t sub_1BC1866A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DurationDatePickerItem.minimumDate.modify())()
{
  type metadata accessor for DurationDatePickerItem();
  return nullsub_1;
}

uint64_t static DurationDatePickerItem.defaultBackgroundConfiguration.getter()
{
  id v0;

  sub_1BC2B3B24();
  v0 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  return sub_1BC2B3B18();
}

uint64_t DurationDatePickerItem.init(uuid:title:placeholderText:isEditEnabled:cellAccessories:backgroundConfiguration:datePickerMode:datePickerStyle:minimumDate:dataProvider:updateHandler:deletionHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v20;
  uint64_t v21;
  int *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;

  type metadata accessor for DurationDatePickerCollectionViewCell();
  sub_1BC0E008C(&qword_1EF3FC4D8, v20, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerCollectionViewCell, (uint64_t)&protocol conformance descriptor for DurationDatePickerCollectionViewCell);
  *a9 = sub_1BC2B2930();
  a9[1] = v21;
  v22 = (int *)type metadata accessor for DurationDatePickerItem();
  v23 = (uint64_t *)((char *)a9 + v22[7]);
  v24 = (uint64_t *)((char *)a9 + v22[10]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (uint64_t *)((char *)a9 + v22[11]);
  *v25 = 0;
  v25[1] = 0;
  v26 = (uint64_t *)((char *)a9 + v22[12]);
  *v26 = 0;
  v26[1] = 0;
  v27 = (uint64_t)a9 + v22[16];
  v28 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = (char *)a9 + v22[5];
  v30 = sub_1BC2B2438();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, a1, v30);
  v31 = (uint64_t *)((char *)a9 + v22[6]);
  *v31 = a2;
  v31[1] = a3;
  *v23 = a4;
  v23[1] = a5;
  *((_BYTE *)a9 + v22[13]) = a6;
  *(uint64_t *)((char *)a9 + v22[14]) = a10;
  *(uint64_t *)((char *)a9 + v22[15]) = a11;
  sub_1BC1866A4(a12, v27);
  sub_1BC0F2600(*v24);
  *v24 = a13;
  v24[1] = a14;
  sub_1BC0F2600(*v25);
  *v25 = a15;
  v25[1] = a16;
  sub_1BC0F2600(*v26);
  *v26 = a17;
  v26[1] = a18;
  *(uint64_t *)((char *)a9 + v22[8]) = a7;
  v32 = (char *)a9 + v22[9];
  v33 = sub_1BC2B3B48();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v32, a8, v33);
}

uint64_t type metadata accessor for DurationDatePickerCollectionViewCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1869A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1869D4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_1BC1869E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  sub_1BC0F2690(v2);
  return v2;
}

uint64_t sub_1BC186A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;

  if (a1)
    v5 = a2;
  else
    v5 = 0;
  v6 = (uint64_t *)(v3 + *(int *)(a3 + 40));
  result = sub_1BC0F2600(*v6);
  *v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1BC186A5C(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(int *)(a2 + 40);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v2 + v3);
  v6 = *v4;
  v5 = v4[1];
  if (!v6)
    v5 = 0;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v2;
  return sub_1BC186A90;
}

uint64_t sub_1BC186A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  sub_1BC0F2690(v2);
  return v2;
}

uint64_t sub_1BC186AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;

  if (a1)
    v5 = a2;
  else
    v5 = 0;
  v6 = (uint64_t *)(v3 + *(int *)(a3 + 44));
  result = sub_1BC0F2600(*v6);
  *v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1BC186B10(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(int *)(a2 + 44);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v2 + v3);
  v6 = *v4;
  v5 = v4[1];
  if (!v6)
    v5 = 0;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v2;
  return sub_1BC186A90;
}

uint64_t sub_1BC186B44(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(result + 8);
  v2 = (_QWORD *)(*(_QWORD *)(result + 16) + *(int *)(result + 24));
  if (!*(_QWORD *)result)
    v1 = 0;
  *v2 = *(_QWORD *)result;
  v2[1] = v1;
  return result;
}

unint64_t sub_1BC186B64()
{
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000017;
}

uint64_t sub_1BC186BC4(uint64_t a1, _QWORD **a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];

  sub_1BC0E5774(a1, (uint64_t)v7);
  v3 = *a2;
  v4 = (uint64_t)*a2 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v7, v4);
  v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xC0))(v5);
  return sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC186C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC186CA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC0))(v4);
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t (*sub_1BC186D30(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC186D78;
}

uint64_t sub_1BC186D78(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(a1 + 24)) + 0xC0))(result);
  return result;
}

id sub_1BC186DC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel);
  }
  else
  {
    swift_getObjectType();
    v4 = sub_1BC186E24();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC186E24()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = sub_1BC2B4460();
  v3 = v2;
  sub_1BC0E008C(&qword_1EF3FC4D8, v2, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerCollectionViewCell, (uint64_t)&protocol conformance descriptor for DurationDatePickerCollectionViewCell);
  v4 = v0;
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v9 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v3);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v6 = (void *)sub_1BC2B4C64();
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setUserInteractionEnabled_, 0);
  return v4;
}

id sub_1BC187080()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC36F0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setPreferredDatePickerStyle_, 1);
  objc_msgSend(v0, sel_setDatePickerMode_, 1);
  v5 = sub_1BC2B4460();
  v6 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  return v2;
}

id DurationDatePickerCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DurationDatePickerCollectionViewCell.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel] = 0;
  v2 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker;
  *(_QWORD *)&v0[v2] = sub_1BC187080();
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints] = MEMORY[0x1E0DEE9D8];

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC1873FC()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC186DC0();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker]);

  v4 = (void *)objc_opt_self();
  v5 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  *(_QWORD *)&v0[v5] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v0, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  LOBYTE(v7) = sub_1BC2B4ACC();
  if ((v7 & 1) != 0)
    sub_1BC18826C();
  else
    sub_1BC18870C();
  objc_msgSend(v0, sel_setNeedsLayout);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC2B92D0;
  v10 = sub_1BC2B3D40();
  v11 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC187620(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v5 = objc_msgSend(a1, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LODWORD(v5) = sub_1BC2B4ACC() & 1;
  v7 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  LODWORD(v6) = sub_1BC2B4ACC() & 1;

  if ((_DWORD)v5 != (_DWORD)v6)
  {
    swift_beginAccess();
    v8 = MEMORY[0x1BCCEF478](a3 + 16);
    if (v8)
    {
      v9 = (char *)v8;
      v10 = (void *)objc_opt_self();
      v11 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints;
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_deactivateConstraints_, v12);

      *(_QWORD *)&v9[v11] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v9, sel_traitCollection);
      v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

      LOBYTE(v13) = sub_1BC2B4ACC();
      if ((v13 & 1) != 0)
        sub_1BC18826C();
      else
        sub_1BC18870C();
      objc_msgSend(v9, sel_setNeedsLayout);

    }
  }
}

uint64_t sub_1BC1877DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  void *v32;
  void (*v33)(char *);
  char *v34;
  void *v35;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;

  v1 = v0;
  v2 = sub_1BC2B23F0();
  v43 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v42 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v42 - v10;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], v4);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - v13;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FC508, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, v4);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v42 - v16;
  v18 = (int *)type metadata accessor for DurationDatePickerItem();
  v19 = *((_QWORD *)v18 - 1);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item];
  swift_beginAccess();
  sub_1BC0E5774(v22, (uint64_t)v44);
  if (!v45)
  {
    sub_1BC0E8594((uint64_t)v44, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v19 + 56))(v17, 1, 1, v18);
    return sub_1BC0F2444((uint64_t)v17, (unint64_t *)&unk_1EF3FC508, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v23 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v17, v23 ^ 1u, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18) == 1)
    return sub_1BC0F2444((uint64_t)v17, (unint64_t *)&unk_1EF3FC508, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
  sub_1BC187DDC((uint64_t)v17, (uint64_t)v21);
  v24 = &v21[v18[9]];
  v25 = sub_1BC2B3B48();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v14, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
  MEMORY[0x1BCCEE23C](v14);
  v27 = sub_1BC186DC0();
  swift_bridgeObjectRetain();
  v28 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setText_, v28);

  v29 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker];
  objc_msgSend(v29, sel_setDatePickerMode_, *(_QWORD *)&v21[v18[14]]);
  objc_msgSend(v29, sel_setPreferredDatePickerStyle_, *(_QWORD *)&v21[v18[15]]);
  sub_1BC186618((uint64_t)&v21[v18[16]], (uint64_t)v11);
  v30 = v43;
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v32 = 0;
  if (v31(v11, 1, v2) != 1)
  {
    v32 = (void *)sub_1BC2B2360();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v2);
  }
  objc_msgSend(v29, sel_setMinimumDate_, v32);

  objc_msgSend(v1, sel_setUserInteractionEnabled_, v21[v18[13]]);
  v33 = *(void (**)(char *))&v21[v18[10]];
  if (!v33)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v9, 1, 1, v2);
    goto LABEL_11;
  }
  swift_retain();
  v33(v21);
  sub_1BC0F2600((uint64_t)v33);
  if (v31(v9, 1, v2) == 1)
  {
LABEL_11:
    sub_1BC0F2444((uint64_t)v9, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    goto LABEL_12;
  }
  v34 = v42;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v42, v9, v2);
  v35 = (void *)sub_1BC2B2360();
  objc_msgSend(v29, sel_setDate_animated_, v35, 1);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v2);
LABEL_12:
  v37 = (void *)objc_opt_self();
  v38 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v39 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_deactivateConstraints_, v39);

  *(_QWORD *)&v1[v38] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v1, sel_traitCollection);
  v41 = objc_msgSend(v40, sel_preferredContentSizeCategory);

  LOBYTE(v40) = sub_1BC2B4ACC();
  if ((v40 & 1) != 0)
    sub_1BC18826C();
  else
    sub_1BC18870C();
  objc_msgSend(v1, sel_setNeedsLayout);
  objc_msgSend(v29, sel_addTarget_action_forControlEvents_, v1, sel_pickerDateChanged_, 0xFFFFFFFFLL);
  sub_1BC187E20(v29);
  swift_bridgeObjectRetain();
  sub_1BC2B4AFC();
  return sub_1BC0E8594((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for DurationDatePickerItem);
}

uint64_t sub_1BC187DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DurationDatePickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC187E20(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  void (*v21)(char *, char *);
  id v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  uint64_t v33[5];

  v2 = v1;
  v32[0] = swift_getObjectType();
  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v32 - v10;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FC508, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, v8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v32 - v13;
  v15 = type metadata accessor for DurationDatePickerItem();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v19, (uint64_t)v33);
  if (v33[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v20 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1BC187DDC((uint64_t)v14, (uint64_t)v18);
      v21 = *(void (**)(char *, char *))&v18[*(int *)(v15 + 44)];
      if (v21)
      {
        swift_retain();
        v22 = objc_msgSend(a1, sel_date, v32[0]);
        sub_1BC2B23A8();

        v23 = sub_1BC2B23F0();
        v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 0, 1, v23);
        v21(v18, v11);
        sub_1BC0F2600((uint64_t)v21);
        sub_1BC0F2444((uint64_t)v11, (unint64_t *)&qword_1EDA0E710, v24);
      }
      return sub_1BC0E8594((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DurationDatePickerItem);
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1BC0F2444((uint64_t)v14, (unint64_t *)&unk_1EF3FC508, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
  sub_1BC2B39B0();
  v26 = sub_1BC2B39D4();
  v27 = sub_1BC2B48E0();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v33[0] = v29;
    *(_DWORD *)v28 = 136315138;
    v30 = sub_1BC2B54F8();
    v32[1] = sub_1BC12540C(v30, v31, v33);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v26, v27, "[%s] item is not a DatePickerItem", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v29, -1, -1);
    MEMORY[0x1BCCEF3A0](v28, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC18826C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BAF60;
  v3 = sub_1BC186DC0();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = objc_msgSend(v1, sel_contentView);
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  if (qword_1EF3F80D0 != -1)
    swift_once();
  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EF3FC4C0);

  *(_QWORD *)(v2 + 32) = v7;
  v8 = sub_1BC186DC0();
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v1, sel_contentView);
  v11 = objc_msgSend(v10, sel_topAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 6.0);
  *(_QWORD *)(v2 + 40) = v12;
  v13 = objc_msgSend(v1, sel_separatorLayoutGuide);
  v14 = objc_msgSend(v13, sel_leadingAnchor);

  v15 = sub_1BC186DC0();
  v16 = objc_msgSend(v15, sel_leadingAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v2 + 48) = v17;
  v18 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker];
  v19 = objc_msgSend(v18, sel_leadingAnchor);
  v20 = objc_msgSend(v1, sel_contentView);
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, *(double *)&qword_1EF3FC4C0);
  *(_QWORD *)(v2 + 56) = v22;
  v23 = objc_msgSend(v18, sel_trailingAnchor);
  v24 = objc_msgSend(v1, sel_contentView);
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  if (qword_1EF3F80D8 != -1)
    swift_once();
  v26 = objc_msgSend(v23, sel_constraintLessThanOrEqualToAnchor_constant_, v25, -*(double *)&qword_1EF3FC4C8);

  *(_QWORD *)(v2 + 64) = v26;
  v27 = objc_msgSend(v18, sel_topAnchor);
  v28 = sub_1BC186DC0();
  v29 = objc_msgSend(v28, sel_bottomAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, 6.0);
  *(_QWORD *)(v2 + 72) = v30;
  v31 = objc_msgSend(v18, sel_bottomAnchor);
  v32 = objc_msgSend(v1, sel_contentView);
  v33 = objc_msgSend(v32, sel_bottomAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, -6.0);
  *(_QWORD *)(v2 + 80) = v34;
  sub_1BC2B45A4();
  v35 = v2;
  v36 = (void *)objc_opt_self();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v37 = (void *)sub_1BC2B4580();
  objc_msgSend(v36, sel_activateConstraints_, v37);

  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints] = v35;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC18870C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA310;
  v3 = sub_1BC186DC0();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = objc_msgSend(v1, sel_contentView);
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  if (qword_1EF3F80D0 != -1)
    swift_once();
  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EF3FC4C0);

  *(_QWORD *)(v2 + 32) = v7;
  v8 = sub_1BC186DC0();
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v1, sel_contentView);
  v11 = objc_msgSend(v10, sel_topAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 6.0);
  *(_QWORD *)(v2 + 40) = v12;
  v13 = objc_msgSend(v1, sel_contentView);
  v14 = objc_msgSend(v13, sel_bottomAnchor);

  v15 = sub_1BC186DC0();
  v16 = objc_msgSend(v15, sel_bottomAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, 6.0);
  *(_QWORD *)(v2 + 48) = v17;
  v18 = objc_msgSend(v1, sel_separatorLayoutGuide);
  v19 = objc_msgSend(v18, sel_leadingAnchor);

  v20 = sub_1BC186DC0();
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v2 + 56) = v22;
  v23 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker];
  v24 = objc_msgSend(v23, sel_leadingAnchor);
  v25 = sub_1BC186DC0();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v24, sel_constraintGreaterThanOrEqualToAnchor_constant_, v26, *(double *)&qword_1EF3FC4C0);
  *(_QWORD *)(v2 + 64) = v27;
  v28 = objc_msgSend(v1, sel_contentView);
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v23, sel_trailingAnchor);
  if (qword_1EF3F80D8 != -1)
    swift_once();
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, *(double *)&qword_1EF3FC4C8);

  *(_QWORD *)(v2 + 72) = v31;
  v32 = objc_msgSend(v23, sel_topAnchor);
  v33 = objc_msgSend(v1, sel_contentView);
  v34 = objc_msgSend(v33, sel_topAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 6.0);
  *(_QWORD *)(v2 + 80) = v35;
  v36 = objc_msgSend(v1, sel_contentView);
  v37 = objc_msgSend(v36, sel_bottomAnchor);

  v38 = objc_msgSend(v23, sel_bottomAnchor);
  v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v38, 6.0);

  *(_QWORD *)(v2 + 88) = v39;
  sub_1BC2B45A4();
  v40 = v2;
  v41 = (void *)objc_opt_self();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v42 = (void *)sub_1BC2B4580();
  objc_msgSend(v41, sel_activateConstraints_, v42);

  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints] = v40;
  return swift_bridgeObjectRelease();
}

id DurationDatePickerCollectionViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DurationDatePickerCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DurationDatePickerCollectionViewCell.deselectionBehavior.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC2B2C6C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BC188D0C()
{
  return sub_1BC0E008C(&qword_1EF3FC518, 255, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, (uint64_t)&protocol conformance descriptor for DurationDatePickerItem);
}

uint64_t sub_1BC188D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DurationDatePickerCollectionViewCell, a3);
  return sub_1BC2B2B34();
}

uint64_t sub_1BC188DA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC2B2C6C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BC188DEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  v4 = *v3;
  if (*v3)
    v5 = v3[1];
  else
    v5 = 0;
  *a2 = v4;
  a2[1] = v5;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC188E40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for DurationDatePickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC2B2438();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_1BC2B3B48();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    v26 = a3[10];
    v27 = (_QWORD *)((char *)v4 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    if (*v28)
    {
      v29 = v28[1];
      *v27 = *v28;
      v27[1] = v29;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
    }
    v31 = a3[11];
    v32 = (_QWORD *)((char *)v4 + v31);
    v33 = (_QWORD *)((char *)a2 + v31);
    if (*v33)
    {
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
    }
    v35 = a3[12];
    v36 = (_QWORD *)((char *)v4 + v35);
    v37 = (_QWORD *)((char *)a2 + v35);
    if (*v37)
    {
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
    }
    v39 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *(_QWORD *)((char *)v4 + v39) = *(_QWORD *)((char *)a2 + v39);
    v40 = a3[16];
    *(_QWORD *)((char *)v4 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    v43 = sub_1BC2B23F0();
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
  }
  return v4;
}

uint64_t destroy for DurationDatePickerItem(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[9];
  v7 = sub_1BC2B3B48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  if (*(_QWORD *)(a1 + a2[10]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[12]))
    swift_release();
  v8 = a1 + a2[16];
  v9 = sub_1BC2B23F0();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  return result;
}

_QWORD *initializeWithCopy for DurationDatePickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B2438();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_1BC2B3B48();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  v25 = a3[10];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  if (*v27)
  {
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v29 = a3[11];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  if (*v31)
  {
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
  }
  v33 = a3[12];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  if (*v35)
  {
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  v37 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);
  v38 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_1BC2B23F0();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  return a1;
}

_QWORD *assignWithCopy for DurationDatePickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1BC2B3B48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[10];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a1 + v20);
  v24 = *(_QWORD *)((char *)a2 + v20);
  if (v23)
  {
    if (v24)
    {
      v25 = *((_QWORD *)v22 + 1);
      *v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *((_QWORD *)v22 + 1);
    *v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_8:
  v27 = a3[11];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)((char *)a1 + v27);
  v31 = *(_QWORD *)((char *)a2 + v27);
  if (v30)
  {
    if (v31)
    {
      v32 = *((_QWORD *)v29 + 1);
      *v28 = v31;
      v28[1] = v32;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v31)
  {
    v33 = *((_QWORD *)v29 + 1);
    *v28 = v31;
    v28[1] = v33;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_15:
  v34 = a3[12];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)((char *)a1 + v34);
  v38 = *(_QWORD *)((char *)a2 + v34);
  if (v37)
  {
    if (v38)
    {
      v39 = *((_QWORD *)v36 + 1);
      *v35 = v38;
      v35[1] = v39;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v38)
  {
    v40 = *((_QWORD *)v36 + 1);
    *v35 = v38;
    v35[1] = v40;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
LABEL_22:
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  v41 = a3[16];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_1BC2B23F0();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46(v43, 1, v44);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_27;
  }
  if (v48)
  {
LABEL_27:
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  return a1;
}

_OWORD *initializeWithTake for DurationDatePickerItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1BC2B3B48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[10];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[11];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  v23 = *v22;
  if (*v22)
  {
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  v25 = a3[12];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  v28 = *v27;
  if (*v27)
  {
    v29 = v27[1];
    *v26 = v28;
    v26[1] = v29;
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v30 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  v31 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_1BC2B23F0();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  return a1;
}

_QWORD *assignWithTake for DurationDatePickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_1BC2B3B48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = a3[10];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *(_QWORD *)((char *)a2 + v25);
  if (v28)
  {
    if (v29)
    {
      v30 = *((_QWORD *)v27 + 1);
      *v26 = v29;
      v26[1] = v30;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *((_QWORD *)v27 + 1);
    *v26 = v29;
    v26[1] = v31;
    goto LABEL_8;
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_8:
  v32 = a3[11];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)((char *)a1 + v32);
  v36 = *(_QWORD *)((char *)a2 + v32);
  if (v35)
  {
    if (v36)
    {
      v37 = *((_QWORD *)v34 + 1);
      *v33 = v36;
      v33[1] = v37;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v36)
  {
    v38 = *((_QWORD *)v34 + 1);
    *v33 = v36;
    v33[1] = v38;
    goto LABEL_15;
  }
  *(_OWORD *)v33 = *(_OWORD *)v34;
LABEL_15:
  v39 = a3[12];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (char *)a2 + v39;
  v42 = *(_QWORD *)((char *)a1 + v39);
  v43 = *(_QWORD *)((char *)a2 + v39);
  if (v42)
  {
    if (v43)
    {
      v44 = *((_QWORD *)v41 + 1);
      *v40 = v43;
      v40[1] = v44;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v43)
  {
    v45 = *((_QWORD *)v41 + 1);
    *v40 = v43;
    v40[1] = v45;
    goto LABEL_22;
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_22:
  v46 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);
  v47 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = sub_1BC2B23F0();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_27;
  }
  if (v54)
  {
LABEL_27:
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for DurationDatePickerItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC189C6C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B2438();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_1BC2B3B48();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[16];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DurationDatePickerItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC189D54(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BC2B2438();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_1BC2B3B48();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[16];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BC189E2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BC2B2438();
  if (v0 <= 0x3F)
  {
    sub_1BC2B3B48();
    if (v1 <= 0x3F)
    {
      sub_1BC0E7998(319, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t method lookup function for DurationDatePickerCollectionViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.itemUpdated()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_1BC189FAC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC189FD0(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC187620(a1, a2, v2);
}

uint64_t sub_1BC189FD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for MedicationSourceListViewController()
{
  uint64_t result;

  result = qword_1EF3FC618;
  if (!qword_1EF3FC618)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC18A044()
{
  return swift_initClassMetadata2();
}

id sub_1BC18A09C(void *a1, void *a2)
{
  void *v2;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  type metadata accessor for MedicationSourceListDataSource();
  swift_allocObject();
  v5 = v2;
  v6 = a2;
  v7 = a1;
  v8 = sub_1BC1F86CC(v6, v7, 0);
  v9 = qword_1EF3FC608;
  *(_QWORD *)&v5[qword_1EF3FC608] = v8;
  *(_QWORD *)&v5[qword_1EF3FC610] = v6;
  v10 = v6;

  sub_1BC2B2DEC();
  sub_1BC0E8710();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2B92D0;
  v12 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v11 + 32) = *(_QWORD *)&v5[v9];
  *(_QWORD *)(v11 + 40) = v12;
  swift_retain();
  sub_1BC2B2E10();
  v13 = (id)sub_1BC2B2FE4();
  objc_msgSend(v13, sel_setModalPresentationStyle_, 2);

  return v13;
}

void sub_1BC18A1B8()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC18A210()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MedicationSourceListViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v3 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v4 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setTitle_, v4, 0xE000000000000000);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC18A35C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC18A210();

}

void sub_1BC18A390()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC18A3BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC18A3EC()
{
  uint64_t v0;

  swift_release();

}

id sub_1BC18A418()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSourceListViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC18A44C(uint64_t a1)
{
  swift_release();

}

uint64_t sub_1BC18A484()
{
  return type metadata accessor for MedicationSourceListViewController();
}

void sub_1BC18A48C()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  objc_msgSend(v0, sel_setModalPresentationStyle_, 2);
  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B4DA8();
  v3 = (id)sub_1BC2B4928();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_1BC11D334, v2);

}

void sub_1BC18A5B8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC18A48C();

}

void sub_1BC18A5EC(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

}

uint64_t sub_1BC18A644()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t MedicationRegularEducationDataSource.__allocating_init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return MedicationRegularEducationDataSource.init(with:analyticsManager:)(a1, a2);
}

uint64_t MedicationRegularEducationDataSource.init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v12;

  v4 = qword_1EF3FC668;
  *(_QWORD *)(v2 + qword_1EF3FC668) = 0;
  *(_QWORD *)(v2 + qword_1EF3FC670) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v2 + qword_1EF3FC678) = a2;
  *(_QWORD *)(v2 + v4) = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v5 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v6 = sub_1BC2B2144();
  v8 = v7;
  swift_bridgeObjectRelease();

  v9 = (uint64_t *)(v2 + qword_1EF3FC680);
  *v9 = v6;
  v9[1] = v8;
  swift_release();
  v10 = sub_1BC2B2750();
  swift_retain();
  sub_1BC18A8DC(a1);
  sub_1BC2B3ED8();
  sub_1BC18B5B8(v12, v10);

  swift_release();
  swift_release();
  swift_release();
  return v10;
}

uint64_t MedicationRegularEducationDataSource.__allocating_init(with:analyticsManager:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_1BC18C290(a1, a2);
  swift_release();
  return v4;
}

uint64_t MedicationRegularEducationDataSource.init(with:analyticsManager:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_1BC18C290(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1BC18A8DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  id v15;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - v3;
  sub_1BC18C600();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a1;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v15 = (id)sub_1BC2B4A0C();
  v10 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1BC106408();
  sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);

  v11 = swift_allocObject();
  swift_weakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = a1;
  sub_1BC0E519C((unint64_t *)&unk_1EF3FC700, (uint64_t (*)(uint64_t))sub_1BC18C600, MEMORY[0x1E0C95CB8]);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC18AB38()
{
  uint64_t result;
  uint64_t v1;
  void *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_1BC2B3ED8();
    sub_1BC18B5B8(v2, v1);

    return swift_release();
  }
  return result;
}

uint64_t sub_1BC18ABA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(_QWORD *, _QWORD);
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;
  char v17;
  void (*v18)(_QWORD *, _QWORD);
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  _QWORD v27[3];
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  _UNKNOWN **v31;

  v3 = sub_1BC2B2D20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v25 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  if (a1)
    sub_1BC2B2CC0();
  else
    sub_1BC2B2C9C();
  v13 = (void (*)(_QWORD *, _QWORD))sub_1BC2B2CF0();
  *(_QWORD *)(v14 + 16) = 0x4024000000000000;
  v13(v29, 0);
  if (*(_QWORD *)(v1 + qword_1EF3FC668))
  {
    v26 = v7;
    v30 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    v31 = &protocol witness table for HKMedicationUserDomainConcept;
    swift_retain();
    sub_1BC2B3ED8();
    v15 = v30;
    v16 = v31;
    __swift_project_boxed_opaque_existential_0(v29, v30);
    ((void (*)(_QWORD *__return_ptr, uint64_t, _UNKNOWN **))v16[6])(v27, v15, v16);
    if (v28)
    {
      __swift_project_boxed_opaque_existential_0(v27, v28);
      v17 = sub_1BC2B2780();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
      if ((v17 & 1) != 0)
      {
        if (a1)
        {
          if (a1 == 1)
          {
            v18 = (void (*)(_QWORD *, _QWORD))sub_1BC2B2CF0();
            *v19 = 0x4024000000000000;
            v18(v27, 0);
          }
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v12, v3);
          v21 = v26;
          sub_1BC2B2C90();
          v22 = *(void (**)(char *, uint64_t))(v4 + 8);
          v22(v10, v3);
          v22(v12, v3);
          (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v21, v3);
        }
      }
    }
    else
    {
      sub_1BC18C5BC((uint64_t)v27, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v12, v3);
    v20 = sub_1BC2B2D14();
    swift_release();
    v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    v23(v10, v3);
    sub_1BC18C40C((uint64_t)v29);
    v23(v12, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
    return 0;
  }
  return v20;
}

void MedicationRegularEducationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationRegularEducationDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC18AEC4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationRegularEducationDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationRegularEducationDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC18AFEC(uint64_t a1)
{
  return sub_1BC18ABA8(a1);
}

uint64_t sub_1BC18B00C()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationRegularEducationDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall MedicationRegularEducationDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
  type metadata accessor for MedicationEducationAndComponentsItemCell();
  sub_1BC0E519C(&qword_1EF3F9F20, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationAndComponentsItemCell);
  sub_1BC2B497C();
  sub_1BC2B3038();
  sub_1BC2B497C();
}

uint64_t sub_1BC18B0F4()
{
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
  type metadata accessor for MedicationEducationAndComponentsItemCell();
  sub_1BC0E519C(&qword_1EF3F9F20, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationAndComponentsItemCell);
  sub_1BC2B497C();
  sub_1BC2B3038();
  return sub_1BC2B497C();
}

uint64_t MedicationRegularEducationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t result;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v7 = sub_1BC2B2438();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v11);
  if (sub_1BC2B4460() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v14 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    sub_1BC2B3C68();
    v18 = sub_1BC2B28F4();
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v20 = sub_1BC2B28E8();
    a3[3] = v18;
    result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v19, MEMORY[0x1E0D2A8A0]);
    a3[4] = result;
    *a3 = v20;
    return result;
  }
  if (sub_1BC2B4460() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      goto LABEL_20;
  }
  if (!*(_QWORD *)(v3 + qword_1EF3FC668))
  {
LABEL_20:
    v29 = sub_1BC2B296C();
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a3[3] = v29;
    a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v30, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1BC2B2960();
  }
  swift_retain();
  sub_1BC2B3ED8();
  v22 = (id)v34;
  v23 = objc_msgSend((id)v34, sel_localizedOntologyEducationContent);
  if (v23
    && (v24 = v23,
        v25 = objc_msgSend(v23, sel_primarySection),
        v24,
        v25))
  {
    v26 = sub_1BC2B4C34();

    v36 = v26;
    sub_1BC18C440();
    sub_1BC0E519C((unint64_t *)&qword_1EF3FB1E0, (uint64_t (*)(uint64_t))sub_1BC18C440, MEMORY[0x1E0DEAF20]);
    sub_1BC2B440C();

    swift_bridgeObjectRelease();
    v34 = 0x74497265746F6F46;
    v35 = 0xEB000000005F6D65;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v27 = sub_1BC2B2EDC();
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
    a3[3] = v27;
    a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v28, MEMORY[0x1E0D2B6A8]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1BC2B2ED0();
  }
  else
  {

    v31 = sub_1BC2B296C();
    v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a3[3] = v31;
    a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v32, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1BC2B2960();
  }
  return swift_release();
}

uint64_t sub_1BC18B598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return MedicationRegularEducationDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1BC18B5B8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47[5];
  _BYTE v48[40];
  _QWORD v49[6];

  v42 = a2;
  v3 = sub_1BC2B2438();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - v8;
  v10 = sub_1BC2B2BC4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v41 = (char *)&v39 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v39 - v19;
  v49[3] = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v49[4] = &protocol witness table for HKMedicationUserDomainConcept;
  v49[0] = a1;
  sub_1BC0E79F0((uint64_t)v49, (uint64_t)v48);
  v21 = a1;
  sub_1BC258050((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v9, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
    v22 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v39 = v4;
    v23 = v3;
    v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v24(v20, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v20, v10);
    v22 = sub_1BC0FA280(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v26 = *(_QWORD *)(v22 + 16);
    v25 = *(_QWORD *)(v22 + 24);
    if (v26 >= v25 >> 1)
      v22 = sub_1BC0FA280(v25 > 1, v26 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v26 + 1;
    v24((char *)(v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v26), v18, v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    v3 = v23;
    v4 = v39;
  }
  sub_1BC258258(2, (uint64_t)&v45);
  v27 = v42;
  if (v46)
  {
    sub_1BC0F2730(&v45, (uint64_t)v47);
    v28 = *(_QWORD *)(v27 + qword_1EF3FC678);
    LOBYTE(v45) = 0;
    sub_1BC258D6C(&v45, v28, (uint64_t)&v43);
    if (v44)
    {
      sub_1BC0F2730(&v43, (uint64_t)&v45);
    }
    else
    {
      sub_1BC18C5BC((uint64_t)&v43, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
      sub_1BC258A5C((uint64_t *)&v45);
    }
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1BC2B92C0;
    sub_1BC0E79F0((uint64_t)v47, v30 + 32);
    sub_1BC0E79F0((uint64_t)&v45, v30 + 72);
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v31 = v41;
    sub_1BC2B2BAC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_1BC0FA280(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    v33 = *(_QWORD *)(v22 + 16);
    v32 = *(_QWORD *)(v22 + 24);
    if (v33 >= v32 >> 1)
      v22 = sub_1BC0FA280(v32 > 1, v33 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v33 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v33, v31, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v45);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v45, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
    v29 = *(_QWORD *)(v27 + qword_1EF3FC678);
    LOBYTE(v47[0]) = 0;
    sub_1BC258D6C(v47, v29, (uint64_t)&v45);
    if (v46)
    {
      sub_1BC0F2730(&v45, (uint64_t)v47);
    }
    else
    {
      sub_1BC18C5BC((uint64_t)&v45, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
      sub_1BC258A5C(v47);
    }
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1BC2B92D0;
    sub_1BC0E79F0((uint64_t)v47, v34 + 32);
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v35 = v40;
    sub_1BC2B2BAC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_1BC0FA280(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    v37 = *(_QWORD *)(v22 + 16);
    v36 = *(_QWORD *)(v22 + 24);
    if (v37 >= v36 >> 1)
      v22 = sub_1BC0FA280(v36 > 1, v37 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v37 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v37, v35, v10);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC18C40C((uint64_t)v48);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
}

uint64_t sub_1BC18BC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48[5];
  _BYTE v49[40];
  uint64_t v50[6];

  v43 = a2;
  v42 = sub_1BC2B2438();
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - v10;
  v12 = sub_1BC2B2BC4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v40 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v40 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v40 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v40 - v22;
  v50[3] = a3;
  v50[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v50);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_1BC0E79F0((uint64_t)v50, (uint64_t)v49);
  sub_1BC258050((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v11, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
    v25 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v26(v23, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v21, v23, v12);
    v25 = sub_1BC0FA280(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v28 = *(_QWORD *)(v25 + 16);
    v27 = *(_QWORD *)(v25 + 24);
    if (v28 >= v27 >> 1)
      v25 = sub_1BC0FA280(v27 > 1, v28 + 1, 1, v25);
    *(_QWORD *)(v25 + 16) = v28 + 1;
    v26((char *)(v25+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v28), v21, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
  }
  sub_1BC258258(2, (uint64_t)&v46);
  v29 = v43;
  if (v47)
  {
    sub_1BC0F2730(&v46, (uint64_t)v48);
    v30 = *(_QWORD *)(v29 + qword_1EF3FC678);
    LOBYTE(v46) = 0;
    sub_1BC258D6C(&v46, v30, (uint64_t)&v44);
    if (v45)
    {
      sub_1BC0F2730(&v44, (uint64_t)&v46);
    }
    else
    {
      sub_1BC18C5BC((uint64_t)&v44, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
      sub_1BC258A5C((uint64_t *)&v46);
    }
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1BC2B92C0;
    sub_1BC0E79F0((uint64_t)v48, v32 + 32);
    sub_1BC0E79F0((uint64_t)&v46, v32 + 72);
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
    sub_1BC2B2BAC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_1BC0FA280(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
    v34 = *(_QWORD *)(v25 + 16);
    v33 = *(_QWORD *)(v25 + 24);
    if (v34 >= v33 >> 1)
      v25 = sub_1BC0FA280(v33 > 1, v34 + 1, 1, v25);
    *(_QWORD *)(v25 + 16) = v34 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v25+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v34, v18, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v46, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
    v31 = *(_QWORD *)(v29 + qword_1EF3FC678);
    LOBYTE(v48[0]) = 0;
    sub_1BC258D6C(v48, v31, (uint64_t)&v46);
    if (v47)
    {
      sub_1BC0F2730(&v46, (uint64_t)v48);
    }
    else
    {
      sub_1BC18C5BC((uint64_t)&v46, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
      sub_1BC258A5C(v48);
    }
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BC2B92D0;
    sub_1BC0E79F0((uint64_t)v48, v35 + 32);
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
    v36 = v40;
    sub_1BC2B2BAC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_1BC0FA280(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
    v38 = *(_QWORD *)(v25 + 16);
    v37 = *(_QWORD *)(v25 + 24);
    if (v38 >= v37 >> 1)
      v25 = sub_1BC0FA280(v37 > 1, v38 + 1, 1, v25);
    *(_QWORD *)(v25 + 16) = v38 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v25+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v38, v36, v12);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC18C40C((uint64_t)v49);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
}

uint64_t sub_1BC18C290(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  *(_QWORD *)(v2 + qword_1EF3FC668) = 0;
  *(_QWORD *)(v2 + qword_1EF3FC670) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v2 + qword_1EF3FC678) = a2;
  v4 = qword_1EDA0FEE8;
  swift_retain();
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v6 = sub_1BC2B2144();
  v8 = v7;
  swift_bridgeObjectRelease();

  v9 = (uint64_t *)(v2 + qword_1EF3FC680);
  *v9 = v6;
  v9[1] = v8;
  swift_release();
  v10 = sub_1BC2B2750();
  v11 = a1[3];
  v12 = a1[4];
  v13 = __swift_project_boxed_opaque_existential_0(a1, v11);
  swift_retain();
  sub_1BC18BC2C((uint64_t)v13, v10, v11, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1BC18C40C(uint64_t a1)
{
  destroy for EducationDataSourceDisplayEvaluator();
  return a1;
}

void sub_1BC18C440()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA018)
  {
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA018);
  }
}

uint64_t sub_1BC18C494()
{
  return sub_1BC0E519C(&qword_1EF3FC698, (uint64_t (*)(uint64_t))type metadata accessor for MedicationRegularEducationDataSource, (uint64_t)&protocol conformance descriptor for MedicationRegularEducationDataSource);
}

uint64_t type metadata accessor for MedicationRegularEducationDataSource()
{
  uint64_t result;

  result = qword_1EF3FC6A0;
  if (!qword_1EF3FC6A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC18C4FC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationRegularEducationDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationRegularEducationDataSource.__allocating_init(with:analyticsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationRegularEducationDataSource + v0 + 80))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationRegularEducationDataSource + v0 + 88))();
}

uint64_t dispatch thunk of MedicationRegularEducationDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationRegularEducationDataSource + *v0 + 104))();
}

uint64_t sub_1BC18C5B4()
{
  return type metadata accessor for MedicationRegularEducationDataSource();
}

uint64_t sub_1BC18C5BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1BC0F1278(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BC18C600()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FC6F8)
  {
    sub_1BC106408();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FC6F8);
  }
}

uint64_t sub_1BC18C6B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC18C6D8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC18C704()
{
  return sub_1BC18AB38();
}

id MedicationChartUserInfo.__allocating_init(takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  objc_class *v6;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v13 = (char *)objc_allocWithZone(v6);
  *(double *)&v13[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount] = a5;
  *(double *)&v13[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount] = a6;
  v14 = &v13[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval];
  v15 = sub_1BC2B20FC();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  sub_1BC0E79F0(a2, (uint64_t)&v13[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication]);
  *(_QWORD *)&v13[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount] = a3;
  *(_QWORD *)&v13[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount] = a4;
  v19.receiver = v13;
  v19.super_class = v6;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a2);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return v17;
}

id MedicationChartUserInfo.init(takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  char *v6;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  *(double *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount] = a5;
  *(double *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount] = a6;
  v11 = &v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval];
  v12 = sub_1BC2B20FC();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  sub_1BC0E79F0(a2, (uint64_t)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication]);
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount] = a3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount] = a4;
  v16.receiver = v6;
  v16.super_class = (Class)type metadata accessor for MedicationChartUserInfo(0);
  v14 = objc_msgSendSuper2(&v16, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a2);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  return v14;
}

uint64_t type metadata accessor for MedicationChartUserInfo(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FC768);
}

void MedicationChartUserInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationChartUserInfo.__deallocating_deinit()
{
  return sub_1BC128598(type metadata accessor for MedicationChartUserInfo);
}

uint64_t sub_1BC18C9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  char v15;
  char v16;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  sub_1BC0E1C64(0, &qword_1EDA0E740, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - v2;
  sub_1BC0E1C64(0, (unint64_t *)&unk_1EDA0E730, (void (*)(uint64_t))MEMORY[0x1E0CB11F0]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - v5;
  v7 = sub_1BC2B20FC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval;
  v12 = sub_1BC2B2594();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v20(v6, 1, 1, v12);
  v13 = sub_1BC2B25B8();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v19(v3, 1, 1, v13);
  sub_1BC2B20E4();
  sub_1BC18DDE4();
  v21 = v11;
  LOBYTE(v11) = sub_1BC2B4424();
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  v15 = 0;
  if ((v11 & 1) == 0)
  {
    v20(v6, 1, 1, v12);
    v19(v3, 1, 1, v13);
    sub_1BC2B20E4();
    v16 = sub_1BC2B4424();
    v14(v10, v7);
    v15 = v16 ^ 1;
  }
  return v15 & 1;
}

double sub_1BC18CCF4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
  v2 = 0.0;
  v3 = 0.0;
  if (v1)
    v3 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount) / (double)v1;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount);
  if (v4)
    v2 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount) / (double)v4;
  return v3 + v2;
}

id MedicationChartPoint.__allocating_init(startDate:endDate:takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v17 = *(_QWORD *)(a4 + 24);
  v18 = *(_QWORD *)(a4 + 32);
  v19 = __swift_mutable_project_boxed_opaque_existential_1(a4, v17);
  v20 = sub_1BC18DA20(a1, a2, a3, v19, a5, a6, a7, a8, v8, v17, v18);
  __swift_destroy_boxed_opaque_existential_0(a4);
  return v20;
}

id MedicationChartPoint.init(startDate:endDate:takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  char *v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v25;

  v17 = *(_QWORD *)(a4 + 24);
  v18 = *(_QWORD *)(a4 + 32);
  v19 = __swift_mutable_project_boxed_opaque_existential_1(a4, v17);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  v23 = sub_1BC18D874(a1, a2, a3, (uint64_t)v21, a5, a6, v8, v17, a7, a8, v18);
  __swift_destroy_boxed_opaque_existential_0(a4);
  return v23;
}

uint64_t sub_1BC18CEFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v3 = v2;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - v4;
  v6 = (void *)sub_1BC2B2360();
  v7 = (void *)sub_1BC2B2360();
  v8 = (id)HKUIMidDate();

  if (v8)
  {
    sub_1BC2B23A8();

    v9 = sub_1BC2B23F0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
  }
  else
  {
    v10 = sub_1BC2B23F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  a1[3] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1BC141D44((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
}

void sub_1BC18D0F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;

  if ((sub_1BC18C9E4() & 1) != 0)
    v3 = sub_1BC18CCF4();
  else
    v3 = *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount)
       + *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount);
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
  *(double *)a1 = v3;
}

uint64_t sub_1BC18D248()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;

  v1 = sub_1BC18C9E4();
  sub_1BC18DB14();
  v2 = swift_allocObject();
  v3 = v2;
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92C0;
  if ((v1 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
    if (v4)
      v5 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount) / (double)v4;
    else
      v5 = 0.0;
    v9 = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB070];
    *(double *)(v2 + 32) = v5;
    v8 = sub_1BC18CCF4();
    *(_QWORD *)(v3 + 88) = v9;
  }
  else
  {
    v6 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount);
    v7 = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB070];
    *(double *)(v2 + 32) = v6;
    v8 = v6 + *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount);
    *(_QWORD *)(v2 + 88) = v7;
  }
  *(double *)(v3 + 64) = v8;
  return v3;
}

uint64_t sub_1BC18D368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  double v5;

  result = sub_1BC18C9E4();
  if ((result & 1) != 0)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
    if (v4)
      v5 = *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount) / (double)v4;
    else
      v5 = 0.0;
  }
  else
  {
    v5 = *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount);
  }
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
  *(double *)a1 = v5;
  return result;
}

id sub_1BC18D5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  id v12;
  uint64_t v14;
  objc_super v15;
  _BYTE v16[40];

  v1 = sub_1BC2B20FC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v7(v4, v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval, v1);
  sub_1BC0E79F0(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_medication, (uint64_t)v16);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount);
  v10 = (objc_class *)type metadata accessor for MedicationChartUserInfo(0);
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount] = v5;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount] = v6;
  v7(&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval], (uint64_t)v4, v1);
  sub_1BC0E79F0((uint64_t)v16, (uint64_t)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication]);
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount] = v8;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount] = v9;
  v15.receiver = v11;
  v15.super_class = v10;
  v12 = objc_msgSendSuper2(&v15, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

id MedicationChartPoint.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicationChartPoint.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationChartPoint.__deallocating_deinit()
{
  return sub_1BC128598(type metadata accessor for MedicationChartPoint);
}

id sub_1BC18D874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, double a9, double a10, uint64_t a11)
{
  uint64_t *boxed_opaque_existential_1;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void (*v29)(uint64_t, uint64_t);
  objc_super v32;
  uint64_t v33[5];

  v33[3] = a8;
  v33[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a4, a8);
  *(double *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount] = a9;
  *(double *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount] = a10;
  v21 = &a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_startDate];
  v22 = sub_1BC2B23F0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v24(v21, a1, v22);
  v24(&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_endDate], a2, v22);
  v25 = &a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval];
  v26 = sub_1BC2B20FC();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, a3, v26);
  sub_1BC0E79F0((uint64_t)v33, (uint64_t)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_medication]);
  *(_QWORD *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount] = a5;
  *(_QWORD *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount] = a6;
  v32.receiver = a7;
  v32.super_class = (Class)type metadata accessor for MedicationChartPoint(0);
  v28 = objc_msgSendSuper2(&v32, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a3, v26);
  v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v29(a2, v22);
  v29(a1, v22);
  return v28;
}

id sub_1BC18DA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a6;
  v19 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](a1);
  v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (char *)objc_allocWithZone((Class)type metadata accessor for MedicationChartPoint(0));
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a4, a10);
  return sub_1BC18D874(a1, a2, a3, (uint64_t)v21, a5, v25, v22, a10, a7, a8, a11);
}

void sub_1BC18DB14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA630)
  {
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA630);
  }
}

uint64_t type metadata accessor for MedicationChartPoint(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FC7A0);
}

uint64_t sub_1BC18DB80()
{
  return type metadata accessor for MedicationChartUserInfo(0);
}

uint64_t sub_1BC18DB88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B20FC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationChartUserInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationChartUserInfo.__allocating_init(takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BC18DC24()
{
  return type metadata accessor for MedicationChartPoint(0);
}

uint64_t sub_1BC18DC2C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    result = sub_1BC2B20FC();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationChartPoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationChartPoint.__allocating_init(startDate:endDate:takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of MedicationChartPoint.xValueAsGenericType()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of MedicationChartPoint.minXValueAsGenericType()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MedicationChartPoint.maxXValueAsGenericType()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicationChartPoint.yValue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MedicationChartPoint.yValue(forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicationChartPoint.allYValues()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicationChartPoint.minYValue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicationChartPoint.maxYValue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicationChartPoint.userInfo()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

unint64_t sub_1BC18DDE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FC7B0;
  if (!qword_1EF3FC7B0)
  {
    v1 = sub_1BC2B20FC();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CAEAE0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FC7B0);
  }
  return result;
}

uint64_t *sub_1BC18DE34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_1BC2B3530();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BC18DEE4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_1BC2B3530();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_1BC18DF2C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BC2B3530();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1BC18DFB4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BC2B3530();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for FormStepResult()
{
  uint64_t result;

  result = qword_1EF3FC830;
  if (!qword_1EF3FC830)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_1BC18E090(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BC2B3530();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1BC18E118(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BC2B3530();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BC18E1B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B3530();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BC18E228()
{
  return sub_1BC0E519C(&qword_1EF3FC868, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, (uint64_t)&unk_1BC2BE664);
}

uint64_t sub_1BC18E254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1BC2B3530();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormStepResult();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B5450();
  sub_1BC18E854(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC2B5480();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BC0E519C(&qword_1EF3FC878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C890], MEMORY[0x1E0D2C8A0]);
    sub_1BC2B43F4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1BC2B548C();
}

uint64_t sub_1BC18E394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_1BC2B3530();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC18E854(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_1BC2B5480();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_1BC0E519C(&qword_1EF3FC878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C890], MEMORY[0x1E0D2C8A0]);
  sub_1BC2B43F4();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_1BC18E4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1BC2B3530();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B5450();
  sub_1BC18E854(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC2B5480();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_1BC0E519C(&qword_1EF3FC878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C890], MEMORY[0x1E0D2C8A0]);
    sub_1BC2B43F4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_1BC2B548C();
}

uint64_t sub_1BC18E5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  uint64_t (*v20)(_QWORD);
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_1BC2B3530();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormStepResult();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - v12;
  sub_1BC18E7F4();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 48)];
  sub_1BC18E854(a1, (uint64_t)v17);
  sub_1BC18E854(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC18E854((uint64_t)v17, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = *v11 == *(_QWORD *)v18;
LABEL_8:
      v20 = (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1BC18E854((uint64_t)v17, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
      v19 = sub_1BC2B3524();
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v7, v4);
      v21(v13, v4);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  }
  v19 = 0;
  v20 = (uint64_t (*)(_QWORD))sub_1BC18E7F4;
LABEL_9:
  sub_1BC0E8594((uint64_t)v17, v20);
  return v19 & 1;
}

void sub_1BC18E7F4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FC870)
  {
    type metadata accessor for FormStepResult();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FC870);
  }
}

uint64_t sub_1BC18E854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormStepResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static TitleWithSubtitleView.reuseIdentifier.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EF3FC880;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static TitleWithSubtitleView.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_1EF3FC880 = a1;
  qword_1EF3FC888 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TitleWithSubtitleView.reuseIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BC18E980()
{
  return sub_1BC18E9B0(&OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___titleLabel);
}

id sub_1BC18E998()
{
  return sub_1BC18E9B0(&OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___subtitleLabel);
}

id sub_1BC18E9B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = v1;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v7 = (void *)sub_1BC2B4C64();
    objc_msgSend(v6, sel_setFont_, v7);

    objc_msgSend(v6, sel_setNumberOfLines_, 0);
    v8 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v6, sel_setTextColor_, v8);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v9 = *(void **)(v5 + v2);
    *(_QWORD *)(v5 + v2) = v6;
    v4 = v6;

    v3 = 0;
  }
  v10 = v3;
  return v4;
}

uint64_t sub_1BC18EAF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  char v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC0E5774(v3, (uint64_t)v20);
  if (v20[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v5 = v13;
      v6 = v15;
      v7 = v17;
      v8 = v18;
      v9 = v19;
      v10 = v14;
      v11 = v16;
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v5;
      *(_OWORD *)(a1 + 16) = v10;
      *(_BYTE *)(a1 + 32) = v6;
      *(_OWORD *)(a1 + 40) = v11;
      *(_BYTE *)(a1 + 56) = v7;
      *(_QWORD *)(a1 + 64) = v8;
      *(_QWORD *)(a1 + 72) = v9;
      return result;
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v20);
  }
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v20[0] = 0xD000000000000026;
  v20[1] = 0x80000001BC2CDF20;
  sub_1BC0E5774(v3, (uint64_t)&v12);
  sub_1BC0E84E8();
  sub_1BC2B4490();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

uint64_t sub_1BC18EC64(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC18ECD4();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC18ECD4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t result;
  void *v15;
  void *v16;
  _QWORD v17[2];
  void *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;
  _QWORD v24[6];

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item];
  swift_beginAccess();
  sub_1BC0E5774(v1, (uint64_t)v24);
  if (!v24[3])
  {
    sub_1BC0F7954((uint64_t)v24);
    goto LABEL_11;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    v24[0] = 0xD000000000000026;
    v24[1] = 0x80000001BC2CDF20;
    sub_1BC0E5774(v1, (uint64_t)v17);
    sub_1BC0E84E8();
    sub_1BC2B4490();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    result = sub_1BC2B52B8();
    __break(1u);
    return result;
  }
  v2 = v19;
  v3 = v20;
  v4 = sub_1BC18E980();
  if ((v20 & 1) != 0)
  {
    objc_msgSend(v4, sel_setAttributedText_, v18);
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B4430();
    objc_msgSend(v4, sel_setText_, v5);

    v4 = (id)v5;
  }

  sub_1BC145984(v18, v19, v20);
  v6 = sub_1BC18E998();
  v16 = v18;
  if ((v23 & 1) != 0)
  {
    objc_msgSend(v6, sel_setAttributedText_, v21);
  }
  else
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B4430();
    objc_msgSend(v6, sel_setText_, v7);

    v6 = (id)v7;
  }
  v15 = v21;

  sub_1BC145984(v21, v22, v23);
  v8 = (void *)objc_opt_self();
  v9 = v23;
  v10 = v22;
  v11 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_deactivateConstraints_, v12);

  *(_QWORD *)&v0[v11] = sub_1BC18F7E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_activateConstraints_, v13);

  objc_msgSend(v0, sel_setNeedsLayout);
  swift_bridgeObjectRelease();
  sub_1BC145984(v16, v2, v3);
  sub_1BC145984(v15, v10, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC18F030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC18F080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC18ECD4();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC18F0EC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC18F134;
}

uint64_t sub_1BC18F134(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC18ECD4();
  return result;
}

id TitleWithSubtitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id TitleWithSubtitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints] = MEMORY[0x1E0DEE9D8];
  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item];
  v10 = (objc_class *)type metadata accessor for TitleWithSubtitleView();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC18F404();

  return v11;
}

uint64_t type metadata accessor for TitleWithSubtitleView()
{
  return objc_opt_self();
}

uint64_t sub_1BC18F404()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1BC18E980();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = sub_1BC18E998();
  objc_msgSend(v0, sel_addSubview_, v2);

  v3 = (void *)objc_opt_self();
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_deactivateConstraints_, v5);

  *(_QWORD *)&v0[v4] = sub_1BC18F7E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v6);

  objc_msgSend(v0, sel_setNeedsLayout);
  sub_1BC18FB3C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2B92C0;
  v8 = sub_1BC2B3CE0();
  v9 = MEMORY[0x1E0DC23D0];
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v9;
  v10 = sub_1BC2B3D40();
  v11 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v7 + 48) = v10;
  *(_QWORD *)(v7 + 56) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC18F5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = (void *)objc_opt_self();
    v7 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_deactivateConstraints_, v8);

    *(_QWORD *)&v5[v7] = sub_1BC18F7E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_activateConstraints_, v9);

    objc_msgSend(v5, sel_setNeedsLayout);
  }
}

id sub_1BC18F6F4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = (void *)objc_opt_self();
  v2 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  *(_QWORD *)&v0[v2] = sub_1BC18F7E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v4);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1BC18F7E0()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;

  sub_1BC0E7940();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2BAF60;
  v2 = sub_1BC18E980();
  v3 = objc_msgSend(v2, sel_topAnchor);

  v4 = objc_msgSend(v0, sel_topAnchor);
  v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v4);

  *(_QWORD *)(v1 + 32) = v5;
  v6 = sub_1BC18E980();
  v7 = objc_msgSend(v6, sel_leadingAnchor);

  v8 = objc_msgSend(v0, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 2.0);

  *(_QWORD *)(v1 + 40) = v9;
  v10 = objc_msgSend(v0, sel_trailingAnchor);
  v11 = sub_1BC18E980();
  v12 = objc_msgSend(v11, sel_trailingAnchor);

  v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 2.0);
  *(_QWORD *)(v1 + 48) = v13;
  v14 = sub_1BC18E998();
  v15 = objc_msgSend(v14, sel_topAnchor);

  v16 = sub_1BC18E980();
  v17 = objc_msgSend(v16, sel_bottomAnchor);

  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, 8.0);
  *(_QWORD *)(v1 + 56) = v18;
  v19 = sub_1BC18E998();
  v20 = objc_msgSend(v19, sel_leadingAnchor);

  v21 = sub_1BC18E980();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v1 + 64) = v23;
  v24 = sub_1BC18E998();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = sub_1BC18E980();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = objc_msgSend(v25, sel_constraintLessThanOrEqualToAnchor_, v27);
  *(_QWORD *)(v1 + 72) = v28;
  v29 = objc_msgSend(v0, sel_bottomAnchor);
  v30 = sub_1BC18E998();
  v31 = objc_msgSend(v30, sel_lastBaselineAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 10.0);
  *(_QWORD *)(v1 + 80) = v32;
  sub_1BC2B45A4();
  return v1;
}

void sub_1BC18FB3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FA5B0)
  {
    sub_1BC130728();
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FA5B0);
  }
}

uint64_t sub_1BC18FB90()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC18FBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC18F5D0(a1, a2, v2);
}

id TitleWithSubtitleView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleWithSubtitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC18FC44@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC18FC98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC18ECD4();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC18FD08(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC18F134;
}

uint64_t sub_1BC18FD54()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EF3FC880;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BC18FDA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for TitleWithSubtitleView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TitleWithSubtitleView.headerItem.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.commonInit()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.setUpConstraints()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t MedicationSecondaryEducationType.shouldShowCriticalButton(for:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_0(a1, v2);
  return sub_1BC190854((uint64_t)v4, v1, v2, v3);
}

uint64_t MedicationSecondaryEducationType.title.getter()
{
  _BYTE *v0;
  uint64_t *v1;
  id v2;
  uint64_t v3;

  if (*v0)
  {
    if (*v0 == 1)
    {
      if (qword_1EF3F8148 == -1)
      {
LABEL_9:
        v1 = &qword_1EF3FE7F0;
        goto LABEL_10;
      }
    }
    else if (qword_1EF3F8148 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = &qword_1EDA0FEF8;
LABEL_10:
  v2 = (id)*v1;
  swift_bridgeObjectRetain();
  v3 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

uint64_t MedicationSecondaryEducationType.content(from:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_0(a1, v2);
  return sub_1BC1906CC((uint64_t)v4, v1, v2, v3);
}

uint64_t MedicationSecondaryEducationType.automationSuffix.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636E616E67657250;
  if (*v0 != 1)
    v1 = 0x6F6974617463614CLL;
  if (*v0)
    return v1;
  else
    return 0x6666452065646953;
}

unint64_t MedicationSecondaryEducationType.titleKey.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x434E414E47455250;
  if (*v0 != 1)
    v1 = 0x4F4954415443414CLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

uint64_t MedicationSecondaryEducationType.source.getter@<X0>(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (*v1)
  {
    if (qword_1EF3F8148 != -1)
      swift_once();
    v3 = &qword_1EF3FE7F0;
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v3 = &qword_1EDA0FEF8;
  }
  v4 = (void *)*v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  v7 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MedicationSecondaryEducationType.text.getter()
{
  _BYTE *v0;
  uint64_t *v1;
  id v2;
  uint64_t v3;

  if (*v0)
  {
    if (*v0 == 1)
    {
      if (qword_1EF3F8148 == -1)
      {
LABEL_9:
        v1 = &qword_1EF3FE7F0;
        goto LABEL_10;
      }
    }
    else if (qword_1EF3F8148 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = &qword_1EDA0FEF8;
LABEL_10:
  v2 = (id)*v1;
  swift_bridgeObjectRetain();
  v3 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

unint64_t MedicationSecondaryEducationType.textKey.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x434E414E47455250;
  if (*v0 != 1)
    v1 = 0x4F4954415443414CLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t MedicationSecondaryEducationType.unavailableText.getter()
{
  _BYTE *v0;
  uint64_t *v1;
  id v2;
  uint64_t v3;

  if (*v0)
  {
    if (qword_1EF3F8148 != -1)
      swift_once();
    v1 = &qword_1EF3FE7F0;
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v1 = &qword_1EDA0FEF8;
  }
  v2 = (id)*v1;
  swift_bridgeObjectRetain();
  v3 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

unint64_t MedicationSecondaryEducationType.unavailableKey.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0xD00000000000001DLL;
}

uint64_t MedicationSecondaryEducationType.uniqueIdentifier.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636E616E67657270;
  if (*v0 != 1)
    v1 = 0x6F6974617463616CLL;
  if (*v0)
    return v1;
  else
    return 0x6566664565646973;
}

BOOL static MedicationSecondaryEducationType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MedicationSecondaryEducationType.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t MedicationSecondaryEducationType.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1906CC(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[3];
  uint64_t v15;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  if (!*a2)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v14, a3, a4);
    if (v15)
    {
      __swift_project_boxed_opaque_existential_0(v14, v15);
      v10 = sub_1BC2B2798();
      goto LABEL_9;
    }
LABEL_10:
    sub_1BC190AA8((uint64_t)v14);
    v11 = 0;
    goto LABEL_11;
  }
  if (*a2 != 1)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v14, a3, a4);
    if (v15)
    {
      __swift_project_boxed_opaque_existential_0(v14, v15);
      v10 = sub_1BC2B27B0();
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v14, a3, a4);
  if (!v15)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_0(v14, v15);
  v10 = sub_1BC2B27BC();
LABEL_9:
  v11 = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
LABEL_11:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  return v11;
}

uint64_t sub_1BC190854(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD v15[3];
  uint64_t v16;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  if (!*a2)
    goto LABEL_9;
  if (*a2 != 1)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v15, a3, a4);
    if (v16)
    {
      __swift_project_boxed_opaque_existential_0(v15, v16);
      v10 = sub_1BC2B27C8();
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v15, a3, a4);
  if (!v16)
  {
LABEL_8:
    sub_1BC190AA8((uint64_t)v15);
LABEL_9:
    v12 = 0;
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_0(v15, v16);
  v10 = sub_1BC2B27D4();
LABEL_7:
  v11 = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  v12 = v11 & 1;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  return v12;
}

unint64_t sub_1BC190998()
{
  unint64_t result;

  result = qword_1EF3FC8E0;
  if (!qword_1EF3FC8E0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationSecondaryEducationType, &type metadata for MedicationSecondaryEducationType);
    atomic_store(result, (unint64_t *)&qword_1EF3FC8E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MedicationSecondaryEducationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC190A28 + 4 * byte_1BC2BE735[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC190A5C + 4 * byte_1BC2BE730[v4]))();
}

uint64_t sub_1BC190A5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC190A64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC190A6CLL);
  return result;
}

uint64_t sub_1BC190A78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC190A80);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC190A84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC190A8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationSecondaryEducationType()
{
  return &type metadata for MedicationSecondaryEducationType;
}

uint64_t sub_1BC190AA8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC190AE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC190AE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FC688)
  {
    sub_1BC190B38();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FC688);
  }
}

unint64_t sub_1BC190B38()
{
  unint64_t result;

  result = qword_1EF3FC690;
  if (!qword_1EF3FC690)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FC690);
  }
  return result;
}

uint64_t sub_1BC190B8C@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 v21;
  char v22;

  v20 = a2;
  v19 = sub_1BC2B227C();
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B2294();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B23F0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v12) = *((_BYTE *)a1 + 16);
  v21 = *a1;
  v22 = v12;
  LoggableDose.scheduleDate.getter((uint64_t)v13);
  sub_1BC2B2288();
  sub_1BC2B2270();
  v14 = sub_1BC2B23C0();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18 = v20;
  *v20 = v14;
  v18[1] = v16;
  return result;
}

uint64_t sub_1BC190CF8(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  __int128 v16;
  char v17;

  v4 = sub_1BC2B23F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  v11 = *((_BYTE *)a1 + 16);
  v12 = *(_QWORD *)a2;
  v13 = *(_QWORD *)(a2 + 8);
  LOBYTE(a2) = *(_BYTE *)(a2 + 16);
  v16 = *a1;
  v17 = v11;
  LoggableDose.scheduleDate.getter((uint64_t)&v16 - v9);
  *(_QWORD *)&v16 = v12;
  *((_QWORD *)&v16 + 1) = v13;
  v17 = a2;
  LoggableDose.scheduleDate.getter((uint64_t)v8);
  LOBYTE(a2) = sub_1BC2B2378();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  return a2 & 1;
}

uint64_t sub_1BC190DF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;

  v20 = a1;
  v19 = sub_1BC2B227C();
  v1 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B2294();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B23F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_1BC2B3398();
  v13 = objc_msgSend(v12, sel_startDate);

  sub_1BC2B23A8();
  sub_1BC2B2288();
  sub_1BC2B2270();
  v14 = sub_1BC2B23C0();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = v20;
  *v20 = v14;
  v18[1] = v16;
  return result;
}

uint64_t sub_1BC190F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v0 = sub_1BC2B23F0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - v5;
  v7 = (void *)sub_1BC2B3398();
  v8 = objc_msgSend(v7, sel_startDate);

  sub_1BC2B23A8();
  v9 = sub_1BC2B3398();
  v10 = objc_msgSend((id)v9, sel_startDate);

  sub_1BC2B23A8();
  LOBYTE(v9) = sub_1BC2B2378();
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return v9 & 1;
}

uint64_t Publisher<>.groupedByScheduledDate()(uint64_t a1, uint64_t a2)
{
  return sub_1BC191114(a1, a2, &qword_1EF3FC8E8, &qword_1EF3FA2D8);
}

uint64_t sub_1BC1910CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC191278(a1, (uint64_t)sub_1BC190B8C, (uint64_t)sub_1BC190CF8, (void (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD))sub_1BC22087C, (uint64_t (*)(void))sub_1BC0F82C0, a2);
}

uint64_t Publisher<>.groupedByStartDate()(uint64_t a1, uint64_t a2)
{
  return sub_1BC191114(a1, a2, &qword_1EF3FC8F0, (unint64_t *)&qword_1EF3FA2B8);
}

uint64_t sub_1BC191114(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BC191200(255, a3, a4);
  v4 = sub_1BC2B3DAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  sub_1BC2B3FC8();
  MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95708], v4);
  v8 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

void sub_1BC191200(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC0E7AD8(255, a3);
    v4 = sub_1BC2B4610();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC191254@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC191278(a1, (uint64_t)sub_1BC190DF0, (uint64_t)sub_1BC190F78, (void (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD))sub_1BC220404, (uint64_t (*)(void))sub_1BC0F7FC0, a2);
}

uint64_t sub_1BC191278@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t result;

  a4(a2, 0, a3, 0, *a1);
  v8 = a5();
  result = swift_bridgeObjectRelease();
  *a6 = v8;
  return result;
}

uint64_t Publisher.delayIf<A>(condition:for:scheduler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v53 = a2;
  v49 = a8;
  v50 = a4;
  v47 = a6;
  v48 = a3;
  v54 = *(_QWORD *)(a6 - 8);
  v51 = *(_QWORD *)(v54 + 64);
  v52 = a1;
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v40 = AssociatedTypeWitness;
  v13 = *(_QWORD *)(v43 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v39 - v14;
  v16 = a7;
  swift_getAssociatedTypeWitness();
  v17 = sub_1BC2B3E78();
  v46 = v17;
  v18 = a5;
  v19 = swift_getAssociatedTypeWitness();
  v20 = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v17);
  v45 = v20;
  v42 = v16;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v55 = v17;
  v56 = v19;
  v57 = v20;
  v58 = AssociatedConformanceWitness;
  v22 = sub_1BC2B3DD0();
  v23 = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95850], v22);
  v55 = v22;
  v56 = v18;
  v24 = v18;
  v39 = v18;
  v57 = v23;
  v58 = v16;
  v25 = sub_1BC2B3E24();
  v44 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v39 - v26;
  v28 = v43;
  v29 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v15, v48, AssociatedTypeWitness);
  v30 = v54;
  v31 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v50, v47);
  v32 = (*(unsigned __int8 *)(v28 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v33 = (v13 + *(unsigned __int8 *)(v30 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v34 = (char *)swift_allocObject();
  *((_QWORD *)v34 + 2) = v24;
  *((_QWORD *)v34 + 3) = v31;
  v35 = v49;
  *((_QWORD *)v34 + 4) = v42;
  *((_QWORD *)v34 + 5) = v35;
  v36 = v53;
  *((_QWORD *)v34 + 6) = v52;
  *((_QWORD *)v34 + 7) = v36;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v34[v32], v29, v40);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v34[v33], v41, v31);
  swift_retain();
  sub_1BC2B3E6C();
  sub_1BC2B4040();
  swift_release();
  MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95B78], v25);
  v37 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v25);
  return v37;
}

uint64_t sub_1BC191648@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v55 = a5;
  v45 = a4;
  v48 = a3;
  v49 = a2;
  v51 = a1;
  v57 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_1BC2B3F08();
  v11 = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C960B0], v10);
  v58 = v10;
  v59 = a6;
  v60 = v11;
  v61 = a8;
  v12 = sub_1BC2B3E60();
  v43 = *(_QWORD *)(v12 - 8);
  v44 = v12;
  MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v37 - v13;
  v47 = swift_getAssociatedTypeWitness();
  v14 = sub_1BC2B4FA0();
  v52 = *(_QWORD *)(v14 - 8);
  v53 = v14;
  MEMORY[0x1E0C80A78](v14);
  v50 = (char *)&v37 - v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v38 = swift_getAssociatedTypeWitness();
  v41 = sub_1BC2B4FA0();
  v40 = *(_QWORD *)(v41 - 8);
  v16 = MEMORY[0x1E0C80A78](v41);
  v18 = (char *)&v37 - v17;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = MEMORY[0x1E0C80A78](v16);
  v22 = (char *)&v37 - v21;
  v46 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v37 - v23;
  v56 = v10;
  v58 = v10;
  v59 = a6;
  v54 = v11;
  v60 = v11;
  v61 = a8;
  v25 = sub_1BC2B3E0C();
  v39 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v37 - v27;
  LOBYTE(v11) = v49(v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v51, AssociatedTypeWitness);
  sub_1BC2B3F14();
  if ((v11 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v18, 1, 1);
    v29 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v50, 1, 1);
    v30 = v56;
    sub_1BC2B4028();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v53);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v41);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v30);
    MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95A20], v25);
    v31 = sub_1BC2B3FBC();
    result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v28, v25);
  }
  else
  {
    v33 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v50, 1, 1);
    v34 = v42;
    v35 = v56;
    sub_1BC2B4064();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v35);
    v36 = v44;
    MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v44);
    v31 = sub_1BC2B3FBC();
    result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v34, v36);
  }
  *v57 = v31;
  return result;
}

uint64_t sub_1BC191AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC191BB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1BC191648(a1, *(uint64_t (**)(uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), v2 + v8, v2 + ((v8 + *(_QWORD *)(v7 + 64) + v9) & ~v9), v5, a2, v6);
}

uint64_t type metadata accessor for ShapeSelectionViewController()
{
  uint64_t result;

  result = qword_1EF3FC900;
  if (!qword_1EF3FC900)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC191CF8()
{
  return swift_initClassMetadata2();
}

id sub_1BC191D44()
{
  void *v0;
  id result;
  void *v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ShapeSelectionViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = result;
  objc_msgSend(result, sel_setPreservesSuperviewLayoutMargins_, 1);

  result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  result = (id)sub_1BC2B2FF0();
  if (result)
  {
    sub_1BC2B2E94();
    return (id)swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1BC191E3C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC191D44();

}

void sub_1BC191E70()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC191EC8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  _BYTE v25[24];
  uint64_t v26;

  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - v3;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8960, sub_1BC0E8470);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  sub_1BC0E8470(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v13, 1);

  v14 = (void *)sub_1BC2B25C4();
  v24 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v14);

  if (v24)
  {
    type metadata accessor for ShapeCell(0);
    v15 = swift_dynamicCastClass();
    if (v15)
    {
      v16 = v15 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
      swift_beginAccess();
      sub_1BC0E5774(v16, (uint64_t)v25);
      if (v26)
      {
        sub_1BC0E1B94();
        v17 = v24;
        v18 = swift_dynamicCast();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, v18 ^ 1u, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
        {
          sub_1BC0E8550((uint64_t)v7, (uint64_t)v12);
          v19 = sub_1BC2B3350();
          v20 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
          v21 = *(_QWORD *)(v19 - 8);
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v4, v12, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v4, 0, 1, v19);
          swift_retain();
          sub_1BC2B3EC0();

          swift_release();
          sub_1BC0E1CFC((uint64_t)v4, &qword_1EF3F8958, v20);
          sub_1BC192360((uint64_t)v12);
          return;
        }
      }
      else
      {
        v22 = v24;
        sub_1BC0E1CFC((uint64_t)v25, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v7, 1, 1, v9);
      }

      sub_1BC0E1CFC((uint64_t)v7, (unint64_t *)&qword_1EF3F8960, sub_1BC0E8470);
    }
    else
    {

    }
  }
}

uint64_t sub_1BC1921F8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC191EC8(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC1922A8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC1922D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC192304()
{
  return swift_release();
}

id sub_1BC192314()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShapeSelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC192348()
{
  return swift_release();
}

uint64_t sub_1BC192358()
{
  return type metadata accessor for ShapeSelectionViewController();
}

uint64_t sub_1BC192360(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E8470(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1BC19239C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
    objc_msgSend(v4, sel_setNumberStyle_, 1);
    objc_msgSend(v4, sel_setMaximumFractionDigits_, 2);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC192434(unint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t result;
  void *v36;
  id v37;
  char *v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v6 = sub_1BC11C7EC(a1);
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  v7 = v6;
  v8 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 >> 62)
    goto LABEL_30;
  v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v49 = (uint64_t)a2;
  if (v9)
  {
    while (1)
    {
      if (v9 < 1)
      {
        __break(1u);
LABEL_49:
        v47 = v4;
        v38 = (char *)MEMORY[0x1BCCEE950](0, v7);
LABEL_41:
        v39 = v38;
        swift_bridgeObjectRelease();
        v40 = &v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication];
        v41 = (unint64_t)&v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval];
        v42 = sub_1BC1929EC(&v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication], 28, v3, (unint64_t)&v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval], v49);
        if (v42)
        {
          v43 = (void *)v42;
          v44 = sub_1BC1929EC(v40, 29, v2, v41, v49);
          if (v44)
          {
            v45 = v44;
            swift_bridgeObjectRelease();
            v46 = swift_allocObject();
            *(_OWORD *)(v46 + 16) = xmmword_1BC2B92B0;
            *(_QWORD *)(v46 + 32) = v43;
            *(_QWORD *)(v46 + 40) = v45;
            v51 = v46;
            sub_1BC2B45A4();
            v8 = v51;
            goto LABEL_44;
          }

        }
        else
        {
LABEL_44:

        }
        return v8;
      }
      if ((v7 & 0xC000000000000001) != 0)
      {
        v10 = 0;
        v11 = 0.0;
        v12 = 0.0;
        do
        {
          v13 = MEMORY[0x1BCCEE950](v10++, v7);
          v12 = v12 + *(double *)(v13 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount);
          v14 = *(double *)(v13 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount);
          swift_unknownObjectRelease();
          v11 = v11 + v14;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v15 = 0;
        v2 = 0;
        v3 = 0;
        a2 = &OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount;
        while (1)
        {
          v16 = MEMORY[0x1BCCEE950](v15, v7);
          v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount);
          v18 = __OFADD__(v3, v17);
          v3 += v17;
          if (v18)
            break;
          v4 = *(id *)(v16 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount);
          swift_unknownObjectRelease();
          v18 = __OFADD__(v2, v4);
          v2 += (uint64_t)v4;
          if (v18)
            goto LABEL_27;
          if (v9 == ++v15)
            goto LABEL_32;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v19 = (_QWORD *)(v7 + 32);
      if ((unint64_t)v9 < 2)
        break;
      v20 = v9 & 0xFFFFFFFFFFFFFFFELL;
      v21 = (_QWORD *)(v7 + 40);
      v11 = 0.0;
      v22 = v9 & 0xFFFFFFFFFFFFFFFELL;
      v12 = 0.0;
      do
      {
        v23 = *(v21 - 1);
        v11 = v11
            + *(double *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount)
            + *(double *)(*v21 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount);
        v12 = v12
            + *(double *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount)
            + *(double *)(*v21 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount);
        v21 += 2;
        v22 -= 2;
      }
      while (v22);
      if (v9 != v20)
        goto LABEL_19;
LABEL_21:
      swift_bridgeObjectRelease();
      v2 = 0;
      v3 = 0;
      v27 = v9;
      while (1)
      {
        v28 = *(_QWORD *)(*v19 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount);
        v18 = __OFADD__(v3, v28);
        v3 += v28;
        if (v18)
          break;
        v29 = *(_QWORD *)(*v19 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount);
        v18 = __OFADD__(v2, v29);
        v2 += v29;
        if (v18)
          goto LABEL_29;
        ++v19;
        if (!--v27)
          goto LABEL_33;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      v9 = sub_1BC2B52D0();
      v49 = (uint64_t)a2;
      if (!v9)
        goto LABEL_31;
    }
    v20 = 0;
    v11 = 0.0;
    v12 = 0.0;
LABEL_19:
    v24 = v9 - v20;
    v25 = (uint64_t *)(v7 + 8 * v20 + 32);
    do
    {
      v26 = *v25++;
      v12 = v12 + *(double *)(v26 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount);
      v11 = v11 + *(double *)(v26 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount);
      --v24;
    }
    while (v24);
    goto LABEL_21;
  }
LABEL_31:
  v2 = 0;
  v3 = 0;
  v11 = 0.0;
  v12 = 0.0;
LABEL_32:
  swift_bridgeObjectRelease();
LABEL_33:
  v48 = v8;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F840]), sel_initWithStatisticsType_, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v30 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v31 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v32 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v31, sel_initWithString_, v32, 0xE000000000000000);

  objc_msgSend(v4, sel_setAttributedString_, v33);
  sub_1BC0E7940();
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v34 + 32) = v4;
  v50 = v34;
  result = sub_1BC2B45A4();
  v8 = v50;
  if (v12 <= 0.0 && v11 <= 0.0 || !v9)
  {
    swift_bridgeObjectRelease();
    return v8;
  }
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_49;
  if (*(_QWORD *)(v48 + 16))
  {
    v36 = *(void **)(v7 + 32);
    v37 = v4;
    v38 = v36;
    goto LABEL_41;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1929EC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *, uint64_t);
  int v20;
  uint64_t v21;
  int v22;
  id v23;
  void *v24;
  id v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  void *v31;
  _QWORD *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  _QWORD *v72;
  __int128 v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  unint64_t v81;

  v79 = a3;
  v78 = a5;
  v75 = a4;
  v72 = a1;
  *(_QWORD *)&v73 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0E740, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - v7;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v65 - v10;
  v12 = sub_1BC2B20FC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC2B2594();
  v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v76(v11, 1, 1, v16);
  v17 = sub_1BC2B25B8();
  v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v74(v8, 1, 1, v17);
  sub_1BC2B20E4();
  v18 = v75;
  LODWORD(v77) = MEMORY[0x1BCCEB7E8](v75, v15);
  v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, v12);
  v76(v11, 1, 1, v16);
  v74(v8, 1, 1, v17);
  sub_1BC2B20E4();
  v20 = MEMORY[0x1BCCEB7E8](v18, v15);
  v19(v15, v12);
  if (v78)
  {
    if (v78 != 1)
      goto LABEL_24;
    if (v79)
    {
      if ((v77 & 1) != 0)
        goto LABEL_11;
    }
    else if ((v77 & 1) != 0)
    {
      goto LABEL_11;
    }
LABEL_13:
    v22 = 0;
    v21 = 8;
    goto LABEL_14;
  }
  if (!v79)
  {
    if (((v77 | v20) & 1) != 0)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((v77 & 1) == 0 && (v20 & 1) == 0)
    goto LABEL_13;
LABEL_11:
  v21 = 0;
  v22 = 1;
LABEL_14:
  v23 = sub_1BC19239C();
  v24 = (void *)sub_1BC2B260C();
  v25 = objc_msgSend(v23, sel_stringForObjectValue_, v24);

  if (!v25)
    return 0;
  v67 = v22;
  v66 = v21;
  sub_1BC2B4460();

  __swift_project_boxed_opaque_existential_0(v72, v72[3]);
  v74 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1BC2B3644();
  v76 = v26;
  v77 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F840]), sel_initWithStatisticsType_, 0);
  objc_msgSend(v77, sel_setDataType_, (_QWORD)v73);
  sub_1BC0E7940();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2BB4D0;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE80, (uint64_t (*)(uint64_t))sub_1BC1306C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v78 = v28;
  v29 = swift_initStackObject();
  v30 = (void **)MEMORY[0x1E0DC1138];
  v73 = xmmword_1BC2B92C0;
  *(_OWORD *)(v29 + 16) = xmmword_1BC2B92C0;
  v31 = *v30;
  *(_QWORD *)(v29 + 32) = *v30;
  v32 = (_QWORD *)objc_opt_self();
  v33 = v31;
  v72 = v32;
  v34 = objc_msgSend(v32, sel_hk_chartCurrentValueValueFont);
  v35 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  *(_QWORD *)(v29 + 40) = v34;
  v36 = (void *)*MEMORY[0x1E0DC1140];
  v71 = v35;
  *(_QWORD *)(v29 + 64) = v35;
  *(_QWORD *)(v29 + 72) = v36;
  v37 = (void *)objc_opt_self();
  v69 = v36;
  v70 = v37;
  v38 = objc_msgSend(v37, sel_hk_chartLollipopValueColor);
  v68 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  *(_QWORD *)(v29 + 104) = v68;
  *(_QWORD *)(v29 + 80) = v38;
  sub_1BC1069C0(v29);
  v39 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v40 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC193424();
  v79 = MEMORY[0x1E0DEE9B8] + 8;
  v41 = (void *)sub_1BC2B43AC();
  swift_bridgeObjectRelease();
  v42 = objc_msgSend(v39, sel_initWithString_attributes_, v40, v41);

  v75 = inited;
  *(_QWORD *)(inited + 32) = v42;
  v43 = swift_initStackObject();
  *(_OWORD *)(v43 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v43 + 32) = v33;
  v44 = v33;
  v45 = objc_msgSend(v80, sel_minorFont);
  if (v45)
  {
    v46 = v71;
    *(_QWORD *)(v43 + 64) = v71;
    *(_QWORD *)(v43 + 40) = v45;
    sub_1BC1069C0(v43);
    v47 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v48 = (void *)sub_1BC2B4430();
    v49 = (void *)sub_1BC2B43AC();
    swift_bridgeObjectRelease();
    v50 = objc_msgSend(v47, sel_initWithString_attributes_, v48, v49);

    v51 = v75;
    *(_QWORD *)(v75 + 40) = v50;
    v52 = swift_initStackObject();
    *(_OWORD *)(v52 + 16) = v73;
    *(_QWORD *)(v52 + 32) = v44;
    v53 = v44;
    *(_QWORD *)(v52 + 40) = objc_msgSend(v72, sel_hk_chartCurrentValueUnitFont);
    v54 = v69;
    *(_QWORD *)(v52 + 64) = v46;
    *(_QWORD *)(v52 + 72) = v54;
    v55 = v54;
    v56 = objc_msgSend(v70, sel_hk_chartLollipopLabelColor);
    *(_QWORD *)(v52 + 104) = v68;
    *(_QWORD *)(v52 + 80) = v56;
    sub_1BC1069C0(v52);
    v57 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v58 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v59 = (void *)sub_1BC2B43AC();
    swift_bridgeObjectRelease();
    v60 = objc_msgSend(v57, sel_initWithString_attributes_, v58, v59);

    *(_QWORD *)(v51 + 48) = v60;
    v81 = v51;
    sub_1BC2B45A4();
    sub_1BC0F83D4(v81);
    swift_bridgeObjectRelease();
    v61 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v62 = (id)HKUIJoinAttributedStringsForLocale();

    if (v62)
    {
      v63 = v77;
      objc_msgSend(v77, sel_setAttributedString_, v62);
      if ((v67 & 1) == 0)
        objc_msgSend(v63, sel_setStatisticsType_, v66);

      return (uint64_t)v63;
    }

    return 0;
  }
  __break(1u);
LABEL_24:
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

id MedicationChartDataFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id MedicationChartDataFormatter.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationChartDataFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MedicationChartDataFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationChartDataFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationChartDataFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicationChartDataFormatter()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1BC1933D0()
{
  unint64_t result;

  result = qword_1EF3FC968;
  if (!qword_1EF3FC968)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FC968);
  }
  return result;
}

unint64_t sub_1BC193424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FD20;
  if (!qword_1EDA0FD20)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2B897C, v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FD20);
  }
  return result;
}

char *sub_1BC19346C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  objc_super v37;

  v3 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter;
  sub_1BC1941EC();
  v4 = v1;
  *(_QWORD *)&v1[v3] = sub_1BC2B48F8();
  v5 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v6 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel;
  *(_QWORD *)&v4[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v7 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_day];
  v8 = sub_1BC2B3848();
  v36 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v7, a1, v8);

  v37.receiver = v4;
  v37.super_class = (Class)type metadata accessor for DayPickerDay();
  v9 = (char *)objc_msgSendSuper2(&v37, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel;
  v11 = *(void **)&v9[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
  v12 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter;
  v13 = *(void **)&v9[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter];
  v14 = v9;
  v15 = v11;
  v16 = v13;
  sub_1BC2B4910();
  v18 = v17;

  if (v18)
  {
    v19 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v15, sel_setText_, v19);

  v20 = *(void **)&v9[v12];
  v21 = v14;
  v22 = v20;
  sub_1BC2B4904();
  v24 = v23;

  if (v24)
  {
    v25 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  objc_msgSend(v21, sel_setLargeContentTitle_, v25);

  v26 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v26, sel_addSublayer_, *(_QWORD *)&v21[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background]);

  objc_msgSend(v21, sel_addSubview_, *(_QWORD *)&v9[v10]);
  sub_1BC193824();
  sub_1BC18FB3C();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC2B9600;
  v28 = sub_1BC2B3D40();
  v29 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v27 + 32) = v28;
  *(_QWORD *)(v27 + 40) = v29;
  v30 = sub_1BC2B3ADC();
  v31 = MEMORY[0x1E0DC1F80];
  *(_QWORD *)(v27 + 48) = v30;
  *(_QWORD *)(v27 + 56) = v31;
  v32 = sub_1BC2B3CE0();
  v33 = MEMORY[0x1E0DC23D0];
  *(_QWORD *)(v27 + 64) = v32;
  *(_QWORD *)(v27 + 72) = v33;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  v34 = v21;
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a1, v8);
  return v34;
}

void sub_1BC1937B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BC193824();

  }
}

id sub_1BC193824()
{
  char *v0;
  void *v1;
  id result;
  void *v3;
  id v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E0DC4A88], 1024, *MEMORY[0x1E0DC48D8]);
  if (result)
  {
    v3 = result;
    objc_msgSend(v1, sel_setFont_, result);

    objc_msgSend(v0, sel_setShowsLargeContentViewer_, 1);
    objc_msgSend(v0, sel_setScalesLargeContentImage_, 1);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3998]), sel_init);
    objc_msgSend(v0, sel_addInteraction_, v4);

    sub_1BC19391C();
    return objc_msgSend(v0, sel_setNeedsLayout);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC19391C()
{
  char *v0;
  char *v1;
  unsigned int v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;

  v1 = v0;
  if (!objc_msgSend(v0, sel_isEnabled))
  {
    v12 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background];
    v13 = (void *)objc_opt_self();
    v14 = objc_msgSend(v13, sel_clearColor);
    v15 = objc_msgSend(v14, sel_CGColor);

    objc_msgSend(v12, sel_setFillColor_, v15);
    v16 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
    v17 = objc_msgSend(v13, sel_tertiaryLabelColor);
    objc_msgSend(v16, sel_setTextColor_, v17);

    v10 = (void *)sub_1BC2B4430();
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v10);
    goto LABEL_7;
  }
  v2 = objc_msgSend(v0, sel_isSelected);
  v3 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background];
  if (!v2)
  {
    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(v18, sel_clearColor);
    v20 = objc_msgSend(v1, sel_traitCollection);
    v21 = (void *)sub_1BC2B4D30();

    objc_msgSend(v3, sel_setFillColor_, v21);
    v22 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
    v23 = objc_msgSend(v18, sel_labelColor);
    objc_msgSend(v22, sel_setTextColor_, v23);

    v10 = (void *)sub_1BC2B4430();
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v10);
    goto LABEL_7;
  }
  v4 = objc_msgSend(v0, sel_tintColor);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v1, sel_traitCollection);
    v7 = (void *)sub_1BC2B4D30();

    objc_msgSend(v3, sel_setFillColor_, v7);
    v8 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
    v9 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    objc_msgSend(v8, sel_setTextColor_, v9);

    v10 = (void *)sub_1BC2B4430();
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v10);
LABEL_7:
    v24 = v11;

    objc_msgSend(v1, sel_setLargeContentImage_, v24);
    return;
  }
  __break(1u);
}

id sub_1BC193C64()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double Height;
  double Width;
  double v8;
  double v9;
  double v10;
  void *v11;
  CGPathRef v12;
  id v13;
  void *v14;
  objc_super v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for DayPickerDay();
  objc_msgSendSuper2(&v16, sel_layoutSubviews);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4B10]);
  v3 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v2, sel_scaledValueForValue_compatibleWithTraitCollection_, v3, 34.0);
  v5 = v4;

  objc_msgSend(v1, sel_bounds);
  Height = CGRectGetHeight(v17);
  objc_msgSend(v1, sel_bounds);
  Width = CGRectGetWidth(v18);
  if (v5 > 34.0)
    v8 = v5;
  else
    v8 = 34.0;
  v9 = Width + -4.0;
  if (v9 >= Height + -4.0)
    v9 = Height + -4.0;
  if (v8 >= v9)
    v10 = v9;
  else
    v10 = v8;
  v11 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background];
  v19.origin.x = 0.0;
  v19.origin.y = 0.0;
  v19.size.width = v10;
  v19.size.height = v10;
  v12 = CGPathCreateWithEllipseInRect(v19, 0);
  objc_msgSend(v11, sel_setPath_, v12);

  v13 = objc_msgSend(v11, sel_path);
  objc_msgSend(v11, sel_setShadowPath_, v13);

  objc_msgSend(v11, sel_setFrame_, 0.0, 0.0, v10, v10);
  objc_msgSend(v1, sel_bounds);
  sub_1BC2B4C4C();
  sub_1BC2B4CD0();
  v14 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
  objc_msgSend(v14, sel_sizeToFit);
  objc_msgSend(v1, sel_bounds);
  sub_1BC2B4C4C();
  return objc_msgSend(v14, sel_setCenter_);
}

id sub_1BC193FBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayPickerDay();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC194060()
{
  return type metadata accessor for DayPickerDay();
}

uint64_t type metadata accessor for DayPickerDay()
{
  uint64_t result;

  result = qword_1EF3FC9B8;
  if (!qword_1EF3FC9B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1940A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B3848();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BC194120()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter;
  sub_1BC1941EC();
  *(_QWORD *)&v0[v2] = sub_1BC2B48F8();
  v3 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);

  sub_1BC2B52B8();
  __break(1u);
}

unint64_t sub_1BC1941EC()
{
  unint64_t result;

  result = qword_1EF3FC9C8;
  if (!qword_1EF3FC9C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FC9C8);
  }
  return result;
}

uint64_t sub_1BC194228()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC19424C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1937B0(a1, a2, v2);
}

uint64_t InteractionCriticalAlertItem.resultDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0E79F0(v1 + 16, a1);
}

uint64_t InteractionCriticalAlertItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC19428C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_0(v0 + 2, v2);
  v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v5 = objc_msgSend(v4, sel_uniqueIdentifier);

  v6 = objc_msgSend(v5, sel_description);
  sub_1BC2B4460();

  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t InteractionCriticalAlertItem.learnMoreAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_retain();
  return v1;
}

uint64_t InteractionCriticalAlertItem.dismissAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_retain();
  return v1;
}

_QWORD *InteractionCriticalAlertItem.__allocating_init(resultDisplayable:learnMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  v14 = sub_1BC194C74(v13, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v14;
}

_QWORD *InteractionCriticalAlertItem.init(resultDisplayable:learnMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_1BC194BAC((uint64_t)v15, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t static InteractionCriticalAlertItem.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;

  sub_1BC102870();
  v4 = a1[5];
  v5 = a1[6];
  __swift_project_boxed_opaque_existential_0(a1 + 2, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = objc_msgSend(v6, sel_identifier);

  v8 = a2 + 2;
  v10 = a2[5];
  v9 = a2[6];
  __swift_project_boxed_opaque_existential_0(v8, v10);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
  v12 = objc_msgSend(v11, sel_identifier);

  v13 = sub_1BC2B4D84();
  return v13 & 1;
}

uint64_t sub_1BC1945E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_0(v0 + 2, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  v4 = objc_msgSend(v3, sel_identifier);

  objc_msgSend(v4, sel_rawIdentifier);
  return sub_1BC2B5480();
}

uint64_t InteractionCriticalAlertItem.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InteractionCriticalAlertItem.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC194704()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  sub_1BC2B5450();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_0(v0 + 2, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  v4 = objc_msgSend(v3, sel_identifier);

  objc_msgSend(v4, sel_rawIdentifier);
  sub_1BC2B5480();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1947CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC1947FC()
{
  return sub_1BC19428C();
}

uint64_t sub_1BC19481C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;

  v2 = (_QWORD *)*a1;
  v3 = (_QWORD *)*a2;
  sub_1BC102870();
  v4 = v2[5];
  v5 = v2[6];
  __swift_project_boxed_opaque_existential_0(v2 + 2, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = objc_msgSend(v6, sel_identifier);

  v8 = v3 + 2;
  v9 = v3[5];
  v10 = v3[6];
  __swift_project_boxed_opaque_existential_0(v8, v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  v12 = objc_msgSend(v11, sel_identifier);

  v13 = sub_1BC2B4D84();
  return v13 & 1;
}

uint64_t sub_1BC1948FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 136))();
}

uint64_t sub_1BC194924()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = (_QWORD *)*v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v2 = v1 + 2;
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_0(v2, v3);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = objc_msgSend(v5, sel_identifier);

  objc_msgSend(v6, sel_rawIdentifier);
  return sub_1BC2B5480();
}

uint64_t sub_1BC1949D8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  sub_1BC2B5450();
  v1 = (_QWORD *)*v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v2 = v1 + 2;
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_0(v2, v3);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = objc_msgSend(v5, sel_identifier);

  objc_msgSend(v6, sel_rawIdentifier);
  sub_1BC2B5480();
  return sub_1BC2B548C();
}

Swift::Void __swiftcall InteractionCriticalAlertItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  uint64_t v2;

  (*(void (**)(UIView *, UIViewController *))(v2 + 72))(_, in);
}

uint64_t InteractionCriticalAlertItem.deselectionBehavior(in:)()
{
  uint64_t v0;

  type metadata accessor for InteractionCriticalAlertItem();
  sub_1BC0E008C(&qword_1EF3FC9D0, v0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertItem, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertItem);
  return sub_1BC2B2B70();
}

uint64_t sub_1BC194B30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 72))();
}

uint64_t sub_1BC194B54()
{
  type metadata accessor for InteractionCriticalAlertItem();
  return sub_1BC2B2B70();
}

_QWORD *sub_1BC194BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a7;
  v20 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  type metadata accessor for InteractionCriticalAlertCell();
  sub_1BC0E008C(&qword_1EDA0FA10, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertCell);
  a6[7] = sub_1BC2B2930();
  a6[8] = v16;
  sub_1BC0F2730(&v18, (uint64_t)(a6 + 2));
  a6[9] = a2;
  a6[10] = a3;
  a6[11] = a4;
  a6[12] = a5;
  return a6;
}

_QWORD *sub_1BC194C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v20;

  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InteractionCriticalAlertItem();
  v18 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a7);
  return sub_1BC194BAC((uint64_t)v17, a2, a3, a4, a5, v18, a7, a8);
}

uint64_t type metadata accessor for InteractionCriticalAlertItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC194D64(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FC9D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertItem, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertItem);
}

uint64_t method lookup function for InteractionCriticalAlertItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.__allocating_init(resultDisplayable:learnMoreAction:dismissAction:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1BC194DC8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC194FB4();
  return sub_1BC0E1CFC((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC194E60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC194EC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC194FB4();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC194F3C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC194F84;
}

uint64_t sub_1BC194F84(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC194FB4();
  return result;
}

uint64_t sub_1BC194FB4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void (*v19)(uint64_t *, _QWORD);
  void (*v20)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v24[5];

  v1 = sub_1BC2B3CD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24[-1] - v9;
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  sub_1BC2B3B24();
  v11 = sub_1BC2B3B48();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  v13 = MEMORY[0x1BCCEE23C](v10);
  MEMORY[0x1BCCEE230](v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
  {
    v14 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC0E1CB0((uint64_t)v8, (uint64_t)v10, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCEE23C](v10);
    v15 = sub_1BC0E1CFC((uint64_t)v8, &qword_1EDA0FAF0, v14);
  }
  else
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemFillColor);
    sub_1BC2B3B18();
    v15 = MEMORY[0x1BCCEE23C](v8);
  }
  MEMORY[0x1BCCEE284](v15);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v17 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C98();
  v18 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v19 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v19(v24, 0);
  sub_1BC1956CC();
  sub_1BC2B4C64();
  v20 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BA8();
  v20(v24, 0);
  v24[3] = v1;
  v24[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
  MEMORY[0x1BCCEE224](v24);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id InteractionNoneFoundCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id InteractionNoneFoundCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *found;
  objc_super v12;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item];
  found = (objc_class *)type metadata accessor for InteractionNoneFoundCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v12.receiver = v4;
  v12.super_class = found;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t type metadata accessor for InteractionNoneFoundCell()
{
  return objc_opt_self();
}

id InteractionNoneFoundCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id InteractionNoneFoundCell.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  objc_class *found;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item];
  found = (objc_class *)type metadata accessor for InteractionNoneFoundCell();
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = found;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id InteractionNoneFoundCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionNoneFoundCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC195604@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t method lookup function for InteractionNoneFoundCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionNoneFoundCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of InteractionNoneFoundCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of InteractionNoneFoundCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

unint64_t sub_1BC1956CC()
{
  unint64_t result;

  result = qword_1EDA0FDC0;
  if (!qword_1EDA0FDC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FDC0);
  }
  return result;
}

uint64_t type metadata accessor for ManualNameDataSource()
{
  uint64_t result;

  result = qword_1EF3FCAF0;
  if (!qword_1EF3FCAF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC195744()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC195798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = sub_1BC2B2438();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(v1 + qword_1EF3FCAE8);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  *(_QWORD *)(v1 + qword_1EF3FCAE0) = a1;
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  swift_retain();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "MutableArray<");
  HIWORD(v10[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v8 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC195910();
  sub_1BC2B2C24();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC195910()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v8;
  uint64_t *v9;
  char *v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (**v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1BC195EAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92D0;
  sub_1BC2B3ED8();
  if (v21)
  {
    v19 = v21;
    v18 = v20;
  }
  else
  {
    v18 = *(_QWORD *)(v0 + qword_1EF3FCAE8);
    v19 = *(_QWORD *)(v0 + qword_1EF3FCAE8 + 8);
    swift_bridgeObjectRetain();
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v2 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v3 = sub_1BC2B2144();
  v16 = v4;
  v17 = v3;
  swift_bridgeObjectRelease();

  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (int *)type metadata accessor for FieldItem();
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 64) = sub_1BC0E519C(&qword_1EF3FCB80, (uint64_t (*)(uint64_t))type metadata accessor for FieldItem, (uint64_t)&protocol conformance descriptor for FieldItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
  sub_1BC2B242C();
  v8 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[5]);
  v9 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[6]);
  v10 = (char *)boxed_opaque_existential_1 + v6[10];
  v11 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[14]);
  v12 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[15]);
  type metadata accessor for FieldCell();
  sub_1BC0E519C(&qword_1EF4020C0, (uint64_t (*)(uint64_t))type metadata accessor for FieldCell, (uint64_t)&unk_1BC2C6D84);
  *v12 = sub_1BC2B2930();
  v12[1] = v13;
  *v8 = v18;
  v8[1] = v19;
  *v9 = v17;
  v9[1] = v16;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + v6[7]) = 0x4046000000000000;
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  *((_BYTE *)boxed_opaque_existential_1 + v6[9]) = 0;
  *((_BYTE *)boxed_opaque_existential_1 + v6[8]) = 1;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + v6[12]) = 0;
  *v11 = 0;
  v11[1] = 0;
  v14 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)boxed_opaque_existential_1 + v6[13]);
  *v14 = sub_1BC195F24;
  v14[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
  *((_BYTE *)boxed_opaque_existential_1 + v6[11]) = 1;
  return v1;
}

uint64_t sub_1BC195B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong;
  _QWORD *v6;
  uint64_t result;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v6 = (_QWORD *)(Strong + qword_1EF3FCAE8);
    *v6 = a2;
    v6[1] = a3;
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BC2B3EC0();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BC195C74()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC195CA0()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC195CD0()
{
  sub_1BC2B2C60();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC195D20()
{
  return type metadata accessor for ManualNameDataSource();
}

uint64_t sub_1BC195D28()
{
  type metadata accessor for FieldCell();
  sub_1BC0E519C(&qword_1EF4020C0, (uint64_t (*)(uint64_t))type metadata accessor for FieldCell, (uint64_t)&unk_1BC2C6D84);
  return sub_1BC2B497C();
}

uint64_t sub_1BC195D7C()
{
  return swift_retain();
}

uint64_t sub_1BC195D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = sub_1BC267620();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC195E18()
{
  sub_1BC0E519C(&qword_1EF3FCB78, (uint64_t (*)(uint64_t))type metadata accessor for ManualNameDataSource, (uint64_t)&unk_1BC2BEA98);
  return sub_1BC2B3074();
}

uint64_t sub_1BC195E74()
{
  return sub_1BC0E519C(&qword_1EF3FCB40, (uint64_t (*)(uint64_t))type metadata accessor for ManualNameDataSource, (uint64_t)&unk_1BC2BEA68);
}

uint64_t sub_1BC195EA0()
{
  return MEMORY[0x1E0DEA990];
}

void sub_1BC195EAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FE38)
  {
    sub_1BC0E1B94();
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FE38);
  }
}

uint64_t sub_1BC195F00()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC195F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC195B80(a1, a2, a3);
}

Swift::Void __swiftcall InputAccessoryPresenting.setInputAccessoryViewToToolbar(items:)(Swift::OpaquePointer items)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void (*v7)(id, uint64_t, uint64_t);
  id v8;

  v3 = v2;
  v4 = v1;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3E68]), sel_init);
  objc_msgSend(v5, sel_setBarStyle_, 0);
  sub_1BC195FF8();
  v6 = (void *)sub_1BC2B4580();
  objc_msgSend(v5, sel_setItems_, v6);

  objc_msgSend(v5, sel_sizeToFit);
  v7 = *(void (**)(id, uint64_t, uint64_t))(v3 + 16);
  v8 = v5;
  v7(v5, v4, v3);

}

unint64_t sub_1BC195FF8()
{
  unint64_t result;

  result = qword_1EF3F9648;
  if (!qword_1EF3F9648)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3F9648);
  }
  return result;
}

uint64_t (*sub_1BC196034(_QWORD *a1))()
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_inputAccessoryView);
  return sub_1BC19617C;
}

id sub_1BC196080()
{
  void *v0;

  return objc_msgSend(v0, sel_inputAccessoryView);
}

void sub_1BC1960A4(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setInputAccessoryView_, a1);

}

void (*sub_1BC1960D8(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_inputAccessoryView);
  return sub_1BC196120;
}

void sub_1BC196120(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setInputAccessoryView_);

}

uint64_t dispatch thunk of InputAccessoryPresenting.inputAccessoryView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InputAccessoryPresenting.inputAccessoryView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of InputAccessoryPresenting.inputAccessoryView.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of InputAccessoryPresenting.setInputAccessoryViewToToolbar(items:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1BC196180()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_educationContent);
  if (v1
    && (v2 = v1,
        v3 = objc_msgSend(v1, sel_firstSectionWithType_, 1),
        v2,
        v3)
    && (v4 = objc_msgSend(v3, sel_localizedText), v3, v4))
  {
    v5 = sub_1BC2B4460();
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v4 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B2144();
    swift_bridgeObjectRelease();
  }

  return v5;
}

uint64_t sub_1BC1962C4()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v7;
  uint64_t v8;

  v1 = objc_msgSend(v0, sel_educationContent);
  if (v1
    && (v2 = v1,
        v3 = objc_msgSend(v1, sel_firstSectionWithType_, 1),
        v2,
        v3)
    && (v4 = objc_msgSend(v3, sel_attributions), v3, v4))
  {
    sub_1BC2B458C();

    sub_1BC18C440();
    sub_1BC11BF0C();
    v5 = sub_1BC2B440C();
    swift_bridgeObjectRelease();
    return v5;
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v7 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B2144();
    swift_bridgeObjectRelease();

    return v8;
  }
}

uint64_t static UIColor.medicationCategoryRoomCyanHighlightedBackground.getter()
{
  return sub_1BC196480(0.2, 0.3);
}

uint64_t static UIColor.medicationCategoryRoomCyanBackground.getter()
{
  return sub_1BC196480(0.1, 0.2);
}

uint64_t sub_1BC196480(double a1, double a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;

  sub_1BC12A328();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemCyanColor);
  v6 = objc_msgSend(v5, sel_colorWithAlphaComponent_, a1);

  v7 = objc_msgSend(v4, sel_systemCyanColor);
  v8 = objc_msgSend(v7, sel_colorWithAlphaComponent_, a2);

  v9 = sub_1BC2B4CF4();
  return v9;
}

void static UIColor.medicationTimelineCurrentDayCompleteGradientStart.getter()
{
  sub_1BC1965B8();
}

void static UIColor.medicationTimelineCurrentDayCompleteGradientMiddle.getter()
{
  sub_1BC1965B8();
}

void static UIColor.medicationTimelineCurrentDayCompleteGradientEnd.getter()
{
  sub_1BC1965B8();
}

void sub_1BC1965B8()
{
  id v0;
  void *v1;
  id v2;

  if (qword_1EDA0FF20 != -1)
    swift_once();
  v0 = (id)qword_1EDA0FF10;
  v1 = (void *)sub_1BC2B4430();
  v2 = objc_msgSend((id)objc_opt_self(), sel_colorNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  if (!v2)
    __break(1u);
}

unint64_t static MedicationVisualizationConfig.random()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t result;
  unint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  int64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;

  v2 = sub_1BC2B37DC();
  v68 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B3698();
  v73 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0FB470();
  v81 = *(_QWORD *)(v8 - 8);
  v82 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FCB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v75 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v69 = (char *)&v62 - v15;
  sub_1BC0FB4F4();
  v79 = *(_QWORD *)(v16 - 8);
  v80 = v16;
  MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], v11);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v62 - v19;
  v72 = sub_1BC2B3350();
  v21 = *(_QWORD *)(v72 - 8);
  v22 = MEMORY[0x1E0C80A78](v72);
  v70 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v71 = (char *)&v62 - v24;
  v25 = sub_1BC2B3338();
  v26 = v25;
  v27 = *(_QWORD *)(v25 + 16);
  if (v27)
  {
    result = sub_1BC196DE8(*(_QWORD *)(v25 + 16));
    if (result >= v27)
      goto LABEL_34;
    v29 = v26
        + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
        + *(_QWORD *)(v21 + 72) * result;
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
    v31 = v21;
    v32 = v72;
    v30(v20, v29, v72);
    v33 = 0;
  }
  else
  {
    v33 = 1;
    v31 = v21;
    v32 = v72;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v20, v33, 1, v32);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v20, 1, v32);
  if ((_DWORD)result == 1)
    goto LABEL_37;
  v34 = v71;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v71, v20, v32);
  v66 = v31;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v70, v34, v32);
  v35 = sub_1BC2B3344();
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v63 = v4;
    v64 = v2;
    v65 = a1;
    v84 = MEMORY[0x1E0DEE9D8];
    v76 = v36;
    sub_1BC125B8C(0, v36, 0);
    v37 = 0;
    v38 = v73;
    v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v62 = v35;
    v78 = v35 + v39;
    v77 = *(_QWORD *)(v73 + 72);
    v40 = *(void (**)(char *, unint64_t, uint64_t))(v73 + 16);
    v74 = v5;
    while (1)
    {
      v40(v7, v78 + v77 * v37, v5);
      v41 = &v10[*(int *)(v82 + 48)];
      v40(v10, (unint64_t)v7, v5);
      if ((sub_1BC2B368C() & 1) != 0)
      {
        v42 = sub_1BC2B3284();
        v43 = *(_QWORD *)(v42 + 16);
        if (v43)
        {
          v83 = 0;
          result = MEMORY[0x1BCCEF3B8](&v83, 8);
          v44 = (v83 * (unsigned __int128)v43) >> 64;
          if (v43 > v83 * v43)
          {
            v45 = -(uint64_t)v43 % v43;
            if (v45 > v83 * v43)
            {
              do
              {
                v83 = 0;
                result = MEMORY[0x1BCCEF3B8](&v83, 8);
              }
              while (v45 > v83 * v43);
              v44 = (v83 * (unsigned __int128)v43) >> 64;
            }
          }
          if (v44 >= *(_QWORD *)(v42 + 16))
          {
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          v46 = sub_1BC2B32B4();
          v47 = *(_QWORD *)(v46 - 8);
          v48 = v75;
          (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v75, v42+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v44, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
          v38 = v73;
        }
        else
        {
          v46 = sub_1BC2B32B4();
          v48 = v75;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v75, 1, 1, v46);
        }
        swift_bridgeObjectRelease();
        sub_1BC2B32B4();
        v50 = *(_QWORD *)(v46 - 8);
        result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v46);
        if ((_DWORD)result == 1)
          goto LABEL_36;
        sub_1BC2B32A8();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v46);
        sub_1BC12A328();
        sub_1BC2B434C();
        v49 = 0;
        v5 = v74;
      }
      else
      {
        v49 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v41, v49, 1, v80);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v5);
      v51 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125B8C(0, *(_QWORD *)(v51 + 16) + 1, 1);
        v51 = v84;
      }
      v53 = *(_QWORD *)(v51 + 16);
      v52 = *(_QWORD *)(v51 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_1BC125B8C(v52 > 1, v53 + 1, 1);
        v51 = v84;
      }
      ++v37;
      *(_QWORD *)(v51 + 16) = v53 + 1;
      sub_1BC12A47C((uint64_t)v10, v51+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * v53);
      if (v37 == v76)
      {
        swift_bridgeObjectRelease();
        v2 = v64;
        v4 = v63;
        goto LABEL_27;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_27:
  v54 = sub_1BC2B3290();
  v55 = v54;
  v56 = *(_QWORD *)(v54 + 16);
  v57 = v69;
  if (v56)
  {
    result = sub_1BC196DE8(*(_QWORD *)(v54 + 16));
    if (result >= v56)
      goto LABEL_35;
    v58 = result;
    v59 = sub_1BC2B32B4();
    v60 = *(_QWORD *)(v59 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v57, v55+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v58, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  else
  {
    v59 = sub_1BC2B32B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v57, 1, 1, v59);
  }
  swift_bridgeObjectRelease();
  sub_1BC2B32B4();
  v61 = *(_QWORD *)(v59 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v57, 1, v59);
  if ((_DWORD)result == 1)
    goto LABEL_38;
  sub_1BC2B32A8();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v59);
  sub_1BC12A328();
  sub_1BC2B434C();
  (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v4, *MEMORY[0x1E0D2CAF0], v2);
  sub_1BC2B35F0();
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v71, v72);
}

unint64_t sub_1BC196DE8(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1BCCEF3B8](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1BCCEF3B8](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL HKMedicationScheduleType.isMultiphasic.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 7) < 2;
}

uint64_t type metadata accessor for StartDateEndDateEditDataSource()
{
  uint64_t result;

  result = qword_1EF3FCBB8;
  if (!qword_1EF3FCBB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC196EBC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DurationDatePickerItem();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC196F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  char *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t (**v46)();
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;

  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v84 = (char *)&v72 - v7;
  v82 = (_QWORD *)sub_1BC2B3AB8();
  v80 = *(v82 - 1);
  MEMORY[0x1E0C80A78](v82);
  v83 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B3A7C();
  v85 = *(_QWORD *)(v9 - 8);
  v86 = v9;
  MEMORY[0x1E0C80A78](v9);
  v90 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v5);
  MEMORY[0x1E0C80A78](v11);
  v94 = (uint64_t)&v72 - v12;
  v13 = (int *)type metadata accessor for DurationDatePickerItem();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1BC2B3B48();
  v93 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v95 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v72 - v19;
  *(_QWORD *)(v2 + qword_1EF3FCBA0) = 0;
  *(_QWORD *)(v2 + qword_1EF3FCB90) = a1;
  *(_QWORD *)(v2 + qword_1EF3FCB98) = a2;
  v91 = v2;
  swift_retain();
  swift_retain();
  v89 = a2;
  swift_retain();
  sub_1BC2B3B3C();
  v73 = (id)objc_opt_self();
  v21 = objc_msgSend(v73, sel_secondarySystemGroupedBackgroundColor);
  sub_1BC2B3B18();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v22 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v81 = sub_1BC2B2144();
  v79 = v23;
  swift_bridgeObjectRelease();

  v75 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  v88 = v20;
  v75(v95, v20, v16);
  v24 = sub_1BC2B23F0();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v74 = v24;
  v25(v94, 1, 1, v24);
  v87 = v25;
  swift_retain_n();
  sub_1BC2B242C();
  v26 = type metadata accessor for DurationDatePickerCollectionViewCell();
  v78 = sub_1BC0E519C(&qword_1EF3FC4D8, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerCollectionViewCell, (uint64_t)&protocol conformance descriptor for DurationDatePickerCollectionViewCell);
  v77 = v26;
  *v15 = sub_1BC2B2930();
  v15[1] = v27;
  v28 = v13[7];
  v92 = a1;
  v29 = (uint64_t *)((char *)v15 + v28);
  v30 = (uint64_t *)((char *)v15 + v13[10]);
  *v30 = 0;
  v30[1] = 0;
  v31 = v16;
  v32 = (uint64_t *)((char *)v15 + v13[11]);
  *v32 = 0;
  v32[1] = 0;
  v33 = (uint64_t *)((char *)v15 + v13[12]);
  *v33 = 0;
  v33[1] = 0;
  v34 = (uint64_t)v15 + v13[16];
  v25(v34, 1, 1, v24);
  v35 = (uint64_t *)((char *)v15 + v13[6]);
  v36 = v79;
  *v35 = v81;
  v35[1] = v36;
  *v29 = 0;
  v29[1] = 0;
  *((_BYTE *)v15 + v13[13]) = 1;
  *(uint64_t *)((char *)v15 + v13[14]) = 1;
  *(uint64_t *)((char *)v15 + v13[15]) = 2;
  sub_1BC1866A4(v94, v34);
  sub_1BC0F2600(*v30);
  v37 = v92;
  *v30 = (uint64_t)sub_1BC1999D0;
  v30[1] = v37;
  sub_1BC0F2600(*v32);
  *v32 = (uint64_t)sub_1BC199A10;
  v32[1] = v37;
  sub_1BC0F2600(*v33);
  *v33 = 0;
  v33[1] = 0;
  *(uint64_t *)((char *)v15 + v13[8]) = MEMORY[0x1E0DEE9D8];
  v38 = (char *)v15 + v13[9];
  v76 = *(void (**)(char *, char *, uint64_t))(v93 + 32);
  v72 = v31;
  v76(v38, v95, v31);
  v81 = v91 + qword_1EF3FCBA8;
  sub_1BC187DDC((uint64_t)v15, v91 + qword_1EF3FCBA8);
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  v39 = (void *)sub_1BC2B4430();
  v40 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v39);

  swift_retain();
  v41 = (void *)sub_1BC2B4DA8();
  sub_1BC0E1D38(0, &qword_1EDA0FE08);
  v79 = v41;
  v42 = (void *)sub_1BC2B4EF8();
  v43 = objc_msgSend(v73, sel_secondaryLabelColor);
  objc_msgSend(v42, sel_setTintColor_, v43);

  sub_1BC16A32C();
  v45 = v83;
  v46 = (uint64_t (**)())&v83[*(int *)(v44 + 48)];
  v47 = *MEMORY[0x1E0DC1C20];
  v48 = sub_1BC2B3A34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v45, v47, v48);
  *v46 = sub_1BC10E2F8;
  v46[1] = 0;
  (*(void (**)(char *, _QWORD, _QWORD *))(v80 + 104))(v45, *MEMORY[0x1E0DC1D18], v82);
  v49 = sub_1BC2B3A40();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v84, 1, 1, v49);
  v82 = v42;
  sub_1BC2B3A70();
  v50 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v80 = sub_1BC2B2144();
  v73 = v51;
  swift_bridgeObjectRelease();

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  v83 = (char *)swift_allocObject();
  v84 = xmmword_1BC2B92D0;
  *((_OWORD *)v83 + 1) = xmmword_1BC2B92D0;
  sub_1BC2B39F8();
  v75(v95, v88, v31);
  v52 = v94;
  sub_1BC2B3ED8();
  v53 = v74;
  v87(v52, 0, 1, v74);
  v54 = swift_allocObject();
  swift_weakInit();
  v55 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_1BC2B242C();
  *v15 = sub_1BC2B2930();
  v15[1] = v56;
  v57 = (uint64_t *)((char *)v15 + v13[7]);
  v58 = (uint64_t *)((char *)v15 + v13[10]);
  *v58 = 0;
  v58[1] = 0;
  v59 = (uint64_t *)((char *)v15 + v13[11]);
  *v59 = 0;
  v59[1] = 0;
  v60 = (uint64_t *)((char *)v15 + v13[12]);
  *v60 = 0;
  v60[1] = 0;
  v61 = (uint64_t)v15 + v13[16];
  v87(v61, 1, 1, v53);
  v62 = (uint64_t *)((char *)v15 + v13[6]);
  v63 = (uint64_t)v73;
  *v62 = v80;
  v62[1] = v63;
  *v57 = 0;
  v57[1] = 0;
  *((_BYTE *)v15 + v13[13]) = 1;
  *(uint64_t *)((char *)v15 + v13[14]) = 1;
  *(uint64_t *)((char *)v15 + v13[15]) = 2;
  sub_1BC1866A4(v94, v61);
  sub_1BC0F2600(*v58);
  *v58 = (uint64_t)sub_1BC199A44;
  v58[1] = v54;
  sub_1BC0F2600(*v59);
  *v59 = (uint64_t)sub_1BC199A4C;
  v59[1] = v55;
  sub_1BC0F2600(*v60);
  *v60 = 0;
  v60[1] = 0;
  *(uint64_t *)((char *)v15 + v13[8]) = (uint64_t)v83;
  v64 = v72;
  v76((char *)v15 + v13[9], v95, v72);
  swift_release();
  swift_release();
  v65 = v91 + qword_1EF3FCBB0;
  sub_1BC187DDC((uint64_t)v15, v91 + qword_1EF3FCBB0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = v84;
  sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(v66 + 56) = v13;
  v67 = sub_1BC0E519C(&qword_1EF3FC518, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, (uint64_t)&protocol conformance descriptor for DurationDatePickerItem);
  *(_QWORD *)(v66 + 64) = v67;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v66 + 32));
  sub_1BC199A54(v81, (uint64_t)boxed_opaque_existential_1);
  swift_beginAccess();
  *(_QWORD *)(v66 + 96) = v13;
  *(_QWORD *)(v66 + 104) = v67;
  v69 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v66 + 72));
  sub_1BC199A54(v65, (uint64_t)v69);
  swift_release();
  sub_1BC2B2BAC();
  v70 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC19818C();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v90, v86);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v88, v64);
  return v70;
}

uint64_t sub_1BC197AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v22;
  void (*v23)(char *, uint64_t);
  _QWORD v24[2];

  v24[1] = a3;
  v4 = sub_1BC2B2594();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v24 - v9;
  v11 = sub_1BC2B23F0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v24 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v24 - v19;
  sub_1BC186618(a2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1BC0F2444((uint64_t)v10, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
  sub_1BC2B2564();
  sub_1BC2B24B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BC2B3ED8();
  sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v22 = sub_1BC2B4424();
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v15, v11);
  if ((v22 & 1) == 0)
    sub_1BC2B3EC0();
  v23(v18, v11);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v11);
}

uint64_t sub_1BC197D08()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - v2;
  v4 = sub_1BC2B23F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1BC2B3EC0();
  return sub_1BC0F2444((uint64_t)v3, (unint64_t *)&qword_1EDA0E710, v0);
}

uint64_t sub_1BC197DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1BC2B3ED8();
    return swift_release();
  }
  else
  {
    v3 = sub_1BC2B23F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
}

uint64_t sub_1BC197E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a3;
  v36 = sub_1BC2B2594();
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v32 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  v16 = sub_1BC2B23F0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v32 - v21;
  sub_1BC186618(a2, (uint64_t)v15);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(v15, 1, v16) == 1)
  {
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    v25 = (uint64_t)v15;
    return sub_1BC0F2444(v25, (unint64_t *)&qword_1EDA0E710, v24);
  }
  v34 = v4;
  v35 = v20;
  v32 = v6;
  v33 = v10;
  v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v26(v22, v15, v16);
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v16);
    goto LABEL_10;
  }
  sub_1BC2B3ED8();
  swift_release();
  if (v23(v13, 1, v16) == 1)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    v25 = (uint64_t)v13;
    return sub_1BC0F2444(v25, (unint64_t *)&qword_1EDA0E710, v24);
  }
  v27 = v35;
  v26(v35, v13, v16);
  sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  if ((sub_1BC2B4424() & 1) == 0)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v28 = v32;
      sub_1BC2B2564();
      v29 = (uint64_t)v33;
      sub_1BC2B24B0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v36);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
      sub_1BC2B3EC0();
      swift_release();
      sub_1BC0F2444(v29, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
  }
  v30 = *(void (**)(char *, uint64_t))(v17 + 8);
  v30(v27, v16);
  return ((uint64_t (*)(char *, uint64_t))v30)(v22, v16);
}

uint64_t sub_1BC19818C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v25 - v2;
  v4 = sub_1BC2B49F4();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC199BEC();
  v26 = v7;
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC199D94();
  v11 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  v32 = v11;
  MEMORY[0x1E0C80A78](v10);
  v25 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0;
  v27 = v0;
  v14 = *(void **)(v0 + qword_1EF3FCB90);
  v33 = *(_QWORD *)(v13 + qword_1EF3FCB98);
  v34 = v14;
  sub_1BC199CB4();
  sub_1BC199D18();
  v15 = MEMORY[0x1E0C95FB8];
  sub_1BC0E519C((unint64_t *)&qword_1EF3FCC30, (uint64_t (*)(uint64_t))sub_1BC199CB4, MEMORY[0x1E0C95FB8]);
  sub_1BC0E519C((unint64_t *)&qword_1EF3FCC38, (uint64_t (*)(uint64_t))sub_1BC199D18, v15);
  swift_retain();
  swift_retain();
  sub_1BC2B3D70();
  sub_1BC2B49D0();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v34 = (id)sub_1BC2B4A0C();
  v16 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 1, 1, v16);
  sub_1BC0E519C(&qword_1EF3FCC48, (uint64_t (*)(uint64_t))sub_1BC199BEC, MEMORY[0x1E0C95698]);
  sub_1BC1019D8();
  v18 = v25;
  v17 = v26;
  sub_1BC2B4070();
  sub_1BC0F2444((uint64_t)v3, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v17);
  v19 = swift_allocObject();
  v20 = v27;
  *(_QWORD *)(v19 + 16) = sub_1BC199E48;
  *(_QWORD *)(v19 + 24) = v20;
  sub_1BC0E519C(&qword_1EF3FCC50, (uint64_t (*)(uint64_t))sub_1BC199D94, MEMORY[0x1E0C95BB0]);
  v21 = v20;
  swift_retain();
  v22 = v31;
  v23 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v22);
  *(_QWORD *)(v21 + qword_1EF3FCBA0) = v23;
  return swift_release();
}

uint64_t sub_1BC19850C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  void (*v40)(uint64_t *, _QWORD);
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  void (*v63)(uint64_t *, _QWORD);
  void (*v64)(uint64_t *, _QWORD);
  void *v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  void (*v76)(uint64_t *, _QWORD);
  uint64_t v77;
  uint64_t *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v92;
  char *v93;
  __int128 v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121[3];
  uint64_t v122;
  uint64_t v123;

  v99 = a2;
  v115 = a1;
  sub_1BC199AD4();
  v3 = v2;
  *(_QWORD *)&v94 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1BC2B2FA8();
  v105 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v108 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1BC2B2C6C();
  v102 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v109 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v106 = (char *)&v92 - v10;
  v11 = sub_1BC2B2D98();
  v113 = *(_QWORD *)(v11 - 8);
  v114 = v11;
  MEMORY[0x1E0C80A78](v11);
  v112 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1BC2B2594();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1BC2B3CD4();
  v119 = *(_QWORD *)(v111 - 8);
  v14 = MEMORY[0x1E0C80A78](v111);
  v98 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v92 - v16;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v92 - v22;
  v24 = sub_1BC2B23F0();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  v27 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v116 = (char *)&v92 - v29;
  v110 = sub_1BC2B3B48();
  v118 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v31 = (char *)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3B3C();
  v100 = (id)objc_opt_self();
  v32 = objc_msgSend(v100, sel_secondarySystemGroupedBackgroundColor);
  v117 = v31;
  sub_1BC2B3B18();
  sub_1BC186618(v99, (uint64_t)v23);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  v103 = v24;
  v101 = v25;
  if (v33 == 1)
  {
    v34 = v115;
    sub_1BC0F2444((uint64_t)v23, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BC2B2C54();
    v35 = sub_1BC2B3CEC();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v5, v3);
    if (v35 >= 2)
      sub_1BC2B2BE8();
    v36 = v98;
    sub_1BC2B3CC8();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v37 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B3C98();
    v38 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B3B6C();
    v39 = objc_msgSend(v100, sel_linkColor);
    v40 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
    sub_1BC2B3BB4();
    v40(v121, 0);
    v41 = v101;
    v42 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v28, v34, v103);
    v43 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v44 = swift_allocObject();
    v45 = v120;
    *(_QWORD *)(v44 + 16) = v120;
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v44 + v43, v28, v42);
    v46 = v111;
    v122 = v111;
    v123 = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v121);
    (*(void (**)(uint64_t *, char *, uint64_t))(v119 + 16))(boxed_opaque_existential_1, v36, v46);
    v48 = v118;
    v49 = v106;
    v50 = v110;
    (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v106, v117, v110);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v50);
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v109, *MEMORY[0x1E0D2B170], v104);
    (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v108, *MEMORY[0x1E0D2B8C8], v107);
    swift_retain();
    swift_retain();
    v51 = v112;
    sub_1BC2B2D8C();
    sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1BC2B92C0;
    v53 = v45 + qword_1EF3FCBA8;
    *(_QWORD *)(v52 + 56) = type metadata accessor for DurationDatePickerItem();
    *(_QWORD *)(v52 + 64) = sub_1BC0E519C(&qword_1EF3FC518, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, (uint64_t)&protocol conformance descriptor for DurationDatePickerItem);
    v54 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v52 + 32));
    sub_1BC199A54(v53, (uint64_t)v54);
    v55 = v114;
    *(_QWORD *)(v52 + 96) = v114;
    *(_QWORD *)(v52 + 104) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
    v56 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v52 + 72));
    v57 = v113;
    (*(void (**)(uint64_t *, char *, uint64_t))(v113 + 16))(v56, v51, v55);
    sub_1BC2B2C24();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v55);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v36, v46);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v116, v23, v24);
    sub_1BC19954C(v115, (uint64_t)v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    v58 = v120 + qword_1EF3FCBB0;
    swift_beginAccess();
    v98 = (char *)type metadata accessor for DurationDatePickerItem();
    v59 = *((int *)v98 + 16);
    v99 = v58;
    sub_1BC1866A4((uint64_t)v21, v58 + v59);
    swift_endAccess();
    sub_1BC2B3CC8();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v60 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B3C98();
    v61 = v100;
    v62 = objc_msgSend(v100, sel_labelColor);
    v63 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3BB4();
    v63(v121, 0);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    sub_1BC2B4C64();
    v64 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3BA8();
    v64(v121, 0);
    v65 = (void *)qword_1EDA0FEF8;
    sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
    v66 = swift_allocObject();
    v94 = xmmword_1BC2B92D0;
    *(_OWORD *)(v66 + 16) = xmmword_1BC2B92D0;
    v67 = v65;
    swift_bridgeObjectRetain();
    v68 = v95;
    sub_1BC2B2564();
    v69 = sub_1BC2B24F8();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v68, v97);
    v70 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v66 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v66 + 64) = v70;
    *(_QWORD *)(v66 + 32) = v69;
    sub_1BC2B2144();
    if (*(_QWORD *)(v66 + 16))
    {
      sub_1BC2B443C();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

    }
    swift_bridgeObjectRelease();
    v71 = v120;
    v72 = v110;
    v74 = v117;
    v73 = v118;
    sub_1BC2B3B6C();
    v75 = objc_msgSend(v61, sel_labelColor);
    v76 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
    sub_1BC2B3BB4();
    v76(v121, 0);
    v77 = v111;
    v122 = v111;
    v123 = MEMORY[0x1E0DC2398];
    v78 = __swift_allocate_boxed_opaque_existential_1(v121);
    v93 = v17;
    (*(void (**)(uint64_t *, char *, uint64_t))(v119 + 16))(v78, v17, v77);
    v79 = v106;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v106, v74, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v79, 0, 1, v72);
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v109, *MEMORY[0x1E0D2B170], v104);
    (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v108, *MEMORY[0x1E0D2B8C8], v107);
    v50 = v72;
    v80 = v112;
    sub_1BC2B2D8C();
    sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
    v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_1BC2B92C0;
    v82 = v71 + qword_1EF3FCBA8;
    v83 = v98;
    *(_QWORD *)(v81 + 56) = v98;
    v84 = sub_1BC0E519C(&qword_1EF3FC518, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, (uint64_t)&protocol conformance descriptor for DurationDatePickerItem);
    *(_QWORD *)(v81 + 64) = v84;
    v85 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v81 + 32));
    sub_1BC199A54(v82, (uint64_t)v85);
    *(_QWORD *)(v81 + 96) = v83;
    *(_QWORD *)(v81 + 104) = v84;
    v86 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v81 + 72));
    sub_1BC199A54(v99, (uint64_t)v86);
    sub_1BC2B2C24();
    swift_bridgeObjectRelease();
    v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = v94;
    v88 = v114;
    *(_QWORD *)(v87 + 56) = v114;
    *(_QWORD *)(v87 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
    v89 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v87 + 32));
    v90 = v113;
    (*(void (**)(uint64_t *, char *, uint64_t))(v113 + 16))(v89, v80, v88);
    sub_1BC2B2C24();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v80, v88);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v93, v77);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v116, v103);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v118 + 8))(v117, v50);
}

uint64_t sub_1BC1993B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v0 = sub_1BC2B257C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B2594();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  swift_retain();
  sub_1BC2B2564();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB1130], v0);
  sub_1BC2B254C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BC2B3EC0();
  swift_release();
  return sub_1BC0F2444((uint64_t)v11, (unint64_t *)&qword_1EDA0E710, v8);
}

uint64_t sub_1BC19954C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v23 = a1;
  v2 = sub_1BC2B257C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B23F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC2B2594();
  v10 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  sub_1BC2B314C();
  v13 = sub_1BC2B3164();
  swift_release();
  if ((v13 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v22, v23, v6);
  v15 = v22;
  sub_1BC2B2564();
  sub_1BC2B23B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CB1130], v2);
  v16 = sub_1BC2B2558();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v9, v6);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19 = v21;
  v18(v12, v21);
  if (v16 == -1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v15, v23, v6);
  sub_1BC2B2564();
  sub_1BC2B23B4();
  sub_1BC2B24B0();
  v17(v9, v6);
  return ((uint64_t (*)(char *, uint64_t))v18)(v12, v19);
}

void sub_1BC1997C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1997F0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_1BC199A98(v0 + qword_1EF3FCBA8);
  return sub_1BC199A98(v0 + qword_1EF3FCBB0);
}

uint64_t sub_1BC19984C()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC199A98(v0 + qword_1EF3FCBA8);
  sub_1BC199A98(v0 + qword_1EF3FCBB0);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1998CC()
{
  return type metadata accessor for StartDateEndDateEditDataSource();
}

uint64_t sub_1BC1998D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  sub_1BC2B2DC8();
  v4 = sub_1BC2B2D14();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC19997C()
{
  type metadata accessor for DurationDatePickerCollectionViewCell();
  sub_1BC0E519C(&qword_1EF3FC4D8, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerCollectionViewCell, (uint64_t)&protocol conformance descriptor for DurationDatePickerCollectionViewCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1999D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1BC2B3ED8();
  v2 = sub_1BC2B23F0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1BC199A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC197AD4(a1, a2, v2);
}

uint64_t sub_1BC199A18()
{
  return sub_1BC197D08();
}

uint64_t sub_1BC199A20()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC199A44@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC197DBC(a1);
}

uint64_t sub_1BC199A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC197E3C(a1, a2, v2);
}

uint64_t sub_1BC199A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DurationDatePickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC199A98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DurationDatePickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC199AD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCC10)
  {
    v0 = sub_1BC2B3D10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCC10);
  }
}

uint64_t sub_1BC199B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC2B23F0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC199BAC()
{
  sub_1BC2B23F0();
  return sub_1BC1993B0();
}

void sub_1BC199BEC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FCC18)
  {
    sub_1BC199CB4();
    sub_1BC199D18();
    v0 = MEMORY[0x1E0C95FB8];
    sub_1BC0E519C((unint64_t *)&qword_1EF3FCC30, (uint64_t (*)(uint64_t))sub_1BC199CB4, MEMORY[0x1E0C95FB8]);
    sub_1BC0E519C((unint64_t *)&qword_1EF3FCC38, (uint64_t (*)(uint64_t))sub_1BC199D18, v0);
    v1 = sub_1BC2B3D64();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FCC18);
  }
}

void sub_1BC199CB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCC20)
  {
    sub_1BC2B23F0();
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCC20);
  }
}

void sub_1BC199D18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCC28)
  {
    sub_1BC0E7998(255, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCC28);
  }
}

void sub_1BC199D94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCC40)
  {
    sub_1BC199BEC();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF3FCC48, (uint64_t (*)(uint64_t))sub_1BC199BEC, MEMORY[0x1E0C95698]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCC40);
  }
}

uint64_t sub_1BC199E4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC199E70(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC1A78EC(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

void static ScheduleUnavailableDeviceState.Device.resolvedLocal.getter(char *a1@<X8>)
{
  id v2;
  id v3;
  char v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3 == (id)1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *a1 = v4;
}

HealthMedicationsUI::ScheduleUnavailableDeviceState __swiftcall ScheduleUnavailableDeviceState.init(localDevice:location:isHealthSharing:medicationCount:)(HealthMedicationsUI::ScheduleUnavailableDeviceState::Device localDevice, HealthMedicationsUI::ScheduleUnavailableDeviceState::Location location, Swift::Bool isHealthSharing, Swift::Int medicationCount)
{
  uint64_t v4;
  char v5;
  HealthMedicationsUI::ScheduleUnavailableDeviceState result;

  v5 = *(_BYTE *)location;
  *(_BYTE *)v4 = *(_BYTE *)localDevice;
  *(_BYTE *)(v4 + 1) = v5;
  *(_BYTE *)(v4 + 2) = isHealthSharing;
  *(_QWORD *)(v4 + 8) = medicationCount;
  LOBYTE(result.medicationCount) = location;
  result.localDevice = localDevice;
  return result;
}

uint64_t ScheduleUnavailableDeviceState.bodyText.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = *(_BYTE *)(v0 + 1);
  v2 = *(_QWORD *)(v0 + 8);
  v3 = ScheduleUnavailableDeviceState.localizationKey.getter();
  if (v4)
  {
    if ((v1 & 1) != 0)
    {
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v5 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v3 = sub_1BC2B2144();
      swift_bridgeObjectRelease();

    }
    else
    {
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v6 = (void *)qword_1EDA0FEF8;
      sub_1BC19A388();
      v7 = swift_allocObject();
      v8 = MEMORY[0x1E0DEB418];
      *(_OWORD *)(v7 + 16) = xmmword_1BC2B92D0;
      v9 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v7 + 56) = v8;
      *(_QWORD *)(v7 + 64) = v9;
      *(_QWORD *)(v7 + 32) = v2;
      v10 = v6;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      v3 = sub_1BC2B443C();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return v3;
}

BOOL static ScheduleUnavailableDeviceState.Device.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ScheduleUnavailableDeviceState.Device.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t ScheduleUnavailableDeviceState.localizationKey.getter()
{
  char *v0;
  char v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = *((_QWORD *)v0 + 1);
  if (v0[1])
    v5 = 0x5F545045434E4F43;
  else
    v5 = 0x59524F4745544143;
  if ((v1 & 1) != 0 || !objc_msgSend((id)objc_opt_self(), sel_hasSupportedAppleWatchPaired))
  {
    if (v3)
    {
      if ((v2 & 1) == 0)
        goto LABEL_14;
      goto LABEL_12;
    }
  }
  else if (v3)
  {
    goto LABEL_15;
  }
  if (!v2)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_12:
  if (v4 == 1)
    goto LABEL_13;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1BC19A388()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0ED40[0])
  {
    sub_1BC15DBC0();
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, qword_1EDA0ED40);
  }
}

unint64_t sub_1BC19A3E0()
{
  unint64_t result;

  result = qword_1EF3FCC58;
  if (!qword_1EF3FCC58)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for ScheduleUnavailableDeviceState.Device, &type metadata for ScheduleUnavailableDeviceState.Device);
    atomic_store(result, (unint64_t *)&qword_1EF3FCC58);
  }
  return result;
}

unint64_t sub_1BC19A428()
{
  unint64_t result;

  result = qword_1EF3FCC60;
  if (!qword_1EF3FCC60)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for ScheduleUnavailableDeviceState.Location, &type metadata for ScheduleUnavailableDeviceState.Location);
    atomic_store(result, (unint64_t *)&qword_1EF3FCC60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduleUnavailableDeviceState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleUnavailableDeviceState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleUnavailableDeviceState()
{
  return &type metadata for ScheduleUnavailableDeviceState;
}

ValueMetadata *type metadata accessor for ScheduleUnavailableDeviceState.Device()
{
  return &type metadata for ScheduleUnavailableDeviceState.Device;
}

uint64_t _s19HealthMedicationsUI30ScheduleUnavailableDeviceStateV6DeviceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC19A564 + 4 * byte_1BC2BEC15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC19A598 + 4 * byte_1BC2BEC10[v4]))();
}

uint64_t sub_1BC19A598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC19A5A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC19A5A8);
  return result;
}

uint64_t sub_1BC19A5B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC19A5BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC19A5C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC19A5C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScheduleUnavailableDeviceState.Location()
{
  return &type metadata for ScheduleUnavailableDeviceState.Location;
}

uint64_t dispatch thunk of DayHistoryLineItemDisplayable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DayHistoryLineItemDisplayable.skipped.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DayHistoryLineItemDisplayable.isLastScheduledDose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DayHistoryDisplayable.timeText.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayHistoryDisplayable.lineItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DayHistoryDisplayable.logTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t ScheduleDurationItem.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ScheduleDurationItem() + 20);
  v4 = sub_1BC2B23F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ScheduleDurationItem()
{
  uint64_t result;

  result = qword_1EF3FCCF8;
  if (!qword_1EF3FCCF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ScheduleDurationItem.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ScheduleDurationItem();
  return sub_1BC118700(v1 + *(int *)(v3 + 24), a1, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t ScheduleDurationItem.init(startDate:endDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC2B242C();
  v6 = (int *)type metadata accessor for ScheduleDurationItem();
  v7 = (uint64_t *)(a3 + v6[7]);
  type metadata accessor for ScheduleDurationCell();
  sub_1BC0E008C(&qword_1EF3FC3F8, v8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationCell, (uint64_t)&protocol conformance descriptor for ScheduleDurationCell);
  *v7 = sub_1BC2B2930();
  v7[1] = v9;
  v10 = a3 + v6[5];
  v11 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a1, v11);
  return sub_1BC141D44(a2, a3 + v6[6]);
}

uint64_t type metadata accessor for ScheduleDurationCell()
{
  return objc_opt_self();
}

uint64_t ScheduleDurationItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ScheduleDurationItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t ScheduleDurationItem.uniqueIdentifier.getter()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  return 0xD000000000000015;
}

uint64_t ScheduleDurationItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1BC2B23F0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  v9 = type metadata accessor for ScheduleDurationItem();
  sub_1BC0E008C(&qword_1EF3FCC70, 255, v2, MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC118700(v0 + *(int *)(v9 + 24), (uint64_t)v8, (unint64_t *)&qword_1EDA0E710, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
    return sub_1BC2B5468();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
  sub_1BC2B5468();
  sub_1BC2B43F4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t ScheduleDurationItem.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1BC2B23F0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1BC2B5450();
  v9 = type metadata accessor for ScheduleDurationItem();
  sub_1BC0E008C(&qword_1EF3FCC70, 255, v2, MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC118700(v0 + *(int *)(v9 + 24), (uint64_t)v8, (unint64_t *)&qword_1EDA0E710, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_1BC2B5468();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_1BC2B5468();
    sub_1BC2B43F4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_1BC2B548C();
}

uint64_t sub_1BC19ABE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_1BC2B23F0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  sub_1BC0E008C(&qword_1EF3FCC70, 255, v5, MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC118700(v2 + *(int *)(a2 + 24), (uint64_t)v11, (unint64_t *)&qword_1EDA0E710, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) == 1)
    return sub_1BC2B5468();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
  sub_1BC2B5468();
  sub_1BC2B43F4();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t sub_1BC19AD70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_1BC2B23F0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  sub_1BC2B5450();
  sub_1BC0E008C(&qword_1EF3FCC70, 255, v5, MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  sub_1BC118700(v2 + *(int *)(a2 + 24), (uint64_t)v11, (unint64_t *)&qword_1EDA0E710, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) == 1)
  {
    sub_1BC2B5468();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
    sub_1BC2B5468();
    sub_1BC2B43F4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  }
  return sub_1BC2B548C();
}

void sub_1BC19AF20()
{
  qword_1EF402800 = 0x4018000000000000;
}

void sub_1BC19AF30()
{
  qword_1EF402808 = 0;
}

void sub_1BC19AF3C()
{
  qword_1EF402810 = 0x4020000000000000;
}

void sub_1BC19AF4C()
{
  qword_1EF402818 = 0x4028000000000000;
}

id sub_1BC19AF5C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView];
  }
  else
  {
    v4 = sub_1BC19AFBC(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC19AFBC(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t *v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  v3 = objc_msgSend(a1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  LOBYTE(v3) = sub_1BC2B4ACC();
  objc_msgSend(v2, sel_setAxis_, v3 & 1);
  v5 = objc_msgSend(a1, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LOBYTE(v5) = sub_1BC2B4ACC();
  if ((v5 & 1) != 0)
  {
    if (qword_1EF3F80F8 != -1)
      swift_once();
    v7 = &qword_1EF402818;
  }
  else
  {
    if (qword_1EF3F80F0 != -1)
      swift_once();
    v7 = &qword_1EF402810;
  }
  objc_msgSend(v2, sel_setSpacing_, *(double *)v7);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1BC19B134()
{
  return sub_1BC19B140(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___startDateStackView);
}

id sub_1BC19B140(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)&v1[*a1];
  if (v3)
  {
    v4 = *(id *)&v1[*a1];
  }
  else
  {
    v5 = sub_1BC19B1A8(v1);
    v6 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

id sub_1BC19B19C()
{
  return sub_1BC19B140(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___endDateStackView);
}

id sub_1BC19B1A8(void *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v2, sel_setAxis_, 1);
  v3 = objc_msgSend(a1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  LOBYTE(v3) = sub_1BC2B4ACC();
  if ((v3 & 1) != 0)
  {
    if (qword_1EF3F80E8 != -1)
      swift_once();
    v5 = &qword_1EF402808;
  }
  else
  {
    if (qword_1EF3F80E0 != -1)
      swift_once();
    v5 = &qword_1EF402800;
  }
  objc_msgSend(v2, sel_setSpacing_, *(double *)v5);
  return v2;
}

uint64_t sub_1BC19B2C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC19B464();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC19B330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC19B380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC19B464();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC19B3EC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC19B434;
}

uint64_t sub_1BC19B434(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC19B464();
  return result;
}

uint64_t sub_1BC19B464()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v54 - v8;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FCD40, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationItem, v6);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for ScheduleDurationItem();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v17, (uint64_t)v56);
  if (!v56[3])
  {
    sub_1BC0F7954((uint64_t)v56);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_7:
    sub_1BC0F2444((uint64_t)v12, (unint64_t *)&unk_1EF3FCD40, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationItem);
    sub_1BC2B39A4();
    v47 = v1;
    v48 = sub_1BC2B39D4();
    v49 = sub_1BC2B48C8();
    if (os_log_type_enabled(v48, v49))
    {
      v54 = v2;
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v55 = v51;
      *(_DWORD *)v50 = 136446210;
      sub_1BC0E5774(v17, (uint64_t)v56);
      sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v52 = sub_1BC2B4490();
      v56[0] = sub_1BC12540C(v52, v53, &v55);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v48, v49, "Incorrect view model for ScheduleDurationItem: %{public}s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v51, -1, -1);
      MEMORY[0x1BCCEF3A0](v50, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v54);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v18 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, v18 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    goto LABEL_7;
  sub_1BC19D544((uint64_t)v12, (uint64_t)v16);
  v19 = sub_1BC19AF5C();
  sub_1BC2B4C94();

  v20 = sub_1BC19B134();
  sub_1BC2B4C94();

  v21 = sub_1BC19B19C();
  sub_1BC2B4C94();

  v22 = sub_1BC19B134();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v23 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v24 = sub_1BC2B2144();
  v26 = v25;
  swift_bridgeObjectRelease();

  v27 = sub_1BC19D588(v24, v26);
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_addArrangedSubview_, v27);

  v28 = sub_1BC19B134();
  v29 = &v16[*(int *)(v13 + 20)];
  v30 = sub_1BC2B23F0();
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v32 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v9, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v9, 0, 1, v30);
  v33 = sub_1BC19D78C((uint64_t)v9);
  sub_1BC0F2444((uint64_t)v9, (unint64_t *)&qword_1EDA0E710, v31);
  objc_msgSend(v28, sel_addArrangedSubview_, v33);

  v34 = sub_1BC19B19C();
  v35 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v36 = sub_1BC2B2144();
  v38 = v37;
  swift_bridgeObjectRelease();

  v39 = sub_1BC19D588(v36, v38);
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_addArrangedSubview_, v39);

  v40 = sub_1BC19B19C();
  v41 = sub_1BC19D78C((uint64_t)&v16[*(int *)(v13 + 24)]);
  objc_msgSend(v40, sel_addArrangedSubview_, v41);

  v42 = sub_1BC19AF5C();
  v43 = sub_1BC19B134();
  objc_msgSend(v42, sel_addArrangedSubview_, v43);

  v44 = sub_1BC19AF5C();
  v45 = sub_1BC19B19C();
  objc_msgSend(v44, sel_addArrangedSubview_, v45);

  return sub_1BC0E8594((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
}

id ScheduleDurationCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id ScheduleDurationCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  objc_super v44;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___startDateStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___endDateStackView] = 0;
  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item];
  v10 = (objc_class *)type metadata accessor for ScheduleDurationCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v44.receiver = v4;
  v44.super_class = v10;
  v11 = objc_msgSendSuper2(&v44, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = objc_msgSend(v11, sel_contentView);
  v13 = sub_1BC19AF5C();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC2BA730;
  v16 = sub_1BC19AF5C();
  v17 = objc_msgSend(v16, sel_leadingAnchor);

  v18 = objc_msgSend(v11, sel_contentView);
  v19 = objc_msgSend(v18, sel_layoutMarginsGuide);

  v20 = objc_msgSend(v19, sel_leadingAnchor);
  v21 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v15 + 32) = v21;
  v22 = sub_1BC19AF5C();
  v23 = objc_msgSend(v22, sel_trailingAnchor);

  v24 = objc_msgSend(v11, sel_contentView);
  v25 = objc_msgSend(v24, sel_layoutMarginsGuide);

  v26 = objc_msgSend(v25, sel_trailingAnchor);
  v27 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v26);

  *(_QWORD *)(v15 + 40) = v27;
  v28 = sub_1BC19AF5C();
  v29 = objc_msgSend(v28, sel_topAnchor);

  v30 = objc_msgSend(v11, sel_contentView);
  v31 = objc_msgSend(v30, sel_topAnchor);

  if (qword_1EF3F80F8 != -1)
    swift_once();
  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, *(double *)&qword_1EF402818);

  *(_QWORD *)(v15 + 48) = v32;
  v33 = sub_1BC19AF5C();
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v11, sel_contentView);
  v36 = objc_msgSend(v35, sel_bottomAnchor);

  v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v36, -*(double *)&qword_1EF402818);
  *(_QWORD *)(v15 + 56) = v37;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v38 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_activateConstraints_, v38);

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BC2B92D0;
  v40 = sub_1BC2B3D40();
  v41 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v39 + 32) = v40;
  *(_QWORD *)(v39 + 40) = v41;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  v42 = v11;
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v42;
}

void sub_1BC19C02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t *v12;
  id v13;
  id v14;
  id v15;
  uint64_t *v16;
  id v17;
  id v18;
  id v19;
  uint64_t *v20;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = sub_1BC19AF5C();
    v7 = objc_msgSend(v5, sel_traitCollection);
    v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

    LOBYTE(v7) = sub_1BC2B4ACC();
    objc_msgSend(v6, sel_setAxis_, v7 & 1);

    v9 = sub_1BC19AF5C();
    v10 = objc_msgSend(v5, sel_traitCollection);
    v11 = objc_msgSend(v10, sel_preferredContentSizeCategory);

    LOBYTE(v10) = sub_1BC2B4ACC();
    if ((v10 & 1) != 0)
    {
      if (qword_1EF3F80F8 != -1)
        swift_once();
      v12 = &qword_1EF402818;
    }
    else
    {
      if (qword_1EF3F80F0 != -1)
        swift_once();
      v12 = &qword_1EF402810;
    }
    objc_msgSend(v9, sel_setSpacing_, *(double *)v12);

    v13 = sub_1BC19B134();
    v14 = objc_msgSend(v5, sel_traitCollection);
    v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

    LOBYTE(v14) = sub_1BC2B4ACC();
    if ((v14 & 1) != 0)
    {
      if (qword_1EF3F80E8 != -1)
        swift_once();
      v16 = &qword_1EF402808;
    }
    else
    {
      if (qword_1EF3F80E0 != -1)
        swift_once();
      v16 = &qword_1EF402800;
    }
    objc_msgSend(v13, sel_setSpacing_, *(double *)v16);

    v17 = sub_1BC19B19C();
    v18 = objc_msgSend(v5, sel_traitCollection);
    v19 = objc_msgSend(v18, sel_preferredContentSizeCategory);

    LOBYTE(v18) = sub_1BC2B4ACC();
    if ((v18 & 1) != 0)
    {
      if (qword_1EF3F80E8 != -1)
        swift_once();
      v20 = &qword_1EF402808;
    }
    else
    {
      if (qword_1EF3F80E0 != -1)
        swift_once();
      v20 = &qword_1EF402800;
    }
    objc_msgSend(v17, sel_setSpacing_, *(double *)v20);

  }
}

uint64_t sub_1BC19C40C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  objc_super v13;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = (void *)sub_1BC2B3AE8();
  v9 = (objc_class *)type metadata accessor for ScheduleDurationCell();
  v13.receiver = v1;
  v13.super_class = v9;
  objc_msgSendSuper2(&v13, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1BCCEE230]();
  v10 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
  {
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC118700((uint64_t)v7, (uint64_t)v5, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCEE23C](v5);
    return sub_1BC0F2444((uint64_t)v7, &qword_1EDA0FAF0, v11);
  }
  else
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D24();
    sub_1BC2B3B18();
    return MEMORY[0x1BCCEE23C](v7);
  }
}

id ScheduleDurationCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleDurationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s19HealthMedicationsUI20ScheduleDurationItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  char v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  char *v32;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v4 = sub_1BC2B23F0();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  sub_1BC19DC90();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ScheduleDurationItem();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v35 - v19;
  v21 = sub_1BC2B239C();
  sub_1BC19DD08(a1, (uint64_t)v20);
  sub_1BC19DD08(a2, (uint64_t)v18);
  if ((v21 & 1) == 0)
  {
    sub_1BC0E8594((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
    v30 = (uint64_t)v20;
    v31 = (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem;
LABEL_9:
    sub_1BC0E8594(v30, v31);
    v29 = 0;
    return v29 & 1;
  }
  v22 = *(int *)(v15 + 24);
  v23 = (uint64_t)&v18[v22];
  v24 = (uint64_t)&v14[*(int *)(v12 + 48)];
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC118700((uint64_t)&v20[v22], (uint64_t)v14, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC118700(v23, v24, (unint64_t *)&qword_1EDA0E710, v25);
  v26 = v35;
  v27 = v36;
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v28((uint64_t)v14, 1, v36) != 1)
  {
    v32 = v10;
    sub_1BC118700((uint64_t)v14, (uint64_t)v10, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v28(v24, 1, v27) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v6, v24, v27);
      sub_1BC0E008C(&qword_1EF3FCC08, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v29 = sub_1BC2B4424();
      v34 = *(void (**)(char *, uint64_t))(v26 + 8);
      v34(v6, v27);
      sub_1BC0E8594((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
      sub_1BC0E8594((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
      v34(v32, v27);
      sub_1BC0F2444((uint64_t)v14, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      return v29 & 1;
    }
    sub_1BC0E8594((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
    sub_1BC0E8594((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
    goto LABEL_8;
  }
  sub_1BC0E8594((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
  sub_1BC0E8594((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleDurationItem);
  if (v28(v24, 1, v27) != 1)
  {
LABEL_8:
    v31 = (uint64_t (*)(_QWORD))sub_1BC19DC90;
    v30 = (uint64_t)v14;
    goto LABEL_9;
  }
  sub_1BC0F2444((uint64_t)v14, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v29 = 1;
  return v29 & 1;
}

uint64_t sub_1BC19CA34()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC19CA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC19C02C(a1, a2, v2);
}

uint64_t sub_1BC19CA60()
{
  return sub_1BC0E008C(&qword_1EF3FCC98, 255, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationItem, (uint64_t)&protocol conformance descriptor for ScheduleDurationItem);
}

uint64_t sub_1BC19CA90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for ScheduleDurationItem(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_1BC2B23F0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v19 = a3[7];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *v20 = *(_QWORD *)v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ScheduleDurationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1BC2B23F0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v9 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduleDurationItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC2B23F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduleDurationItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC2B23F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ScheduleDurationItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC2B23F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ScheduleDurationItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC2B23F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduleDurationItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC19D24C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1BC2B23F0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleDurationItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BC19D340(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_1BC2B2438();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_8:
    v11(v12, a2, a2, v10);
    return;
  }
  v13 = sub_1BC2B23F0();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
}

void sub_1BC19D424()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BC2B2438();
  if (v0 <= 0x3F)
  {
    sub_1BC2B23F0();
    if (v1 <= 0x3F)
    {
      sub_1BC0E7998(319, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t method lookup function for ScheduleDurationCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScheduleDurationCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ScheduleDurationCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ScheduleDurationCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1BC19D544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduleDurationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BC19D588(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38];
  sub_1BC0E7998(0, (unint64_t *)&unk_1EF3FCD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - v6;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v9 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AB8]);
  objc_msgSend(v8, sel_setFont_, v9);

  v10 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  objc_msgSend(v8, sel_setNumberOfLines_, 1);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v14[0] = a1;
  v14[1] = a2;
  sub_1BC2B2468();
  v11 = sub_1BC2B24A4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
  sub_1BC0FF070();
  sub_1BC2B4FE8();
  sub_1BC0F2444((uint64_t)v7, (unint64_t *)&unk_1EF3FCD50, v4);
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setText_, v12);

  return v8;
}

id sub_1BC19D78C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  Swift::String v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v25;

  v2 = sub_1BC2B2594();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v9 = sub_1BC2B23F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v14 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v13, sel_setFont_, v14);

  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v13, sel_setLineBreakMode_, 0);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setNumberOfLines_, 2);
  sub_1BC118700(a1, (uint64_t)v8, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BC0F2444((uint64_t)v8, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v15 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v16 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v16);

    v17 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v13, sel_setTextColor_, v17);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_1BC2B2564();
    v18 = sub_1BC2B24BC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v18 & 1) != 0)
    {
      sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1BC2B92D0;
      v20 = Date.formattedWithYearIfDifferent()();
      *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v19 + 64) = sub_1BC0F2748();
      *(Swift::String *)(v19 + 32) = v20;
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v21 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      sub_1BC2B443C();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      Date.formattedWithYearIfDifferent()();
    }
    v22 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v22);

    v23 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v13, sel_setTextColor_, v23);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13;
}

void sub_1BC19DC90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FCD60)
  {
    sub_1BC0E7998(255, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FCD60);
  }
}

uint64_t sub_1BC19DD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduleDurationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id InteractionNotCheckedItem.medication.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t InteractionNotCheckedItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC19DD80()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = objc_msgSend(*(id *)(v0 + 16), sel_semanticIdentifier);
  v3 = objc_msgSend(v2, sel_description);
  sub_1BC2B4460();

  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

_QWORD *InteractionNotCheckedItem.__allocating_init(medication:)(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)swift_allocObject();
  type metadata accessor for InteractionNotCheckedCell();
  sub_1BC0E008C(&qword_1EF3FCD68, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNotCheckedCell, (uint64_t)&protocol conformance descriptor for InteractionNotCheckedCell);
  v2[3] = sub_1BC2B2930();
  v2[4] = v3;
  v2[2] = a1;
  return v2;
}

_QWORD *InteractionNotCheckedItem.init(medication:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  type metadata accessor for InteractionNotCheckedCell();
  sub_1BC0E008C(&qword_1EF3FCD68, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNotCheckedCell, (uint64_t)&protocol conformance descriptor for InteractionNotCheckedCell);
  v1[3] = sub_1BC2B2930();
  v1[4] = v3;
  v1[2] = a1;
  return v1;
}

uint64_t static InteractionNotCheckedItem.== infix(_:_:)()
{
  sub_1BC102870();
  return sub_1BC2B4D84() & 1;
}

void sub_1BC19DF4C()
{
  uint64_t v0;
  id v1;

  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_1BC2B4D90();

}

uint64_t InteractionNotCheckedItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionNotCheckedItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC19E00C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B4D90();
  return sub_1BC2B548C();
}

uint64_t sub_1BC19E058()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC19E088()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  v2 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_semanticIdentifier);
  v3 = objc_msgSend(v2, sel_description);
  sub_1BC2B4460();

  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC19E130()
{
  sub_1BC102870();
  return sub_1BC2B4D84() & 1;
}

uint64_t sub_1BC19E174()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

void sub_1BC19E19C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1BC2B44D8();
  v2 = *(id *)(v1 + 16);
  sub_1BC2B4D90();

}

uint64_t sub_1BC19E1EC(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FCD70, a2, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNotCheckedItem, (uint64_t)&protocol conformance descriptor for InteractionNotCheckedItem);
}

uint64_t type metadata accessor for InteractionNotCheckedItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC19E238()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  sub_1BC2B5450();
  v1 = *v0;
  sub_1BC2B44D8();
  v2 = *(id *)(v1 + 16);
  sub_1BC2B4D90();

  return sub_1BC2B548C();
}

uint64_t method lookup function for InteractionNotCheckedItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionNotCheckedItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of InteractionNotCheckedItem.__allocating_init(medication:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of InteractionNotCheckedItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionNotCheckedItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

__n128 sub_1BC19E2C8()
{
  __n128 result;

  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EF402820 = (__int128)result;
  *(__n128 *)&qword_1EF402830 = result;
  return result;
}

uint64_t sub_1BC19E2DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  sub_1BC0E7A34((uint64_t)v5, v3, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
  swift_endAccess();
  sub_1BC19EFA4();
  return sub_1BC0E7B24((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
}

uint64_t sub_1BC19E38C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC19E3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  sub_1BC0E7A34(a1, v3, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
  swift_endAccess();
  sub_1BC19EFA4();
  return sub_1BC0E7B24(a1, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
}

void (*sub_1BC19E480(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC19E4C8;
}

void sub_1BC19E4C8(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC19EFA4();
}

id sub_1BC19E5C8(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___firstFactorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___secondFactorView] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionResultDetailCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id sub_1BC19E6B0()
{
  return sub_1BC19E7A0(&OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___firstFactorView);
}

id sub_1BC19E6BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC19E794()
{
  return sub_1BC19E7A0(&OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___secondFactorView);
}

id sub_1BC19E7A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InteractionDetailFactorView()), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

void sub_1BC19E820()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = sub_1BC19E6B0();
  v2 = sub_1BC19E6BC();
  v3 = sub_1BC19E794();
  v4 = v1;
  v5 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v5, sel_addSubview_, v4);

  v6 = v2;
  v7 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_addSubview_, v6);

  v8 = v3;
  v9 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v9, sel_addSubview_, v8);

}

void sub_1BC19E920()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;

  v58 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2BAEA0;
  v2 = sub_1BC19E6B0();
  v3 = objc_msgSend(v2, sel_topAnchor);

  v4 = objc_msgSend(v0, sel_contentView);
  v5 = objc_msgSend(v4, sel_topAnchor);

  if (qword_1EF3F8100 != -1)
    swift_once();
  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, *(double *)&xmmword_1EF402820);

  *(_QWORD *)(v1 + 32) = v6;
  v7 = sub_1BC19E6B0();
  v8 = objc_msgSend(v7, sel_leadingAnchor);

  v9 = objc_msgSend(v0, sel_contentView);
  v10 = objc_msgSend(v9, sel_layoutMarginsGuide);

  v11 = objc_msgSend(v10, (SEL)&ShapeCell.base_props + 6);
  v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v1 + 40) = v12;
  v13 = sub_1BC19E6B0();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v0, sel_contentView);
  v16 = objc_msgSend(v15, sel_layoutMarginsGuide);

  v17 = objc_msgSend(v16, sel_trailingAnchor);
  v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v1 + 48) = v18;
  v19 = sub_1BC19E6BC();
  v20 = objc_msgSend(v19, (SEL)&ShapeCell.base_props + 6);

  v21 = objc_msgSend(v0, sel_contentView);
  v22 = objc_msgSend(v21, sel_layoutMarginsGuide);

  v23 = objc_msgSend(v22, (SEL)&ShapeCell.base_props + 6);
  v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v1 + 56) = v24;
  v25 = sub_1BC19E6BC();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v0, sel_contentView);
  v28 = objc_msgSend(v27, sel_layoutMarginsGuide);

  v29 = objc_msgSend(v28, sel_trailingAnchor);
  v30 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v29);

  *(_QWORD *)(v1 + 64) = v30;
  v31 = sub_1BC19E6BC();
  v32 = objc_msgSend(v31, sel_topAnchor);

  v33 = sub_1BC19E6B0();
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 20.0);
  *(_QWORD *)(v1 + 72) = v35;
  v36 = sub_1BC19E794();
  v37 = objc_msgSend(v36, sel_leadingAnchor);

  v38 = objc_msgSend(v0, sel_contentView);
  v39 = objc_msgSend(v38, sel_layoutMarginsGuide);

  v40 = objc_msgSend(v39, sel_leadingAnchor);
  v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v40);

  *(_QWORD *)(v1 + 80) = v41;
  v42 = sub_1BC19E794();
  v43 = objc_msgSend(v42, sel_trailingAnchor);

  v44 = objc_msgSend(v0, sel_contentView);
  v45 = objc_msgSend(v44, sel_layoutMarginsGuide);

  v46 = objc_msgSend(v45, sel_trailingAnchor);
  v47 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v46);

  *(_QWORD *)(v1 + 88) = v47;
  v48 = sub_1BC19E794();
  v49 = objc_msgSend(v48, sel_topAnchor);

  v50 = sub_1BC19E6BC();
  v51 = objc_msgSend(v50, sel_bottomAnchor);

  v52 = objc_msgSend(v49, sel_constraintEqualToAnchor_constant_, v51, 17.0);
  *(_QWORD *)(v1 + 96) = v52;
  v53 = sub_1BC19E794();
  v54 = objc_msgSend(v53, sel_bottomAnchor);

  v55 = objc_msgSend(v0, sel_contentView);
  v56 = objc_msgSend(v55, sel_bottomAnchor);

  v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_constant_, v56, -*(double *)&qword_1EF402830);
  *(_QWORD *)(v1 + 104) = v57;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v59 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_activateConstraints_, v59);

}

void sub_1BC19EFA4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v6, (uint64_t)v37);
  if (v37[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    sub_1BC19F5EC(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = v36[0];
      v8 = (char *)sub_1BC19E6B0();
      v9 = (_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 120));
      v10 = v9[3];
      v11 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v10);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
      v13 = (uint64_t *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients];
      swift_beginAccess();
      *v13 = v12;

      swift_bridgeObjectRelease();
      v14 = sub_1BC19E6B0();
      v15 = v9[3];
      v16 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v15);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 32))(v37, v15, v16);
      v17 = (uint64_t)v14 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
      swift_beginAccess();
      sub_1BC0E7A34((uint64_t)v37, v17, &qword_1EF3FA088, &qword_1EF3FA090);
      swift_endAccess();
      sub_1BC11E5B4();
      sub_1BC0E7B24((uint64_t)v37, &qword_1EF3FA088, &qword_1EF3FA090);

      v18 = (char *)sub_1BC19E794();
      v19 = v9[3];
      v20 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v19);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 64))(v19, v20);
      v22 = (uint64_t *)&v18[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients];
      swift_beginAccess();
      *v22 = v21;

      swift_bridgeObjectRelease();
      v23 = sub_1BC19E794();
      v24 = v9[3];
      v25 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v24);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v25 + 56))(v37, v24, v25);
      v26 = (uint64_t)v23 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
      swift_beginAccess();
      sub_1BC0E7A34((uint64_t)v37, v26, &qword_1EF3FA088, &qword_1EF3FA090);
      swift_endAccess();
      sub_1BC11E5B4();
      sub_1BC0E7B24((uint64_t)v37, &qword_1EF3FA088, &qword_1EF3FA090);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1BC0E7B24((uint64_t)v37, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
  }
  sub_1BC2B39A4();
  v27 = v1;
  v28 = sub_1BC2B39D4();
  v29 = sub_1BC2B48C8();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc();
    v35 = v2;
    v31 = (uint8_t *)v30;
    v32 = swift_slowAlloc();
    v36[0] = v32;
    *(_DWORD *)v31 = 136446210;
    sub_1BC0E5774(v6, (uint64_t)v37);
    sub_1BC0E7A84(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
    v33 = sub_1BC2B4490();
    v37[0] = sub_1BC12540C(v33, v34, v36);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v28, v29, "Incorrect view model for InteractionResultDetailCell: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v32, -1, -1);
    MEMORY[0x1BCCEF3A0](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t type metadata accessor for InteractionResultDetailCell()
{
  return objc_opt_self();
}

id InteractionResultDetailCell.__deallocating_deinit()
{
  return sub_1BC19F48C((SEL *)&selRef_dealloc);
}

id sub_1BC19F48C(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InteractionResultDetailCell();
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t sub_1BC19F534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for InteractionResultDetailCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionResultDetailCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionResultDetailCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InteractionResultDetailCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void sub_1BC19F5EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF3FCE80)
  {
    v2 = type metadata accessor for InteractionResultDetailCell();
    v3 = sub_1BC0E7AD8(255, &qword_1EF3FCE88);
    v4 = sub_1BC19F670();
    v5 = type metadata accessor for InteractionResultItem(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF3FCE80);
  }
}

unint64_t sub_1BC19F670()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FCE90;
  if (!qword_1EF3FCE90)
  {
    v1 = type metadata accessor for InteractionResultDetailCell();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionResultDetailCell, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FCE90);
  }
  return result;
}

Swift::Void __swiftcall OntologyInfoInternalViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1BC19F744();
}

void sub_1BC19F744()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v1 = v0;
  v2 = (void *)sub_1BC2B4430();
  objc_msgSend(v1, sel_setTitle_, v2);

  v3 = objc_msgSend(v1, sel_tableView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  objc_msgSend(v3, sel_setAllowsSelection_, 0);

  v5 = objc_msgSend(v1, sel_tableView);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = v5;
  sub_1BC2B2840();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1BC2B2834();
  v8 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v8);

  v9 = objc_msgSend(v1, sel_tableView);
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = v9;
  sub_1BC2B2804();
  v11 = swift_getObjCClassFromMetadata();
  sub_1BC2B27EC();
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_registerClass_forCellReuseIdentifier_, v11, v12);

  v13 = objc_msgSend(v1, sel_tableView);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_reloadData);

    return;
  }
LABEL_9:
  __break(1u);
}

Swift::Int __swiftcall OntologyInfoInternalViewController.numberOfSections(in:)(UITableView *in)
{
  return 1;
}

Swift::Int __swiftcall OntologyInfoInternalViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  Swift::Int result;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)(v2
                             + OBJC_IVAR____TtC19HealthMedicationsUI34OntologyInfoInternalViewController_conceptsDataSource)
                 + 88);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v4 + 2;
    if (!__OFADD__(v4, 2))
      return result;
LABEL_6:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  result = v6 + 2;
  if (__OFADD__(v6, 2))
    goto LABEL_6;
  return result;
}

uint64_t OntologyInfoInternalViewController.tableView(_:cellForRowAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  __int128 v33[2];
  uint64_t v34;
  void *v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  sub_1BC2B2804();
  sub_1BC2B27EC();
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B25C4();
  v8 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v6, v7);

  v9 = swift_dynamicCastClassUnconditional();
  if (!sub_1BC2B25E8() || sub_1BC2B25E8() == 1)
  {
    v10 = (void *)sub_1BC2B27E0();
    v11 = (void *)sub_1BC2B4430();
    objc_msgSend(v10, sel_setText_, v11);

    v12 = (void *)sub_1BC2B27F8();
    swift_bridgeObjectRetain();
    v13 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setText_, v13);

    goto LABEL_4;
  }
  v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI34OntologyInfoInternalViewController_conceptsDataSource);
  swift_retain();
  v16 = a2;
  v17 = sub_1BC2B25E8();
  v18 = v17 - 2;
  if (__OFSUB__(v17, 2))
  {
    __break(1u);
    goto LABEL_15;
  }
  v16 = *(_QWORD *)(v15 + 88);
  swift_bridgeObjectRetain();
  result = swift_release();
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v19 = (id)MEMORY[0x1BCCEE950](v18, v16);
    goto LABEL_11;
  }
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v18 < *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v16 + 8 * v18 + 32);
LABEL_11:
    v20 = v19;
    swift_bridgeObjectRelease();
    v35 = v20;
    sub_1BC0E9404();
    sub_1BC19FE94();
    v13 = v20;
    if (swift_dynamicCast())
    {
      sub_1BC0F2730(v33, (uint64_t)v36);
      v21 = (void *)sub_1BC2B27E0();
      v22 = v37;
      v23 = v38;
      __swift_project_boxed_opaque_existential_0(v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      v24 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_setText_, v24);

      v25 = (void *)sub_1BC2B27F8();
      v26 = v37;
      v27 = v38;
      __swift_project_boxed_opaque_existential_0(v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
      v28 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setText_, v28);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      return v9;
    }
    v34 = 0;
    memset(v33, 0, sizeof(v33));
    sub_1BC19FEE8((uint64_t)v33);
    v29 = (void *)sub_1BC2B27E0();
    v30 = (void *)sub_1BC2B4430();
    objc_msgSend(v29, sel_setText_, v30);

    v31 = (void *)sub_1BC2B27F8();
    v32 = (void *)sub_1BC2B4430();
    objc_msgSend(v31, sel_setText_, v32);

LABEL_4:
    return v9;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC19FE94()
{
  unint64_t result;

  result = qword_1EF3FCEA0;
  if (!qword_1EF3FCEA0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FCEA0);
  }
  return result;
}

uint64_t sub_1BC19FEE8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC19FF24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC19FF24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCEA8)
  {
    sub_1BC19FE94();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCEA8);
  }
}

id OntologyInfoInternalViewController.__allocating_init(usingInsetStyling:)(char a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithUsingInsetStyling_, a1 & 1);
}

void OntologyInfoInternalViewController.init(usingInsetStyling:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OntologyInfoInternalViewController.__allocating_init(style:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithStyle_, a1);
}

void OntologyInfoInternalViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OntologyInfoInternalViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void OntologyInfoInternalViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OntologyInfoInternalViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OntologyInfoInternalViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for OntologyInfoInternalViewController()
{
  return swift_lookUpClassMethod();
}

id _sSo6UIViewC19HealthMedicationsUIE16alignConstraints2toyAB_tF_0(void *a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;

  v2 = v1;
  v4 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC2BA730;
  v6 = objc_msgSend(v2, sel_leadingAnchor);
  v7 = objc_msgSend(a1, sel_leadingAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, sel_topAnchor);
  v10 = objc_msgSend(a1, sel_topAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(a1, sel_trailingAnchor);
  v13 = objc_msgSend(v2, sel_trailingAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(a1, sel_bottomAnchor);
  v16 = objc_msgSend(v2, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v5 + 56) = v17;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v18 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v18);

  return objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
}

uint64_t HKDrugInteractionLifestyleFactor.localizedString.getter(uint64_t a1)
{
  char v2;

  v2 = 0;
  return HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v2, a1);
}

id HKDrugInteractionLifestyleFactor.image.getter(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  id v4;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      type metadata accessor for DrugInteractionVisualizationView();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v3 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      v4 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v3, v2);

      if (!v4)
      {
        __break(1u);
LABEL_5:
        sub_1BC2B51BC();
        swift_bridgeObjectRelease();
        sub_1BC2B539C();
        sub_1BC2B44FC();
        swift_bridgeObjectRelease();
        sub_1BC2B52B8();
        __break(1u);
        JUMPOUT(0x1BC1A06BCLL);
      }

      return v4;
    default:
      goto LABEL_5;
  }
}

BOOL static HKDrugInteractionLifestyleFactor.Variant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HKDrugInteractionLifestyleFactor.Variant.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t HKDrugInteractionLifestyleFactor.Variant.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t HKDrugInteractionLifestyleFactor.localizedString(variant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t result;

  v2 = a2;
  switch(a2)
  {
    case 0:
      goto LABEL_5;
    case 1:
    case 2:
    case 3:
      sub_1BC2B51BC();
      swift_bridgeObjectRelease();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      sub_1BC2B44FC();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v3 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v2 = sub_1BC2B2144();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_5:
      result = v2;
      break;
    default:
      result = sub_1BC2B52B8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t sub_1BC1A0980()
{
  unint64_t result;

  result = qword_1EF3FCED8;
  if (!qword_1EF3FCED8)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for HKDrugInteractionLifestyleFactor.Variant, &type metadata for HKDrugInteractionLifestyleFactor.Variant);
    atomic_store(result, (unint64_t *)&qword_1EF3FCED8);
  }
  return result;
}

uint64_t _s7VariantOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC1A0A10 + 4 * byte_1BC2BF0C9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC1A0A44 + 4 * byte_1BC2BF0C4[v4]))();
}

uint64_t sub_1BC1A0A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1A0A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC1A0A54);
  return result;
}

uint64_t sub_1BC1A0A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC1A0A68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC1A0A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1A0A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HKDrugInteractionLifestyleFactor.Variant()
{
  return &type metadata for HKDrugInteractionLifestyleFactor.Variant;
}

uint64_t sub_1BC1A0A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = qword_1EF3FCEE0;
  if (*(_QWORD *)(v0 + qword_1EF3FCEE0))
  {
    v2 = *(_QWORD *)(v0 + qword_1EF3FCEE0);
  }
  else
  {
    v3 = v0;
    sub_1BC2B3278();
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v2 = sub_1BC2B314C();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

_QWORD *sub_1BC1A0B68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = qword_1EF3FCEE8;
  if (*(_QWORD *)(v0 + qword_1EF3FCEE8))
  {
    v2 = *(_QWORD **)(v0 + qword_1EF3FCEE8);
  }
  else
  {
    v3 = v0;
    v4 = *(id *)(v0 + qword_1EF3FCF08);
    v5 = sub_1BC1A0A98();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    v2 = sub_1BC0F5A80(v4, v5);

    swift_release();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t MedicationInformationDataSource.__allocating_init(displayContext:listManager:healthStore:analyticsManager:)(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_allocObject();
  return MedicationInformationDataSource.init(displayContext:listManager:healthStore:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t MedicationInformationDataSource.init(displayContext:listManager:healthStore:analyticsManager:)(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;

  v6 = *a1;
  *(_QWORD *)(v4 + qword_1EF3FCEE0) = 0;
  *(_QWORD *)(v4 + qword_1EF3FCEE8) = 0;
  *(_QWORD *)(v4 + qword_1EF3FCEF0) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + qword_1EF3FCEF8) = v6;
  *(_QWORD *)(v4 + qword_1EF3FCF00) = a2;
  *(_QWORD *)(v4 + qword_1EF3FCF08) = a3;
  *(_QWORD *)(v4 + qword_1EF3FCF10) = a4;
  v7 = v6;
  swift_retain();
  v8 = a3;
  swift_retain();
  v9 = sub_1BC2B2750();
  if (v6)
  {
    v10 = v7;
    swift_retain();
    v11 = objc_msgSend(v10, sel_firstOntologyCoding);
    if (!v11)
    {

      swift_release();
      goto LABEL_7;
    }
    v12 = v11;

  }
  else
  {
    swift_retain();
  }
  sub_1BC1A13D8();

  swift_release();
LABEL_7:
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_1BC1A0DD0()
{
  return sub_1BC1A4BA8();
}

uint64_t sub_1BC1A0DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v9 = MEMORY[0x1E0C960D8];
  sub_1BC1A567C(0, &qword_1EF3FD020, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC2B3F38();
  sub_1BC1A5718(&qword_1EF3FD028, &qword_1EF3FD020, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v9, MEMORY[0x1E0C96108]);
  v10 = sub_1BC2B3FBC();
  result = swift_release();
  *a4 = v10;
  return result;
}

void sub_1BC1A0EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  sub_1BC1A0B68();
  v8 = sub_1BC0F5544();
  swift_release();
  v9 = swift_bridgeObjectRetain();
  sub_1BC1CCF24(v9);
  swift_bridgeObjectRelease();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FDA8, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, MEMORY[0x1E0DEFCF8]);
  v10 = (void *)sub_1BC2B47A8();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FDF0, &qword_1EDA0FDE8, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
    a5 = (void *)sub_1BC2B47A8();
  }
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a1;
  v12[4] = a2;
  v14[4] = sub_1BC1A57D8;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC1C8570;
  v14[3] = &block_descriptor_11;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_interactionResultsForMedications_lifestyleFactors_completion_, v10, a5, v13);
  _Block_release(v13);

}

void sub_1BC1A10F0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unint64_t *))
{
  uint64_t Strong;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  char v28;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    if (a2)
    {
      v26 = a2;
      v9 = a2;
      sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
      sub_1BC0E1D38(0, &qword_1EF3FD030);
      if (swift_dynamicCast())
      {
        if (objc_msgSend(v25, sel_code) == (id)1003)
        {
          v10 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
          if (v10)
          {
            v11 = v10;
            v12 = objc_msgSend(v10, sel_isAppleInternalInstall);

            if (v12)
            {

              v13 = 1;
LABEL_17:
              v27 = v13;
              v28 = 0;
              a4(&v27);
              swift_release();
              sub_1BC1427BC(v13);
              return;
            }
            v27 = (unint64_t)v25;
            v28 = 1;
            v23 = v25;
            a4(&v27);

            swift_release();
            v22 = v26;
            goto LABEL_20;
          }
LABEL_26:
          __break(1u);
          return;
        }

      }
      v27 = (unint64_t)a2;
      v28 = 1;
      v20 = a2;
      v21 = a2;
      a4(&v27);
      swift_release();

      v22 = a2;
LABEL_20:

      return;
    }
    sub_1BC1A0A98();
    v14 = sub_1BC2B3170();
    swift_release();
    if ((v14 & 1) != 0)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
      if (!v15)
      {
        __break(1u);
        goto LABEL_26;
      }
      v16 = v15;
      v17 = objc_msgSend(v15, sel_isAppleInternalInstall);

      if (!a1)
        goto LABEL_11;
    }
    else
    {
      v17 = 0;
      if (!a1)
      {
LABEL_11:
        v13 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    v18 = *(void **)(v8 + qword_1EF3FCEF8);
    v19 = v18;
    v13 = Set<>.severities(filtering:includeMinorInteractions:)(v18, v17);

LABEL_14:
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v24)
        goto LABEL_17;
    }
    else if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    v13 = 0;
    goto LABEL_17;
  }
}

uint64_t sub_1BC1A13D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v71 = (char *)&v49 - v2;
  v3 = sub_1BC2B49F4();
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E2130(0, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
  v51 = v5;
  v53 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - v6;
  sub_1BC1A4F80();
  v49 = v8;
  v52 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1A5034();
  v12 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  v57 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F173C(0, &qword_1EF3FCF88, v15, sub_1BC1A51AC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BA0]);
  v61 = v16;
  v64 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v54 = (char *)&v49 - v17;
  sub_1BC1A51C8();
  v19 = *(_QWORD *)(v18 - 8);
  v65 = v18;
  v66 = v19;
  MEMORY[0x1E0C80A78](v18);
  v58 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1A5414();
  v22 = *(_QWORD *)(v21 - 8);
  v67 = v21;
  v68 = v22;
  MEMORY[0x1E0C80A78](v21);
  v59 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F173C(0, &qword_1EF3FCFE0, v24, sub_1BC1A548C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
  v26 = *(_QWORD *)(v25 - 8);
  v69 = v25;
  v70 = v26;
  MEMORY[0x1E0C80A78](v25);
  v60 = (char *)&v49 - v27;
  v72 = sub_1BC2B3950();
  v28 = MEMORY[0x1E0D2EFE8];
  sub_1BC101888(0, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
  sub_1BC10173C();
  sub_1BC1A53D4((unint64_t *)&qword_1EDA0FB58, (uint64_t)&qword_1EDA0FB60, (uint64_t)v28, (uint64_t (*)(uint64_t))sub_1BC101888);
  sub_1BC2B3FC8();
  swift_release();
  v29 = sub_1BC1A0B68()[5];
  swift_retain();
  swift_release();
  v73 = v29;
  v50 = v0;
  sub_1BC1A0B68();
  sub_1BC0F55B4();
  swift_release();
  swift_beginAccess();
  sub_1BC0E2130(0, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  swift_release();
  sub_1BC101888(0, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
  sub_1BC0E519C(&qword_1EDA0FB08, (uint64_t (*)(uint64_t))sub_1BC1A4F80, MEMORY[0x1E0C95708]);
  sub_1BC1A53D4(&qword_1EF3FCF80, (uint64_t)&qword_1EF3FCF78, (uint64_t)sub_1BC0F6468, (uint64_t (*)(uint64_t))sub_1BC101888);
  sub_1BC1A514C();
  v30 = v49;
  v31 = v51;
  sub_1BC2B3FE0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v31);
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v30);
  v32 = v55;
  sub_1BC2B49DC();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v72 = sub_1BC2B4A0C();
  v33 = sub_1BC2B49C4();
  v53 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 56);
  v34 = (uint64_t)v71;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v53)(v71, 1, 1, v33);
  sub_1BC1A51AC();
  v52 = sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v35 = v54;
  v36 = v56;
  sub_1BC2B4070();
  sub_1BC101BB8(v34);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v32, v63);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v36);
  v37 = swift_allocObject();
  swift_weakInit();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_1BC1A54A8;
  *(_QWORD *)(v38 + 24) = v37;
  sub_1BC2B3E6C();
  v39 = MEMORY[0x1E0C95D78];
  sub_1BC1A567C(0, &qword_1EF3FCFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC1A536C();
  sub_1BC1A53D4(&qword_1EF3FCFC0, (uint64_t)&qword_1EF3FCFA0, (uint64_t)v39, (uint64_t (*)(uint64_t))sub_1BC1A567C);
  v40 = v58;
  v41 = v61;
  sub_1BC2B40C4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v35, v41);
  v72 = 2;
  sub_1BC0E519C(&qword_1EF3FCFD8, (uint64_t (*)(uint64_t))sub_1BC1A51C8, MEMORY[0x1E0C95B78]);
  v42 = v59;
  v43 = v65;
  sub_1BC2B3FD4();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v43);
  v72 = sub_1BC2B4A0C();
  v44 = (uint64_t)v71;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v53)(v71, 1, 1, v33);
  sub_1BC1A548C();
  v45 = v60;
  v46 = v67;
  sub_1BC2B4064();
  sub_1BC101BB8(v44);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v46);
  swift_allocObject();
  swift_weakInit();
  sub_1BC1A5510();
  v47 = v69;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v45, v47);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC1A1C30(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a2;
  sub_1BC1A5578();
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1A5610();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1A567C(0, &qword_1EF3FD008, MEMORY[0x1E0C964B8]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  if ((a3 & 1) == 0)
    goto LABEL_17;
  if (!(a1 >> 62))
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_4;
LABEL_17:
    v36 = 2;
    sub_1BC0E2130(0, &qword_1EF3FCFA8, (uint64_t)&type metadata for InteractionSummaryItemState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v18 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_17;
LABEL_4:
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
  {
    v35 = 2;
    sub_1BC0E2130(0, &qword_1EF3FCFA8, (uint64_t)&type metadata for InteractionSummaryItemState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
LABEL_18:
    sub_1BC2B3F14();
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC2B3EFC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1BC1A5718(&qword_1EF3FD010, &qword_1EF3FD008, MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v30 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v30;
  }
  v35 = MEMORY[0x1E0DEE9D8];
  if (v18 >= 1)
  {
    v20 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v18; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v22 = (id)MEMORY[0x1BCCEE950](i, a1);
      else
        v22 = *(id *)(a1 + 8 * i + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, sel_firstOntologyCoding);

      if (v24)
      {
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v25 = v35;
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v20;
    v26[3] = v25;
    v26[4] = v32;
    v27 = MEMORY[0x1E0C95D78];
    sub_1BC1A567C(0, &qword_1EF3FCFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1A53D4(&qword_1EF3FCFC0, (uint64_t)&qword_1EF3FCFA0, (uint64_t)v27, (uint64_t (*)(uint64_t))sub_1BC1A567C);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BC2B3F44();
    sub_1BC0E519C(&qword_1EF3FD018, (uint64_t (*)(uint64_t))sub_1BC1A5578, MEMORY[0x1E0C96148]);
    v28 = v34;
    v29 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v28);
    swift_release();
    v35 = v29;
    v30 = sub_1BC2B3FBC();
    swift_release();
    swift_release();
    return v30;
  }
  __break(1u);
  return result;
}

void sub_1BC1A2068(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39[5];
  uint64_t v40[5];

  v2 = sub_1BC2B2438();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B2BC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B2D98();
  v37 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v14 = Strong;
  v34 = v6;
  v35 = v10;
  v15 = qword_1EF3FCEF8;
  v16 = *(void **)(Strong + qword_1EF3FCEF8);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v17, sel_firstOntologyCoding);
    if (!v18)
    {
      swift_release();

      return;
    }
    v19 = v18;

  }
  v20 = sub_1BC2B3938();
  v21 = sub_1BC11C7E0(v20);
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_15:
    swift_retain();
    sub_1BC2B2744();
    swift_release();
    sub_1BC2B2A08();
    swift_release();
    sub_1BC2B2C18();
    swift_release();
    swift_release();
    return;
  }
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v33 >= 1)
      goto LABEL_8;
    goto LABEL_14;
  }
  if (*(uint64_t *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_8:
  v22 = *(void **)(v14 + v15);
  if (v22)
  {
    v23 = v22;
    swift_bridgeObjectRelease();
    sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BC2B7770;
    *(_QWORD *)(v24 + 32) = v23;
    v40[0] = v24;
    sub_1BC2B45A4();
    v21 = v40[0];
    v25 = *(void **)(v14 + v15);
  }
  else
  {
    v25 = 0;
  }
  v40[0] = v36;
  v26 = v25;
  sub_1BC1A2554(v40, v25, (uint64_t)v12);

  LOBYTE(v39[0]) = 1;
  sub_1BC1A33B4((unsigned __int8 *)v39, v21, v40);
  v38 = 2;
  sub_1BC1A33B4(&v38, v21, v39);
  swift_bridgeObjectRelease();
  sub_1BC127B70(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC2B9600;
  v28 = v35;
  *(_QWORD *)(v27 + 56) = v35;
  *(_QWORD *)(v27 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v27 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(boxed_opaque_existential_1, v12, v28);
  sub_1BC0E79F0((uint64_t)v40, v27 + 72);
  sub_1BC0E79F0((uint64_t)v39, v27 + 112);
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC2B2BAC();
  swift_retain();
  sub_1BC2B2744();
  swift_release();
  sub_1BC2B2A08();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v30 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BC2B92D0;
  v32 = v34;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 16))(v31 + v30, v9, v34);
  sub_1BC2B2C18();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v35);
}

uint64_t sub_1BC1A2554@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  void (*v30)(uint64_t *, _QWORD);
  void (*v31)(uint64_t *, _QWORD);
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  char *v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  void (*v66)(char *);
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93[5];

  v87 = a3;
  v83 = *v3;
  v84 = a2;
  v5 = sub_1BC2B2FA8();
  v85 = *(_QWORD *)(v5 - 8);
  v86 = v5;
  MEMORY[0x1E0C80A78](v5);
  v79 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v88 = (char *)&v64 - v9;
  v10 = sub_1BC2B2C6C();
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  MEMORY[0x1E0C80A78](v10);
  v92 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1BC2B3A94();
  v78 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v77 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v7);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v64 - v14;
  v70 = (void (*)(char *, uint64_t))sub_1BC2B3A10();
  v69 = *((_QWORD *)v70 - 1);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1BC2B3A34();
  v17 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v75 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1BC2B3AD0();
  v74 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v71 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC2B3CD4();
  v90 = *(_QWORD *)(v20 - 8);
  v91 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  sub_1BC2B3B60();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v24 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v25 = sub_1BC2B2144();
  v89 = v26;
  swift_bridgeObjectRelease();

  if (v23 == 2)
  {
    v67 = v22;
    v27 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    v28 = 2;
    v22 = v67;
    swift_bridgeObjectRelease();

  }
  else
  {
    v93[0] = v23;
    sub_1BC1A2FC4();
    v28 = v23;
  }
  swift_bridgeObjectRetain();
  sub_1BC2B3C98();
  sub_1BC2B3B6C();
  v29 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v30 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BB4();
  v30(v93, 0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  sub_1BC2B4C64();
  v31 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BA8();
  v31(v93, 0);
  sub_1BC2B3C74();
  sub_1BC2B4AF0();
  sub_1BC2B3C50();
  v32 = v88;
  v80 = v25;
  if (v28 < 3 || (uint64_t)Array<A>.count.getter(v28) < 1)
  {
    sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
    v49 = v75;
    v50 = v76;
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v75, *MEMORY[0x1E0DC1C20], v76);
    v51 = sub_1BC2B3A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v15, 1, 1, v51);
    v52 = v77;
    sub_1BC2B3A88();
    sub_1BC2B3A64();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v73);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v49, v50);
    v48 = v32;
  }
  else
  {
    sub_1BC127B70(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BC2B92D0;
    v34 = Array<A>.count.getter(v28);
    v35 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v33 + 64) = v35;
    *(_QWORD *)(v33 + 32) = v34;
    sub_1BC2B443C();
    swift_bridgeObjectRelease();
    LODWORD(v67) = *MEMORY[0x1E0DC1C20];
    v66 = *(void (**)(char *))(v17 + 104);
    v36 = v15;
    v64 = v15;
    v37 = v75;
    v38 = v76;
    v66(v75);
    v39 = sub_1BC2B3A40();
    v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
    v65(v36, 1, 1, v39);
    v40 = v68;
    sub_1BC2B3A04();
    v41 = v71;
    sub_1BC2B3AA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD *))(v69 + 8))(v40, v70);
    v70 = *(void (**)(char *, uint64_t))(v17 + 8);
    v70(v37, v38);
    sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v42 = v74;
    v43 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1BC2B92C0;
    v45 = v72;
    (*(void (**)(unint64_t, char *, uint64_t))(v42 + 16))(v44 + v43, v41, v72);
    ((void (*)(char *, _QWORD, uint64_t))v66)(v37, v67, v38);
    v65(v64, 1, 1, v39);
    v46 = v77;
    sub_1BC2B3A88();
    sub_1BC2B3A64();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v46, v73);
    v47 = v37;
    v48 = v88;
    v70(v47, v38);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v45);
  }
  v53 = v91;
  v93[3] = v91;
  v93[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v93);
  (*(void (**)(uint64_t *, char *, uint64_t))(v90 + 16))(boxed_opaque_existential_1, v22, v53);
  v55 = swift_allocObject();
  swift_weakInit();
  v56 = (_QWORD *)swift_allocObject();
  v57 = v83;
  v58 = v84;
  v56[2] = v55;
  v56[3] = v58;
  v56[4] = v57;
  *v92 = 1;
  (*(void (**)(void))(v81 + 104))();
  v59 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v48, 1, 1, v59);
  v60 = v58;
  swift_retain();
  v61 = (void *)sub_1BC2B4580();
  v62 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v62)
  {
    sub_1BC2B4460();

  }
  (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v79, *MEMORY[0x1E0D2B8C8], v86);
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v22, v91);
  return swift_release();
}

id sub_1BC1A2FC4()
{
  unint64_t *v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  id result;
  void *v5;
  unsigned int v6;

  v1 = *v0;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v2 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v3 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  if (!v1)
    return (id)v3;
  if (v1 != 1)
  {
    swift_bridgeObjectRelease();
    return Array<A>.interactionSummaryTitle()(v1);
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior, 0xE000000000000000);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v6)
    {
      swift_bridgeObjectRelease();
      return (id)0xD00000000000001DLL;
    }
    return (id)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1A312C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  uint64_t v26;

  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = Strong;
    v11 = *(_QWORD *)(Strong + qword_1EF3FCF00);
    v12 = *(void **)(Strong + qword_1EF3FCF08);
    v13 = *(_QWORD *)(Strong + qword_1EF3FCF10);
    v14 = objc_allocWithZone((Class)type metadata accessor for InteractionSummaryOverviewViewController());
    v15 = a3;
    swift_retain();
    v16 = v12;
    swift_retain();
    v17 = InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(a3, v11, v16, v13, 2);
    objc_msgSend(v17, sel_setModalPresentationStyle_, 2);
    objc_msgSend(a1, sel_showAdaptively_sender_, v17, v10);
    swift_retain();
    sub_1BC2B37E8();
    swift_release();

    return swift_release();
  }
  else
  {
    sub_1BC2B39A4();
    v19 = sub_1BC2B39D4();
    v20 = sub_1BC2B48C8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = sub_1BC2B54F8();
      v25[1] = sub_1BC12540C(v23, v24, &v26);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v19, v20, "[%s] Unable to launch InteractionSummaryOverviewViewController as self was deallocated.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v22, -1, -1);
      MEMORY[0x1BCCEF3A0](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1BC1A33B4@<X0>(unsigned __int8 *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void (*v36)(uint64_t *, _QWORD);
  void (*v37)(uint64_t *, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *);
  uint64_t v43;
  void (*v44)(void *);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  uint64_t *v72;
  _QWORD v74[3];
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  unsigned int v85;
  char *v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t *v99;
  char *v100;
  char *v101;
  void (*v102)(void *);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  int v107;
  char v108;
  uint64_t v109[5];

  v99 = a3;
  v91 = *v3;
  v6 = sub_1BC2B2FA8();
  v95 = *(_QWORD *)(v6 - 8);
  v96 = v6;
  MEMORY[0x1E0C80A78](v6);
  v98 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v97 = (char *)v74 - v10;
  v11 = sub_1BC2B2C6C();
  v93 = *(_QWORD *)(v11 - 8);
  v94 = v11;
  MEMORY[0x1E0C80A78](v11);
  v106 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1BC2B3A10();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v81 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1BC2B3AD0();
  v14 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v86 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v8);
  MEMORY[0x1E0C80A78](v16);
  v102 = (void (*)(void *))((char *)v74 - v17);
  v18 = sub_1BC2B3A94();
  v103 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v101 = (char *)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC2B3A34();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BC2B3CD4();
  v104 = *(_QWORD *)(v24 - 8);
  v105 = v24;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = *a1;
  LOBYTE(v109[0]) = v107;
  v27 = Array<A>.cellContent(for:)((unsigned __int8 *)v109, a2);
  v74[1] = v28;
  v30 = v29;
  sub_1BC127B70(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
  v31 = swift_allocObject();
  v32 = MEMORY[0x1E0DEB418];
  v88 = xmmword_1BC2B92D0;
  *(_OWORD *)(v31 + 16) = xmmword_1BC2B92D0;
  v33 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v31 + 56) = v32;
  *(_QWORD *)(v31 + 64) = v33;
  v87 = v27;
  *(_QWORD *)(v31 + 32) = v27;
  v80 = sub_1BC2B443C();
  v89 = v34;
  swift_bridgeObjectRelease();
  v90 = v30;
  if (v30)
    sub_1BC2B3B60();
  else
    sub_1BC2B3CC8();
  LOBYTE(v109[0]) = v107;
  MedicationSecondaryEducationType.text.getter();
  sub_1BC2B3C98();
  v35 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v36 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BB4();
  v36(v109, 0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  sub_1BC2B4C64();
  v37 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BA8();
  v37(v109, 0);
  sub_1BC2B3C74();
  sub_1BC2B4AF0();
  v100 = v26;
  sub_1BC2B3C50();
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v38 = *(_QWORD *)(v14 + 72);
  v78 = v14;
  v39 = *(unsigned __int8 *)(v14 + 80);
  v40 = (v39 + 32) & ~v39;
  v77 = v38;
  v76 = v41;
  v74[2] = v39 | 7;
  *(_OWORD *)(swift_allocObject() + 16) = v88;
  v42 = *(void (**)(char *))(v21 + 104);
  v85 = *MEMORY[0x1E0DC1C20];
  *(_QWORD *)&v88 = v42;
  v42(v23);
  v43 = sub_1BC2B3A40();
  v44 = v102;
  v84 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v84(v102, 1, 1, v43);
  v45 = v20;
  v46 = v101;
  sub_1BC2B3A88();
  sub_1BC2B3A64();
  v47 = v46;
  v48 = v45;
  v75 = *(void (**)(char *, uint64_t))(v103 + 8);
  v75(v47, v18);
  v49 = *(void (**)(char *, uint64_t))(v21 + 8);
  v49(v23, v45);
  v50 = swift_allocObject();
  v51 = v92;
  swift_weakInit();
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v50;
  *(_BYTE *)(v52 + 24) = v107;
  v103 = v52;
  *(_QWORD *)(v52 + 32) = v91;
  if (!*(_QWORD *)(v51 + qword_1EF3FCEF8) || v87 > 0)
  {
    v92 = v18;
    ((void (*)(char *, _QWORD, uint64_t))v88)(v23, v85, v48);
    v84(v44, 1, 1, v43);
    v56 = v81;
    sub_1BC2B3A04();
    v57 = v86;
    sub_1BC2B3AA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v56, v83);
    v49(v23, v48);
    if (v90)
    {
      swift_bridgeObjectRelease();
      sub_1BC2B3B6C();
    }
    else
    {
      v54 = v100;
      if (v87 < 1)
      {
        v58 = v79;
        v60 = v78;
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    v58 = v79;
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1BC2B92C0;
    v60 = v78;
    v57 = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v59 + v40, v86, v58);
    ((void (*)(char *, _QWORD, uint64_t))v88)(v23, v85, v48);
    v84(v102, 1, 1, v43);
    v61 = v101;
    sub_1BC2B3A88();
    sub_1BC2B3A64();
    v75(v61, v92);
    v49(v23, v48);
    v54 = v100;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v58);
    v102 = sub_1BC1A4F38;
    v55 = v97;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EF3F8148 != -1)
    swift_once();
  v53 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v54 = v100;
  sub_1BC2B3B6C();
  swift_release();
  v102 = 0;
  v103 = 0;
  v55 = v97;
LABEL_15:
  v62 = v107;
  LOBYTE(v109[0]) = v107;
  MedicationSecondaryEducationType.text.getter();
  v63 = v105;
  v109[3] = v105;
  v109[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v109);
  (*(void (**)(uint64_t *, char *, uint64_t))(v104 + 16))(boxed_opaque_existential_1, v54, v63);
  *v106 = 1;
  (*(void (**)(void))(v93 + 104))();
  v65 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v55, 1, 1, v65);
  sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91D8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1BC2B9600;
  *(_QWORD *)(v66 + 32) = 0xD000000000000015;
  *(_QWORD *)(v66 + 40) = 0x80000001BC2C6E70;
  v108 = v62;
  *(_QWORD *)(v66 + 48) = MedicationSecondaryEducationType.text.getter();
  *(_QWORD *)(v66 + 56) = v67;
  *(_QWORD *)(v66 + 64) = 1819043139;
  *(_QWORD *)(v66 + 72) = 0xE400000000000000;
  v68 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v69 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v69)
  {
    sub_1BC2B4460();

  }
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v98, *MEMORY[0x1E0D2B8C8], v96);
  v70 = sub_1BC2B2D98();
  v71 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
  v72 = v99;
  v99[3] = v70;
  v72[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v71, MEMORY[0x1E0D2B340]);
  __swift_allocate_boxed_opaque_existential_1(v72);
  sub_1BC2B2D8C();
  return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v54, v105);
}

void sub_1BC1A3ED8(void *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  void *v11;
  uint64_t inited;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  _QWORD v39[2];
  id v40;
  uint64_t v41;
  uint64_t v42;

  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = Strong;
    v11 = *(void **)(Strong + qword_1EF3FCEF8);
    if (v11)
    {
      v40 = a1;
      type metadata accessor for MedicationInformationOverviewItem();
      inited = swift_initStackObject();
      type metadata accessor for MedicationInformationOverviewCell();
      sub_1BC0E519C(&qword_1EF3FB060, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationOverviewCell, (uint64_t)&protocol conformance descriptor for MedicationInformationOverviewCell);
      v13 = v11;
      *(_QWORD *)(inited + 32) = sub_1BC2B2930();
      *(_QWORD *)(inited + 40) = v14;
      v39[1] = v14;
      *(_QWORD *)(inited + 16) = v13;
      *(_BYTE *)(inited + 24) = a3;
      if ((a3 - 1) > 1u)
      {
        sub_1BC2B52B8();
        __break(1u);
      }
      else
      {
        v15 = v13;
        v16 = sub_1BC1CE830();
        v18 = v17;
        v19 = sub_1BC1CE920();
        v21 = v20;
        v22 = objc_allocWithZone((Class)type metadata accessor for MedicationSecondaryEducationViewController());
        v22[qword_1EF3FB740] = a3;
        type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
        swift_allocObject();
        type metadata accessor for MedicationSecondaryEducationDataSource(0);
        v23 = swift_allocObject();
        v24 = v22;
        v25 = sub_1BC251A3C(a3, v15, v16, v18, (uint64_t)v19, v21, v23);
        sub_1BC127B70(0, (unint64_t *)&qword_1EF400100, (unint64_t *)&qword_1EF3F8998);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BC2B92D0;
        v27 = sub_1BC0E519C((unint64_t *)&qword_1EF3FB798, type metadata accessor for MedicationSecondaryEducationDataSource, MEMORY[0x1E0D2F070]);
        *(_QWORD *)(v26 + 32) = v25;
        *(_QWORD *)(v26 + 40) = v27;
        sub_1BC2B2E04();

        swift_retain();
        v28 = (void *)sub_1BC2B2FE4();
        objc_msgSend(v28, sel_setModalPresentationStyle_, 2);

        swift_release();
        v29 = v28;
        objc_msgSend(v40, sel_showAdaptively_sender_, v29, v10);
        swift_bridgeObjectRelease();

        swift_release();
      }
    }
    else
    {
      LOBYTE(v42) = a3;
      objc_allocWithZone((Class)type metadata accessor for PregnancyLactationEducationViewController());
      v36 = swift_retain();
      v37 = PregnancyLactationEducationViewController.init(listManager:educationType:)(v36, (unsigned __int8 *)&v42);
      objc_msgSend(v37, sel_setModalPresentationStyle_, 2);
      v38 = v37;
      objc_msgSend(a1, sel_showAdaptively_sender_, v38, v10);

      swift_release();
    }
  }
  else
  {
    sub_1BC2B39A4();
    v30 = sub_1BC2B39D4();
    v31 = sub_1BC2B48C8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v42 = v33;
      *(_DWORD *)v32 = 136315138;
      v34 = sub_1BC2B54F8();
      v41 = sub_1BC12540C(v34, v35, &v42);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v30, v31, "[%s] Unable to launch PregnancyLactationEducationViewController as self was deallocated.", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v33, -1, -1);
      MEMORY[0x1BCCEF3A0](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void MedicationInformationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationInformationDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1A43BC()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationInformationDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationInformationDataSource.__deallocating_deinit()
{
  MedicationInformationDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1A44E8()
{
  return sub_1BC1A4BA8();
}

uint64_t sub_1BC1A450C()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationInformationDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall MedicationInformationDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B3038();
  sub_1BC2B497C();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
}

uint64_t sub_1BC1A45BC()
{
  sub_1BC2B3038();
  sub_1BC2B497C();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  return sub_1BC2B4988();
}

uint64_t MedicationInformationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t result;
  id v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  _QWORD v33[2];

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v10);
  if (sub_1BC2B4460() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v13 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_13:
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v20 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B3C68();
    v21 = sub_1BC2B28F4();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v23 = sub_1BC2B28E8();
    a3[3] = v21;
    result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v22, MEMORY[0x1E0D2A8A0]);
    a3[4] = result;
    *a3 = v23;
    return result;
  }
  if (sub_1BC2B4460() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v17 = sub_1BC2B296C();
      v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v17;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v18, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v24 = (void *)qword_1EDA0FEF8;
  sub_1BC127B70(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC2B92D0;
  v26 = v24;
  swift_bridgeObjectRetain();
  v27 = sub_1BC2B3938();
  v28 = sub_1BC11C7E0(v27);
  swift_bridgeObjectRelease();
  if (v28)
  {
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      v29 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
  }
  v30 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v25 + 64) = v30;
  *(_QWORD *)(v25 + 32) = v29;
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33[0] = 0x74497265746F6F46;
  v33[1] = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v31 = sub_1BC2B2EDC();
  v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v31;
  a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v32, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC2B2ED0();
}

uint64_t sub_1BC1A4B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return MedicationInformationDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

BOOL _s19HealthMedicationsUI31MedicationInformationDataSourceC14DisplayContextO2eeoiySbAE_AEtFZ_0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
      v4 = v3;
      v5 = v2;
      v6 = sub_1BC2B4D84();

      return v6 & 1;
    }
    return 0;
  }
  return !v3;
}

uint64_t sub_1BC1A4BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1BC2B2D20();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  if (*(_QWORD *)(v0 + qword_1EF3FCEF8))
    sub_1BC2B2CC0();
  else
    sub_1BC2B2C9C();
  sub_1BC2B2C90();
  v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v7, v1);
  v9 = sub_1BC2B2D14();
  v8(v5, v1);
  return v9;
}

uint64_t sub_1BC1A4C8C()
{
  return sub_1BC0E519C(&qword_1EF3FCF18, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationDataSource, (uint64_t)&protocol conformance descriptor for MedicationInformationDataSource);
}

uint64_t type metadata accessor for MedicationInformationDataSource()
{
  uint64_t result;

  result = qword_1EF3FCF20;
  if (!qword_1EF3FCF20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1A4CF4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationInformationDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationInformationDataSource.__allocating_init(displayContext:listManager:healthStore:analyticsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationInformationDataSource + v0 + 152))();
}

uint64_t dispatch thunk of MedicationInformationDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationInformationDataSource + *v0 + 160))();
}

uint64_t sub_1BC1A4DA4()
{
  return type metadata accessor for MedicationInformationDataSource();
}

void **initializeBufferWithCopyOfBuffer for MedicationInformationDataSource.DisplayContext(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for MedicationInformationDataSource.DisplayContext(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for MedicationInformationDataSource.DisplayContext(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationInformationDataSource.DisplayContext(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MedicationInformationDataSource.DisplayContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationInformationDataSource.DisplayContext()
{
  return &type metadata for MedicationInformationDataSource.DisplayContext;
}

uint64_t sub_1BC1A4EF0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1A4F14()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC1A4F38(void *a1)
{
  uint64_t v1;

  sub_1BC1A3ED8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1BC1A4F48()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC1A4F74(void *a1)
{
  uint64_t v1;

  return sub_1BC1A312C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1BC1A4F80()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDA0FB10)
  {
    v0 = MEMORY[0x1E0D2EFE8];
    sub_1BC101888(255, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
    sub_1BC10173C();
    sub_1BC1A53D4((unint64_t *)&qword_1EDA0FB58, (uint64_t)&qword_1EDA0FB60, (uint64_t)v0, (uint64_t (*)(uint64_t))sub_1BC101888);
    v1 = sub_1BC2B3DAC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDA0FB10);
  }
}

void sub_1BC1A5034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCF70)
  {
    sub_1BC1A4F80();
    sub_1BC101888(255, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
    sub_1BC0E2130(255, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
    sub_1BC0E519C(&qword_1EDA0FB08, (uint64_t (*)(uint64_t))sub_1BC1A4F80, MEMORY[0x1E0C95708]);
    sub_1BC1A53D4(&qword_1EF3FCF80, (uint64_t)&qword_1EF3FCF78, (uint64_t)sub_1BC0F6468, (uint64_t (*)(uint64_t))sub_1BC101888);
    sub_1BC1A514C();
    v0 = sub_1BC2B3D7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCF70);
  }
}

unint64_t sub_1BC1A514C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FC00;
  if (!qword_1EDA0FC00)
  {
    sub_1BC0E2130(255, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FC00);
  }
  return result;
}

uint64_t sub_1BC1A51AC()
{
  return sub_1BC0E519C(&qword_1EF3FCF90, (uint64_t (*)(uint64_t))sub_1BC1A5034, MEMORY[0x1E0C956B8]);
}

void sub_1BC1A51C8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FCF98)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC1A567C(255, &qword_1EF3FCFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1A52B0();
    sub_1BC1A53D4(&qword_1EF3FCFC0, (uint64_t)&qword_1EF3FCFA0, (uint64_t)v0, (uint64_t (*)(uint64_t))sub_1BC1A567C);
    sub_1BC0E519C(&qword_1EF3FCFC8, (uint64_t (*)(uint64_t))sub_1BC1A52B0, MEMORY[0x1E0C95850]);
    v1 = sub_1BC2B3E24();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FCF98);
  }
}

void sub_1BC1A52B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCFB0)
  {
    sub_1BC0F173C(255, &qword_1EF3FCF88, (uint64_t (*)(uint64_t))sub_1BC1A5034, sub_1BC1A51AC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BA0]);
    sub_1BC0E8778(255, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC1A536C();
    v0 = sub_1BC2B3DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCFB0);
  }
}

unint64_t sub_1BC1A536C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FCFB8;
  if (!qword_1EF3FCFB8)
  {
    sub_1BC0F173C(255, &qword_1EF3FCF88, (uint64_t (*)(uint64_t))sub_1BC1A5034, sub_1BC1A51AC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BA0]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95BB0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FCFB8);
  }
  return result;
}

uint64_t sub_1BC1A53D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a4(255);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC1A5414()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FCFD0)
  {
    sub_1BC1A51C8();
    sub_1BC0E519C(&qword_1EF3FCFD8, (uint64_t (*)(uint64_t))sub_1BC1A51C8, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC2B3DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FCFD0);
  }
}

uint64_t sub_1BC1A548C()
{
  return sub_1BC0E519C(&qword_1EF3FCFE8, (uint64_t (*)(uint64_t))sub_1BC1A5414, MEMORY[0x1E0C957E8]);
}

uint64_t sub_1BC1A54A8(unint64_t a1, uint64_t a2, char a3)
{
  return sub_1BC1A1C30(a1, a2, a3);
}

uint64_t sub_1BC1A54B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1A54D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *a2 = result;
  return result;
}

void sub_1BC1A5508(uint64_t *a1)
{
  sub_1BC1A2068(a1);
}

unint64_t sub_1BC1A5510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FCFF0;
  if (!qword_1EF3FCFF0)
  {
    sub_1BC0F173C(255, &qword_1EF3FCFE0, (uint64_t (*)(uint64_t))sub_1BC1A5414, sub_1BC1A548C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FCFF0);
  }
  return result;
}

void sub_1BC1A5578()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FCFF8)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC1A567C(255, &qword_1EF3FCFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1A53D4(&qword_1EF3FCFC0, (uint64_t)&qword_1EF3FCFA0, (uint64_t)v0, (uint64_t (*)(uint64_t))sub_1BC1A567C);
    v1 = sub_1BC2B3F50();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FCFF8);
  }
}

void sub_1BC1A5610()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FD000)
  {
    sub_1BC0E2130(255, &qword_1EF3FCFA8, (uint64_t)&type metadata for InteractionSummaryItemState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC2B3F08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FD000);
  }
}

void sub_1BC1A567C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC0E2130(255, &qword_1EF3FCFA8, (uint64_t)&type metadata for InteractionSummaryItemState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = v6;
    v8 = sub_1BC0E8778(255, (unint64_t *)&qword_1EDA0FEA0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC1A5718(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC1A567C(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC1A575C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC1A0DD8(v1[2], v1[3], v1[4], a1);
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC1A57A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1A0EEC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1BC1A57AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC1A57D8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC1A10F0(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(unint64_t *))(v2 + 24));
}

id MedicationCustomizationDataProvider.medication.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void MedicationCustomizationDataProvider.medication.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*MedicationCustomizationDataProvider.medication.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.caption.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.caption.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.caption.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.strengthDisplay.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.strengthDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.strengthDisplay.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.medMoji.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC1A5FAC(type metadata accessor for MedicationCustomizationDataProvider, a1);
}

uint64_t type metadata accessor for MedicationCustomizationDataProvider(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FD090);
}

uint64_t MedicationCustomizationDataProvider.medMoji.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 28);
  return sub_1BC1A5974(a1, v3);
}

uint64_t sub_1BC1A5974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC10926C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*MedicationCustomizationDataProvider.medMoji.modify())()
{
  type metadata accessor for MedicationCustomizationDataProvider(0);
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.nickname.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.nickname.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.nickname.modify())()
{
  type metadata accessor for MedicationCustomizationDataProvider(0);
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.notes.modify())()
{
  type metadata accessor for MedicationCustomizationDataProvider(0);
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.init(medication:caption:medMoji:nickname:notes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t result;

  v16 = (int *)type metadata accessor for MedicationCustomizationDataProvider(0);
  v17 = (uint64_t)a9 + v16[7];
  v18 = sub_1BC2B3608();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[9]);
  *v19 = 0;
  v19[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = 0;
  a9[4] = 0xE000000000000000;
  sub_1BC1A5974(a4, v17);
  v20 = (_QWORD *)((char *)a9 + v16[8]);
  *v20 = a5;
  v20[1] = a6;
  result = swift_bridgeObjectRelease();
  *v19 = a7;
  v19[1] = a8;
  return result;
}

uint64_t MedicationCustomizationDataProvider.title.getter()
{
  id *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  sub_1BC152758();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92C0;
  type metadata accessor for MedicationCustomizationDataProvider(0);
  v3 = sub_1BC2B44CC();
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  if (!*v0)
  {
    v9 = v2;
    v8 = 0;
    v6 = 0;
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    if (v2)
      goto LABEL_9;
LABEL_5:
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v8)
      goto LABEL_17;
    goto LABEL_12;
  }
  v4 = objc_msgSend(*v0, sel_localizedPreferredName);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BC2B4460();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  v3 = *(_QWORD *)(inited + 32);
  v9 = *(_QWORD *)(inited + 40);
  if (!v9)
    goto LABEL_5;
LABEL_9:
  swift_bridgeObjectRetain();
  v10 = sub_1BC0FA054(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_1BC0FA054((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v13 = &v10[2 * v12];
  v13[4] = v3;
  v13[5] = v9;
  v6 = *(_QWORD *)(inited + 48);
  v8 = *(_QWORD *)(inited + 56);
  if (v8)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BC0FA054(0, v10[2] + 1, 1, v10);
    v15 = v10[2];
    v14 = v10[3];
    if (v15 >= v14 >> 1)
      v10 = sub_1BC0FA054((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
    v10[2] = v15 + 1;
    v16 = &v10[2 * v15];
    v16[4] = v6;
    v16[5] = v8;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  sub_1BC1A5E2C(0, (unint64_t *)&qword_1EF3FA018, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC11BF0C();
  v17 = sub_1BC2B440C();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1BC1A5E2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC1A5E78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC1A5EA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MedicationDetailsDataProvider.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.caption.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.strengthDisplay.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.strengthDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MedicationDetailsDataProvider.strengthDisplay.modify())()
{
  return nullsub_1;
}

uint64_t MedicationDetailsDataProvider.medMoji.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC1A5FAC(type metadata accessor for MedicationDetailsDataProvider, a1);
}

uint64_t sub_1BC1A5FAC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a1(0) + 28);
  return sub_1BC11C330(v4, a2);
}

uint64_t MedicationDetailsDataProvider.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationDetailsDataProvider(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.init(title:caption:strengthDisplay:medMoji:notes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  v13 = type metadata accessor for MedicationDetailsDataProvider(0);
  result = sub_1BC109D88(a7, (uint64_t)a9 + *(int *)(v13 + 28));
  v15 = (_QWORD *)((char *)a9 + *(int *)(v13 + 32));
  *v15 = a8;
  v15[1] = a10;
  return result;
}

uint64_t sub_1BC1A6088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC11C330(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1BC1A6098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for MedicationDetailsDataProvider(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FD130);
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.caption.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.strengthDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.medMoji.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.notes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

char *initializeBufferWithCopyOfBuffer for MedicationCustomizationDataProvider(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v9;
    v10 = a3[7];
    __dst = &a1[v10];
    v11 = (char *)a2 + v10;
    v12 = sub_1BC2B3608();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BC10926C();
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = a3[8];
    v18 = a3[9];
    v19 = &v7[v17];
    v20 = (char **)((char *)a2 + v17);
    v21 = v20[1];
    *(_QWORD *)v19 = *v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = &v7[v18];
    v23 = (char **)((char *)a2 + v18);
    v24 = v23[1];
    *(_QWORD *)v22 = *v23;
    *((_QWORD *)v22 + 1) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for MedicationCustomizationDataProvider(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_1BC2B3608();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MedicationCustomizationDataProvider(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *__dst;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  a1[4] = *(_QWORD *)(a2 + 32);
  v9 = a3[7];
  __dst = (char *)a1 + v9;
  v10 = (const void *)(a2 + v9);
  v11 = sub_1BC2B3608();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BC10926C();
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v16 = a3[8];
  v17 = a3[9];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = (_QWORD *)(a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationCustomizationDataProvider(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1BC2B3608();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BC10926C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MedicationCustomizationDataProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BC2B3608();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BC10926C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for MedicationCustomizationDataProvider(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_1BC2B3608();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BC10926C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationCustomizationDataProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1A6860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC10926C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationCustomizationDataProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1A68E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1BC10926C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1BC1A695C()
{
  unint64_t v0;

  sub_1BC10926C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationDetailsDataProvider(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v12 = sub_1BC2B3608();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BC10926C();
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 32);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MedicationDetailsDataProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1BC2B3608();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MedicationDetailsDataProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  v11 = sub_1BC2B3608();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BC10926C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 32);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MedicationDetailsDataProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B3608();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BC10926C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 32);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MedicationDetailsDataProvider(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B3608();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BC10926C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for MedicationDetailsDataProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BC2B3608();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BC10926C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 32);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDetailsDataProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1A70BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC10926C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationDetailsDataProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1A7144(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BC10926C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1BC1A71B8()
{
  unint64_t v0;

  sub_1BC10926C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

Swift::String __swiftcall Date.formattedWithYearIfDifferent()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  Swift::String result;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;

  v0 = sub_1BC2B22F4();
  v59 = *(_QWORD *)(v0 - 8);
  v60 = v0;
  MEMORY[0x1E0C80A78](v0);
  v58 = (char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1BC2B23F0();
  v3 = *(_QWORD *)(v2 - 8);
  v74 = v2;
  v75 = v3;
  MEMORY[0x1E0C80A78](v2);
  v73 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B257C();
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  MEMORY[0x1E0C80A78](v5);
  v70 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1BC2B22DC();
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1BC2B230C();
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v62 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B21F8();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1BC2B25B8();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1BC2B2594();
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC2B24A4();
  MEMORY[0x1E0C80A78](v14);
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FD178, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB03F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  sub_1BC0E7998(0, &qword_1EF3FD180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0428], v15);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v57 - v20;
  v76 = sub_1BC2B2318();
  v22 = *(_QWORD *)(v76 - 8);
  v23 = MEMORY[0x1E0C80A78](v76);
  v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v57 - v27;
  MEMORY[0x1E0C80A78](v26);
  v61 = (char *)&v57 - v29;
  v30 = sub_1BC2B2294();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v21, 1, 1, v30);
  v31 = sub_1BC2B227C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
  sub_1BC2B2468();
  sub_1BC2B251C();
  sub_1BC2B25AC();
  sub_1BC2B21EC();
  sub_1BC2B22AC();
  v32 = v62;
  sub_1BC2B2300();
  sub_1BC2B22C4();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v66);
  v66 = v22;
  v33 = *(void (**)(char *, uint64_t))(v22 + 8);
  v34 = v76;
  v33(v25, v76);
  v35 = v64;
  sub_1BC2B22D0();
  sub_1BC2B22A0();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v65);
  v65 = (uint64_t)v28;
  v33(v28, v34);
  sub_1BC2B2564();
  v36 = *MEMORY[0x1E0CB1158];
  v37 = v70;
  v38 = v71;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v40 = v72;
  v39(v70, v36, v72);
  v41 = v73;
  sub_1BC2B23B4();
  v67 = sub_1BC2B2588();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v74);
  v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43 = v40;
  v42(v37, v40);
  v44 = v69;
  v45 = *(void (**)(char *, uint64_t))(v68 + 8);
  v45(v13, v69);
  sub_1BC2B2564();
  v39(v37, v36, v43);
  v46 = sub_1BC2B2588();
  v47 = v43;
  v48 = v76;
  v42(v37, v47);
  v49 = v44;
  v50 = v33;
  v45(v13, v49);
  v51 = v61;
  if (v67 != v46)
  {
    v52 = v58;
    sub_1BC2B22E8();
    v53 = v65;
    sub_1BC2B22B8();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v52, v60);
    v50(v51, v48);
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v51, v53, v48);
  }
  sub_1BC0E519C(&qword_1EF3FD188, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0568], MEMORY[0x1E0CB0560]);
  sub_1BC2B23CC();
  v50(v51, v48);
  v54 = v77;
  v55 = v78;
  result._object = v55;
  result._countAndFlagsBits = v54;
  return result;
}

uint64_t type metadata accessor for StartDateDataSource()
{
  uint64_t result;

  result = qword_1EF3FD1B0;
  if (!qword_1EF3FD1B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1A785C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2BC4();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC1A78EC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;

  sub_1BC1A9474();
  return a2(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_1BC1A7930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  *(_QWORD *)(v2 + qword_1EF3FD1A0) = 0;
  swift_retain();
  sub_1BC2B2B94();
  *(_QWORD *)(v2 + qword_1EF3FD190) = a1;
  *(_QWORD *)(v2 + qword_1EF3FD198) = a2;
  swift_retain();
  swift_retain();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC2B2BAC();
  v5 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC1A7A9C();
  swift_release();
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1BC1A7A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = v0;
  sub_1BC199BEC();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + qword_1EF3FD190);
  v13[0] = *(_QWORD *)(v0 + qword_1EF3FD198);
  v13[1] = v7;
  sub_1BC199CB4();
  sub_1BC199D18();
  v8 = MEMORY[0x1E0C95FB8];
  sub_1BC0E519C((unint64_t *)&qword_1EF3FCC30, (uint64_t (*)(uint64_t))sub_1BC199CB4, MEMORY[0x1E0C95FB8]);
  sub_1BC0E519C((unint64_t *)&qword_1EF3FCC38, (uint64_t (*)(uint64_t))sub_1BC199D18, v8);
  sub_1BC2B3FF8();
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BC1A9408;
  *(_QWORD *)(v10 + 24) = v9;
  sub_1BC0E519C(&qword_1EF3FCC48, (uint64_t (*)(uint64_t))sub_1BC199BEC, MEMORY[0x1E0C95698]);
  v11 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)(v1 + qword_1EF3FD1A0) = v11;
  return swift_release();
}

uint64_t sub_1BC1A7C60(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC1A7CD0(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1A7CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  id v25;
  id v26;
  void (*v27)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  char *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  _BYTE *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[6];

  v48 = sub_1BC2B2FA8();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v42 - v6;
  v43 = sub_1BC2B2C6C();
  v7 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B2D98();
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B3B48();
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC2B3CD4();
  v54 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ScheduleDurationItem();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v20[*(int *)(v18 + 20)];
  v22 = sub_1BC2B23F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, a1, v22);
  sub_1BC186618(a2, (uint64_t)&v20[*(int *)(v17 + 24)]);
  sub_1BC2B242C();
  v23 = (uint64_t *)&v20[*(int *)(v17 + 28)];
  type metadata accessor for ScheduleDurationCell();
  sub_1BC0E519C(&qword_1EF3FC3F8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationCell, (uint64_t)&protocol conformance descriptor for ScheduleDurationCell);
  *v23 = sub_1BC2B2930();
  v23[1] = v24;
  sub_1BC2B3CC8();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v25 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C98();
  v26 = objc_msgSend((id)objc_opt_self(), sel_linkColor);
  v27 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v27(v55, 0);
  sub_1BC2B3B3C();
  sub_1BC12A328();
  sub_1BC2B4D24();
  sub_1BC2B3B18();
  v55[3] = v14;
  v55[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v55);
  v29 = v13;
  v42 = v13;
  (*(void (**)(uint64_t *, char *, uint64_t))(v54 + 16))(boxed_opaque_existential_1, v16, v14);
  swift_allocObject();
  swift_weakInit();
  v30 = v43;
  v31 = v44;
  *v44 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v31, *MEMORY[0x1E0D2B168], v30);
  v43 = v14;
  v33 = v49;
  v32 = v50;
  v34 = v45;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v45, v29, v50);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v47, *MEMORY[0x1E0D2B8C8], v48);
  v35 = v51;
  sub_1BC2B2D8C();
  sub_1BC127B70(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(v36 + 56) = v17;
  *(_QWORD *)(v36 + 64) = sub_1BC0E519C(&qword_1EF3FD208, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationItem, (uint64_t)&protocol conformance descriptor for ScheduleDurationItem);
  v37 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v36 + 32));
  sub_1BC19DD08((uint64_t)v20, (uint64_t)v37);
  v38 = v53;
  *(_QWORD *)(v36 + 96) = v53;
  *(_QWORD *)(v36 + 104) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  v39 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v36 + 72));
  v40 = v52;
  (*(void (**)(uint64_t *, char *, uint64_t))(v52 + 16))(v39, v35, v38);
  sub_1BC2B2C24();
  swift_bridgeObjectRelease();
  sub_1BC2B2C30();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v38);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v42, v32);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v43);
  return sub_1BC1A9268((uint64_t)v20);
}

uint64_t sub_1BC1A82B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v48 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v48 + 64);
  v4 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - v5;
  v7 = sub_1BC2B23F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v40 - v12;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v44 = v3;
    v45 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    v42 = v7;
    v46 = a1;
    v16 = qword_1EF3FD190;
    swift_retain();
    sub_1BC2B3ED8();
    swift_release();
    v17 = qword_1EF3FD198;
    swift_retain();
    sub_1BC2B3ED8();
    swift_release();
    v18 = *(_QWORD *)(v15 + v16);
    v19 = *(_QWORD *)(v15 + v17);
    type metadata accessor for StartDateEndDateEditDataSource();
    swift_allocObject();
    v20 = v6;
    swift_retain();
    swift_retain();
    v21 = sub_1BC196F4C(v18, v19);
    sub_1BC2B2DEC();
    sub_1BC127B70(0, (unint64_t *)&qword_1EF400100, (unint64_t *)&qword_1EF3F8998);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BC2B92D0;
    v23 = MEMORY[0x1E0D2B148];
    *(_QWORD *)(v22 + 32) = v21;
    *(_QWORD *)(v22 + 40) = v23;
    v43 = v21;
    swift_retain();
    sub_1BC2B2E10();
    v24 = objc_allocWithZone((Class)sub_1BC2B3020());
    v25 = (void *)sub_1BC2B2FE4();
    v26 = qword_1EDA0FEE8;
    v27 = v15;
    v28 = v25;
    v29 = v13;
    if (v26 != -1)
      swift_once();
    v30 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v31 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setTitle_, v31);

    v32 = swift_allocObject();
    v40 = v27;
    swift_weakInit();
    v33 = v42;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v29, v42);
    v41 = v29;
    v34 = (uint64_t)v20;
    v35 = (uint64_t)v20;
    v36 = v45;
    sub_1BC186618(v35, v45);
    v37 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v38 = (v47 + v37 + *(unsigned __int8 *)(v48 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v32;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v39 + v37, v11, v33);
    sub_1BC141D44(v36, v39 + v38);
    UIViewController.presentAsFormSheetWithNavigationController(viewController:isModalInPresentation:leadingAction:trailingAction:)(v28, 0, (uint64_t)sub_1BC1A9384, v39, (uint64_t)sub_1BC1A8818, 0);
    swift_release();
    swift_release();
    swift_release();

    sub_1BC0F8D88(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v41, v33);
  }
  return result;
}

id sub_1BC1A8718(void *a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_1BC2B3EC0();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_1BC2B3EC0();
    swift_release();
  }
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_1BC1A8818(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void *sub_1BC1A882C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v14;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v14 - v1;
  v3 = sub_1BC2B2D20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  sub_1BC2B2C9C();
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v10 = sub_1BC2B23F0();
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v2, 1, v10);
  sub_1BC0F8D88((uint64_t)v2);
  if (v11 != 1)
  {
    sub_1BC2B2C90();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
  }
  sub_1BC2B2DC8();
  v12 = (void *)sub_1BC2B2D14();
  swift_unknownObjectRelease();
  sub_1BC2B4AE4();
  objc_msgSend(v12, sel_setContentInsets_);
  objc_msgSend(v12, sel_setContentInsetsReference_, 1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return v12;
}

uint64_t sub_1BC1A89F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t *v25;
  uint64_t result;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;

  v49 = a3;
  v5 = sub_1BC2B2438();
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B2594();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v44 - v12;
  v48 = sub_1BC2B23F0();
  v14 = *(_QWORD *)(v48 - 8);
  v15 = MEMORY[0x1E0C80A78](v48);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v47 = (char *)&v44 - v18;
  if (sub_1BC2B4460() == a1 && v19 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      swift_retain();
      sub_1BC2B3ED8();
      swift_release();
      v22 = v48;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v48) == 1)
      {
        sub_1BC0F8D88((uint64_t)v13);
        v23 = sub_1BC2B29FC();
        v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2ACD8];
        v25 = v49;
        v49[3] = v23;
        v25[4] = sub_1BC0E519C(&qword_1EF3FD200, v24, MEMORY[0x1E0D2ACC8]);
        __swift_allocate_boxed_opaque_existential_1(v25);
        return sub_1BC2B29F0();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v47, v13, v22);
        sub_1BC127B70(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1BC2B92D0;
        sub_1BC2B2564();
        swift_retain();
        sub_1BC2B3ED8();
        swift_release();
        v36 = sub_1BC2B24F8();
        v37 = *(void (**)(char *, uint64_t))(v14 + 8);
        v37(v17, v22);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v38 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v35 + 64) = v38;
        *(_QWORD *)(v35 + 32) = v36;
        if (qword_1EDA0FEE8 != -1)
          swift_once();
        v39 = (id)qword_1EDA0FEF8;
        swift_bridgeObjectRetain();
        sub_1BC2B2144();
        if (*(_QWORD *)(v35 + 16))
        {
          sub_1BC2B443C();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();

        }
        swift_bridgeObjectRelease();
        v50 = 0x74497265746F6F46;
        v51 = 0xEB000000005F6D65;
        v40 = v44;
        sub_1BC2B242C();
        sub_1BC2B23FC();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v46);
        sub_1BC2B44FC();
        swift_bridgeObjectRelease();
        v41 = sub_1BC2B2EDC();
        v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
        v43 = v49;
        v49[3] = v41;
        v43[4] = sub_1BC0E519C(&qword_1EF3F8B78, v42, MEMORY[0x1E0D2B6A8]);
        __swift_allocate_boxed_opaque_existential_1(v43);
        sub_1BC2B2ED0();
        return ((uint64_t (*)(char *, uint64_t))v37)(v47, v48);
      }
    }
  }
  if (qword_1EF3F8140 != -1)
    swift_once();
  v27 = (id)qword_1EF3FE7D8;
  swift_bridgeObjectRetain();
  v28 = sub_1BC2B2144();
  v30 = v29;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  v31 = sub_1BC2B2930();
  v33 = v32;
  sub_1BC2B2930();
  swift_bridgeObjectRelease();
  v34 = v49;
  v49[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  v34[4] = sub_1BC184A54();
  result = swift_allocObject();
  *v34 = result;
  *(_QWORD *)(result + 16) = v28;
  *(_QWORD *)(result + 24) = v30;
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = nullsub_1;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = v31;
  *(_QWORD *)(result + 64) = v33;
  return result;
}

void sub_1BC1A8FE4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1A9010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + qword_1EF3FD1A8;
  v2 = sub_1BC2B2BC4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_1BC1A907C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BC2B2C60();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + qword_1EF3FD1A8;
  v2 = sub_1BC2B2BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1A9104()
{
  return type metadata accessor for StartDateDataSource();
}

void *sub_1BC1A910C()
{
  return sub_1BC1A882C();
}

uint64_t sub_1BC1A912C()
{
  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  sub_1BC2B4994();
  type metadata accessor for ScheduleDurationCell();
  sub_1BC0E519C(&qword_1EF3FC3F8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationCell, (uint64_t)&protocol conformance descriptor for ScheduleDurationCell);
  sub_1BC2B497C();
  sub_1BC2B3038();
  sub_1BC2B4988();
  sub_1BC2B2EB8();
  return sub_1BC2B4988();
}

uint64_t sub_1BC1A91E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC1A89F4(a1, a2, a3);
}

uint64_t sub_1BC1A9208()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1A923C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1A9260(uint64_t a1)
{
  return sub_1BC1A82B8(a1);
}

uint64_t sub_1BC1A9268(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ScheduleDurationItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC1A92A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t);

  v1 = sub_1BC2B23F0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v4 + v6) & ~v6;
  swift_release();
  v8 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v8(v0 + v3, v1);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v7, 1, v1))
    v8(v0 + v7, v1);
  return swift_deallocObject();
}

id sub_1BC1A9384(void *a1)
{
  sub_1BC2B23F0();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  return sub_1BC1A8718(a1);
}

uint64_t sub_1BC1A9408(uint64_t a1, uint64_t a2)
{
  return sub_1BC1A7C60(a1, a2);
}

uint64_t sub_1BC1A9410()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1A9434(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  sub_1BC1A9474();
  return v3(a1, a1 + *(int *)(v4 + 48));
}

void sub_1BC1A9474()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FD210)
  {
    sub_1BC2B23F0();
    sub_1BC0E7998(255, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FD210);
  }
}

uint64_t Dosage.description.getter()
{
  sub_1BC2B51BC();
  sub_1BC2B44FC();
  sub_1BC2B44FC();
  sub_1BC2B2438();
  sub_1BC0E519C(&qword_1EF3F9F18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  type metadata accessor for Dosage();
  sub_1BC2B23F0();
  sub_1BC0E519C(&qword_1EF401820, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B4754();
  return 0;
}

uint64_t type metadata accessor for Dosage()
{
  uint64_t result;

  result = qword_1EF3FD270;
  if (!qword_1EF3FD270)
    return swift_getSingletonMetadata();
  return result;
}

BOOL _s19HealthMedicationsUI6DosageV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  double v18;
  double v19;
  uint64_t v21;

  v4 = type metadata accessor for Dosage();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v21 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v21 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  v16 = sub_1BC2B2414();
  sub_1BC13817C(a1, (uint64_t)v15);
  sub_1BC13817C(a2, (uint64_t)v13);
  if ((v16 & 1) != 0)
  {
    v17 = sub_1BC2B239C();
    sub_1BC16DC44((uint64_t)v13);
    sub_1BC16DC44((uint64_t)v15);
    sub_1BC13817C(a1, (uint64_t)v10);
    sub_1BC13817C(a2, (uint64_t)v7);
    if ((v17 & 1) != 0)
    {
      v18 = *(double *)&v10[*(int *)(v4 + 24)];
      sub_1BC16DC44((uint64_t)v10);
      v19 = *(double *)&v7[*(int *)(v4 + 24)];
      sub_1BC16DC44((uint64_t)v7);
      return v18 == v19;
    }
  }
  else
  {
    sub_1BC16DC44((uint64_t)v13);
    sub_1BC16DC44((uint64_t)v15);
    sub_1BC13817C(a1, (uint64_t)v10);
    sub_1BC13817C(a2, (uint64_t)v7);
  }
  sub_1BC16DC44((uint64_t)v7);
  sub_1BC16DC44((uint64_t)v10);
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for Dosage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC2B23F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for Dosage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1BC2B23F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for Dosage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1A9BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1BC2B23F0();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for Dosage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1A9C4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1BC2B2438();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1BC2B23F0();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1BC1A9CC8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = sub_1BC2B23F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BC1A9D58()
{
  sub_1BC1AA75C();
  return sub_1BC2B4478();
}

uint64_t sub_1BC1A9D88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v6;
  _BYTE v7[24];
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC0E5774(v3, (uint64_t)v7);
  if (v8)
  {
    sub_1BC0E1B94();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = sub_1BC1A9F78();
      objc_msgSend(v4, sel_setColor_, v6);
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v7);
  }
  return sub_1BC0F7954(a1);
}

void (*sub_1BC1A9E68(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  v3[8] = v1;
  v3[9] = v4;
  swift_beginAccess();
  return sub_1BC1A9EC0;
}

void sub_1BC1A9EC0(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;
  id v5;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1BC0E5774(v3[8] + v3[9], (uint64_t)v3);
    if (v3[3])
    {
      sub_1BC0E1B94();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = (void *)v3[5];
        v5 = sub_1BC1A9F78();
        objc_msgSend(v5, sel_setColor_, v4);

        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1BC0F7954((uint64_t)v3);
    }
  }
  free(v3);
}

id sub_1BC1A9F78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC1AA14C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v1 = sub_1BC1A9F78();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC2BA730;
  v4 = sub_1BC1A9F78();
  v5 = objc_msgSend(v4, sel_heightAnchor);

  v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 1.0);
  *(_QWORD *)(v3 + 32) = v6;
  v7 = sub_1BC1A9F78();
  v8 = objc_msgSend(v7, sel_leadingAnchor);

  v9 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 3.0);
  *(_QWORD *)(v3 + 40) = v11;
  v12 = sub_1BC1A9F78();
  v13 = objc_msgSend(v12, sel_trailingAnchor);

  v14 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v15 = objc_msgSend(v14, sel_trailingAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, -3.0);
  *(_QWORD *)(v3 + 48) = v16;
  v17 = sub_1BC1A9F78();
  v18 = objc_msgSend(v17, sel_centerYAnchor);

  v19 = objc_msgSend(v0, sel_centerYAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v3 + 56) = v20;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v21 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v21);

}

id sub_1BC1AA3DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SeparatorHeaderCell()
{
  return objc_opt_self();
}

uint64_t destroy for SeparatorHeaderItem(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s19HealthMedicationsUI19SeparatorHeaderItemVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeparatorHeaderItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SeparatorHeaderItem(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeparatorHeaderItem(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeparatorHeaderItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeparatorHeaderItem()
{
  return &type metadata for SeparatorHeaderItem;
}

uint64_t sub_1BC1AA608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t (*sub_1BC1AA65C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC1A9E68(v2);
  return sub_1BC0F7830;
}

uint64_t sub_1BC1AA6A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1AA6F4(uint64_t a1)
{
  return sub_1BC1A9D88(a1);
}

uint64_t (*sub_1BC1AA714(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC1A9E68(v2);
  return sub_1BC0F7830;
}

unint64_t sub_1BC1AA75C()
{
  unint64_t result;

  result = qword_1EF3FD2E8;
  if (!qword_1EF3FD2E8)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FD2E8);
  }
  return result;
}

uint64_t type metadata accessor for InteractionFactorsInfoDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BC1AA7B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1BC0E8710();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92D0;
  type metadata accessor for InteractionFactorsInfoDataSource();
  swift_allocObject();
  v1 = sub_1BC1B4394();
  v2 = sub_1BC1AA81C();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  return v0;
}

unint64_t sub_1BC1AA81C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FD390;
  if (!qword_1EF3FD390)
  {
    v1 = type metadata accessor for InteractionFactorsInfoDataSource();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2F070], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FD390);
  }
  return result;
}

_QWORD *sub_1BC1AA864()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = qword_1EF3FD3A0;
  if (*(_QWORD *)(v0 + qword_1EF3FD3A0))
  {
    v2 = *(_QWORD **)(v0 + qword_1EF3FD3A0);
  }
  else
  {
    v3 = sub_1BC1AB1CC();
    v4 = *(_QWORD *)(v0 + qword_1EF3FD3B0);
    v5 = *(_QWORD *)(v0 + qword_1EF3FD3C8);
    type metadata accessor for InteractionFactorsItem();
    v2 = (_QWORD *)swift_allocObject();
    type metadata accessor for InteractionFactorsCell();
    sub_1BC0E519C(&qword_1EF3FD3B8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsCell);
    swift_retain();
    v6 = sub_1BC2B2930();
    v2[2] = v3;
    v2[3] = v6;
    v2[4] = v7;
    v2[5] = v4;
    v2[6] = v5;
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1BC1AA958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v27 - v6;
  sub_1BC0F5FE4();
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  MEMORY[0x1E0C80A78](v7);
  v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1AB950();
  v11 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  v35 = v11;
  MEMORY[0x1E0C80A78](v10);
  v29 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_1EF3FD398;
  sub_1BC2B3278();
  swift_retain();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  *(_QWORD *)(v2 + v13) = sub_1BC2B314C();
  *(_QWORD *)(v2 + qword_1EF3FD3A0) = 0;
  *(_QWORD *)(v2 + qword_1EF3FD3A8) = 0;
  v31 = a1;
  *(_QWORD *)(v2 + qword_1EF3FD3B0) = a1;
  *(_QWORD *)(v2 + qword_1EF3FD3C8) = a2;
  swift_retain();
  swift_release();
  v14 = sub_1BC2B2750();
  swift_retain();
  v15 = (void *)sub_1BC2B3158();
  sub_1BC0E7998(0, &qword_1EF3F90A0, (uint64_t (*)(uint64_t))sub_1BC0F605C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC0F605C();
  v27 = v16;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B9600;
  sub_1BC0E1D38(0, &qword_1EF3F90A8);
  sub_1BC2B494C();
  sub_1BC2B4940();
  swift_bridgeObjectRelease();
  v17 = v15;
  sub_1BC2B4964();
  sub_1BC2B4940();
  swift_bridgeObjectRelease();

  v18 = v17;
  sub_1BC2B4958();
  sub_1BC2B4940();
  swift_bridgeObjectRelease();

  sub_1BC0E519C(&qword_1EF3F9020, (uint64_t (*)(uint64_t))sub_1BC0F605C, MEMORY[0x1E0D2C100]);
  v19 = v28;
  sub_1BC2B3E54();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v36 = (id)sub_1BC2B4A0C();
  v20 = sub_1BC2B49C4();
  v21 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v30, 1, 1, v20);
  sub_1BC0E519C(&qword_1EF3F9058, (uint64_t (*)(uint64_t))sub_1BC0F5FE4, MEMORY[0x1E0C95C80]);
  sub_1BC1019D8();
  v22 = v29;
  v23 = v32;
  sub_1BC2B4064();
  sub_1BC101BB8(v21);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v23);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FD428, (uint64_t (*)(uint64_t))sub_1BC1AB950, MEMORY[0x1E0C95CB8]);
  v24 = v34;
  v25 = sub_1BC2B4010();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v24);
  *(_QWORD *)(v14 + qword_1EF3FD3A8) = v25;
  swift_release();
  sub_1BC1AAF60();

  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_1BC1AAE48()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC1AAF60();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1AAE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_1BC2B2CC0();
  sub_1BC2B2C90();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  v8 = sub_1BC2B2D14();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1BC1AAF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v16;
  uint64_t v17;

  v17 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC1AB1CC();
  v5 = *(_QWORD *)(v0 + qword_1EF3FD3B0);
  v6 = *(_QWORD *)(v0 + qword_1EF3FD3C8);
  v7 = type metadata accessor for InteractionFactorsItem();
  v8 = (_QWORD *)swift_allocObject();
  type metadata accessor for InteractionFactorsCell();
  sub_1BC0E519C(&qword_1EF3FD3B8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsCell);
  swift_retain();
  v9 = sub_1BC2B2930();
  v8[2] = v4;
  v8[3] = v9;
  v8[4] = v10;
  v8[5] = v5;
  v8[6] = v6;
  *(_QWORD *)(v0 + qword_1EF3FD3A0) = v8;
  swift_release();
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  v12 = swift_allocObject();
  v16 = xmmword_1BC2B92D0;
  *(_OWORD *)(v12 + 16) = xmmword_1BC2B92D0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, v11);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v16;
  v14 = sub_1BC1AA864();
  *(_QWORD *)(v13 + 56) = v7;
  *(_QWORD *)(v13 + 64) = sub_1BC0E519C(&qword_1EF3FD430, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsItem, (uint64_t)&protocol conformance descriptor for InteractionFactorsItem);
  *(_QWORD *)(v13 + 32) = v14;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v17);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BC1AB1CC()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  if ((sub_1BC2B31A0() & 1) == 0)
  {
    v0 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((sub_1BC2B31DC() & 1) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v0 = sub_1BC0FA2A8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v2 = v0[2];
  v1 = v0[3];
  if (v2 >= v1 >> 1)
    v0 = sub_1BC0FA2A8((_QWORD *)(v1 > 1), v2 + 1, 1, v0);
  v0[2] = v2 + 1;
  v0[v2 + 4] = 1;
  if ((sub_1BC2B31DC() & 1) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v0 = sub_1BC0FA2A8(0, v0[2] + 1, 1, v0);
    v4 = v0[2];
    v3 = v0[3];
    if (v4 >= v3 >> 1)
      v0 = sub_1BC0FA2A8((_QWORD *)(v3 > 1), v4 + 1, 1, v0);
    v0[2] = v4 + 1;
    v0[v4 + 4] = 2;
  }
LABEL_12:
  if ((sub_1BC2B31B8() & 1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v0 = sub_1BC0FA2A8(0, v0[2] + 1, 1, v0);
    v6 = v0[2];
    v5 = v0[3];
    if (v6 >= v5 >> 1)
      v0 = sub_1BC0FA2A8((_QWORD *)(v5 > 1), v6 + 1, 1, v0);
    v0[2] = v6 + 1;
    v0[v6 + 4] = 3;
  }
  return v0;
}

void InteractionFactorsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionFactorsDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1AB3B4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t InteractionFactorsDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InteractionFactorsDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1AB4D0()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionFactorsDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionFactorsDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for InteractionFactorsCell();
  sub_1BC0E519C(&qword_1EF3FD3B8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsCell);
  sub_1BC2B497C();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
}

uint64_t sub_1BC1AB588()
{
  type metadata accessor for InteractionFactorsCell();
  sub_1BC0E519C(&qword_1EF3FD3B8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsCell);
  sub_1BC2B497C();
  sub_1BC2B2EB8();
  return sub_1BC2B4988();
}

uint64_t InteractionFactorsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  id v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  _QWORD v19[2];

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B4460() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v13 = sub_1BC2B296C();
      v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v13;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v14, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v16 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v19[0] = 0x74497265746F6F46;
  v19[1] = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v17 = sub_1BC2B2EDC();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v17;
  a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v18, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC2B2ED0();
}

uint64_t sub_1BC1AB840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return InteractionFactorsDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1BC1AB854()
{
  return sub_1BC0E519C(&qword_1EF3FD3C0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsDataSource, (uint64_t)&protocol conformance descriptor for InteractionFactorsDataSource);
}

uint64_t type metadata accessor for InteractionFactorsDataSource()
{
  uint64_t result;

  result = qword_1EF3FD3D0;
  if (!qword_1EF3FD3D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1AB8BC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsDataSource + *v0 + 96))();
}

uint64_t sub_1BC1AB948()
{
  return type metadata accessor for InteractionFactorsDataSource();
}

void sub_1BC1AB950()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FD420)
  {
    sub_1BC0F5FE4();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF3F9058, (uint64_t (*)(uint64_t))sub_1BC0F5FE4, MEMORY[0x1E0C95C80]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FD420);
  }
}

uint64_t sub_1BC1ABA04()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1ABA28()
{
  return sub_1BC1AAE48();
}

uint64_t type metadata accessor for ManualStrengthDataSource()
{
  uint64_t result;

  result = qword_1EF3FD490;
  if (!qword_1EF3FD490)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1ABA6C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC1ABAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  id v23;
  unint64_t v24;
  _QWORD v26[2];
  _QWORD v27[2];

  v3 = v2;
  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = qword_1EF3FD458;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2BDB30;
  v12 = (void *)objc_opt_self();
  swift_retain();
  *(_QWORD *)(v11 + 32) = objc_msgSend(v12, sel_gramUnitWithMetricPrefix_, 4);
  *(_QWORD *)(v11 + 40) = objc_msgSend(v12, sel_gramUnitWithMetricPrefix_, 3);
  *(_QWORD *)(v11 + 48) = objc_msgSend(v12, sel_gramUnit);
  *(_QWORD *)(v11 + 56) = objc_msgSend(v12, sel_literUnitWithMetricPrefix_, 4);
  *(_QWORD *)(v11 + 64) = objc_msgSend(v12, sel_percentUnit);
  v27[0] = v11;
  sub_1BC2B45A4();
  *(_QWORD *)(v3 + v10) = v27[0];
  v13 = (_QWORD *)(v3 + qword_1EF3FD470);
  v27[0] = sub_1BC2B4460();
  v27[1] = v14;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v15 = v27[1];
  *v13 = v27[0];
  v13[1] = v15;
  v16 = qword_1EF3FD478;
  sub_1BC1AD7F8(0, (unint64_t *)&qword_1EF3F93F8, (uint64_t)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E2130);
  v27[0] = 0;
  v27[1] = 0;
  swift_allocObject();
  *(_QWORD *)(v3 + v16) = sub_1BC2B3EF0();
  v17 = qword_1EF3FD480;
  v27[0] = 0;
  sub_1BC1AD7F8(0, &qword_1EF3FD530, (uint64_t)&qword_1EF3FD538, (uint64_t)sub_1BC1AD868, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E7998);
  swift_allocObject();
  *(_QWORD *)(v3 + v17) = sub_1BC2B3EF0();
  *(_QWORD *)(v3 + qword_1EF3FD488) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + qword_1EF3FD468) = a2;
  *(_QWORD *)(v3 + qword_1EF3FD460) = a1;
  v26[1] = a1;
  swift_retain();
  swift_release();
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "MutableArray<");
  HIWORD(v27[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v18 = sub_1BC2B2C00();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v26[0] = *(_QWORD *)(*(_QWORD *)(sub_1BC2B2BC4() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
  v19 = qword_1EDA0FEE8;
  swift_retain_n();
  if (v19 != -1)
    swift_once();
  v20 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v21 + 56) = type metadata accessor for FieldItem();
  *(_QWORD *)(v21 + 64) = sub_1BC0E519C(&qword_1EF3FCB80, (uint64_t (*)(uint64_t))type metadata accessor for FieldItem, (uint64_t)&protocol conformance descriptor for FieldItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v21 + 32));
  sub_1BC1AC124((uint64_t)boxed_opaque_existential_1);
  swift_bridgeObjectRetain();
  sub_1BC2B2BAC();
  v23 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_retain();
  v24 = swift_bridgeObjectRetain();
  sub_1BC1AD5F8(v24, v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC1AC320();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_1BC1AC124@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t (**v16)();
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  sub_1BC2B3ED8();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  if (v21)
    v2 = v21;
  else
    v2 = 0xE000000000000000;
  if (v21)
    v3 = v20;
  else
    v3 = 0;
  v18 = v3;
  v19 = v2;
  v4 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v17 = sub_1BC2B2144();
  v6 = v5;
  swift_bridgeObjectRelease();

  v7 = swift_allocObject();
  swift_weakInit();
  sub_1BC2B242C();
  v8 = (int *)type metadata accessor for FieldItem();
  v9 = (_QWORD *)(a1 + v8[5]);
  v10 = (uint64_t *)(a1 + v8[6]);
  v11 = a1 + v8[10];
  v12 = (_QWORD *)(a1 + v8[14]);
  v13 = (uint64_t *)(a1 + v8[15]);
  type metadata accessor for FieldCell();
  sub_1BC0E519C(&qword_1EF4020C0, (uint64_t (*)(uint64_t))type metadata accessor for FieldCell, (uint64_t)&unk_1BC2C6D84);
  result = sub_1BC2B2930();
  *v13 = result;
  v13[1] = v15;
  *v9 = v18;
  v9[1] = v19;
  *v10 = v17;
  v10[1] = v6;
  *(_QWORD *)(a1 + v8[7]) = 0x4046000000000000;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  *(_BYTE *)(a1 + v8[9]) = 1;
  *(_BYTE *)(a1 + v8[8]) = 1;
  *(_QWORD *)(a1 + v8[12]) = 0;
  *v12 = 0;
  v12[1] = 0;
  v16 = (uint64_t (**)())(a1 + v8[13]);
  *v16 = sub_1BC1ADB3C;
  v16[1] = (uint64_t (*)())v7;
  *(_BYTE *)(a1 + v8[11]) = 0;
  return result;
}

uint64_t sub_1BC1AC320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BC1AD8A4();
  v2 = *(_QWORD *)(v1 - 8);
  v13 = v1;
  v14 = v2;
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1ADA3C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v0 + qword_1EF3FD480);
  v10 = v16;
  sub_1BC1AD7F8(0, &qword_1EF3FD530, (uint64_t)&qword_1EF3FD538, (uint64_t)sub_1BC1AD868, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E7998);
  sub_1BC1AD868();
  sub_1BC1AD96C();
  swift_retain();
  sub_1BC2B3FC8();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FD560, (uint64_t (*)(uint64_t))sub_1BC1ADA3C, MEMORY[0x1E0C95708]);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v15 = *(_QWORD *)(v0 + qword_1EF3FD478);
  v16 = v10;
  sub_1BC1AD7F8(0, (unint64_t *)&qword_1EF3F93F8, (uint64_t)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E2130);
  sub_1BC1AD9D4();
  sub_1BC2B3FF8();
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FD568, (uint64_t (*)(uint64_t))sub_1BC1AD8A4, MEMORY[0x1E0C95698]);
  v11 = v13;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v11);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC1AC614()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BC2B92D0;
    *(_QWORD *)(v2 + 56) = type metadata accessor for FieldItem();
    *(_QWORD *)(v2 + 64) = sub_1BC0E519C(&qword_1EF3FCB80, (uint64_t (*)(uint64_t))type metadata accessor for FieldItem, (uint64_t)&protocol conformance descriptor for FieldItem);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 + 32));
    sub_1BC1AC124((uint64_t)boxed_opaque_existential_1);
    sub_1BC2B2C24();
    swift_bridgeObjectRelease();
    swift_retain();
    v4 = swift_bridgeObjectRetain();
    sub_1BC1AD5F8(v4, v1);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BC2B2C24();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC1AC758(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  BOOL v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)a1)
    v3 = v2 == 0;
  else
    v3 = 1;
  if (v3)
    goto LABEL_6;
  v5 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v5 = *(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
LABEL_6:
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (!result)
      return result;
    swift_retain();
    swift_release();
    sub_1BC2B3EC0();
  }
  else
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (!result)
      return result;
    v6 = v1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    v7 = v6;
    sub_1BC2B3EC0();
    swift_bridgeObjectRelease();

  }
  return swift_release();
}

uint64_t sub_1BC1AC8A4()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BC2B3EC0();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1BC1AC940@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - v3;
  v5 = sub_1BC2B2BC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B2C0C();
  result = sub_1BC2B25F4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(_QWORD *)(v9 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * result, v5);
  swift_bridgeObjectRelease();
  sub_1BC2B2BB8();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v12)
  {
    v13 = sub_1BC2B2D68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    v14 = sub_1BC2B2D80();
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
    a1[3] = v14;
    a1[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v15, MEMORY[0x1E0D2B310]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1BC2B2D74();
  }
  else
  {
    v16 = sub_1BC2B296C();
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a1[3] = v16;
    a1[4] = sub_1BC0E519C(&qword_1EF3F8B68, v17, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1BC2B2960();
  }
}

uint64_t sub_1BC1ACB40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  char *v28;
  void (*v29)(uint64_t *, _QWORD);
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  void (*v36)(uint64_t *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  id v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD v52[3];
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v3 = v2;
  v67 = a2;
  v5 = sub_1BC2B2FA8();
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)v52 - v9;
  v10 = sub_1BC2B2C6C();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x1E0C80A78](v10);
  v62 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B3A34();
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v7);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v52 - v16;
  v56 = sub_1BC2B3A58();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC2B3CD4();
  v68 = *(_QWORD *)(v20 - 8);
  v69 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3C80();
  sub_1BC2B3278();
  sub_1BC2B326C();
  v23 = (void *)sub_1BC2B3248();
  swift_release();
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F8D8]), sel_initWithHealthStore_, v23);

  v25 = objc_msgSend(v24, sel_localizedDisplayNameForUnit_value_nameContext_, a1, 0, 1);
  v26 = sub_1BC2B4460();

  swift_bridgeObjectRetain();
  v55 = v26;
  sub_1BC2B3C98();
  v53 = (id)objc_opt_self();
  v27 = objc_msgSend(v53, sel_labelColor);
  v28 = v22;
  v29 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v29(&v72, 0);
  v61 = v3;
  sub_1BC2B3ED8();
  v30 = (void *)v72;
  if (v72)
  {
    sub_1BC1AD868();
    v31 = a1;
    v32 = v30;
    sub_1BC2B4D84();

  }
  v72 = 0x5F6D657469;
  v73 = 0xE500000000000000;
  v33 = objc_msgSend(a1, sel_unitString);
  sub_1BC2B4460();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v52[2] = v72;
  v52[1] = v73;
  v34 = v69;
  v74 = v69;
  v75 = MEMORY[0x1E0DC2398];
  v35 = __swift_allocate_boxed_opaque_existential_1(&v72);
  v36 = *(void (**)(uint64_t *, char *, uint64_t))(v68 + 16);
  v52[0] = v28;
  v36(v35, v28, v34);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v37 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v17, 1, 1, v37);
  sub_1BC2B3A4C();
  v39 = v57;
  v38 = v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v14, *MEMORY[0x1E0DC1C20], v58);
  sub_1BC2B3AC4();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v38);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v56);
  v40 = swift_allocObject();
  v41 = v61;
  swift_weakInit();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v40;
  *(_QWORD *)(v42 + 24) = a1;
  v43 = v62;
  *v62 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v59 + 104))(v43, *MEMORY[0x1E0D2B168], v60);
  v44 = a1;
  swift_retain();
  v45 = v63;
  sub_1BC2B3B24();
  v46 = objc_msgSend(v53, sel_secondarySystemBackgroundColor);
  sub_1BC2B3B18();
  v47 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v45, 0, 1, v47);
  v48 = v41 + qword_1EF3FD470;
  v49 = *(_QWORD *)(v41 + qword_1EF3FD470);
  v50 = *(_QWORD *)(v48 + 8);
  v70 = 0x6C654374696E552ELL;
  v71 = 0xEA00000000002E6CLL;
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v70 = v49;
  v71 = v50;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v66, *MEMORY[0x1E0D2B8C8], v65);
  sub_1BC2B2D8C();
  (*(void (**)(_QWORD, uint64_t))(v68 + 8))(v52[0], v69);
  return swift_release();
}

uint64_t sub_1BC1AD200(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;
  id v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    v5 = a3;
    sub_1BC2B3EC0();

    return swift_release();
  }
  return result;
}

void sub_1BC1AD294()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1AD2C0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1AD330()
{
  sub_1BC2B2C60();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1AD3C0()
{
  return type metadata accessor for ManualStrengthDataSource();
}

uint64_t sub_1BC1AD3C8()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  type metadata accessor for FieldCell();
  sub_1BC0E519C(&qword_1EF4020C0, (uint64_t (*)(uint64_t))type metadata accessor for FieldCell, (uint64_t)&unk_1BC2C6D84);
  sub_1BC2B497C();
  type metadata accessor for SelectionOptionsCell();
  sub_1BC0E519C(&qword_1EF3FD520, (uint64_t (*)(uint64_t))type metadata accessor for SelectionOptionsCell, (uint64_t)&protocol conformance descriptor for SelectionOptionsCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1AD46C()
{
  return swift_retain();
}

unint64_t sub_1BC1AD47C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC1AC940(a1);
}

uint64_t sub_1BC1AD49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2C9C();
  v4 = sub_1BC267620();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC1AD528()
{
  sub_1BC0E519C(&qword_1EF3FD528, (uint64_t (*)(uint64_t))type metadata accessor for ManualStrengthDataSource, (uint64_t)&unk_1BC2BF7C0);
  return sub_1BC2B3074();
}

uint64_t sub_1BC1AD584()
{
  return sub_1BC0E519C(&qword_1EF3FD4E0, (uint64_t (*)(uint64_t))type metadata accessor for ManualStrengthDataSource, (uint64_t)&unk_1BC2BF790);
}

unint64_t sub_1BC1AD5B4()
{
  unint64_t result;

  result = qword_1EF3FD4E8;
  if (!qword_1EF3FD4E8)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BA254, &type metadata for StrengthStepResult);
    atomic_store(result, (unint64_t *)&qword_1EF3FD4E8);
  }
  return result;
}

uint64_t sub_1BC1AD5F8(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v20[2] = a2;
  if (a1 >> 62)
    goto LABEL_15;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    if (!v5)
      return v6;
    v24 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC125B04(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
      break;
    v20[1] = v3;
    v8 = 0;
    v6 = v24;
    while (v5 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCEE950](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v22 = sub_1BC2B2D98();
      v23 = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
      sub_1BC1ACB40(v10, (uint64_t)boxed_opaque_existential_1);

      v24 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
        sub_1BC125B04(v12 > 1, v13 + 1, 1);
      ++v8;
      v14 = v22;
      v15 = v23;
      v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
      v3 = v20;
      MEMORY[0x1E0C80A78](v16);
      v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v18);
      sub_1BC2241D0(v13, (uint64_t)v18, &v24, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
      v6 = v24;
      if (v5 == v8)
        return v6;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1BC1AD7F8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4, MEMORY[0x1E0DEB940]);
    v6 = sub_1BC2B3EE4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BC1AD868()
{
  unint64_t result;

  result = qword_1EF3FD540;
  if (!qword_1EF3FD540)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FD540);
  }
  return result;
}

void sub_1BC1AD8A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FD548)
  {
    sub_1BC1AD7F8(255, &qword_1EF3FD530, (uint64_t)&qword_1EF3FD538, (uint64_t)sub_1BC1AD868, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E7998);
    sub_1BC1AD7F8(255, (unint64_t *)&qword_1EF3F93F8, (uint64_t)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E2130);
    sub_1BC1AD96C();
    sub_1BC1AD9D4();
    v0 = sub_1BC2B3D64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FD548);
  }
}

unint64_t sub_1BC1AD96C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FD550;
  if (!qword_1EF3FD550)
  {
    sub_1BC1AD7F8(255, &qword_1EF3FD530, (uint64_t)&qword_1EF3FD538, (uint64_t)sub_1BC1AD868, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E7998);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FD550);
  }
  return result;
}

unint64_t sub_1BC1AD9D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9400;
  if (!qword_1EF3F9400)
  {
    sub_1BC1AD7F8(255, (unint64_t *)&qword_1EF3F93F8, (uint64_t)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E2130);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9400);
  }
  return result;
}

void sub_1BC1ADA3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FD558)
  {
    sub_1BC1AD7F8(255, &qword_1EF3FD530, (uint64_t)&qword_1EF3FD538, (uint64_t)sub_1BC1AD868, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC0E7998);
    sub_1BC1AD868();
    sub_1BC1AD96C();
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FD558);
  }
}

uint64_t sub_1BC1ADAD4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1ADAF8()
{
  return sub_1BC1AC614();
}

uint64_t sub_1BC1ADB00(uint64_t a1)
{
  return sub_1BC1AC758(a1);
}

uint64_t sub_1BC1ADB08()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC1ADB34(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC1AD200(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1BC1ADB3C()
{
  return sub_1BC1AC8A4();
}

uint64_t sub_1BC1ADB44()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MedicationSideEffectsItemCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1ADBC8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC1ADCA4();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t MedicationSideEffectsItemCell.item.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1ADCA4();
  return sub_1BC0F7954(a1);
}

void sub_1BC1ADCA4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v5, (uint64_t)v25);
  if (!v25[3])
  {
    sub_1BC0F7954((uint64_t)v25);
LABEL_6:
    sub_1BC2B39A4();
    v11 = v0;
    v12 = sub_1BC2B39D4();
    v13 = sub_1BC2B48C8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v23 = v1;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc();
      v24 = v16;
      *(_DWORD *)v15 = 136446210;
      sub_1BC0E5774(v5, (uint64_t)v25);
      sub_1BC0E84E8();
      v17 = sub_1BC2B4490();
      v25[0] = sub_1BC12540C(v17, v18, &v24);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v12, v13, "Incorrect view model for MedicationSideEffectsItem: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v16, -1, -1);
      MEMORY[0x1BCCEF3A0](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1BC0E1B94();
  type metadata accessor for MedicationSideEffectsItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v6 = v24;
  v7 = sub_1BC1AE138();
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v8);

  v9 = sub_1BC1AE284();
  if (*(_QWORD *)(v6 + 56))
  {
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v9, sel_setText_, v10);

  v19 = sub_1BC1AE284();
  if (*(_QWORD *)(v6 + 56)
    && (swift_bridgeObjectRetain(), sub_1BC2B44CC(), v21 = v20, swift_bridgeObjectRelease(), v21))
  {
    swift_bridgeObjectRelease();
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  objc_msgSend(v19, sel_setHidden_, v22);
  swift_release();

}

void (*MedicationSideEffectsItemCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1AE034;
}

void sub_1BC1AE034(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC1ADCA4();
}

id sub_1BC1AE064()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 16.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1AE138()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v3 = v5;
    v7 = (void *)sub_1BC2B4580();
    v8 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v8);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC1AE284()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v3 = v5;
    v8 = (void *)sub_1BC2B4580();
    v9 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC1AE40C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  _QWORD v46[2];
  objc_super v47;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_1BC2B3CD4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel] = 0;
  v47.receiver = v4;
  v47.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v47, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 0);
  v16 = sub_1BC1AE064();
  v17 = sub_1BC1AE138();
  objc_msgSend(v16, sel_addArrangedSubview_, v17);

  v18 = sub_1BC1AE064();
  v19 = sub_1BC1AE284();
  objc_msgSend(v18, sel_addArrangedSubview_, v19);

  v20 = objc_msgSend(v15, sel_contentView);
  v21 = sub_1BC1AE064();
  objc_msgSend(v20, sel_addSubview_, v21);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v30 = sub_1BC1AE064();
  v31 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v30, sel_hk_alignHorizontalConstraintsWithView_insets_, v31, v23, v25, v27, v29);

  v32 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BC2B92B0;
  v34 = sub_1BC1AE064();
  v35 = objc_msgSend(v34, sel_topAnchor);

  v36 = objc_msgSend(v15, sel_contentView);
  v37 = objc_msgSend(v36, sel_topAnchor);

  v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, 16.0);
  *(_QWORD *)(v33 + 32) = v38;
  v39 = sub_1BC1AE064();
  v40 = objc_msgSend(v39, sel_bottomAnchor);

  v41 = objc_msgSend(v15, sel_contentView);
  v42 = objc_msgSend(v41, sel_bottomAnchor);

  v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v42, -16.0);
  *(_QWORD *)(v33 + 40) = v43;
  v46[1] = v33;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v44 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v44);

  return v15;
}

id MedicationSideEffectsItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1AE938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1AE988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1ADCA4();
  return sub_1BC0F7954(a1);
}

void (*sub_1BC1AE9F4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1AE034;
}

uint64_t sub_1BC1AEA3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t type metadata accessor for MedicationSideEffectsItem()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationSideEffectsItemCell()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for MedicationSideEffectsItemCell.Constants()
{
  return &type metadata for MedicationSideEffectsItemCell.Constants;
}

uint64_t sub_1BC1AEAE4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1BC1AEB10(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + qword_1EF3FD668);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1AEB78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + qword_1EF3FD668);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1AEBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + qword_1EF3FD668);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC1AEC28())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id InteractionFactorsViewController.__allocating_init()()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return InteractionFactorsViewController.init()();
}

id InteractionFactorsViewController.init()()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (uint64_t *)&v0[qword_1EF3FD668];
  v7 = sub_1BC2B4460();
  v8 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v8;
  v4 = v0;
  swift_bridgeObjectRelease();
  *v1 = v7;
  v1[1] = v3;

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for InteractionFactorsViewController();
  return objc_msgSendSuper2(&v6, sel_initWithCollectionViewLayout_, 0);
}

uint64_t type metadata accessor for InteractionFactorsViewController()
{
  uint64_t result;

  result = qword_1EF3FD678;
  if (!qword_1EF3FD678)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC1AED8C(char *a1, uint64_t a2, void *a3)
{
  uint64_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v5 = (uint64_t *)&a1[qword_1EF3FD668];
  v8 = sub_1BC2B4460();
  v9 = v6;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v7 = a3;
  swift_bridgeObjectRelease();
  *v5 = v8;
  v5[1] = v9;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC1AEE60()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for InteractionFactorsDataSourceProvider();
  v2 = swift_allocObject();
  v10 = v1;
  v11 = sub_1BC0E519C(&qword_1EF3FD670, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsDataSourceProvider, (uint64_t)&unk_1BC2C1238);
  v9 = v2;
  sub_1BC2B3008();
  v3 = objc_msgSend(v0, sel_navigationItem);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonTapped_);
  objc_msgSend(v3, sel_setLeftBarButtonItem_, v4);

  v5 = objc_msgSend(v0, sel_navigationItem);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped_);
  objc_msgSend(v5, sel_setRightBarButtonItem_, v6);

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for InteractionFactorsViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC1AF034();
  return swift_bridgeObjectRelease();
}

void sub_1BC1AF000(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC1AEE60();

}

void sub_1BC1AF034()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_navigationItem);
  v3 = objc_msgSend(v2, sel_leftBarButtonItem);

  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v4 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  }
  v5 = objc_msgSend(v1, sel_navigationItem);
  v6 = objc_msgSend(v5, sel_rightBarButtonItem);

  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v7 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

  }
}

uint64_t sub_1BC1AF1D0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC10ADC0(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC1AF280(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1BC2B5024();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

id sub_1BC1AF2F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v1 = sub_1BC2B42E0();
  v18 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC2B4304();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B42EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF530], v7);
  v11 = (void *)sub_1BC2B4A30();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_1BC1AF954;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_12;
  v13 = _Block_copy(aBlock);
  v14 = v0;
  sub_1BC2B42F8();
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E5148();
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFE0, (uint64_t (*)(uint64_t))sub_1BC0E5148, MEMORY[0x1E0DEAF38]);
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v6, v3, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  swift_release();
  return objc_msgSend(v14, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1BC1AF57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BC2B2FD8();
  v0 = sub_1BC2B2DE0();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = v0 + 32;
    type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
    do
    {
      if (swift_dynamicCastClass())
      {
        swift_unknownObjectRetain();
        sub_1BC16F4F0();
        swift_unknownObjectRelease();
      }
      v2 += 16;
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1AF61C(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1BC2B5024();
  swift_unknownObjectRelease();
  sub_1BC1AF2F0();

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

void InteractionFactorsViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionFactorsViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionFactorsViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionFactorsViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC1AF73C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1AF76C()
{
  return swift_bridgeObjectRelease();
}

id InteractionFactorsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1AF7B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + qword_1EF3FD668);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC1AF80C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsViewController.baseIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 8))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.baseIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 16))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.baseIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 24))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController + v0 + 32))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 40))();
}

uint64_t sub_1BC1AF914()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1AF928()
{
  return type metadata accessor for InteractionFactorsViewController();
}

uint64_t sub_1BC1AF930()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC1AF954()
{
  return sub_1BC1AF57C();
}

uint64_t Collection<>.loggedDoseEvents.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  return sub_1BC2B455C();
}

BOOL sub_1BC1AF9EC()
{
  void *v0;
  id v1;
  void *v3;
  id v4;

  v0 = (void *)sub_1BC2B3398();
  v1 = objc_msgSend(v0, sel_status);

  if (v1 == (id)4)
    return 1;
  v3 = (void *)sub_1BC2B3398();
  v4 = objc_msgSend(v3, sel_status);

  return v4 == (id)5;
}

uint64_t sub_1BC1AFA6C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = sub_1BC2B356C();
  v3 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x1E0C80A78](v38);
  v37 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)v30 - v6;
  v7 = sub_1BC2B3440();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v31 = a1;
    v32 = v1;
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1BC125CB8(0, v8, 0);
    v9 = *(unsigned __int8 *)(v3 + 80);
    v30[1] = v7;
    v10 = v7 + ((v9 + 32) & ~v9);
    v34 = *(_QWORD *)(v3 + 72);
    v35 = v3;
    v33 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v12 = v36;
    v11 = v37;
    do
    {
      v13 = v38;
      v14 = v33;
      v33(v12, (char *)v10, v38);
      v14(v11, v12, v13);
      v15 = (void *)sub_1BC2B3560();
      v16 = objc_msgSend(v15, sel_semanticIdentifier);

      v17 = objc_msgSend(v16, sel_stringValue);
      v18 = sub_1BC2B4460();
      v39 = v19;
      v40 = v18;

      v20 = sub_1BC2B3548();
      v22 = v21;
      v23 = *(void (**)(char *, uint64_t))(v35 + 8);
      v23(v11, v13);
      v23(v12, v13);
      v24 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125CB8(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v41;
      }
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BC125CB8(v25 > 1, v26 + 1, 1);
        v24 = v41;
      }
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v27 = (_QWORD *)(v24 + 32 * v26);
      v28 = v39;
      v27[4] = v40;
      v27[5] = v28;
      v27[6] = v20;
      v27[7] = v22;
      v10 += v34;
      --v8;
    }
    while (v8);
    result = swift_bridgeObjectRelease();
    a1 = v31;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  *a1 = v24;
  return result;
}

unint64_t sub_1BC1AFCD4()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  type metadata accessor for MedicationLogDetailsTimeItem(0);
  sub_1BC236B0C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

id sub_1BC1AFD60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView);
  }
  else
  {
    type metadata accessor for MedicationLogDetailsTimeView(0);
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC1AFDE8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  char *v14;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FD768, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeItem);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  v8 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v12, (uint64_t)v28, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v28[3])
  {
    sub_1BC0E1B94();
    v13 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1BC1B1730((uint64_t)v7, (uint64_t)v11);
      v14 = (char *)sub_1BC1AFD60();
      *(_QWORD *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_viewModel] = *(_QWORD *)&v11[*(int *)(v8 + 20)];
      swift_retain_n();
      swift_release();
      sub_1BC1B08F8();

      swift_release();
      return sub_1BC1B1774((uint64_t)v11);
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v28, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3FD768, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeItem);
  sub_1BC2B39A4();
  v16 = v0;
  v17 = sub_1BC2B39D4();
  v18 = sub_1BC2B48C8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v26 = v1;
    v27 = v20;
    v21 = v20;
    v25 = v2;
    *(_DWORD *)v19 = 136315138;
    v24 = v19 + 4;
    sub_1BC0E1CB0(v12, (uint64_t)v28, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v22 = sub_1BC2B4490();
    v28[0] = sub_1BC12540C(v22, v23, &v27);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v17, v18, "Incorrect view model for MedicationLogDetailsTimeItem: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v21, -1, -1);
    MEMORY[0x1BCCEF3A0](v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_1BC1B0194(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  objc_super v30;

  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView] = 0;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item];
  v14 = (objc_class *)type metadata accessor for MedicationLogDetailsTimeCell();
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v30.receiver = v4;
  v30.super_class = v14;
  v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = sub_1BC1AFD60();
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v17 = objc_msgSend(v15, sel_contentView);
  v18 = sub_1BC1AFD60();
  objc_msgSend(v17, sel_addSubview_, v18);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v27 = sub_1BC1AFD60();
  v28 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v27, sel_hk_alignConstraintsWithView_insets_, v28, v20, v22, v24, v26);

  return v15;
}

id sub_1BC1B0410(uint64_t a1)
{
  return sub_1BC156ED4(a1, type metadata accessor for MedicationLogDetailsTimeCell);
}

uint64_t type metadata accessor for MedicationLogDetailsTimeCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1B0488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC1B04E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item;
  swift_beginAccess();
  sub_1BC1B17B0(a1, v3, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  swift_endAccess();
  sub_1BC1AFDE8();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC1B057C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1B05C4;
}

uint64_t sub_1BC1B05C4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1AFDE8();
  return result;
}

uint64_t sub_1BC1B05F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2BFA88, a3);
  return sub_1BC2B2B34();
}

id sub_1BC1B0658()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___timeFormatter;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___timeFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___timeFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    objc_msgSend(v4, sel_setDateStyle_, 0);
    objc_msgSend(v4, sel_setTimeStyle_, 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC1B06F0(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v17;

  v3 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - v5;
  v7 = sub_1BC2B23F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_logDate;
  swift_beginAccess();
  sub_1BC1B17B0(a1, v11, (unint64_t *)&qword_1EDA0E710, v3);
  swift_endAccess();
  sub_1BC0E1CB0(v11, (uint64_t)v6, (unint64_t *)&qword_1EDA0E710, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = sub_1BC1B0D70();
    v13 = sub_1BC1B0658();
    v14 = (void *)sub_1BC2B2360();
    v15 = objc_msgSend(v13, sel_stringFromDate_, v14);

    if (!v15)
    {
      sub_1BC2B4460();
      v15 = (id)sub_1BC2B4430();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v12, sel_setText_, v15);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1BC1B08F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x1E0C80A78](v2);
  v7 = &v16[-v6];
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_viewModel);
  if (v8)
  {
    swift_retain();
    v9 = sub_1BC1B0B8C();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v10 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v11 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v11);

    v12 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_logDate;
    swift_beginAccess();
    sub_1BC0E1CB0(v12, (uint64_t)v7, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v13 = sub_1BC2B23F0();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {
      sub_1BC0E1CFC((uint64_t)v7, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v15 = v8 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v4, v15, v13);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
      sub_1BC1B06F0((uint64_t)v4);
      return swift_release();
    }
    else
    {
      swift_release();
      return sub_1BC0E1CFC((uint64_t)v7, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
  }
  return result;
}

id sub_1BC1B0B8C()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1BC1B0BA0);
}

id sub_1BC1B0BA0()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  v7 = sub_1BC2B4460();
  v8 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v7, v8);

  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v3, sel_setFont_, v5);

  return v3;
}

id sub_1BC1B0D70()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___logTimeLabel, (uint64_t (*)(void))sub_1BC1B0D84);
}

id sub_1BC1B0D84()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v9;
  uint64_t v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  sub_1BC0E1D38(0, qword_1EF3FD770);
  objc_msgSend(v0, sel_setTextAlignment_, 2 * (MEMORY[0x1BCCEE020]() != 1));
  v9 = sub_1BC2B4460();
  v10 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v10);

  v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  v7 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  return v4;
}

void sub_1BC1B0FD8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v2 + 32) = sub_1BC1B0B8C();
  *(_QWORD *)(v2 + 40) = sub_1BC1B0D70();
  sub_1BC2B45A4();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 0.0);
  objc_msgSend(v1, sel_addSubview_, v5);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = objc_msgSend(v5, sel_topAnchor);
  v7 = objc_msgSend(v1, sel_topAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  objc_msgSend(v8, sel_setActive_, 1);
  v9 = objc_msgSend(v5, sel_leadingAnchor);
  v10 = objc_msgSend(v1, sel_leadingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  objc_msgSend(v11, sel_setActive_, 1);
  v12 = objc_msgSend(v5, sel_trailingAnchor);
  v13 = objc_msgSend(v1, sel_trailingAnchor);
  if (qword_1EF3F8108 != -1)
    swift_once();
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -*(double *)&qword_1EF3FD6D0);

  objc_msgSend(v14, sel_setActive_, 1);
  v15 = objc_msgSend(v5, sel_bottomAnchor);
  v16 = objc_msgSend(v1, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  objc_msgSend(v17, sel_setActive_, 1);
  v18 = sub_1BC1B0B8C();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v19 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v20 = (id)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setText_, v20, 0xE000000000000000);

}

id sub_1BC1B15B4()
{
  return sub_1BC156ED4(0, (uint64_t (*)(void))type metadata accessor for MedicationLogDetailsTimeView);
}

uint64_t sub_1BC1B163C()
{
  return type metadata accessor for MedicationLogDetailsTimeView(0);
}

uint64_t type metadata accessor for MedicationLogDetailsTimeView(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FD750);
}

void sub_1BC1B1658()
{
  unint64_t v0;

  sub_1BC0E1C64(319, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for MedicationLogDetailsTimeItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FD7D0);
}

double sub_1BC1B16F8()
{
  double v0;
  double result;

  sub_1BC2B2F00();
  sub_1BC2B2EF4();
  result = v0 * 0.5;
  qword_1EF3FD6D0 = *(_QWORD *)&result;
  return result;
}

uint64_t sub_1BC1B1730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1B1774(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC1B17B0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC0E1C64(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

uint64_t *sub_1BC1B17FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC1B18A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1B18F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC1B196C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1B1A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BC1B1A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1B1AE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1B1AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC1B1B70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1B1B7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC1B1BF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC1B1C74()
{
  return sub_1BC0E519C((unint64_t *)&unk_1EF3FD810, type metadata accessor for MedicationLogDetailsTimeItem, (uint64_t)&unk_1BC2BFAF8);
}

__n128 sub_1BC1B1CA0()
{
  __n128 result;

  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EF4028A0 = (__int128)result;
  unk_1EF4028B0 = result;
  return result;
}

uint64_t sub_1BC1B1CB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];

  sub_1BC0E5774(a1, (uint64_t)v6);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  v4 = MEMORY[0x1E0D2A060];
  sub_1BC1B4338((uint64_t)v6, v3, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
  swift_endAccess();
  sub_1BC1B3734();
  return sub_1BC18C5BC((uint64_t)v6, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, v4);
}

uint64_t sub_1BC1B1D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1B1DB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  v4 = MEMORY[0x1E0D2A060];
  sub_1BC1B4338(a1, v3, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
  swift_endAccess();
  sub_1BC1B3734();
  return sub_1BC18C5BC(a1, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, v4);
}

void (*sub_1BC1B1E58(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1B1EA0;
}

void sub_1BC1B1EA0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC1B3734();
}

id sub_1BC1B1ED0(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  v10 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC1B2A8C();
  sub_1BC1B2D5C();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2B92D0;
  v12 = sub_1BC2B3D40();
  v13 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v10;
}

id sub_1BC1B209C(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t sub_1BC1B2180()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  objc_msgSendSuper2(&v5, sel_awakeFromNib);
  sub_1BC1B2A8C();
  sub_1BC1B2D5C();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92D0;
  v2 = sub_1BC2B3D40();
  v3 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC1B22A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    type metadata accessor for InteractionCriticalAlertCell();
    if ((sub_1BC2B4A78() & 1) == 0)
      sub_1BC1B2D5C();

  }
}

uint64_t sub_1BC1B230C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  id v18;
  objc_super v19;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v19 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = (void *)sub_1BC2B3AE8();
  v12 = (objc_class *)type metadata accessor for InteractionCriticalAlertCell();
  v19.receiver = v1;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1BCCEE230]();
    v13 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_1BC1640DC((uint64_t)v10, (uint64_t)v8);
      MEMORY[0x1BCCEE23C](v8);
      v14 = (uint64_t)v10;
      return sub_1BC164138(v14);
    }
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D00();
    sub_1BC2B3B18();
    v17 = v10;
  }
  else
  {
    MEMORY[0x1BCCEE230]();
    v15 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15))
    {
      sub_1BC1640DC((uint64_t)v5, (uint64_t)v8);
      MEMORY[0x1BCCEE23C](v8);
      v14 = (uint64_t)v5;
      return sub_1BC164138(v14);
    }
    v18 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_1BC2B3B18();
    v17 = v5;
  }
  return MEMORY[0x1BCCEE23C](v17);
}

char *sub_1BC1B25A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for InteractionStackedMedmojiView());
    v6 = InteractionStackedMedmojiView.init(width:)(36.0);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC1B2634()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___dismissLabel, (uint64_t (*)(void))sub_1BC161DD8);
}

id sub_1BC1B2648()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton);
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v4 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B2144();
    v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0xD000000000000014, 0x80000001BC2C76D0);
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC1B277C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v14 = sub_1BC2B4460();
    v15 = v7;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v8, sel_setTextColor_, v10);

    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC1B29A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC1B2A78()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___learnMoreLabel, (uint64_t (*)(void))sub_1BC16261C);
}

uint64_t sub_1BC1B2A8C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - v3;
  v5 = sub_1BC2B3B48();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3B24();
  v9 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  sub_1BC2B3B18();
  v30 = v5;
  v31 = v6;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1BCCEE23C](v4);
  v10 = sub_1BC1B25A8();
  v11 = sub_1BC1B2634();
  v12 = sub_1BC1B2648();
  v13 = sub_1BC1B277C();
  v14 = sub_1BC1B29A0();
  v29 = sub_1BC1B2A78();
  v15 = v10;
  v16 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v16, sel_addSubview_, v15);

  v17 = v11;
  v18 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v18, sel_addSubview_, v17);

  v19 = v12;
  v20 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v20, sel_addSubview_, v19);

  v21 = v13;
  v22 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v22, sel_addSubview_, v21);

  v23 = v14;
  v24 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v24, sel_addSubview_, v23);

  v25 = v29;
  v26 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, v25);

  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v8, v30);
}

void sub_1BC1B2D5C()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  char *v92;
  id v93;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v92 = (char *)OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_activeConstraints;
  v3 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v91 = v3;
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  sub_1BC0E7940();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC2BFB90;
  v6 = sub_1BC1B25A8();
  v7 = objc_msgSend(v6, sel_leadingAnchor);

  v8 = objc_msgSend(v1, sel_contentView);
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  if (qword_1EF3F8110 != -1)
    swift_once();
  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, *((double *)&xmmword_1EF4028A0 + 1), v91);

  *(_QWORD *)(v5 + 32) = v10;
  v11 = sub_1BC1B25A8();
  v12 = objc_msgSend(v11, sel_topAnchor);

  v13 = sub_1BC1B277C();
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(_QWORD *)(v5 + 40) = v15;
  v16 = sub_1BC1B2634();
  v17 = objc_msgSend(v16, sel_trailingAnchor);

  v18 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v19 = objc_msgSend(v18, sel_trailingAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -*(double *)&qword_1EF4028B8);
  *(_QWORD *)(v5 + 48) = v20;
  v21 = sub_1BC1B2634();
  v22 = objc_msgSend(v21, sel_topAnchor);

  v23 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v24 = objc_msgSend(v23, sel_topAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, *(double *)&qword_1EF4028B8);
  *(_QWORD *)(v5 + 56) = v25;
  v26 = sub_1BC1B2648();
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  v28 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v29 = objc_msgSend(v28, (SEL)&ShapeCell.base_props + 6);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, *((double *)&xmmword_1EF4028A0 + 1));
  *(_QWORD *)(v5 + 64) = v30;
  v31 = sub_1BC1B2648();
  v32 = objc_msgSend(v31, sel_trailingAnchor);

  v33 = sub_1BC1B2634();
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  v35 = objc_msgSend(v32, sel_constraintLessThanOrEqualToAnchor_constant_, v34, *(double *)&qword_1EF4028B8);
  *(_QWORD *)(v5 + 72) = v35;
  v36 = sub_1BC1B2648();
  v37 = objc_msgSend(v36, sel_topAnchor);

  v38 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v39 = objc_msgSend(v38, sel_topAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, *(double *)&xmmword_1EF4028A0);
  *(_QWORD *)(v5 + 80) = v40;
  v41 = sub_1BC1B277C();
  v42 = objc_msgSend(v41, sel_leadingAnchor);

  v43 = sub_1BC1B25A8();
  v44 = objc_msgSend(v43, sel_trailingAnchor);

  v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, *((double *)&xmmword_1EF4028A0 + 1));
  *(_QWORD *)(v5 + 88) = v45;
  v46 = sub_1BC1B277C();
  v47 = objc_msgSend(v46, sel_trailingAnchor);

  v48 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v49 = objc_msgSend(v48, sel_trailingAnchor);

  v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, -*(double *)&qword_1EF4028B8);
  *(_QWORD *)(v5 + 96) = v50;
  v51 = sub_1BC1B277C();
  v52 = objc_msgSend(v51, sel_topAnchor);

  v53 = sub_1BC1B2648();
  v54 = objc_msgSend(v53, sel_bottomAnchor);

  v55 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v54, 12.0);
  *(_QWORD *)(v5 + 104) = v55;
  v56 = sub_1BC1B29A0();
  v57 = objc_msgSend(v56, sel_leadingAnchor);

  v58 = sub_1BC1B277C();
  v59 = objc_msgSend(v58, sel_leadingAnchor);

  v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v59);
  *(_QWORD *)(v5 + 112) = v60;
  v61 = sub_1BC1B29A0();
  v62 = objc_msgSend(v61, sel_trailingAnchor);

  v63 = objc_msgSend(v1, sel_contentView);
  v64 = objc_msgSend(v63, sel_trailingAnchor);

  v65 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v64);
  *(_QWORD *)(v5 + 120) = v65;
  v66 = sub_1BC1B29A0();
  v67 = objc_msgSend(v66, sel_topAnchor);

  v68 = sub_1BC1B277C();
  v69 = objc_msgSend(v68, sel_bottomAnchor);

  v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_constant_, v69, 12.0);
  *(_QWORD *)(v5 + 128) = v70;
  v71 = sub_1BC1B2A78();
  v72 = objc_msgSend(v71, sel_leadingAnchor);

  v73 = sub_1BC1B277C();
  v74 = objc_msgSend(v73, sel_leadingAnchor);

  v75 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v74);
  *(_QWORD *)(v5 + 136) = v75;
  v76 = sub_1BC1B2A78();
  v77 = objc_msgSend(v76, sel_trailingAnchor);

  v78 = objc_msgSend(v1, sel_contentView);
  v79 = objc_msgSend(v78, sel_trailingAnchor);

  v80 = objc_msgSend(v77, sel_constraintLessThanOrEqualToAnchor_, v79);
  *(_QWORD *)(v5 + 144) = v80;
  v81 = sub_1BC1B2A78();
  v82 = objc_msgSend(v81, sel_centerYAnchor);

  v83 = sub_1BC1B29A0();
  v84 = objc_msgSend(v83, sel_bottomAnchor);

  v85 = objc_msgSend(v82, sel_constraintEqualToAnchor_constant_, v84, 22.0);
  *(_QWORD *)(v5 + 152) = v85;
  v86 = objc_msgSend(v1, sel_contentView);
  v87 = objc_msgSend(v86, sel_bottomAnchor);

  v88 = sub_1BC1B29A0();
  v89 = objc_msgSend(v88, sel_bottomAnchor);

  v90 = objc_msgSend(v87, sel_constraintEqualToAnchor_constant_, v89, 44.0);
  *(_QWORD *)(v5 + 160) = v90;
  sub_1BC2B45A4();
  *(_QWORD *)&v92[(_QWORD)v1] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v93 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v93);

}

void sub_1BC1B3734()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  _QWORD *v38;
  uint64_t v39;
  id v40;
  uint64_t v41[3];
  _QWORD v42[5];

  v1 = v0;
  v2 = (_QWORD *)sub_1BC2B39E0();
  v3 = *(v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v6, (uint64_t)v42);
  if (!v42[3])
  {
    sub_1BC18C5BC((uint64_t)v42, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
LABEL_7:
    sub_1BC2B39A4();
    v29 = v1;
    v30 = sub_1BC2B39D4();
    v31 = sub_1BC2B48C8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v40 = v2;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc();
      v41[0] = v34;
      *(_DWORD *)v33 = 136446210;
      sub_1BC0E5774(v6, (uint64_t)v42);
      sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v35 = sub_1BC2B4490();
      v42[0] = sub_1BC12540C(v35, v36, v41);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v30, v31, "Incorrect view model for InteractionCriticalAlertItem: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v34, -1, -1);
      MEMORY[0x1BCCEF3A0](v33, -1, -1);

      (*(void (**)(char *, id))(v3 + 8))(v5, v40);
    }
    else
    {

      (*(void (**)(char *, _QWORD *))(v3 + 8))(v5, v2);
    }
    return;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for InteractionCriticalAlertItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_7;
  v7 = (_QWORD *)v41[0];
  v40 = sub_1BC1B277C();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v8 = (void *)qword_1EDA0FEF8;
  v39 = qword_1EDA0FF00;
  v37[1] = qword_1EDA0FF08;
  sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC2B92C0;
  v11 = v7[5];
  v10 = v7[6];
  v38 = v7 + 2;
  __swift_project_boxed_opaque_existential_0(v7 + 2, v11);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
  v13 = v8;
  swift_bridgeObjectRetain();
  v14 = v12(v11, v10);
  v16 = v15;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1BC0F2748();
  *(_QWORD *)(v9 + 64) = v18;
  *(_QWORD *)(v9 + 32) = v14;
  *(_QWORD *)(v9 + 40) = v16;
  v19 = v7[5];
  v20 = v7[6];
  __swift_project_boxed_opaque_existential_0(v7 + 2, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(v19, v20);
  *(_QWORD *)(v9 + 96) = v17;
  *(_QWORD *)(v9 + 104) = v18;
  *(_QWORD *)(v9 + 72) = v21;
  *(_QWORD *)(v9 + 80) = v22;
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v24 = v40;
  objc_msgSend(v40, sel_setText_, v23);

  v25 = sub_1BC1B25A8();
  v26 = v7[5];
  v27 = v7[6];
  __swift_project_boxed_opaque_existential_0(v38, v26);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v27 + 16))(v42, v26, v27);
  v28 = (uint64_t)&v25[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  swift_beginAccess();
  sub_1BC1B4338((uint64_t)v42, v28, &qword_1EF3F88F8, (unint64_t *)&qword_1EF3FD860, (uint64_t)&protocol descriptor for InteractionStackedMedmojiDisplayable);
  swift_endAccess();
  sub_1BC18068C();
  sub_1BC18C5BC((uint64_t)v42, &qword_1EF3F88F8, (unint64_t *)&qword_1EF3FD860, (uint64_t)&protocol descriptor for InteractionStackedMedmojiDisplayable);
  swift_release();

}

uint64_t type metadata accessor for InteractionCriticalAlertCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1B3C64()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC1B3C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1B22A4(a1, a2, v2);
}

void sub_1BC1B3DB4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  void *v15;
  objc_class *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  objc_super v28;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_bridgeObjectRetain();
  v9 = (void *)sub_1BC160F24(v8);
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_7;
  v10 = sub_1BC1B2634();
  v11 = MEMORY[0x1BCCEE41C](v9, v10, 36.0, 36.0);

  if ((v11 & 1) == 0)
  {

LABEL_7:
    sub_1BC0E1D38(0, &qword_1EF3FB3F8);
    sub_1BC16418C();
    v15 = (void *)sub_1BC2B47A8();
    v16 = (objc_class *)type metadata accessor for InteractionCriticalAlertCell();
    v28.receiver = v2;
    v28.super_class = v16;
    objc_msgSendSuper2(&v28, sel_touchesEnded_withEvent_, v15, a2);

    return;
  }
  v12 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v12, (uint64_t)v27);
  if (v27[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    type metadata accessor for InteractionCriticalAlertItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = *(void (**)(uint64_t))(v26 + 88);
      v14 = swift_retain();
      v13(v14);

      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    sub_1BC18C5BC((uint64_t)v27, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
  }
  sub_1BC2B39A4();
  v17 = v2;
  v18 = sub_1BC2B39D4();
  v19 = sub_1BC2B48C8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v20 = 136446210;
    v24[1] = v20 + 4;
    sub_1BC0E5774(v12, (uint64_t)v27);
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v21 = sub_1BC2B4490();
    v27[0] = sub_1BC12540C(v21, v22, &v26);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v18, v19, "Incorrect view model for InteractionCriticalAlertItem: %{public}s", v20, 0xCu);
    v23 = v25;
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v23, -1, -1);
    MEMORY[0x1BCCEF3A0](v20, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id InteractionCriticalAlertCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1B4280@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for InteractionCriticalAlertCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionCriticalAlertCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InteractionCriticalAlertCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InteractionCriticalAlertCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t sub_1BC1B4338(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  sub_1BC0F1278(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BC1B4394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v0 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InteractionFactorsInfoCell();
  sub_1BC0E519C(&qword_1EF3FD870, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsInfoCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsInfoCell);
  v14 = sub_1BC2B2930();
  v5 = v4;
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v15 = 0xD00000000000001BLL;
  v16 = 0x80000001BC2CF530;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = v15;
  v8 = v16;
  sub_1BC100284(0, (unint64_t *)&qword_1EF3F8C50, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  sub_1BC2B2BC4();
  v9 = swift_allocObject();
  v13 = xmmword_1BC2B92D0;
  *(_OWORD *)(v9 + 16) = xmmword_1BC2B92D0;
  sub_1BC100284(0, (unint64_t *)&qword_1EDA0FE38, (void (*)(uint64_t))sub_1BC0E1B94);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v13;
  *(_QWORD *)(v10 + 56) = &type metadata for InteractionFactorsInfoItem;
  *(_QWORD *)(v10 + 64) = sub_1BC1B48B4();
  v11 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v10 + 32) = v11;
  v11[2] = v14;
  v11[3] = v5;
  v11[4] = v7;
  v11[5] = v8;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v6(v3, v0);
  sub_1BC2B2BAC();
  return sub_1BC2B2750();
}

uint64_t sub_1BC1B45E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  sub_1BC2B4AF0();
  sub_1BC2B2D08();
  v4 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void InteractionFactorsInfoDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionFactorsInfoDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t InteractionFactorsInfoDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1B46F0()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionFactorsInfoDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionFactorsInfoDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for InteractionFactorsInfoCell();
  sub_1BC0E519C(&qword_1EF3FD870, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsInfoCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsInfoCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC1B4790()
{
  return sub_1BC0E519C(&qword_1EF3FD878, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsInfoDataSource, (uint64_t)&protocol conformance descriptor for InteractionFactorsInfoDataSource);
}

uint64_t type metadata accessor for InteractionFactorsInfoDataSource()
{
  uint64_t result;

  result = qword_1EF3FD880;
  if (!qword_1EF3FD880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1B47F8()
{
  type metadata accessor for InteractionFactorsInfoCell();
  sub_1BC0E519C(&qword_1EF3FD870, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsInfoCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsInfoCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1B484C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsInfoDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsInfoDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsInfoDataSource + *v0 + 8))();
}

uint64_t sub_1BC1B48AC()
{
  return type metadata accessor for InteractionFactorsInfoDataSource();
}

unint64_t sub_1BC1B48B4()
{
  unint64_t result;

  result = qword_1EF3FD8D0;
  if (!qword_1EF3FD8D0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionFactorsInfoItem, &type metadata for InteractionFactorsInfoItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FD8D0);
  }
  return result;
}

uint64_t sub_1BC1B48F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for DosagesPerDaySectionDataSource()
{
  uint64_t result;

  result = qword_1EF3FD910;
  if (!qword_1EF3FD910)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1B4960()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC1B4A1C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for Dosage();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_1BC0FC574(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v17 = a1(v12);
      if (v3)
      {
        sub_1BC0E8594((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_1BC109088((uint64_t)v12, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BC125E04(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1BC125E04(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_1BC109088(v23, v15 + v16 + v19 * v13);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_1BC0E8594((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1BC1B4C24(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for Dosage();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BC125E04(0, v10, 0);
    v11 = v21;
    v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = a3 + v18;
    v13 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BC125E04(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1BC109088((uint64_t)v9, v11 + v18 + v15 * v13);
      v12 += v13;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BC1B4D74(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BC2B5228();
    v9 = *(_QWORD *)(type metadata accessor for Dosage() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4)
        break;
      v4 = 0;
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
      v10 += v11;
      if (!--v6)
        return v13;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1B4E7C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  swift_getObjectType();
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B4F1C();
  v8 = v7;
  v10 = v9;
  v11 = v5;
  if (!v7 || !v5)
  {
    sub_1BC2B39B0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v12 = v0;
    v13 = sub_1BC2B39D4();
    v14 = sub_1BC2B48C8();
    v33 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v32 = v2;
      v16 = v15;
      v34 = (_QWORD *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v37 = v31;
      *(_DWORD *)v16 = 136315906;
      v29 = v13;
      v17 = sub_1BC2B54F8();
      v35 = sub_1BC12540C(v17, v18, &v37);
      v30 = v1;
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2112;
      v19 = objc_msgSend(v12, sel_identifier);
      v35 = (uint64_t)v19;
      sub_1BC2B4FD0();
      *v34 = v19;

      *(_WORD *)(v16 + 22) = 2080;
      v35 = v6;
      v36 = v8;
      sub_1BC0E8D78();
      swift_bridgeObjectRetain();
      v20 = sub_1BC2B4478();
      v35 = sub_1BC12540C(v20, v21, &v37);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 32) = 2080;
      v35 = v10;
      v36 = v11;
      swift_bridgeObjectRetain();
      v22 = sub_1BC2B4478();
      v35 = sub_1BC12540C(v22, v23, &v37);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v24 = v29;
      _os_log_impl(&dword_1BC0DC000, v29, (os_log_type_t)v33, "[%s] Missing logging dose form for concept with ID %@: Singular = %s, Plural = %s", (uint8_t *)v16, 0x2Au);
      sub_1BC0F66B0();
      v25 = v34;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v25, -1, -1);
      v26 = v31;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v26, -1, -1);
      MEMORY[0x1BCCEF3A0](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v30);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return 0;
  }
  return v6;
}

uint64_t sub_1BC1B5228(unint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for Dosage() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1BC135060(v3);
  v4 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1BC1B8FF4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1BC1B52AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  uint64_t result;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, char *, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];

  v4 = v3;
  v69 = a2;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v61 - v8;
  v70 = type metadata accessor for Dosage();
  v9 = MEMORY[0x1E0C80A78](v70);
  v76 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v64 = (uint64_t)&v61 - v12;
  MEMORY[0x1E0C80A78](v11);
  v65 = (uint64_t)&v61 - v13;
  v80 = sub_1BC2B2438();
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v79 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B23F0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v77 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v61 - v19;
  *(_QWORD *)(v3 + qword_1EF3FD8D8) = 0x3FF0000000000000;
  *(_QWORD *)(v3 + qword_1EF3FD8F8) = 0;
  v21 = (_QWORD *)(v3 + qword_1EF4028D0);
  v82[0] = sub_1BC2B4460();
  v82[1] = v22;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v23 = v82[0];
  v24 = v82[1];
  swift_retain();
  swift_bridgeObjectRelease();
  *v21 = v23;
  v21[1] = v24;
  *(_QWORD *)(v4 + qword_1EF3FD8E0) = a1;
  *(_QWORD *)(v4 + qword_1EF3FD8F0) = a3;
  *(_QWORD *)(v4 + qword_1EF3FD900) = 0;
  v25 = a1;
  v68 = a3;
  swift_retain();
  sub_1BC2B23E4();
  v73 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v74 = v20;
  v73(v4 + qword_1EF3FD908, v20, v15);
  v66 = v16;
  v67 = v25;
  if (v69)
  {
    v26 = v69;
    v27 = sub_1BC1B4E7C();
    v29 = v28;
    v31 = v30;
    v33 = v32;

  }
  else
  {
    v27 = 0;
    v29 = 0;
    v31 = 0;
    v33 = 0;
  }
  v34 = (uint64_t *)(v4 + qword_1EF3FD8E8);
  *v34 = v27;
  v34[1] = v29;
  v34[2] = v31;
  v34[3] = v33;
  swift_release();
  v82[0] = 0;
  v82[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v82, "MutableArray<");
  HIWORD(v82[1]) = -4864;
  v35 = v79;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v36 = *(void (**)(char *, uint64_t))(v78 + 8);
  v37 = v80;
  v36(v35, v80);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v38 = MEMORY[0x1E0DEE9D8];
  v39 = sub_1BC2B2C00();
  v40 = qword_1EF3FD8F0;
  swift_retain();
  sub_1BC2B3ED8();
  if (v82[0])
    v41 = v82[0];
  else
    v41 = v38;
  v42 = *(_QWORD *)(v41 + 16);
  swift_bridgeObjectRelease();
  if (!v42)
  {
    v63 = v40;
    v62 = v36;
    v71 = qword_1EF3FD900;
    v72 = v39 + qword_1EF3FD908;
    sub_1BC2B233C();
    v43 = v70;
    v44 = v66;
    v45 = v39;
    v46 = v76;
    v47 = *(void (**)(void))(v66 + 16);
    v48 = (char *)(v76 + *(int *)(v70 + 20));
    v47();
    sub_1BC2B242C();
    v81 = 0;
    v70 = *(int *)(v43 + 24);
    *(_QWORD *)(v46 + v70) = 0x3FF0000000000000;
    v49 = (void (*)(char *, char *, uint64_t))v73;
    while (1)
    {
      v50 = (uint64_t)v75;
      v51 = v48;
      ((void (*)(char *, char *, uint64_t))v47)(v75, v48, v15);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v50, 0, 1, v15);
      sub_1BC2B473C();
      v52 = v46;
      v39 = v45;
      v53 = sub_1BC1BA094(v52, v50);
      swift_bridgeObjectRelease();
      result = sub_1BC0F2444(v50, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      if ((v53 & 1) != 0)
        break;
      if (v81 == 0x7FFFFFFFFFFFFFFDLL)
      {
        __break(1u);
        return result;
      }
      v55 = v74;
      v81 += 5;
      sub_1BC2B233C();
      v56 = v77;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v77, v15);
      v49(v56, v55, v15);
      ((void (*)(char *, char *, uint64_t))v47)(v55, v56, v15);
      v57 = v79;
      sub_1BC2B242C();
      v46 = v76;
      sub_1BC0E8594(v76, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v46, v57, v80);
      v48 = v51;
      v49(v51, v55, v15);
      *(_QWORD *)(v46 + v70) = 0x3FF0000000000000;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v77, v15);
    v58 = v64;
    sub_1BC109088(v76, v64);
    v59 = v65;
    sub_1BC109088(v58, v65);
    sub_1BC2B3ED8();
    if (v82[0])
    {
      v60 = *(_QWORD *)(v82[0] + 16);
      swift_bridgeObjectRelease();
      v35 = v79;
      v36 = v62;
      if (!v60)
        sub_1BC1B6F04(v59);
    }
    else
    {
      v35 = v79;
      v36 = v62;
    }
    sub_1BC0E8594(v59, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v37 = v80;
  }
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  swift_retain();
  sub_1BC1B59F0();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v36(v35, v37);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_bridgeObjectRelease();
  swift_release_n();

  swift_release();
  return v39;
}

_QWORD *sub_1BC1B59F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v1 = v0;
  v2 = *v0;
  sub_1BC2B3ED8();
  if (v19)
    v3 = v19;
  else
    v3 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)((char *)v0 + qword_1EF3FD8E8);
  v18 = *(void **)((char *)v0 + qword_1EF3FD8E0);
  v4 = *(_QWORD *)((char *)v0 + qword_1EF3FD8E8 + 24);
  v15 = *(_QWORD *)((char *)v0 + qword_1EF3FD8E8 + 16);
  v16 = *(_QWORD *)((char *)v0 + qword_1EF3FD8E8 + 8);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v2;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  swift_weakInit();
  v12 = *(_QWORD *)((char *)v1 + qword_1EF4028D0);
  v11 = *(_QWORD *)((char *)v1 + qword_1EF4028D0 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = sub_1BC1B6880(v18, v17, v16, v15, v4, (uint64_t)sub_1BC1BAE98, v5, (uint64_t)sub_1BC1BAEA0, v6, (uint64_t)sub_1BC1BAECC, v8, (uint64_t)sub_1BC1BAED4, v9, (uint64_t)sub_1BC1BAEDC, v10, v12, v11, 0x4265736F44646441, 0xED00006E6F747475,
          v3);
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BC1B5C5C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return sub_1BC0FC574(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  sub_1BC1B6BC4(a1, a2);
  return swift_release();
}

uint64_t sub_1BC1B5CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char v26;
  char *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t i;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v0 = sub_1BC2B2438();
  v42 = *(_QWORD *)(v0 - 8);
  v43 = v0;
  MEMORY[0x1E0C80A78](v0);
  v41 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v35 - v3;
  v4 = sub_1BC2B23F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - v8;
  v10 = type metadata accessor for Dosage();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v35 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v35 - v17;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v35 = v16;
    v36 = v18;
    v38 = qword_1EF3FD900;
    v39 = result + qword_1EF3FD908;
    v45 = result;
    sub_1BC2B233C();
    v20 = &v13[*(int *)(v10 + 20)];
    v21 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v44 = v9;
    v21(v20, v9, v4);
    sub_1BC2B242C();
    v47 = 0;
    v22 = *(int *)(v10 + 24);
    for (i = v22; ; v22 = i)
    {
      *(_QWORD *)&v13[v22] = 0x3FF0000000000000;
      v23 = (uint64_t)v46;
      v24 = v21;
      v21(v46, v20, v4);
      v25 = v5;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v23, 0, 1, v4);
      sub_1BC2B473C();
      v26 = sub_1BC1BA094((uint64_t)v13, v23);
      swift_bridgeObjectRelease();
      result = sub_1BC0F2444(v23, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      if ((v26 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v44, v4);
        v32 = (uint64_t)v35;
        sub_1BC109088((uint64_t)v13, (uint64_t)v35);
        v33 = (uint64_t)v36;
        sub_1BC109088(v32, (uint64_t)v36);
        v34 = sub_1BC1B6F04(v33);
        sub_1BC1B59F0(v34);
        sub_1BC2B2C24();
        swift_release();
        swift_bridgeObjectRelease();
        return sub_1BC0E8594(v33, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      }
      if (v47 == 0x7FFFFFFFFFFFFFFDLL)
        break;
      v27 = v40;
      v47 += 5;
      sub_1BC2B233C();
      v28 = v44;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v44, v4);
      v29 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v29(v28, v27, v4);
      v24(v27, v28, v4);
      v30 = v41;
      sub_1BC2B242C();
      sub_1BC0E8594((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v31 = v30;
      v5 = v25;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v13, v31, v43);
      v29(v20, v27, v4);
      v21 = v24;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC1B60F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[3];
  uint64_t v63;
  uint64_t v64[3];

  v57 = a4;
  v58 = a3;
  v5 = sub_1BC2B39E0();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v53 - v9;
  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - v14;
  v16 = type metadata accessor for Dosage();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v53 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v53 - v24;
  sub_1BC118700(a2, (uint64_t)v15, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v26((uint64_t)v15, 1, v16) != 1)
  {
    v55 = v16;
    v56 = v13;
    v54 = v20;
    v59 = v8;
    sub_1BC109088((uint64_t)v15, (uint64_t)v25);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v35 = v26;
      sub_1BC2B3ED8();
      v36 = v62[0];
      swift_release();
      if (!v36)
        v36 = MEMORY[0x1E0DEE9D8];
      v37 = *(_QWORD *)(v36 + 16);
      if (v37)
      {
        v38 = v36 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        v39 = *(_QWORD *)(v17 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_1BC0FC574(v38, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if ((sub_1BC2B2414() & 1) != 0)
            break;
          sub_1BC0E8594((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v38 += v39;
          if (!--v37)
          {
            swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        v42 = (uint64_t)v56;
        sub_1BC109088((uint64_t)v23, (uint64_t)v56);
        v40 = 0;
        v41 = v59;
      }
      else
      {
LABEL_13:
        v40 = 1;
        v41 = v59;
        v42 = (uint64_t)v56;
      }
      v43 = v55;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v42, v40, 1, v55);
      swift_bridgeObjectRelease();
      if (v35(v42, 1, v43) != 1)
      {
        sub_1BC0F2444(v42, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          sub_1BC1B74B8((uint64_t)v25);
          swift_release();
        }
        return sub_1BC0E8594((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      }
    }
    else
    {
      v42 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v56, 1, 1, v55);
      v41 = v59;
    }
    sub_1BC0F2444(v42, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    sub_1BC2B39A4();
    v44 = (uint64_t)v54;
    sub_1BC0FC574((uint64_t)v25, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v45 = sub_1BC2B39D4();
    v46 = sub_1BC2B48C8();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v59 = (char *)swift_slowAlloc();
      v62[0] = (uint64_t)v59;
      *(_DWORD *)v47 = 136315394;
      v48 = sub_1BC2B54F8();
      v63 = sub_1BC12540C(v48, v49, v62);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      sub_1BC2B2438();
      sub_1BC0E519C(&qword_1EF3F9F18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v50 = sub_1BC2B539C();
      v63 = sub_1BC12540C(v50, v51, v62);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      sub_1BC0E8594(v44, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      _os_log_impl(&dword_1BC0DC000, v45, v46, "[%s] Unable to find dosage with uuid = %s", (uint8_t *)v47, 0x16u);
      v52 = v59;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v52, -1, -1);
      MEMORY[0x1BCCEF3A0](v47, -1, -1);
    }
    else
    {
      sub_1BC0E8594(v44, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v61);
    return sub_1BC0E8594((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  }
  sub_1BC0F2444((uint64_t)v15, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  v27 = v59;
  sub_1BC2B39A4();
  v28 = sub_1BC2B39D4();
  v29 = sub_1BC2B48C8();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v64[0] = v31;
    *(_DWORD *)v30 = 136315138;
    v32 = sub_1BC2B54F8();
    v62[0] = sub_1BC12540C(v32, v33, v64);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v28, v29, "[%s] Unable to update dosage. Dosage was nil", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v31, -1, -1);
    MEMORY[0x1BCCEF3A0](v30, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v27, v61);
}

uint64_t sub_1BC1B6778(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = sub_1BC1B7864(a2);
    sub_1BC1B59F0(v4);
    sub_1BC2B2C24();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC1B67F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v4 = type metadata accessor for DosageItem(0);
    v5 = sub_1BC1BA094(a1 + *(int *)(v4 + 28), a2);
    swift_release();
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

_QWORD *sub_1BC1B6880(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  unint64_t v39;
  unint64_t v40;
  uint64_t *boxed_opaque_existential_1;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;

  v61 = a8;
  v48 = a7;
  v63 = a5;
  v49 = a2;
  v59 = a17;
  v60 = a18;
  v64 = a20;
  v57 = a16;
  v58 = a19;
  v51 = a15;
  v56 = a9;
  v62 = a10;
  v53 = sub_1BC2B2D98();
  v55 = *(_QWORD *)(v53 - 8);
  v25 = MEMORY[0x1E0C80A78](v53);
  v54 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v52 = (char *)&v45 - v27;
  v50 = a1;
  v46 = a3;
  v47 = a4;
  v28 = v63;
  sub_1BC1BAC0C(a2, a3);
  sub_1BC0F2690(a6);
  v29 = v62;
  v45 = a11;
  sub_1BC0F2690(v62);
  sub_1BC0F2690(a12);
  v30 = v51;
  sub_1BC0F2690(a14);
  v44 = v29;
  v31 = v50;
  v32 = v49;
  v33 = (_QWORD *)sub_1BC1BA79C(v64, v50, v49, a3, a4, v28, a6, v48, v44, a11, a12, a13, a14, v30);
  sub_1BC0F2600(a14);
  v34 = (uint64_t)v52;
  v35 = v53;
  sub_1BC0F2600(a12);
  sub_1BC0F2600(v62);
  v36 = v55;
  sub_1BC0F2600(a6);
  v37 = v54;
  sub_1BC1BAC3C(v32, v46);

  sub_1BC1B88A8(v60, v58, v57, v59, v61, v56, v34);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  v38(v37, v34, v35);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v33 = sub_1BC0FA038(0, v33[2] + 1, 1, v33);
  v40 = v33[2];
  v39 = v33[3];
  if (v40 >= v39 >> 1)
    v33 = sub_1BC0FA038((_QWORD *)(v39 > 1), v40 + 1, 1, v33);
  v66 = v35;
  v67 = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v65);
  v38((char *)boxed_opaque_existential_1, (uint64_t)v37, v35);
  v33[2] = v40 + 1;
  sub_1BC0F2730(&v65, (uint64_t)&v33[5 * v40 + 4]);
  v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v37, v35);
  v42((char *)v34, v35);
  return v33;
}

uint64_t sub_1BC1B6BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v25 = sub_1BC2B2438();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Dosage();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FD980, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  sub_1BC2B3ED8();
  if (v28)
    v16 = v28;
  else
    v16 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v26 = v5;
    v27 = a2;
    v18 = v16 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v19 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BC0FC574(v18, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if ((sub_1BC2B2414() & 1) != 0)
        break;
      sub_1BC0E8594((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v18 += v19;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BC109088((uint64_t)v8, (uint64_t)v15);
    v20 = 0;
LABEL_11:
    v5 = v26;
    a2 = v27;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v15, v20, 1, v5);
  swift_bridgeObjectRelease();
  sub_1BC118700((uint64_t)v15, (uint64_t)v13, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) == 1)
  {
    sub_1BC0F2444((uint64_t)v13, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v24, a1, v25);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    v28 = 0xD00000000000001DLL;
    v29 = 0x80000001BC2CF700;
    sub_1BC0E519C(&qword_1EF3F9F18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    sub_1BC2B539C();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    result = sub_1BC2B52B8();
    __break(1u);
  }
  else
  {
    sub_1BC0F2444((uint64_t)v15, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    return sub_1BC109088((uint64_t)v13, a2);
  }
  return result;
}

uint64_t sub_1BC1B6F04(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];
  uint64_t v59;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for Dosage();
  v55 = *(char **)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v54 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v50 - v8;
  v10 = sub_1BC2B39E0();
  v53 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v50 - v14;
  sub_1BC2B39A4();
  v52 = a1;
  sub_1BC0FC574(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  v16 = sub_1BC2B39D4();
  v17 = sub_1BC2B48B0();
  v18 = os_log_type_enabled(v16, v17);
  v56 = v10;
  v50 = v4;
  if (v18)
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v51 = v1;
    v21 = v20;
    v58[0] = v20;
    *(_DWORD *)v19 = 136315394;
    v22 = sub_1BC2B54F8();
    v59 = sub_1BC12540C(v22, v23, v58);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    v24 = Dosage.description.getter();
    v59 = sub_1BC12540C(v24, v25, v58);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    _os_log_impl(&dword_1BC0DC000, v16, v17, "[%s] Request to add dosage = %s.", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    v26 = v21;
    v2 = v51;
    MEMORY[0x1BCCEF3A0](v26, -1, -1);
    v27 = v19;
    v10 = v56;
    MEMORY[0x1BCCEF3A0](v27, -1, -1);
  }
  else
  {
    sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  }

  v53 = *(_QWORD *)(v53 + 8);
  ((void (*)(char *, uint64_t))v53)(v15, v10);
  v28 = *(_QWORD **)((char *)v2 + qword_1EF3FD8F0);
  sub_1BC2B3ED8();
  if (v58[0])
    v29 = v58[0];
  else
    v29 = MEMORY[0x1E0DEE9D8];
  v30 = v54;
  sub_1BC0FC574(v52, v54, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v29 = sub_1BC0F9E08(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
  v32 = *(_QWORD *)(v29 + 16);
  v31 = *(_QWORD *)(v29 + 24);
  if (v32 >= v31 >> 1)
    v29 = sub_1BC0F9E08(v31 > 1, v32 + 1, 1, v29);
  *(_QWORD *)(v29 + 16) = v32 + 1;
  sub_1BC109088(v30, v29 + ((v55[80] + 32) & ~(unint64_t)v55[80]) + *((_QWORD *)v55 + 9) * v32);
  v59 = v29;
  sub_1BC2B39A4();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v33 = sub_1BC2B39D4();
  v34 = sub_1BC2B48B0();
  v35 = os_log_type_enabled(v33, v34);
  v51 = v28;
  if (v35)
  {
    v36 = swift_slowAlloc();
    v55 = v13;
    v37 = v36;
    v38 = swift_slowAlloc();
    v58[0] = v38;
    *(_DWORD *)v37 = 136315650;
    v39 = sub_1BC2B54F8();
    v57 = sub_1BC12540C(v39, v40, v58);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    sub_1BC2B3ED8();
    if (v57)
      v41 = v57;
    else
      v41 = MEMORY[0x1E0DEE9D8];
    v42 = *(_QWORD *)(v41 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    v57 = v42;
    sub_1BC2B4FD0();
    swift_release();
    *(_WORD *)(v37 + 22) = 2048;
    v43 = *(_QWORD *)(v29 + 16);
    swift_bridgeObjectRelease();
    v57 = v43;
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v33, v34, "[%s] Dosage count before add = %ld. Dosage count after add = %ld.", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v38, -1, -1);
    MEMORY[0x1BCCEF3A0](v37, -1, -1);

    v44 = v55;
    v45 = v56;
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    v44 = v13;
    v45 = v10;
  }
  result = ((uint64_t (*)(char *, uint64_t))v53)(v44, v45);
  v47 = *(_QWORD *)((char *)v2 + qword_1EF3FD900);
  v48 = __OFADD__(v47, 1);
  v49 = v47 + 1;
  if (v48)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)((char *)v2 + qword_1EF3FD900) = v49;
    swift_beginAccess();
    v57 = v59;
    sub_1BC2B3EC0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC1B74B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for Dosage();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = sub_1BC2B39E0();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  sub_1BC0FC574(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  sub_1BC0FC574(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  v12 = sub_1BC2B39D4();
  v13 = sub_1BC2B48B0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v29 = v1;
    v15 = v14;
    v28 = swift_slowAlloc();
    v34 = v28;
    *(_DWORD *)v15 = 136315650;
    v16 = sub_1BC2B54F8();
    v30 = a1;
    v33 = sub_1BC12540C(v16, v17, &v34);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_1BC2B2438();
    sub_1BC0E519C(&qword_1EF3F9F18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v18 = sub_1BC2B539C();
    v33 = sub_1BC12540C(v18, v19, &v34);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    sub_1BC0E8594((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    *(_WORD *)(v15 + 22) = 2080;
    v20 = Dosage.description.getter();
    v33 = sub_1BC12540C(v20, v21, &v34);
    a1 = v30;
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    sub_1BC0E8594((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    _os_log_impl(&dword_1BC0DC000, v12, v13, "[%s] Request to update dosage uuid = %s with updated dosage = %s.", (uint8_t *)v15, 0x20u);
    v22 = v28;
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v22, -1, -1);
    MEMORY[0x1BCCEF3A0](v15, -1, -1);
  }
  else
  {
    sub_1BC0E8594((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    sub_1BC0E8594((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  }

  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  v23 = sub_1BC2B3ED8();
  if (v34)
    v24 = v34;
  else
    v24 = MEMORY[0x1E0DEE9D8];
  MEMORY[0x1E0C80A78](v23);
  *(&v27 - 2) = a1;
  v25 = sub_1BC1B4C24((void (*)(uint64_t))sub_1BC1BADDC, (uint64_t)(&v27 - 4), v24);
  swift_bridgeObjectRelease();
  v34 = v25;
  sub_1BC1B5228((unint64_t *)&v34);
  v33 = v34;
  sub_1BC2B3EC0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1B7864(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for Dosage();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B39E0();
  v47 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v44 - v12;
  sub_1BC2B39A4();
  v48 = (uint64_t (*)(char *, uint64_t))a1;
  sub_1BC0FC574(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  v14 = sub_1BC2B39D4();
  v15 = sub_1BC2B48B0();
  v16 = os_log_type_enabled(v14, v15);
  v49 = v11;
  v50 = v8;
  v46 = v4;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v45 = v1;
    v19 = v18;
    v52 = v18;
    *(_DWORD *)v17 = 136315394;
    v20 = sub_1BC2B54F8();
    v51 = sub_1BC12540C(v20, v21, &v52);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    sub_1BC2B2438();
    sub_1BC0E519C(&qword_1EF3F9F18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v22 = sub_1BC2B539C();
    v51 = sub_1BC12540C(v22, v23, &v52);
    v8 = v50;
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    _os_log_impl(&dword_1BC0DC000, v14, v15, "[%s] Request to delete dosage with uuid = %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    v24 = v19;
    v2 = v45;
    MEMORY[0x1BCCEF3A0](v24, -1, -1);
    v25 = v17;
    v11 = v49;
    MEMORY[0x1BCCEF3A0](v25, -1, -1);
  }
  else
  {
    sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  }

  v26 = *(void (**)(char *, uint64_t))(v47 + 8);
  v26(v13, v8);
  v27 = sub_1BC2B3ED8();
  MEMORY[0x1E0C80A78](v27);
  *(&v44 - 2) = (uint64_t)v48;
  v29 = sub_1BC1B4A1C((uint64_t (*)(char *))sub_1BC1BADC0, (uint64_t)(&v44 - 4), v28);
  sub_1BC2B39A4();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v30 = sub_1BC2B39D4();
  v31 = sub_1BC2B48B0();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v48 = (uint64_t (*)(char *, uint64_t))v26;
    v33 = v32;
    v34 = swift_slowAlloc();
    v52 = v34;
    *(_DWORD *)v33 = 136315650;
    v35 = sub_1BC2B54F8();
    v51 = sub_1BC12540C(v35, v36, &v52);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2048;
    sub_1BC2B3ED8();
    if (v51)
      v37 = v51;
    else
      v37 = MEMORY[0x1E0DEE9D8];
    v38 = *(_QWORD *)(v37 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    v51 = v38;
    sub_1BC2B4FD0();
    swift_release();
    *(_WORD *)(v33 + 22) = 2048;
    v39 = *(_QWORD *)(v29 + 16);
    swift_bridgeObjectRelease();
    v51 = v39;
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v30, v31, "[%s] Dosage count before delete = %ld. Dosage count after delete = %ld.", (uint8_t *)v33, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v34, -1, -1);
    MEMORY[0x1BCCEF3A0](v33, -1, -1);

    result = v48(v49, v50);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    result = ((uint64_t (*)(char *, uint64_t))v26)(v11, v8);
  }
  v41 = *(_QWORD *)((char *)v2 + qword_1EF3FD900);
  v42 = __OFSUB__(v41, 1);
  v43 = v41 - 1;
  if (v42)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)((char *)v2 + qword_1EF3FD900) = v43 & ~(v43 >> 63);
    v52 = v29;
    sub_1BC2B3EC0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1BC1B7DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  _QWORD v15[2];

  v4 = sub_1BC2B2438();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_1BC0E519C(&qword_1EF3FD978, v5, MEMORY[0x1E0CB09D0]);
  LOBYTE(a2) = sub_1BC2B4424();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return (a2 & 1) == 0;
}

void sub_1BC1B7ECC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1B7EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF3FD8E8), *(_QWORD *)(v0 + qword_1EF3FD8E8 + 8));
  swift_release();
  swift_release();
  v1 = v0 + qword_1EF3FD908;
  v2 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1B7F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BC2B2C60();

  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF3FD8E8), *(_QWORD *)(v0 + qword_1EF3FD8E8 + 8));
  swift_release();
  swift_release();
  v1 = v0 + qword_1EF3FD908;
  v2 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1B8044()
{
  return type metadata accessor for DosagesPerDaySectionDataSource();
}

uint64_t sub_1BC1B804C()
{
  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  sub_1BC2B4994();
  type metadata accessor for DosageCollectionViewCell(0);
  sub_1BC0E519C(&qword_1EF3FD968, type metadata accessor for DosageCollectionViewCell, (uint64_t)&protocol conformance descriptor for DosageCollectionViewCell);
  sub_1BC2B497C();
  sub_1BC2B3038();
  return sub_1BC2B497C();
}

void *sub_1BC1B80F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2C9C();
  v4 = (void *)sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC2B4AE4();
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_setContentInsetsReference_, 1);
  return v4;
}

uint64_t sub_1BC1B81C0()
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2BFDD8);
  return sub_1BC2B3074();
}

uint64_t sub_1BC1B820C@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v2 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v3 = sub_1BC2B2144();
  v5 = v4;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  v6 = sub_1BC2B2930();
  v8 = v7;
  sub_1BC2B2930();
  swift_bridgeObjectRelease();
  a1[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  a1[4] = sub_1BC184A54();
  result = swift_allocObject();
  *a1 = result;
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = nullsub_1;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = v6;
  *(_QWORD *)(result + 64) = v8;
  return result;
}

uint64_t sub_1BC1B8378()
{
  return sub_1BC0E519C(&qword_1EF3FD960, (uint64_t (*)(uint64_t))type metadata accessor for DosagesPerDaySectionDataSource, (uint64_t)&unk_1BC2BFDA8);
}

size_t sub_1BC1B83A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  char *v22;
  char *v23;
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v48 = (uint64_t)&v38 - v3;
  v4 = sub_1BC2B257C();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Dosage();
  v6 = *(_QWORD *)(v53 - 8);
  v7 = MEMORY[0x1E0C80A78](v53);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - v9;
  v11 = sub_1BC2B2594();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC106B14(MEMORY[0x1E0DEE9D8]);
  v49 = v14;
  sub_1BC2B2564();
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v38 = v12;
    v39 = v11;
    v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v50 = *(_QWORD *)(v6 + 72);
    v51 = v15;
    v43 = *MEMORY[0x1E0CB1140];
    v42 = *MEMORY[0x1E0CB1178];
    v40 = a1;
    swift_bridgeObjectRetain();
    v44 = v6;
    do
    {
      v52 = v16;
      sub_1BC0FC574(v17, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v22 = v45;
      v21 = v46;
      v23 = v10;
      v24 = *(void (**)(char *, _QWORD, uint64_t))(v46 + 104);
      v25 = v47;
      v24(v45, v43, v47);
      v26 = sub_1BC2B2588();
      v27 = *(void (**)(char *, uint64_t))(v21 + 8);
      v27(v22, v25);
      v24(v22, v42, v25);
      v10 = v23;
      v28 = sub_1BC2B2588();
      v27(v22, v25);
      v55 = 0;
      v56 = 0xE000000000000000;
      sub_1BC2B4754();
      sub_1BC2B44FC();
      v54 = v26;
      sub_1BC2B539C();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      sub_1BC2B44FC();
      v54 = v28;
      sub_1BC2B539C();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      v29 = v55;
      v30 = v56;
      v31 = v51;
      if (*(_QWORD *)(v51 + 16) && (v32 = sub_1BC107DA4(v55, v56), (v33 & 1) != 0))
      {
        v34 = v48;
        sub_1BC0FC574(*(_QWORD *)(v31 + 56) + v32 * v50, v48, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v34, 0, 1, v53);
        sub_1BC0E8594((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        swift_bridgeObjectRelease();
        sub_1BC0F2444(v34, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      }
      else
      {
        v18 = v48;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v48, 1, 1, v53);
        sub_1BC0F2444(v18, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        v19 = v41;
        sub_1BC0FC574((uint64_t)v10, v41, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = v31;
        sub_1BC1B8DEC(v19, v29, v30, isUniquelyReferenced_nonNull_native);
        v51 = v55;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BC0E8594((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      }
      v17 += v50;
      v16 = v52 - 1;
    }
    while (v52 != 1);
    swift_bridgeObjectRelease();
    v12 = v38;
    v11 = v39;
  }
  v35 = swift_bridgeObjectRetain();
  v36 = sub_1BC1332C0(v35);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v49, v11);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1BC1B8834@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD *__return_ptr, uint64_t, uint64_t)@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;
  uint64_t v8;

  if (a2)
  {
    a2(a4, a1, a3);
    v5 = type metadata accessor for Dosage();
    v6 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a4;
    v8 = 0;
  }
  else
  {
    v5 = type metadata accessor for Dosage();
    v6 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a4;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t sub_1BC1B88A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void (*v22)(uint64_t *, _QWORD);
  id v23;
  id v24;
  void (*v25)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[6];

  v47 = a6;
  v52 = a5;
  v38 = a4;
  v43 = a3;
  v49 = a1;
  v50 = a2;
  v48 = a7;
  v46 = sub_1BC2B2FA8();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v35 - v9;
  v10 = sub_1BC2B2C6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1BC2B3B48();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B3CD4();
  v51 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3C80();
  v18 = (void *)sub_1BC2B4430();
  v19 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v18);

  sub_1BC2B3CA4();
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_systemGreenColor);
  v22 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C08();
  sub_1BC2B3BFC();
  v22(v55, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v23 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C98();
  v24 = objc_msgSend(v20, sel_systemBlueColor);
  v37 = v17;
  v25 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v25(v55, 0);
  sub_1BC2B3B24();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  sub_1BC2B4D24();
  sub_1BC2B3B18();
  v55[3] = v15;
  v55[4] = MEMORY[0x1E0DC2398];
  v36 = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v55);
  (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 16))(boxed_opaque_existential_1, v17, v15);
  v27 = swift_allocObject();
  v28 = v47;
  *(_QWORD *)(v27 + 16) = v52;
  *(_QWORD *)(v27 + 24) = v28;
  v29 = v40;
  *v40 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 104))(v29, *MEMORY[0x1E0D2B168], v10);
  v30 = v14;
  v35 = v14;
  v31 = v39;
  v33 = v41;
  v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v42, v30, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v33);
  v53 = v43;
  v54 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v45, *MEMORY[0x1E0D2B8C8], v46);
  sub_1BC0F2690(v52);
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v37, v36);
}

uint64_t sub_1BC1B8DB8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1B8DEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC107DA4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for Dosage() - 8) + 72) * v12;
        return sub_1BC1BAE30(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC15C158();
      goto LABEL_7;
    }
    sub_1BC15B3A0(v15, a4 & 1);
    v22 = sub_1BC107DA4(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC1B8F6C(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC2B53F0();
  __break(1u);
  return result;
}

unint64_t sub_1BC1B8F24(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1BC1B8F6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for Dosage();
  result = sub_1BC109088(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1BC1B8FF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v130 = type metadata accessor for Dosage();
  v123 = *(_QWORD *)(v130 - 8);
  v3 = MEMORY[0x1E0C80A78](v130);
  v120 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v131 = (uint64_t)&v116 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v128 = (uint64_t)&v116 - v8;
  MEMORY[0x1E0C80A78](v7);
  v127 = (uint64_t)&v116 - v9;
  v10 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v10)
  {
    if (v10 < 0)
      goto LABEL_139;
    if (v10)
      return sub_1BC1B99B8(0, v10, 1, a1);
    return result;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_147;
  v129 = a1;
  v117 = result;
  v124 = v1;
  if (v10 < 2)
  {
    v16 = (char *)MEMORY[0x1E0DEE9D8];
    v122 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
    v116 = MEMORY[0x1E0DEE9D8];
    if (v10 != 1)
    {
      v18 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_105:
      v108 = v16;
      if (v18 >= 2)
      {
        v109 = *v129;
        do
        {
          v110 = v18 - 2;
          if (v18 < 2)
            goto LABEL_134;
          if (!v109)
            goto LABEL_146;
          v111 = *(_QWORD *)&v108[16 * v110 + 32];
          v112 = *(_QWORD *)&v108[16 * v18 + 24];
          v113 = v124;
          sub_1BC1B9BE4(v109 + *(_QWORD *)(v123 + 72) * v111, v109 + *(_QWORD *)(v123 + 72) * *(_QWORD *)&v108[16 * v18 + 16], v109 + *(_QWORD *)(v123 + 72) * v112, v122);
          v124 = v113;
          if (v113)
            break;
          if (v112 < v111)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_1BC26E1A0((uint64_t)v108);
          if (v110 >= *((_QWORD *)v108 + 2))
            goto LABEL_136;
          v114 = &v108[16 * v110 + 32];
          *(_QWORD *)v114 = v111;
          *((_QWORD *)v114 + 1) = v112;
          v115 = *((_QWORD *)v108 + 2);
          if (v18 > v115)
            goto LABEL_137;
          memmove(&v108[16 * v18 + 16], &v108[16 * v18 + 32], 16 * (v115 - v18));
          *((_QWORD *)v108 + 2) = v115 - 1;
          v18 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_1BC2B45F8();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v123 + 80);
    v116 = v14;
    v122 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }
    v21 = *v129;
    v22 = *(_QWORD *)(v123 + 72);
    v23 = v127;
    sub_1BC0FC574(*v129 + v22 * v20, v127, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v24 = v21 + v22 * v17;
    v25 = v128;
    sub_1BC0FC574(v24, v128, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    LODWORD(v126) = sub_1BC2B2378();
    sub_1BC0E8594(v25, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    sub_1BC0E8594(v23, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v17 = v19 + 2;
    v125 = v21;
    v132 = v22;
    if (v19 + 2 >= v10)
      goto LABEL_21;
    v121 = v19;
    v118 = v16;
    v26 = v22 * v20;
    v27 = v21;
    v28 = v22 * v17;
    do
    {
      v29 = v10;
      v30 = v127;
      sub_1BC0FC574(v27 + v28, v127, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v31 = v128;
      sub_1BC0FC574(v27 + v26, v128, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v32 = sub_1BC2B2378();
      sub_1BC0E8594(v31, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC0E8594(v30, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if (((v126 ^ v32) & 1) != 0)
      {
        v16 = v118;
        v19 = v121;
        v10 = v29;
        v22 = v132;
        if ((v126 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      ++v17;
      v22 = v132;
      v27 += v132;
      v10 = v29;
    }
    while (v29 != v17);
    v17 = v29;
    v16 = v118;
    v19 = v121;
LABEL_21:
    if ((v126 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    if (v17 < v19)
      goto LABEL_140;
    if (v19 < v17)
      break;
LABEL_24:
    v33 = v129;
    if (v17 < v10)
      goto LABEL_25;
LABEL_57:
    if (v17 < v19)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1BC26DEB8(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v57 = *((_QWORD *)v16 + 2);
    v56 = *((_QWORD *)v16 + 3);
    v18 = v57 + 1;
    if (v57 >= v56 >> 1)
      v16 = sub_1BC26DEB8((char *)(v56 > 1), v57 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v58 = v16 + 32;
    v59 = &v16[16 * v57 + 32];
    *(_QWORD *)v59 = v19;
    *((_QWORD *)v59 + 1) = v17;
    if (v57)
    {
      while (1)
      {
        v60 = v18 - 1;
        if (v18 >= 4)
        {
          v65 = &v58[16 * v18];
          v66 = *((_QWORD *)v65 - 8);
          v67 = *((_QWORD *)v65 - 7);
          v71 = __OFSUB__(v67, v66);
          v68 = v67 - v66;
          if (v71)
            goto LABEL_122;
          v70 = *((_QWORD *)v65 - 6);
          v69 = *((_QWORD *)v65 - 5);
          v71 = __OFSUB__(v69, v70);
          v63 = v69 - v70;
          v64 = v71;
          if (v71)
            goto LABEL_123;
          v72 = v18 - 2;
          v73 = &v58[16 * v18 - 32];
          v75 = *(_QWORD *)v73;
          v74 = *((_QWORD *)v73 + 1);
          v71 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          if (v71)
            goto LABEL_125;
          v71 = __OFADD__(v63, v76);
          v77 = v63 + v76;
          if (v71)
            goto LABEL_128;
          if (v77 >= v68)
          {
            v95 = &v58[16 * v60];
            v97 = *(_QWORD *)v95;
            v96 = *((_QWORD *)v95 + 1);
            v71 = __OFSUB__(v96, v97);
            v98 = v96 - v97;
            if (v71)
              goto LABEL_132;
            v88 = v63 < v98;
            goto LABEL_94;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v89 = *((_QWORD *)v16 + 4);
            v90 = *((_QWORD *)v16 + 5);
            v71 = __OFSUB__(v90, v89);
            v82 = v90 - v89;
            v83 = v71;
            goto LABEL_88;
          }
          v62 = *((_QWORD *)v16 + 4);
          v61 = *((_QWORD *)v16 + 5);
          v71 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          v64 = v71;
        }
        if ((v64 & 1) != 0)
          goto LABEL_124;
        v72 = v18 - 2;
        v78 = &v58[16 * v18 - 32];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v81 = __OFSUB__(v79, v80);
        v82 = v79 - v80;
        v83 = v81;
        if (v81)
          goto LABEL_127;
        v84 = &v58[16 * v60];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v71 = __OFSUB__(v85, v86);
        v87 = v85 - v86;
        if (v71)
          goto LABEL_130;
        if (__OFADD__(v82, v87))
          goto LABEL_131;
        if (v82 + v87 >= v63)
        {
          v88 = v63 < v87;
LABEL_94:
          if (v88)
            v60 = v72;
          goto LABEL_96;
        }
LABEL_88:
        if ((v83 & 1) != 0)
          goto LABEL_126;
        v91 = &v58[16 * v60];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v71 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v71)
          goto LABEL_129;
        if (v94 < v82)
          goto LABEL_14;
LABEL_96:
        v99 = v16;
        v100 = v60 - 1;
        if (v60 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v129)
          goto LABEL_144;
        v101 = v17;
        v102 = &v58[16 * v100];
        v103 = *(_QWORD *)v102;
        v104 = &v58[16 * v60];
        v105 = *((_QWORD *)v104 + 1);
        v106 = v124;
        sub_1BC1B9BE4(*v129 + *(_QWORD *)(v123 + 72) * *(_QWORD *)v102, *v129 + *(_QWORD *)(v123 + 72) * *(_QWORD *)v104, *v129 + *(_QWORD *)(v123 + 72) * v105, v122);
        v124 = v106;
        if (v106)
          goto LABEL_116;
        if (v105 < v103)
          goto LABEL_119;
        if (v60 > *((_QWORD *)v99 + 2))
          goto LABEL_120;
        *(_QWORD *)v102 = v103;
        *(_QWORD *)&v58[16 * v100 + 8] = v105;
        v107 = *((_QWORD *)v99 + 2);
        if (v60 >= v107)
          goto LABEL_121;
        v16 = v99;
        v18 = v107 - 1;
        memmove(&v58[16 * v60], v104 + 16, 16 * (v107 - 1 - v60));
        *((_QWORD *)v99 + 2) = v107 - 1;
        v88 = v107 > 2;
        v17 = v101;
        if (!v88)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v129[1];
    if (v17 >= v10)
      goto LABEL_105;
  }
  v126 = v10;
  v118 = v16;
  v48 = 0;
  v49 = v22 * (v17 - 1);
  v50 = v17 * v22;
  v51 = v19;
  v121 = v19;
  v52 = v19 * v22;
  v33 = v129;
  do
  {
    if (v51 != v17 + v48 - 1)
    {
      v53 = v125;
      if (!v125)
        goto LABEL_145;
      v54 = v125 + v52;
      v55 = v125 + v49;
      sub_1BC109088(v125 + v52, v120);
      if (v52 < v49 || v54 >= v53 + v50)
      {
        swift_arrayInitWithTakeFrontToBack();
        v22 = v132;
      }
      else
      {
        v22 = v132;
        if (v52 != v49)
          swift_arrayInitWithTakeBackToFront();
      }
      sub_1BC109088(v120, v55);
      v33 = v129;
    }
    ++v51;
    --v48;
    v49 -= v22;
    v50 -= v22;
    v52 += v22;
  }
  while (v51 < v17 + v48);
  v16 = v118;
  v10 = v126;
  v19 = v121;
  if (v17 >= v126)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v17, v19))
    goto LABEL_138;
  if (v17 - v19 >= v117)
    goto LABEL_57;
  if (__OFADD__(v19, v117))
    goto LABEL_141;
  if (v19 + v117 >= v10)
    v34 = v10;
  else
    v34 = v19 + v117;
  if (v34 >= v19)
  {
    if (v17 != v34)
    {
      v118 = v16;
      v119 = v34;
      v35 = *(_QWORD *)(v123 + 72);
      v132 = v35 * (v17 - 1);
      v125 = v35;
      v36 = v17 * v35;
      v121 = v19;
      do
      {
        v38 = 0;
        v39 = v19;
        v126 = v17;
        while (1)
        {
          v40 = *v33;
          v41 = v36;
          v42 = v36 + v38 + *v33;
          v43 = v127;
          v44 = v33;
          sub_1BC0FC574(v42, v127, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v45 = v128;
          sub_1BC0FC574(v132 + v38 + v40, v128, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          LOBYTE(v40) = sub_1BC2B2378();
          sub_1BC0E8594(v45, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E8594(v43, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if ((v40 & 1) == 0)
            break;
          v46 = *v44;
          if (!*v44)
            goto LABEL_143;
          v36 = v41;
          v47 = v46 + v132 + v38;
          sub_1BC109088(v46 + v41 + v38, v131);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BC109088(v131, v47);
          v37 = v126;
          v38 -= v125;
          ++v39;
          v33 = v129;
          if (v126 == v39)
            goto LABEL_35;
        }
        v37 = v126;
        v36 = v41;
        v33 = v44;
LABEL_35:
        v17 = v37 + 1;
        v132 += v125;
        v36 += v125;
        v19 = v121;
      }
      while (v17 != v119);
      v17 = v119;
      v16 = v118;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC1B99B8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v25 = a1;
  v28 = type metadata accessor for Dosage();
  v7 = MEMORY[0x1E0C80A78](v28);
  v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v23 - v10;
  result = MEMORY[0x1E0C80A78](v9);
  v15 = (char *)&v23 - v14;
  v27 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v31 = v16 * (v27 - 1);
    v26 = v16;
    v30 = v16 * v27;
LABEL_5:
    v17 = 0;
    v18 = v25;
    while (1)
    {
      v19 = *a4;
      sub_1BC0FC574(v30 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC0FC574(v31 + v17 + v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      LOBYTE(v19) = sub_1BC2B2378();
      sub_1BC0E8594((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      result = sub_1BC0E8594((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v31 += v26;
        v30 += v26;
        if (++v27 == v24)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v31 + v17;
      sub_1BC109088(v20 + v30 + v17, v29);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1BC109088(v29, v22);
      v17 -= v26;
      ++v18;
      a4 = v21;
      if (v27 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC1B9BE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v44 = type metadata accessor for Dosage();
  v8 = MEMORY[0x1E0C80A78](v44);
  v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v40 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v47 = a1;
  v46 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v45 = a4 + v18;
      v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v41 = a4;
        v42 = a1;
        do
        {
          v28 = a3 + v27;
          sub_1BC0FC574(v25 + v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v43;
          sub_1BC0FC574(a2 + v27, v43, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v33 = sub_1BC2B2378();
          v34 = v32;
          v11 = (char *)v31;
          sub_1BC0E8594(v34, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E8594(v31, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v47 += v27;
          }
          else
          {
            v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              v29 = a2;
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
              v29 = a2;
            }
          }
          v25 = v45;
          if (v45 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v17;
    v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v43;
      do
      {
        sub_1BC0FC574(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        sub_1BC0FC574(a4, v20, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v21 = sub_1BC2B2378();
        sub_1BC0E8594(v20, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        sub_1BC0E8594((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v22 = v47;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v24;
          v23 = a2;
        }
        v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_1BC26E07C(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1BA094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  uint64_t v63;
  char v64;
  _QWORD v66[2];
  char *v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v89 = a2;
  v81 = a1;
  v2 = sub_1BC2B2438();
  v90 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v80 = (char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1BC2B257C();
  v4 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v6 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B2594();
  v91 = *(_QWORD *)(v7 - 8);
  v92 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v85 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v83 = (char *)v66 - v10;
  v82 = type metadata accessor for Dosage();
  v87 = *(_QWORD *)(v82 - 8);
  v11 = MEMORY[0x1E0C80A78](v82);
  v79 = (uint64_t)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v66 - v13;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v66 - v16;
  v18 = sub_1BC2B23F0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v66 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v66 - v26;
  sub_1BC118700(v89, (uint64_t)v17, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    v75 = v25;
    v76 = v22;
    v84 = v14;
    v28 = v83;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v17, v18);
    sub_1BC2B3ED8();
    if (v93)
      v29 = v93;
    else
      v29 = MEMORY[0x1E0DEE9D8];
    v30 = *(_QWORD *)(v29 + 16);
    if (!v30)
    {
      swift_bridgeObjectRelease();
      v38 = *(void (**)(char *, uint64_t))(v19 + 8);
LABEL_18:
      v38(v27, v18);
      return 1;
    }
    v77 = v27;
    v78 = v18;
    v74 = v19;
    v31 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    v66[1] = v29;
    v32 = v29 + v31;
    v73 = *MEMORY[0x1E0CB1140];
    v68 = *MEMORY[0x1E0CB1178];
    v71 = *(_QWORD *)(v87 + 72);
    v34 = v85;
    v33 = v86;
    v35 = v28;
    v36 = v82;
    v37 = (uint64_t)v84;
    v72 = v2;
    v70 = v4;
    v67 = v6;
    while (1)
    {
      v87 = v32;
      v88 = v30;
      sub_1BC0FC574(v32, v37, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v46 = v37 + *(int *)(v36 + 20);
      sub_1BC2B2564();
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
      v48 = v73;
      v47(v6, v73, v33);
      v89 = sub_1BC2B2588();
      v49 = *(void (**)(char *, uint64_t))(v4 + 8);
      v49(v6, v33);
      v47(v6, v48, v33);
      v50 = v77;
      v51 = sub_1BC2B2588();
      v49(v6, v33);
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v34, v35, v92);
      v53 = v74;
      v52 = v75;
      v54 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
      v55 = v46;
      v56 = v78;
      v54(v75, v55, v78);
      v57 = v76;
      v54(v76, (uint64_t)v50, v56);
      if (v89 != v51)
        break;
      v58 = v68;
      v59 = v86;
      v47(v6, v68, v86);
      v60 = v85;
      v89 = sub_1BC2B2588();
      v49(v6, v59);
      v47(v6, v58, v59);
      v69 = sub_1BC2B2588();
      v49(v6, v59);
      v38 = *(void (**)(char *, uint64_t))(v53 + 8);
      v38(v57, v56);
      v38(v52, v56);
      v61 = *(void (**)(char *, uint64_t))(v91 + 8);
      v62 = v60;
      v63 = v92;
      v61(v62, v92);
      v35 = v83;
      v61(v83, v63);
      v41 = v80;
      v42 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v80, v81, v72);
      v43 = v79;
      sub_1BC0FC574((uint64_t)v84, v79, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if (v89 != v69)
      {
        v34 = v85;
        v33 = v86;
        v6 = v67;
        v36 = v82;
        v37 = (uint64_t)v84;
        goto LABEL_9;
      }
      sub_1BC0E519C(&qword_1EF3FD978, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v64 = sub_1BC2B4424();
      sub_1BC0E8594(v43, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v41, v42);
      v37 = (uint64_t)v84;
      sub_1BC0E8594((uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if ((v64 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v38(v77, v78);
        return 0;
      }
      v4 = v70;
      v34 = v85;
      v33 = v86;
      v6 = v67;
      v36 = v82;
      v44 = v87;
      v45 = v88;
LABEL_10:
      v32 = v44 + v71;
      v30 = v45 - 1;
      if (!v30)
      {
        swift_bridgeObjectRelease();
        v27 = v77;
        v18 = v78;
        goto LABEL_18;
      }
    }
    v38 = *(void (**)(char *, uint64_t))(v53 + 8);
    v38(v57, v56);
    v38(v52, v56);
    v39 = v92;
    v40 = *(void (**)(char *, uint64_t))(v91 + 8);
    v34 = v85;
    v40(v85, v92);
    v35 = v83;
    v40(v83, v39);
    v41 = v80;
    v42 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v80, v81, v72);
    v37 = (uint64_t)v84;
    v43 = v79;
    sub_1BC0FC574((uint64_t)v84, v79, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v33 = v86;
    v36 = v82;
LABEL_9:
    sub_1BC0E8594(v43, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v41, v42);
    sub_1BC0E8594(v37, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v4 = v70;
    v44 = v87;
    v45 = v88;
    goto LABEL_10;
  }
  sub_1BC0F2444((uint64_t)v17, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  return 1;
}

uint64_t sub_1BC1BA79C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v52[2];
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;

  v66 = a7;
  v67 = a8;
  v79 = a5;
  v80 = a6;
  v77 = a3;
  v78 = a4;
  v65 = a2;
  v16 = type metadata accessor for Dosage();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v64 = (uint64_t)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1BC2B2438();
  v19 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v75 = (char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for DosageItem(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (_QWORD *)((char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x1E0DEE9D8];
  if (v24)
  {
    v52[1] = v14;
    v61 = a14;
    v60 = a13;
    v73 = a11;
    v74 = a12;
    v71 = a9;
    v72 = a10;
    v84 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v24, 0);
    v26 = *(unsigned __int8 *)(v17 + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = a1 + v27;
    v58 = type metadata accessor for DosageCollectionViewCell(0);
    v57 = *(_QWORD *)(v17 + 72);
    v63 = v19;
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    v59 = v27;
    v55 = v27 + v18;
    v54 = v26 | 7;
    v53 = v23 + 4;
    v62 = v21;
    do
    {
      v70 = v24;
      v56(v75, v28, v76);
      v69 = v28;
      v29 = v64;
      sub_1BC0FC574(v28, v64, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v30 = swift_allocObject();
      v32 = v66;
      v31 = v67;
      *(_QWORD *)(v30 + 16) = v66;
      *(_QWORD *)(v30 + 24) = v31;
      sub_1BC109088(v29, v30 + v59);
      v68 = v65;
      sub_1BC1BAC0C(v77, v78);
      sub_1BC0F2690(v32);
      sub_1BC0F2690(v71);
      sub_1BC0F2690(v73);
      v33 = v60;
      v34 = v61;
      sub_1BC0F2690(v60);
      sub_1BC0E519C(&qword_1EF3FD968, type metadata accessor for DosageCollectionViewCell, (uint64_t)&protocol conformance descriptor for DosageCollectionViewCell);
      *v23 = sub_1BC2B2930();
      v23[1] = v35;
      v23[2] = 0;
      v23[3] = 0xE000000000000000;
      v36 = v53;
      *v53 = 0;
      v36[1] = 0;
      v37 = (uint64_t *)((char *)v23 + v21[11]);
      v38 = (uint64_t *)((char *)v23 + v21[12]);
      v39 = (uint64_t *)((char *)v23 + v21[13]);
      v40 = (uint64_t *)((char *)v23 + v21[14]);
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))((char *)v23 + v21[7], v75, v76);
      *((_BYTE *)v23 + v21[8]) = 1;
      *(uint64_t *)((char *)v23 + v21[9]) = (uint64_t)v68;
      v41 = (uint64_t *)((char *)v23 + v21[10]);
      v42 = v78;
      *v41 = v77;
      v41[1] = v42;
      v43 = v80;
      v41[2] = v79;
      v41[3] = v43;
      *v37 = sub_1BC1BAD70;
      v37[1] = v30;
      v44 = v72;
      *v38 = v71;
      v38[1] = v44;
      v45 = v74;
      *v40 = v73;
      v40[1] = v45;
      *v39 = v33;
      v39[1] = v34;
      v25 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125B04(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v84;
      }
      v47 = *(_QWORD *)(v25 + 16);
      v46 = *(_QWORD *)(v25 + 24);
      v21 = v62;
      v48 = v69;
      v49 = v70;
      if (v47 >= v46 >> 1)
      {
        sub_1BC125B04(v46 > 1, v47 + 1, 1);
        v25 = v84;
      }
      v82 = v21;
      v83 = sub_1BC0E519C(&qword_1EF3FD970, type metadata accessor for DosageItem, (uint64_t)&protocol conformance descriptor for DosageItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v81);
      sub_1BC0FC574((uint64_t)v23, (uint64_t)boxed_opaque_existential_1, type metadata accessor for DosageItem);
      *(_QWORD *)(v25 + 16) = v47 + 1;
      sub_1BC0F2730(&v81, v25 + 40 * v47 + 32);
      sub_1BC0E8594((uint64_t)v23, type metadata accessor for DosageItem);
      v28 = v48 + v57;
      v24 = v49 - 1;
    }
    while (v24);
  }
  return v25;
}

uint64_t sub_1BC1BAC0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BC1BAC3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC1BAC6C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1BAC98()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1BC1BACC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Dosage();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  v6 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_1BC1BAD70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Dosage() - 8) + 80);
  return sub_1BC1B8834(a1, *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 16), v2 + ((v5 + 32) & ~v5), a2);
}

BOOL sub_1BC1BADC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC1B7DAC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC1BADDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 16);
  if ((sub_1BC2B2414() & 1) != 0)
    v6 = v5;
  else
    v6 = a1;
  return sub_1BC0FC574(v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
}

uint64_t sub_1BC1BAE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1BAE74()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1BAE98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1BC1B5C5C(a1, a2);
}

uint64_t sub_1BC1BAEA0()
{
  return sub_1BC1B5CE4();
}

uint64_t sub_1BC1BAEA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1BAECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC1B60F4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC1BAED4(uint64_t a1, uint64_t a2)
{
  return sub_1BC1B6778(a1, a2);
}

uint64_t sub_1BC1BAEDC(uint64_t a1, uint64_t a2)
{
  return sub_1BC1B67F4(a1, a2);
}

uint64_t sub_1BC1BAEE4(void (*a1)(_QWORD *__return_ptr, char *), uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(_QWORD *__return_ptr, char *);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = v5;
  v31 = a2;
  v32 = a3;
  v30 = a1;
  v9 = sub_1BC2B3350();
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a5 >> 1;
  v34 = a4;
  v14 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
    goto LABEL_19;
  result = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC125B04(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    v15 = 0;
    v27 = (a5 >> 1) - a4;
    v28 = v13;
    v29 = v10;
    while (1)
    {
      v16 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v34 + v15 >= v33 || v15 >= v14)
        goto LABEL_18;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v32 + *(_QWORD *)(v10 + 72) * (v34 + v15), v9);
      v30(v35, v13);
      if (v6)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        return swift_release();
      }
      v6 = 0;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      v17 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125B04(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v38;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
        sub_1BC125B04(v18 > 1, v19 + 1, 1);
      v20 = v36;
      v21 = v37;
      v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
      MEMORY[0x1E0C80A78](v22);
      v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v25 + 16))(v24);
      sub_1BC2241D0(v19, (uint64_t)v24, &v38, v20, v21);
      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      ++v15;
      v14 = v27;
      v13 = v28;
      v10 = v29;
      if (v16 == v27)
        return v38;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t type metadata accessor for ScheduleTypePickerViewController(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FD988);
}

uint64_t sub_1BC1BB14C()
{
  return swift_initClassMetadata2();
}

id sub_1BC1BB188(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint32_t *p_align;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD v30[4];

  v3 = *a2;
  v2 = a2[1];
  v28 = a2[3];
  sub_1BC127B70(0, (unint64_t *)&qword_1EF400100, (unint64_t *)&qword_1EF3F8998);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2B92D0;
  type metadata accessor for ScheduleTypePickerDataSource(0);
  swift_allocObject();
  v5 = swift_retain();
  v6 = sub_1BC1BB6E8(v5);
  v7 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v7;
  sub_1BC2B2DEC();
  swift_allocObject();
  sub_1BC2B2E04();
  v8 = (id)sub_1BC2B2FE4();
  p_align = &stru_1E74C9FE8.align;
  v29 = objc_msgSend(v8, sel_navigationItem);
  if (qword_1EF3F8140 != -1)
    swift_once();
  v10 = (id)qword_1EF3FE7D8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v11 = type metadata accessor for ScheduleTypePickerViewController(0);
  v30[3] = v11;
  v30[0] = v8;
  v12 = v8;
  v13 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  if (v11)
  {
    v14 = __swift_project_boxed_opaque_existential_0(v30, v11);
    v27 = v2;
    v15 = *(_QWORD *)(v11 - 8);
    MEMORY[0x1E0C80A78](v14);
    v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = sub_1BC2B53C0();
    p_align = (_DWORD *)(&stru_1E74C9FE8 + 24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v11);
    v2 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  }
  else
  {
    v18 = 0;
  }
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithTitle_style_target_action_, v13, 2, v18, sel_doneButtonSelected);

  swift_unknownObjectRelease();
  v20 = v29;
  objc_msgSend(v29, sel_setRightBarButtonItem_, v19);

  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = objc_msgSend(v12, *((SEL *)p_align + 391));

    sub_1BC2B2D38();
    v22 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v23 = (void *)sub_1BC2B2D2C();
    objc_msgSend(v21, sel_setTitleView_, v23);
    swift_release();
    sub_1BC1BAC3C(v3, v2);

  }
  else
  {
    v24 = (void *)sub_1BC2B4430();
    objc_msgSend(v12, sel_setTitle_, v24);

    swift_release();
  }
  return v12;
}

void sub_1BC1BB578()
{
  sub_1BC2B52B8();
  __break(1u);
}

id sub_1BC1BB5D0(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1BC1BB5E4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC1BB610(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC1BB640()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleTypePickerViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1BB674()
{
  return type metadata accessor for ScheduleTypePickerViewController(0);
}

uint64_t type metadata accessor for ScheduleTypePickerDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FD9E8);
}

uint64_t sub_1BC1BB690()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC1BB6E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + qword_1EF3FD9E0) = &unk_1E74AFFA0;
  *(_QWORD *)(v1 + qword_1EF3FD9D8) = a1;
  swift_retain();
  v2 = sub_1BC2B2F24();
  swift_retain();
  sub_1BC1BB868();
  swift_release();
  swift_release();
  return v2;
}

void *sub_1BC1BB764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B2DD4())
  {
    sub_1BC2B2C9C();
    sub_1BC2B2DC8();
    v4 = (void *)sub_1BC2B2D14();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    sub_1BC2B2CC0();
    sub_1BC2B2DC8();
    v4 = (void *)sub_1BC2B2D14();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    objc_msgSend(v4, sel_setContentInsets_, -4.0, 0.0, 0.0, 0.0);
  }
  return v4;
}

uint64_t sub_1BC1BB868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(unint64_t, char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v31 = sub_1BC2B2BC4();
  v0 = *(_QWORD *)(v31 - 8);
  v1 = MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v32 = (char *)&v28 - v3;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - v5;
  v7 = sub_1BC2B2D80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v11 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v12 = sub_1BC2B2D68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  sub_1BC2B2D74();
  swift_retain();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1BC1BC574(v13);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BC127B70(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v15 + 56) = v7;
  *(_QWORD *)(v15 + 64) = sub_1BC1BC460();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  v30 = v8;
  (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_1, v10, v7);
  v17 = v32;
  sub_1BC2B2BAC();
  sub_1BC0F8634(v14);
  swift_bridgeObjectRelease();
  v18 = v33;
  sub_1BC2B2BAC();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v29 = v10;
  v19 = v0;
  v20 = *(_QWORD *)(v0 + 72);
  v21 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BC2B92C0;
  v23 = v22 + v21;
  v24 = *(void (**)(unint64_t, char *, uint64_t))(v0 + 16);
  v25 = v31;
  v24(v23, v17, v31);
  v24(v23 + v20, v18, v25);
  sub_1BC2B2C18();
  swift_bridgeObjectRelease();
  v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v18, v25);
  v26(v17, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v29, v7);
}

uint64_t sub_1BC1BBC60()
{
  void (*v0)(_BYTE *, _QWORD);
  id v1;
  uint64_t (*v2)(_BYTE *, _QWORD);
  _BYTE v4[32];

  sub_1BC2B3C80();
  sub_1BC1956CC();
  sub_1BC2B4C64();
  v0 = (void (*)(_BYTE *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BA8();
  v0(v4, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v2 = (uint64_t (*)(_BYTE *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  return v2(v4, 0);
}

uint64_t sub_1BC1BBD44()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = sub_1BC2B3EC0();
    sub_1BC1BB868(v1);
    return swift_release();
  }
  return result;
}

void sub_1BC1BBDC0()
{
  sub_1BC1BBDF0();
}

void sub_1BC1BBDD8()
{
  sub_1BC1BBDF0();
}

void sub_1BC1BBDF0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1BBE18()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1BBE44()
{
  sub_1BC2B2F3C();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1BBE90()
{
  return type metadata accessor for ScheduleTypePickerDataSource(0);
}

uint64_t sub_1BC1BBE98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v5 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v6 = sub_1BC2B2D68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  a1[3] = sub_1BC2B2D80();
  a1[4] = sub_1BC1BC460();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1BC2B2D74();
}

uint64_t sub_1BC1BC020()
{
  sub_1BC2B3CBC();
  return sub_1BC2B3C50();
}

uint64_t sub_1BC1BC054@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC1BBE98(a1);
}

uint64_t sub_1BC1BC068()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  return sub_1BC2B497C();
}

uint64_t sub_1BC1BC0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_1BC2B3A34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = sub_1BC2B3A58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2B92D0;
  v12 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  sub_1BC2B3A4C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC1C20], v0);
  sub_1BC2B3AC4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1BC1BC2A8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1BC1BC4A8((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1BC1BC310@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t (*v5)(uint64_t *, _QWORD);
  uint64_t v7;

  v2 = sub_1BC2B3CD4();
  v3 = MEMORY[0x1E0DC2398];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1BC2B3C80();
  swift_bridgeObjectRetain();
  sub_1BC2B3C98();
  swift_bridgeObjectRetain();
  sub_1BC2B3B6C();
  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v5 = (uint64_t (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BB4();
  return v5(&v7, 0);
}

uint64_t sub_1BC1BC3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t result;

  v3 = *(uint64_t (**)(uint64_t))(v2 + 72);
  if (v3)
    return v3(a2);
  return result;
}

uint64_t sub_1BC1BC418@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC2B2C6C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

unint64_t sub_1BC1BC460()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8E80;
  if (!qword_1EF3F8E80)
  {
    v1 = sub_1BC2B2D80();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2B310], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E80);
  }
  return result;
}

uint64_t sub_1BC1BC4A8(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v4 || (v5 = sub_1BC2B53CC(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v7 || (v8 = sub_1BC2B53CC(), v6 = 0, (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(a1 + 56);
      v10 = *(_QWORD *)(a2 + 56);
      if (v9)
      {
        if (v10)
        {
          if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48) || v9 != v10)
          {
            v11 = sub_1BC2B53CC();
            v6 = 0;
            if ((v11 & 1) == 0)
              return v6 & 1;
          }
LABEL_19:
          v6 = ((*(_BYTE *)(a1 + 64) & 1) == 0) ^ *(_BYTE *)(a2 + 64);
          return v6 & 1;
        }
      }
      else if (!v10)
      {
        goto LABEL_19;
      }
      v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_1BC1BC574(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BC125E30(0, v1, 0);
    v2 = v25;
    v4 = (uint64_t *)(a1 + 32);
    sub_1BC2B3038();
    do
    {
      v24 = v4 + 1;
      if (*v4 == 5)
        v5 = 3;
      else
        v5 = *v4;
      sub_1BC2B51BC();
      swift_bridgeObjectRelease();
      sub_1BC2B539C();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      v6 = sub_1BC1527F0(v5);
      v22 = v7;
      v23 = v6;
      v8 = sub_1BC152AD8(v5);
      v20 = v9;
      v21 = v8;
      sub_1BC2B3ED8();
      v10 = swift_allocObject();
      swift_weakInit();
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v10;
      *(_QWORD *)(v11 + 24) = v5;
      v12 = sub_1BC2B2930();
      v14 = v13;
      v16 = *(_QWORD *)(v25 + 16);
      v15 = *(_QWORD *)(v25 + 24);
      if (v16 >= v15 >> 1)
        sub_1BC125E30(v15 > 1, v16 + 1, 1);
      v17 = v5 == 0xD000000000000019;
      *(_QWORD *)(v25 + 16) = v16 + 1;
      v18 = v25 + 88 * v16;
      *(_QWORD *)(v18 + 32) = v12;
      *(_QWORD *)(v18 + 40) = v14;
      v4 = v24;
      *(_QWORD *)(v18 + 48) = 0xD000000000000019;
      *(_QWORD *)(v18 + 56) = 0x80000001BC2CF890;
      *(_QWORD *)(v18 + 64) = v23;
      *(_QWORD *)(v18 + 72) = v22;
      *(_QWORD *)(v18 + 80) = v21;
      *(_QWORD *)(v18 + 88) = v20;
      *(_BYTE *)(v18 + 96) = v17;
      *(_QWORD *)(v18 + 104) = sub_1BC1BC80C;
      *(_QWORD *)(v18 + 112) = v11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC1BC7C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1BC7E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1BC80C()
{
  return sub_1BC1BBD44();
}

uint64_t destroy for ScheduleTypeOptionItem(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for ScheduleTypeOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v9 = (_OWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v8;
    *(_QWORD *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v9;
  }
  return a1;
}

uint64_t assignWithCopy for ScheduleTypeOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 72);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  if (!v4)
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v5;
      *(_QWORD *)(a1 + 80) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 80) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ScheduleTypeOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  if (!v9)
  {
    if (v8)
    {
      v11 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v11;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v10;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduleTypeOptionItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleTypeOptionItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleTypeOptionItem()
{
  return &type metadata for ScheduleTypeOptionItem;
}

uint64_t MedicationDetailItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailItem.uniqueIdentifier.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_description);
  sub_1BC2B4460();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x74496C6961746544;
}

uint64_t static MedicationDetailItem.== infix(_:_:)()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  return sub_1BC2B4D84() & 1;
}

void MedicationDetailItem.hash(into:)()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  sub_1BC2B4D90();

}

uint64_t MedicationDetailItem.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC2B5450();
  v2 = objc_msgSend(v1, sel_semanticIdentifier);
  sub_1BC2B4D90();

  return sub_1BC2B548C();
}

uint64_t sub_1BC1BCD8C()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC2B5450();
  v2 = objc_msgSend(v1, sel_semanticIdentifier);
  sub_1BC2B4D90();

  return sub_1BC2B548C();
}

void sub_1BC1BCDEC()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  sub_1BC2B4D90();

}

uint64_t sub_1BC1BCE40()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC2B5450();
  v2 = objc_msgSend(v1, sel_semanticIdentifier);
  sub_1BC2B4D90();

  return sub_1BC2B548C();
}

unint64_t sub_1BC1BCEA0()
{
  unint64_t result;

  result = qword_1EF3FDA38;
  if (!qword_1EF3FDA38)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationDetailItem, &type metadata for MedicationDetailItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FDA38);
  }
  return result;
}

uint64_t sub_1BC1BCEE4()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  return sub_1BC2B4D84() & 1;
}

uint64_t sub_1BC1BCF34()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_description);
  sub_1BC2B4460();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x74496C6961746544;
}

ValueMetadata *type metadata accessor for MedicationDetailItem()
{
  return &type metadata for MedicationDetailItem;
}

id sub_1BC1BCFF0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___nickNameLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___nickNameLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___nickNameLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v7 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v7);

    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1BC1BD144()
{
  return sub_1BC1BD15C(&OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___medicationNameFormLabel);
}

id sub_1BC1BD150()
{
  return sub_1BC1BD15C(&OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___strengthLabel);
}

id sub_1BC1BD15C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = v1;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v6, sel_setNumberOfLines_, 0);
    objc_msgSend(v6, sel_setTextAlignment_, 1);
    v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v6, sel_setTextColor_, v7);

    objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v8 = (void *)sub_1BC2B4C64();
    objc_msgSend(v6, sel_setFont_, v8);

    v9 = *(void **)(v5 + v2);
    *(_QWORD *)(v5 + v2) = v6;
    v4 = v6;

    v3 = 0;
  }
  v10 = v3;
  return v4;
}

void sub_1BC1BD404()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - v3;
  sub_1BC2B3B30();
  v5 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  MEMORY[0x1BCCEE23C](v4);
  sub_1BC0E7940();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC2BB4D0;
  *(_QWORD *)(v6 + 32) = sub_1BC1BCFF0();
  *(_QWORD *)(v6 + 40) = sub_1BC1BD144();
  *(_QWORD *)(v6 + 48) = sub_1BC1BD150();
  v31 = v6;
  sub_1BC2B45A4();
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v8 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithArrangedSubviews_, v8);

  objc_msgSend(v9, sel_setAxis_, 1);
  objc_msgSend(v9, sel_setAlignment_, 3);
  objc_msgSend(v9, sel_setDistribution_, 0);
  objc_msgSend(v9, sel_setSpacing_, 4.0);
  v10 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, v9);

  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v11 = (void *)objc_opt_self();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC2BA730;
  v13 = objc_msgSend(v9, sel_leadingAnchor);
  v14 = objc_msgSend(v1, sel_contentView);
  v15 = objc_msgSend(v14, sel_leadingAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, 16.0);
  *(_QWORD *)(v12 + 32) = v16;
  v17 = objc_msgSend(v9, sel_trailingAnchor);
  v18 = objc_msgSend(v1, sel_contentView);
  v19 = objc_msgSend(v18, sel_trailingAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -16.0);
  *(_QWORD *)(v12 + 40) = v20;
  v21 = objc_msgSend(v9, sel_topAnchor);
  v22 = objc_msgSend(v1, sel_contentView);
  v23 = objc_msgSend(v22, sel_topAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v12 + 48) = v24;
  v25 = objc_msgSend(v9, sel_bottomAnchor);
  v26 = objc_msgSend(v1, sel_contentView);
  v27 = objc_msgSend(v26, sel_bottomAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(_QWORD *)(v12 + 56) = v28;
  v31 = v12;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v29 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_activateConstraints_, v29);

}

void sub_1BC1BD86C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58[3];
  _QWORD v59[5];

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v53 - v7;
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v9, (uint64_t)v59);
  if (!v59[3])
  {
    sub_1BC0F7954((uint64_t)v59);
LABEL_6:
    sub_1BC2B39A4();
    v15 = v1;
    v16 = sub_1BC2B39D4();
    v17 = sub_1BC2B48C8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = (void *)swift_slowAlloc();
      v56 = v2;
      v20 = v19;
      v58[0] = v19;
      *(_DWORD *)v18 = 136446466;
      v21 = sub_1BC2B54F8();
      v59[0] = sub_1BC12540C(v21, v22, (uint64_t *)v58);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_1BC0E5774(v9, (uint64_t)v59);
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
      v23 = sub_1BC2B4490();
      v59[0] = sub_1BC12540C(v23, v24, (uint64_t *)v58);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v16, v17, "%{public}s Incorrect view model for MedicationDetailCell: %s Expecting MedicationDetailItem", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
      MEMORY[0x1BCCEF3A0](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v56);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    return;
  }
  sub_1BC0E1B94();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v10 = v58[0];
  v55 = v58[2];
  v56 = v2;
  v11 = objc_msgSend(v58[0], sel_userSpecifiedName);
  v12 = sub_1BC1BCFF0();
  v13 = v12;
  if (v11)
  {
    objc_msgSend(v12, sel_setText_, v11);

    v14 = sub_1BC1BCFF0();
    objc_msgSend(v14, sel_setHidden_, 0);
  }
  else
  {
    objc_msgSend(v12, sel_setText_, 0);

    v14 = sub_1BC1BCFF0();
    objc_msgSend(v14, sel_setHidden_, 1);
  }

  v59[0] = v10;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v25 = sub_1BC2B3740();
  if (v26)
  {
    v27 = (void *)v25;
    v28 = v26;
  }
  else
  {
    v29 = objc_msgSend(v10, sel_freeTextMedicationName);
    if (!v29)
    {
      sub_1BC2B39A4();
      v44 = v1;
      v45 = sub_1BC2B39D4();
      v46 = sub_1BC2B48C8();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc();
        v54 = swift_slowAlloc();
        v57 = v54;
        *(_DWORD *)v47 = 136446466;
        v48 = sub_1BC2B54F8();
        v59[0] = sub_1BC12540C(v48, v49, &v57);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2080;
        sub_1BC0E5774(v9, (uint64_t)v59);
        sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
        v50 = sub_1BC2B4490();
        v59[0] = sub_1BC12540C(v50, v51, &v57);
        sub_1BC2B4FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v45, v46, "%{public}s Failed to retrieve medication name: %s", (uint8_t *)v47, 0x16u);
        v52 = v54;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v52, -1, -1);
        MEMORY[0x1BCCEF3A0](v47, -1, -1);
        swift_bridgeObjectRelease();

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v56);
      return;
    }
    v30 = v29;
    v27 = (void *)sub_1BC2B4460();
    v28 = v31;

  }
  v58[0] = v27;
  v58[1] = v28;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
  if (v32)
  {
    v59[0] = 8236;
    v59[1] = 0xE200000000000000;
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
  }
  v33 = sub_1BC1BD144();
  v34 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setText_, v34);

  v35 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  if (v36)
    v37 = v35;
  else
    v37 = 0;
  if (v36)
    v38 = v36;
  else
    v38 = 0xE000000000000000;
  v39 = sub_1BC1BD150();
  v40 = v39;
  v41 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v41 = v37 & 0xFFFFFFFFFFFFLL;
  objc_msgSend(v39, (SEL)&selRef_setLocalizedDateFormatFromTemplate_, v41 == 0);

  v42 = sub_1BC1BD150();
  v43 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_setText_, v43);

  swift_bridgeObjectRelease();
}

id sub_1BC1BDF00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDetailCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDetailCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1BDFA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1BDFF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1BD86C();
  return sub_1BC0F7954(a1);
}

void (*sub_1BC1BE064(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1BE0AC;
}

void sub_1BC1BE0AC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC1BD86C();
}

uint64_t TextViewItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC2B2438();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TextViewItem.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TextViewItem()
{
  uint64_t result;

  result = qword_1EF3FDAF8;
  if (!qword_1EF3FDAF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TextViewItem.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextViewItem() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextViewItem.text.modify())()
{
  type metadata accessor for TextViewItem();
  return nullsub_1;
}

uint64_t TextViewItem.placeholder.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextViewItem.placeholder.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextViewItem() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextViewItem.placeholder.modify())()
{
  type metadata accessor for TextViewItem();
  return nullsub_1;
}

uint64_t TextViewItem.characterLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 28));
}

uint64_t TextViewItem.characterLimit.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for TextViewItem();
  v6 = v2 + *(int *)(result + 28);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TextViewItem.characterLimit.modify())()
{
  type metadata accessor for TextViewItem();
  return nullsub_1;
}

double TextViewItem.height.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 32));
}

uint64_t TextViewItem.height.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextViewItem();
  *(double *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*TextViewItem.height.modify())()
{
  type metadata accessor for TextViewItem();
  return nullsub_1;
}

uint64_t TextViewItem.isEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 36));
}

uint64_t TextViewItem.isEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextViewItem();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*TextViewItem.isEnabled.modify())()
{
  type metadata accessor for TextViewItem();
  return nullsub_1;
}

uint64_t TextViewItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextViewItem.uniqueIdentifier.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "TextViewItem.");
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t TextViewItem.init(text:height:placeholder:characterLimit:isEnabled:updateHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11)
{
  int *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;

  sub_1BC2B242C();
  v16 = (int *)type metadata accessor for TextViewItem();
  v17 = (_QWORD *)(a9 + v16[5]);
  v18 = (_QWORD *)(a9 + v16[6]);
  v19 = a9 + v16[7];
  v20 = (uint64_t *)(a9 + v16[11]);
  type metadata accessor for TextItemCell();
  sub_1BC0E008C(&qword_1EF3FDA90, v21, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&unk_1BC2C0300);
  result = sub_1BC2B2930();
  *v20 = result;
  v20[1] = v23;
  *v17 = a1;
  v17[1] = a2;
  *(double *)(a9 + v16[8]) = a10;
  *v18 = a3;
  v18[1] = a4;
  *(_QWORD *)v19 = a5;
  *(_BYTE *)(v19 + 8) = a6 & 1;
  *(_BYTE *)(a9 + v16[9]) = a7;
  v24 = (_QWORD *)(a9 + v16[10]);
  *v24 = a8;
  v24[1] = a11;
  return result;
}

uint64_t type metadata accessor for TextItemCell()
{
  return objc_opt_self();
}

uint64_t TextViewItem.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 20) + 8))
  {
    sub_1BC2B5468();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC2B5468();
  }
  sub_1BC2B5480();
  return sub_1BC2B5468();
}

uint64_t TextViewItem.hashValue.getter()
{
  uint64_t v0;

  sub_1BC2B5450();
  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 20) + 8))
  {
    sub_1BC2B5468();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC2B5468();
  }
  sub_1BC2B5480();
  sub_1BC2B5468();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1BE768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_1BC2B5468();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC2B5468();
  }
  sub_1BC2B5480();
  return sub_1BC2B5468();
}

uint64_t sub_1BC1BE804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC2B5450();
  if (*(_QWORD *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_1BC2B5468();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC2B5468();
  }
  sub_1BC2B5480();
  sub_1BC2B5468();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1BE8C8()
{
  _QWORD v1[2];

  strcpy((char *)v1, "TextViewItem.");
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1BC1BE928(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 28));
}

id sub_1BC1BE93C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView);
  }
  else
  {
    v4 = sub_1BC1BE99C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1BE99C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for UITextViewWithPlaceholder();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1BC2B4868();
  objc_msgSend(v2, sel_setTextContainerInset_);
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v6 = v4;
  v7 = (void *)sub_1BC2B4C64();
  objc_msgSend(v6, sel_setFont_, v7);

  objc_msgSend(v6, sel_setDelegate_, a1);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v15 = sub_1BC2B4460();
  v16 = v8;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v9 = v6;
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10, v15, v16);

  sub_1BC0E7940();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v11 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, a1, 0);
  *(_QWORD *)(v11 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, a1, sel_didTapDoneWithSender_);
  sub_1BC2B45A4();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3E68]), sel_init, v11);
  objc_msgSend(v12, sel_setBarStyle_, 0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  v13 = (void *)sub_1BC2B4580();
  objc_msgSend(v12, sel_setItems_, v13);

  objc_msgSend(v12, sel_sizeToFit);
  objc_msgSend(v9, sel_setInputAccessoryView_, v12);

  swift_bridgeObjectRelease();
  return v9;
}

id sub_1BC1BECB0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  objc_super v26;

  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v12 = sub_1BC2B3B48();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView] = 0;
  v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item];
  v17 = (objc_class *)type metadata accessor for TextItemCell();
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v26.receiver = v4;
  v26.super_class = v17;
  v18 = objc_msgSendSuper2(&v26, sel_initWithFrame_, a1, a2, a3, a4);
  v19 = objc_msgSend(v18, sel_contentView);
  v20 = sub_1BC1BE93C();
  objc_msgSend(v19, sel_addSubview_, v20);

  v21 = sub_1BC1BE93C();
  sub_1BC2B263C();
  v22 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  sub_1BC2B3B24();
  v23 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
  sub_1BC2B3B18();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v24 = v18;
  MEMORY[0x1BCCEE23C](v11);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v24;
}

void sub_1BC1BEEF8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  _BYTE v39[24];
  _QWORD v40[5];

  sub_1BC0E1C64(0, &qword_1EF3FDBE0, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v39[-v2];
  v4 = sub_1BC1BE93C();
  v5 = sub_1BC1BE93C();
  v6 = objc_msgSend(v5, sel_constraints);

  if (!v6)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    sub_1BC2B458C();
    v6 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_removeConstraints_, v6);

  sub_1BC0E7940();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2BDB30;
  v8 = sub_1BC1BE93C();
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = objc_msgSend(v0, sel_contentView);
  v11 = objc_msgSend(v10, sel_leadingAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(_QWORD *)(v7 + 32) = v12;
  v13 = sub_1BC1BE93C();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v0, sel_contentView);
  v16 = objc_msgSend(v15, sel_trailingAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v7 + 40) = v17;
  v18 = sub_1BC1BE93C();
  v19 = objc_msgSend(v18, sel_topAnchor);

  v20 = objc_msgSend(v0, sel_contentView);
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v7 + 48) = v22;
  v23 = sub_1BC1BE93C();
  v24 = objc_msgSend(v23, sel_bottomAnchor);

  v25 = objc_msgSend(v0, sel_contentView);
  v26 = objc_msgSend(v25, sel_bottomAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v7 + 56) = v27;
  v28 = sub_1BC1BE93C();
  v29 = objc_msgSend(v28, sel_heightAnchor);

  v30 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v30, (uint64_t)v40);
  if (!v40[3])
  {
    sub_1BC0E7B24((uint64_t)v40, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
    v35 = type metadata accessor for TextViewItem();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v3, 1, 1, v35);
    goto LABEL_7;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v31 = type metadata accessor for TextViewItem();
  v32 = swift_dynamicCast();
  v33 = *(_QWORD *)(v31 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v3, v32 ^ 1u, 1, v31);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(v3, 1, v31) == 1)
  {
LABEL_7:
    sub_1BC1C0EB8((uint64_t)v3);
    v34 = 60.0;
    goto LABEL_8;
  }
  v34 = *(double *)&v3[*(int *)(v31 + 32)];
  sub_1BC1C0F48((uint64_t)v3);
LABEL_8:
  v36 = (void *)objc_opt_self();
  v37 = objc_msgSend(v29, sel_constraintEqualToConstant_, v34);

  *(_QWORD *)(v7 + 64) = v37;
  v40[0] = v7;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v38 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_activateConstraints_, v38);

}

uint64_t sub_1BC1BF474()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FDBE0, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  v9 = (int *)type metadata accessor for TextViewItem();
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v13, (uint64_t)v34);
  if (!v34[3])
  {
    sub_1BC0E7B24((uint64_t)v34, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v10 + 56))(v8, 1, 1, v9);
LABEL_6:
    sub_1BC1C0EB8((uint64_t)v8);
    sub_1BC2B39A4();
    v23 = v1;
    v24 = sub_1BC2B39D4();
    v25 = sub_1BC2B48C8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v32 = v2;
      v33 = v27;
      *(_DWORD *)v26 = 136446210;
      sub_1BC0E5774(v13, (uint64_t)v34);
      sub_1BC0E7A84(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
      v28 = sub_1BC2B4490();
      v34[0] = sub_1BC12540C(v28, v29, &v33);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v24, v25, "Incorrect view model for TextItemCell: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v27, -1, -1);
      MEMORY[0x1BCCEF3A0](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v32);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v14 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_6;
  sub_1BC1C0F04((uint64_t)v8, (uint64_t)v12);
  sub_1BC1BEEF8();
  v15 = sub_1BC1BE93C();
  v16 = (uint64_t *)&v12[v9[5]];
  v17 = *v16;
  v18 = v16[1];
  swift_bridgeObjectRetain();
  UITextViewWithPlaceholder.text.setter(v17, v18);

  v19 = sub_1BC1BE93C();
  v20 = *(_QWORD *)&v12[v9[6] + 8];
  swift_bridgeObjectRetain();
  v21 = sub_1BC256E3C();
  if (v20)
  {
    v22 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v21, sel_setText_, v22);

  v31 = sub_1BC1BE93C();
  objc_msgSend(v31, sel_setUserInteractionEnabled_, v12[v9[9]]);

  return sub_1BC1C0F48((uint64_t)v12);
}

BOOL sub_1BC1BF8E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  id v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v9 = v5 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v9, (uint64_t)v25);
  if (!v26)
  {
    sub_1BC0E7B24((uint64_t)v25, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
    v27 = 0u;
    v28 = 0u;
    v29 = 0;
    goto LABEL_9;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  sub_1BC0E7AD8(0, &qword_1EF3FDBF0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
    goto LABEL_9;
  }
  v10 = *((_QWORD *)&v28 + 1);
  if (!*((_QWORD *)&v28 + 1))
  {
LABEL_9:
    sub_1BC0E7B24((uint64_t)&v27, &qword_1EF3FDBE8, &qword_1EF3FDBF0);
    return 1;
  }
  v11 = v29;
  __swift_project_boxed_opaque_existential_0(&v27, *((uint64_t *)&v28 + 1));
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  if ((v14 & 1) != 0)
    return 1;
  v15 = objc_msgSend(a1, sel_text);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1BC2B4460();
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0xE000000000000000;
  }
  v21 = sub_1BC2B4844();
  if ((v23 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1BC1BFB00(v21, v22, a4, a5, v17, v19);
    swift_bridgeObjectRelease();
    v24 = sub_1BC2B44E4();
    swift_bridgeObjectRelease();
    return v12 >= v24;
  }
}

uint64_t sub_1BC1BFB00(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  swift_bridgeObjectRetain();
  sub_1BC2B4FB8();
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  sub_1BC2B4FB8();
  v15 = v14;
  result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v17) = 1;
  v18 = 4 << v17;
  v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    result = sub_1BC1C04BC(a1, a5, a6);
    v19 = result;
  }
  v40 = a3;
  v20 = a2;
  v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v23 = a6 & 0x2000000000000000;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0)
      v32 = HIBYTE(a6) & 0xF;
    else
      v32 = a5 & 0xFFFFFFFFFFFFLL;
    if (v32 < v19 >> 16)
      goto LABEL_43;
    result = sub_1BC2B4520();
    v22 = result;
    if (v21)
      v26 = 7;
    else
      v26 = 11;
  }
  else
  {
    v22 = v19 >> 16;
    v23 = a6 & 0x2000000000000000;
    v24 = HIBYTE(a6) & 0xF;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v26 = 7;
  }
  if (!v23)
    v24 = v25;
  v27 = 4 << (v21 >> 59);
  v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0)
    v27 = 8;
  v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    v33 = v20;
    v34 = v22;
    result = sub_1BC1C04BC(v33, a5, a6);
    v22 = v34;
    v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    v35 = v26 | (v24 << 16);
    v36 = v22;
    result = sub_1BC1C04BC(v35, a5, a6);
    v22 = v36;
    v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    v37 = v22;
    v38 = sub_1BC2B4520();
    v22 = v37;
    v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        result = HIBYTE(a4) & 0xF;
        v31 = v22 + result;
        if (!__OFADD__(v22, result))
          goto LABEL_23;
      }
      else
      {
        result = v40 & 0xFFFFFFFFFFFFLL;
        v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL))
          goto LABEL_23;
      }
      goto LABEL_39;
    }
LABEL_37:
    v39 = v22;
    result = sub_1BC2B4508();
    v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1BCCEDC3C](result);
LABEL_25:
        sub_1BC2B4544();
        sub_1BC1C0F84();
        sub_1BC2B44F0();
        swift_bridgeObjectRelease();
        sub_1BC2B44F0();
        sub_1BC1C0534(a2, a5, a6);
        sub_1BC2B44F0();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1BC1BFED0(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  void (*v16)(char *, uint64_t, unint64_t);
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FDBE0, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  v10 = type metadata accessor for TextViewItem();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v14, (uint64_t)v32);
  if (!v32[3])
  {
    sub_1BC0E7B24((uint64_t)v32, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_6:
    sub_1BC1C0EB8((uint64_t)v9);
    sub_1BC2B39A4();
    v22 = v1;
    v23 = sub_1BC2B39D4();
    v24 = sub_1BC2B48C8();
    if (os_log_type_enabled(v23, v24))
    {
      v30 = v3;
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v31 = v26;
      *(_DWORD *)v25 = 136446210;
      sub_1BC0E5774(v14, (uint64_t)v32);
      sub_1BC0E7A84(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
      v27 = sub_1BC2B4490();
      v32[0] = sub_1BC12540C(v27, v28, &v31);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v23, v24, "Incorrect view model for TextItemCell: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v26, -1, -1);
      MEMORY[0x1BCCEF3A0](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v30);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v15 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, v15 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_6;
  sub_1BC1C0F04((uint64_t)v9, (uint64_t)v13);
  v16 = *(void (**)(char *, uint64_t, unint64_t))&v13[*(int *)(v10 + 40)];
  swift_retain();
  v17 = objc_msgSend(a1, sel_text);
  if (v17)
  {
    v18 = v17;
    v19 = sub_1BC2B4460();
    v21 = v20;

  }
  else
  {
    v19 = 0;
    v21 = 0xE000000000000000;
  }
  v16(v13, v19, v21);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1BC1C0F48((uint64_t)v13);
}

id sub_1BC1C02EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1C0370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1C03C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1BF474();
  return sub_1BC0E7B24(a1, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
}

uint64_t (*sub_1BC1C0444(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1C048C;
}

uint64_t sub_1BC1C048C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1BF474();
  return result;
}

uint64_t sub_1BC1C04BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1BC2B452C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1BCCEDC90](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unint64_t sub_1BC1C0534(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1BC2B4544();
  __break(1u);
  return result;
}

uint64_t _s19HealthMedicationsUI12TextViewItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v23;
  double v24;
  double v25;
  char v26;
  char v27;
  char v28;
  uint64_t v30;

  v4 = type metadata accessor for TextViewItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v30 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v30 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v30 - v15;
  v17 = *(int *)(v14 + 20);
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  if (!v19)
  {
    if (!v21)
    {
LABEL_12:
      sub_1BC1C0FC8(a1, (uint64_t)&v30 - v15);
      sub_1BC1C0FC8(a2, (uint64_t)v13);
      goto LABEL_13;
    }
LABEL_10:
    sub_1BC1C0FC8(a1, (uint64_t)&v30 - v15);
    sub_1BC1C0FC8(a2, (uint64_t)v13);
    goto LABEL_11;
  }
  if (!v21)
    goto LABEL_10;
  if (*v18 == *v20 && v19 == v21)
    goto LABEL_12;
  v23 = sub_1BC2B53CC();
  sub_1BC1C0FC8(a1, (uint64_t)v16);
  sub_1BC1C0FC8(a2, (uint64_t)v13);
  if ((v23 & 1) == 0)
  {
LABEL_11:
    sub_1BC1C0F48((uint64_t)v13);
    sub_1BC1C0F48((uint64_t)v16);
    sub_1BC1C0FC8(a1, (uint64_t)v10);
    sub_1BC1C0FC8(a2, (uint64_t)v7);
LABEL_15:
    sub_1BC1C0F48((uint64_t)v7);
    sub_1BC1C0F48((uint64_t)v10);
    v28 = 0;
    return v28 & 1;
  }
LABEL_13:
  v24 = *(double *)&v16[*(int *)(v4 + 32)];
  sub_1BC1C0F48((uint64_t)v16);
  v25 = *(double *)&v13[*(int *)(v4 + 32)];
  sub_1BC1C0F48((uint64_t)v13);
  sub_1BC1C0FC8(a1, (uint64_t)v10);
  sub_1BC1C0FC8(a2, (uint64_t)v7);
  if (v24 != v25)
    goto LABEL_15;
  v26 = v10[*(int *)(v4 + 36)];
  sub_1BC1C0F48((uint64_t)v10);
  v27 = v7[*(int *)(v4 + 36)];
  sub_1BC1C0F48((uint64_t)v7);
  v28 = v26 ^ v27 ^ 1;
  return v28 & 1;
}

uint64_t sub_1BC1C0798()
{
  return sub_1BC0E008C(&qword_1EF3FDA98, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextViewItem, (uint64_t)&protocol conformance descriptor for TextViewItem);
}

_QWORD *initializeBufferWithCopyOfBuffer for TextViewItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    v18[8] = v19[8];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    v20 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[11];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TextViewItem(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v19 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[11];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  *(_BYTE *)(v14 + 8) = *((_BYTE *)v15 + 8);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  v21 = a3[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v12 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v21 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  swift_release();
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextViewItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1C0D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TextViewItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1C0D94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC1C0E0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC1C0EB8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E1C64(0, &qword_1EF3FDBE0, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC1C0F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TextViewItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1C0F48(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TextViewItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC1C0F84()
{
  unint64_t result;

  result = qword_1EF3FDBF8;
  if (!qword_1EF3FDBF8)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EF3FDBF8);
  }
  return result;
}

uint64_t sub_1BC1C0FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TextViewItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t InteractionResultItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1EF402908;
  v4 = sub_1BC2B2438();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InteractionResultItem.reuseIdentifier.getter()
{
  uint64_t v0;

  v0 = sub_1BC1C1400();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t InteractionResultItem.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 88) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
}

uint64_t InteractionResultItem.__allocating_init(item:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  InteractionResultItem.init(item:)(a1);
  return v2;
}

uint64_t *InteractionResultItem.init(item:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v3 = *v1;
  sub_1BC2B242C();
  v4 = (uint64_t *)((char *)v1 + qword_1EF402910);
  *v4 = sub_1BC2B2924();
  v4[1] = v5;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 88) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 120), a1);
  return v1;
}

uint64_t sub_1BC1C1168()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1EF402910);
  sub_1BC2B23FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static InteractionResultItem.== infix(_:_:)()
{
  return sub_1BC2B2414();
}

uint64_t sub_1BC1C11FC()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t *InteractionResultItem.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = (uint64_t)v0 + qword_1EF402908;
  v3 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  return v0;
}

uint64_t InteractionResultItem.__deallocating_deinit()
{
  InteractionResultItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1C12F0()
{
  sub_1BC2B5450();
  sub_1BC1C11FC();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1C132C()
{
  uint64_t v0;

  v0 = sub_1BC1C1400();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BC1C1364()
{
  return sub_1BC1C1168();
}

uint64_t sub_1BC1C1384()
{
  return sub_1BC1C11FC();
}

uint64_t sub_1BC1C13A4()
{
  sub_1BC2B5450();
  sub_1BC1C11FC();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1C13E0()
{
  return static InteractionResultItem.== infix(_:_:)() & 1;
}

uint64_t sub_1BC1C1400()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1EF402910);
}

void sub_1BC1C1414()
{
  JUMPOUT(0x1BCCEF2BCLL);
}

uint64_t sub_1BC1C1424()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InteractionResultItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InteractionResultItem);
}

uint64_t method lookup function for InteractionResultItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionResultItem.__allocating_init(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of InteractionResultItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of InteractionResultItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of InteractionResultItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1BC1C14FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B3CD4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v11, (uint64_t)v22);
  if (v23)
  {
    sub_1BC0E1B94();
    type metadata accessor for MedicationsDayHistoryEmptyItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      MEMORY[0x1BCCEE284]();
      swift_bridgeObjectRetain();
      sub_1BC2B3C98();
      v23 = v7;
      v24 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
      (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_1, v10, v7);
      MEMORY[0x1BCCEE224](v22);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v22);
  }
  sub_1BC2B39A4();
  v14 = sub_1BC2B39D4();
  v15 = sub_1BC2B48C8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v16 = 136446210;
    v22[0] = ObjectType;
    swift_getMetatypeMetadata();
    v18 = sub_1BC2B4478();
    v22[0] = sub_1BC12540C(v18, v19, &v21);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v14, v15, "[%{public}s]: Unexpected view model.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v17, -1, -1);
    MEMORY[0x1BCCEF3A0](v16, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_1BC1C18B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsDayHistoryEmptyCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsDayHistoryEmptyCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1C1910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1C1960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1C14FC();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC1C19CC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1C1A14;
}

uint64_t sub_1BC1C1A14(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1C14FC();
  return result;
}

uint64_t sub_1BC1C1A44()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  sub_1BC2B4538();
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1BC1C1ACC()
{
  UIView *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  void *v4;
  void *v5;
  id v6;
  _BYTE v7[24];
  uint64_t v8;

  v1 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v1, (uint64_t)v7);
  if (v8)
  {
    sub_1BC0E1B94();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_headerView;
      objc_msgSend(*(id *)((char *)&v0->super.super.isa+ OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_headerView), sel_removeFromSuperview);
      v3 = (objc_class *)sub_1BC1C1FB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = *(Class *)((char *)&v0->super.super.isa + v2);
      *(Class *)((char *)&v0->super.super.isa + v2) = v3;

      v5 = *(Class *)((char *)&v0->super.super.isa + v2);
      if (v5)
      {
        v6 = v5;
        -[UIView addSubview:](v0, sel_addSubview_, v6);
        UIView.alignConstraints(to:)(v0);

      }
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v7);
  }
}

id sub_1BC1C1CE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationOnboardingHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationOnboardingHeaderCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1C1D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1C1DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1C1ACC();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC1C1E28(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1C1E70;
}

uint64_t sub_1BC1C1E74@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1C1EC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1C1ACC();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC1C1F38(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC1C1E70;
}

void sub_1BC1C1F84(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC1C1ACC();
}

id sub_1BC1C1FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  void *v13;
  void (*v14)(_BYTE *, uint64_t);
  void *v15;
  id v16;
  id v17;
  _BYTE v19[32];

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BC2B3CD4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v19[-v9];
  sub_1BC2B3C5C();
  swift_bridgeObjectRetain();
  sub_1BC2B3C98();
  sub_1BC2B2C9C();
  sub_1BC2B2CFC();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC2B3C50();
  v11 = (void (*)(_BYTE *, _QWORD))sub_1BC2B3C38();
  *(_QWORD *)(v12 + 16) = 0;
  v11(v19, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
  v13 = (void *)sub_1BC2B3B54();
  v14 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v15 = (void *)objc_opt_self();
  v16 = v13;
  v17 = objc_msgSend(v15, sel_systemBackgroundColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v14(v10, v4);
  return v16;
}

ValueMetadata *type metadata accessor for MedicationOnboardingHeaderItem()
{
  return &type metadata for MedicationOnboardingHeaderItem;
}

unint64_t sub_1BC1C21D4()
{
  unint64_t result;

  result = qword_1EF3FDD48;
  if (!qword_1EF3FDD48)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C0580, &type metadata for MedicationOnboardingHeaderItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FDD48);
  }
  return result;
}

uint64_t MedicationSearchItem.init(source:axIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MedicationSearchItem(0);
  v11 = (uint64_t *)(a3 + v10[6]);
  sub_1BC2B242C();
  v12 = sub_1BC2B23FC();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *v11 = v12;
  v11[1] = v14;
  v15 = (uint64_t *)(a3 + v10[7]);
  type metadata accessor for MedicationSearchCell();
  sub_1BC0E008C(&qword_1EF3F8D38, v16, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSearchCell, (uint64_t)&unk_1BC2C08A8);
  *v15 = sub_1BC2B2930();
  v15[1] = v17;
  result = sub_1BC0F1B94(a1, a3, type metadata accessor for MedicationSearchItem.Source);
  *(_QWORD *)(a3 + v10[5]) = a2;
  return result;
}

uint64_t type metadata accessor for MedicationSearchItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FDDC8);
}

uint64_t type metadata accessor for MedicationSearchCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationSearchItem.Source(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FDE78);
}

uint64_t sub_1BC1C2374(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t *__return_ptr, char *);
  uint64_t v18;

  v4 = v2;
  v16 = a2;
  v17 = a1;
  v5 = sub_1BC2B3530();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C890];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FDF08, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v16 - v12;
  sub_1BC1C64D4(v4, (uint64_t)&v16 - v12, (uint64_t)&qword_1EF3FDF08, (uint64_t)v6, (uint64_t)v10, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v5) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v5);
  v17(&v18, v9);
  if (v3)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  return v18;
}

uint64_t MedicationSearchItem.Source.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1BC2B34A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B3530();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (void **)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(v1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v12, v2);
    sub_1BC2B545C();
    sub_1BC0E008C(&qword_1EF3FDD50, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C808], MEMORY[0x1E0D2C818]);
    sub_1BC2B43F4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v14 = *v12;
    sub_1BC0F223C();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, (char *)v12 + *(int *)(v15 + 48), v6);
    sub_1BC2B545C();
    sub_1BC2B4D90();
    sub_1BC0E008C(&qword_1EF3FC878, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C890], MEMORY[0x1E0D2C8A0]);
    sub_1BC2B43F4();

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t MedicationSearchItem.Source.hashValue.getter()
{
  sub_1BC2B5450();
  MedicationSearchItem.Source.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1C272C()
{
  sub_1BC2B5450();
  MedicationSearchItem.Source.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1C276C()
{
  sub_1BC2B5450();
  MedicationSearchItem.Source.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1C27A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1BC2B37C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B34A0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - v11;
  v13 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (id *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(v1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v12, v15, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    sub_1BC2B37D0();
    v16 = sub_1BC2B3794();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {

    sub_1BC0F223C();
    v18 = (char *)v15 + *(int *)(v17 + 48);
    v19 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    v16 = 1;
  }
  return v16 & 1;
}

uint64_t sub_1BC1C2964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1BC2B37C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B34A0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - v11;
  v13 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(v1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v12, v15, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    sub_1BC2B37D0();
    v16 = sub_1BC2B37B8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    v16 = *v15;
    sub_1BC0F223C();
    v18 = (char *)v15 + *(int *)(v17 + 48);
    v19 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  return v16;
}

uint64_t sub_1BC1C2B18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v32 = a1;
  v3 = sub_1BC2B37C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B34A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (id *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(v2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = v3;
    (*(void (**)(char *, id *, uint64_t))(v8 + 32))(v13, v16, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    sub_1BC2B37D0();
    v17 = v7;
    if ((sub_1BC2B3794() & 1) != 0)
    {
      v18 = sub_1BC2B37A0();
      v19 = *(_QWORD *)(v18 + 16);
      v20 = sub_1BC2B3530();
      v21 = *(_QWORD *)(v20 - 8);
      if (v19)
      {
        v22 = v32;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v32, v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
        v23 = 0;
      }
      else
      {
        v23 = 1;
        v22 = v32;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v22, v23, 1, v20);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v17);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      v30 = sub_1BC2B3530();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v32, 1, 1, v30);
    }
  }
  else
  {

    sub_1BC0F223C();
    v25 = (char *)v16 + *(int *)(v24 + 48);
    v26 = sub_1BC2B3530();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v32, v25, v26);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
  }
}

uint64_t sub_1BC1C2DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v1 = v0;
  v2 = sub_1BC2B34A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B3530();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (void **)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(v1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v12, v2);
    v13 = sub_1BC2B347C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v14 = *v12;
    sub_1BC0F223C();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, (char *)v12 + *(int *)(v15 + 48), v6);
    v16 = MEMORY[0x1E0DEA968];
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91D8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BC2B92C0;
    *(_QWORD *)(v17 + 32) = sub_1BC2B350C();
    *(_QWORD *)(v17 + 40) = v18;
    *(_QWORD *)(v17 + 48) = sub_1BC2B4F40();
    *(_QWORD *)(v17 + 56) = v19;
    v21[1] = v17;
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, v16, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC11BF0C();
    v13 = sub_1BC2B440C();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v13;
}

uint64_t sub_1BC1C2FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_1BC2B34A0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
    MEMORY[0x1E0C80A78](v8);
    *(&v16 - 2) = (uint64_t)v4;
    v9 = sub_1BC1C2374((void (*)(uint64_t *__return_ptr, char *))sub_1BC1C64B8, (uint64_t)(&v16 - 4));
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    v10 = *v7;
    sub_1BC0F223C();
    v12 = (char *)v7 + *(int *)(v11 + 48);
    sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BC2B7770;
    *(_QWORD *)(v13 + 32) = v10;
    v17 = v13;
    sub_1BC2B45A4();
    v9 = v17;
    v14 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  return v9;
}

uint64_t sub_1BC1C319C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_1BC2B34A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B37C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1BC2B37D0();
  v12 = sub_1BC2B37AC();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a2 = v12;
  return result;
}

uint64_t MedicationSearchItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationSearchItem(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationSearchItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationSearchItem(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

id MedicationSearchItem.searchItemDisplayString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BC2B34A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (void **)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BC2B3470();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v9 = *v8;
    sub_1BC0F223C();
    v11 = (char *)v8 + *(int *)(v10 + 48);
    sub_1BC2B4F04();

    v12 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = type metadata accessor for MedicationSearchItem(0);
  v14 = sub_1BC0E008C(&qword_1EF3FDD58, 255, type metadata accessor for MedicationSearchItem, (uint64_t)&protocol conformance descriptor for MedicationSearchItem);
  MEMORY[0x1BCCECB44](v13, v14);
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v16 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC0E008C((unint64_t *)&qword_1EDA0FD20, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B897C);
  v17 = (void *)sub_1BC2B43AC();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

  return v18;
}

uint64_t MedicationSearchItem.hash(into:)()
{
  MedicationSearchItem.Source.hash(into:)();
  type metadata accessor for MedicationSearchItem(0);
  sub_1BC2B545C();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationSearchItem.hashValue.getter()
{
  sub_1BC2B5450();
  MedicationSearchItem.Source.hash(into:)();
  type metadata accessor for MedicationSearchItem(0);
  sub_1BC2B545C();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1C3660()
{
  sub_1BC2B5450();
  MedicationSearchItem.Source.hash(into:)();
  sub_1BC2B545C();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1C36E4()
{
  MedicationSearchItem.Source.hash(into:)();
  sub_1BC2B545C();
  sub_1BC2B44D8();
  return sub_1BC2B44D8();
}

uint64_t sub_1BC1C3748()
{
  sub_1BC2B5450();
  MedicationSearchItem.Source.hash(into:)();
  sub_1BC2B545C();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

id sub_1BC1C37D8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  id v15;
  objc_super v17;
  uint64_t v18;
  uint64_t v19;

  v9 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier];
  v18 = sub_1BC2B4460();
  v19 = v10;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v11 = v19;
  v12 = v4;
  swift_bridgeObjectRelease();
  *v9 = v18;
  v9[1] = v11;
  v13 = &v12[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for MedicationSearchCell();
  v14 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC2B263C();
  v15 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC2B4C88();

  return v14;
}

uint64_t sub_1BC1C3A20()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *, _QWORD);
  void (*v46)(uint64_t *, _QWORD);
  uint64_t v47;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t ObjectType;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  char *v78;
  uint64_t v79;
  uint64_t v80[3];
  uint64_t v81;
  uint64_t v82;

  ObjectType = swift_getObjectType();
  v1 = sub_1BC2B39E0();
  v74 = *(_QWORD *)(v1 - 8);
  v75 = v1;
  MEMORY[0x1E0C80A78](v1);
  v78 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v71 = (char *)&v59 - v5;
  v6 = sub_1BC2B3B48();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v3);
  MEMORY[0x1E0C80A78](v8);
  v64 = (char *)&v59 - v9;
  v66 = sub_1BC2B3A94();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v63 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1BC2B3A34();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v60 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1BC2B34A0();
  v12 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (id *)((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_1BC2B3CD4();
  v73 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, v3);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v59 - v21;
  v23 = type metadata accessor for MedicationSearchItem(0);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v76 = (uint64_t)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v0;
  v26 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1BC1C64D4(v26, (uint64_t)v80, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC0E7A84);
  if (!v81)
  {
    sub_1BC1C61FC((uint64_t)v80, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
LABEL_6:
    sub_1BC1C61FC((uint64_t)v22, (uint64_t)&qword_1EF3F8980, (uint64_t)type metadata accessor for MedicationSearchItem, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC0E7998);
    v30 = v78;
    sub_1BC2B39A4();
    v31 = v77;
    v32 = sub_1BC2B39D4();
    v33 = sub_1BC2B48C8();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v79 = v35;
      *(_DWORD *)v34 = 136315394;
      v36 = sub_1BC2B54F8();
      v80[0] = sub_1BC12540C(v36, v37, &v79);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      sub_1BC1C64D4(v26, (uint64_t)v80, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC0E7A84);
      sub_1BC0E7A84(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
      v38 = sub_1BC2B4478();
      v80[0] = sub_1BC12540C(v38, v39, &v79);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v32, v33, "[%s] Expected a MedicationSearchItem, but received a %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v35, -1, -1);
      MEMORY[0x1BCCEF3A0](v34, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v78, v75);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v30, v75);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v27 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v22, v27 ^ 1u, 1, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
    goto LABEL_6;
  v28 = v76;
  sub_1BC0F1B94((uint64_t)v22, v76, type metadata accessor for MedicationSearchItem);
  sub_1BC2B3B60();
  sub_1BC1C5028(v28, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = v59;
    (*(void (**)(char *, id *, uint64_t))(v12 + 32))(v14, v17, v59);
    sub_1BC2B3464();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v29);
  }
  else
  {

    sub_1BC0F223C();
    v42 = (char *)v17 + *(int *)(v41 + 48);
    v43 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  }
  sub_1BC2B3C44();
  sub_1BC2B4AF0();
  sub_1BC2B3C50();
  v44 = v76;
  MedicationSearchItem.searchItemDisplayString.getter();
  sub_1BC2B3BD8();
  v45 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3B90();
  v45(v80, 0);
  sub_1BC1C6238(v44);
  sub_1BC2B3C14();
  v46 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3B90();
  v46(v80, 0);
  v47 = v67;
  v81 = v67;
  v82 = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v80);
  (*(void (**)(uint64_t *, char *, uint64_t))(v73 + 16))(boxed_opaque_existential_1, v19, v47);
  MEMORY[0x1BCCEE224](v80);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v49 = v61;
  v50 = v60;
  v51 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, *MEMORY[0x1E0DC1C20], v62);
  v52 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v64, 1, 1, v52);
  v53 = v63;
  sub_1BC2B3A88();
  sub_1BC2B3A64();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v53, v66);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  sub_1BC2B4AFC();
  v54 = v68;
  sub_1BC2B3B24();
  v55 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  sub_1BC2B3B18();
  v57 = v69;
  v56 = v70;
  v58 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v71, v54, v70);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
  MEMORY[0x1BCCEE23C](v58);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v19, v47);
  return sub_1BC0E8594(v76, type metadata accessor for MedicationSearchItem);
}

uint64_t sub_1BC1C43B0(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  void *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = sub_1BC2B39E0();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v35 - v10;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v15 = type metadata accessor for MedicationSearchItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)v3 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1BC1C64D4(v19, (uint64_t)&v41, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC0E7A84);
  if (!v43)
  {
    sub_1BC1C61FC((uint64_t)&v41, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_6;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v20 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    sub_1BC1C61FC((uint64_t)v14, (uint64_t)&qword_1EF3F8980, (uint64_t)type metadata accessor for MedicationSearchItem, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC0E7998);
    sub_1BC2B39A4();
    v22 = v3;
    v23 = sub_1BC2B39D4();
    v24 = sub_1BC2B48C8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v40 = v36;
      *(_DWORD *)v25 = 136315394;
      v26 = sub_1BC2B54F8();
      v41 = sub_1BC12540C(v26, v27, &v40);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      sub_1BC1C64D4(v19, (uint64_t)&v41, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC0E7A84);
      sub_1BC0E7A84(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0);
      v28 = sub_1BC2B4478();
      v41 = sub_1BC12540C(v28, v29, &v40);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v23, v24, "[%s] Expected a MedicationSearchItem, but received a %s", (uint8_t *)v25, 0x16u);
      v30 = v36;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v30, -1, -1);
      MEMORY[0x1BCCEF3A0](v25, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v9, v39);
  }
  sub_1BC0F1B94((uint64_t)v14, (uint64_t)v18, type metadata accessor for MedicationSearchItem);
  if (a2)
  {
    v41 = 46;
    v42 = 0xE100000000000000;
    v40 = *(_QWORD *)&v18[*(int *)(v15 + 20)];
    sub_1BC2B539C();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v41 = a1;
    v42 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v21 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v21);

  }
  else
  {
    sub_1BC2B39A4();
    v32 = sub_1BC2B39D4();
    v33 = sub_1BC2B48C8();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1BC0DC000, v32, v33, "Unable to set automation identifiers as there is no base identifier.", v34, 2u);
      MEMORY[0x1BCCEF3A0](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
  }
  return sub_1BC0E8594((uint64_t)v18, type metadata accessor for MedicationSearchItem);
}

id sub_1BC1C4910()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSearchCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1C49A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  return sub_1BC1C64D4(v3, a1, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC0E7A84);
}

uint64_t sub_1BC1C4A10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1C3A20();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
  swift_beginAccess();
  v6 = *v4;
  v5 = v4[1];
  swift_bridgeObjectRetain();
  sub_1BC1C43B0(v6, v5);
  swift_bridgeObjectRelease();
  return sub_1BC1C61FC(a1, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
}

uint64_t (*sub_1BC1C4ADC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1C4B24;
}

uint64_t sub_1BC1C4B24(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    sub_1BC1C3A20();
    v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
    swift_beginAccess();
    v7 = *v6;
    v8 = v6[1];
    swift_bridgeObjectRetain();
    sub_1BC1C43B0(v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC1C4BA8(uint64_t a1, void *a2)
{
  return sub_1BC1C5F38(a2);
}

uint64_t sub_1BC1C4BCC()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1C4C24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC1C4C84())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC1C4CCC(uint64_t a1, unint64_t a2)
{
  return sub_1BC1C43B0(a1, a2);
}

uint64_t _s19HealthMedicationsUI20MedicationSearchItemV6SourceO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void **v22;
  char v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(_QWORD);
  void *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BC2B34A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B3530();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v41 - v11;
  v12 = type metadata accessor for MedicationSearchItem.Source(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (void **)((char *)&v41 - v16);
  sub_1BC1C6458();
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (void **)&v21[*(int *)(v19 + 48)];
  sub_1BC1C5028(a1, (uint64_t)v21);
  sub_1BC1C5028(a2, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC1C5028((uint64_t)v21, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v22, v4);
      v23 = sub_1BC2B3494();
      v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      v24(v15, v4);
LABEL_11:
      v29 = type metadata accessor for MedicationSearchItem.Source;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
  }
  else
  {
    sub_1BC1C5028((uint64_t)v21, (uint64_t)v17);
    v25 = *v17;
    sub_1BC0F223C();
    v27 = *(int *)(v26 + 48);
    v28 = (char *)v17 + v27;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v30 = *v22;
      v31 = (char *)v22 + v27;
      v33 = v42;
      v32 = v43;
      v34 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      v35 = v44;
      v34(v42, v28, v44);
      v36 = v41;
      v34(v41, v31, v35);
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
      v37 = sub_1BC2B4D84();

      if ((v37 & 1) != 0)
      {
        v23 = sub_1BC2B3524();
        v38 = *(void (**)(char *, uint64_t))(v32 + 8);
        v38(v36, v35);
        v38(v33, v35);
      }
      else
      {
        v39 = *(void (**)(char *, uint64_t))(v32 + 8);
        v39(v36, v35);
        v39(v33, v35);
        v23 = 0;
      }
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))((char *)v17 + v27, v44);

  }
  v23 = 0;
  v29 = (uint64_t (*)(_QWORD))sub_1BC1C6458;
LABEL_12:
  sub_1BC0E8594((uint64_t)v21, v29);
  return v23 & 1;
}

uint64_t sub_1BC1C5028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s19HealthMedicationsUI20MedicationSearchItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  if ((_s19HealthMedicationsUI20MedicationSearchItemV6SourceO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for MedicationSearchItem(0);
  if (*(_QWORD *)(a1 + *(int *)(v4 + 20)) != *(_QWORD *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = v4;
  v6 = *(int *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_1BC2B53CC(), result = 0, (v11 & 1) != 0))
  {
    v13 = *(int *)(v5 + 28);
    v14 = *(_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    if (v14 == *v16 && v15 == v16[1])
      return 1;
    else
      return sub_1BC2B53CC();
  }
  return result;
}

uint64_t sub_1BC1C5130()
{
  return sub_1BC0E008C(&qword_1EF3FDD60, 255, type metadata accessor for MedicationSearchItem.Source, (uint64_t)&protocol conformance descriptor for MedicationSearchItem.Source);
}

uint64_t sub_1BC1C5160()
{
  return sub_1BC0E008C(&qword_1EF3FDD68, 255, type metadata accessor for MedicationSearchItem, (uint64_t)&protocol conformance descriptor for MedicationSearchItem);
}

char *initializeBufferWithCopyOfBuffer for MedicationSearchItem(char *a1, char **a2, int *a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    type metadata accessor for MedicationSearchItem.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1BC2B34A0();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v9 = *a2;
      *(_QWORD *)a1 = *a2;
      sub_1BC0F223C();
      v11 = *(int *)(v10 + 48);
      v12 = &a1[v11];
      v13 = (char *)a2 + v11;
      v14 = sub_1BC2B3530();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v16 = v9;
      v15(v12, v13, v14);
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(char **)((char *)a2 + a3[5]);
    v18 = &a1[v17];
    v19 = (char **)((char *)a2 + v17);
    v20 = v19[1];
    *(_QWORD *)v18 = *v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = a3[7];
    v22 = &a1[v21];
    v23 = (char **)((char *)a2 + v21);
    v24 = v23[1];
    *(_QWORD *)v22 = *v23;
    *((_QWORD *)v22 + 1) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MedicationSearchItem(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1BC2B34A0();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {

    sub_1BC0F223C();
    v4 = (char *)a1 + *(int *)(v3 + 48);
    v5 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void **initializeWithCopy for MedicationSearchItem(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC2B34A0();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    sub_1BC0F223C();
    v9 = *(int *)(v8 + 48);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BC2B3530();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v7;
    v13(v10, v11, v12);
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[6];
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  v16 = (void **)((char *)a1 + v15);
  v17 = (void **)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[7];
  v20 = (void **)((char *)a1 + v19);
  v21 = (void **)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **assignWithCopy for MedicationSearchItem(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    type metadata accessor for MedicationSearchItem.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC2B34A0();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v7 = *a2;
      *a1 = *a2;
      sub_1BC0F223C();
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1BC2B3530();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v14 = v7;
      v13(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  v15 = a3[6];
  v16 = (void **)((char *)a1 + v15);
  v17 = (void **)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (void **)((char *)a1 + v18);
  v20 = (void **)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for MedicationSearchItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC2B34A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    sub_1BC0F223C();
    v8 = *(int *)(v7 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC2B3530();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  v12 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *assignWithTake for MedicationSearchItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    type metadata accessor for MedicationSearchItem.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC2B34A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      sub_1BC0F223C();
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BC2B3530();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1C5850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for MedicationSearchItem.Source(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationSearchItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1C58DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for MedicationSearchItem.Source(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BC1C5958()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MedicationSearchItem.Source(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for MedicationSearchItem.Source(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC2B34A0();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = *a2;
      *(_QWORD *)a1 = *a2;
      sub_1BC0F223C();
      v10 = *(int *)(v9 + 48);
      v11 = &a1[v10];
      v12 = (char *)a2 + v10;
      v13 = sub_1BC2B3530();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v15 = v8;
      v14(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MedicationSearchItem.Source(id *a1)
{
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1BC2B34A0();
  }
  else
  {

    sub_1BC0F223C();
    a1 = (id *)((char *)a1 + *(int *)(v3 + 48));
    v2 = sub_1BC2B3530();
  }
  return (*(uint64_t (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void **initializeWithCopy for MedicationSearchItem.Source(void **a1, void **a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1BC2B34A0();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = *a2;
    *a1 = *a2;
    sub_1BC0F223C();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BC2B3530();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v12 = v5;
    v11(v8, v9, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for MedicationSearchItem.Source(void **a1, void **a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1BC2B34A0();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      v5 = *a2;
      *a1 = *a2;
      sub_1BC0F223C();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BC2B3530();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v12 = v5;
      v11(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for MedicationSearchItem.Source(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1BC2B34A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    sub_1BC0F223C();
    v6 = *(int *)(v5 + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BC2B3530();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for MedicationSearchItem.Source(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1BC2B34A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      sub_1BC0F223C();
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BC2B3530();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BC1C5EA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = sub_1BC2B3530();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    result = sub_1BC2B34A0();
    if (v2 <= 0x3F)
    {
      v3[5] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BC1C5F38(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  int v12;
  _QWORD v14[4];
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[5];

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v14 - v4;
  v6 = type metadata accessor for MedicationSearchItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = a1;
  sub_1BC0E1D38(0, &qword_1EF3FDEE8);
  sub_1BC0E7AD8(0, &qword_1EF3FDEF0);
  v10 = a1;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    return sub_1BC1C61FC((uint64_t)&v15, (uint64_t)&unk_1EF3FDEF8, (uint64_t)&qword_1EF3FDEF0, (uint64_t)&protocol descriptor for MedicationSelectionHandler, (uint64_t (*)(_QWORD))sub_1BC0E7A84);
  }
  sub_1BC0F2730(&v15, (uint64_t)v18);
  v11 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1BC1C64D4(v11, (uint64_t)&v15, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC0E7A84);
  if (!*((_QWORD *)&v16 + 1))
  {
    sub_1BC1C61FC((uint64_t)&v15, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v12 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v12 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_1BC1C61FC((uint64_t)v5, (uint64_t)&qword_1EF3F8980, (uint64_t)type metadata accessor for MedicationSearchItem, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC0E7998);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  sub_1BC0F1B94((uint64_t)v5, (uint64_t)v9, type metadata accessor for MedicationSearchItem);
  __swift_project_boxed_opaque_existential_0(v18, v18[3]);
  sub_1BC232804((uint64_t)v9);
  sub_1BC0E8594((uint64_t)v9, type metadata accessor for MedicationSearchItem);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
}

uint64_t sub_1BC1C61FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;

  v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

id sub_1BC1C6238(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  char v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v20;

  v2 = sub_1BC2B34A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (id *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1C5028(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {

    sub_1BC0F223C();
    v12 = (char *)v8 + *(int *)(v11 + 48);
    v13 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    goto LABEL_5;
  }
  (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
  v9 = sub_1BC2B3464();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v9 & 1) != 0)
  {
LABEL_5:
    sub_1BC1C2DB8();
    v14 = type metadata accessor for MedicationSearchItem(0);
    v15 = sub_1BC0E008C(&qword_1EF3FDD58, 255, type metadata accessor for MedicationSearchItem, (uint64_t)&protocol conformance descriptor for MedicationSearchItem);
    MEMORY[0x1BCCECB50](v14, v15);
    v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v17 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC0E008C((unint64_t *)&qword_1EDA0FD20, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B897C);
    v18 = (void *)sub_1BC2B43AC();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

    return v10;
  }
  return 0;
}

void sub_1BC1C6458()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FDF00)
  {
    type metadata accessor for MedicationSearchItem.Source(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FDF00);
  }
}

uint64_t sub_1BC1C64B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC1C319C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BC1C64D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

id InteractionSummaryOverviewViewController.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(a1, a2, a3, a4, a5);
}

id sub_1BC1C6584()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF3FDF18;
  v2 = *(void **)(v0 + qword_1EF3FDF18);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3FDF18);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB69B8]), sel_initWithHealthStore_, *(_QWORD *)(v0 + qword_1EF3FDF40));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1C6604()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF3FDF28;
  v2 = *(void **)(v0 + qword_1EF3FDF28);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3FDF28);
  }
  else
  {
    v4 = sub_1BC1C6664(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1C6664(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  _QWORD v23[3];

  v2 = sub_1BC2B4EC8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v23 - v7;
  sub_1BC2B4E8C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 3);
  v10 = (void *)sub_1BC2B4430();
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v10, v9);

  v12 = v11;
  sub_1BC2B4E80();
  sub_1BC2B4DF0();
  sub_1BC0E1D38(0, &qword_1EDA0FE08);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B4DA8();
  v13 = (void *)sub_1BC2B4ED4();
  objc_msgSend(v13, sel_setRole_, 1);
  v14 = (_QWORD *)(a1 + qword_1EF3FDF10);
  swift_beginAccess();
  v15 = v14[1];
  v23[1] = *v14;
  v23[2] = v15;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v16 = v13;
  v17 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setAccessibilityIdentifier_, v17);

  v18 = qword_1EDA0FEE8;
  v19 = v16;
  if (v18 != -1)
    swift_once();
  v20 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();

  swift_bridgeObjectRelease();
  v21 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setAccessibilityLabel_, v21);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v19;
}

void sub_1BC1C69FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCEF478](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BC1C6A4C();

  }
}

void sub_1BC1C6A4C()
{
  void *v0;
  void *v1;
  objc_class *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  objc_super v19;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for InteractionFactorsInfoViewController();
  v19.receiver = objc_allocWithZone(v2);
  v19.super_class = v2;
  v3 = objc_msgSendSuper2(&v19, sel_initWithCollectionViewLayout_, 0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v3);
  objc_msgSend(v3, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v4, sel_setModalPresentationStyle_, 2);
  if ((sub_1BC2B3014() & 1) == 0)
    goto LABEL_4;
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v1, sel_traitCollection);
  v7 = sub_1BC2B4A3C();

  objc_msgSend(v5, sel_edgeInsetsForWidthDesignation_, v7);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = objc_msgSend(v4, sel_navigationItem);
  objc_msgSend(v16, sel_setLargeTitleInsets_, v9, v11, v13, v15);

  v17 = objc_msgSend(v4, sel_view);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_setDirectionalLayoutMargins_, v9, v11, v13, v15);

LABEL_4:
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);

    return;
  }
  __break(1u);
}

uint64_t sub_1BC1C6C0C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + qword_1EF3FDF10);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1C6C74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + qword_1EF3FDF10);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1C6CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + qword_1EF3FDF10);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC1C6D24())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  objc_super v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)&v5[qword_1EF3FDF18] = 0;
  *(_QWORD *)&v5[qword_1EF3FDF20] = 0;
  *(_QWORD *)&v5[qword_1EF3FDF28] = 0;
  v10 = (uint64_t *)&v5[qword_1EF3FDF10];
  v20 = sub_1BC2B4460();
  v21 = v11;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v12 = v21;
  v13 = v5;
  swift_bridgeObjectRelease();
  *v10 = v20;
  v10[1] = v12;
  *(_QWORD *)&v13[qword_1EF3FDF30] = a1;
  *(_QWORD *)&v13[qword_1EF3FDF38] = a2;
  *(_QWORD *)&v13[qword_1EF3FDF40] = a3;
  *(_QWORD *)&v13[qword_1EF3FDF48] = a4;
  *(_QWORD *)&v13[qword_1EF3FDF50] = a5;
  v14 = a1;
  swift_retain();
  v15 = a3;
  swift_retain();

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for InteractionSummaryOverviewViewController();
  v16 = objc_msgSendSuper2(&v19, sel_initWithCollectionViewLayout_, 0);
  objc_msgSend(v16, sel_setModalPresentationStyle_, 2);
  sub_1BC1C71D4();
  swift_release();

  swift_release();
  return v16;
}

uint64_t type metadata accessor for InteractionSummaryOverviewViewController()
{
  uint64_t result;

  result = qword_1EF3FDF70;
  if (!qword_1EF3FDF70)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC1C6F44(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC1C8480();
}

uint64_t sub_1BC1C6F68()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  objc_class *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  objc_super v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  sub_1BC1C73F8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)&v0[qword_1EF3FDF30];
  v6 = *(_QWORD *)&v1[qword_1EF3FDF38];
  v7 = *(void **)&v1[qword_1EF3FDF40];
  v8 = *(_QWORD *)&v1[qword_1EF3FDF48];
  v9 = *(_QWORD *)&v1[qword_1EF3FDF50];
  v10 = type metadata accessor for InteractionSummaryOverviewDataSourceProvider();
  swift_allocObject();
  v11 = v5;
  swift_retain();
  v12 = v7;
  swift_retain();
  v13 = sub_1BC226308((uint64_t)v5, v6, (uint64_t)v12, v8, v9);
  v24 = v10;
  v25 = sub_1BC1C81D8();
  v23 = v13;
  sub_1BC2B3008();
  v14 = (objc_class *)type metadata accessor for InteractionSummaryOverviewViewController();
  v22.receiver = v1;
  v22.super_class = v14;
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  v15 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1BC2B4658();
  v16 = v1;
  v17 = sub_1BC2B464C();
  v18 = (_QWORD *)swift_allocObject();
  v19 = MEMORY[0x1E0DF06E8];
  v18[2] = v17;
  v18[3] = v19;
  v18[4] = v16;
  sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF3FDF68, (uint64_t)v18);
  return swift_release();
}

void sub_1BC1C7128(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC1C6F68();

}

uint64_t sub_1BC1C715C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  _OWORD v7[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1BC2B5024();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    v5 = a1;
  }
  sub_1BC2B2738();
  sub_1BC2B272C();

  return sub_1BC10BA60((uint64_t)v7);
}

void sub_1BC1C71D4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 1);

  v2 = objc_msgSend(v0, sel_navigationItem);
  v3 = sub_1BC1C6604();
  objc_msgSend(v2, sel__setLargeTitleAccessoryView_alignToBaseline_, v3, 0);

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v4 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();

  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v5, 0xE000000000000000);

  v6 = objc_msgSend(v0, sel_navigationItem);
  v7 = objc_msgSend(v6, sel_backBarButtonItem);

  if (v7)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

  }
}

void sub_1BC1C73F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9218)
  {
    sub_1BC2B467C();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9218);
  }
}

uint64_t sub_1BC1C744C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[21] = a4;
  v5 = sub_1BC2B39E0();
  v4[22] = v5;
  v4[23] = *(_QWORD *)(v5 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  sub_1BC2B4658();
  v4[26] = sub_1BC2B464C();
  v4[27] = sub_1BC2B461C();
  v4[28] = v6;
  return swift_task_switch();
}

uint64_t sub_1BC1C74F0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (void *)v0[21];
  sub_1BC2B39A4();
  v2 = v1;
  v3 = sub_1BC2B39D4();
  v4 = sub_1BC2B48B0();
  if (os_log_type_enabled(v3, v4))
  {
    v20 = v0[23];
    v5 = (void *)v0[21];
    v21 = v0[22];
    v22 = v0[25];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v23 = v7;
    v0[19] = v5;
    type metadata accessor for InteractionSummaryOverviewViewController();
    v8 = v5;
    v9 = sub_1BC2B4490();
    v0[20] = sub_1BC12540C(v9, v10, &v23);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v3, v4, "[%{public}s] Marking interaction shard as required during viewing DDI overview", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v11(v22, v21);
  }
  else
  {
    v12 = v0[25];
    v13 = v0[22];
    v14 = v0[23];
    v15 = (void *)v0[21];

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[29] = v11;
  v16 = sub_1BC1C6584();
  v0[30] = v16;
  v0[2] = v0;
  v0[3] = sub_1BC1C7734;
  v17 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v18 = v0 + 10;
  v18[1] = 0x40000000;
  v18[2] = sub_1BC2311D4;
  v18[3] = &block_descriptor_13;
  v18[4] = v17;
  objc_msgSend(v16, sel_markInteractionsShardAsRequiredWithCompletion_, v18);
  return swift_continuation_await();
}

uint64_t sub_1BC1C7734()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 248) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC1C7790()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29[2];

  v2 = *(void **)(v0 + 240);
  v1 = *(void **)(v0 + 248);
  v3 = *(void **)(v0 + 168);
  swift_release();
  swift_willThrow();

  sub_1BC2B39A4();
  v4 = v3;
  v5 = v1;
  v6 = v4;
  v7 = v1;
  v8 = sub_1BC2B39D4();
  v9 = sub_1BC2B48C8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 248);
    v27 = *(_QWORD *)(v0 + 192);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v11 = *(void **)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v29[0] = v13;
    *(_DWORD *)v12 = 136446466;
    *(_QWORD *)(v0 + 120) = v11;
    type metadata accessor for InteractionSummaryOverviewViewController();
    v14 = v11;
    v15 = sub_1BC2B4490();
    *(_QWORD *)(v0 + 128) = sub_1BC12540C(v15, v16, v29);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    *(_QWORD *)(v0 + 136) = v10;
    v17 = v10;
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    v18 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 144) = sub_1BC12540C(v18, v19, v29);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v8, v9, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v13, -1, -1);
    MEMORY[0x1BCCEF3A0](v12, -1, -1);

    v28(v27, v26);
  }
  else
  {
    v20 = *(void **)(v0 + 248);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v22 = *(_QWORD *)(v0 + 192);
    v24 = *(void **)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 176);

    v21(v22, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC1C7A3C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC10ADC0(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void InteractionSummaryOverviewViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionSummaryOverviewViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionSummaryOverviewViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionSummaryOverviewViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC1C7BB0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1C7BE0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id InteractionSummaryOverviewViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSummaryOverviewViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1C7CA4(uint64_t a1)
{

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1C7D40(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1BC2B5024();
  swift_unknownObjectRelease();
  _s19HealthMedicationsUI0B10TapToRadarC16drugInteractions14viewControllerySo06UIViewJ0C_tFZ_0(v2);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

Swift::Void __swiftcall InteractionSummaryOverviewViewController.viewControllerWillEnterAdaptiveModal()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BC2B2E70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_navigationItem);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B4DA8();
  v7 = sub_1BC2B4928();
  objc_msgSend(v6, sel_setRightBarButtonItem_, v7);

  sub_1BC2B2E64();
  LOBYTE(v7) = sub_1BC2B2E58();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    v8 = objc_msgSend(v1, sel_navigationItem);
    v9 = (void *)sub_1BC2B4430();
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

    v11 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v12 = v1;
    v13 = objc_msgSend(v11, sel_initWithImage_style_target_action_, v10, 0, v12, sel_tapToRadarButtonTappedWithSender_);

    objc_msgSend(v8, sel_setLeftBarButtonItem_, v13);
  }
  v14 = objc_msgSend(v1, sel_navigationController);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_navigationBar);

    objc_msgSend(v16, sel_setPrefersLargeTitles_, 1);
  }
  v17 = objc_msgSend(v1, sel_navigationController);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_navigationBar);

    sub_1BC2B4AF0();
    objc_msgSend(v19, sel_setDirectionalLayoutMargins_);

  }
}

void sub_1BC1C8094(void *a1)
{
  id v1;

  v1 = a1;
  InteractionSummaryOverviewViewController.viewControllerWillEnterAdaptiveModal()();

}

Swift::Void __swiftcall InteractionSummaryOverviewViewController.viewControllerDidLeaveAdaptiveModal()()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);

  v2 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v2, sel_setLeftBarButtonItem_, 0);

}

void sub_1BC1C814C(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

  v3 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v3, sel_setLeftBarButtonItem_, 0);

}

unint64_t sub_1BC1C81D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FDF58;
  if (!qword_1EF3FDF58)
  {
    v1 = type metadata accessor for InteractionSummaryOverviewDataSourceProvider();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C3120, v1);
    atomic_store(result, &qword_1EF3FDF58);
  }
  return result;
}

uint64_t sub_1BC1C8220()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC1C824C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC0FEB64;
  return sub_1BC1C744C(a1, v4, v5, v6);
}

uint64_t sub_1BC1C82B8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1C82DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + qword_1EF3FDF10);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC1C8334()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSummaryOverviewViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.baseIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 144))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.baseIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 152))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.baseIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 160))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.providedPresentation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 168))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController + v0 + 176))();
}

uint64_t sub_1BC1C8478()
{
  return type metadata accessor for InteractionSummaryOverviewViewController();
}

void sub_1BC1C8480()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[qword_1EF3FDF18] = 0;
  *(_QWORD *)&v0[qword_1EF3FDF20] = 0;
  *(_QWORD *)&v0[qword_1EF3FDF28] = 0;
  v1 = (uint64_t *)&v0[qword_1EF3FDF10];
  v3 = sub_1BC2B4460();
  v4 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  *v1 = v3;
  v1[1] = v4;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC1C8568(uint64_t a1)
{
  uint64_t v1;

  sub_1BC1C69FC(a1, v1);
}

uint64_t sub_1BC1C8570(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD88);
    sub_1BC0F1488((unint64_t *)&unk_1EDA0FD90, (unint64_t *)&qword_1EDA0FD88, 0x1E0D2C460, MEMORY[0x1E0DEFCF8]);
    v4 = sub_1BC2B47B4();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1BC1C8630()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF3FDFE0;
  v2 = *(void **)(v0 + qword_1EF3FDFE0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3FDFE0);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C418]), sel_initWithHealthStore_, *(_QWORD *)(v0 + qword_1EF3FDFD0));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

_QWORD *sub_1BC1C86B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = qword_1EF3FDFE8;
  if (*(_QWORD *)(v0 + qword_1EF3FDFE8))
  {
    v2 = *(_QWORD **)(v0 + qword_1EF3FDFE8);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + qword_1EF3FDFD0);
    sub_1BC2B3278();
    v5 = v4;
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v6 = sub_1BC2B314C();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    v2 = sub_1BC0F5A80(v5, v6);

    swift_release();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1BC1C87D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t);
  _BYTE v14[32];

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-v7];
  if (a1)
    sub_1BC2B2CC0();
  else
    sub_1BC2B2C9C();
  v9 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *(_QWORD *)(v10 + 16) = 0x4024000000000000;
  v9(v14, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
  v11 = sub_1BC2B2D14();
  v12 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v12(v6, v2);
  v12(v8, v2);
  return v11;
}

uint64_t sub_1BC1C88DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v9 = MEMORY[0x1E0C960D8];
  sub_1BC1CCDEC(0, &qword_1EDA0FBC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC2B3F38();
  sub_1BC1CB55C((unint64_t *)&qword_1EDA0FBC0, &qword_1EDA0FBC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v9, MEMORY[0x1E0C96108]);
  v10 = sub_1BC2B3FBC();
  result = swift_release();
  *a4 = v10;
  return result;
}

void sub_1BC1C89F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  id v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD v15[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = sub_1BC1C8630();
  v10 = swift_bridgeObjectRetain();
  sub_1BC1CCF24(v10);
  swift_bridgeObjectRelease();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FDA8, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, MEMORY[0x1E0DEFCF8]);
  v11 = (void *)sub_1BC2B47A8();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FDF0, &qword_1EDA0FDE8, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
    a5 = (void *)sub_1BC2B47A8();
  }
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = sub_1BC0F22BC;
  v13[4] = v8;
  v15[4] = sub_1BC1CD0D0;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1BC1C8570;
  v15[3] = &block_descriptor_14;
  v14 = _Block_copy(v15);
  swift_release();
  objc_msgSend(v9, sel_interactionResultsForMedications_lifestyleFactors_completion_, v11, a5, v14);
  _Block_release(v14);

}

uint64_t sub_1BC1C8BF8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1BC1C8C30(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  uint64_t result;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (a2)
    {
      v8 = a2;
      a4(a2, 1);

    }
    else
    {
      v9 = *(void **)(result + qword_1EF3FDFC0);
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v10, sel_firstConceptIdentifier);
        if (v11)
        {
          v12 = v11;
          if (a1)
          {
            v13 = v11;
            v14 = swift_bridgeObjectRetain();
            sub_1BC1CD5FC(v14, v13);
            v16 = v15;

            v17 = sub_1BC1333F0(v16);
            swift_release();
            a4((void *)v17, 0);
            swift_release();

          }
          else
          {
            v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
              v20 = sub_1BC13340C(MEMORY[0x1E0DEE9D8]);
            a4(v20, 0);
            swift_release();

          }
        }
        else
        {
          v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
            v19 = sub_1BC13340C(MEMORY[0x1E0DEE9D8]);
          a4(v19, 0);
          swift_release();

        }
      }
      else
      {
        if (a1)
        {
          v18 = a1;
        }
        else if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1BC2B52D0())
        {
          sub_1BC14A9BC(MEMORY[0x1E0DEE9D8]);
          v18 = v22;
        }
        else
        {
          v18 = MEMORY[0x1E0DEE9E8];
        }
        swift_bridgeObjectRetain();
        v21 = sub_1BC1333F0(v18);
        swift_bridgeObjectRelease();
        a4((void *)v21, 0);
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1C8E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  id v63;

  sub_1BC1CB238();
  MEMORY[0x1E0C80A78](v1);
  v62 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1A4F80();
  v4 = v3;
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB28C();
  v8 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  v48 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB360();
  v12 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  v51 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB59C();
  v16 = *(_QWORD *)(v15 - 8);
  v53 = v15;
  v54 = v16;
  MEMORY[0x1E0C80A78](v15);
  v46 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB648();
  v19 = *(_QWORD *)(v18 - 8);
  v55 = v18;
  v56 = v19;
  MEMORY[0x1E0C80A78](v18);
  v49 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB6DC();
  v22 = *(_QWORD *)(v21 - 8);
  v58 = v21;
  v59 = v22;
  MEMORY[0x1E0C80A78](v21);
  v52 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB754();
  v25 = *(_QWORD *)(v24 - 8);
  v60 = v24;
  v61 = v25;
  MEMORY[0x1E0C80A78](v24);
  v57 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (id)sub_1BC2B3950();
  v27 = (void (*)(uint64_t))MEMORY[0x1E0D2EFE8];
  sub_1BC101888(0, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
  sub_1BC0F22FC(0, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC1018E4((unint64_t *)&qword_1EDA0FB58, (unint64_t *)&qword_1EDA0FB60, v27);
  sub_1BC2B3FC8();
  swift_release();
  v28 = (void *)sub_1BC1C86B0()[5];
  swift_retain();
  swift_release();
  v63 = v28;
  sub_1BC101888(0, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
  sub_1BC0E519C(&qword_1EDA0FB08, (uint64_t (*)(uint64_t))sub_1BC1A4F80, MEMORY[0x1E0C95708]);
  sub_1BC1018E4(&qword_1EF3FCF80, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
  sub_1BC2B3FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_1BC1CB830;
  *(_QWORD *)(v29 + 24) = v0;
  swift_retain();
  sub_1BC2B3E6C();
  v30 = MEMORY[0x1E0C95D78];
  sub_1BC1CCDEC(0, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC0E519C(&qword_1EF3FE080, (uint64_t (*)(uint64_t))sub_1BC1CB28C, MEMORY[0x1E0C95698]);
  sub_1BC1CB55C((unint64_t *)&qword_1EDA0FB78, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v30, MEMORY[0x1E0C95D90]);
  v31 = v47;
  sub_1BC2B40C4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v31);
  sub_1BC0F22FC(0, &qword_1EDA0FC48, (unint64_t *)&qword_1EDA0FD88);
  sub_1BC0E519C(&qword_1EF3FE098, (uint64_t (*)(uint64_t))sub_1BC1CB360, MEMORY[0x1E0C95B78]);
  v32 = v46;
  v33 = v50;
  sub_1BC2B3FC8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v33);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_1BC1CB88C;
  *(_QWORD *)(v34 + 24) = v0;
  sub_1BC1CB43C();
  swift_retain();
  v35 = v49;
  v36 = v53;
  sub_1BC2B3DA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v36);
  v63 = 0;
  sub_1BC0E519C(&qword_1EF3FE0B0, (uint64_t (*)(uint64_t))sub_1BC1CB648, MEMORY[0x1E0C95708]);
  v37 = v52;
  v38 = v55;
  sub_1BC2B3FD4();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v38);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v63 = (id)sub_1BC2B4A0C();
  v39 = sub_1BC2B49C4();
  v40 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v62, 1, 1, v39);
  sub_1BC0E519C(&qword_1EF3FE0C0, (uint64_t (*)(uint64_t))sub_1BC1CB6DC, MEMORY[0x1E0C957E8]);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v42 = v57;
  v41 = v58;
  sub_1BC2B4064();
  sub_1BC0E8594(v40, (uint64_t (*)(_QWORD))sub_1BC1CB238);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v41);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FE0C8, (uint64_t (*)(uint64_t))sub_1BC1CB754, MEMORY[0x1E0C95CB8]);
  v43 = v60;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v43);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC1C959C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t i;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a3;
  sub_1BC1CCD34();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v22;
    v17[3] = v16;
    v17[4] = a2;
    v18 = MEMORY[0x1E0C95D78];
    sub_1BC1CCDEC(0, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1CB55C((unint64_t *)&qword_1EDA0FB78, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v18, MEMORY[0x1E0C95D90]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BC2B3F44();
    sub_1BC0E519C(&qword_1EDA0FBE0, (uint64_t (*)(uint64_t))sub_1BC1CCD34, MEMORY[0x1E0C96148]);
    v19 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
    return v19;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v10 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v10 >= 1)
  {
    v20 = a2;
    v21 = v7;
    for (i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1BCCEE950](i, a1);
      else
        v13 = *(id *)(a1 + 8 * i + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, sel_firstOntologyCoding, v20, v21);

      if (v15)
      {
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v16 = v23;
    a2 = v20;
    v7 = v21;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1C9814@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = a2(*a1, a1[1]);
  *a3 = result;
  return result;
}

uint64_t sub_1BC1C9848@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC1C9854()
{
  unint64_t v0;
  uint64_t v1;

  swift_retain();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BC1CCB14(v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1BC1C98B8(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int64_t v22;
  uint64_t found;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[40];
  _QWORD *v40;
  _BYTE v41[40];
  uint64_t v42;

  v2 = sub_1BC2B2438();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1BC2B2BC4();
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = Strong;
    v11 = sub_1BC2B3938();
    v12 = sub_1BC11C7E0(v11);
    swift_bridgeObjectRelease();
    if (v12)
    {
      type metadata accessor for InteractionSeverityDataSource();
      v13 = *(void **)(v10 + qword_1EF3FE000);
      v14 = *(void **)(v10 + qword_1EF3FDFD0);
      v15 = *(_QWORD *)(v10 + qword_1EF3FDFD8);
      v16 = v10;
      v17 = *(char **)(v10 + qword_1EF3FE010);
      v18 = v14;
      swift_retain();
      v19 = sub_1BC1C9DF0((uint64_t)v41, v13, v8, v12, v18, v15, v17);

      v20 = (_QWORD *)v19;
      swift_release();
      swift_bridgeObjectRelease();
      v42 = v19;
      sub_1BC0E5774((uint64_t)v41, (uint64_t)v39);
      v40 = (_QWORD *)v19;
      v33[1] = v16;
      v21 = v16 + qword_1EF3FDFF0;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1BC0E1B40((uint64_t)v39, v21);
      swift_endAccess();
      sub_1BC0E5774((uint64_t)v41, (uint64_t)v39);
      v40 = v20;
      sub_1BC0F7954((uint64_t)v39);
      v22 = v20[2];
      if (v22)
        goto LABEL_5;
      swift_bridgeObjectRelease();
      sub_1BC1CB8EC(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v20 = (_QWORD *)swift_allocObject();
      *((_OWORD *)v20 + 1) = xmmword_1BC2B92D0;
      found = type metadata accessor for InteractionNoneFoundItem();
      v24 = swift_allocObject();
      type metadata accessor for InteractionNoneFoundCell();
      sub_1BC0E519C(&qword_1EF3FBD30, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell, (uint64_t)&protocol conformance descriptor for InteractionNoneFoundCell);
      *(_QWORD *)(v24 + 16) = sub_1BC2B2930();
      *(_QWORD *)(v24 + 24) = v25;
      v20[7] = found;
      v20[8] = sub_1BC0E519C(&qword_1EF3FE0E0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNoneFoundItem, (uint64_t)&protocol conformance descriptor for InteractionNoneFoundItem);
      v20[4] = v24;
      v22 = v20[2];
      if (v22)
      {
LABEL_5:
        v38 = MEMORY[0x1E0DEE9D8];
        sub_1BC125E4C(0, v22, 0);
        v33[0] = v20;
        v26 = (uint64_t)(v20 + 4);
        v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
        v34 = xmmword_1BC2B92D0;
        do
        {
          sub_1BC0E79F0(v26, (uint64_t)v39);
          sub_1BC1CB8EC(0, (unint64_t *)&qword_1EDA0FE38, v27);
          v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = v34;
          sub_1BC0E79F0((uint64_t)v39, v28 + 32);
          sub_1BC2B242C();
          sub_1BC2B23FC();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v37);
          sub_1BC2B2BAC();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
          v29 = v38;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BC125E4C(0, *(_QWORD *)(v29 + 16) + 1, 1);
            v29 = v38;
          }
          v31 = *(_QWORD *)(v29 + 16);
          v30 = *(_QWORD *)(v29 + 24);
          if (v31 >= v30 >> 1)
          {
            sub_1BC125E4C(v30 > 1, v31 + 1, 1);
            v29 = v38;
          }
          *(_QWORD *)(v29 + 16) = v31 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v29+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v31, v7, v35);
          v38 = v29;
          v26 += 40;
          --v22;
        }
        while (v22);
      }
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1BC2B2744();
      swift_release();
      sub_1BC2B2A08();
      swift_release();
      sub_1BC2B2C18();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return sub_1BC0E8594((uint64_t)v41, (uint64_t (*)(_QWORD))sub_1BC1CB954);
    }
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B2744();
    swift_release();
    sub_1BC2B2A08();
    swift_release();
    sub_1BC2B2C18();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1C9DF0(uint64_t a1, id a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, char *a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  unint64_t v46;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v52 = a7;
  v57 = a5;
  v58 = a6;
  v56 = a4;
  v10 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = MEMORY[0x1E0DEE9D8];
  if (a3)
  {
    if (a3 >> 62)
      goto LABEL_36;
    v13 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v13; v13 = sub_1BC2B52D0())
    {
      v49 = v12;
      v50 = a1;
      v14 = 0;
      v55 = a3 & 0xC000000000000001;
      v53 = a3;
      v51 = a3 + 32;
      a1 = MEMORY[0x1E0DEE9B0] + 8;
      v12 = v52;
      v54 = v13;
      while (v55)
      {
        v18 = (id)MEMORY[0x1BCCEE950](v14, v53);
        v19 = __OFADD__(v14++, 1);
        if (v19)
          goto LABEL_35;
LABEL_12:
        v59 = v18;
        v20 = objc_msgSend(v18, sel_interactions, v49);
        a3 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
        sub_1BC0F1488(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, MEMORY[0x1E0DEFCF8]);
        v21 = sub_1BC2B47B4();

        if ((v21 & 0xC000000000000001) != 0)
        {
          v22 = MEMORY[0x1E0DEE9E8];
          v62 = MEMORY[0x1E0DEE9E8];
          sub_1BC2B50CC();
          v23 = sub_1BC2B512C();
          if (v23)
          {
            do
            {
              v60 = v23;
              swift_dynamicCast();
              v24 = objc_msgSend(v61, sel_severity);
              v25 = objc_msgSend(v24, sel_severityLevel);

              v12 = v61;
              if (v25 == a2)
              {
                v26 = v62;
                v27 = *(_QWORD *)(v62 + 16);
                if (*(_QWORD *)(v62 + 24) <= v27)
                {
                  sub_1BC2158BC(v27 + 1);
                  v26 = v62;
                }
                v28 = sub_1BC2B4D78();
                v29 = v26 + 56;
                v30 = -1 << *(_BYTE *)(v26 + 32);
                v31 = v28 & ~v30;
                v32 = v31 >> 6;
                if (((-1 << v31) & ~*(_QWORD *)(v26 + 56 + 8 * (v31 >> 6))) != 0)
                {
                  v33 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v26 + 56 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
                }
                else
                {
                  v34 = 0;
                  v35 = (unint64_t)(63 - v30) >> 6;
                  do
                  {
                    if (++v32 == v35 && (v34 & 1) != 0)
                    {
                      __break(1u);
                      goto LABEL_35;
                    }
                    v36 = v32 == v35;
                    if (v32 == v35)
                      v32 = 0;
                    v34 |= v36;
                    v37 = *(_QWORD *)(v29 + 8 * v32);
                  }
                  while (v37 == -1);
                  v33 = __clz(__rbit64(~v37)) + (v32 << 6);
                }
                *(_QWORD *)(v29 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
                *(_QWORD *)(*(_QWORD *)(v26 + 48) + 8 * v33) = v12;
                ++*(_QWORD *)(v26 + 16);
              }
              else
              {

              }
              v23 = sub_1BC2B512C();
            }
            while (v23);
            v15 = v62;
            v12 = v52;
          }
          else
          {
            v15 = v22;
          }
          swift_release();
        }
        else
        {
          v15 = sub_1BC1CB9E4(v21, a2);
        }
        v16 = v56;
        swift_bridgeObjectRetain();
        a3 = (unint64_t)v57;
        v17 = v58;
        swift_retain();
        sub_1BC1CC118(v15, v16, (void *)a3, v17, (uint64_t)v12, &v63);

        swift_release();
        swift_bridgeObjectRelease();

        swift_release();
        if (v14 == v54)
        {
          swift_bridgeObjectRelease();
          a1 = v50;
          goto LABEL_38;
        }
      }
      v18 = *(id *)(v51 + 8 * v14);
      v19 = __OFADD__(v14++, 1);
      if (!v19)
        goto LABEL_12;
LABEL_35:
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
LABEL_38:
    v39 = swift_bridgeObjectRetain();
    v40 = Array<A>.deduped()(v39);
    swift_bridgeObjectRelease();
    if (v40 < 0 || (v40 & 0x4000000000000000) != 0)
    {
      v48 = swift_bridgeObjectRetain();
      v41 = (uint64_t)sub_1BC1332B4(v48);
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v62 = v41;
    sub_1BC133100(&v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC253DF0(0xD000000000000015, 0x80000001BC2CFDB0, (uint64_t)a2);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v42 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1BC2B3C68();
    v43 = sub_1BC2B28F4();
    v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v45 = sub_1BC2B28E8();
    *(_QWORD *)(a1 + 24) = v43;
    *(_QWORD *)(a1 + 32) = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v44, MEMORY[0x1E0D2A8A0]);
    *(_QWORD *)a1 = v45;
    swift_retain();
    v46 = swift_retain();
    v38 = sub_1BC0F87B8(v46);
    swift_release();
    swift_release_n();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return MEMORY[0x1E0DEE9D8];
  }
  return v38;
}

uint64_t sub_1BC1CA3FC(id *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  id v63;
  uint64_t v64;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76[2];
  __int128 v77[2];
  _QWORD v78[3];
  uint64_t v79;
  _UNKNOWN **v80;
  _QWORD v81[3];
  uint64_t v82;
  _UNKNOWN **v83;
  uint64_t v84;

  v73 = a6;
  v71 = a5;
  v72 = a4;
  v69 = a3;
  v75 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  v8 = MEMORY[0x1E0C80A78](v75);
  v70 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v67 - v10);
  v12 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v67 - v16);
  v18 = *a1;
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BC1CBF48(v19, v18, (SEL *)&selRef_firstInteractionClass);
  swift_bridgeObjectRelease();

  v21 = v18;
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1BC1CBF48(v22, v21, (SEL *)&selRef_secondInteractionClass);
  swift_bridgeObjectRelease();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v29 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    v84 = v6;
    if (v29)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v21, sel_firstInteractionClass);
    v31 = objc_msgSend(v30, sel_ancestorIdentifier);

    v32 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
    v33 = v32;
    if (!v32)
    {
      sub_1BC0E1D38(0, &qword_1EDA0FDE8);
      v33 = (void *)sub_1BC2B4D6C();
    }
    v34 = v32;
    v26 = sub_1BC2B4FC4();

    *v17 = v26;
    swift_storeEnumTagMultiPayload();
    LOBYTE(v81[0]) = 0;
    v68 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)v81, v26);
    v74 = v35;
    type metadata accessor for HKDrugInteractionLifestyleFactor(0);
    v82 = v36;
    v83 = &protocol witness table for HKDrugInteractionLifestyleFactor;

    goto LABEL_11;
  }
  v24 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  v84 = v6;
  if (!v24)
    goto LABEL_8;
LABEL_3:
  if ((v20 & 0xC000000000000001) != 0)
  {
    v25 = (id)MEMORY[0x1BCCEE950](0, v20);
  }
  else
  {
    if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    v25 = *(id *)(v20 + 32);
  }
  v26 = (uint64_t)v25;
  swift_bridgeObjectRelease();
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  swift_storeEnumTagMultiPayload();
  v81[0] = v26;
  v27 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v68 = sub_1BC2B3764();
  v74 = v28;
  v82 = v27;
  v83 = &protocol witness table for HKMedicationUserDomainConcept;
LABEL_11:
  v81[0] = v26;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v42 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v42)
    {
LABEL_13:
      if ((v23 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_32;
        }
        v37 = *(id *)(v23 + 32);
        goto LABEL_16;
      }
LABEL_30:
      v37 = (id)MEMORY[0x1BCCEE950](0, v23);
LABEL_16:
      v38 = (uint64_t)v37;
      swift_bridgeObjectRelease();
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      swift_storeEnumTagMultiPayload();
      v78[0] = v38;
      v39 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      v67 = sub_1BC2B3764();
      v41 = v40;
      v79 = v39;
      v80 = &protocol witness table for HKMedicationUserDomainConcept;
      goto LABEL_21;
    }
  }
  else if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v21, sel_secondInteractionClass);
  v44 = objc_msgSend(v43, sel_ancestorIdentifier);

  v45 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
  v46 = v45;
  if (!v45)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    v46 = (void *)sub_1BC2B4D6C();
  }
  v47 = v45;
  v38 = sub_1BC2B4FC4();

  *v15 = v38;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v78[0]) = 0;
  v67 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)v78, v38);
  v41 = v48;
  type metadata accessor for HKDrugInteractionLifestyleFactor(0);
  v79 = v49;
  v80 = &protocol witness table for HKDrugInteractionLifestyleFactor;

LABEL_21:
  v78[0] = v38;
  v50 = objc_msgSend(v21, sel_severity, v67);
  v51 = objc_msgSend(v50, sel_severityLevel);

  v52 = v75;
  sub_1BC0FC574((uint64_t)v17, (uint64_t)v11 + *(int *)(v75 + 20), type metadata accessor for DrugInteractionVisualizationConfig);
  sub_1BC0FC574((uint64_t)v15, (uint64_t)v11 + *(int *)(v52 + 24), type metadata accessor for DrugInteractionVisualizationConfig);
  *v11 = v51;
  sub_1BC0E7940();
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v53 + 32) = v21;
  *(_QWORD *)&v77[0] = v53;
  sub_1BC2B45A4();
  v54 = *(_QWORD *)&v77[0];
  type metadata accessor for HKDrugInteractionResultCollection();
  v55 = swift_allocObject();
  if (!(v54 >> 62))
  {
    v56 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    v57 = v21;
    if (v56)
      goto LABEL_23;
LABEL_26:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v63 = v21;
  swift_bridgeObjectRetain();
  v64 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v64)
    goto LABEL_26;
LABEL_23:
  *(_QWORD *)(v55 + 16) = v54;
  sub_1BC0E79F0((uint64_t)v81, (uint64_t)v77);
  sub_1BC0E79F0((uint64_t)v78, (uint64_t)v76);
  type metadata accessor for InteractionMedicationItem();
  v58 = swift_allocObject();
  v59 = v70;
  sub_1BC0FC574((uint64_t)v11, v70, type metadata accessor for InteractionStackedMedmojiDataProvider);
  swift_retain();
  v60 = v69;
  *((_QWORD *)&v66 + 1) = swift_retain();
  *(_QWORD *)&v66 = v60;
  sub_1BC1CBD40(v55, v59, v68, v74, v77, v67, v41, v76, v66, v71, v58);
  v61 = swift_retain();
  v62 = v73;
  MEMORY[0x1BCCEDCF0](v61);
  if (*(_QWORD *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_32:
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  swift_release();
  swift_release();
LABEL_27:
  sub_1BC0E8594((uint64_t)v11, type metadata accessor for InteractionStackedMedmojiDataProvider);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v78);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
  sub_1BC0E8594((uint64_t)v15, type metadata accessor for DrugInteractionVisualizationConfig);
  return sub_1BC0E8594((uint64_t)v17, type metadata accessor for DrugInteractionVisualizationConfig);
}

void InteractionSeverityDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionSeverityDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1CAC34()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  sub_1BC0F7954(v0 + qword_1EF3FDFF0);
  return swift_bridgeObjectRelease();
}

uint64_t InteractionSeverityDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  swift_release();
  swift_release();

  swift_release();
  sub_1BC0F7954(v0 + qword_1EF3FDFF0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionSeverityDataSource.__deallocating_deinit()
{
  InteractionSeverityDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1CAD80()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionSeverityDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionSeverityDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for InteractionMedicationCell();
  sub_1BC0E519C(&qword_1EF3FA838, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationCell, (uint64_t)&protocol conformance descriptor for InteractionMedicationCell);
  sub_1BC2B497C();
  type metadata accessor for InteractionNoneFoundCell();
  sub_1BC0E519C(&qword_1EF3FBD30, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell, (uint64_t)&protocol conformance descriptor for InteractionNoneFoundCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC1CAE58()
{
  type metadata accessor for InteractionMedicationCell();
  sub_1BC0E519C(&qword_1EF3FA838, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationCell, (uint64_t)&protocol conformance descriptor for InteractionMedicationCell);
  sub_1BC2B497C();
  type metadata accessor for InteractionNoneFoundCell();
  sub_1BC0E519C(&qword_1EF3FBD30, (uint64_t (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell, (uint64_t)&protocol conformance descriptor for InteractionNoneFoundCell);
  return sub_1BC2B497C();
}

uint64_t InteractionSeverityDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12[2];

  v3 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v3);
  v4 = v1 + qword_1EF3FDFF0;
  swift_beginAccess();
  sub_1BC0E5774(v4, (uint64_t)&v10);
  if (v11)
  {
    sub_1BC0F2730(&v10, (uint64_t)v12);
    return sub_1BC0F2730(v12, (uint64_t)a1);
  }
  else
  {
    sub_1BC0F7954((uint64_t)&v10);
    sub_1BC253DF0(0xD000000000000015, 0x80000001BC2CFDB0, *(_QWORD *)(v1 + qword_1EF3FE000));
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1BC2B3C68();
    v7 = sub_1BC2B28F4();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v9 = sub_1BC2B28E8();
    a1[3] = v7;
    result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v8, MEMORY[0x1E0D2A8A0]);
    a1[4] = result;
    *a1 = v9;
  }
  return result;
}

uint64_t sub_1BC1CB0F4@<X0>(uint64_t *a1@<X8>)
{
  return InteractionSeverityDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1BC1CB114()
{
  return sub_1BC0E519C(&qword_1EF3FE008, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeverityDataSource, (uint64_t)&protocol conformance descriptor for InteractionSeverityDataSource);
}

uint64_t type metadata accessor for InteractionSeverityDataSource()
{
  uint64_t result;

  result = qword_1EF3FE018;
  if (!qword_1EF3FE018)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1CB17C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSeverityDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSeverityDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSeverityDataSource + *v0 + 184))();
}

uint64_t sub_1BC1CB230()
{
  return type metadata accessor for InteractionSeverityDataSource();
}

void sub_1BC1CB238()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FCC0)
  {
    sub_1BC2B49C4();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FCC0);
  }
}

void sub_1BC1CB28C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE068)
  {
    sub_1BC1A4F80();
    sub_1BC101888(255, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
    sub_1BC0E519C(&qword_1EDA0FB08, (uint64_t (*)(uint64_t))sub_1BC1A4F80, MEMORY[0x1E0C95708]);
    sub_1BC1018E4(&qword_1EF3FCF80, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
    v0 = sub_1BC2B3D64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE068);
  }
}

void sub_1BC1CB360()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FE070)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC1CCDEC(255, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1CB4A8();
    sub_1BC1CB55C((unint64_t *)&qword_1EDA0FB78, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC0E519C(&qword_1EF3FE088, (uint64_t (*)(uint64_t))sub_1BC1CB4A8, MEMORY[0x1E0C95850]);
    v1 = sub_1BC2B3E24();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FE070);
  }
}

void sub_1BC1CB43C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FC50)
  {
    sub_1BC0F22FC(255, &qword_1EDA0FC48, (unint64_t *)&qword_1EDA0FD88);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FC50);
  }
}

void sub_1BC1CB4A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE078)
  {
    sub_1BC1CB28C();
    sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC0E519C(&qword_1EF3FE080, (uint64_t (*)(uint64_t))sub_1BC1CB28C, MEMORY[0x1E0C95698]);
    v0 = sub_1BC2B3DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE078);
  }
}

uint64_t sub_1BC1CB55C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC1CCDEC(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC1CB59C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE090)
  {
    sub_1BC1CB360();
    sub_1BC0F22FC(255, &qword_1EDA0FC48, (unint64_t *)&qword_1EDA0FD88);
    sub_1BC0E519C(&qword_1EF3FE098, (uint64_t (*)(uint64_t))sub_1BC1CB360, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE090);
  }
}

void sub_1BC1CB648()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE0A0)
  {
    sub_1BC1CB360();
    sub_1BC1CB43C();
    sub_1BC0E519C(&qword_1EF3FE098, (uint64_t (*)(uint64_t))sub_1BC1CB360, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE0A0);
  }
}

void sub_1BC1CB6DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE0A8)
  {
    sub_1BC1CB648();
    sub_1BC0E519C(&qword_1EF3FE0B0, (uint64_t (*)(uint64_t))sub_1BC1CB648, MEMORY[0x1E0C95708]);
    v0 = sub_1BC2B3DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE0A8);
  }
}

void sub_1BC1CB754()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE0B8)
  {
    sub_1BC1CB6DC();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF3FE0C0, (uint64_t (*)(uint64_t))sub_1BC1CB6DC, MEMORY[0x1E0C957E8]);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE0B8);
  }
}

uint64_t sub_1BC1CB830(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC1C959C(a1, a2, v2);
}

uint64_t sub_1BC1CB838()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1CB85C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1BC1CB88C()
{
  return sub_1BC1C9854();
}

uint64_t sub_1BC1CB894@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC1CB8C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1CB8E4(unint64_t *a1)
{
  return sub_1BC1C98B8(a1);
}

void sub_1BC1CB8EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0F7C0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC1CB954()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FE0D0)
  {
    sub_1BC1CB8EC(255, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC1CB8EC(255, &qword_1EF3FE0D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FE0D0);
  }
}

uint64_t sub_1BC1CB9E4(uint64_t isStackAllocationSafe, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_1BC1CBB54((_QWORD *)((char *)v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    v9 = v8;
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v7);
    sub_1BC1CBB54((unint64_t *)v10, v6, v4, a2);
    v9 = v11;
    swift_release();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
  }
  return v9;
}

void sub_1BC1CBB54(unint64_t *a1, uint64_t a2, uint64_t a3, id a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v20 = a2;
  v6 = 0;
  v23 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v10)
      goto LABEL_24;
    v17 = *(_QWORD *)(v23 + 8 * v16);
    ++v6;
    if (!v17)
    {
      v6 = v16 + 1;
      if (v16 + 1 >= v10)
        goto LABEL_24;
      v17 = *(_QWORD *)(v23 + 8 * v6);
      if (!v17)
      {
        v6 = v16 + 2;
        if (v16 + 2 >= v10)
          goto LABEL_24;
        v17 = *(_QWORD *)(v23 + 8 * v6);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v9 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    v13 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    v14 = objc_msgSend(v13, sel_severity, v20);
    v15 = objc_msgSend(v14, sel_severityLevel);

    if (v15 == a4)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1BC1E8C88(a1, v20, v22, a3);
        return;
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v10)
    goto LABEL_24;
  v17 = *(_QWORD *)(v23 + 8 * v18);
  if (v17)
  {
    v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v10)
      goto LABEL_24;
    v17 = *(_QWORD *)(v23 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1BC1CBD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, __int128 *a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];

  v17 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  v30[3] = v17;
  v24 = sub_1BC0E519C(&qword_1EF3FC160, type metadata accessor for InteractionStackedMedmojiDataProvider, (uint64_t)&protocol conformance descriptor for InteractionStackedMedmojiDataProvider);
  v30[4] = v24;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  sub_1BC1CC43C(a2, (uint64_t)boxed_opaque_existential_1);
  type metadata accessor for InteractionMedicationCell();
  sub_1BC0E519C(&qword_1EF3FA838, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationCell, (uint64_t)&protocol conformance descriptor for InteractionMedicationCell);
  *(_QWORD *)(a11 + 176) = sub_1BC2B2930();
  *(_QWORD *)(a11 + 184) = v19;
  *(_QWORD *)(a11 + 216) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a11 + 224) = 0;
  *(_OWORD *)(a11 + 192) = a9;
  *(_QWORD *)(a11 + 208) = a10;
  *(_QWORD *)(a11 + 16) = a1;
  if (a6 == a3 && a7 == a4 || (sub_1BC2B53CC() & 1) == 0)
  {
    *(_QWORD *)(a11 + 64) = a3;
    *(_QWORD *)(a11 + 72) = a4;
    sub_1BC0F2730(a5, a11 + 80);
    *(_QWORD *)(a11 + 160) = a6;
    *(_QWORD *)(a11 + 168) = a7;
    sub_1BC0F2730(a8, a11 + 120);
    sub_1BC0E79F0((uint64_t)v30, a11 + 24);
  }
  else
  {
    *(_QWORD *)(a11 + 64) = a6;
    *(_QWORD *)(a11 + 72) = a7;
    sub_1BC0E79F0((uint64_t)a8, a11 + 80);
    *(_QWORD *)(a11 + 160) = a3;
    *(_QWORD *)(a11 + 168) = a4;
    sub_1BC0E79F0((uint64_t)a5, a11 + 120);
    v20 = *boxed_opaque_existential_1;
    v21 = (uint64_t)boxed_opaque_existential_1 + *(int *)(v17 + 24);
    v28 = v17;
    v29 = v24;
    v22 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
    sub_1BC0FC574(v21, (uint64_t)v22 + *(int *)(v17 + 20), type metadata accessor for DrugInteractionVisualizationConfig);
    sub_1BC0FC574((uint64_t)boxed_opaque_existential_1 + *(int *)(v17 + 20), (uint64_t)v22 + *(int *)(v17 + 24), type metadata accessor for DrugInteractionVisualizationConfig);
    *v22 = v20;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a5);
    sub_1BC0F2730(&v27, a11 + 24);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return a11;
}

uint64_t sub_1BC1CBF48(unint64_t a1, void *a2, SEL *a3)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  uint64_t v17;

  v17 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x1BCCEE950](v5, a1);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_16;
        v9 = objc_msgSend(v6, sel_firstConceptIdentifier);
        if (!v9)
          goto LABEL_4;
        v10 = v9;
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
        v11 = objc_msgSend(a2, *a3);
        v12 = objc_msgSend(v11, sel_ancestorIdentifier);

        v13 = sub_1BC2B4D84();
        if ((v13 & 1) != 0)
        {
          sub_1BC2B5204();
          sub_1BC2B5234();
          sub_1BC2B5240();
          sub_1BC2B5210();
        }
        else
        {
LABEL_4:

        }
        ++v5;
        if (v8 == v4)
          return v17;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      v4 = sub_1BC2B52D0();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
    v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BC1CC118(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  id v35;

  v7 = v6;
  v9 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
    sub_1BC0F1488(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, MEMORY[0x1E0DEFCF8]);
    sub_1BC2B47E4();
    v9 = v30;
    v25 = v31;
    v10 = v32;
    v11 = v33;
    v12 = v34;
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v14 = ~v13;
    v15 = -v13;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v12 = v16 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v10 = v14;
    v11 = 0;
  }
  v24 = (unint64_t)(v10 + 64) >> 6;
  if ((v9 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_1BC2B512C())
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v17 = v35;
    swift_unknownObjectRelease();
    v18 = v11;
    v19 = v12;
    while (v17)
    {
      v35 = v17;
      sub_1BC1CA3FC(&v35, a2, a3, a4, a5, a6);

      if (v7)
        break;
      v11 = v18;
      v12 = v19;
      if (v9 < 0)
        goto LABEL_8;
LABEL_11:
      if (v12)
      {
        v19 = (v12 - 1) & v12;
        v20 = __clz(__rbit64(v12)) | (v11 << 6);
        v18 = v11;
      }
      else
      {
        v18 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          return;
        }
        if (v18 >= v24)
          break;
        v21 = *(_QWORD *)(v25 + 8 * v18);
        if (!v21)
        {
          v22 = v11 + 2;
          if (v11 + 2 >= v24)
            break;
          v21 = *(_QWORD *)(v25 + 8 * v22);
          if (v21)
            goto LABEL_22;
          v22 = v11 + 3;
          if (v11 + 3 >= v24)
            break;
          v21 = *(_QWORD *)(v25 + 8 * v22);
          if (v21)
            goto LABEL_22;
          v22 = v11 + 4;
          if (v11 + 4 >= v24)
            break;
          v21 = *(_QWORD *)(v25 + 8 * v22);
          if (v21)
          {
LABEL_22:
            v18 = v22;
          }
          else
          {
            v18 = v11 + 5;
            if (v11 + 5 >= v24)
              break;
            v21 = *(_QWORD *)(v25 + 8 * v18);
            if (!v21)
            {
              v23 = v11 + 6;
              while (v24 != v23)
              {
                v21 = *(_QWORD *)(v25 + 8 * v23++);
                if (v21)
                {
                  v18 = v23 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v19 = (v21 - 1) & v21;
        v20 = __clz(__rbit64(v21)) + (v18 << 6);
      }
      v17 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v20);
    }
  }
  sub_1BC1061A8();
}

uint64_t sub_1BC1CC43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1CC480(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v21 = (unint64_t *)result;
  v4 = 0;
  v5 = 0;
  v23 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v24 = (unint64_t)(v6 + 63) >> 6;
LABEL_4:
  v22 = v4;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v5 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v5 >= v24)
      goto LABEL_28;
    v12 = *(_QWORD *)(v23 + 8 * v5);
    if (!v12)
      break;
LABEL_17:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v5 << 6);
LABEL_18:
    v14 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v10);
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v15 = result;
      v16 = v14;
      v17 = objc_msgSend(v16, sel_severity);
      v18 = objc_msgSend(v17, sel_severityLevel);

      v19 = *(id *)(v15 + qword_1EF3FE000);
      result = swift_release();
      if (v18 == v19)
      {
        *(unint64_t *)((char *)v21 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v4 = v22 + 1;
        if (!__OFADD__(v22, 1))
          goto LABEL_4;
        __break(1u);
LABEL_28:
        swift_retain();
        return sub_1BC1E8C88(v21, a2, v22, a3);
      }
    }
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v24)
    goto LABEL_28;
  v12 = *(_QWORD *)(v23 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v5 + 2;
  if (v5 + 2 >= v24)
    goto LABEL_28;
  v12 = *(_QWORD *)(v23 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v5 + 3;
  if (v5 + 3 >= v24)
    goto LABEL_28;
  v12 = *(_QWORD *)(v23 + 8 * v13);
  if (v12)
  {
LABEL_16:
    v5 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v24)
      goto LABEL_28;
    v12 = *(_QWORD *)(v23 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC1CC6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  size_t v7;
  uint64_t isStackAllocationSafe;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v2 = v1;
  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  v7 = 8 * v6;
  isStackAllocationSafe = swift_retain_n();
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    swift_retain();
    v9 = sub_1BC1CC480((uint64_t)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, a1);
    swift_release();
    swift_release();
    if (v2)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v7);
    swift_retain();
    v9 = sub_1BC1CC480((uint64_t)v10, v6, a1);
    swift_release();
    swift_release();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    swift_release_n();
  }
  return v9;
}

uint64_t sub_1BC1CC880(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  if ((a1 & 0xC000000000000001) == 0)
    return sub_1BC1CC6BC(a1);
  v1 = MEMORY[0x1E0DEE9E8];
  v20 = MEMORY[0x1E0DEE9E8];
  swift_retain();
  sub_1BC2B50CC();
  if (sub_1BC2B512C())
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
    do
    {
      swift_dynamicCast();
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong
        && (v3 = Strong,
            v4 = objc_msgSend(v19, sel_severity),
            v5 = objc_msgSend(v4, sel_severityLevel),
            v4,
            v6 = *(id *)(v3 + qword_1EF3FE000),
            swift_release(),
            v5 == v6))
      {
        v7 = v20;
        v8 = *(_QWORD *)(v20 + 16);
        if (*(_QWORD *)(v20 + 24) <= v8)
        {
          sub_1BC2158BC(v8 + 1);
          v7 = v20;
        }
        result = sub_1BC2B4D78();
        v10 = v7 + 56;
        v11 = -1 << *(_BYTE *)(v7 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v7 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v7 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v15 = 0;
          v16 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v17 = v13 == v16;
            if (v13 == v16)
              v13 = 0;
            v15 |= v17;
            v18 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v18 == -1);
          v14 = __clz(__rbit64(~v18)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v19;
        ++*(_QWORD *)(v7 + 16);
      }
      else
      {

      }
    }
    while (sub_1BC2B512C());
    v1 = v20;
  }
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC1CCB14(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v12 = v2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1BCCEE950](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_18;
        v7 = objc_msgSend(v4, sel_interactions);
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
        sub_1BC0F1488(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, MEMORY[0x1E0DEFCF8]);
        v8 = sub_1BC2B47B4();

        swift_allocObject();
        swift_weakInit();
        v9 = sub_1BC1CC880(v8);
        swift_release();
        if ((v9 & 0xC000000000000001) != 0)
          v10 = sub_1BC2B5108();
        else
          v10 = *(_QWORD *)(v9 + 16);
        swift_release();
        if (v10)
        {
          sub_1BC2B5204();
          sub_1BC2B5234();
          sub_1BC2B5240();
          sub_1BC2B5210();
        }
        else
        {

        }
        ++v3;
        if (v6 == v12)
          return v13;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      v2 = sub_1BC2B52D0();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BC1CCD34()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDA0FBE8)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC1CCDEC(255, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1CB55C((unint64_t *)&qword_1EDA0FB78, &qword_1EDA0FB80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC2B3F50();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDA0FBE8);
  }
}

uint64_t sub_1BC1CCDD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC1C88DC(v1[2], v1[3], v1[4], a1);
}

void sub_1BC1CCDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1C89F0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_1BC1CCDEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC1CB43C();
    v7 = v6;
    v8 = sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC1CCE6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BC1CD974();
  result = sub_1BC2B47C0();
  v10 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC21422C(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1BC1CCF24(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FDA8, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, MEMORY[0x1E0DEFCF8]);
  result = sub_1BC2B47C0();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC2B52D0();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1BCCEE950](i, a1);
        sub_1BC214430(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1BC214430(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1CD0A4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1CD0D0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC1C8C30(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24));
}

void sub_1BC1CD0DC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v28;
  BOOL v29;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;

  v32 = 0;
  v3 = 0;
  v6 = *(_QWORD *)(a3 + 56);
  v4 = a3 + 56;
  v5 = v6;
  v7 = 1 << *(_BYTE *)(v4 - 24);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v5;
  v33 = v4;
  v34 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v37 = (v9 - 1) & v9;
      v38 = v3;
      v10 = __clz(__rbit64(v9)) | (v3 << 6);
      goto LABEL_21;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_47;
    if (v11 >= v34)
    {
LABEL_44:
      swift_retain();
      sub_1BC1E8C64(a1, a2, v32, a3);
      return;
    }
    v12 = *(_QWORD *)(v33 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v34)
        goto LABEL_44;
      v12 = *(_QWORD *)(v33 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v34)
          goto LABEL_44;
        v12 = *(_QWORD *)(v33 + 8 * v13);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v37 = (v12 - 1) & v12;
    v38 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_21:
    v36 = v10;
    v15 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v10);
    v16 = objc_msgSend(v15, sel_conceptIdentifiers);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8E20);
    v17 = sub_1BC2B458C();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1BC2B52D0();
      if (!v18)
        goto LABEL_4;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v18)
        goto LABEL_4;
    }
    if ((v17 & 0xC000000000000001) != 0)
      v19 = (id)MEMORY[0x1BCCEE950](0, v17);
    else
      v19 = *(id *)(v17 + 32);
    v20 = v19;
    v21 = sub_1BC2B4D84();

    if ((v21 & 1) != 0)
    {
LABEL_38:
      swift_bridgeObjectRelease_n();

      *(unint64_t *)((char *)a1 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
      v29 = __OFADD__(v32++, 1);
      v3 = v38;
      v9 = v37;
      if (v29)
        goto LABEL_48;
    }
    else
    {
      if (v18 != 1)
      {
        if ((v17 & 0xC000000000000001) != 0)
        {
          v22 = 1;
          while (1)
          {
            MEMORY[0x1BCCEE950](v22, v17);
            v23 = v22 + 1;
            if (__OFADD__(v22, 1))
              break;
            v24 = sub_1BC2B4D84();
            swift_unknownObjectRelease();
            if ((v24 & 1) != 0)
              goto LABEL_38;
            ++v22;
            if (v23 == v18)
              goto LABEL_4;
          }
          __break(1u);
        }
        else
        {
          v25 = 5;
          while (1)
          {
            v26 = v25 - 3;
            if (__OFADD__(v25 - 4, 1))
              break;
            v27 = *(id *)(v17 + 8 * v25);
            v28 = sub_1BC2B4D84();

            if ((v28 & 1) != 0)
              goto LABEL_38;
            ++v25;
            if (v26 == v18)
              goto LABEL_4;
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

      v3 = v38;
      v9 = v37;
    }
  }
  v14 = v3 + 4;
  if (v3 + 4 >= v34)
    goto LABEL_44;
  v12 = *(_QWORD *)(v33 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v34)
      goto LABEL_44;
    v12 = *(_QWORD *)(v33 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_20;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_1BC1CD450(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    sub_1BC1CD0DC((unint64_t *)v9, v6, a1);
    v12 = v11;
    swift_release();

    if (v2)
      swift_willThrow();

  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    v14 = v8;
    sub_1BC1CD0DC((unint64_t *)v13, v6, a1);
    v12 = v15;
    swift_release();

    MEMORY[0x1BCCEF3A0](v13, -1, -1);
  }
  return v12;
}

void sub_1BC1CD5FC(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  id v28;
  uint64_t v29;

  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1BC1CD450(a1, a2);
    return;
  }
  v29 = MEMORY[0x1E0DEE9E8];
  v2 = a2;
  sub_1BC2B50CC();
  if (!sub_1BC2B512C())
  {
LABEL_40:

    swift_release();
    return;
  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD88);
  while (1)
  {
    swift_dynamicCast();
    v3 = objc_msgSend(v28, sel_conceptIdentifiers);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8E20);
    v4 = sub_1BC2B458C();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BC2B52D0();
      if (!v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5)
        goto LABEL_4;
    }
    if ((v4 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1BCCEE950](0, v4);
    else
      v6 = *(id *)(v4 + 32);
    v7 = v6;
    v8 = sub_1BC2B4D84();

    if ((v8 & 1) != 0)
    {
LABEL_11:
      swift_bridgeObjectRelease_n();
      v9 = v29;
      v10 = *(_QWORD *)(v29 + 16);
      if (*(_QWORD *)(v29 + 24) <= v10)
      {
        sub_1BC215600(v10 + 1);
        v9 = v29;
      }
      v11 = sub_1BC2B4D78();
      v12 = v9 + 56;
      v13 = -1 << *(_BYTE *)(v9 + 32);
      v14 = v11 & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v9 + 56 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v9 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v22 = v15 == v21;
          if (v15 == v21)
            v15 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v23 == -1);
        v16 = __clz(__rbit64(~v23)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v16) = v28;
      ++*(_QWORD *)(v9 + 16);
      goto LABEL_5;
    }
    if (v5 != 1)
      break;
LABEL_4:
    swift_bridgeObjectRelease_n();

LABEL_5:
    if (!sub_1BC2B512C())
      goto LABEL_40;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
    v17 = 1;
    while (1)
    {
      MEMORY[0x1BCCEE950](v17, v4);
      v18 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      v19 = sub_1BC2B4D84();
      swift_unknownObjectRelease();
      if ((v19 & 1) != 0)
        goto LABEL_11;
      ++v17;
      if (v18 == v5)
        goto LABEL_4;
    }
LABEL_41:
    __break(1u);
  }
  else
  {
    v24 = 5;
    while (1)
    {
      v25 = v24 - 3;
      if (__OFADD__(v24 - 4, 1))
        break;
      v26 = *(id *)(v4 + 8 * v24);
      v27 = sub_1BC2B4D84();

      if ((v27 & 1) != 0)
        goto LABEL_11;
      ++v24;
      if (v25 == v5)
        goto LABEL_4;
    }
  }
  __break(1u);
}

unint64_t sub_1BC1CD974()
{
  unint64_t result;

  result = qword_1EF3FE0E8;
  if (!qword_1EF3FE0E8)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BD2D0, &type metadata for ScheduledDoseIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF3FE0E8);
  }
  return result;
}

void static UIImage.collectionViewChevron.getter()
{
  sub_1BC1CE0A8(MEMORY[0x1E0DC1420]);
}

id Symbol.ImageConfiguration.style.getter()
{
  id *v0;

  return *v0;
}

double Symbol.ImageConfiguration.weight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t Symbol.ImageConfiguration.scale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t Symbol.ImageConfiguration.init(style:weight:scale:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(_QWORD *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(_QWORD *)(a3 + 16) = a2;
  return result;
}

uint64_t Symbol.systemName.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC1CDA30 + 4 * byte_1BC2C0A80[*v0]))(1937075312, 0xE400000000000000);
}

uint64_t sub_1BC1CDA30()
{
  return 0x2E6E6F7276656863;
}

unint64_t sub_1BC1CDA54()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC1CDA70()
{
  return 0x69632E6B72616D78;
}

uint64_t sub_1BC1CDA90()
{
  return 0x6B636F6C63;
}

void Symbol.uiImage.getter()
{
  __asm { BR              X10 }
}

id sub_1BC1CDAD8()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v0, 0);

  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x1BC1CDBA4);
  }
  return v1;
}

UIImage __swiftcall Symbol.uiImage(configuration:)(UIImageConfiguration_optional configuration)
{
  UIImage result;

  __asm { BR              X10 }
  return result;
}

id sub_1BC1CDBF0(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v2, v1);

  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x1BC1CDCD0);
  }
  return v3;
}

UIImage Symbol.uiImage(imageConfiguration:)(uint64_t a1)
{
  return Symbol.uiImage(style:weight:scale:)(*(UIFontTextStyle *)a1, *(UIFontWeight *)(a1 + 8), *(UIImageSymbolScale *)(a1 + 16));
}

UIImage __swiftcall Symbol.uiImage(style:weight:scale:)(UIFontTextStyle style, UIFontWeight weight, UIImageSymbolScale scale)
{
  unsigned __int8 *v3;
  uint64_t v5;
  id v6;
  id v7;

  v5 = *v3;
  v6 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, style, weight);
  if (v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v6, scale);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x1BC1CDEC0);
}

uint64_t Symbol.hash(into:)()
{
  return sub_1BC2B545C();
}

BOOL static Symbol.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Symbol.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

void static UIImage.dayHistoryViewChevron.getter()
{
  sub_1BC1CE0A8(MEMORY[0x1E0DC1448]);
}

void _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0()
{
  void *v0;
  double v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v0 = (void *)*MEMORY[0x1E0DC4A88];
  v1 = *MEMORY[0x1E0DC1448];
  v2 = (void *)objc_opt_self();
  v3 = v0;
  v4 = objc_msgSend(v2, sel__preferredFontForTextStyle_weight_, v3, v1);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v4, 2);
    v7 = (void *)sub_1BC2B4430();
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v7, v6);

    if (v8)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC1CE090()
{
  sub_1BC1CE0A8(MEMORY[0x1E0DC1420]);
}

void sub_1BC1CE09C()
{
  sub_1BC1CE0A8(MEMORY[0x1E0DC1448]);
}

void sub_1BC1CE0A8(double *a1)
{
  void *v1;
  double v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = (void *)*MEMORY[0x1E0DC4A88];
  v2 = *a1;
  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = objc_msgSend(v3, sel__preferredFontForTextStyle_weight_, v4, v2);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v5, 1);
    v8 = (void *)sub_1BC2B4430();
    v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v8, v7);

    if (v9)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_1BC1CE1D4()
{
  unint64_t result;

  result = qword_1EF3FE0F0;
  if (!qword_1EF3FE0F0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for Symbol, &type metadata for Symbol);
    atomic_store(result, (unint64_t *)&qword_1EF3FE0F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Symbol(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Symbol(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BC1CE2F4 + 4 * byte_1BC2C0A8A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BC1CE328 + 4 * byte_1BC2C0A85[v4]))();
}

uint64_t sub_1BC1CE328(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1CE330(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC1CE338);
  return result;
}

uint64_t sub_1BC1CE344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC1CE34CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BC1CE350(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1CE358(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Symbol()
{
  return &type metadata for Symbol;
}

uint64_t initializeBufferWithCopyOfBuffer for Symbol.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for Symbol.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Symbol.ImageConfiguration(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for Symbol.ImageConfiguration()
{
  return &type metadata for Symbol.ImageConfiguration;
}

uint64_t sub_1BC1CE450(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1CE4AC()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC1CE4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC1CE544())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC1CE580()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_stringValue);

  v3 = sub_1BC2B4460();
  return v3;
}

uint64_t sub_1BC1CE5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_1BC0E7998(0, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17 - v5;
  if (*(_BYTE *)(v0 + 24))
  {
    v7 = *(void **)(v0 + 16);
    if (*(_BYTE *)(v0 + 24) == 1)
    {
      v8 = v7;
      sub_1BC2B4BD4();
      v9 = sub_1BC2B3788();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
      {
        v12 = sub_1BC2B3770();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
        goto LABEL_11;
      }
      v11 = (uint64_t)v6;
    }
    else
    {
      v13 = v7;
      sub_1BC2B4BD4();
      v14 = sub_1BC2B3788();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14) != 1)
      {
        v12 = sub_1BC2B377C();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v14);
        goto LABEL_11;
      }
      v11 = (uint64_t)v4;
    }
    sub_1BC15D914(v11);
    v12 = 0;
LABEL_11:

    return v12 & 1;
  }
  v12 = 0;
  return v12 & 1;
}

uint64_t sub_1BC1CE774()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

uint64_t sub_1BC1CE794()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B3764();
}

BOOL sub_1BC1CE7E4()
{
  uint64_t v0;
  char v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = *(id *)(v0 + 16);
  sub_1BC1D0CF8(v2, v1);
  v4 = v3;

  if (v4)
    swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_1BC1CE830()
{
  uint64_t v0;
  char v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = *(id *)(v0 + 16);
  v3 = sub_1BC1D0CF8(v2, v1);
  v5 = v4;

  if (!v5)
  {
    if (qword_1EF3F8148 != -1)
      swift_once();
    v6 = (id)qword_1EF3FE7F0;
    swift_bridgeObjectRetain();
    v3 = sub_1BC2B2144();
    swift_bridgeObjectRelease();

  }
  return v3;
}

void *sub_1BC1CE920()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(id *)(v0 + 16);
  v2 = objc_msgSend(v1, sel_localizedOntologyEducationContent);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_primarySection);

    if (v4)
    {
      sub_1BC2B4C34();

      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC11BF0C();
      v3 = (void *)sub_1BC2B440C();

      swift_bridgeObjectRelease();
    }
    else
    {

      return 0;
    }
  }
  else
  {

  }
  return v3;
}

uint64_t sub_1BC1CEA20()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 16);
  sub_1BC2B4D90();

  return sub_1BC2B545C();
}

uint64_t MedicationInformationOverviewItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationInformationOverviewItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1CEABC()
{
  sub_1BC2B5450();
  sub_1BC2B4D90();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1CEB0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1CEB58()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_stringValue);

  v3 = sub_1BC2B4460();
  return v3;
}

uint64_t sub_1BC1CEBD0(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI33MedicationInformationOverviewItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BC1CEBDC()
{
  sub_1BC2B5450();
  sub_1BC2B4D90();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1CEC2C()
{
  sub_1BC2B4D90();
  return sub_1BC2B545C();
}

uint64_t sub_1BC1CEC68()
{
  sub_1BC2B5450();
  sub_1BC2B4D90();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

Swift::Void __swiftcall MedicationInformationOverviewItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  sub_1BC1D0F58(in);
}

uint64_t MedicationInformationOverviewItem.deselectionBehavior(in:)()
{
  uint64_t v0;

  type metadata accessor for MedicationInformationOverviewItem();
  sub_1BC0E008C(&qword_1EF3FE0F8, v0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationOverviewItem, (uint64_t)&protocol conformance descriptor for MedicationInformationOverviewItem);
  return sub_1BC2B2B70();
}

void sub_1BC1CED2C(uint64_t a1, void *a2)
{
  sub_1BC1D0F58(a2);
}

uint64_t sub_1BC1CED50()
{
  type metadata accessor for MedicationInformationOverviewItem();
  return sub_1BC2B2B70();
}

id sub_1BC1CEDA8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 0);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 8.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1CEE7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setAlignment_, 3);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1CEF3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  double v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton);
  }
  else
  {
    if (qword_1EF3F8148 != -1)
      swift_once();
    v4 = (id)qword_1EF3FE7F0;
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B2144();
    v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0x616369746972432ELL, 0xE90000000000006CLL);
    v9 = v8;
    swift_bridgeObjectRelease();
    LODWORD(v10) = 1148846080;
    objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 0, v10, 0xE000000000000000);
    v11 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC1CF088()
{
  return sub_1BC1CF204(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationChevron);
}

id sub_1BC1CF094()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 8.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1CF140()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1CF1EC()
{
  return sub_1BC1CF45C(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronSpacer);
}

id sub_1BC1CF1F8()
{
  return sub_1BC1CF204(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevron);
}

id sub_1BC1CF204(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  double v7;
  void *v8;
  id v9;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = v1;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
    v6 = (void *)MEMORY[0x1BCCEE3EC]();
    LODWORD(v7) = 1148846080;
    objc_msgSend(v6, sel_setContentHuggingPriority_forAxis_, 0, v7);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v8 = *(void **)(v5 + v2);
    *(_QWORD *)(v5 + v2) = v6;
    v4 = v6;

    v3 = 0;
  }
  v9 = v3;
  return v4;
}

id sub_1BC1CF2AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint);
  }
  else
  {
    v4 = sub_1BC1CF140();
    v5 = objc_msgSend(v4, sel_widthAnchor);

    v6 = sub_1BC1CF094();
    v7 = objc_msgSend(v6, sel_widthAnchor);

    v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v7);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC1CF378()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v6 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC2B4C88();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC1CF440()
{
  return sub_1BC1CF4E4(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___nameLabel);
}

id sub_1BC1CF450()
{
  return sub_1BC1CF45C(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevronSpacer);
}

id sub_1BC1CF45C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

id sub_1BC1CF4C8()
{
  return sub_1BC1CF204(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevron);
}

id sub_1BC1CF4D4()
{
  return sub_1BC1CF4E4(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___informationContentLabel);
}

id sub_1BC1CF4E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = v1;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v7 = (void *)sub_1BC2B4C64();
    objc_msgSend(v6, sel_setFont_, v7);

    objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v6, sel_setNumberOfLines_, 3);
    v8 = *(void **)(v5 + v2);
    *(_QWORD *)(v5 + v2) = v6;
    v4 = v6;

    v3 = 0;
  }
  v9 = v3;
  return v4;
}

uint64_t sub_1BC1CF600(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC1D0100();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC1CF670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1CF6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1D0100();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC1CF72C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1CF774;
}

uint64_t sub_1BC1CF774(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1D0100();
  return result;
}

id sub_1BC1CF7A4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_class *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  _QWORD v86[2];
  uint64_t v87;
  uint64_t v88;
  objc_super v89;

  v86[1] = swift_getObjectType();
  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state] = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationChevron] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronSpacer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevron] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___nameLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevronSpacer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevron] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___informationContentLabel] = 0;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item];
  v14 = (objc_class *)type metadata accessor for MedicationInformationOverviewCell();
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v89.receiver = v4;
  v89.super_class = v14;
  v15 = objc_msgSendSuper2(&v89, sel_initWithFrame_, a1, a2, a3, a4);
  v87 = sub_1BC2B4460();
  v88 = v16;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v86[0] = v87;
  v17 = v15;
  swift_bridgeObjectRelease();
  v18 = sub_1BC1CEE7C();
  v19 = sub_1BC1CEF3C();
  objc_msgSend(v18, sel_addArrangedSubview_, v19);

  v20 = sub_1BC1CEE7C();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v20, sel_addArrangedSubview_, v21);

  v22 = sub_1BC1CEE7C();
  v23 = sub_1BC1CF088();
  objc_msgSend(v22, sel_addArrangedSubview_, v23);

  v24 = sub_1BC1CF140();
  v25 = sub_1BC1CF378();
  objc_msgSend(v24, sel_addArrangedSubview_, v25);

  v26 = sub_1BC1CF140();
  v27 = sub_1BC1CF1EC();
  objc_msgSend(v26, sel_addArrangedSubview_, v27);

  v28 = sub_1BC1CF140();
  v29 = sub_1BC1CF1F8();
  objc_msgSend(v28, sel_addArrangedSubview_, v29);

  v30 = sub_1BC1CF094();
  v31 = sub_1BC1CF140();
  objc_msgSend(v30, sel_addArrangedSubview_, v31);

  v32 = sub_1BC1CF094();
  v33 = sub_1BC1CF440();
  objc_msgSend(v32, sel_addArrangedSubview_, v33);

  v34 = sub_1BC1CF094();
  v35 = sub_1BC1CF450();
  objc_msgSend(v34, sel_addArrangedSubview_, v35);

  v36 = sub_1BC1CF094();
  v37 = sub_1BC1CF4C8();
  objc_msgSend(v36, sel_addArrangedSubview_, v37);

  v38 = sub_1BC1CEDA8();
  v39 = sub_1BC1CEE7C();
  objc_msgSend(v38, sel_addArrangedSubview_, v39);

  v40 = sub_1BC1CEDA8();
  v41 = sub_1BC1CF094();
  objc_msgSend(v40, sel_addArrangedSubview_, v41);

  v42 = sub_1BC1CEDA8();
  v43 = sub_1BC1CF4D4();
  objc_msgSend(v42, sel_addArrangedSubview_, v43);

  v44 = sub_1BC1CEDA8();
  v45 = sub_1BC1CF094();
  objc_msgSend(v44, sel_setCustomSpacing_afterView_, v45, 12.0);

  v46 = objc_msgSend(v17, sel_contentView);
  v47 = sub_1BC1CEDA8();
  objc_msgSend(v46, sel_addSubview_, v47);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v49 = v48;
  v51 = v50;
  v53 = v52;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v54 = sub_1BC1CEDA8();
  v55 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v54, sel_hk_alignHorizontalConstraintsWithView_insets_, v55, v49, v51, v53, 16.0);

  v56 = (void *)objc_opt_self();
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1BC2BA730;
  v58 = sub_1BC1CEDA8();
  v59 = objc_msgSend(v58, sel_topAnchor);

  v60 = objc_msgSend(v17, sel_contentView);
  v61 = objc_msgSend(v60, sel_topAnchor);

  v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v61, 16.0);
  *(_QWORD *)(v57 + 32) = v62;
  v63 = sub_1BC1CEDA8();
  v64 = objc_msgSend(v63, sel_bottomAnchor);

  v65 = objc_msgSend(v17, sel_contentView);
  v66 = objc_msgSend(v65, sel_bottomAnchor);

  v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v66, -16.0);
  *(_QWORD *)(v57 + 40) = v67;
  v68 = sub_1BC1CF378();
  v69 = objc_msgSend(v68, sel_widthAnchor);

  v70 = objc_msgSend(v69, sel_constraintEqualToConstant_, 33.0);
  *(_QWORD *)(v57 + 48) = v70;
  v71 = sub_1BC1CF378();
  v72 = objc_msgSend(v71, sel_heightAnchor);

  v73 = objc_msgSend(v72, sel_constraintEqualToConstant_, 33.0);
  *(_QWORD *)(v57 + 56) = v73;
  v87 = v57;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v74 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_activateConstraints_, v74);

  v75 = sub_1BC1CEF3C();
  swift_bridgeObjectRetain();
  v76 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v75, sel_setAccessibilityIdentifier_, v76);

  v77 = sub_1BC1CF4D4();
  swift_bridgeObjectRetain();
  v78 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v77, sel_setAccessibilityIdentifier_, v78);
  swift_bridgeObjectRelease();

  v79 = objc_msgSend(v17, sel_traitCollection);
  v80 = objc_msgSend(v79, sel_preferredContentSizeCategory);

  *((_BYTE *)v17 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state) = sub_1BC2B4ACC() & 1;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_1BC2B92D0;
  v82 = sub_1BC2B3D40();
  v83 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v81 + 32) = v82;
  *(_QWORD *)(v81 + 40) = v83;
  v84 = v17;
  sub_1BC2B4CC4();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v84;
}

uint64_t sub_1BC1D0100()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char **v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v7 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v7, (uint64_t)v36);
  if (!v36[3])
  {
    sub_1BC0F7954((uint64_t)v36);
LABEL_6:
    sub_1BC2B39A4();
    v20 = v1;
    v21 = sub_1BC2B39D4();
    v22 = sub_1BC2B48C8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v34 = v2;
      v35 = v24;
      v25 = v24;
      *(_DWORD *)v23 = 136446210;
      sub_1BC0E5774(v7, (uint64_t)v36);
      sub_1BC0E84E8();
      v26 = sub_1BC2B4490();
      v36[0] = sub_1BC12540C(v26, v27, &v35);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v21, v22, "Incorrect view model for MedicationInformationOverviewItem: %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v25, -1, -1);
      MEMORY[0x1BCCEF3A0](v23, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v34);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for MedicationInformationOverviewItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v8 = v35;
  v9 = sub_1BC1CEE7C();
  objc_msgSend(v9, sel_setHidden_, (sub_1BC1CE5F4() & 1) == 0);

  sub_1BC1D0578();
  v10 = sub_1BC1CF378();
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  sub_1BC2B3308();

  v11 = sub_1BC1CF440();
  v36[0] = *(_QWORD *)(v8 + 16);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B3764();
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v12);

  v13 = sub_1BC1CF4D4();
  sub_1BC1CE830();
  v14 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setText_, v14);

  v15 = sub_1BC1CF4D4();
  LOBYTE(v13) = *(_BYTE *)(v8 + 24);
  v16 = *(id *)(v8 + 16);
  sub_1BC1D0CF8(v16, (char)v13);
  v18 = v17;

  if (v18)
  {
    swift_bridgeObjectRelease();
    v19 = &selRef_labelColor;
  }
  else
  {
    v19 = &selRef_secondaryLabelColor;
  }
  v29 = objc_msgSend((id)objc_opt_self(), *v19);
  objc_msgSend(v15, sel_setTextColor_, v29);

  v30 = *(_BYTE *)(v8 + 24);
  v31 = *(id *)(v8 + 16);
  sub_1BC1D0CF8(v31, v30);
  v33 = v32;

  if (v33)
    swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setUserInteractionEnabled_, v33 != 0);
  return swift_release();
}

uint64_t sub_1BC1D0578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  _BYTE v35[24];
  uint64_t v36;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v2, (uint64_t)v35);
  if (!v36)
    return sub_1BC0F7954((uint64_t)v35);
  sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for MedicationInformationOverviewItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state))
    {
      v4 = sub_1BC1CF094();
      objc_msgSend(v4, sel_setAxis_, 0);

      v5 = sub_1BC1CF094();
      objc_msgSend(v5, sel_setAlignment_, 3);

      LOBYTE(v5) = *(_BYTE *)(v34 + 24);
      v6 = *(id *)(v34 + 16);
      sub_1BC1D0CF8(v6, (char)v5);
      v8 = v7;

      if (v8)
      {
        swift_bridgeObjectRelease();
        v9 = sub_1BC1CE5F4();
        v10 = sub_1BC1CF088();
        v11 = v10;
        if ((v9 & 1) == 0)
        {
          objc_msgSend(v10, sel_setHidden_, 1);

          v12 = sub_1BC1CF4C8();
          v13 = v12;
          v24 = 0;
          goto LABEL_17;
        }
        objc_msgSend(v10, sel_setHidden_, 0);

        v12 = sub_1BC1CF4C8();
        v13 = v12;
      }
      else
      {
        v23 = sub_1BC1CF088();
        objc_msgSend(v23, sel_setHidden_, 1);

        v12 = sub_1BC1CF4C8();
        v13 = v12;
      }
      v24 = 1;
LABEL_17:
      objc_msgSend(v12, sel_setHidden_, v24);

      v27 = sub_1BC1CF1F8();
      objc_msgSend(v27, sel_setHidden_, 1);

      v28 = sub_1BC1CF2AC();
      objc_msgSend(v28, sel_setActive_, 0);

      v29 = sub_1BC1CF1EC();
      objc_msgSend(v29, sel_setHidden_, 1);

      v30 = sub_1BC1CF450();
      objc_msgSend(v30, sel_setHidden_, 0);
LABEL_20:

      return swift_release();
    }
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state) != 1)
    {
      result = sub_1BC2B52B8();
      __break(1u);
      return result;
    }
    v14 = sub_1BC1CF094();
    objc_msgSend(v14, sel_setAxis_, 1);

    v15 = sub_1BC1CF094();
    objc_msgSend(v15, sel_setAlignment_, 1);

    LOBYTE(v15) = *(_BYTE *)(v34 + 24);
    v16 = *(id *)(v34 + 16);
    sub_1BC1D0CF8(v16, (char)v15);
    v18 = v17;

    if (v18)
    {
      swift_bridgeObjectRelease();
      v19 = sub_1BC1CE5F4();
      v20 = sub_1BC1CF088();
      v21 = v20;
      if ((v19 & 1) == 0)
      {
        objc_msgSend(v20, sel_setHidden_, 1);

        v31 = sub_1BC1CF4C8();
        objc_msgSend(v31, sel_setHidden_, 1);

        v26 = sub_1BC1CF1F8();
        objc_msgSend(v26, sel_setHidden_, 0);
        goto LABEL_19;
      }
      v22 = 0;
    }
    else
    {
      v20 = sub_1BC1CF088();
      v21 = v20;
      v22 = 1;
    }
    objc_msgSend(v20, sel_setHidden_, v22);

    v25 = sub_1BC1CF4C8();
    objc_msgSend(v25, sel_setHidden_, 1);

    v26 = sub_1BC1CF1F8();
    objc_msgSend(v26, sel_setHidden_, 1);
LABEL_19:

    v32 = sub_1BC1CF2AC();
    objc_msgSend(v32, sel_setActive_, 1);

    v33 = sub_1BC1CF1EC();
    objc_msgSend(v33, sel_setHidden_, 0);

    v30 = sub_1BC1CF450();
    objc_msgSend(v30, sel_setHidden_, 1);
    goto LABEL_20;
  }
  return result;
}

void sub_1BC1D09A4(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v3 = sub_1BC1CEF3C();
  if (!a2)
  {
    sub_1BC2B4460();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  v5 = sub_1BC1CF4D4();
  if (!a2)
  {
    sub_1BC2B4460();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v6 = sub_1BC1CF4D4();
    v7 = objc_msgSend(v6, sel_text);

    if (v7)
    {
      sub_1BC2B4460();

    }
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v8 = (id)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v8);

}

id MedicationInformationOverviewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationInformationOverviewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC1D0CD8(uint64_t a1, uint64_t a2)
{
  sub_1BC1D09A4(a1, a2);
}

uint64_t sub_1BC1D0CF8(void *a1, char a2)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;

  if (!a2)
  {
    v2 = a1;
    v6 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
    if (v6)
    {
      v4 = v6;
      sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
      v5 = sub_1BC2B284C();
      goto LABEL_9;
    }
LABEL_10:

    return 0;
  }
  if (a2 != 1)
  {
    v2 = a1;
    v7 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
    if (v7)
    {
      v4 = v7;
      sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
      v5 = sub_1BC2B2858();
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  v2 = a1;
  v3 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
  if (!v3)
    goto LABEL_10;
  v4 = v3;
  sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
  v5 = sub_1BC2B2864();
LABEL_9:
  v8 = v5;

  return v8;
}

uint64_t _s19HealthMedicationsUI33MedicationInformationOverviewItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v3 = objc_msgSend(*(id *)(a1 + 16), sel_semanticIdentifier);
  v4 = objc_msgSend(v3, sel_stringValue);

  v5 = sub_1BC2B4460();
  v7 = v6;

  v8 = objc_msgSend(*(id *)(a2 + 16), sel_semanticIdentifier);
  v9 = objc_msgSend(v8, sel_stringValue);

  v10 = sub_1BC2B4460();
  v12 = v11;

  if (v5 == v10 && v7 == v12)
    v14 = 1;
  else
    v14 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

void sub_1BC1D0F58(void *a1)
{
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v19;

  v2 = *(_BYTE *)(v1 + 24);
  v3 = *(id *)(v1 + 16);
  v4 = sub_1BC1CE830();
  v6 = v5;
  v7 = sub_1BC1CE920();
  v9 = v8;
  v10 = objc_allocWithZone((Class)type metadata accessor for MedicationSecondaryEducationViewController());
  v10[qword_1EF3FB740] = v2;
  type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
  swift_allocObject();
  type metadata accessor for MedicationSecondaryEducationDataSource(0);
  v11 = swift_allocObject();
  v12 = v10;
  v13 = sub_1BC251A3C(v2, v3, v4, v6, (uint64_t)v7, v9, v11);
  sub_1BC0E8710();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC2B92D0;
  v15 = sub_1BC0E008C((unint64_t *)&qword_1EF3FB798, 255, type metadata accessor for MedicationSecondaryEducationDataSource, MEMORY[0x1E0D2F070]);
  *(_QWORD *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = v15;
  sub_1BC2B2E04();

  swift_retain();
  v19 = (id)sub_1BC2B2FE4();
  objc_msgSend(v19, sel_setModalPresentationStyle_, 2);

  swift_release();
  v16 = objc_msgSend(a1, sel_navigationController);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_pushViewController_animated_, v19, 1);

  }
}

uint64_t type metadata accessor for MedicationInformationOverviewItem()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationInformationOverviewCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1D1144(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FE108, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationOverviewItem, (uint64_t)&protocol conformance descriptor for MedicationInformationOverviewItem);
}

uint64_t sub_1BC1D1170@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC1D11BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for MedicationInformationOverviewItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.reuseIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.reuseIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.isCritical.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.medmoji.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.hasContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.informationContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.attribution.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t method lookup function for MedicationInformationOverviewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t storeEnumTagSinglePayload for MedicationInformationOverviewCell.PresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC1D1378 + 4 * byte_1BC2C0B55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC1D13AC + 4 * byte_1BC2C0B50[v4]))();
}

uint64_t sub_1BC1D13AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1D13B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC1D13BCLL);
  return result;
}

uint64_t sub_1BC1D13C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC1D13D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC1D13D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1D13DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationInformationOverviewCell.PresentationStyle()
{
  return &type metadata for MedicationInformationOverviewCell.PresentationStyle;
}

unint64_t sub_1BC1D13FC()
{
  unint64_t result;

  result = qword_1EF3FE2C0;
  if (!qword_1EF3FE2C0)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C0DB4, &type metadata for MedicationInformationOverviewCell.PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_1EF3FE2C0);
  }
  return result;
}

void sub_1BC1D1440(unsigned __int8 *a1)
{
  id v2;
  char v3;
  int v4;
  id v5;

  v2 = objc_msgSend(a1, sel_traitCollection);
  v5 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  v3 = sub_1BC2B4ACC();
  v4 = a1[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state];
  a1[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state] = v3 & 1;
  if (v4 != (v3 & 1))
    sub_1BC1D0578();

}

void sub_1BC1D14C4()
{
  _BYTE *v0;
  char *v1;

  v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationChevron] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronSpacer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevron] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___nameLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevronSpacer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevron] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___informationContentLabel] = 0;
  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC1D15F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BC10A700(0, (unint64_t *)&qword_1EF3F91D8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(v0 + 32) = sub_1BC2B4460();
  *(_QWORD *)(v0 + 40) = v1;
  strcpy((char *)(v0 + 48), "DayHistoryView");
  *(_BYTE *)(v0 + 63) = -18;
  v2 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v3 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v3)
  {
    v4 = sub_1BC2B4460();
    v6 = v5;

    qword_1EF402938 = v4;
    unk_1EF402940 = v6;
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC1D16D8()
{
  qword_1EF3FE2C8 = 0x4014000000000000;
}

void sub_1BC1D16E8()
{
  qword_1EF3FE2D0 = 0x4000000000000000;
}

void sub_1BC1D16F8()
{
  qword_1EF3FE2D8 = 0x4020000000000000;
}

id sub_1BC1D1708()
{
  return sub_1BC1D1844(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___doseStatusImageView, (Class *)0x1E0DC3890);
}

id sub_1BC1D171C()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___timeLabel, (uint64_t (*)(void))sub_1BC1D4CF0);
}

id sub_1BC1D1730()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___elapsedTimeLabel, (uint64_t (*)(void))sub_1BC1D4E88);
}

id sub_1BC1D1744()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___chevronImage, (uint64_t (*)(void))sub_1BC1D1758);
}

id sub_1BC1D1758()
{
  id v0;
  void *v1;
  void *v2;
  double v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  sub_1BC1CE09C();
  v2 = v1;
  objc_msgSend(v0, sel_setImage_, v1);

  objc_msgSend(v0, sel_setContentMode_, 1);
  objc_msgSend(v0, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v0, sel_setTintColor_, v4);

  return v0;
}

id sub_1BC1D1830()
{
  return sub_1BC1D1844(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___headerStackView, (Class *)0x1E0DC3CA8);
}

id sub_1BC1D1844(uint64_t *a1, Class *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone(*a2), sel_init);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1BC1D18AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 8.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC1D196C(unsigned __int8 a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state) = a1;
  if (a1 == 2)
  {
    __break(1u);
  }
  else if (v2 != a1)
  {
    sub_1BC1D21D0();
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems))
    {
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext) & 1) != 0)
      {
        v3 = swift_bridgeObjectRetain();
        sub_1BC1D34EC(v3);
        swift_bridgeObjectRelease();
      }
    }
  }
}

char *sub_1BC1D19EC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD v19[6];
  objc_super v20;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___doseStatusImageView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___timeLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___elapsedTimeLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___chevronImage] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___headerStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state] = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer] = 0;
  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
  v11 = sub_1BC2B23F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext] = 2;
  v20.receiver = v4;
  v20.super_class = (Class)type metadata accessor for MedicationsDayHistoryView();
  v12 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC1D1DB0();
  v13 = (void *)objc_opt_self();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19[4] = sub_1BC1D51A4;
  v19[5] = v14;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1BC1D2994;
  v19[3] = &block_descriptor_15;
  v15 = _Block_copy(v19);
  swift_release();
  v16 = objc_msgSend(v13, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v15, 60.0);
  _Block_release(v15);
  v17 = *(void **)&v12[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer];
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer] = v16;

  return v12;
}

id sub_1BC1D1C38()
{
  char *v0;
  void *v1;
  objc_super v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer];
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MedicationsDayHistoryView();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1BC1D1DB0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  swift_getObjectType();
  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v2 + 32) = sub_1BC1D1830();
  *(_QWORD *)(v2 + 40) = sub_1BC1D18AC();
  sub_1BC2B45A4();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setSpacing_, 12.0);
  objc_msgSend(v0, sel_addSubview_, v5);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2BA730;
  v8 = objc_msgSend(v5, sel_leadingAnchor);
  v9 = objc_msgSend(v1, sel_leadingAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(v5, sel_trailingAnchor);
  v12 = objc_msgSend(v1, sel_trailingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v5, sel_topAnchor);
  v15 = objc_msgSend(v1, sel_topAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v7 + 48) = v16;
  v17 = objc_msgSend(v5, sel_bottomAnchor);
  v18 = objc_msgSend(v1, sel_bottomAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v7 + 56) = v19;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v20 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v20);

  v21 = objc_msgSend(v1, sel_traitCollection);
  v22 = objc_msgSend(v21, sel_preferredContentSizeCategory);

  v23 = sub_1BC2B4ACC();
  sub_1BC1D196C(v23 & 1);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BC2B92D0;
  v25 = sub_1BC2B3D40();
  v26 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 40) = v26;
  sub_1BC2B4CC4();

  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BC1D21D0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  id v24;
  double v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;

  v1 = v0;
  v2 = sub_1BC1D1830();
  sub_1BC2B4C94();

  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state))
  {
    v3 = sub_1BC1D1708();
    v4 = sub_1BC1D171C();
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v6 = sub_1BC1D1730();
    v7 = sub_1BC1D1744();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
    if (qword_1EF3F8130 != -1)
      swift_once();
    v8 = (void *)sub_1BC2B4CAC();
    v9 = v3;
    v10 = sub_1BC1D1830();
    objc_msgSend(v10, sel_addArrangedSubview_, v9);

    v11 = v4;
    v12 = sub_1BC1D1830();
    objc_msgSend(v12, sel_addArrangedSubview_, v11);

    v13 = v5;
    v14 = sub_1BC1D1830();
    objc_msgSend(v14, sel_addArrangedSubview_, v13);

    v15 = v6;
    v16 = sub_1BC1D1830();
    objc_msgSend(v16, sel_addArrangedSubview_, v15);

    v17 = v7;
    v18 = sub_1BC1D1830();
    objc_msgSend(v18, sel_addArrangedSubview_, v17);

    v19 = v8;
    v20 = sub_1BC1D1830();
    objc_msgSend(v20, sel_addArrangedSubview_, v19);

    v21 = sub_1BC1D1830();
    if (qword_1EF3F8120 != -1)
      swift_once();
    v22 = *(double *)&qword_1EF3FE2C8;
    v23 = sub_1BC1D1708();
    objc_msgSend(v21, sel_setCustomSpacing_afterView_, v23, v22);

    v24 = sub_1BC1D1830();
    if (qword_1EF3F8128 != -1)
      swift_once();
    v25 = *(double *)&qword_1EF3FE2D0;
    v26 = sub_1BC1D1730();
    objc_msgSend(v24, sel_setCustomSpacing_afterView_, v26, v25);

    v27 = sub_1BC1D1830();
    objc_msgSend(v27, sel_setAxis_, 0);

    v41 = sub_1BC1D1830();
    objc_msgSend(v41, sel_setAlignment_, 1);
LABEL_15:

    return;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state) == 1)
  {
    sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1BC2BDB30;
    *(_QWORD *)(v28 + 32) = sub_1BC1D1708();
    *(_QWORD *)(v28 + 40) = sub_1BC1D171C();
    *(_QWORD *)(v28 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    *(_QWORD *)(v28 + 56) = sub_1BC1D1744();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
    if (qword_1EF3F8130 != -1)
      swift_once();
    *(_QWORD *)(v28 + 64) = sub_1BC2B4CAC();
    sub_1BC2B45A4();
    v29 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
    v30 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v29, sel_initWithArrangedSubviews_, v30);

    if (qword_1EF3F8120 != -1)
      swift_once();
    v32 = *(double *)&qword_1EF3FE2C8;
    v33 = sub_1BC1D1708();
    objc_msgSend(v31, sel_setCustomSpacing_afterView_, v33, v32);

    objc_msgSend(v31, sel_setAxis_, 0);
    objc_msgSend(v31, sel_setAlignment_, 1);
    v34 = v31;
    v35 = sub_1BC1D1730();
    v36 = v34;
    v37 = sub_1BC1D1830();
    objc_msgSend(v37, sel_addArrangedSubview_, v36);

    v38 = v35;
    v39 = sub_1BC1D1830();
    objc_msgSend(v39, sel_addArrangedSubview_, v38);

    v40 = sub_1BC1D1830();
    objc_msgSend(v40, sel_setAxis_, 1);

    v41 = sub_1BC1D1830();
    objc_msgSend(v41, sel_setAlignment_, 0);

    goto LABEL_15;
  }
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC1D2788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v22[-v7];
  swift_beginAccess();
  v9 = (char *)MEMORY[0x1BCCEF478](a2 + 16);
  if (v9)
  {
    v10 = v9;
    v11 = v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext];
    if (v11 == 2)
    {

    }
    else
    {
      v12 = (uint64_t *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache];
      v13 = *(_QWORD *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache + 8];
      if ((v11 & 1) != 0)
      {
        if (v13)
        {
          v16 = *v12;
          v17 = *(_QWORD *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache + 8];
        }
        else
        {
          v16 = 0;
          v17 = 0xE000000000000000;
        }
        v21 = (uint64_t)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
        swift_beginAccess();
        sub_1BC186618(v21, (uint64_t)v6);
        swift_bridgeObjectRetain();
        sub_1BC1D29E4(v16, v17, (uint64_t)v6);
        swift_bridgeObjectRelease();

        v20 = (uint64_t)v6;
      }
      else
      {
        if (v13)
        {
          v14 = *v12;
          v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache + 8];
        }
        else
        {
          v14 = 0;
          v15 = 0xE000000000000000;
        }
        v18 = (uint64_t)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
        swift_beginAccess();
        sub_1BC186618(v18, (uint64_t)v8);
        if (*(_QWORD *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems])
          v19 = *(_QWORD *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems];
        else
          v19 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BC1D2F1C(v14, v15, (uint64_t)v8, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v20 = (uint64_t)v8;
      }
      sub_1BC0F8D88(v20);
    }
  }
}

void sub_1BC1D2994(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1BC1D29E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;

  v4 = v3;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - v12;
  v14 = (_QWORD *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache);
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC186618(a3, (uint64_t)v13);
  v15 = v4 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache;
  swift_beginAccess();
  sub_1BC1866A4((uint64_t)v13, v15);
  swift_endAccess();
  v16 = sub_1BC1D171C();
  v17 = (void *)sub_1BC2B4430();
  objc_msgSend(v16, sel_setText_, v17);

  v18 = sub_1BC1D1730();
  sub_1BC186618(a3, (uint64_t)v11);
  v19 = sub_1BC2B23F0();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_1BC0F8D88((uint64_t)v11);
LABEL_5:
    v23 = 0;
    goto LABEL_6;
  }
  Date.timeElapsedToNow.getter();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
  if (!v22)
    goto LABEL_5;
  v23 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
LABEL_6:
  objc_msgSend(v18, sel_setText_, v23);

  v24 = sub_1BC1D1708();
  objc_msgSend(v24, sel_setHidden_, 1);

}

uint64_t Date.timeElapsedToNow.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  double v17;
  double v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  char v21;
  double v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v27;

  v1 = v0;
  v2 = sub_1BC2B23F0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = sub_1BC2B2594();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v27 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_currentCalendar);
  sub_1BC2B2528();

  sub_1BC2B23B4();
  sub_1BC2B2348();
  v18 = v17;
  LOBYTE(v16) = sub_1BC2B24BC();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  if ((v16 & 1) != 0)
  {
    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v6, v2);
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
  }
  else
  {
    v21 = sub_1BC2B24EC();
    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v6, v2);
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
    if ((v21 & 1) == 0)
    {
      v24 = 0;
      goto LABEL_11;
    }
  }
  sub_1BC2B4748();
  if (v18 >= v22)
  {
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38F0]), sel_init);
    objc_msgSend(v25, sel_setDateTimeStyle_, 0);
    objc_msgSend(v25, sel_setUnitsStyle_, 3);
    sub_1BC2B2348();
    v23 = objc_msgSend(v25, sel_localizedStringFromTimeInterval_);
    v24 = sub_1BC2B4460();

  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v23 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v24 = sub_1BC2B2144();
    swift_bridgeObjectRelease();
  }

LABEL_11:
  v19(v8, v2);
  v20(v15, v9);
  return v24;
}

void sub_1BC1D2F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = v4;
  v10 = sub_1BC2B39E0();
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v34 - v17;
  v19 = (_QWORD *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache);
  *v19 = a1;
  v19[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC186618(a3, (uint64_t)v18);
  v20 = v5 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache;
  swift_beginAccess();
  sub_1BC1866A4((uint64_t)v18, v20);
  swift_endAccess();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = sub_1BC1D171C();
  v22 = (void *)sub_1BC2B4430();
  objc_msgSend(v21, sel_setText_, v22);

  v23 = sub_1BC1D1730();
  sub_1BC186618(a3, (uint64_t)v16);
  v24 = sub_1BC2B23F0();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v24) == 1)
  {
    sub_1BC0F8D88((uint64_t)v16);
  }
  else
  {
    Date.timeElapsedToNow.getter();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v24);
    if (v27)
    {
      v28 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  v28 = 0;
LABEL_6:
  objc_msgSend(v23, sel_setText_, v28);

  if (*(_QWORD *)(a4 + 16) == 1)
  {
    v29 = sub_1BC1D1708();
    sub_1BC1D324C((_QWORD *)(a4 + 32));

    v30 = sub_1BC1D1708();
    objc_msgSend(v30, sel_setHidden_, 0);

  }
  else
  {
    sub_1BC2B39A4();
    v31 = sub_1BC2B39D4();
    v32 = sub_1BC2B48C8();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1BC0DC000, v31, v32, "Expected 1 lineItem to exist for [MedicationDoseEvent] since we do not group\ndoses by time in the Medication Detail Room.", v33, 2u);
      MEMORY[0x1BCCEF3A0](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  }
}

void sub_1BC1D324C(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  char **v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  double v21;
  id v22;

  v2 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v7 = (void *)objc_opt_self();
  v8 = &selRef_systemGrayColor;
  if ((v6 & 1) == 0)
    v8 = &selRef_systemCyanColor;
  v9 = objc_msgSend(v7, *v8);
  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v10 + 32) = objc_msgSend((id)objc_opt_self(), sel_systemWhiteColor);
  *(_QWORD *)(v10 + 40) = v9;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  v11 = v9;
  v12 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_configurationWithPaletteColors_, v12);

  v15 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v16 = objc_msgSend(v13, sel_configurationWithFont_, v15);

  v22 = objc_msgSend(v14, sel_configurationByApplyingConfiguration_, v16);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  v19 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v19);

  objc_msgSend(v2, sel_setImage_, v20);
  objc_msgSend(v2, sel_setPreferredSymbolConfiguration_, v22);
  LODWORD(v21) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v21);

}

uint64_t sub_1BC1D34EC(uint64_t a1)
{
  char *v1;
  void *v2;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  v2 = v1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = sub_1BC1D18AC();
  sub_1BC2B4C94();

  v5 = v2;
  v6 = sub_1BC1D4C38(a1);

  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v7 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1BCCEE950](v9, v6);
      else
        v10 = *(id *)(v6 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      v12 = sub_1BC1D18AC();
      objc_msgSend(v12, sel_addArrangedSubview_, v11);

    }
    while (v7 != v9);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1D3634(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  double v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char **v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  uint64_t result;
  id v83;
  uint64_t v84;
  char *v85;
  __int128 v86;
  id v87;
  uint64_t v88;
  __int128 v89;
  id v90;
  uint64_t v91;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FBD28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2F3A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v85 = (char *)&v84 - v3;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v4);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5) & 1) != 0)
  {
    v6 = MEMORY[0x1E0DEA968];
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v7 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC2B92D0;
    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    v13 = v12;
    *(_QWORD *)(v8 + 56) = v6;
    *(_QWORD *)(v8 + 64) = sub_1BC0F2748();
    *(_QWORD *)(v8 + 32) = v11;
    *(_QWORD *)(v8 + 40) = v13;
    v90 = (id)sub_1BC2B443C();
    *(_QWORD *)&v89 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = a1[3];
    v16 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v15);
    v90 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    *(_QWORD *)&v89 = v17;
  }
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  sub_1BC10A700(0, (unint64_t *)&qword_1EF3F91D8);
  v19 = swift_allocObject();
  v86 = xmmword_1BC2B92C0;
  *(_OWORD *)(v19 + 16) = xmmword_1BC2B92C0;
  v20 = qword_1EF3F8118;
  v21 = v18;
  if (v20 != -1)
    swift_once();
  v22 = unk_1EF402940;
  *(_QWORD *)(v19 + 32) = qword_1EF402938;
  *(_QWORD *)(v19 + 40) = v22;
  *(_QWORD *)(v19 + 48) = 0x65736F447473614CLL;
  *(_QWORD *)(v19 + 56) = 0xE800000000000000;
  swift_bridgeObjectRetain();
  v23 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v24 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v21, sel_setAccessibilityIdentifier_, v24);
  objc_msgSend(v21, sel_setAdjustsFontForContentSizeCategory_, 1);
  v25 = (void *)objc_opt_self();
  v26 = *MEMORY[0x1E0DC4AB8];
  v27 = *MEMORY[0x1E0DC1448];
  v87 = v25;
  v28 = objc_msgSend(v25, sel__preferredFontForTextStyle_weight_, v26, v27);
  objc_msgSend(v21, sel_setFont_, v28);

  v29 = (void *)objc_opt_self();
  v30 = objc_msgSend(v29, sel_secondaryLabelColor);
  objc_msgSend(v21, sel_setTextColor_, v30);

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v31 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B449C();
  swift_bridgeObjectRelease();
  v32 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setText_, v32);

  v33 = a1[3];
  v34 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v33);
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 32);
  v36 = v21;
  objc_msgSend(v36, sel_setHidden_, (v35(v33, v34) & 1) == 0);

  if (!*(_BYTE *)(v88 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state))
  {
    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    sub_1BC1D324C(a1);
    v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v86;
    v40 = unk_1EF402940;
    *(_QWORD *)(v39 + 32) = qword_1EF402938;
    *(_QWORD *)(v39 + 40) = v40;
    strcpy((char *)(v39 + 48), "MedicationName");
    *(_BYTE *)(v39 + 63) = -18;
    v41 = v38;
    swift_bridgeObjectRetain();
    v42 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v43 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v41, sel_setAccessibilityIdentifier_, v43);
    objc_msgSend(v41, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v41, sel_setNumberOfLines_, 0);
    v44 = objc_msgSend(v87, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    objc_msgSend(v41, sel_setFont_, v44);

    v45 = objc_msgSend(v29, sel_labelColor);
    objc_msgSend(v41, sel_setTextColor_, v45);

    v46 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v41, sel_setText_, v46);

    sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
    v47 = swift_allocObject();
    v89 = xmmword_1BC2B92B0;
    *(_OWORD *)(v47 + 16) = xmmword_1BC2B92B0;
    *(_QWORD *)(v47 + 32) = v41;
    *(_QWORD *)(v47 + 40) = v36;
    v91 = v47;
    sub_1BC2B45A4();
    v48 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
    v90 = v36;
    v49 = v41;
    v50 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v51 = objc_msgSend(v48, sel_initWithArrangedSubviews_, v50);

    objc_msgSend(v51, sel_setAxis_, 1);
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = v89;
    *(_QWORD *)(v52 + 32) = v37;
    *(_QWORD *)(v52 + 40) = v51;
    v91 = v52;
    sub_1BC2B45A4();
    v53 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
    v54 = v37;
    v55 = v51;
    v56 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v57 = objc_msgSend(v53, sel_initWithArrangedSubviews_, v56);

    objc_msgSend(v57, sel_setAxis_, 0);
    objc_msgSend(v57, sel_setAlignment_, 1);
    objc_msgSend(v57, sel_setDistribution_, 0);
    objc_msgSend(v57, sel_setSpacing_, 6.0);

    return (uint64_t)v57;
  }
  if (*(_BYTE *)(v88 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state) == 1)
  {
    v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v58, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v58, sel_setNumberOfLines_, 0);
    v59 = objc_msgSend(v29, sel_labelColor);
    objc_msgSend(v58, sel_setTextColor_, v59);

    objc_msgSend(v58, sel_setLineBreakMode_, 0);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v86;
    v61 = unk_1EF402940;
    *(_QWORD *)(v60 + 32) = qword_1EF402938;
    *(_QWORD *)(v60 + 40) = v61;
    strcpy((char *)(v60 + 48), "MedicationName");
    *(_BYTE *)(v60 + 63) = -18;
    v62 = v58;
    swift_bridgeObjectRetain();
    v63 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v64 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v62, sel_setAccessibilityIdentifier_, v64);
    v65 = a1[3];
    v66 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v65);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 24))(v65, v66);
    v68 = &selRef_systemGrayColor;
    if ((v67 & 1) == 0)
      v68 = &selRef_systemCyanColor;
    v69 = objc_msgSend(v29, *v68);
    v70 = objc_msgSend(v87, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0FCD0);
    v71 = a1[3];
    v72 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v71);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
    sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1BC2B7770;
    *(_QWORD *)(v73 + 32) = v69;
    v91 = v73;
    sub_1BC2B45A4();
    v74 = sub_1BC2B4A60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v85, 1, 1, v74);
    v75 = v69;
    v83 = v70;
    v76 = (void *)sub_1BC2B4A54();
    objc_msgSend(v62, sel_setAttributedText_, v76);

    v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_1BC2B92B0;
    *(_QWORD *)(v77 + 32) = v62;
    *(_QWORD *)(v77 + 40) = v36;
    v91 = v77;
    sub_1BC2B45A4();
    v78 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
    v79 = v36;
    v80 = v62;
    v81 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v57 = objc_msgSend(v78, sel_initWithArrangedSubviews_, v81);

    objc_msgSend(v57, sel_setAxis_, 1);
    return (uint64_t)v57;
  }
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

uint64_t sub_1BC1D42D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v18;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - v3;
  v5 = sub_1BC1D1730();
  v6 = objc_msgSend(v5, sel_text);

  if (v6)
  {
    v7 = sub_1BC2B4460();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  sub_1BC186618(a1, (uint64_t)v4);
  v10 = sub_1BC2B23F0();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
  {
    sub_1BC0F8D88((uint64_t)v4);
    if (!v9)
      return 0;
LABEL_17:
    swift_bridgeObjectRelease();
    return 1;
  }
  v12 = Date.timeElapsedToNow.getter();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  if (v9)
  {
    if (v14)
    {
      if (v7 == v12 && v9 == v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = sub_1BC2B53CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          return 1;
      }
      return 0;
    }
    goto LABEL_17;
  }
  if (v14)
    goto LABEL_17;
  return 0;
}

uint64_t sub_1BC1D4484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  unint64_t v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  _OWORD v65[2];
  uint64_t v66;
  _OWORD v67[2];
  uint64_t v68;

  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems);
  if (!v4)
    return 1;
  swift_bridgeObjectRetain();
  v8 = sub_1BC1D171C();
  v9 = objc_msgSend(v8, sel_text);

  if (!v9)
    goto LABEL_33;
  v10 = sub_1BC2B4460();
  v12 = v11;

  if (v10 == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_33;
  }
  v15 = *(_QWORD *)(v4 + 16);
  if (v15 != *(_QWORD *)(a3 + 16))
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return 1;
  }
  v42 = a3 + 32;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v18 = 0;
  while (1)
  {
    if (v18 == v15)
    {
      v68 = 0;
      v18 = v15;
      memset(v67, 0, sizeof(v67));
      if (v17 == v15)
        goto LABEL_16;
      goto LABEL_19;
    }
    if (v18 >= v15)
      break;
    result = sub_1BC0E79F0(v42 + 40 * v18++, (uint64_t)v67);
    if (v17 == v15)
    {
LABEL_16:
      v66 = 0;
      v17 = v15;
      memset(v65, 0, sizeof(v65));
      goto LABEL_21;
    }
LABEL_19:
    if (v17 >= *(_QWORD *)(v4 + 16))
      goto LABEL_41;
    sub_1BC0E79F0(v4 + 32 + 40 * v17++, (uint64_t)v65);
LABEL_21:
    sub_1BC1D4B68((uint64_t)v67, (uint64_t)&v61);
    sub_1BC1D4B68((uint64_t)v65, (uint64_t)&v63);
    if (!v62)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v64)
      {
        sub_1BC0F9C00((uint64_t)&v63);
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
      return 0;
    }
    if (!v64)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v61);
      goto LABEL_33;
    }
    sub_1BC0F2730(&v61, (uint64_t)v58);
    sub_1BC0F2730(&v63, (uint64_t)v55);
    v25 = v59;
    v26 = v60;
    __swift_project_boxed_opaque_existential_0(v58, v59);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    v29 = v28;
    v30 = v56;
    v31 = v57;
    __swift_project_boxed_opaque_existential_0(v55, v56);
    if (v27 == (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31) && v29 == v32)
    {
      swift_bridgeObjectRelease_n();
      sub_1BC0E79F0((uint64_t)v58, (uint64_t)v52);
      sub_1BC0E79F0((uint64_t)v55, (uint64_t)v49);
    }
    else
    {
      v33 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC0E79F0((uint64_t)v58, (uint64_t)v52);
      sub_1BC0E79F0((uint64_t)v55, (uint64_t)v49);
      if ((v33 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
        sub_1BC0E79F0((uint64_t)v58, (uint64_t)v46);
        sub_1BC0E79F0((uint64_t)v55, (uint64_t)v43);
LABEL_37:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
LABEL_38:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 1;
      }
    }
    v34 = v53;
    v35 = v54;
    __swift_project_boxed_opaque_existential_0(v52, v53);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    v38 = v37;
    v39 = v50;
    v40 = v51;
    __swift_project_boxed_opaque_existential_0(v49, v50);
    if (v36 == (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40) && v38 == v41)
    {
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_1BC0E79F0((uint64_t)v58, (uint64_t)v46);
      sub_1BC0E79F0((uint64_t)v55, (uint64_t)v43);
    }
    else
    {
      v19 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_1BC0E79F0((uint64_t)v58, (uint64_t)v46);
      sub_1BC0E79F0((uint64_t)v55, (uint64_t)v43);
      if ((v19 & 1) == 0)
        goto LABEL_37;
    }
    v20 = v47;
    v21 = v48;
    __swift_project_boxed_opaque_existential_0(v46, v47);
    LOBYTE(v20) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    v22 = v44;
    v23 = v45;
    __swift_project_boxed_opaque_existential_0(v43, v44);
    v24 = v20 ^ (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
    if ((v24 & 1) != 0)
      goto LABEL_38;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC1D4960()
{
  return type metadata accessor for MedicationsDayHistoryView();
}

uint64_t type metadata accessor for MedicationsDayHistoryView()
{
  uint64_t result;

  result = qword_1EF3FE368;
  if (!qword_1EF3FE368)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC1D49A4()
{
  unint64_t v0;

  sub_1BC0E7998(319, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t storeEnumTagSinglePayload for MedicationsDayHistoryView.PresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC1D4AA0 + 4 * byte_1BC2C0DE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC1D4AD4 + 4 * byte_1BC2C0DE0[v4]))();
}

uint64_t sub_1BC1D4AD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1D4ADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC1D4AE4);
  return result;
}

uint64_t sub_1BC1D4AF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC1D4AF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC1D4AFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1D4B04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationsDayHistoryView.PresentationStyle()
{
  return &type metadata for MedicationsDayHistoryView.PresentationStyle;
}

unint64_t sub_1BC1D4B24()
{
  unint64_t result;

  result = qword_1EF3FE378;
  if (!qword_1EF3FE378)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C0EB4, &type metadata for MedicationsDayHistoryView.PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_1EF3FE378);
  }
  return result;
}

uint64_t sub_1BC1D4B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0F1278(0, &qword_1EF3F90E0, &qword_1EF3F90E8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC1D4BCC(void *a1)
{
  id v1;
  char v2;
  id v3;

  v1 = objc_msgSend(a1, sel_traitCollection);
  v3 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  v2 = sub_1BC2B4ACC();
  sub_1BC1D196C(v2 & 1);

}

uint64_t sub_1BC1D4C38(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1BC2B5228();
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      sub_1BC1D3634(v4);
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
      v4 += 5;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

id sub_1BC1D4CF0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  sub_1BC10A700(0, (unint64_t *)&qword_1EF3F91D8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92C0;
  v2 = qword_1EF3F8118;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = unk_1EF402940;
  *(_QWORD *)(v1 + 32) = qword_1EF402938;
  *(_QWORD *)(v1 + 40) = v4;
  strcpy((char *)(v1 + 48), "TimeTakenLabel");
  *(_BYTE *)(v1 + 63) = -18;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v6);
  v7 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
  objc_msgSend(v3, sel_setFont_, v7);

  return v3;
}

id sub_1BC1D4E88()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  sub_1BC10A700(0, (unint64_t *)&qword_1EF3F91D8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92C0;
  v2 = qword_1EF3F8118;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = unk_1EF402940;
  *(_QWORD *)(v1 + 32) = qword_1EF402938;
  *(_QWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = 0xD000000000000010;
  *(_QWORD *)(v1 + 56) = 0x80000001BC2D0550;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v6);
  v7 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4AD0], *MEMORY[0x1E0DC1440]);
  objc_msgSend(v3, sel_setFont_, v7);

  v8 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v3, sel_setTextColor_, v8);

  return v3;
}

void sub_1BC1D5060()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___doseStatusImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___timeLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___elapsedTimeLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___chevronImage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___headerStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer] = 0;
  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
  v3 = sub_1BC2B23F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext] = 2;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC1D5180()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC1D51A4(uint64_t a1)
{
  uint64_t v1;

  sub_1BC1D2788(a1, v1);
}

uint64_t dispatch thunk of MedicationEducationDisplayable.isOntologyBacked.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.medmoji.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.doseFormStrength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.ingredientComponents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.educationContentProviding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t MedicationSummaryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BC1D52CC();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = v1[1];
  *(_QWORD *)v5 = sub_1BC2B41A8();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  sub_1BC1D5BD8();
  sub_1BC1D59A4(v6, v7, (uint64_t)&v5[*(int *)(v8 + 44)]);
  v9 = sub_1BC2B4268();
  LOBYTE(v6) = sub_1BC2B41D8();
  sub_1BC0FC574((uint64_t)v5, a1, (uint64_t (*)(_QWORD))sub_1BC1D52CC);
  sub_1BC1D5C54();
  v11 = a1 + *(int *)(v10 + 36);
  *(_QWORD *)v11 = v9;
  *(_BYTE *)(v11 + 8) = v6;
  return sub_1BC0E8594((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC1D52CC);
}

void sub_1BC1D52CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE380)
  {
    sub_1BC0E7998(255, &qword_1EF3FE388, (uint64_t (*)(uint64_t))sub_1BC1D5364, MEMORY[0x1E0CE0648]);
    sub_1BC1D595C(&qword_1EF3FE430, &qword_1EF3FE388, (uint64_t (*)(uint64_t))sub_1BC1D5364);
    v0 = sub_1BC2B4298();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE380);
  }
}

void sub_1BC1D5364()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF3FE390)
  {
    sub_1BC1D53D0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF3FE390);
  }
}

void sub_1BC1D53D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE398)
  {
    sub_1BC0E7998(255, &qword_1EF3FE3A0, (uint64_t (*)(uint64_t))sub_1BC1D5468, MEMORY[0x1E0CE0648]);
    sub_1BC1D595C(&qword_1EF3FE428, &qword_1EF3FE3A0, (uint64_t (*)(uint64_t))sub_1BC1D5468);
    v0 = sub_1BC2B42A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE398);
  }
}

void sub_1BC1D5468()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FE3A8)
  {
    sub_1BC1D54D4();
    sub_1BC1D55EC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FE3A8);
  }
}

void sub_1BC1D54D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE3B0)
  {
    sub_1BC1D5530();
    v0 = sub_1BC2B416C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE3B0);
  }
}

void sub_1BC1D5530()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE3B8)
  {
    sub_1BC1D55A8();
    v0 = sub_1BC2B4130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE3B8);
  }
}

unint64_t sub_1BC1D55A8()
{
  unint64_t result;

  result = qword_1EF3FE3C0;
  if (!qword_1EF3FE3C0)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CDFAB0], MEMORY[0x1E0CDFAD0]);
    atomic_store(result, (unint64_t *)&qword_1EF3FE3C0);
  }
  return result;
}

void sub_1BC1D55EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE3C8)
  {
    sub_1BC1D5CD8(255, &qword_1EF3FE3D0, MEMORY[0x1E0CD93C0], MEMORY[0x1E0CD8D90], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    sub_1BC1D5670();
    v0 = sub_1BC2B416C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE3C8);
  }
}

void sub_1BC1D5670()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE3D8)
  {
    sub_1BC1D56D0();
    sub_1BC1D5814();
    v0 = sub_1BC2B413C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE3D8);
  }
}

void sub_1BC1D56D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE3E0)
  {
    sub_1BC1D574C();
    sub_1BC0E7998(255, &qword_1EF3FE400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDF7E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDCF68]);
    v0 = sub_1BC2B416C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE3E0);
  }
}

void sub_1BC1D574C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE3E8)
  {
    sub_1BC1D57A8();
    v0 = sub_1BC2B416C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE3E8);
  }
}

void sub_1BC1D57A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE3F0)
  {
    sub_1BC0E2130(255, &qword_1EF3FE3F8, MEMORY[0x1E0CDD840], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC2B41CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE3F0);
  }
}

unint64_t sub_1BC1D5814()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF3FE408;
  if (!qword_1EF3FE408)
  {
    sub_1BC1D56D0();
    v2 = v1;
    v3[0] = sub_1BC1D587C();
    v3[1] = sub_1BC1D58FC();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF3FE408);
  }
  return result;
}

unint64_t sub_1BC1D587C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF3FE410;
  if (!qword_1EF3FE410)
  {
    sub_1BC1D574C();
    v2 = v1;
    v3 = sub_1BC0E519C(&qword_1EF3FE418, (uint64_t (*)(uint64_t))sub_1BC1D57A8, MEMORY[0x1E0CDCF80]);
    v4[0] = MEMORY[0x1E0CDF820];
    v4[1] = v3;
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CD9C20], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF3FE410);
  }
  return result;
}

unint64_t sub_1BC1D58FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FE420;
  if (!qword_1EF3FE420)
  {
    sub_1BC0E7998(255, &qword_1EF3FE400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDF7E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDCF68]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FE420);
  }
  return result;
}

uint64_t sub_1BC1D595C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC0E7998(255, a2, a3, MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CE0680], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC1D59A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a3;
  sub_1BC1D53D0();
  v6 = MEMORY[0x1E0C80A78](v5);
  v35 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v35 - v8);
  *v9 = sub_1BC2B42BC();
  v9[1] = v10;
  sub_1BC1D6620();
  sub_1BC1D5D30((uint64_t *)((char *)v9 + *(int *)(v11 + 44)));
  v37 = a1;
  v38 = a2;
  sub_1BC0FF070();
  swift_bridgeObjectRetain();
  v12 = sub_1BC2B4238();
  v14 = v13;
  v16 = v15 & 1;
  sub_1BC2B4214();
  v17 = sub_1BC2B422C();
  v19 = v18;
  v21 = v20;
  swift_release();
  sub_1BC1D669C(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1BC2B41FC();
  v22 = sub_1BC2B4220();
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  sub_1BC1D669C(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  v29 = v35;
  sub_1BC0FC574((uint64_t)v9, v35, (uint64_t (*)(_QWORD))sub_1BC1D53D0);
  v30 = v36;
  sub_1BC0FC574(v29, v36, (uint64_t (*)(_QWORD))sub_1BC1D53D0);
  sub_1BC1D5364();
  v32 = v30 + *(int *)(v31 + 48);
  *(_QWORD *)v32 = 0x402E000000000000;
  *(_BYTE *)(v32 + 8) = 0;
  v33 = v30 + *(int *)(v31 + 64);
  *(_QWORD *)v33 = v22;
  *(_QWORD *)(v33 + 8) = v24;
  *(_BYTE *)(v33 + 16) = v28;
  *(_QWORD *)(v33 + 24) = v26;
  sub_1BC1D66AC(v22, v24, v28);
  swift_bridgeObjectRetain();
  sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC1D53D0);
  sub_1BC1D669C(v22, v24, v28);
  swift_bridgeObjectRelease();
  return sub_1BC0E8594(v29, (uint64_t (*)(_QWORD))sub_1BC1D53D0);
}

void sub_1BC1D5BD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE438)
  {
    sub_1BC0E7998(255, &qword_1EF3FE388, (uint64_t (*)(uint64_t))sub_1BC1D5364, MEMORY[0x1E0CE0648]);
    v0 = sub_1BC2B4154();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE438);
  }
}

void sub_1BC1D5C54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE440)
  {
    sub_1BC1D52CC();
    sub_1BC1D5CD8(255, &qword_1EF3FE448, MEMORY[0x1E0CDF5D0], MEMORY[0x1E0CDF598], MEMORY[0x1E0CDC6B0]);
    v0 = sub_1BC2B416C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE440);
  }
}

void sub_1BC1D5CD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC1D5D20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC1D5D30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;

  v59 = a1;
  sub_1BC1D5670();
  MEMORY[0x1E0C80A78](v1);
  v62 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FE400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDF7E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDCF68]);
  v60 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v40 - v4);
  v50 = sub_1BC2B428C();
  v6 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FE470, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - v10;
  sub_1BC1D56D0();
  v49 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC1D55EC();
  v57 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v61 = (uint64_t)&v40 - v19;
  v20 = (void *)objc_opt_self();
  v58 = MEMORY[0x1BCCED9F0](objc_msgSend(v20, sel_secondarySystemBackgroundColor));
  sub_1BC2B42BC();
  sub_1BC2B4148();
  v56 = v63;
  v55 = v64;
  v54 = v65;
  v53 = v66;
  v52 = v67;
  v51 = v68;
  sub_1BC0E2130(0, &qword_1EF3FE478, MEMORY[0x1E0CDF5D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(v21 + 32) = MEMORY[0x1BCCED9F0](objc_msgSend(v20, sel_systemCyanColor));
  *(_QWORD *)(v21 + 40) = MEMORY[0x1BCCED9F0](objc_msgSend(v20, sel_systemBlueColor));
  v73 = v21;
  sub_1BC2B45A4();
  MEMORY[0x1BCCEDA2C](v73);
  sub_1BC2B42C8();
  sub_1BC2B42D4();
  sub_1BC2B4160();
  v47 = v69;
  v48 = v70;
  v22 = v71;
  v23 = v72;
  sub_1BC2B42BC();
  sub_1BC2B4148();
  v46 = v73;
  v45 = v74;
  v44 = v75;
  v43 = v76;
  v42 = v77;
  v41 = v78;
  v24 = sub_1BC2B4280();
  v25 = sub_1BC2B41F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 1, 1, v25);
  sub_1BC2B4208();
  sub_1BC1D6808((uint64_t)v11, &qword_1EF3FE470, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v26 = sub_1BC2B41E4();
  swift_release();
  KeyPath = swift_getKeyPath();
  v28 = v8;
  v29 = v8;
  v30 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v29, *MEMORY[0x1E0CDF7C0], v50);
  v31 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v5 + *(int *)(v60 + 28), v28, v30);
  *v5 = v31;
  sub_1BC1D67AC((uint64_t)v5, (uint64_t)v14 + *(int *)(v49 + 36));
  *v14 = v24;
  v14[1] = KeyPath;
  v14[2] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BC1D6808((uint64_t)v5, &qword_1EF3FE400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDF7E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDCF68]);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v30);
  swift_release();
  swift_release();
  swift_release();
  v32 = v62;
  sub_1BC0FC574((uint64_t)v14, v62, (uint64_t (*)(_QWORD))sub_1BC1D56D0);
  sub_1BC0FC574(v32, (uint64_t)&v18[*(int *)(v57 + 36)], (uint64_t (*)(_QWORD))sub_1BC1D5670);
  *(_QWORD *)v18 = v47;
  *(_OWORD *)(v18 + 8) = v48;
  *((_QWORD *)v18 + 3) = v22;
  *((_QWORD *)v18 + 4) = v23;
  *((_QWORD *)v18 + 5) = v46;
  v18[48] = v45;
  *((_QWORD *)v18 + 7) = v44;
  v18[64] = v43;
  v33 = v41;
  *((_QWORD *)v18 + 9) = v42;
  *((_QWORD *)v18 + 10) = v33;
  swift_bridgeObjectRetain();
  sub_1BC0E8594(v32, (uint64_t (*)(_QWORD))sub_1BC1D5670);
  sub_1BC0E8594((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC1D56D0);
  sub_1BC1D6844((uint64_t)&v69);
  v34 = v61;
  sub_1BC1D686C((uint64_t)v18, v61);
  sub_1BC0FC574(v34, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC1D55EC);
  v35 = v59;
  *v59 = v58;
  *((_WORD *)v35 + 4) = 256;
  v35[2] = v56;
  *((_BYTE *)v35 + 24) = v55;
  v35[4] = v54;
  *((_BYTE *)v35 + 40) = v53;
  v36 = v51;
  v35[6] = v52;
  v35[7] = v36;
  v37 = v35;
  sub_1BC1D5468();
  sub_1BC0FC574((uint64_t)v18, (uint64_t)v37 + *(int *)(v38 + 48), (uint64_t (*)(_QWORD))sub_1BC1D55EC);
  swift_retain();
  sub_1BC0E8594(v34, (uint64_t (*)(_QWORD))sub_1BC1D55EC);
  sub_1BC0E8594((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC1D55EC);
  return swift_release();
}

uint64_t sub_1BC1D641C()
{
  return sub_1BC2B425C();
}

uint64_t sub_1BC1D6434@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BC1D52CC();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = v1[1];
  *(_QWORD *)v5 = sub_1BC2B41A8();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  sub_1BC1D5BD8();
  sub_1BC1D59A4(v6, v7, (uint64_t)&v5[*(int *)(v8 + 44)]);
  v9 = sub_1BC2B4268();
  LOBYTE(v6) = sub_1BC2B41D8();
  sub_1BC0FC574((uint64_t)v5, a1, (uint64_t (*)(_QWORD))sub_1BC1D52CC);
  sub_1BC1D5C54();
  v11 = a1 + *(int *)(v10 + 36);
  *(_QWORD *)v11 = v9;
  *(_BYTE *)(v11 + 8) = v6;
  return sub_1BC0E8594((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC1D52CC);
}

ValueMetadata *type metadata accessor for MedicationSummaryView()
{
  return &type metadata for MedicationSummaryView;
}

unint64_t sub_1BC1D6538()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF3FE450;
  if (!qword_1EF3FE450)
  {
    sub_1BC1D5C54();
    v2 = v1;
    v3[0] = sub_1BC0E519C(&qword_1EF3FE458, (uint64_t (*)(uint64_t))sub_1BC1D52CC, MEMORY[0x1E0CDFCC0]);
    v3[1] = sub_1BC1D65B8();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF3FE450);
  }
  return result;
}

unint64_t sub_1BC1D65B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FE460;
  if (!qword_1EF3FE460)
  {
    sub_1BC1D5CD8(255, &qword_1EF3FE448, MEMORY[0x1E0CDF5D0], MEMORY[0x1E0CDF598], MEMORY[0x1E0CDC6B0]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CDC6D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FE460);
  }
  return result;
}

void sub_1BC1D6620()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE468)
  {
    sub_1BC0E7998(255, &qword_1EF3FE3A0, (uint64_t (*)(uint64_t))sub_1BC1D5468, MEMORY[0x1E0CE0648]);
    v0 = sub_1BC2B4154();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE468);
  }
}

uint64_t sub_1BC1D669C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1D66AC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1BC1D66BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC2B4190();
  *a1 = result;
  return result;
}

uint64_t sub_1BC1D66E4()
{
  swift_retain();
  return sub_1BC2B419C();
}

uint64_t sub_1BC1D670C()
{
  return sub_1BC2B4178();
}

uint64_t sub_1BC1D672C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1BC2B428C();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1BC2B4184();
}

uint64_t sub_1BC1D67AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, &qword_1EF3FE400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDF7E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDCF68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1D6808(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1BC0E7998(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BC1D6844(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1D686C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC1D55EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DDIOnboardingDataSource()
{
  uint64_t result;

  result = qword_1EF3FE498;
  if (!qword_1EF3FE498)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC1D68EC()
{
  unint64_t v0;

  sub_1BC0E7998(319, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_1BC1D6994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(char *, uint64_t);
  unint64_t v6;
  _QWORD v8[6];

  v1 = sub_1BC2B2438();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[3] = *(_QWORD *)(v0 + qword_1EF3FE488);
  swift_allocObject();
  swift_weakInit();
  sub_1BC1D7634();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FE538, (uint64_t (*)(uint64_t))sub_1BC1D7634, MEMORY[0x1E0C95FB8]);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
  sub_1BC1D6F18();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v5 = *(void (**)(char *, uint64_t))(v2 + 8);
  v5(v4, v1);
  sub_1BC2B2BAC();
  swift_retain();
  v6 = sub_1BC1D7144((uint64_t)&unk_1E74AFCF8, v0);
  swift_release();
  sub_1BC0F7B98(v6);
  swift_bridgeObjectRelease();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v5(v4, v1);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1D6C2C()
{
  uint64_t result;
  uint64_t v1;
  unint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_1BC1D6F18();
    sub_1BC2B2C24();
    swift_bridgeObjectRelease();
    swift_retain();
    v2 = sub_1BC1D7144((uint64_t)&unk_1E74AFFE8, v1);
    swift_release();
    sub_1BC0F7B98(v2);
    swift_bridgeObjectRelease();
    sub_1BC2B2C24();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BC1D6CFC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1D6D28()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1BC1D7578(v0 + qword_1EF402948);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1D6D74()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_release();
  swift_release();
  sub_1BC1D7578(v0 + qword_1EF402948);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1D6DE4()
{
  return type metadata accessor for DDIOnboardingDataSource();
}

uint64_t sub_1BC1D6DEC()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  type metadata accessor for InteractionsOnboardingEducationCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FE520, (uint64_t (*)(uint64_t))type metadata accessor for InteractionsOnboardingEducationCell, (uint64_t)&protocol conformance descriptor for InteractionsOnboardingEducationCell);
  sub_1BC2B497C();
  sub_1BC2B2DA4();
  return sub_1BC2B497C();
}

uint64_t sub_1BC1D6E70()
{
  return swift_retain();
}

uint64_t sub_1BC1D6E84()
{
  sub_1BC0E519C(&qword_1EF3FE528, (uint64_t (*)(uint64_t))type metadata accessor for DDIOnboardingDataSource, (uint64_t)&unk_1BC2C1040);
  return sub_1BC2B3074();
}

uint64_t sub_1BC1D6EE0()
{
  return sub_1BC0E519C(&qword_1EF3FE4E8, (uint64_t (*)(uint64_t))type metadata accessor for DDIOnboardingDataSource, (uint64_t)&unk_1BC2C1010);
}

uint64_t sub_1BC1D6F0C()
{
  return MEMORY[0x1E0DEAFB8];
}

uint64_t sub_1BC1D6F18()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92C0;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B2144();
  v4 = v3;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 56) = &type metadata for InteractionsOnboardingEducationItem;
  v5 = sub_1BC1D7698();
  *(_QWORD *)(v0 + 64) = v5;
  v6 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 32) = v6;
  type metadata accessor for InteractionsOnboardingEducationCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FE520, (uint64_t (*)(uint64_t))type metadata accessor for InteractionsOnboardingEducationCell, (uint64_t)&protocol conformance descriptor for InteractionsOnboardingEducationCell);
  v7 = sub_1BC2B2930();
  v6[2] = v2;
  v6[3] = v4;
  v6[4] = v7;
  v6[5] = v8;
  v9 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v10 = sub_1BC2B2144();
  v12 = v11;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 96) = &type metadata for InteractionsOnboardingEducationItem;
  *(_QWORD *)(v0 + 104) = v5;
  v13 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 72) = v13;
  v14 = sub_1BC2B2930();
  v13[2] = v10;
  v13[3] = v12;
  v13[4] = v14;
  v13[5] = v15;
  return v0;
}

uint64_t sub_1BC1D7144(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BC2B5228();
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(a2 + qword_1EF3FE480);
    type metadata accessor for OnboardingLifestyleInteractionSwitchItem();
    do
    {
      v8 = *v6++;
      swift_allocObject();
      swift_retain();
      sub_1BC2A9598(v8, v7);
      swift_release();
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
      --v3;
    }
    while (v3);
    return v9;
  }
  return result;
}

uint64_t sub_1BC1D7244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v5 = sub_1BC2B2438();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_1EF3FE480;
  sub_1BC2B3278();
  swift_retain();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC1D75CC();
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  *(_QWORD *)(v2 + v9) = sub_1BC2B314C();
  *(_QWORD *)(v2 + qword_1EF3FE490) = MEMORY[0x1E0DEE9E8];
  sub_1BC0E8644(a1, v2 + qword_1EF402948);
  *(_QWORD *)(v2 + qword_1EF3FE488) = a2;
  swift_retain();
  swift_release();
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "MutableArray<");
  HIWORD(v12[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v10 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC1D6994();
  swift_release();
  sub_1BC1D7578(a1);
  return v10;
}

void *sub_1BC1D7444(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v8;

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1BC2B2CC0();
    sub_1BC2B2CE4();
    sub_1BC2B2D08();
LABEL_6:
    v6 = (void *)sub_1BC2B2D14();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v6;
  }
  if (a1)
  {
    sub_1BC2B2CC0();
    goto LABEL_6;
  }
  sub_1BC2B2CC0();
  v6 = (void *)sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_setContentInsetsReference_, 1);
  objc_msgSend(v6, sel_setContentInsets_, 0.0, 24.0, 0.0, 24.0);
  objc_msgSend(v6, sel_setInterGroupSpacing_, 15.0);
  return v6;
}

uint64_t sub_1BC1D7578(uint64_t a1)
{
  uint64_t v2;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC1D75CC()
{
  unint64_t result;

  result = qword_1EDA0FC98;
  if (!qword_1EDA0FC98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FC98);
  }
  return result;
}

uint64_t sub_1BC1D7608()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1D762C()
{
  return sub_1BC1D6C2C();
}

void sub_1BC1D7634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE530)
  {
    sub_1BC0F6220();
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE530);
  }
}

unint64_t sub_1BC1D7698()
{
  unint64_t result;

  result = qword_1EF3FE540;
  if (!qword_1EF3FE540)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionsOnboardingEducationItem, &type metadata for InteractionsOnboardingEducationItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FE540);
  }
  return result;
}

uint64_t sub_1BC1D76DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1D7708(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1D7764()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC1D77AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC1D77FC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC1D7838()
{
  uint64_t v1;

  sub_1BC2B2438();
  sub_1BC0E008C(&qword_1EF3F9F18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v1 = sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t MedicationEducationItem.__allocating_init(primaryContent:attribution:alternateRenderingMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = swift_allocObject();
  type metadata accessor for MedicationEducationItemCell();
  sub_1BC0E008C(&qword_1EF3FE550, v11, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationItemCell);
  *(_QWORD *)(v10 + 56) = sub_1BC2B2930();
  *(_QWORD *)(v10 + 64) = v12;
  sub_1BC2B242C();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_BYTE *)(v10 + 48) = a5;
  return v10;
}

uint64_t MedicationEducationItem.init(primaryContent:attribution:alternateRenderingMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for MedicationEducationItemCell();
  sub_1BC0E008C(&qword_1EF3FE550, v11, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationItemCell);
  *(_QWORD *)(v5 + 56) = sub_1BC2B2930();
  *(_QWORD *)(v5 + 64) = v12;
  sub_1BC2B242C();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_BYTE *)(v5 + 48) = a5;
  return v5;
}

uint64_t type metadata accessor for MedicationEducationItemCell()
{
  return objc_opt_self();
}

uint64_t MedicationEducationItem.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationEducationItem_uuid;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MedicationEducationItem.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationEducationItem_uuid;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1D7B24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1D7B70()
{
  uint64_t v1;

  sub_1BC2B2438();
  sub_1BC0E008C(&qword_1EF3F9F18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v1 = sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC1D7C30(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC1D8274();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC1D7CA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1D7CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1D8274();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC1D7D5C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1D7DA4;
}

uint64_t sub_1BC1D7DA4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1D8274();
  return result;
}

id sub_1BC1D7DD4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    v4 = sub_1BC1D7E30();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1D7E30()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  double v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = sub_1BC2B4460();
  v8 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v7, v8);

  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v3;
}

id sub_1BC1D7FDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel);
  }
  else
  {
    swift_getObjectType();
    v4 = sub_1BC1D8040();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1D8040()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  uint64_t v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = sub_1BC2B4460();
  v3 = v2;
  sub_1BC0E008C(&qword_1EF3FE550, v2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationItemCell);
  v4 = v0;
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v10 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v10, v3);

  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v4, sel_setFont_, v6);

  v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  LODWORD(v8) = 1148846080;
  objc_msgSend(v4, sel_setContentCompressionResistancePriority_forAxis_, 1, v8);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v4;
}

uint64_t sub_1BC1D8274()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  char **v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  double v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  double v80;
  id v81;
  void *v82;
  void *v83;
  id v84;
  void *v85;
  id v86;
  void *v87;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v98 - v7;
  v9 = sub_1BC2B3B48();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v13, (uint64_t)v104);
  if (!v104[3])
  {
    sub_1BC0F7954((uint64_t)v104);
LABEL_24:
    sub_1BC2B39A4();
    v89 = v1;
    v90 = sub_1BC2B39D4();
    v91 = sub_1BC2B48C8();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = swift_slowAlloc();
      v102 = v2;
      v93 = (uint8_t *)v92;
      v94 = swift_slowAlloc();
      v103 = v94;
      *(_DWORD *)v93 = 136446210;
      sub_1BC0E5774(v13, (uint64_t)v104);
      sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
      v95 = sub_1BC2B4490();
      v104[0] = sub_1BC12540C(v95, v96, &v103);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v90, v91, "Incorrect view model for MedicationEducationItemCell: %{public}s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v94, -1, -1);
      MEMORY[0x1BCCEF3A0](v93, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v102);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC0E1B94();
  type metadata accessor for MedicationEducationItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_24;
  v14 = v103;
  sub_1BC2B3B24();
  v15 = *(_BYTE *)(v14 + 48);
  v16 = (void *)objc_opt_self();
  v17 = &selRef_tertiarySystemBackgroundColor;
  if ((v15 & 1) != 0)
    v17 = &selRef_tertiarySystemFillColor;
  v18 = objc_msgSend(v16, *v17);
  sub_1BC2B3B18();
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v100 = v12;
  v19(v8, v12, v9);
  v101 = v9;
  v102 = v10;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  MEMORY[0x1BCCEE23C](v8);
  sub_1BC0E7940();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC2BB4D0;
  v21 = sub_1BC1D7DD4();
  v22 = objc_msgSend(v21, sel_topAnchor);

  v23 = objc_msgSend(v1, sel_contentView);
  v24 = objc_msgSend(v23, sel_topAnchor);

  sub_1BC2B2648();
  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24);

  *(_QWORD *)(v20 + 32) = v25;
  v26 = sub_1BC1D7DD4();
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  v28 = objc_msgSend(v1, sel_contentView);
  v29 = objc_msgSend(v28, sel_layoutMarginsGuide);

  v30 = objc_msgSend(v29, sel_leadingAnchor);
  v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);

  *(_QWORD *)(v20 + 40) = v31;
  v32 = sub_1BC1D7DD4();
  v33 = objc_msgSend(v32, sel_trailingAnchor);

  v34 = objc_msgSend(v1, sel_contentView);
  v35 = objc_msgSend(v34, sel_layoutMarginsGuide);

  v36 = objc_msgSend(v35, sel_trailingAnchor);
  v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);

  *(_QWORD *)(v20 + 48) = v37;
  v103 = v20;
  sub_1BC2B45A4();
  v38 = v103;
  v104[0] = v103;
  v39 = v14;
  v40 = objc_msgSend(v1, sel_contentView);
  v41 = sub_1BC1D7DD4();
  objc_msgSend(v40, sel_addSubview_, v41);

  if (!*(_QWORD *)(v14 + 40))
    goto LABEL_17;
  swift_bridgeObjectRetain();
  sub_1BC2B44CC();
  v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v43)
    goto LABEL_17;
  v99 = v14;
  v44 = objc_msgSend(v1, sel_contentView);
  v45 = sub_1BC1D7FDC();
  objc_msgSend(v44, sel_addSubview_, v45);

  v46 = sub_1BC1D7FDC();
  v47 = objc_msgSend(v46, sel_topAnchor);

  v48 = sub_1BC1D7DD4();
  v49 = objc_msgSend(v48, sel_bottomAnchor);

  sub_1BC2B2648();
  v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49);

  v51 = sub_1BC1D7FDC();
  v52 = objc_msgSend(v51, sel_leadingAnchor);

  v53 = sub_1BC1D7DD4();
  v54 = objc_msgSend(v53, sel_leadingAnchor);

  v98 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v54);
  v55 = sub_1BC1D7FDC();
  v56 = objc_msgSend(v55, sel_trailingAnchor);

  v57 = sub_1BC1D7DD4();
  v58 = objc_msgSend(v57, sel_trailingAnchor);

  v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v58);
  v60 = sub_1BC1D7FDC();
  v61 = objc_msgSend(v60, sel_bottomAnchor);

  v62 = objc_msgSend(v1, sel_contentView);
  v63 = objc_msgSend(v62, sel_bottomAnchor);

  sub_1BC2B2654();
  v65 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v63, -v64);

  if (!(v38 >> 62))
  {
    v66 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    v67 = v66 + 4;
    if (!__OFADD__(v66, 4))
      goto LABEL_9;
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v97 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  v67 = v97 + 4;
  if (__OFADD__(v97, 4))
    goto LABEL_30;
LABEL_9:
  sub_1BC177590(v67, 1);
  sub_1BC2B45A4();
  v38 = (unint64_t)v50;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_31:
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  v68 = v98;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  v69 = v59;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();
  v70 = v65;
  MEMORY[0x1BCCEDCF0]();
  if (*(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC2B45C8();
  sub_1BC2B4604();
  sub_1BC2B45A4();

  v39 = v99;
LABEL_17:
  v71 = v101;
  v72 = v102;
  v73 = v100;
  if ((*(_BYTE *)(v39 + 48) & 1) != 0)
  {
    v74 = sub_1BC1D7DD4();
    v75 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v74, sel_setTextColor_, v75);

    v76 = sub_1BC1D7DD4();
    v77 = objc_msgSend(v76, sel_bottomAnchor);

    v78 = objc_msgSend(v1, sel_contentView);
    v79 = objc_msgSend(v78, sel_bottomAnchor);

    sub_1BC2B2648();
    v81 = objc_msgSend(v77, sel_constraintEqualToAnchor_constant_, v79, -v80);

    MEMORY[0x1BCCEDCF0]();
    if (*(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC2B45C8();
    sub_1BC2B4604();
    sub_1BC2B45A4();
  }
  v82 = (void *)objc_opt_self();
  sub_1BC11BF6C();
  v83 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v82, sel_activateConstraints_, v83);

  v84 = sub_1BC1D7DD4();
  swift_bridgeObjectRetain();
  v85 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v84, sel_setText_, v85);

  if (*(_QWORD *)(v39 + 40))
  {
    swift_bridgeObjectRetain();
    v86 = sub_1BC1D7FDC();
    v87 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v86, sel_setText_, v87);
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v73, v71);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v71);
    return swift_release();
  }
}

id MedicationEducationItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_super v11;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MedicationEducationItemCell();
  return objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationItemCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MedicationEducationItemCell.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MedicationEducationItemCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id MedicationEducationItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationEducationItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1D9174@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *a2 = *(_QWORD *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC1D91C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t sub_1BC1D9218()
{
  return type metadata accessor for MedicationEducationItem();
}

uint64_t type metadata accessor for MedicationEducationItem()
{
  uint64_t result;

  result = qword_1EF3FE598;
  if (!qword_1EF3FE598)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1D925C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationEducationItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationEducationItem.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationEducationItem.reuseIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationEducationItem.reuseIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationEducationItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationEducationItem.__allocating_init(primaryContent:attribution:alternateRenderingMode:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for MedicationEducationItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationEducationItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicationEducationItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicationEducationItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t type metadata accessor for InteractionFactorsDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BC1D93B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC0E8710();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92C0;
  type metadata accessor for InteractionFactorsHeaderDataSource();
  swift_allocObject();
  v1 = sub_1BC24D41C();
  v2 = sub_1BC1D94E0(&qword_1EF3FE728, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderDataSource);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC1D75CC();
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  v3 = sub_1BC2B314C();
  type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
  swift_allocObject();
  v4 = sub_1BC16EFBC(v3);
  v5 = sub_1BC1D94E0(&qword_1EF3FE730, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsLifestyleOptionsDataSource);
  *(_QWORD *)(v0 + 48) = v4;
  *(_QWORD *)(v0 + 56) = v5;
  return v0;
}

uint64_t sub_1BC1D94E0(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2F070], v4);
    atomic_store(result, a1);
  }
  return result;
}

__n128 UITextFieldWithInsets.insets.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets;
  swift_beginAccess();
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

uint64_t UITextFieldWithInsets.insets.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets;
  swift_beginAccess();
  return sub_1BC1D95C4(a1, v3);
}

uint64_t sub_1BC1D95C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC1D9608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC1D9608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE740)
  {
    type metadata accessor for UIEdgeInsets(255);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE740);
  }
}

uint64_t (*UITextFieldWithInsets.insets.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

__C::CGRect __swiftcall UITextFieldWithInsets.textRect(forBounds:)(__C::CGRect forBounds)
{
  double v1;
  double v2;
  double v3;
  double v4;
  __C::CGRect result;

  sub_1BC1D96E0((SEL *)&selRef_textRectForBounds_, forBounds.origin.x, forBounds.origin.y, forBounds.size.width, forBounds.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

__C::CGRect __swiftcall UITextFieldWithInsets.editingRect(forBounds:)(__C::CGRect forBounds)
{
  double v1;
  double v2;
  double v3;
  double v4;
  __C::CGRect result;

  sub_1BC1D96E0((SEL *)&selRef_editingRectForBounds_, forBounds.origin.x, forBounds.origin.y, forBounds.size.width, forBounds.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

void sub_1BC1D96E0(SEL *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  objc_class *ObjectType;
  double *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  objc_super v19;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = (double *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  swift_beginAccess();
  if (((_BYTE)v12[4] & 1) != 0)
  {
    v20.receiver = v5;
    v20.super_class = ObjectType;
    objc_msgSendSuper2(&v20, *a1, a2, a3, a4, a5);
  }
  else
  {
    v14 = *v12;
    v13 = v12[1];
    v19.receiver = v5;
    v19.super_class = ObjectType;
    objc_msgSendSuper2(&v19, *a1, a2, a3, a4, a5);
    UIEdgeInsetsInsetRect(v15, v16, v17, v18, v14, v13);
  }
}

void sub_1BC1D97DC(char *a1, double a2, double a3, double a4, double a5, uint64_t a6, SEL *a7)
{
  objc_class *ObjectType;
  double *v14;
  double v15;
  double v16;
  const char *v17;
  char *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  objc_super v27;
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType();
  v14 = (double *)&a1[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  swift_beginAccess();
  if (((_BYTE)v14[4] & 1) != 0)
  {
    v28.receiver = a1;
    v28.super_class = ObjectType;
    objc_msgSendSuper2(&v28, *a7, a2, a3, a4, a5);
  }
  else
  {
    v16 = *v14;
    v15 = v14[1];
    v27.receiver = a1;
    v27.super_class = ObjectType;
    v17 = *a7;
    v18 = a1;
    objc_msgSendSuper2(&v27, v17, a2, a3, a4, a5);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    UIEdgeInsetsInsetRect(v20, v22, v24, v26, v16, v15);
  }
}

id UITextFieldWithInsets.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id UITextFieldWithInsets.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v10[32] = 1;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

id UITextFieldWithInsets.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id UITextFieldWithInsets.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id UITextFieldWithInsets.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for UITextFieldWithInsets()
{
  return objc_opt_self();
}

uint64_t sub_1BC1D9BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = qword_1EDA0FA38;
  if (*(_QWORD *)(v0 + qword_1EDA0FA38))
  {
    v2 = *(_QWORD *)(v0 + qword_1EDA0FA38);
  }
  else
  {
    v3 = v0;
    sub_1BC2B3278();
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v2 = sub_1BC2B314C();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

_QWORD *sub_1BC1D9C84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = qword_1EDA0FA40;
  if (*(_QWORD *)(v0 + qword_1EDA0FA40))
  {
    v2 = *(_QWORD **)(v0 + qword_1EDA0FA40);
  }
  else
  {
    v3 = v0;
    v4 = *(id *)(v0 + qword_1EDA0FA18);
    v5 = sub_1BC1D9BB4();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    v2 = sub_1BC0F5A80(v4, v5);

    swift_release();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t InteractionSummaryDataSource.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  return InteractionSummaryDataSource.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(a1, a2, a3, a4, a5);
}

uint64_t InteractionSummaryDataSource.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v7;
  id v8;
  uint64_t v9;

  *(_QWORD *)(v5 + qword_1EDA0FA38) = 0;
  *(_QWORD *)(v5 + qword_1EDA0FA40) = 0;
  *(_QWORD *)(v5 + qword_1EDA0FA28) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + qword_1EF3FE770) = 0;
  *(_QWORD *)(v5 + qword_1EDA0FA30) = a1;
  *(_QWORD *)(v5 + qword_1EDA0FA20) = a2;
  *(_QWORD *)(v5 + qword_1EDA0FA18) = a3;
  *(_QWORD *)(v5 + qword_1EF3FE778) = a4;
  *(_QWORD *)(v5 + qword_1EDA0FA48) = a5;
  v7 = a1;
  swift_retain();
  v8 = a3;
  swift_retain();
  v9 = sub_1BC2B2750();
  swift_retain();
  sub_1BC1DA864();
  swift_release();

  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_1BC1D9EAC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t InteractionSummaryDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC104940(v0);
  swift_bridgeObjectRelease();
  v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t InteractionSummaryDataSource.__deallocating_deinit()
{
  InteractionSummaryDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1DA040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v9 = MEMORY[0x1E0C960D8];
  sub_1BC1DC188(0, &qword_1EDA0FBB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC2B3F38();
  sub_1BC1DC290(&qword_1EDA0FBB0, &qword_1EDA0FBB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v9, MEMORY[0x1E0C96108]);
  v10 = sub_1BC2B3FBC();
  result = swift_release();
  *a4 = v10;
  return result;
}

void sub_1BC1DA154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  id v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD v15[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  sub_1BC1D9C84();
  v9 = sub_1BC0F5544();
  swift_release();
  v10 = swift_bridgeObjectRetain();
  sub_1BC1CCF24(v10);
  swift_bridgeObjectRelease();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FDA8, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, MEMORY[0x1E0DEFCF8]);
  v11 = (void *)sub_1BC2B47A8();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FDF0, &qword_1EDA0FDE8, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
    a5 = (void *)sub_1BC2B47A8();
  }
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = sub_1BC0F22BC;
  v13[4] = v8;
  v15[4] = sub_1BC1DC320;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1BC1C8570;
  v15[3] = &block_descriptor_16;
  v14 = _Block_copy(v15);
  swift_release();
  objc_msgSend(v9, sel_interactionResultsForMedications_lifestyleFactors_completion_, v11, a5, v14);
  _Block_release(v14);

}

void sub_1BC1DA370(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, _QWORD))
{
  uint64_t Strong;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void (*v34)(uint64_t, _QWORD);
  id v35;
  id v36;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    if (a2)
    {
      v36 = a2;
      v9 = a2;
      sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
      sub_1BC0E1D38(0, &qword_1EF3FD030);
      if (swift_dynamicCast())
      {
        if (objc_msgSend(v35, sel_code) == (id)1003)
        {
          v10 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
          if (v10)
          {
            v11 = v10;
            v12 = objc_msgSend(v10, sel_isAppleInternalInstall);

            if (v12)
            {
              v34 = a4;

              v13 = 1;
LABEL_17:
              v20 = *(void **)(v8 + qword_1EDA0FA30);
              v21 = *(_QWORD *)(v8 + qword_1EDA0FA20);
              v22 = *(void **)(v8 + qword_1EDA0FA18);
              v23 = swift_allocObject();
              swift_weakInit();
              type metadata accessor for InteractionSummaryItem();
              v24 = (_QWORD *)swift_allocObject();
              type metadata accessor for InteractionSummaryItemCell();
              sub_1BC0E519C(&qword_1EDA0F9B0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell, (uint64_t)&protocol conformance descriptor for InteractionSummaryItemCell);
              v25 = v20;
              swift_retain();
              v26 = v22;
              v24[8] = sub_1BC2B2930();
              v24[9] = v27;
              v24[2] = v13;
              v24[3] = v20;
              v24[4] = v21;
              v24[5] = v26;
              v24[6] = sub_1BC1DC32C;
              v24[7] = v23;
              v28 = swift_retain();
              v34(v28, 0);
              swift_release_n();
              swift_release();
              return;
            }
            v32 = v35;
            a4((uint64_t)v35, 1);

            swift_release();
            v31 = v36;
            goto LABEL_20;
          }
LABEL_26:
          __break(1u);
          return;
        }

      }
      v29 = a2;
      v30 = a2;
      a4((uint64_t)a2, 1);
      swift_release();

      v31 = a2;
LABEL_20:

      return;
    }
    sub_1BC1D9BB4();
    v14 = sub_1BC2B3170();
    swift_release();
    if ((v14 & 1) != 0)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
      if (!v15)
      {
        __break(1u);
        goto LABEL_26;
      }
      v16 = v15;
      v17 = objc_msgSend(v15, sel_isAppleInternalInstall);

      if (!a1)
        goto LABEL_11;
    }
    else
    {
      v17 = 0;
      if (!a1)
      {
LABEL_11:
        v13 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    v18 = *(void **)(v8 + qword_1EDA0FA30);
    v19 = v18;
    v13 = Set<>.severities(filtering:includeMinorInteractions:)(v18, v17);

LABEL_14:
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      v34 = a4;
      if (v33)
        goto LABEL_17;
    }
    else
    {
      v34 = a4;
      if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    v13 = 0;
    goto LABEL_17;
  }
}

uint64_t sub_1BC1DA724(void *a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = *(void **)(result + qword_1EDA0FA30);
    v5 = *(_QWORD *)(result + qword_1EDA0FA20);
    v6 = *(void **)(result + qword_1EDA0FA18);
    v7 = *(_QWORD *)(result + qword_1EF3FE778);
    v8 = *(_QWORD *)(result + qword_1EDA0FA48);
    objc_allocWithZone((Class)type metadata accessor for InteractionSummaryOverviewViewController());
    v9 = v4;
    swift_retain();
    v10 = v6;
    swift_retain();
    v11 = InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(v4, v5, v10, v7, v8);
    objc_msgSend(v11, sel_setModalPresentationStyle_, 2);
    objc_msgSend(a1, sel_showAdaptively_sender_, v11, v3);
    swift_retain();
    sub_1BC2B37E8();
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1DA864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v67 = (char *)&v46 - v2;
  v62 = sub_1BC2B49F4();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v51 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1DC0A4(0, &qword_1EDA0FC10, MEMORY[0x1E0C96180]);
  v5 = v4;
  v49 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v46 - v6;
  sub_1BC1A4F80();
  v9 = v8;
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1A5034();
  v13 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  v53 = v13;
  MEMORY[0x1E0C80A78](v12);
  v47 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F173C(0, &qword_1EF3FCF88, v15, sub_1BC1A51AC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BA0]);
  v57 = v16;
  v59 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v50 = (char *)&v46 - v17;
  sub_1BC1DBF50();
  v58 = v18;
  v61 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v54 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1DC048(0);
  v21 = *(_QWORD *)(v20 - 8);
  v63 = v20;
  v64 = v21;
  MEMORY[0x1E0C80A78](v20);
  v55 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F173C(0, &qword_1EF3FE7B8, v23, sub_1BC1DC088, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
  v25 = *(_QWORD *)(v24 - 8);
  v65 = v24;
  v66 = v25;
  MEMORY[0x1E0C80A78](v24);
  v56 = (char *)&v46 - v26;
  v68 = v0;
  v69 = (id)sub_1BC2B3950();
  v27 = (void (*)(uint64_t))MEMORY[0x1E0D2EFE8];
  sub_1BC101888(0, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
  sub_1BC10173C();
  sub_1BC1018E4((unint64_t *)&qword_1EDA0FB58, (unint64_t *)&qword_1EDA0FB60, v27);
  sub_1BC2B3FC8();
  swift_release();
  v28 = sub_1BC1D9C84()[5];
  swift_retain();
  swift_release();
  v70 = v28;
  sub_1BC1D9C84();
  sub_1BC0F55B4();
  swift_release();
  swift_beginAccess();
  sub_1BC1DC0A4(0, &qword_1EDA0FC20, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  swift_release();
  sub_1BC101888(0, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
  sub_1BC0E519C(&qword_1EDA0FB08, (uint64_t (*)(uint64_t))sub_1BC1A4F80, MEMORY[0x1E0C95708]);
  sub_1BC1018E4(&qword_1EF3FCF80, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
  sub_1BC1A514C();
  v29 = v47;
  sub_1BC2B3FE0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v5);
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
  v30 = v51;
  sub_1BC2B49DC();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v69 = (id)sub_1BC2B4A0C();
  v31 = sub_1BC2B49C4();
  v49 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 56);
  v32 = (uint64_t)v67;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v49)(v67, 1, 1, v31);
  sub_1BC1A51AC();
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v33 = v50;
  v34 = v52;
  sub_1BC2B4070();
  sub_1BC101BB8(v32);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v62);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v34);
  v35 = swift_allocObject();
  swift_weakInit();
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1BC1DC110;
  *(_QWORD *)(v36 + 24) = v35;
  sub_1BC2B3E6C();
  sub_1BC1DBFFC(0);
  sub_1BC1A536C();
  sub_1BC1DC02C();
  v37 = v54;
  v38 = v57;
  sub_1BC2B40C4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v33, v38);
  v69 = 0;
  sub_1BC1DC06C();
  v39 = v55;
  v40 = v58;
  sub_1BC2B3FD4();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v40);
  v69 = (id)sub_1BC2B4A0C();
  v41 = (uint64_t)v67;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v49)(v67, 1, 1, v31);
  sub_1BC1DC088();
  v42 = v56;
  v43 = v63;
  sub_1BC2B4064();
  sub_1BC101BB8(v41);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v43);
  swift_allocObject();
  swift_weakInit();
  sub_1BC1DC120();
  v44 = v65;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v44);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC1DB044(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t i;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[12];
  int v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v38 = a2;
  sub_1BC0F1F20(0, &qword_1EDA0FBD8, (uint64_t (*)(uint64_t))sub_1BC1DBFFC, sub_1BC1DC02C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
  v6 = v5;
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v39 = &v33[-v7];
  sub_1BC0E7998(0, &qword_1EDA0FB98, (uint64_t (*)(uint64_t))sub_1BC1DC010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = &v33[-v11];
  sub_1BC1DC188(0, &qword_1EDA0FEA8, MEMORY[0x1E0C964B8]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = &v33[-v16];
  if ((a3 & 1) == 0)
    goto LABEL_22;
  if (!(a1 >> 62))
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_4;
LABEL_22:
    v42 = 0;
    sub_1BC1DC010(0);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v18 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_22;
LABEL_4:
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
  {
    v41 = 0;
    sub_1BC1DC010(0);
LABEL_23:
    sub_1BC2B3F14();
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC2B3EFC();
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    sub_1BC1DC290(&qword_1EF3FE7D0, &qword_1EDA0FEA8, MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v32 = sub_1BC2B3FBC();
    goto LABEL_24;
  }
  v35 = v6;
  v20 = *(void **)(result + qword_1EDA0FA30);
  if (!v20)
    goto LABEL_9;
  v37 = result;
  v36 = v20;
  v21 = objc_msgSend(v36, sel_firstOntologyCoding);

  if (!v21 || (swift_retain(), v34 = sub_1BC2B3944(), swift_release(), (v34 & 1) == 0))
  {
    v41 = 0;
    sub_1BC1DC010(0);
    sub_1BC2B3F14();
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC2B3EFC();
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    sub_1BC1DC290(&qword_1EF3FE7D0, &qword_1EDA0FEA8, MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v32 = sub_1BC2B3FBC();
    swift_release();

LABEL_24:
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
    return v32;
  }

  result = v37;
LABEL_9:
  v41 = MEMORY[0x1E0DEE9D8];
  if (v18 >= 1)
  {
    v22 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v18; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v24 = (id)MEMORY[0x1BCCEE950](i, a1);
      else
        v24 = *(id *)(a1 + 8 * i + 32);
      v25 = v24;
      v26 = objc_msgSend(v24, sel_firstOntologyCoding);

      if (v26)
      {
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v27 = v41;
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v22;
    v28[3] = v27;
    v28[4] = v38;
    sub_1BC1DBFFC(0);
    sub_1BC1DC02C();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v29 = v39;
    sub_1BC2B3F44();
    sub_1BC1DC218();
    v30 = v35;
    v31 = sub_1BC2B3FBC();
    (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v29, v30);
    swift_release();
    v41 = v31;
    v32 = sub_1BC2B3FBC();
    swift_release();
    swift_release();
    return v32;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1DB564(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v2 = sub_1BC2B2438();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    if (v6)
    {
      *(_QWORD *)(result + qword_1EF3FE770) = v6;
      swift_retain_n();
      swift_release();
      swift_retain();
      sub_1BC2B2744();
      swift_release();
      v12 = sub_1BC2B2A08();
      swift_release();
      sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1BC2B2BC4();
      v9 = swift_allocObject();
      v11 = xmmword_1BC2B92D0;
      *(_OWORD *)(v9 + 16) = xmmword_1BC2B92D0;
      sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = v11;
      *(_QWORD *)(v10 + 56) = type metadata accessor for InteractionSummaryItem();
      *(_QWORD *)(v10 + 64) = sub_1BC0E519C(&qword_1EDA0F998, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItem, (uint64_t)&protocol conformance descriptor for InteractionSummaryItem);
      *(_QWORD *)(v10 + 32) = v6;
      swift_retain();
      sub_1BC2B242C();
      sub_1BC2B23FC();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1BC2B2BAC();
      sub_1BC2B2C18();
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      sub_1BC2B2744();
      swift_release();
      sub_1BC2B2A08();
      swift_release();
      sub_1BC2B2C18();
      swift_release();
      *(_QWORD *)(v8 + qword_1EF3FE770) = 0;
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BC1DB81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  id v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  sub_1BC2B2CC0();
  sub_1BC2B2C90();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  sub_1BC2B2CCC();
  v9 = sub_1BC2B2D14();
  v7(v6, v0);
  return v9;
}

void InteractionSummaryDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionSummaryDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1DB95C()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionSummaryDataSource);
  return sub_1BC2B3074();
}

uint64_t InteractionSummaryDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  _QWORD v27[2];

  v7 = sub_1BC2B2438();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B4460() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      v14 = sub_1BC2B296C();
      v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v14;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v15, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (*(_QWORD *)(v3 + qword_1EDA0FA30))
  {
    v17 = 1;
  }
  else
  {
    v18 = sub_1BC2B3938();
    v19 = sub_1BC11C7E0(v18);
    swift_bridgeObjectRelease();
    if (v19)
    {
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v20 = (void *)qword_1EDA0FEF8;
  sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
  v21 = swift_allocObject();
  v22 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92D0;
  v23 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v21 + 56) = v22;
  *(_QWORD *)(v21 + 64) = v23;
  *(_QWORD *)(v21 + 32) = v17;
  v24 = v20;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27[0] = 0x74497265746F6F46;
  v27[1] = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v25 = sub_1BC2B2EDC();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v25;
  a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v26, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC2B2ED0();
}

uint64_t sub_1BC1DBCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return InteractionSummaryDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

Swift::Void __swiftcall InteractionSummaryDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2EE8();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
  type metadata accessor for InteractionSummaryItemCell();
  sub_1BC0E519C(&qword_1EDA0F9B0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell, (uint64_t)&protocol conformance descriptor for InteractionSummaryItemCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC1DBD9C()
{
  sub_1BC2B2EE8();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
  type metadata accessor for InteractionSummaryItemCell();
  sub_1BC0E519C(&qword_1EDA0F9B0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell, (uint64_t)&protocol conformance descriptor for InteractionSummaryItemCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1DBE20()
{
  return sub_1BC0E519C((unint64_t *)&unk_1EF3FE780, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryDataSource, (uint64_t)&protocol conformance descriptor for InteractionSummaryDataSource);
}

uint64_t type metadata accessor for InteractionSummaryDataSource()
{
  uint64_t result;

  result = qword_1EDA0FA50;
  if (!qword_1EDA0FA50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1DBE88()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSummaryDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSummaryDataSource.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryDataSource + v0 + 168))();
}

uint64_t dispatch thunk of InteractionSummaryDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryDataSource + *v0 + 192))();
}

uint64_t sub_1BC1DBF48()
{
  return type metadata accessor for InteractionSummaryDataSource();
}

void sub_1BC1DBF50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE7A0)
  {
    sub_1BC1DBFFC(255);
    sub_1BC1A52B0();
    sub_1BC1DC02C();
    sub_1BC0E519C(&qword_1EF3FCFC8, (uint64_t (*)(uint64_t))sub_1BC1A52B0, MEMORY[0x1E0C95850]);
    v0 = sub_1BC2B3E24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE7A0);
  }
}

void sub_1BC1DBFFC(uint64_t a1)
{
  sub_1BC1DC188(a1, &qword_1EDA0FB50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

void sub_1BC1DC010(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EDA0F9A0, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSummaryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC1DC02C()
{
  return sub_1BC0E519C(&qword_1EDA0FB48, (uint64_t (*)(uint64_t))sub_1BC1DBFFC, MEMORY[0x1E0C95D90]);
}

void sub_1BC1DC048(uint64_t a1)
{
  sub_1BC0F1F20(a1, &qword_1EF3FE7A8, (uint64_t (*)(uint64_t))sub_1BC1DBF50, sub_1BC1DC06C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
}

uint64_t sub_1BC1DC06C()
{
  return sub_1BC0E519C(&qword_1EF3FE7B0, (uint64_t (*)(uint64_t))sub_1BC1DBF50, MEMORY[0x1E0C95B78]);
}

uint64_t sub_1BC1DC088()
{
  return sub_1BC0E519C(&qword_1EF3FE7C0, (uint64_t (*)(uint64_t))sub_1BC1DC048, MEMORY[0x1E0C957E8]);
}

void sub_1BC1DC0A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEAFA0]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC1DC0EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1DC110(unint64_t a1, uint64_t a2, char a3)
{
  return sub_1BC1DB044(a1, a2, a3);
}

uint64_t sub_1BC1DC118(uint64_t *a1)
{
  return sub_1BC1DB564(a1);
}

unint64_t sub_1BC1DC120()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FE7C8;
  if (!qword_1EF3FE7C8)
  {
    sub_1BC0F173C(255, &qword_1EF3FE7B8, (uint64_t (*)(uint64_t))sub_1BC1DC048, sub_1BC1DC088, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FE7C8);
  }
  return result;
}

void sub_1BC1DC188(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC1DC010(255);
    v7 = v6;
    v8 = sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC1DC20C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC1DA040(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1BC1DC218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FBD0;
  if (!qword_1EDA0FBD0)
  {
    sub_1BC0F1F20(255, &qword_1EDA0FBD8, (uint64_t (*)(uint64_t))sub_1BC1DBFFC, sub_1BC1DC02C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96148], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FBD0);
  }
  return result;
}

void sub_1BC1DC284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1DA154(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1BC1DC290(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC1DC188(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC1DC2D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1DC2F4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC1DC320(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC1DA370(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, _QWORD))(v2 + 24));
}

uint64_t sub_1BC1DC32C(void *a1)
{
  return sub_1BC1DA724(a1);
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;
  uint64_t v10;

  result = sub_1BC2B2144();
  if (*(_QWORD *)(a9 + 16))
  {
    v10 = sub_1BC2B443C();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;
  uint64_t v10;

  result = sub_1BC2B2144();
  if (*(_QWORD *)(a9 + 16))
  {
    v10 = sub_1BC2B443C();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

id LocalizationSource.bundle.getter()
{
  id *v0;

  return *v0;
}

uint64_t LocalizationSource.table.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

HealthMedicationsUI::LocalizationSource __swiftcall LocalizationSource.init(bundle:table:)(NSBundle bundle, Swift::String table)
{
  uint64_t v2;
  HealthMedicationsUI::LocalizationSource result;

  *(NSBundle *)v2 = bundle;
  *(Swift::String *)(v2 + 8) = table;
  result.table = table;
  result.bundle = bundle;
  return result;
}

id sub_1BC1DC480()
{
  if (qword_1EDA0FF20 != -1)
    swift_once();
  qword_1EDA0FEF8 = qword_1EDA0FF10;
  qword_1EDA0FF00 = 0xD00000000000001FLL;
  qword_1EDA0FF08 = 0x80000001BC2D0920;
  return (id)qword_1EDA0FF10;
}

uint64_t static LocalizationSource.healthMedicationsUI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v2 = (void *)qword_1EDA0FEF8;
  v3 = qword_1EDA0FF00;
  v4 = qword_1EDA0FF08;
  *a1 = qword_1EDA0FEF8;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC1DC54C()
{
  uint64_t result;

  sub_1BC0F5294();
  result = sub_1BC2B4D54();
  qword_1EF3FE7D8 = result;
  unk_1EF3FE7E0 = 0xD000000000000014;
  qword_1EF3FE7E8 = 0x80000001BC2D08D0;
  return result;
}

uint64_t static LocalizationSource.healthUI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF3F8140 != -1)
    swift_once();
  v2 = (void *)qword_1EF3FE7D8;
  v3 = unk_1EF3FE7E0;
  v4 = qword_1EF3FE7E8;
  *a1 = qword_1EF3FE7D8;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC1DC600()
{
  if (qword_1EDA0FF20 != -1)
    swift_once();
  qword_1EF3FE7F0 = qword_1EDA0FF10;
  qword_1EF3FE7F8 = 0xD000000000000029;
  qword_1EF3FE800 = 0x80000001BC2D08F0;
  return (id)qword_1EDA0FF10;
}

uint64_t static LocalizationSource.healthMedicationsUI_Pregnancy.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF3F8148 != -1)
    swift_once();
  v2 = (void *)qword_1EF3FE7F0;
  v3 = qword_1EF3FE7F8;
  v4 = qword_1EF3FE800;
  *a1 = qword_1EF3FE7F0;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

uint64_t String.localized(source:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2144();
  if (*(_QWORD *)(a7 + 16))
  {
    v9 = sub_1BC2B443C();
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t LocalizationSource.localized(_:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v10;

  result = sub_1BC2B2144();
  if (*(_QWORD *)(a8 + 16))
  {
    v10 = sub_1BC2B443C();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

void sub_1BC1DC830(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7;
  id v8;
  id v9;

  v7 = a3;
  v8 = a4;
  v9 = a5;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B52B8();
  __break(1u);
}

id sub_1BC1DC938()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  objc_super v21;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_object);
  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BC102AA8();
    v5 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v7 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    sub_1BC1DCEF4();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC2B92C0;
    *(_QWORD *)(v8 + 32) = sub_1BC2B4460();
    *(_QWORD *)(v8 + 40) = v9;
    *(_QWORD *)(v8 + 48) = 1702063940;
    *(_QWORD *)(v8 + 56) = 0xE400000000000000;
    v10 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v11 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_addText_detail_baseIdentifier_, v5, v7, v11, 0xE000000000000000);
    sub_1BC1DCCCC(v4);
    if (v12)
    {
      v13 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      v14 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      swift_bridgeObjectRelease();

      v15 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BC2B92C0;
      *(_QWORD *)(v16 + 32) = sub_1BC2B4460();
      *(_QWORD *)(v16 + 40) = v17;
      *(_QWORD *)(v16 + 48) = 0x67676F4C61746144;
      *(_QWORD *)(v16 + 56) = 0xEA00000000006465;
      v18 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      v19 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, (SEL)&selRef_authorizationStatus + 4, v13, v15, v19, 0xE000000000000000);
    }
  }
  swift_unknownObjectRelease();
  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for MedicationDoseEventMetadataDetailSection();
  return objc_msgSendSuper2(&v21, sel_addSampleDetailValues);
}

uint64_t sub_1BC1DCCCC(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v2 = objc_msgSend(a1, sel_doseQuantity);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationDoseEventMetadataDetailSection_medication);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v3, sel_doubleValue);
    sub_1BC1DCEB8();
    v6 = sub_1BC2B3410();

  }
  else
  {
    objc_msgSend(v2, sel_doubleValue);
    sub_1BC1DCE74();
    v6 = sub_1BC2B43A0();
  }

  return v6;
}

id sub_1BC1DCE14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDoseEventMetadataDetailSection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDoseEventMetadataDetailSection()
{
  return objc_opt_self();
}

unint64_t sub_1BC1DCE74()
{
  unint64_t result;

  result = qword_1EF3FE838;
  if (!qword_1EF3FE838)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEB078], MEMORY[0x1E0DEB070]);
    atomic_store(result, (unint64_t *)&qword_1EF3FE838);
  }
  return result;
}

unint64_t sub_1BC1DCEB8()
{
  unint64_t result;

  result = qword_1EDA0FDA0;
  if (!qword_1EDA0FDA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FDA0);
  }
  return result;
}

void sub_1BC1DCEF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F91D8)
  {
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F91D8);
  }
}

BOOL static DisplayUnit.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PauseUsePeriod.text.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *v0;
  if ((v0[1] & 1) != 0)
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v2 = (void *)qword_1EDA0FEF8;
    sub_1BC19A388();
    v3 = swift_allocObject();
    v4 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v3 + 16) = xmmword_1BC2B92D0;
    v5 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v3 + 56) = v4;
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 32) = v1;
    v6 = v2;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v7 = (void *)qword_1EDA0FEF8;
    sub_1BC19A388();
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v8 + 16) = xmmword_1BC2B92D0;
    v10 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 32) = v1;
    v6 = v7;
    swift_bridgeObjectRetain();
  }
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_1BC2B443C();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t PauseUsePeriod.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t static PauseUsePeriod.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (*(_QWORD *)a1 == *(_QWORD *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_1BC1DD188(uint64_t a1, uint64_t a2)
{
  return (*(_QWORD *)a1 == *(_QWORD *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t DisplayUnit.text.getter()
{
  _BYTE *v0;
  id v1;
  uint64_t v2;

  if ((*v0 & 1) != 0)
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
  }
  else if (qword_1EDA0FEE8 != -1)
  {
    swift_once();
  }
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t DisplayUnit.hash(into:)()
{
  return sub_1BC2B545C();
}

void *static DisplayUnit.allCases.getter()
{
  return &unk_1E74B0020;
}

uint64_t DisplayUnit.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

unint64_t sub_1BC1DD364()
{
  unint64_t result;

  result = qword_1EF3FE840;
  if (!qword_1EF3FE840)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for PauseUsePeriod, &type metadata for PauseUsePeriod);
    atomic_store(result, (unint64_t *)&qword_1EF3FE840);
  }
  return result;
}

unint64_t sub_1BC1DD3AC()
{
  unint64_t result;

  result = qword_1EF3FE848;
  if (!qword_1EF3FE848)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DisplayUnit, &type metadata for DisplayUnit);
    atomic_store(result, (unint64_t *)&qword_1EF3FE848);
  }
  return result;
}

unint64_t sub_1BC1DD3F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FE850;
  if (!qword_1EF3FE850)
  {
    sub_1BC1DD440();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FE850);
  }
  return result;
}

void sub_1BC1DD440()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE858)
  {
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE858);
  }
}

void sub_1BC1DD494(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74B0048;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PauseUsePeriod(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PauseUsePeriod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC1DD544(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1BC1DD54C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PauseUsePeriod()
{
  return &type metadata for PauseUsePeriod;
}

uint64_t storeEnumTagSinglePayload for DisplayUnit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC1DD5B4 + 4 * byte_1BC2C13F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC1DD5E8 + 4 * asc_1BC2C13F0[v4]))();
}

uint64_t sub_1BC1DD5E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1DD5F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC1DD5F8);
  return result;
}

uint64_t sub_1BC1DD604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC1DD60CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC1DD610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC1DD618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisplayUnit()
{
  return &type metadata for DisplayUnit;
}

uint64_t sub_1BC1DD634(_BYTE *a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (*a1 == 1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    v1 = 99;
    sub_1BC125D50(0, 99, 0);
    v2 = 0;
    v3 = 1;
    result = v15;
    while (!v2)
    {
      v16 = result;
      v6 = *(_QWORD *)(result + 16);
      v5 = *(_QWORD *)(result + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BC125D50(v5 > 1, v6 + 1, 1);
        result = v16;
      }
      *(_QWORD *)(result + 16) = v6 + 1;
      v7 = result + 16 * v6;
      *(_QWORD *)(v7 + 32) = v3;
      *(_BYTE *)(v7 + 40) = 0;
      v2 = v3 == 99;
      if (v3 == 99)
      {
        v3 = 0;
      }
      else
      {
        v8 = __OFADD__(v3++, 1);
        if (v8)
        {
          __break(1u);
          goto LABEL_23;
        }
      }
      if (!--v1)
        return result;
    }
LABEL_24:
    __break(1u);
  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
    v9 = 99;
    sub_1BC125D50(0, 99, 0);
    v10 = 0;
    result = v17;
    v11 = 1;
    while (!v10)
    {
      v18 = result;
      v13 = *(_QWORD *)(result + 16);
      v12 = *(_QWORD *)(result + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BC125D50(v12 > 1, v13 + 1, 1);
        result = v18;
      }
      *(_QWORD *)(result + 16) = v13 + 1;
      v14 = result + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_BYTE *)(v14 + 40) = 1;
      v10 = v11 == 99;
      if (v11 == 99)
      {
        v11 = 0;
      }
      else
      {
        v8 = __OFADD__(v11++, 1);
        if (v8)
        {
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
      }
      if (!--v9)
        return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t OntologyShardStateObserver.__allocating_init(identifier:healthStore:settingsManager:)(void *a1, void *a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(a1, a2, a3);
  return v6;
}

uint64_t OntologyShardStateObserver.$isImported.getter()
{
  return sub_1BC1DD9BC((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported, (uint64_t)&qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], (void (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
}

uint64_t OntologyShardStateObserver.shardState.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC1DD8AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC1DD928()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t OntologyShardStateObserver.$shardState.getter()
{
  return sub_1BC1DD9BC((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState, (uint64_t)&qword_1EDA0FC28, (uint64_t)type metadata accessor for HKOntologyShardState, (void (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E7998);
}

uint64_t sub_1BC1DD9BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  swift_beginAccess();
  a4(0, a2, a3, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  return swift_endAccess();
}

uint64_t sub_1BC1DDA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  swift_beginAccess();
  a7(0, a5, a6, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  return swift_endAccess();
}

uint64_t sub_1BC1DDACC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v12;

  sub_1BC0E7998(0, &qword_1EF3FE8C0, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1BC0E7998(0, &qword_1EDA0FC28, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E0C96198]);
  sub_1BC2B3F74();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t OntologyShardStateObserver.isImported.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC1DDC78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC1DDCF4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC1DDD64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BC0E2130(0, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v13 - v9, a1, v4);
  v11(v8, (uint64_t)v10, v4);
  swift_beginAccess();
  sub_1BC0E2130(0, &qword_1EDA0FC20, v2, MEMORY[0x1E0C96198]);
  sub_1BC2B3F74();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

id OntologyShardStateObserver.identifier.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_identifier);
  swift_beginAccess();
  return *v1;
}

id *OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(void *a1, void *a2, void *a3)
{
  id *v3;
  id *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  void *v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v34[2];
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  v37 = a3;
  v34[1] = *v4;
  v7 = sub_1BC2B39E0();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x1E0C80A78](v7);
  v38 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC0E2130(0, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96198]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v34 - v13;
  sub_1BC0E7998(0, &qword_1EDA0FC28, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, v9);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v34 - v18;
  v20 = (char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState;
  v40 = 0;
  type metadata accessor for HKOntologyShardState(0);
  sub_1BC2B3F5C();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  v21 = (char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported;
  LOBYTE(v40) = 0;
  sub_1BC2B3F5C();
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23 = v37;
  v22(v21, v14, v11);
  *(id *)((char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_identifier) = a1;
  v24 = objc_allocWithZone(MEMORY[0x1E0CB69B8]);
  v25 = a1;
  v26 = objc_msgSend(v24, sel_initWithHealthStore_, a2);
  *(id *)((char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_ontologyStore) = v26;
  *(id *)((char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_settingsManager) = v23;
  swift_retain();
  if ((sub_1BC2B317C() & 1) != 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v40) = 1;
    swift_retain();
    sub_1BC2B3F98();
    sub_1BC2B39A4();
    v27 = sub_1BC2B39D4();
    v28 = sub_1BC2B48E0();
    if (os_log_type_enabled(v27, v28))
    {
      v34[0] = a2;
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v40 = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_1BC2B54F8();
      v39 = sub_1BC12540C(v31, v32, &v40);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v27, v28, "[%{public}s] Shard check override enabled. Skipping registering for shard updates", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v30, -1, -1);
      MEMORY[0x1BCCEF3A0](v29, -1, -1);

    }
    else
    {

    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v36);
  }
  else
  {
    sub_1BC1DE2AC();
    sub_1BC1DE4A0();

    swift_release();
  }
  return v4;
}

void sub_1BC1DE2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v6 = sub_1BC2B39D4();
  v7 = sub_1BC2B48E0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v16 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v18 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_1BC2B54F8();
    v17 = sub_1BC12540C(v11, v12, &v18);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v6, v7, "[%{public}s] Registering for shard updates.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    MEMORY[0x1BCCEF3A0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_ontologyStore);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v14 = (void *)sub_1BC2B4A0C();
  objc_msgSend(v13, sel_registerObserver_queue_, v1, v14);

}

void sub_1BC1DE4A0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48E0();
  if (os_log_type_enabled(v7, v8))
  {
    v20 = v3;
    v9 = swift_slowAlloc();
    v21 = v2;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_1BC2B54F8();
    v22 = sub_1BC12540C(v12, v13, aBlock);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%{public}s] Querying for ontology shard registry entries.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v11, -1, -1);
    v14 = v10;
    v2 = v21;
    MEMORY[0x1BCCEF3A0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_ontologyStore);
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v2;
  aBlock[4] = (uint64_t)sub_1BC1E016C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC1DECF4;
  aBlock[3] = (uint64_t)&block_descriptor_22_0;
  v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v15, sel_ontologyShardRegistryEntriesWithCompletion_, v18);
  _Block_release(v18);
}

uint64_t sub_1BC1DE700(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - v9;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (a2)
    {
      v12 = a2;
      sub_1BC2B39A4();
      v13 = a2;
      v14 = a2;
      v15 = sub_1BC2B39D4();
      v16 = sub_1BC2B48C8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        v33 = v31;
        *(_DWORD *)v17 = 136446466;
        v18 = sub_1BC2B54F8();
        v32 = sub_1BC12540C(v18, v19, &v33);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        v32 = (uint64_t)a2;
        v20 = a2;
        sub_1BC0F6274();
        v21 = sub_1BC2B4478();
        v32 = sub_1BC12540C(v21, v22, &v33);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC0DC000, v15, v16, "[%{public}s] Failed to get ontology shard registry entries, error: %{public}s", (uint8_t *)v17, 0x16u);
        v23 = v31;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v23, -1, -1);
        MEMORY[0x1BCCEF3A0](v17, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      sub_1BC1DEACC(MEMORY[0x1E0DEE9D8]);

    }
    else
    {
      if (a1)
      {
        v24 = a1;
      }
      else
      {
        sub_1BC2B39A4();
        v25 = sub_1BC2B39D4();
        v26 = sub_1BC2B48C8();
        if (os_log_type_enabled(v25, (os_log_type_t)v26))
        {
          v27 = (uint8_t *)swift_slowAlloc();
          v28 = swift_slowAlloc();
          v33 = v28;
          *(_DWORD *)v27 = 136446210;
          v31 = (uint64_t)(v27 + 4);
          v29 = sub_1BC2B54F8();
          v32 = sub_1BC12540C(v29, v30, &v33);
          sub_1BC2B4FD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC0DC000, v25, (os_log_type_t)v26, "[%{public}s] Failed to get ontology shard registry entries, entries were unexpectedly nil.", v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCEF3A0](v28, -1, -1);
          MEMORY[0x1BCCEF3A0](v27, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        v24 = MEMORY[0x1E0DEE9D8];
      }
      sub_1BC1DEACC(v24);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1DEACC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v3 = *v1;
  v4 = sub_1BC2B42E0();
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B4304();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v11 = (void *)sub_1BC2B4A0C();
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = v3;
  aBlock[4] = sub_1BC1E00F4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_17;
  v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC1E0100();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BC1DECF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC0E1D38(0, &qword_1EF3FE8C8);
    v4 = sub_1BC2B458C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1BC1DED80(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  int v43;
  _BOOL4 v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51[2];

  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - v8;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v11 = Strong;
    swift_beginAccess();
    v12 = (id)HKOntologyShardSchemaTypeForShardIdentifier();
    v13 = (void *)HKCurrentSchemaVersionForShardIdentifier();
    swift_retain();
    v14 = v12;
    v15 = sub_1BC1DF608(a2, v11, (uint64_t)v14, v13);
    swift_release();

    if (v15)
    {
      v49 = v14;
      v16 = objc_msgSend(v15, sel_currentVersion);
      sub_1BC2B39A4();
      swift_retain_n();
      v17 = v15;
      v18 = sub_1BC2B39D4();
      v19 = sub_1BC2B48E0();
      v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        v44 = (uint64_t)v16 > 0;
        v21 = swift_slowAlloc();
        v48 = v4;
        v22 = v21;
        v45 = swift_slowAlloc();
        v51[0] = v45;
        *(_DWORD *)v22 = 136446978;
        v46 = v16;
        v23 = sub_1BC2B54F8();
        v47 = v3;
        v50 = sub_1BC12540C(v23, v24, v51);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        v43 = v20;
        *(_WORD *)(v22 + 12) = 2082;
        v25 = sub_1BC2B4460();
        v50 = sub_1BC12540C(v25, v26, v51);
        sub_1BC2B4FD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 22) = 2082;
        objc_msgSend(v17, sel_availableState);
        v27 = (id)HKStringFromOntologyShardState();
        v28 = sub_1BC2B4460();
        v30 = v29;

        v16 = v46;
        v50 = sub_1BC12540C(v28, v30, v51);
        sub_1BC2B4FD0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 32) = 1026;
        LODWORD(v50) = v44;
        sub_1BC2B4FD0();
        _os_log_impl(&dword_1BC0DC000, v18, (os_log_type_t)v43, "[%{public}s] Current %{public}s availability state: %{public}s isImported: %{BOOL,public}d", (uint8_t *)v22, 0x26u);
        v31 = v45;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v31, -1, -1);
        MEMORY[0x1BCCEF3A0](v22, -1, -1);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v47);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      v41 = objc_msgSend(v17, sel_availableState);
      swift_getKeyPath();
      swift_getKeyPath();
      v51[0] = (uint64_t)v41;
      swift_retain();
      sub_1BC2B3F98();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v51[0]) = (uint64_t)v16 > 0;
      swift_retain();
      sub_1BC2B3F98();
      swift_release();

    }
    else
    {
      sub_1BC2B39A4();
      swift_retain_n();
      v32 = sub_1BC2B39D4();
      v33 = sub_1BC2B48C8();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v48 = v4;
        v36 = v35;
        v51[0] = v35;
        *(_DWORD *)v34 = 136446466;
        v47 = v3;
        v37 = sub_1BC2B54F8();
        v49 = v14;
        v50 = sub_1BC12540C(v37, v38, v51);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2082;
        v39 = sub_1BC2B4460();
        v50 = sub_1BC12540C(v39, v40, v51);
        sub_1BC2B4FD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v32, v33, "[%{public}s] Failed to find %{public}s shard in registry entries.", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v36, -1, -1);
        MEMORY[0x1BCCEF3A0](v34, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v47);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
  }
}

uint64_t OntologyShardStateObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState;
  v2 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC0E7998(0, &qword_1EDA0FC28, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported;
  sub_1BC0E2130(0, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  return v0;
}

uint64_t OntologyShardStateObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState;
  v2 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC0E7998(0, &qword_1EDA0FC28, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported;
  sub_1BC0E2130(0, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t OntologyShardStateObserver.ontologyStore(_:didStage:)(uint64_t a1, void *a2)
{
  return sub_1BC1DF888(a2);
}

uint64_t OntologyShardStateObserver.ontologyStore(_:didImport:)(uint64_t a1, void *a2)
{
  return sub_1BC1DFAC0(a2);
}

uint64_t sub_1BC1DF568(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(id))
{
  id v7;
  id v8;

  v7 = a3;
  v8 = a4;
  swift_retain();
  a5(v8);

  return swift_release();
}

void *sub_1BC1DF608(unint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    v5 = sub_1BC2B52D0();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      swift_beginAccess();
      v6 = 4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1BCCEE950](v6 - 4, a1);
        else
          v7 = *(id *)(a1 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        v10 = v5;
        v11 = objc_msgSend(v7, sel_identifier);
        v12 = sub_1BC2B4460();
        v14 = v13;
        if (v12 == sub_1BC2B4460() && v14 == v15)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          v17 = sub_1BC2B53CC();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
            goto LABEL_6;
        }
        v18 = objc_msgSend(v8, sel_schemaType);
        v19 = sub_1BC2B4460();
        v21 = v20;
        if (v19 == sub_1BC2B4460() && v21 == v22)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          v23 = sub_1BC2B53CC();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v23 & 1) == 0)
            goto LABEL_6;
        }
        if (objc_msgSend(v8, sel_schemaVersion) == a4)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
LABEL_6:

        ++v6;
        v5 = v10;
      }
      while (v9 != v10);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC1DF888(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v6 = a1;
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48E0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v20 = v3;
    v10 = v9;
    v11 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    *(_DWORD *)v10 = 136446467;
    v12 = sub_1BC2B54F8();
    v21 = sub_1BC12540C(v12, v13, &v22);
    v18 = v2;
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2117;
    v21 = (uint64_t)v6;
    v14 = v6;
    sub_1BC2B4FD0();
    *v11 = v6;

    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%{public}s] Did stage registry entry: %{sensitive}@", (uint8_t *)v10, 0x16u);
    sub_1BC0F66B0();
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v11, -1, -1);
    v15 = v19;
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v15, -1, -1);
    MEMORY[0x1BCCEF3A0](v10, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v18);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1BC1DFAC0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v6 = a1;
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48E0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v23 = v3;
    v10 = v9;
    v20 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v25 = v21;
    *(_DWORD *)v10 = 136446467;
    v22 = v2;
    v11 = sub_1BC2B54F8();
    v24 = sub_1BC12540C(v11, v12, &v25);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2117;
    v24 = (uint64_t)v6;
    v13 = v6;
    sub_1BC2B4FD0();
    v14 = v20;
    *v20 = v6;

    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%{public}s] Did import registry entry: %{sensitive}@", (uint8_t *)v10, 0x16u);
    sub_1BC0F66B0();
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v14, -1, -1);
    v15 = v21;
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v15, -1, -1);
    MEMORY[0x1BCCEF3A0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v16 + 32) = v6;
  v25 = v16;
  sub_1BC2B45A4();
  v17 = v25;
  v18 = v6;
  sub_1BC1DEACC(v17);
  return swift_bridgeObjectRelease();
}

void _s19HealthMedicationsUI26OntologyShardStateObserverC13ontologyStore12didReconnectySo010HKOntologyI0C_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[3];
  uint64_t v14;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v6 = sub_1BC2B39D4();
  v7 = sub_1BC2B48E0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v13[1] = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_1BC2B54F8();
    v13[2] = sub_1BC12540C(v11, v12, &v14);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v6, v7, "[%{public}s] did reconnect to healthd", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    MEMORY[0x1BCCEF3A0](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC1DE4A0();
}

uint64_t sub_1BC1DFF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC1DDA40(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState, (uint64_t)&qword_1EDA0FC28, (uint64_t)type metadata accessor for HKOntologyShardState, (void (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E7998);
}

uint64_t sub_1BC1DFF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC1DDA40(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported, (uint64_t)&qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], (void (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
}

uint64_t sub_1BC1DFF74()
{
  return type metadata accessor for OntologyShardStateObserver();
}

uint64_t type metadata accessor for OntologyShardStateObserver()
{
  uint64_t result;

  result = qword_1EDA0F9D8;
  if (!qword_1EDA0F9D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC1DFFB8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC0E7998(319, &qword_1EDA0FC28, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
  {
    sub_1BC0E2130(319, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96198]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for OntologyShardStateObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OntologyShardStateObserver.__allocating_init(identifier:healthStore:settingsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1BC1E00A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1E00C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC1E00F4()
{
  uint64_t v0;

  sub_1BC1DED80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1BC1E0100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FFC0;
  if (!qword_1EDA0FFC0)
  {
    v1 = sub_1BC2B42E0();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FFC0);
  }
  return result;
}

uint64_t sub_1BC1E0148()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1E016C(uint64_t a1, void *a2)
{
  return sub_1BC1DE700(a1, a2);
}

uint64_t type metadata accessor for NicknameAndNotesDataSource()
{
  uint64_t result;

  result = qword_1EF3FE8E8;
  if (!qword_1EF3FE8E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1E01B8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC1E0214(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v17[2];

  v5 = sub_1BC2B2438();
  v14 = *(_QWORD *)(v5 - 8);
  v15 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + qword_1EF3FE8D8) = *MEMORY[0x1E0D2C270];
  *(_QWORD *)(v2 + qword_1EF3FE8E0) = *MEMORY[0x1E0D2C278];
  *(_QWORD *)(v2 + qword_1EF3FE8D0) = a1;
  swift_retain();
  v16 = a2;
  if (sub_1BC1E15EC(a2))
  {
    v13[1] = v2;
    v13[2] = a1;
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC2B2BC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v8 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2BAC();
    v9 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2BAC();
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, "MutableArray<");
    HIWORD(v17[1]) = -4864;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v15);
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    v10 = sub_1BC2B2C00();
    swift_retain();
    sub_1BC1E07AC();
    sub_1BC2B2C24();
  }
  else
  {
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC2B2BC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v11 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2BAC();
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, "MutableArray<");
    HIWORD(v17[1]) = -4864;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v15);
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    v10 = sub_1BC2B2C00();
    swift_retain();
    sub_1BC1E07AC();
    sub_1BC2B2C24();
  }
  sub_1BC1E1A50(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC1E1850);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v10;
}

uint64_t sub_1BC1E07AC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t (**v43)();
  uint64_t v44;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  int *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v57 = (int *)type metadata accessor for TextViewItem();
  MEMORY[0x1E0C80A78](v57);
  v58 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (int *)type metadata accessor for FieldItem();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = *(_QWORD *)(v0 + qword_1EF3FE8D0);
  sub_1BC2B3ED8();
  v5 = v60;
  if (v60 == 1 || (v6 = v59, swift_bridgeObjectRetain(), sub_1BC1E1930(v6, v5), !v5))
  {
    swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 0xE000000000000000;
  }
  v52 = v6;
  v53 = v5;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v7 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v8 = sub_1BC2B2144();
  v50 = v9;
  v51 = v8;
  swift_bridgeObjectRelease();

  v49 = *(_QWORD *)(v0 + qword_1EF3FE8D8);
  v10 = swift_allocObject();
  v55 = v0;
  swift_weakInit();
  swift_retain();
  sub_1BC2B242C();
  v11 = &v4[v2[5]];
  v12 = &v4[v2[6]];
  v13 = &v4[v2[10]];
  v14 = &v4[v2[14]];
  v15 = (uint64_t *)&v4[v2[15]];
  type metadata accessor for FieldCell();
  sub_1BC0E519C(&qword_1EF4020C0, (uint64_t (*)(uint64_t))type metadata accessor for FieldCell, (uint64_t)&unk_1BC2C6D84);
  v16 = sub_1BC2B2930();
  v18 = v17;
  swift_release();
  *v15 = v16;
  v15[1] = v18;
  v19 = v53;
  *(_QWORD *)v11 = v52;
  *((_QWORD *)v11 + 1) = v19;
  v20 = v50;
  *(_QWORD *)v12 = v51;
  *((_QWORD *)v12 + 1) = v20;
  *(_QWORD *)&v4[v2[7]] = 0x4046000000000000;
  *(_QWORD *)v13 = v49;
  v13[8] = 0;
  v4[v2[9]] = 0;
  v4[v2[8]] = 1;
  *(_QWORD *)&v4[v2[12]] = 0;
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v21 = (uint64_t (**)())&v4[v2[13]];
  *v21 = sub_1BC1E18A0;
  v21[1] = (uint64_t (*)())v10;
  v4[v2[11]] = 0;
  sub_1BC2B3ED8();
  v22 = v60;
  v56 = v4;
  if (v60 == 1)
  {
    v54 = 0;
    v23 = 0xE000000000000000;
  }
  else
  {
    v25 = v61;
    v24 = v62;
    v26 = v59;
    swift_bridgeObjectRetain();
    sub_1BC1E1930(v26, v22);
    if (v24)
      v27 = v25;
    else
      v27 = 0;
    v54 = v27;
    v23 = 0xE000000000000000;
    if (v24)
      v23 = v24;
  }
  v53 = v23;
  v28 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v29 = sub_1BC2B2144();
  v51 = v30;
  v52 = v29;
  swift_bridgeObjectRelease();

  v50 = *(_QWORD *)(v55 + qword_1EF3FE8E0);
  v31 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v32 = (uint64_t)v58;
  sub_1BC2B242C();
  v33 = v57;
  v34 = (_QWORD *)(v32 + v57[5]);
  v35 = (uint64_t *)(v32 + v57[6]);
  v36 = v32 + v57[7];
  v37 = (uint64_t *)(v32 + v57[11]);
  type metadata accessor for TextItemCell();
  sub_1BC0E519C(&qword_1EF3FDA90, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&unk_1BC2C0300);
  v38 = sub_1BC2B2930();
  v40 = v39;
  swift_release();
  *v37 = v38;
  v37[1] = v40;
  v41 = v53;
  *v34 = v54;
  v34[1] = v41;
  *(_QWORD *)(v32 + v33[8]) = 0x4064800000000000;
  v42 = v51;
  *v35 = v52;
  v35[1] = v42;
  *(_QWORD *)v36 = v50;
  *(_BYTE *)(v36 + 8) = 0;
  *(_BYTE *)(v32 + v33[9]) = 1;
  v43 = (uint64_t (**)())(v32 + v33[10]);
  *v43 = sub_1BC1E18A8;
  v43[1] = (uint64_t (*)())v31;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(v44 + 56) = v2;
  *(_QWORD *)(v44 + 64) = sub_1BC0E519C(&qword_1EF3FCB80, (uint64_t (*)(uint64_t))type metadata accessor for FieldItem, (uint64_t)&protocol conformance descriptor for FieldItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v44 + 32));
  v46 = (uint64_t)v56;
  sub_1BC1E18B0((uint64_t)v56, (uint64_t)boxed_opaque_existential_1);
  *(_QWORD *)(v44 + 96) = v33;
  *(_QWORD *)(v44 + 104) = sub_1BC0E519C(&qword_1EF3FE978, (uint64_t (*)(uint64_t))type metadata accessor for TextViewItem, (uint64_t)&protocol conformance descriptor for TextViewItem);
  v47 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v44 + 72));
  sub_1BC0F1B94(v32, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for TextViewItem);
  sub_1BC1E18F4(v46);
  return v44;
}

uint64_t sub_1BC1E0D24()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3ED8();
    if (v3 == 1)
    {
      sub_1BC2B3ED8();
      if (v2 != 1)
      {
        swift_bridgeObjectRetain();
        sub_1BC1E1930(v1, v2);
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC2B3EC0();
    swift_release();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BC1E0E60()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3ED8();
    if (v3 == 1)
    {
      sub_1BC2B3ED8();
      if (v2 != 1)
      {
        swift_bridgeObjectRetain();
        sub_1BC1E1930(v1, v2);
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC2B3EC0();
    swift_release();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

unint64_t sub_1BC1E0FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  unint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v9 = sub_1BC2B2BC4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B4460() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    v16 = sub_1BC2B2C0C();
    result = sub_1BC2B25F4();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(v16 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * result, v9);
      swift_bridgeObjectRelease();
      sub_1BC2B2BB8();
      v19 = v18;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (v19)
      {
        v20 = sub_1BC2B2D68();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
        v21 = sub_1BC2B2D80();
        v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
        a3[3] = v21;
        a3[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v22, MEMORY[0x1E0D2B310]);
        __swift_allocate_boxed_opaque_existential_1(a3);
        return sub_1BC2B2D74();
      }
      goto LABEL_12;
    }
    __break(1u);
    return result;
  }
  v15 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_8;
LABEL_12:
  v23 = sub_1BC2B296C();
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
  a3[3] = v23;
  a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v24, MEMORY[0x1E0D2AB20]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC2B2960();
}

uint64_t sub_1BC1E1200(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BC2B2A5C();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(result + 16) > a1)
  {
    v7 = result + 16 * a1;
    v9 = *(_QWORD *)(v7 + 32);
    v8 = *(_QWORD *)(v7 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v9 == 0x656C756465686373 && v8 == 0xEF6E6F6974636553)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        sub_1BC2B2C9C();
        sub_1BC2B2CD8();
LABEL_11:
        v12 = sub_1BC267620();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return v12;
      }
    }
    sub_1BC2B2C9C();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1BC1E1388()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1E13B4()
{
  return swift_release();
}

uint64_t sub_1BC1E13C4()
{
  sub_1BC2B2C60();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1E1400()
{
  return type metadata accessor for NicknameAndNotesDataSource();
}

uint64_t sub_1BC1E1408()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  type metadata accessor for FieldCell();
  sub_1BC0E519C(&qword_1EF4020C0, (uint64_t (*)(uint64_t))type metadata accessor for FieldCell, (uint64_t)&unk_1BC2C6D84);
  sub_1BC2B497C();
  type metadata accessor for TextItemCell();
  sub_1BC0E519C(&qword_1EF3FDA90, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&unk_1BC2C0300);
  sub_1BC2B497C();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B3038();
  sub_1BC2B497C();
  type metadata accessor for ScheduleIntervalCell();
  sub_1BC0E519C(&qword_1EF3F9CA8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalCell, (uint64_t)&unk_1BC2C2C50);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1E1514()
{
  return swift_retain();
}

uint64_t sub_1BC1E1524(unint64_t a1)
{
  return sub_1BC1E1200(a1);
}

unint64_t sub_1BC1E1544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC1E0FA0(a1, a2, a3);
}

uint64_t sub_1BC1E1564()
{
  sub_1BC0E519C(&qword_1EF3FE970, (uint64_t (*)(uint64_t))type metadata accessor for NicknameAndNotesDataSource, (uint64_t)&unk_1BC2C1700);
  return sub_1BC2B3074();
}

uint64_t sub_1BC1E15C0()
{
  return sub_1BC0E519C(qword_1EF3FE938, (uint64_t (*)(uint64_t))type metadata accessor for NicknameAndNotesDataSource, (uint64_t)&unk_1BC2C16A8);
}

uint64_t sub_1BC1E15EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  id v19;
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;
  _OWORD v23[2];
  __int128 v24;
  id v25;

  v2 = sub_1BC2B2BC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0F1B94((uint64_t)a1, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC1E1964);
  if (!*((_QWORD *)&v22 + 1))
    return 0;
  v23[0] = v21[0];
  v23[1] = v21[1];
  v24 = v22;
  sub_1BC1E19B8((uint64_t)&v24, (uint64_t)&v25);
  v6 = (void *)*((_QWORD *)&v24 + 1);
  sub_1BC2B3278();
  sub_1BC1E1A50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC1E1A88);
  sub_1BC1E1AB4(&v25);
  v7 = v6;
  sub_1BC2B326C();
  v8 = (void *)sub_1BC2B3248();
  swift_release();
  sub_1BC2B3818();
  swift_allocObject();
  v9 = sub_1BC2B37F4();
  type metadata accessor for ScheduleDataSource(0);
  v10 = swift_allocObject();
  sub_1BC28E03C((uint64_t)v23, v8, 0, v9, 1, v10);
  sub_1BC0E519C(&qword_1EF3FE988, type metadata accessor for ScheduleDataSource, MEMORY[0x1E0D2F070]);
  v11 = sub_1BC2B2A44();
  swift_release();
  v20 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v19 = v7;
    v13 = v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v15(v5, v13, v2);
      v16 = sub_1BC2B2BA0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1BC130FBC(v16);
      v13 += v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    sub_1BC1E1ADC(&v25);

    v17 = v20;
  }
  else
  {
    sub_1BC1E1ADC(&v25);

    v17 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1BC1E1850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  if (a6)
  {

  }
}

uint64_t sub_1BC1E187C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1E18A0()
{
  return sub_1BC1E0D24();
}

uint64_t sub_1BC1E18A8()
{
  return sub_1BC1E0E60();
}

uint64_t sub_1BC1E18B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FieldItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1E18F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FieldItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC1E1930(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BC1E1964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FE980)
  {
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FE980);
  }
}

uint64_t sub_1BC1E19B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, &qword_1EF3F9730, (uint64_t (*)(uint64_t))sub_1BC1E1A14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC1E1A14()
{
  unint64_t result;

  result = qword_1EF400130;
  if (!qword_1EF400130)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF400130);
  }
  return result;
}

_QWORD *sub_1BC1E1A50(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

id sub_1BC1E1A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v6;
  id result;

  if (a6)
  {
    v6 = a5;
    return a6;
  }
  return result;
}

id *sub_1BC1E1AB4(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_1BC1E1ADC(id *a1)
{

  return a1;
}

void __swiftcall MedicationIconItem.init(image:)(HealthMedicationsUI::MedicationIconItem *__return_ptr retstr, UIImage image)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v4 = sub_1BC2B2438();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B242C();
  v8 = sub_1BC2B23FC();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for MedicationIconCell();
  sub_1BC1E1BE0();
  v11 = sub_1BC2B2930();
  retstr->uniqueIdentifier._countAndFlagsBits = v8;
  retstr->uniqueIdentifier._object = v10;
  retstr->image = image;
  retstr->reuseIdentifier._countAndFlagsBits = v11;
  retstr->reuseIdentifier._object = v12;
}

uint64_t type metadata accessor for MedicationIconCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC1E1BE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8E78;
  if (!qword_1EF3F8E78)
  {
    v1 = type metadata accessor for MedicationIconCell();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C189C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E78);
  }
  return result;
}

uint64_t MedicationIconItem.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id MedicationIconItem.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t MedicationIconItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicationIconItem.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC2B53CC();
}

void MedicationIconItem.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1BC2B4D90();

}

uint64_t MedicationIconItem.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B4D90();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1E1D80()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B4D90();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1E1DDC()
{
  sub_1BC2B44D8();
  return sub_1BC2B4D90();
}

uint64_t sub_1BC1E1E0C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B4D90();
  return sub_1BC2B548C();
}

unint64_t sub_1BC1E1E68()
{
  unint64_t result;

  result = qword_1EF3FE990;
  if (!qword_1EF3FE990)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationIconItem, &type metadata for MedicationIconItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FE990);
  }
  return result;
}

uint64_t destroy for MedicationIconItem(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MedicationIconItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MedicationIconItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationIconItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationIconItem()
{
  return &type metadata for MedicationIconItem;
}

id sub_1BC1E20C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell____lazy_storage___imageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell____lazy_storage___imageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setContentMode_, 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC1E21E8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC1E20C4();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2BDB30;
  v5 = sub_1BC1E20C4();
  v6 = objc_msgSend(v5, sel_heightAnchor);

  v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 80.0);
  *(_QWORD *)(v4 + 32) = v7;
  v8 = sub_1BC1E20C4();
  v9 = objc_msgSend(v8, sel_widthAnchor);

  v10 = objc_msgSend(v9, sel_constraintEqualToConstant_, 80.0);
  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v0, sel_contentView);
  v12 = objc_msgSend(v11, sel_heightAnchor);

  v13 = objc_msgSend(v12, sel_constraintEqualToConstant_, 100.0);
  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(v0, sel_contentView);
  v15 = objc_msgSend(v14, sel_bottomAnchor);

  v16 = sub_1BC1E20C4();
  v17 = objc_msgSend(v16, sel_bottomAnchor);

  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(_QWORD *)(v4 + 56) = v18;
  v19 = objc_msgSend(v0, sel_contentView);
  v20 = objc_msgSend(v19, sel_centerXAnchor);

  v21 = sub_1BC1E20C4();
  v22 = objc_msgSend(v21, sel_centerXAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v4 + 64) = v23;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v24 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v24);

}

uint64_t sub_1BC1E24D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  void *v7;
  _BYTE v8[24];
  uint64_t v9;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  v4 = sub_1BC1E20C4();
  sub_1BC0E5774(v3, (uint64_t)v8);
  if (!v9)
  {
    sub_1BC0F7954((uint64_t)v8);
    goto LABEL_5;
  }
  sub_1BC0E1B94();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v5 = 0;
    goto LABEL_6;
  }
  v5 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
  objc_msgSend(v4, sel_setImage_, v5);

  return sub_1BC0F7954(a1);
}

void (*sub_1BC1E25C0(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell_item;
  v3[10] = v1;
  v3[11] = v4;
  swift_beginAccess();
  return sub_1BC1E2618;
}

void sub_1BC1E2618(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[10] + v3[11];
    v5 = sub_1BC1E20C4();
    sub_1BC0E5774(v4, (uint64_t)v3);
    if (v3[3])
    {
      sub_1BC0E1B94();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v6 = (void *)v3[7];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_7:
        objc_msgSend(v5, sel_setImage_, v6);

        goto LABEL_8;
      }
    }
    else
    {
      sub_1BC0F7954((uint64_t)v3);
    }
    v6 = 0;
    goto LABEL_7;
  }
LABEL_8:
  free(v3);
}

id sub_1BC1E26E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationIconCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1E2748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

void (*sub_1BC1E279C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC1E25C0(v2);
  return sub_1BC0F78F0;
}

uint64_t sub_1BC1E27E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + qword_1EF3FE9D0);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1E2848()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + qword_1EF3FE9D0);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC1E289C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + qword_1EF3FE9D0);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC1E28F8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FrequencyPickerDataSource.__allocating_init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  swift_allocObject();
  return FrequencyPickerDataSource.init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(a1, a2, a3, a4);
}

uint64_t FrequencyPickerDataSource.init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v15 = *a4;
  v8 = *((_QWORD *)a4 + 2);
  v9 = *((_QWORD *)a4 + 3);
  v10 = (uint64_t *)(v4 + qword_1EF3FE9D0);
  v16 = sub_1BC2B4460();
  v17 = v11;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_retain();
  swift_bridgeObjectRelease();
  *v10 = v16;
  v10[1] = v17;
  *(_QWORD *)(v4 + qword_1EF3FE9D8) = 0;
  *(_QWORD *)(v4 + qword_1EF3FE9E0) = a1;
  *(_QWORD *)(v4 + qword_1EF3FE9E8) = a2;
  *(_QWORD *)(v4 + qword_1EF3FE9F0) = a3;
  v12 = v4 + qword_1EF3FE9F8;
  *(_OWORD *)v12 = v15;
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v13 = sub_1BC2B2F18();
  swift_retain();
  sub_1BC1E3B5C();
  sub_1BC2B2C24();
  swift_bridgeObjectRelease();
  sub_1BC1E3E44();
  sub_1BC1E2B38();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_1BC1E2B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v13[2];

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - v3;
  sub_1BC1E4944();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = *(id *)(v0 + qword_1EF3FE9E0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  swift_retain();
  v13[0] = (id)sub_1BC2B4A0C();
  v10 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1BC1E49F8();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FC458, (uint64_t (*)(uint64_t))sub_1BC1E49F8, MEMORY[0x1E0C95FB8]);
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC101BB8((uint64_t)v4);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FEAA8, (uint64_t (*)(uint64_t))sub_1BC1E4944, MEMORY[0x1E0C95CB8]);
  v11 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)(v1 + qword_1EF3FE9D8) = v11;
  return swift_release();
}

uint64_t sub_1BC1E2D54()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC1E3E44();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1E2DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(uint64_t *, _QWORD);
  id v15;
  void (*v16)(uint64_t *, _QWORD);
  double *v17;
  void (*v18)(uint64_t *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  v37 = a1;
  v30 = *v1;
  v36 = sub_1BC2B2FA8();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - v5;
  v7 = sub_1BC2B2C6C();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3CD4();
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3ED8();
  sub_1BC1527F0(v40);
  sub_1BC2B3CC8();
  v13 = objc_msgSend((id)objc_opt_self(), sel_linkColor);
  v14 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C20();
  sub_1BC2B3BB4();
  v14(&v40, 0);
  sub_1BC2B3C98();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v15 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3B6C();
  v16 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C38();
  *v17 = *v17 + 4.0;
  v16(&v40, 0);
  v18 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3C38();
  *(double *)(v19 + 16) = *(double *)(v19 + 16) + 4.0;
  v18(&v40, 0);
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_1BC2B51BC();
  v20 = sub_1BC2B54F8();
  v22 = v21;
  swift_bridgeObjectRelease();
  v40 = v20;
  v41 = v22;
  sub_1BC2B44FC();
  v30 = v40;
  v42 = v10;
  v43 = MEMORY[0x1E0DC2398];
  v23 = __swift_allocate_boxed_opaque_existential_1(&v40);
  v24 = v33;
  (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 16))(v23, v12, v10);
  swift_allocObject();
  swift_weakInit();
  *v9 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v31 + 104))(v9, *MEMORY[0x1E0D2B168], v32);
  swift_retain();
  sub_1BC2B3B24();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  sub_1BC2B4D24();
  sub_1BC2B3B18();
  v25 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 0, 1, v25);
  v26 = (uint64_t *)((char *)v2 + qword_1EF3FE9D0);
  swift_beginAccess();
  v27 = v26[1];
  v38 = *v26;
  v39 = v27;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v35, *MEMORY[0x1E0D2B8C8], v36);
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return swift_release();
}

void sub_1BC1E326C(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9[4];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = *(_QWORD *)(Strong + qword_1EF3FE9E0);
    v4 = *(_QWORD *)(Strong + qword_1EF3FE9F8 + 8);
    v5 = *(_QWORD *)(Strong + qword_1EF3FE9F8 + 16);
    v6 = *(_QWORD *)(Strong + qword_1EF3FE9F8 + 24);
    v9[0] = *(_QWORD *)(Strong + qword_1EF3FE9F8);
    v9[1] = v4;
    v9[2] = v5;
    v9[3] = v6;
    objc_allocWithZone((Class)type metadata accessor for ScheduleTypePickerViewController(0));
    swift_retain();
    sub_1BC1BAC0C(v9[0], v4);
    v7 = sub_1BC1BB188(v3, v9);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v7);
    objc_msgSend(v8, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v8, sel_setModalInPresentation_, 1);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v8, 1, 0);
    swift_release();

  }
}

uint64_t sub_1BC1E33A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[2];

  v2 = sub_1BC2B2438();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - v4;
  v11[1] = sub_1BC243F64();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v6 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3B24();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  sub_1BC2B4D24();
  sub_1BC2B3B18();
  v7 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1BC2B242C();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2A8F0];
  sub_1BC1E48E0(0, &qword_1EF3FEA90, (uint64_t (*)(void))sub_1BC1E45D4, (uint64_t)&type metadata for FrequencyInterval, MEMORY[0x1E0D2A8F0]);
  a1[3] = v9;
  a1[4] = sub_1BC1E4618(&qword_1EF3FEA98, &qword_1EF3FEA90, v8, MEMORY[0x1E0D2A8F8]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1BC1E45D4();
  return sub_1BC2B2900();
}

uint64_t sub_1BC1E3668@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3ED8();
    return swift_release();
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_1BC1E36E8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3EC0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1E3764@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v11;

  v2 = sub_1BC2B2438();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - v4;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v6 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3B24();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  sub_1BC2B4D24();
  sub_1BC2B3B18();
  v7 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1BC2B242C();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2A8F0];
  sub_1BC1E48E0(0, &qword_1EF3FEA80, (uint64_t (*)(void))sub_1BC1E466C, (uint64_t)&type metadata for DisplayUnit, MEMORY[0x1E0D2A8F0]);
  a1[3] = v9;
  a1[4] = sub_1BC1E487C(&qword_1EF3FEA88, &qword_1EF3FEA80, v8, MEMORY[0x1E0D2A8F8]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1BC1E466C();
  return sub_1BC2B2900();
}

uint64_t sub_1BC1E3A14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3ED8();
    return swift_release();
  }
  else
  {
    *a1 = 2;
  }
  return result;
}

uint64_t sub_1BC1E3A90(uint64_t a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;

  v2 = *a2;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3EC0();
    result = swift_release();
  }
  if (v2 != 2)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      sub_1BC2B3EC0();
      return swift_release();
    }
  }
  return result;
}

_QWORD *sub_1BC1E3B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v0 = sub_1BC2B2D98();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1E2DA8((uint64_t)v3);
  v4 = sub_1BC0FA038(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v29 = v4;
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
  {
    v4 = sub_1BC0FA038((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v29 = v4;
  }
  v27 = v0;
  v28 = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(boxed_opaque_existential_1, v3, v0);
  v4[2] = v6 + 1;
  sub_1BC0F2730(&v26, (uint64_t)&v4[5 * v6 + 4]);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8 = v29;
  sub_1BC2B3ED8();
  if ((_QWORD)v26 == 1)
  {
    sub_1BC1E33A8((uint64_t *)&v26);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v29 = sub_1BC0FA038((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v11 = v27;
    v12 = v28;
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v26, v27);
    MEMORY[0x1E0C80A78](v13);
    v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v15);
    sub_1BC26E1B4(v10, (uint64_t)v15, (uint64_t *)&v29, v11, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v26);
    v8 = v29;
  }
  sub_1BC2B3ED8();
  if ((unint64_t)(v26 - 7) <= 1)
  {
    sub_1BC1E3764((uint64_t *)&v26);
    v29 = v8;
    v18 = v8[2];
    v17 = v8[3];
    if (v18 >= v17 >> 1)
      v29 = sub_1BC0FA038((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
    v19 = v27;
    v20 = v28;
    v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v26, v27);
    MEMORY[0x1E0C80A78](v21);
    v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v24 + 16))(v23);
    sub_1BC26E1B4(v18, (uint64_t)v23, (uint64_t *)&v29, v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v26);
    return v29;
  }
  return v8;
}

uint64_t sub_1BC1E3E44()
{
  uint64_t result;
  uint64_t v1;
  char v2;

  sub_1BC1E3B5C();
  sub_1BC2B2C24();
  swift_bridgeObjectRelease();
  result = sub_1BC2B3ED8();
  if (v1 == 1)
  {
    result = sub_1BC2B3ED8();
    if (v2 == 1)
      return sub_1BC2B3EC0();
  }
  return result;
}

BOOL sub_1BC1E3EE4(uint64_t a1)
{
  return a1 == 1;
}

BOOL sub_1BC1E3EF0(uint64_t a1)
{
  return (unint64_t)(a1 - 7) < 2;
}

void FrequencyPickerDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
  sub_1BC1E3F48();
}

void FrequencyPickerDataSource.init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
  sub_1BC1E3F48();
}

void FrequencyPickerDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
  sub_1BC1E3F48();
}

void sub_1BC1E3F48()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FrequencyPickerDataSource.init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
  sub_1BC1E3F48();
}

uint64_t sub_1BC1E3F88()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF3FE9F8), *(_QWORD *)(v0 + qword_1EF3FE9F8 + 8));
  return swift_release();
}

uint64_t FrequencyPickerDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2F3C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF3FE9F8), *(_QWORD *)(v0 + qword_1EF3FE9F8 + 8));
  swift_release();
  return v0;
}

uint64_t FrequencyPickerDataSource.__deallocating_deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2F3C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF3FE9F8), *(_QWORD *)(v0 + qword_1EF3FE9F8 + 8));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FrequencyPickerDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (sub_1BC2B4460() == a1 && v5 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      v8 = sub_1BC2B296C();
      v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v8;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v9, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v11 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v12 = sub_1BC2B2144();
  v14 = v13;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  v15 = sub_1BC2B2930();
  v17 = v16;
  sub_1BC2B2930();
  swift_bridgeObjectRelease();
  a3[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  a3[4] = sub_1BC184A54();
  result = swift_allocObject();
  *a3 = result;
  *(_QWORD *)(result + 16) = v12;
  *(_QWORD *)(result + 24) = v14;
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = nullsub_1;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = v15;
  *(_QWORD *)(result + 64) = v17;
  return result;
}

uint64_t sub_1BC1E4324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return FrequencyPickerDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

Swift::Void __swiftcall FrequencyPickerDataSource.registerCells(for:)(UICollectionView *a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;

  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  sub_1BC2B4994();
  sub_1BC2B3038();
  sub_1BC2B497C();
  v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2B3D8];
  sub_1BC1E48E0(0, &qword_1EF3FEA00, (uint64_t (*)(void))sub_1BC1E45D4, (uint64_t)&type metadata for FrequencyInterval, MEMORY[0x1E0D2B3D8]);
  v2 = MEMORY[0x1E0D2B3E0];
  sub_1BC1E4618(&qword_1EF3FEA10, &qword_1EF3FEA00, v1, MEMORY[0x1E0D2B3E0]);
  sub_1BC2B497C();
  sub_1BC1E48E0(0, &qword_1EF3FEA18, (uint64_t (*)(void))sub_1BC1E466C, (uint64_t)&type metadata for DisplayUnit, v1);
  sub_1BC1E487C(&qword_1EF3FEA28, &qword_1EF3FEA18, v1, v2);
  sub_1BC2B497C();
}

uint64_t sub_1BC1E446C()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;

  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  sub_1BC2B4994();
  sub_1BC2B3038();
  sub_1BC2B497C();
  v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2B3D8];
  sub_1BC1E48E0(0, &qword_1EF3FEA00, (uint64_t (*)(void))sub_1BC1E45D4, (uint64_t)&type metadata for FrequencyInterval, MEMORY[0x1E0D2B3D8]);
  v1 = MEMORY[0x1E0D2B3E0];
  sub_1BC1E4618(&qword_1EF3FEA10, &qword_1EF3FEA00, v0, MEMORY[0x1E0D2B3E0]);
  sub_1BC2B497C();
  sub_1BC1E48E0(0, &qword_1EF3FEA18, (uint64_t (*)(void))sub_1BC1E466C, (uint64_t)&type metadata for DisplayUnit, v0);
  sub_1BC1E487C(&qword_1EF3FEA28, &qword_1EF3FEA18, v0, v1);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1E45A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BC1E45D4()
{
  unint64_t result;

  result = qword_1EF3FEA08;
  if (!qword_1EF3FEA08)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for FrequencyInterval, &type metadata for FrequencyInterval);
    atomic_store(result, (unint64_t *)&qword_1EF3FEA08);
  }
  return result;
}

uint64_t sub_1BC1E4618(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC1E48E0(255, a2, (uint64_t (*)(void))sub_1BC1E45D4, (uint64_t)&type metadata for FrequencyInterval, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC1E466C()
{
  unint64_t result;

  result = qword_1EF3FEA20;
  if (!qword_1EF3FEA20)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DisplayUnit, &type metadata for DisplayUnit);
    atomic_store(result, (unint64_t *)&qword_1EF3FEA20);
  }
  return result;
}

uint64_t sub_1BC1E46B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + qword_1EF3FE9D0);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FrequencyPickerDataSource()
{
  uint64_t result;

  result = qword_1EF3FEA30;
  if (!qword_1EF3FEA30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1E4744()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FrequencyPickerDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FrequencyPickerDataSource.baseIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + *v0 + 48))();
}

uint64_t dispatch thunk of FrequencyPickerDataSource.baseIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + *v0 + 56))();
}

uint64_t dispatch thunk of FrequencyPickerDataSource.baseIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + *v0 + 64))();
}

uint64_t dispatch thunk of FrequencyPickerDataSource.__allocating_init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + v0 + 192))();
}

uint64_t dispatch thunk of static FrequencyPickerDataSource.shouldAddDaysIntervalItem(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + v0 + 264))();
}

uint64_t dispatch thunk of static FrequencyPickerDataSource.shouldAddCyclicalUnitPickerItem(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + v0 + 272))();
}

uint64_t sub_1BC1E4840()
{
  return type metadata accessor for FrequencyPickerDataSource();
}

uint64_t sub_1BC1E4848()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1E486C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1BC1E3A14(a1);
}

uint64_t sub_1BC1E4874(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1BC1E3A90(a1, a2);
}

uint64_t sub_1BC1E487C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC1E48E0(255, a2, (uint64_t (*)(void))sub_1BC1E466C, (uint64_t)&type metadata for DisplayUnit, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC1E48D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC1E3668(a1);
}

uint64_t sub_1BC1E48D8()
{
  return sub_1BC1E36E8();
}

void sub_1BC1E48E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1BC1E493C(void *a1)
{
  sub_1BC1E326C(a1);
}

void sub_1BC1E4944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FEAA0)
  {
    sub_1BC1E49F8();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C((unint64_t *)&qword_1EF3FC458, (uint64_t (*)(uint64_t))sub_1BC1E49F8, MEMORY[0x1E0C95FB8]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FEAA0);
  }
}

void sub_1BC1E49F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FC440)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FC440);
  }
}

uint64_t sub_1BC1E4A5C()
{
  return sub_1BC1E2D54();
}

uint64_t sub_1BC1E4A64()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t InteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  swift_allocObject();
  return InteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t InteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v22 = a4;
  sub_1BC1E9AFC(0, &qword_1EDA0FC18, MEMORY[0x1E0C96198]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - v11;
  swift_unknownObjectWeakInit();
  v13 = v4 + qword_1EDA0FA80;
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC0F22FC(0, &qword_1EDA0FC70, &qword_1EDA0FDB0);
  swift_retain();
  sub_1BC2B3F5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(_QWORD *)(v4 + qword_1EDA0FAB0) = 0;
  *(_QWORD *)(v4 + qword_1EF3FEAB0) = 0;
  *(_QWORD *)(v4 + qword_1EDA0FAA8) = 0;
  *(_QWORD *)(v4 + qword_1EF3FEAB8) = 0;
  *(_QWORD *)(v4 + qword_1EDA0FA98) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + qword_1EDA0FA90) = a1;
  *(_QWORD *)(v4 + qword_1EDA0FA88) = a2;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v4 + qword_1EF3FEAC0) = v22;
  swift_retain();
  v14 = a2;
  swift_retain();
  swift_release();
  v15 = sub_1BC2B2750();
  swift_retain();
  v16 = sub_1BC1E50E4();
  v17 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1BC1E5A70;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1E5B64;
  aBlock[3] = &block_descriptor_18;
  v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v16, sel_allDismissedDrugInteractionsWithCompletion_, v18);
  _Block_release(v18);

  sub_1BC1E5BF0();
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  v19 = (void *)sub_1BC2B2BF4();
  swift_release();
  objc_msgSend(v19, sel_registerObserver_, v15);
  swift_release();
  swift_release();

  swift_release();
  return v15;
}

uint64_t sub_1BC1E4E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectWeakDestroy();
  swift_release();
  v1 = v0 + qword_1EDA0FA80;
  sub_1BC1E9AFC(0, &qword_1EDA0FC18, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t InteractionCriticalAlertDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC104940(v0);
  swift_bridgeObjectRelease();
  v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_unknownObjectWeakDestroy();
  swift_release();
  v2 = v1 + qword_1EDA0FA80;
  sub_1BC1E9AFC(0, &qword_1EDA0FC18, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t InteractionCriticalAlertDataSource.__deallocating_deinit()
{
  InteractionCriticalAlertDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1E5038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  sub_1BC2B2CCC();
  v5 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

id sub_1BC1E50E4()
{
  return sub_1BC1E5130(&qword_1EDA0FAB0, (Class *)0x1E0D2C440);
}

uint64_t sub_1BC1E50F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

id sub_1BC1E511C()
{
  return sub_1BC1E5130(&qword_1EDA0FAA8, (Class *)0x1E0D2C418);
}

id sub_1BC1E5130(uint64_t *a1, Class *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone(*a2), sel_initWithHealthStore_, *(_QWORD *)(v2 + qword_1EDA0FA88));
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

_QWORD *sub_1BC1E51A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = qword_1EF3FEAB8;
  if (*(_QWORD *)(v0 + qword_1EF3FEAB8))
  {
    v2 = *(_QWORD **)(v0 + qword_1EF3FEAB8);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + qword_1EDA0FA88);
    sub_1BC2B3278();
    v5 = v4;
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v6 = sub_1BC2B314C();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    v2 = sub_1BC0F5A80(v5, v6);

    swift_release();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1BC1E52CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BC1E9F54(0, &qword_1EDA0FBC8, (uint64_t (*)(uint64_t))sub_1BC1CB43C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC2B3F38();
  sub_1BC1E9FD4();
  v9 = sub_1BC2B3FBC();
  result = swift_release();
  *a4 = v9;
  return result;
}

void sub_1BC1E53C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  id v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = sub_1BC1E511C();
  v10 = swift_bridgeObjectRetain();
  sub_1BC1CCF24(v10);
  swift_bridgeObjectRelease();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FDA8, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, MEMORY[0x1E0DEFCF8]);
  v11 = (void *)sub_1BC2B47A8();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FDF0, &qword_1EDA0FDE8, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
    a5 = (void *)sub_1BC2B47A8();
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC1EA034;
  *(_QWORD *)(v12 + 24) = v8;
  v14[4] = sub_1BC1EA040;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC1C8570;
  v14[3] = &block_descriptor_45;
  v13 = _Block_copy(v14);
  swift_release();
  objc_msgSend(v9, sel_interactionResultsForMedications_lifestyleFactors_completion_, v11, a5, v13);
  _Block_release(v13);

}

void sub_1BC1E55A0(uint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (a2)
  {
    v5 = a2;
    a3(a2, 1);

  }
  else
  {
    if (a1)
    {
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BC1333F0(v6);
      swift_bridgeObjectRelease();
      a3((id)v7, 0);
    }
    else
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
        v8 = sub_1BC13340C(MEMORY[0x1E0DEE9D8]);
      a3(v8, 0);
    }
    swift_release();
  }
}

uint64_t sub_1BC1E5660()
{
  uint64_t result;

  sub_1BC199AD4();
  result = sub_1BC2B3CEC();
  if (result >= 1)
    return sub_1BC2B37E8();
  return result;
}

uint64_t sub_1BC1E56AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  sub_1BC199AD4();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3D04();
  swift_retain();
  if (sub_1BC2B3CEC() >= 1)
    sub_1BC2B37E8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1BC1E5788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t aBlock;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;

  v4 = sub_1BC2B42E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B4304();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    v19 = v5;
    if (a2)
    {
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
      v14 = (void *)sub_1BC2B4A0C();
      v24 = sub_1BC1EA048;
      v25 = v13;
      aBlock = MEMORY[0x1E0C809B0];
      v21 = 1107296256;
      v15 = &block_descriptor_57;
    }
    else
    {
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
      if (a1)
      {
        swift_bridgeObjectRetain();
        v14 = (void *)sub_1BC2B4A0C();
        v16 = swift_allocObject();
        *(_QWORD *)(v16 + 16) = v13;
        *(_QWORD *)(v16 + 24) = a1;
        v24 = sub_1BC1EA0A4;
        v25 = v16;
        aBlock = MEMORY[0x1E0C809B0];
        v21 = 1107296256;
        v15 = &block_descriptor_54;
      }
      else
      {
        v14 = (void *)sub_1BC2B4A0C();
        v24 = sub_1BC1EA048;
        v25 = v13;
        aBlock = MEMORY[0x1E0C809B0];
        v21 = 1107296256;
        v15 = &block_descriptor_48;
      }
    }
    v22 = sub_1BC1AEAE4;
    v23 = v15;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1BC2B42F8();
    aBlock = MEMORY[0x1E0DEE9D8];
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC17219C();
    sub_1BC2B509C();
    MEMORY[0x1BCCEE194](0, v11, v7, v17);
    _Block_release(v17);
    swift_release();

    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_1BC1E5A70(uint64_t a1, uint64_t a2)
{
  return sub_1BC1E5788(a1, a2);
}

uint64_t sub_1BC1E5A78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC1E5AEC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC1E5B64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDB0);
    v4 = sub_1BC2B458C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1E5BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  uint64_t v87;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v85 = (char *)&v58 - v1;
  sub_1BC1E9AFC(0, &qword_1EDA0FBF8, MEMORY[0x1E0C96180]);
  v3 = *(_QWORD *)(v2 - 8);
  v81 = v2;
  v82 = v3;
  MEMORY[0x1E0C80A78](v2);
  v78 = (char *)&v58 - v4;
  sub_1BC1A4F80();
  v58 = v5;
  v59 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB28C();
  v61 = v8;
  v64 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB360();
  v65 = v11;
  v67 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1CB59C();
  v14 = v13;
  v66 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v62 = (char *)&v58 - v18;
  sub_1BC1E97E0(0, &qword_1EF3FEAF8, v19, (void (*)(void))sub_1BC1E9844);
  v69 = v20;
  v72 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v63 = (char *)&v58 - v21;
  sub_1BC1E9860();
  v73 = v22;
  v75 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v68 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1E99C8();
  v74 = v24;
  v76 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v70 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1E97E0(0, &qword_1EF3FEB38, v26, (void (*)(void))sub_1BC1E9CE4);
  v28 = *(_QWORD *)(v27 - 8);
  v79 = v27;
  v80 = v28;
  MEMORY[0x1E0C80A78](v27);
  v71 = (char *)&v58 - v29;
  sub_1BC1E9D00();
  v31 = *(_QWORD *)(v30 - 8);
  v83 = v30;
  v84 = v31;
  MEMORY[0x1E0C80A78](v30);
  v77 = (char *)&v58 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = (id)sub_1BC2B3950();
  v33 = (void (*)(uint64_t))MEMORY[0x1E0D2EFE8];
  sub_1BC101888(0, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
  sub_1BC0F22FC(0, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC1018E4((unint64_t *)&qword_1EDA0FB58, (unint64_t *)&qword_1EDA0FB60, v33);
  sub_1BC2B3FC8();
  swift_release();
  v34 = (void *)sub_1BC1E51A8()[5];
  swift_retain();
  swift_release();
  v86 = v34;
  sub_1BC101888(0, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
  sub_1BC0E519C(&qword_1EDA0FB08, (uint64_t (*)(uint64_t))sub_1BC1A4F80, MEMORY[0x1E0C95708]);
  sub_1BC1018E4(&qword_1EF3FCF80, &qword_1EF3FCF78, (void (*)(uint64_t))sub_1BC0F6468);
  v35 = v58;
  sub_1BC2B3FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v7, v35);
  v36 = swift_allocObject();
  swift_weakInit();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1BC1E9E38;
  *(_QWORD *)(v37 + 24) = v36;
  sub_1BC2B3E6C();
  sub_1BC1E9F54(0, &qword_1EDA0FB80, (uint64_t (*)(uint64_t))sub_1BC1CB43C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC1E9764();
  sub_1BC1E9780();
  v38 = v60;
  v39 = v61;
  sub_1BC2B40C4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v10, v39);
  sub_1BC0F22FC(0, &qword_1EDA0FC48, (unint64_t *)&qword_1EDA0FD88);
  sub_1BC0E519C(&qword_1EF3FE098, (uint64_t (*)(uint64_t))sub_1BC1CB360, MEMORY[0x1E0C95B78]);
  v40 = v65;
  sub_1BC2B3FC8();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v40);
  v41 = v62;
  sub_1BC2B3DA0();
  v42 = *(void (**)(char *, uint64_t))(v66 + 8);
  v42(v17, v14);
  v86 = (id)MEMORY[0x1E0DEE9D8];
  sub_1BC1E9844();
  v43 = v63;
  sub_1BC2B3FD4();
  v42(v41, v14);
  swift_beginAccess();
  sub_1BC1E9AFC(0, &qword_1EDA0FC18, MEMORY[0x1E0C96198]);
  v44 = v78;
  sub_1BC2B3F68();
  swift_endAccess();
  sub_1BC1E9910();
  sub_1BC1E9970();
  v45 = v68;
  v46 = v69;
  v47 = v81;
  sub_1BC2B3FF8();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v47);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v46);
  sub_1BC2B3E6C();
  sub_1BC1E9F54(0, &qword_1EDA0FB70, (uint64_t (*)(uint64_t))sub_1BC1E9A80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC1E9C08();
  sub_1BC1E9C24();
  v48 = v70;
  v49 = v73;
  sub_1BC2B40C4();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v49);
  sub_1BC1E9CE4();
  v86 = 0;
  v87 = 0;
  v50 = v71;
  v51 = v74;
  sub_1BC2B3FD4();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v51);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v86 = (id)sub_1BC2B4A0C();
  v52 = sub_1BC2B49C4();
  v53 = (uint64_t)v85;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v85, 1, 1, v52);
  sub_1BC1E9DD8();
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v54 = v77;
  v55 = v79;
  sub_1BC2B4064();
  sub_1BC101BB8(v53);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v50, v55);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FEB58, (uint64_t (*)(uint64_t))sub_1BC1E9D00, MEMORY[0x1E0C95CB8]);
  v56 = v83;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v54, v56);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC1E658C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t i;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1BC0E7998(0, &qword_1EDA0FBA0, (uint64_t (*)(uint64_t))sub_1BC1CB43C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - v7;
  sub_1BC1E9F54(0, (unint64_t *)&unk_1EDA0FEC0, (uint64_t (*)(uint64_t))sub_1BC1CB43C, MEMORY[0x1E0C964B8]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - v12;
  sub_1BC1CCD34();
  v31 = *(_QWORD *)(v14 - 8);
  v32 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v33 = 0;
    sub_1BC1CB43C();
    sub_1BC2B3F14();
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC2B3EFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1BC1E9EE4();
    v26 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  v18 = Strong;
  v33 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v18;
    v27[3] = v25;
    v27[4] = a2;
    sub_1BC1E9F54(0, &qword_1EDA0FB80, (uint64_t (*)(uint64_t))sub_1BC1CB43C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1E9780();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BC2B3F44();
    sub_1BC0E519C(&qword_1EDA0FBE0, (uint64_t (*)(uint64_t))sub_1BC1CCD34, MEMORY[0x1E0C96148]);
    v28 = v32;
    v26 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v28);
    swift_release();
    swift_release();
    return v26;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v19 = result;
  if (!result)
    goto LABEL_16;
LABEL_4:
  if (v19 >= 1)
  {
    v30 = a2;
    for (i = 0; i != v19; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v22 = (id)MEMORY[0x1BCCEE950](i, a1);
      else
        v22 = *(id *)(a1 + 8 * i + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, sel_firstOntologyCoding);

      if (v24)
      {
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v25 = v33;
    a2 = v30;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1E693C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;

  v3 = *a1;
  v43 = MEMORY[0x1E0DEE9D8];
  if (v3 >> 62)
    goto LABEL_41;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1BC2B52D0())
  {
    v34 = a2;
    v5 = 0;
    v6 = 0;
    v39 = v3 & 0xC000000000000001;
    v36 = (char *)(v3 + 32);
    v37 = v3 & 0xFFFFFFFFFFFFFF8;
    v7 = 0x1F4BB4000uLL;
    v35 = v4;
    while (v39)
    {
      v8 = (id)MEMORY[0x1BCCEE950](v5, v3);
      v9 = __OFADD__(v5++, 1);
      if (v9)
        goto LABEL_39;
LABEL_11:
      v10 = v7;
      v11 = v4;
      v12 = v3;
      v40 = v8;
      v13 = objc_msgSend(v8, sel_interactions, v34);
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
      sub_1BC0F1488(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, MEMORY[0x1E0DEFCF8]);
      v14 = sub_1BC2B47B4();

      if ((v14 & 0xC000000000000001) != 0)
      {
        v15 = MEMORY[0x1E0DEE9E8];
        v42 = MEMORY[0x1E0DEE9E8];
        sub_1BC2B50CC();
        if (sub_1BC2B512C())
        {
          v38 = v6;
          v16 = v12;
          v7 = v10;
          do
          {
            swift_dynamicCast();
            v17 = objc_msgSend(v41, sel_severity);
            v18 = objc_msgSend(v17, (SEL)(v10 + 3698));

            v3 = (unint64_t)v41;
            if (v18 == (id)1)
            {
              v19 = v42;
              v20 = *(_QWORD *)(v42 + 16);
              if (*(_QWORD *)(v42 + 24) <= v20)
              {
                sub_1BC2158BC(v20 + 1);
                v19 = v42;
              }
              a2 = (uint64_t)v41;
              v21 = sub_1BC2B4D78();
              v22 = v19 + 56;
              v23 = -1 << *(_BYTE *)(v19 + 32);
              v24 = v21 & ~v23;
              v25 = v24 >> 6;
              if (((-1 << v24) & ~*(_QWORD *)(v19 + 56 + 8 * (v24 >> 6))) != 0)
              {
                v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v19 + 56 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
              }
              else
              {
                v27 = 0;
                v28 = (unint64_t)(63 - v23) >> 6;
                do
                {
                  if (++v25 == v28 && (v27 & 1) != 0)
                  {
                    __break(1u);
                    goto LABEL_39;
                  }
                  v29 = v25 == v28;
                  if (v25 == v28)
                    v25 = 0;
                  v27 |= v29;
                  v30 = *(_QWORD *)(v22 + 8 * v25);
                }
                while (v30 == -1);
                v26 = __clz(__rbit64(~v30)) + (v25 << 6);
              }
              *(_QWORD *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
              *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v26) = v41;
              ++*(_QWORD *)(v19 + 16);
            }
            else
            {

            }
          }
          while (sub_1BC2B512C());
          a2 = v42;
          v3 = v16;
          v4 = v35;
          v6 = v38;
        }
        else
        {
          a2 = v15;
          v3 = v12;
          v4 = v11;
          v7 = v10;
        }
        swift_release();
        if ((a2 & 0xC000000000000001) != 0)
        {
LABEL_35:
          v31 = sub_1BC2B5108();
          goto LABEL_36;
        }
      }
      else
      {
        a2 = sub_1BC1E8914(v14);
        v4 = v11;
        v7 = v10;
        if ((a2 & 0xC000000000000001) != 0)
          goto LABEL_35;
      }
      v31 = *(_QWORD *)(a2 + 16);
LABEL_36:
      swift_release();
      if (v31)
      {
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        a2 = (uint64_t)&v43;
        sub_1BC2B5210();
        if (v5 == v4)
          goto LABEL_38;
      }
      else
      {

        if (v5 == v4)
        {
LABEL_38:
          result = swift_bridgeObjectRelease();
          v33 = v43;
          a2 = v34;
          goto LABEL_43;
        }
      }
    }
    if (v5 >= *(_QWORD *)(v37 + 16))
      goto LABEL_40;
    v8 = *(id *)&v36[8 * v5];
    v9 = __OFADD__(v5++, 1);
    if (!v9)
      goto LABEL_11;
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
  }
  result = swift_bridgeObjectRelease();
  v33 = MEMORY[0x1E0DEE9D8];
LABEL_43:
  *(_QWORD *)a2 = v33;
  return result;
}

uint64_t sub_1BC1E6D58@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];

  sub_1BC0E7998(0, &qword_1EDA0FBA8, (uint64_t (*)(uint64_t))sub_1BC1E9A80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v18 - v7;
  sub_1BC1E9F54(0, &qword_1EDA0FEB8, (uint64_t (*)(uint64_t))sub_1BC1E9A80, MEMORY[0x1E0C964B8]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v18 - v12;
  v15 = *a1;
  v14 = a1[1];
  v18[0] = v15;
  v18[1] = v14;
  sub_1BC1E9A80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC2B3F14();
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
  sub_1BC2B3EFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC1E9E74();
  v16 = sub_1BC2B3FBC();
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a2 = v16;
  return result;
}

uint64_t sub_1BC1E6ED8(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_1BC2B2438();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1BC2B2BC4();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a1[1];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    v12 = sub_1BC2B3938();
    v13 = (void *)sub_1BC11C7E0(v12);
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
    if (!v13)
      v13 = (void *)MEMORY[0x1E0DEE9D8];
    v15 = sub_1BC1E7274(v8, v9, v13);
    swift_bridgeObjectRelease();
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v16)
        goto LABEL_6;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v16)
      {
LABEL_6:
        v31 = v14;
        result = sub_1BC125E4C(0, v16 & ~(v16 >> 63), 0);
        if (v16 < 0)
        {
          __break(1u);
          return result;
        }
        v27 = v16;
        v25[1] = v11;
        v17 = 0;
        v18 = v15 & 0xC000000000000001;
        v26 = xmmword_1BC2B92D0;
        v19 = v15;
        do
        {
          if (v18)
          {
            v20 = MEMORY[0x1BCCEE950](v17, v15);
          }
          else
          {
            v20 = *(_QWORD *)(v15 + 8 * v17 + 32);
            swift_retain();
          }
          sub_1BC195EAC();
          v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = v26;
          *(_QWORD *)(v21 + 56) = type metadata accessor for InteractionCriticalAlertItem();
          *(_QWORD *)(v21 + 64) = sub_1BC0E519C(&qword_1EF3FEB60, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertItem, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertItem);
          *(_QWORD *)(v21 + 32) = v20;
          swift_retain();
          sub_1BC2B242C();
          sub_1BC2B23FC();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v30);
          sub_1BC2B2BAC();
          swift_release();
          v22 = v31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BC125E4C(0, *(_QWORD *)(v22 + 16) + 1, 1);
            v22 = v31;
          }
          v24 = *(_QWORD *)(v22 + 16);
          v23 = *(_QWORD *)(v22 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1BC125E4C(v23 > 1, v24 + 1, 1);
            v22 = v31;
          }
          ++v17;
          *(_QWORD *)(v22 + 16) = v24 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v24, v7, v28);
          v31 = v22;
          v15 = v19;
        }
        while (v27 != v17);
      }
    }
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BC2B2744();
    swift_release();
    sub_1BC2B2A08();
    swift_release();
    sub_1BC2B2C18();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1E7274(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9;
  BOOL v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v34;
  id v35;
  unint64_t v36;
  uint64_t v37;

  v4 = v3;
  result = MEMORY[0x1E0DEE9D8];
  v37 = MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    if (a1 >> 62)
      goto LABEL_35;
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v7; v7 = sub_1BC2B52D0())
    {
      v8 = 0;
      v31 = a1 & 0xC000000000000001;
      v28 = a1 + 32;
      v29 = a1;
      v27 = v4;
      v30 = v7;
      while (v31)
      {
        v9 = (id)MEMORY[0x1BCCEE950](v8, v29);
        v10 = __OFADD__(v8++, 1);
        if (v10)
          goto LABEL_34;
LABEL_12:
        v34 = v9;
        v11 = objc_msgSend(v9, sel_interactions);
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
        sub_1BC0F1488(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, MEMORY[0x1E0DEFCF8]);
        v12 = sub_1BC2B47B4();

        if ((v12 & 0xC000000000000001) != 0)
        {
          v13 = MEMORY[0x1E0DEE9E8];
          v36 = MEMORY[0x1E0DEE9E8];
          sub_1BC2B50CC();
          if (sub_1BC2B512C())
          {
            do
            {
              swift_dynamicCast();
              v14 = objc_msgSend(v35, sel_severity);
              v15 = objc_msgSend(v14, sel_severityLevel);

              if (v15 == (id)1)
              {
                v4 = v36;
                v16 = *(_QWORD *)(v36 + 16);
                if (*(_QWORD *)(v36 + 24) <= v16)
                {
                  sub_1BC2158BC(v16 + 1);
                  v4 = v36;
                }
                a1 = (unint64_t)v35;
                v17 = sub_1BC2B4D78();
                v18 = v4 + 56;
                v19 = -1 << *(_BYTE *)(v4 + 32);
                v20 = v17 & ~v19;
                v21 = v20 >> 6;
                if (((-1 << v20) & ~*(_QWORD *)(v4 + 56 + 8 * (v20 >> 6))) != 0)
                {
                  v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v4 + 56 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
                }
                else
                {
                  v23 = 0;
                  v24 = (unint64_t)(63 - v19) >> 6;
                  do
                  {
                    if (++v21 == v24 && (v23 & 1) != 0)
                    {
                      __break(1u);
                      goto LABEL_34;
                    }
                    v25 = v21 == v24;
                    if (v21 == v24)
                      v21 = 0;
                    v23 |= v25;
                    v26 = *(_QWORD *)(v18 + 8 * v21);
                  }
                  while (v26 == -1);
                  v22 = __clz(__rbit64(~v26)) + (v21 << 6);
                }
                *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
                *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v35;
                ++*(_QWORD *)(v4 + 16);
              }
              else
              {

              }
            }
            while (sub_1BC2B512C());
            a1 = v36;
            v4 = v27;
          }
          else
          {
            a1 = v13;
          }
          swift_release();
        }
        else
        {
          a1 = sub_1BC1E8914(v12);
        }
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BC1E91CC(a1, v4, a2, a3, &v37);

        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v8 == v30)
        {
          swift_bridgeObjectRelease();
          return v37;
        }
      }
      v9 = *(id *)(v28 + 8 * v8);
      v10 = __OFADD__(v8++, 1);
      if (!v10)
        goto LABEL_12;
LABEL_34:
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

void sub_1BC1E762C(void **a1, uint64_t a2, unint64_t a3, void *a4, _QWORD *a5)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  id v17;
  void *v18;
  uint64_t v19;
  unsigned int v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  int *v43;
  int **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int **v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  void (*v68)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD v92[2];
  void (*v93)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  int **v100;
  _QWORD *v101;
  uint64_t v102;
  int **v103;
  _OWORD v104[13];
  id v105;
  uint64_t v106[3];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[8];
  _QWORD v112[10];
  int *v113;
  _QWORD v114[7];
  _QWORD v115[8];
  _QWORD v116[10];
  _QWORD v117[3];
  uint64_t v118;
  _UNKNOWN **v119;
  _QWORD v120[3];
  uint64_t v121;
  _UNKNOWN **v122;
  id v123;

  v6 = v5;
  v98 = a5;
  v123 = a4;
  v97 = a2;
  v96 = (int *)type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  MEMORY[0x1E0C80A78](v96);
  v101 = (_QWORD *)((char *)v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v102 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  v10 = MEMORY[0x1E0C80A78](v102);
  v100 = (int **)((char *)v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v103 = (int **)((char *)v92 - v12);
  v13 = *a1;
  if (!a3)
    goto LABEL_20;
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v14 = sub_1BC2B52D0();
    if (v14)
      goto LABEL_4;
    goto LABEL_19;
  }
  v14 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    v21 = v13;
    v22 = swift_bridgeObjectRetain();
    v23 = sub_1BC1CBF48(v22, v21, (SEL *)&selRef_firstInteractionClass);
    swift_bridgeObjectRelease();

    v24 = v21;
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1BC1CBF48(v25, v24, (SEL *)&selRef_secondInteractionClass);
    swift_bridgeObjectRelease();
    v123 = v24;

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v27)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        v28 = (int *)MEMORY[0x1BCCEE950](0, v23);
      }
      else
      {
        if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_52;
        }
        v28 = (int *)*(id *)(v23 + 32);
      }
      v29 = v28;
      swift_bridgeObjectRelease();
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      swift_storeEnumTagMultiPayload();
      v113 = v29;
      v30 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      v31 = sub_1BC2B3764();
      v33 = v32;
      v121 = v30;
      v122 = &protocol witness table for HKMedicationUserDomainConcept;
    }
    else
    {
      swift_bridgeObjectRelease();
      v34 = objc_msgSend(v123, sel_firstInteractionClass);
      v35 = objc_msgSend(v34, sel_ancestorIdentifier);

      v36 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
      v37 = v36;
      if (!v36)
      {
        sub_1BC0E1D38(0, &qword_1EDA0FDE8);
        v37 = (void *)sub_1BC2B4D6C();
      }
      v38 = v36;
      v29 = (int *)sub_1BC2B4FC4();

      *v103 = v29;
      swift_storeEnumTagMultiPayload();
      LOBYTE(v113) = 0;
      v31 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v113, (uint64_t)v29);
      v33 = v39;
      type metadata accessor for HKDrugInteractionLifestyleFactor(0);
      v121 = v40;
      v122 = &protocol witness table for HKDrugInteractionLifestyleFactor;

    }
    v120[0] = v29;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      v41 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v99 = v6;
    v94 = v31;
    v95 = v33;
    if (!v41)
    {
      swift_bridgeObjectRelease();
      v49 = objc_msgSend(v123, sel_secondInteractionClass);
      v50 = objc_msgSend(v49, sel_ancestorIdentifier);

      v51 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
      v52 = v51;
      if (!v51)
      {
        sub_1BC0E1D38(0, &qword_1EDA0FDE8);
        v52 = (void *)sub_1BC2B4D6C();
      }
      v53 = v51;
      v43 = (int *)sub_1BC2B4FC4();

      v48 = v100;
      *v100 = v43;
      swift_storeEnumTagMultiPayload();
      LOBYTE(v113) = 0;
      v46 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v113, (uint64_t)v43);
      v102 = v54;
      type metadata accessor for HKDrugInteractionLifestyleFactor(0);
      v118 = v55;
      v119 = &protocol witness table for HKDrugInteractionLifestyleFactor;

      goto LABEL_40;
    }
    if ((v26 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v42 = (int *)*(id *)(v26 + 32);
      goto LABEL_36;
    }
LABEL_52:
    v42 = (int *)MEMORY[0x1BCCEE950](0, v26);
LABEL_36:
    v43 = v42;
    swift_bridgeObjectRelease();
    v44 = v100;
    _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
    swift_storeEnumTagMultiPayload();
    v113 = v43;
    v45 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    v46 = sub_1BC2B3764();
    v102 = v47;
    v118 = v45;
    v119 = &protocol witness table for HKMedicationUserDomainConcept;
    v48 = v44;
LABEL_40:
    v117[0] = v43;
    v56 = v123;
    v57 = objc_msgSend(v123, sel_severity);
    v58 = objc_msgSend(v57, sel_severityLevel);

    v59 = (uint64_t)v96;
    v60 = v101;
    sub_1BC0FC574((uint64_t)v103, (uint64_t)v101 + v96[5], type metadata accessor for DrugInteractionVisualizationConfig);
    sub_1BC0FC574((uint64_t)v48, (uint64_t)v60 + *(int *)(v59 + 24), type metadata accessor for DrugInteractionVisualizationConfig);
    *v60 = v58;
    v107 = v59;
    v108 = sub_1BC0E519C(&qword_1EF3FC160, type metadata accessor for InteractionStackedMedmojiDataProvider, (uint64_t)&protocol conformance descriptor for InteractionStackedMedmojiDataProvider);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v106);
    sub_1BC0FC574((uint64_t)v60, (uint64_t)boxed_opaque_existential_1, type metadata accessor for InteractionStackedMedmojiDataProvider);
    sub_1BC0E79F0((uint64_t)v120, (uint64_t)v111);
    sub_1BC0E79F0((uint64_t)v117, (uint64_t)v112);
    v105 = v56;
    v63 = v94;
    v62 = v95;
    v109 = v94;
    v110 = v95;
    v111[5] = 0;
    v111[6] = v46;
    v64 = v102;
    v111[7] = v102;
    v112[5] = 0;
    v112[6] = 0;
    v112[8] = 0;
    v112[9] = 0;
    v112[7] = 0xE000000000000000;
    if (v46 == v94 && v102 == v95 || (sub_1BC2B53CC() & 1) == 0)
    {
      sub_1BC0FF670((uint64_t)&v105, (uint64_t)&v113);
      v69 = v123;
    }
    else
    {
      v102 = v64;
      v66 = v107;
      v65 = v108;
      v67 = __swift_project_boxed_opaque_existential_0(v106, v107);
      v68 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v65 + 40);
      v92[1] = v67;
      v93 = v68;
      v96 = (int *)v123;
      v93(v114, v66, v65);
      sub_1BC0E79F0((uint64_t)v112, (uint64_t)v115);
      sub_1BC0E79F0((uint64_t)v111, (uint64_t)v116);
      v113 = v96;
      v114[5] = v46;
      v114[6] = v102;
      v115[5] = 0;
      v115[6] = v63;
      v115[7] = v62;
      v116[6] = 0;
      v116[5] = 0;
      v116[9] = 0;
      v116[7] = 0xE000000000000000;
      v116[8] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC1E94F0(&v105);
    sub_1BC0FF670((uint64_t)&v113, (uint64_t)&v105);
    v70 = swift_allocObject();
    v71 = v97;
    swift_weakInit();
    sub_1BC0FF670((uint64_t)&v113, (uint64_t)v104);
    v72 = swift_allocObject();
    v102 = v70;
    v73 = v123;
    *(_QWORD *)(v72 + 16) = v70;
    *(_QWORD *)(v72 + 24) = v73;
    v74 = v104[11];
    *(_OWORD *)(v72 + 192) = v104[10];
    *(_OWORD *)(v72 + 208) = v74;
    *(_OWORD *)(v72 + 224) = v104[12];
    v75 = v104[7];
    *(_OWORD *)(v72 + 128) = v104[6];
    *(_OWORD *)(v72 + 144) = v75;
    v76 = v104[9];
    *(_OWORD *)(v72 + 160) = v104[8];
    *(_OWORD *)(v72 + 176) = v76;
    v77 = v104[3];
    *(_OWORD *)(v72 + 64) = v104[2];
    *(_OWORD *)(v72 + 80) = v77;
    v78 = v104[5];
    *(_OWORD *)(v72 + 96) = v104[4];
    *(_OWORD *)(v72 + 112) = v78;
    v79 = v104[1];
    *(_OWORD *)(v72 + 32) = v104[0];
    *(_OWORD *)(v72 + 48) = v79;
    v80 = swift_allocObject();
    swift_weakInit();
    v81 = v73;
    swift_retain();
    v82 = sub_1BC1E50E4();
    v123 = *(id *)(v71 + qword_1EF3FEAC0);
    v83 = v123;
    v84 = (_QWORD *)swift_allocObject();
    v84[2] = v82;
    v84[3] = v81;
    v84[4] = v80;
    v84[5] = v83;
    type metadata accessor for InteractionCriticalAlertItem();
    v85 = (_QWORD *)swift_allocObject();
    v85[5] = &type metadata for InteractionResultDetailDataProvider;
    v85[6] = &protocol witness table for InteractionResultDetailDataProvider;
    v86 = swift_allocObject();
    v85[2] = v86;
    sub_1BC0FF670((uint64_t)&v105, v86 + 16);
    type metadata accessor for InteractionCriticalAlertCell();
    sub_1BC0E519C(&qword_1EDA0FA10, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertCell);
    v87 = v81;
    v88 = v82;
    swift_retain();
    swift_retain();
    v85[7] = sub_1BC2B2930();
    v85[8] = v89;
    v85[9] = sub_1BC1E95A0;
    v85[10] = v72;
    v85[11] = sub_1BC1E95E8;
    v85[12] = v84;
    sub_1BC1E94F0(&v105);
    swift_release();
    swift_release();

    v90 = swift_retain();
    v91 = v98;
    MEMORY[0x1BCCEDCF0](v90);
    if (*(_QWORD *)((*v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC2B45C8();
    sub_1BC2B4604();
    sub_1BC2B45A4();
    swift_release();
    sub_1BC1E94F0((id *)&v113);
    sub_1BC0E8594((uint64_t)v101, type metadata accessor for InteractionStackedMedmojiDataProvider);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v117);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v120);
    sub_1BC0E8594((uint64_t)v100, type metadata accessor for DrugInteractionVisualizationConfig);
    sub_1BC0E8594((uint64_t)v103, type metadata accessor for DrugInteractionVisualizationConfig);
    return;
  }
LABEL_4:
  v99 = v6;
  v15 = 0;
  v16 = 0;
  v6 = a3 & 0xC000000000000001;
LABEL_5:
  LODWORD(v95) = v16;
  do
  {
    if (v6)
      v17 = (id)MEMORY[0x1BCCEE950](v15, a3);
    else
      v17 = *(id *)(a3 + 8 * v15 + 32);
    v18 = v17;
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v20 = objc_msgSend(v17, sel_isEqualToDrugInteractionResult_, v13);

    if (v20)
    {
      v16 = 1;
      ++v15;
      if (v19 != v14)
        goto LABEL_5;
      swift_bridgeObjectRelease();
      return;
    }
    ++v15;
  }
  while (v19 != v14);
  swift_bridgeObjectRelease();
  v6 = v99;
  if ((v95 & 1) == 0)
    goto LABEL_20;
}

uint64_t sub_1BC1E80D0(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[40];
  _BYTE v31[40];
  _QWORD v32[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    sub_1BC0E7940();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC2B7770;
    *(_QWORD *)(v7 + 32) = a2;
    v32[0] = v7;
    sub_1BC2B45A4();
    type metadata accessor for HKDrugInteractionResultCollection();
    v8 = swift_allocObject();
    if (v32[0] >> 62)
    {
      v27 = a2;
      swift_bridgeObjectRetain();
      v28 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v28)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v32[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      v10 = a2;
      if (v9)
      {
LABEL_4:
        *(_QWORD *)(v8 + 16) = v32[0];
        sub_1BC0E79F0((uint64_t)(a3 + 1), (uint64_t)v32);
        v11 = a3[7];
        v29 = a3[6];
        sub_1BC0E79F0((uint64_t)(a3 + 8), (uint64_t)v31);
        v12 = a3[11];
        v13 = a3[12];
        __swift_project_boxed_opaque_existential_0(a3 + 8, v12);
        v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 48);
        swift_retain();
        swift_bridgeObjectRetain();
        v15 = v14(v12, v13);
        v16 = a3[14];
        v17 = a3[15];
        v18 = a3 + 16;
        sub_1BC0E79F0((uint64_t)(a3 + 16), (uint64_t)v30);
        v20 = a3[19];
        v19 = a3[20];
        __swift_project_boxed_opaque_existential_0(v18, v20);
        v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 48);
        swift_bridgeObjectRetain();
        v22 = v21(v20, v19);
        v23 = objc_allocWithZone((Class)type metadata accessor for InteractionResultDetailViewController());
        v24 = sub_1BC10B658(v8, (uint64_t)v32, v29, v11, (uint64_t)v31, v15, v16, v17, (uint64_t)v30, v22);
        swift_release();
        objc_msgSend(v24, sel_setModalPresentationStyle_, 2);
        v25 = (void *)MEMORY[0x1BCCEF478](v6 + qword_1EDA0FAA0);
        if (v25)
        {
          v26 = v25;
          objc_msgSend(v25, sel_showAdaptively_sender_, v24, v6);

        }
        swift_retain();
        sub_1BC2B37E8();
        swift_release();

        swift_release();
        return swift_release();
      }
    }
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return swift_release();
  }
  return result;
}

void sub_1BC1E836C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[4] = sub_1BC1E966C;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BC2599E8;
  v10[3] = &block_descriptor_18;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_markDrugInteractionAsDismissed_completion_, a2, v9);
  _Block_release(v9);
}

uint64_t sub_1BC1E8444()
{
  id v0;
  uint64_t v1;
  void *v2;
  _QWORD aBlock[6];

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v0 = sub_1BC1E50E4();
    v1 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1BC1E5A70;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC1E5B64;
    aBlock[3] = &block_descriptor_23;
    v2 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v0, sel_allDismissedDrugInteractionsWithCompletion_, v2);
    _Block_release(v2);
    swift_release();

  }
  return sub_1BC2B37E8();
}

void InteractionCriticalAlertDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionCriticalAlertDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1E85A0()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionCriticalAlertDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionCriticalAlertDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for InteractionCriticalAlertCell();
  sub_1BC0E519C(&qword_1EDA0FA10, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC1E8640()
{
  return sub_1BC0E519C((unint64_t *)&unk_1EF3FEAC8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertDataSource, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertDataSource);
}

uint64_t type metadata accessor for InteractionCriticalAlertDataSource()
{
  uint64_t result;

  result = qword_1EDA0ED20;
  if (!qword_1EDA0ED20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1E86A8()
{
  type metadata accessor for InteractionCriticalAlertCell();
  sub_1BC0E519C(&qword_1EDA0FA10, (uint64_t (*)(uint64_t))type metadata accessor for InteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for InteractionCriticalAlertCell);
  return sub_1BC2B497C();
}

void sub_1BC1E86FC()
{
  unint64_t v0;

  sub_1BC1E9AFC(319, &qword_1EDA0FC18, MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionCriticalAlertDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionCriticalAlertDataSource + v0 + 152))();
}

uint64_t dispatch thunk of InteractionCriticalAlertDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionCriticalAlertDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of InteractionCriticalAlertDataSource.snapshotDidChange(dataSourceID:snapshot:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionCriticalAlertDataSource + *v0 + 304))();
}

uint64_t sub_1BC1E8818()
{
  return type metadata accessor for InteractionCriticalAlertDataSource();
}

uint64_t sub_1BC1E8820@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC1E889C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC1E8914(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_1BC1E8A70((_QWORD *)((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_1BC1E8A70((unint64_t *)v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x1BCCEF3A0](v8, -1, -1);
  }
  return v7;
}

void sub_1BC1E8A70(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v21;

  v21 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v9)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_24;
      v16 = *(_QWORD *)(v5 + 8 * v4);
      if (!v16)
      {
        v4 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_24;
        v16 = *(_QWORD *)(v5 + 8 * v4);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    v12 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    v13 = objc_msgSend(v12, sel_severity);
    v14 = objc_msgSend(v13, sel_severityLevel);

    if (v14 == (id)1)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1BC1E8CAC(a1, a2, v21, a3, &qword_1EF3FEAE8, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, &qword_1EDA0FD70);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v9)
    goto LABEL_24;
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v4 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v9)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1BC1E8C64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC1E8CAC(a1, a2, a3, a4, &qword_1EDA0FE28, (unint64_t *)&qword_1EDA0FD88, 0x1E0D2C460, (unint64_t *)&unk_1EDA0FD90);
}

uint64_t sub_1BC1E8C88(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC1E8CAC(a1, a2, a3, a4, &qword_1EF3FEAE8, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, &qword_1EDA0FD70);
}

uint64_t sub_1BC1E8CAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, unint64_t *a6, uint64_t a7, unint64_t *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t *v32;

  v8 = a4;
  if (!a3)
  {
    v13 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v13;
  }
  v9 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v8;
  sub_1BC1E967C(0, a5, a6, a7, a8);
  result = sub_1BC2B51A4();
  v13 = result;
  v32 = a1;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_39;
    if (v19 >= a2)
      goto LABEL_36;
    v20 = v32[v19];
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= a2)
        goto LABEL_36;
      v20 = v32[v15];
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= a2)
          goto LABEL_36;
        v20 = v32[v15];
        if (!v20)
          break;
      }
    }
LABEL_23:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v18);
    result = sub_1BC2B4D78();
    v23 = -1 << *(_BYTE *)(v13 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v16 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v16 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v16 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v16 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v26) = v22;
    ++*(_QWORD *)(v13 + 16);
    if (__OFSUB__(v9--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v9)
      goto LABEL_36;
  }
  v21 = v19 + 3;
  if (v21 >= a2)
    goto LABEL_36;
  v20 = v32[v21];
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= a2)
      goto LABEL_36;
    v20 = v32[v15];
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BC1E8F14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v34;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BC1E970C();
  result = sub_1BC2B51A4();
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  v34 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v32)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v32)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v32)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    sub_1BC2B5450();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    sub_1BC2B44D8();
    result = sub_1BC2B548C();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 32 * v25);
    *v30 = v18;
    v30[1] = v19;
    v30[2] = v20;
    v30[3] = v21;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v34;
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v32)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v32)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1BC1E91CC(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  void *v33;

  v6 = v5;
  v8 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
    sub_1BC0F1488(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, MEMORY[0x1E0DEFCF8]);
    sub_1BC2B47E4();
    v8 = v28;
    v24 = v29;
    v9 = v30;
    v10 = v31;
    v11 = v32;
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v9 = v13;
    v10 = 0;
  }
  v23 = (unint64_t)(v9 + 64) >> 6;
  if ((v8 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_1BC2B512C())
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v16 = v33;
    swift_unknownObjectRelease();
    v17 = v10;
    v18 = v11;
    while (v16)
    {
      v33 = v16;
      sub_1BC1E762C(&v33, a2, a3, a4, a5);

      if (v6)
        break;
      v10 = v17;
      v11 = v18;
      if (v8 < 0)
        goto LABEL_8;
LABEL_11:
      if (v11)
      {
        v18 = (v11 - 1) & v11;
        v19 = __clz(__rbit64(v11)) | (v10 << 6);
        v17 = v10;
      }
      else
      {
        v17 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          return;
        }
        if (v17 >= v23)
          break;
        v20 = *(_QWORD *)(v24 + 8 * v17);
        if (!v20)
        {
          v21 = v10 + 2;
          if (v10 + 2 >= v23)
            break;
          v20 = *(_QWORD *)(v24 + 8 * v21);
          if (v20)
            goto LABEL_22;
          v21 = v10 + 3;
          if (v10 + 3 >= v23)
            break;
          v20 = *(_QWORD *)(v24 + 8 * v21);
          if (v20)
            goto LABEL_22;
          v21 = v10 + 4;
          if (v10 + 4 >= v23)
            break;
          v20 = *(_QWORD *)(v24 + 8 * v21);
          if (v20)
          {
LABEL_22:
            v17 = v21;
          }
          else
          {
            v17 = v10 + 5;
            if (v10 + 5 >= v23)
              break;
            v20 = *(_QWORD *)(v24 + 8 * v17);
            if (!v20)
            {
              v22 = v10 + 6;
              while (v23 != v22)
              {
                v20 = *(_QWORD *)(v24 + 8 * v22++);
                if (v20)
                {
                  v17 = v22 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v18 = (v20 - 1) & v20;
        v19 = __clz(__rbit64(v20)) + (v17 << 6);
      }
      v16 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v19);
    }
  }
  sub_1BC1061A8();
}

id *sub_1BC1E94F0(id *a1)
{
  destroy for InteractionResultDetailDataProvider(a1);
  return a1;
}

uint64_t sub_1BC1E9524()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1E95A0()
{
  uint64_t v0;

  return sub_1BC1E80D0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (_QWORD *)(v0 + 32));
}

uint64_t sub_1BC1E95AC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC1E95E8()
{
  uint64_t v0;

  sub_1BC1E836C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC1E95F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1E9660()
{
  return objectdestroy_14Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BC1E966C()
{
  return sub_1BC1E8444();
}

void sub_1BC1E967C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC0E1D38(255, a3);
    sub_1BC0F1488(a5, a3, a4, MEMORY[0x1E0DEFCF8]);
    v9 = sub_1BC2B51B0();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC1E970C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FEAF0)
  {
    sub_1BC1CD974();
    v0 = sub_1BC2B51B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FEAF0);
  }
}

uint64_t sub_1BC1E9764()
{
  return sub_1BC0E519C(&qword_1EF3FE080, (uint64_t (*)(uint64_t))sub_1BC1CB28C, MEMORY[0x1E0C95698]);
}

unint64_t sub_1BC1E9780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FB78;
  if (!qword_1EDA0FB78)
  {
    sub_1BC1E9F54(255, &qword_1EDA0FB80, (uint64_t (*)(uint64_t))sub_1BC1CB43C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FB78);
  }
  return result;
}

void sub_1BC1E97E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BC2B3DC4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC1E9844()
{
  return sub_1BC0E519C(&qword_1EF3FEB00, (uint64_t (*)(uint64_t))sub_1BC1CB59C, MEMORY[0x1E0C95708]);
}

void sub_1BC1E9860()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FEB08)
  {
    sub_1BC1E97E0(255, &qword_1EF3FEAF8, (void (*)(uint64_t))sub_1BC1CB59C, (void (*)(void))sub_1BC1E9844);
    sub_1BC1E9AFC(255, &qword_1EDA0FBF8, MEMORY[0x1E0C96180]);
    sub_1BC1E9910();
    sub_1BC1E9970();
    v0 = sub_1BC2B3D64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FEB08);
  }
}

unint64_t sub_1BC1E9910()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FEB10;
  if (!qword_1EF3FEB10)
  {
    sub_1BC1E97E0(255, &qword_1EF3FEAF8, (void (*)(uint64_t))sub_1BC1CB59C, (void (*)(void))sub_1BC1E9844);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C957E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FEB10);
  }
  return result;
}

unint64_t sub_1BC1E9970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FBF0;
  if (!qword_1EDA0FBF0)
  {
    sub_1BC1E9AFC(255, &qword_1EDA0FBF8, MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FBF0);
  }
  return result;
}

void sub_1BC1E99C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FEB18)
  {
    sub_1BC1E9F54(255, &qword_1EDA0FB70, (uint64_t (*)(uint64_t))sub_1BC1E9A80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1E9B6C(255, &qword_1EF3FEB20, (void (*)(uint64_t))sub_1BC1E9860, (void (*)(void))sub_1BC1E9C08);
    sub_1BC1E9C24();
    sub_1BC1E9C84();
    v0 = sub_1BC2B3E24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FEB18);
  }
}

void sub_1BC1E9A80()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDA0FC58)
  {
    sub_1BC1CB43C();
    sub_1BC1E9AFC(255, &qword_1EDA0FC78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDA0FC58);
  }
}

void sub_1BC1E9AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC0F22FC(255, &qword_1EDA0FC70, &qword_1EDA0FDB0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC1E9B6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    a4();
    v6 = sub_1BC2B3DD0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC1E9C08()
{
  return sub_1BC0E519C(&qword_1EF3FEB28, (uint64_t (*)(uint64_t))sub_1BC1E9860, MEMORY[0x1E0C95698]);
}

unint64_t sub_1BC1E9C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FB68;
  if (!qword_1EDA0FB68)
  {
    sub_1BC1E9F54(255, &qword_1EDA0FB70, (uint64_t (*)(uint64_t))sub_1BC1E9A80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FB68);
  }
  return result;
}

unint64_t sub_1BC1E9C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FEB30;
  if (!qword_1EF3FEB30)
  {
    sub_1BC1E9B6C(255, &qword_1EF3FEB20, (void (*)(uint64_t))sub_1BC1E9860, (void (*)(void))sub_1BC1E9C08);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95850], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FEB30);
  }
  return result;
}

uint64_t sub_1BC1E9CE4()
{
  return sub_1BC0E519C(&qword_1EF3FEB40, (uint64_t (*)(uint64_t))sub_1BC1E99C8, MEMORY[0x1E0C95B78]);
}

void sub_1BC1E9D00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FEB48)
  {
    sub_1BC1E97E0(255, &qword_1EF3FEB38, (void (*)(uint64_t))sub_1BC1E99C8, (void (*)(void))sub_1BC1E9CE4);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC1E9DD8();
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FEB48);
  }
}

unint64_t sub_1BC1E9DD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FEB50;
  if (!qword_1EF3FEB50)
  {
    sub_1BC1E97E0(255, &qword_1EF3FEB38, (void (*)(uint64_t))sub_1BC1E99C8, (void (*)(void))sub_1BC1E9CE4);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C957E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FEB50);
  }
  return result;
}

uint64_t sub_1BC1E9E38(unint64_t a1, uint64_t a2)
{
  return sub_1BC1E658C(a1, a2);
}

uint64_t sub_1BC1E9E40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1E9E64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC1C9814(a1, *(uint64_t (**)(_QWORD, _QWORD))(v2 + 16), a2);
}

uint64_t sub_1BC1E9E6C(unint64_t *a1)
{
  return sub_1BC1E6ED8(a1);
}

unint64_t sub_1BC1E9E74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FEB0;
  if (!qword_1EDA0FEB0)
  {
    sub_1BC1E9F54(255, &qword_1EDA0FEB8, (uint64_t (*)(uint64_t))sub_1BC1E9A80, MEMORY[0x1E0C964B8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C964C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FEB0);
  }
  return result;
}

uint64_t sub_1BC1E9ED8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC1E52CC(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1BC1E9EE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FEB68;
  if (!qword_1EF3FEB68)
  {
    sub_1BC1E9F54(255, (unint64_t *)&unk_1EDA0FEC0, (uint64_t (*)(uint64_t))sub_1BC1CB43C, MEMORY[0x1E0C964B8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C964C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FEB68);
  }
  return result;
}

void sub_1BC1E9F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1E53C0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_1BC1E9F54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v9 = a4(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC1E9FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FBC0;
  if (!qword_1EDA0FBC0)
  {
    sub_1BC1E9F54(255, &qword_1EDA0FBC8, (uint64_t (*)(uint64_t))sub_1BC1CB43C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FBC0);
  }
  return result;
}

uint64_t sub_1BC1EA034(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1BC1C8BF8(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

void sub_1BC1EA040(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC1E55A0(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_1BC1EA048()
{
  return sub_1BC1E5A78();
}

uint64_t sub_1BC1EA060()
{
  return objectdestroy_14Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_14Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t sub_1BC1EA0A4()
{
  return sub_1BC1E5AEC();
}

uint64_t type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FEB98);
}

uint64_t sub_1BC1EA0F4()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1BC1EA16C(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(id *);
  uint64_t v28;
  id v29;

  v27 = a1;
  sub_1BC0E7998(0, &qword_1EF3FED00, type metadata accessor for ScheduleDataSource.DoseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - v6;
  v26 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  v28 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x1E0C80A78](v26);
  v25 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v23 = (uint64_t)&v21 - v10;
  if (a3 >> 62)
    goto LABEL_20;
  v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_1BC2B52D0())
  {
    v12 = MEMORY[0x1E0DEE9D8];
    v24 = a3 & 0xC000000000000001;
    v13 = 4;
    v22 = a3;
    while (1)
    {
      v14 = v24 ? (id)MEMORY[0x1BCCEE950](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      v15 = v14;
      v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      v29 = v14;
      v27(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v26) == 1)
      {
        sub_1BC0F2444((uint64_t)v7, &qword_1EF3FED00, type metadata accessor for ScheduleDataSource.DoseItem);
      }
      else
      {
        v17 = v23;
        sub_1BC0F1B94((uint64_t)v7, v23, type metadata accessor for ScheduleDataSource.DoseItem);
        sub_1BC0F1B94(v17, v25, type metadata accessor for ScheduleDataSource.DoseItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1BC0FA294(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
          v12 = sub_1BC0FA294(v18 > 1, v19 + 1, 1, v12);
        *(_QWORD *)(v12 + 16) = v19 + 1;
        sub_1BC0F1B94(v25, v12+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v19, type metadata accessor for ScheduleDataSource.DoseItem);
        a3 = v22;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1BC1EA458(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v28 = type metadata accessor for Dosage();
  v9 = MEMORY[0x1E0C80A78](v28);
  v27 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v25 = (uint64_t)&v22 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v22 = a3;
  v23 = v14;
  v15 = a3 + v14;
  v26 = v11;
  v16 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v24 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v8, 1, v28) == 1)
    {
      sub_1BC0F2444((uint64_t)v8, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    }
    else
    {
      v18 = v25;
      sub_1BC0F1B94((uint64_t)v8, v25, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC0F1B94(v18, v27, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1BC0F9E08(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
        v17 = sub_1BC0F9E08(v19 > 1, v20 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_1BC0F1B94(v27, v17 + v23 + v20 * v16, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      a1 = v24;
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BC1EA6C4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BC1F031C();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = *(_QWORD *)(*v1 + 16);
  if (v9 == v11)
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
  if (v9 >= v11)
  {
    __break(1u);
  }
  else
  {
    v12 = type metadata accessor for WeekdaysAndDosages(0);
    v13 = v10
        + ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v9;
    v1[1] = v9 + 1;
    v14 = (uint64_t)&v8[*(int *)(v4 + 48)];
    v15 = v1[2];
    result = sub_1BC0FC574(v13, v14, type metadata accessor for WeekdaysAndDosages);
    if (!__OFADD__(v15, 1))
    {
      v1[2] = v15 + 1;
      v16 = (uint64_t)a1 + *(int *)(v4 + 48);
      *a1 = v15;
      sub_1BC0F1B94(v14, v16, type metadata accessor for WeekdaysAndDosages);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1EA808@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BC134FE4(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for WeekdaysAndDosages(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_1BC0F1B94(v10, a2, type metadata accessor for WeekdaysAndDosages);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_1BC2B5318();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_1BC1EA944(unint64_t a1)
{
  char **v1;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1BC135074((uint64_t)v3);
  v4 = *((_QWORD *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[a1 + 32];
      v8 = *v7;
      memmove(v7, v7 + 1, v6);
      *((_QWORD *)v3 + 2) = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC1EAA10(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for Dosage() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BC26E290(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1BC1EF6E4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1BC1EAA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v0 = sub_1BC2B38E4();
  v26 = *(_QWORD *)(v0 - 8);
  v1 = v26;
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v25 - v6;
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v25 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v25 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v25 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v25 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v25 - v20;
  sub_1BC2B3890();
  sub_1BC1EACD8(v16);
  v22 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v22(v13, v19, v0);
  v22(v7, v19, v0);
  v22(v4, v16, v0);
  sub_1BC0E519C(&qword_1EF3FA2A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC18]);
  sub_1BC2B5054();
  sub_1BC2B503C();
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v10, v0);
  v23(v16, v0);
  v23(v19, v0);
  sub_1BC2B5090();
  sub_1BC0E519C(&qword_1EDA0FAB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC08]);
  LOBYTE(v22) = sub_1BC2B4424();
  v23(v19, v0);
  v23(v21, v0);
  return v22 & 1;
}

uint64_t sub_1BC1EACD8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(void);
  uint64_t (*v27)(uint64_t);
  void (*v28)(char *, char *, uint64_t);
  _QWORD v30[2];
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v32 = a1;
  v37 = type metadata accessor for WeekdaysAndDosages(0);
  v1 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v38 = (uint64_t)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC2B38E4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0];
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v30 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v30 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v30 - v15;
  sub_1BC2B3ED8();
  v17 = v40;
  v39 = 0;
  v36 = sub_1BC0E519C(&qword_1EDA0FAC0, v4, MEMORY[0x1E0D2CC20]);
  sub_1BC2B54EC();
  v18 = v5;
  v19 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v31 = v16;
  v19(v14, v16, v3);
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v21 = *(unsigned __int8 *)(v1 + 80);
    v35 = (void (*)(char *, uint64_t, uint64_t))v19;
    v22 = v17 + ((v21 + 32) & ~v21);
    v34 = *(_QWORD *)(v1 + 72);
    v30[1] = v17;
    swift_bridgeObjectRetain();
    v33 = v8;
    v23 = v38;
    do
    {
      sub_1BC0FC574(v22, v23, type metadata accessor for WeekdaysAndDosages);
      v24 = v23 + *(int *)(v37 + 20);
      v25 = v14;
      v26 = MEMORY[0x1E0D2CBF0];
      sub_1BC0E519C(&qword_1EF3FA2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC10]);
      sub_1BC2B4568();
      sub_1BC2B54EC();
      v35(v33, v24, v3);
      v27 = (uint64_t (*)(uint64_t))v26;
      v14 = v25;
      sub_1BC0E519C(&qword_1EF3FA2A8, v27, MEMORY[0x1E0D2CC18]);
      sub_1BC2B5078();
      v23 = v38;
      sub_1BC0E8594(v38, type metadata accessor for WeekdaysAndDosages);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v3);
      v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v28(v25, v11, v3);
      v22 += v34;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  }
  v28(v32, v14, v3);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v31, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1EAFDC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  uint64_t v28;
  _QWORD v29[2];

  v4 = v3;
  v28 = a3;
  v7 = sub_1BC2B2438();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + qword_1EF3FEB88) = 0;
  v11 = (_QWORD *)(v3 + qword_1EF3FEB90);
  v29[0] = sub_1BC2B4460();
  v29[1] = v12;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v13 = v29[0];
  v14 = v29[1];
  swift_retain();
  swift_bridgeObjectRelease();
  *v11 = v13;
  v11[1] = v14;
  *(_QWORD *)(v4 + qword_1EF3FEB70) = a1;
  v27 = a1;
  if (a2)
  {
    v15 = a2;
    v16 = sub_1BC1B4E7C();
    v18 = v17;
    v20 = v19;
    v22 = v21;

  }
  else
  {
    v16 = 0;
    v18 = 0;
    v20 = 0;
    v22 = 0;
  }
  v23 = (uint64_t *)(v4 + qword_1EF3FEB78);
  *v23 = v16;
  v23[1] = v18;
  v23[2] = v20;
  v23[3] = v22;
  *(_QWORD *)(v4 + qword_1EF3FEB80) = v28;
  swift_retain();
  swift_release();
  v29[0] = 0;
  v29[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "MutableArray<");
  HIWORD(v29[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v24 = sub_1BC2B2C00();
  v29[0] = *(_QWORD *)(v24 + qword_1EF3FEB80);
  swift_allocObject();
  swift_weakInit();
  sub_1BC1F104C();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FED18, (uint64_t (*)(uint64_t))sub_1BC1F104C, MEMORY[0x1E0C95FB8]);
  swift_retain();
  swift_retain();
  v25 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v24 + qword_1EF3FEB88) = v25;
  swift_release();

  swift_release();
  swift_release();
  return v24;
}

uint64_t sub_1BC1EB2CC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC1EB320();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1EB320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD *, _QWORD);
  unint64_t *v67;
  unint64_t *v68;
  unint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t (**v115)(char *);
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v133;
  unint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  __int128 v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t *v144;
  uint64_t v145;
  char *v146;
  unsigned int (*v147)(uint64_t *, uint64_t, uint64_t);
  uint64_t v148;
  void (*v149)(char *, uint64_t);
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t *v162;
  _QWORD *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  unint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD v185[5];
  uint64_t v186[2];

  v1 = v0;
  v139 = sub_1BC2B2D50();
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v140 = (char *)&v137 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_1BC2B2BC4();
  v167 = *(_QWORD *)(v168 - 8);
  v3 = MEMORY[0x1E0C80A78](v168);
  v137 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v137 - v5;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v157 = (char *)&v137 - v9;
  v179 = type metadata accessor for DayPickerItem();
  MEMORY[0x1E0C80A78](v179);
  v161 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FECE0, (uint64_t (*)(uint64_t))sub_1BC1F031C, v7);
  v12 = MEMORY[0x1E0C80A78](v11);
  v163 = (char **)((char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v162 = (uint64_t *)((char *)&v137 - v14);
  v184 = sub_1BC2B2438();
  v177 = *(_QWORD *)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  v176 = (char **)((char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1BC2B23F0();
  v173 = *(_QWORD *)(v16 - 8);
  v174 = v16;
  MEMORY[0x1E0C80A78](v16);
  v172 = (uint64_t)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = type metadata accessor for WeekdaysAndDosages(0);
  v160 = *(_QWORD *)(v181 - 8);
  v18 = MEMORY[0x1E0C80A78](v181);
  v155 = (uint64_t)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v159 = (char *)&v137 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v175 = (uint64_t)&v137 - v23;
  v156 = v24;
  MEMORY[0x1E0C80A78](v22);
  v26 = (uint64_t *)((char *)&v137 - v25);
  v27 = sub_1BC2B38E4();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0];
  v29 = *(_QWORD *)(v27 - 8);
  v30 = MEMORY[0x1E0C80A78](v27);
  v154 = (char *)&v137 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v153 = (char *)&v137 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v152 = (char *)&v137 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v151 = (char *)&v137 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v150 = (char *)&v137 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v137 - v41;
  MEMORY[0x1E0C80A78](v40);
  v44 = (char *)&v137 - v43;
  v166 = sub_1BC2B3B48();
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x1E0C80A78](v166);
  v46 = (char *)&v137 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3B3C();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  sub_1BC2B4D24();
  v164 = v46;
  sub_1BC2B3B18();
  sub_1BC1EACD8(v44);
  sub_1BC2B3854();
  sub_1BC0E519C(&qword_1EF3FA2A0, v28, MEMORY[0x1E0D2CC10]);
  sub_1BC2B4568();
  sub_1BC2B4568();
  v47 = v185[0];
  v48 = v186[0];
  v180 = v29;
  v49 = *(void (**)(char *, uint64_t))(v29 + 8);
  v178 = v42;
  v49(v42, v27);
  v182 = v44;
  v50 = v44;
  v51 = v1;
  v158 = v27;
  v149 = v49;
  v49(v50, v27);
  v183 = v1;
  if (v47 == v48)
  {
    sub_1BC1EDD50(v182);
    sub_1BC0E7998(0, &qword_1EF3F9160, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v52 = type metadata accessor for Dosage();
    v53 = *(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80);
    v54 = (v53 + 32) & ~v53;
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1BC2B92D0;
    v56 = v55 + v54;
    v57 = v172;
    sub_1BC2B23E4();
    v58 = v176;
    sub_1BC2B242C();
    v59 = v177;
    v60 = v184;
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v177 + 32))(v56, v58, v184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v173 + 32))(v56 + *(int *)(v52 + 20), v57, v174);
    *(_QWORD *)(v56 + *(int *)(v52 + 24)) = 0x3FF0000000000000;
    sub_1BC2B242C();
    v61 = sub_1BC2B23FC();
    v63 = v62;
    (*(void (**)(_QWORD *, uint64_t))(v59 + 8))(v58, v60);
    *v26 = v61;
    v26[1] = v63;
    v64 = v181;
    (*(void (**)(char *, char *, uint64_t))(v180 + 32))((char *)v26 + *(int *)(v181 + 20), v182, v158);
    *(uint64_t *)((char *)v26 + *(int *)(v64 + 24)) = v55;
    v65 = v175;
    sub_1BC0FC574((uint64_t)v26, v175, type metadata accessor for WeekdaysAndDosages);
    v66 = (void (*)(_QWORD *, _QWORD))sub_1BC2B3ECC();
    v68 = v67;
    v69 = *v67;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v68 = v69;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v69 = sub_1BC0F9DF4(0, *(_QWORD *)(v69 + 16) + 1, 1, v69);
      *v68 = v69;
    }
    v72 = *(_QWORD *)(v69 + 16);
    v71 = *(_QWORD *)(v69 + 24);
    if (v72 >= v71 >> 1)
    {
      v69 = sub_1BC0F9DF4(v71 > 1, v72 + 1, 1, v69);
      *v68 = v69;
    }
    *(_QWORD *)(v69 + 16) = v72 + 1;
    sub_1BC0F1B94(v65, v69+ ((*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80))+ *(_QWORD *)(v160 + 72) * v72, type metadata accessor for WeekdaysAndDosages);
    v66(v185, 0);
    sub_1BC0E8594((uint64_t)v26, type metadata accessor for WeekdaysAndDosages);
    v51 = v183;
  }
  sub_1BC2B3ED8();
  v185[1] = 0;
  v185[2] = 0;
  v148 = qword_1EF3FEB70;
  v73 = qword_1EF3FEB78;
  v74 = qword_1EF3FEB90;
  v75 = v163;
  sub_1BC1EA6C4(v163);
  v76 = v162;
  sub_1BC1F046C((uint64_t)v75, (uint64_t)v162, &qword_1EF3FECE0, (uint64_t (*)(uint64_t))sub_1BC1F031C);
  sub_1BC1F031C();
  v78 = v77;
  v147 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48);
  if (v147(v76, 1, v77) == 1)
  {
    v79 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v144 = (uint64_t *)(v51 + v73);
    v143 = (uint64_t *)(v51 + v74);
    v79 = MEMORY[0x1E0DEE9D8];
    v142 = 0x80000001BC2D12E0;
    v141 = xmmword_1BC2B92D0;
    v91 = (uint64_t)v161;
    v92 = (uint64_t)v159;
    v146 = v6;
    v145 = v78;
    do
    {
      v177 = v79;
      v184 = *v76;
      sub_1BC0F1B94((uint64_t)v76 + *(int *)(v78 + 48), v92, type metadata accessor for WeekdaysAndDosages);
      v186[0] = 0;
      v186[1] = 0xE000000000000000;
      sub_1BC2B51BC();
      swift_bridgeObjectRelease();
      strcpy((char *)v186, "DayPickerItem-");
      HIBYTE(v186[1]) = -18;
      v93 = v92;
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      v175 = v186[1];
      v176 = (_QWORD *)v186[0];
      v94 = v92 + *(int *)(v181 + 20);
      v95 = *(void (**)(char *, uint64_t, uint64_t))(v180 + 16);
      v96 = v158;
      v95(v182, v94, v158);
      v97 = v150;
      sub_1BC1EACD8(v150);
      v98 = (char *)v91;
      v95(v151, (uint64_t)v97, v96);
      v95(v153, (uint64_t)v97, v96);
      v95(v154, v94, v96);
      sub_1BC0E519C(&qword_1EF3FA2A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC18]);
      v99 = v152;
      sub_1BC2B5054();
      sub_1BC2B503C();
      v100 = v149;
      v149(v99, v96);
      v100(v97, v96);
      v101 = v165;
      v102 = (uint64_t)v157;
      v103 = v166;
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v157, v164, v166);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v102, 0, 1, v103);
      v104 = swift_allocObject();
      swift_weakInit();
      v105 = v155;
      sub_1BC0FC574(v92, v155, type metadata accessor for WeekdaysAndDosages);
      v106 = (*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
      v107 = swift_allocObject();
      v108 = v184;
      *(_QWORD *)(v107 + 16) = v104;
      *(_QWORD *)(v107 + 24) = v108;
      sub_1BC0F1B94(v105, v107 + v106, type metadata accessor for WeekdaysAndDosages);
      type metadata accessor for DayPickerCollectionViewCell();
      sub_1BC0E519C(&qword_1EF3FECD0, (uint64_t (*)(uint64_t))type metadata accessor for DayPickerCollectionViewCell, (uint64_t)&unk_1BC2C5304);
      swift_retain();
      v109 = sub_1BC2B2930();
      v111 = v110;
      v112 = v175;
      *(_QWORD *)v98 = v176;
      *((_QWORD *)v98 + 1) = v112;
      v113 = (int *)v179;
      v114 = *(void (**)(char *, char *, uint64_t))(v180 + 32);
      v114(&v98[*(int *)(v179 + 20)], v182, v96);
      v114(&v98[v113[6]], v178, v96);
      sub_1BC1F046C(v102, (uint64_t)&v98[v113[7]], &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
      swift_release();
      v115 = (uint64_t (**)(char *))&v98[v113[8]];
      *v115 = sub_1BC1F042C;
      v115[1] = (uint64_t (*)(char *))v107;
      v116 = (uint64_t *)&v98[v113[9]];
      *v116 = v109;
      v116[1] = v111;
      v117 = *(_QWORD *)(v93 + *(int *)(v181 + 24));
      v118 = v183;
      v176 = *(_QWORD **)(v183 + v148);
      v119 = *v144;
      v174 = v144[1];
      v175 = v119;
      v120 = v144[2];
      v172 = v144[3];
      v173 = v120;
      v121 = swift_allocObject();
      swift_weakInit();
      v122 = swift_allocObject();
      v171 = v122;
      v170 = v121;
      v123 = v184;
      *(_QWORD *)(v122 + 16) = v121;
      *(_QWORD *)(v122 + 24) = v123;
      v124 = swift_allocObject();
      *(_QWORD *)(v124 + 16) = v118;
      *(_QWORD *)(v124 + 24) = v123;
      v125 = swift_allocObject();
      swift_weakInit();
      v126 = swift_allocObject();
      *(_QWORD *)(v126 + 16) = v125;
      *(_QWORD *)(v126 + 24) = v123;
      v127 = swift_allocObject();
      swift_weakInit();
      v128 = swift_allocObject();
      *(_QWORD *)(v128 + 16) = v127;
      *(_QWORD *)(v128 + 24) = v123;
      v129 = v143[1];
      v169 = *v143;
      v186[0] = 0;
      v186[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BC2B51BC();
      swift_bridgeObjectRelease();
      v185[4] = v123;
      v186[0] = 0xD000000000000011;
      v186[1] = v142;
      sub_1BC2B539C();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      v176 = sub_1BC1B6880(v176, v175, v174, v173, v172, (uint64_t)sub_1BC1ECC50, 0, (uint64_t)sub_1BC1F04E8, v171, (uint64_t)sub_1BC1F04F0, v124, (uint64_t)sub_1BC1F04F8, v126, (uint64_t)sub_1BC1F0500, v128, v169, v129, v186[0], v186[1],
               v117);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v91 = (uint64_t)v161;
      swift_release();
      v130 = v146;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v131 = swift_allocObject();
      *(_OWORD *)(v131 + 16) = v141;
      *(_QWORD *)(v131 + 56) = v179;
      *(_QWORD *)(v131 + 64) = sub_1BC0E519C(&qword_1EF3FECF8, (uint64_t (*)(uint64_t))type metadata accessor for DayPickerItem, (uint64_t)&unk_1BC2C5390);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v131 + 32));
      sub_1BC0FC574(v91, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for DayPickerItem);
      v186[0] = v131;
      sub_1BC130FBC((uint64_t)v176);
      v186[0] = v123;
      sub_1BC2B539C();
      sub_1BC2B2BAC();
      v79 = v177;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v79 = sub_1BC0FA280(0, *(_QWORD *)(v79 + 16) + 1, 1, v79);
      v134 = *(_QWORD *)(v79 + 16);
      v133 = *(_QWORD *)(v79 + 24);
      v92 = (uint64_t)v159;
      v78 = v145;
      if (v134 >= v133 >> 1)
        v79 = sub_1BC0FA280(v133 > 1, v134 + 1, 1, v79);
      *(_QWORD *)(v79 + 16) = v134 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v167 + 32))(v79+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(_QWORD *)(v167 + 72) * v134, v130, v168);
      sub_1BC0E8594(v91, (uint64_t (*)(_QWORD))type metadata accessor for DayPickerItem);
      sub_1BC0E8594(v92, type metadata accessor for WeekdaysAndDosages);
      v135 = v163;
      sub_1BC1EA6C4(v163);
      v76 = v162;
      sub_1BC1F046C((uint64_t)v135, (uint64_t)v162, &qword_1EF3FECE0, (uint64_t (*)(uint64_t))sub_1BC1F031C);
    }
    while (v147(v76, 1, v78) != 1);
  }
  swift_bridgeObjectRelease();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v80 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC1EAA90();
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for ButtonBackgroundColorCell(0);
  swift_retain();
  sub_1BC2B2930();
  v136 = v81;
  v82 = v140;
  sub_1BC2B2D44();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_1BC2B92D0;
  v84 = v139;
  *(_QWORD *)(v83 + 56) = v139;
  *(_QWORD *)(v83 + 64) = sub_1BC0E519C(&qword_1EF3FECF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B2F8], MEMORY[0x1E0D2B2E8]);
  v85 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v83 + 32));
  v86 = v138;
  (*(void (**)(uint64_t *, char *, uint64_t))(v138 + 16))(v85, v82, v84);
  v87 = v137;
  sub_1BC2B2BAC();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v79 = sub_1BC0FA280(0, *(_QWORD *)(v79 + 16) + 1, 1, v79);
  v89 = *(_QWORD *)(v79 + 16);
  v88 = *(_QWORD *)(v79 + 24);
  if (v89 >= v88 >> 1)
    v79 = sub_1BC0FA280(v88 > 1, v89 + 1, 1, v79);
  *(_QWORD *)(v79 + 16) = v89 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v167 + 32))(v79+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(_QWORD *)(v167 + 72) * v89, v87, v168);
  sub_1BC2B2C18();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v140, v84);
  return (*(uint64_t (**)(char *, uint64_t))(v165 + 8))(v164, v166);
}

uint64_t sub_1BC1EC690(char *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(_QWORD *, _QWORD);
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *, _QWORD);
  uint64_t (*v35)(uint64_t);
  char v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  _QWORD v49[4];

  v43 = a4;
  v46 = a1;
  v45 = type metadata accessor for WeekdaysAndDosages(0);
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B38E4();
  v44 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v38 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v38 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v38 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v48 = (char *)&v38 - v22;
  MEMORY[0x1E0C80A78](v21);
  v47 = (char *)&v38 - v23;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v25 = result;
    v41 = qword_1EF3FEB80;
    v26 = *(void (**)(_QWORD *, _QWORD))(result + qword_1EF3FEB80);
    sub_1BC2B3ED8();
    if ((a3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v26 = (void (*)(_QWORD *, _QWORD))v49[0];
      if (*(_QWORD *)(v49[0] + 16) > a3)
      {
        v39 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        v40 = a3;
        v38 = *(_QWORD *)(v5 + 72) * a3;
        sub_1BC0FC574(v49[0] + v39 + v38, (uint64_t)v7, type metadata accessor for WeekdaysAndDosages);
        swift_bridgeObjectRelease();
        v27 = &v7[*(int *)(v45 + 20)];
        v42 = v25;
        v28 = v44;
        v29 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v30 = v47;
        v29(v47, v27, v8);
        sub_1BC0E8594((uint64_t)v7, type metadata accessor for WeekdaysAndDosages);
        v31 = v46;
        v29(v20, v46, v8);
        v29(v14, v31, v8);
        v29((char *)v11, v30, v8);
        sub_1BC0E519C(&qword_1EF3FA2A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC18]);
        sub_1BC2B5054();
        sub_1BC2B503C();
        a3 = *(_QWORD *)(v28 + 8);
        ((void (*)(char *, uint64_t))a3)(v17, v8);
        sub_1BC1DCEF4();
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_1BC2B92D0;
        v49[0] = 0;
        v49[1] = 0xE000000000000000;
        swift_retain();
        sub_1BC2B51BC();
        swift_bridgeObjectRelease();
        strcpy((char *)v49, "DayPickerItem-");
        HIBYTE(v49[1]) = -18;
        swift_bridgeObjectRetain();
        sub_1BC2B44FC();
        swift_bridgeObjectRelease();
        v33 = v49[1];
        *(_QWORD *)(v32 + 32) = v49[0];
        *(_QWORD *)(v32 + 40) = v33;
        v34 = (void (*)(_QWORD *, _QWORD))sub_1BC2B2C48();
        sub_1BC199AD4();
        sub_1BC2B3CF8();
        swift_bridgeObjectRelease();
        v34(v49, 0);
        swift_release();
        sub_1BC1EACD8(v17);
        v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0];
        sub_1BC0E519C(&qword_1EF3FA2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC10]);
        sub_1BC2B4568();
        sub_1BC0E519C(&qword_1EDA0FAC0, v35, MEMORY[0x1E0D2CC20]);
        sub_1BC2B54EC();
        sub_1BC2B5048();
        ((void (*)(char *, uint64_t))a3)(v17, v8);
        sub_1BC2B5090();
        sub_1BC0E519C(&qword_1EDA0FAB8, v35, MEMORY[0x1E0D2CC08]);
        LOBYTE(v29) = sub_1BC2B4424();
        ((void (*)(char *, uint64_t))a3)(v17, v8);
        ((void (*)(char *, uint64_t))a3)(v20, v8);
        if ((v29 & 1) == 0
          || (sub_1BC2B5090(), v36 = sub_1BC2B4424(),
                               ((void (*)(char *, uint64_t))a3)(v20, v8),
                               (v36 & 1) != 0))
        {
          type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
          sub_1BC2B2A2C();
          swift_release();
          ((void (*)(char *, uint64_t))a3)(v48, v8);
          return ((uint64_t (*)(char *, uint64_t))a3)(v47, v8);
        }
        v7 = v46;
        v26 = (void (*)(_QWORD *, _QWORD))sub_1BC2B3ECC();
        v11 = v37;
        v14 = (char *)*v37;
        result = swift_isUniquelyReferenced_nonNull_native();
        *v11 = (uint64_t)v14;
        if ((result & 1) != 0)
          goto LABEL_8;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_13:
    result = sub_1BC134FE4((unint64_t)v14);
    v14 = (char *)result;
    *v11 = result;
LABEL_8:
    if (*((_QWORD *)v14 + 2) <= v40)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 24))(&v14[v39 + v38 + *(int *)(v45 + 20)], v7, v8);
      v26(v49, 0);
      ((void (*)(char *, uint64_t))a3)(v48, v8);
      ((void (*)(char *, uint64_t))a3)(v47, v8);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BC1ECC50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1BC0FC574(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
}

uint64_t sub_1BC1ECC74(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char *v28;
  uint64_t v29;
  char **v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44[4];

  v43 = a2;
  v42 = type metadata accessor for Dosage();
  v2 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WeekdaysAndDosages(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v7);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t)&v38 - v12;
  v14 = sub_1BC2B23F0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v38 - v19;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v40 = v20;
  if (!Strong)
    goto LABEL_9;
  v22 = v2;
  v2 = *(_QWORD *)(Strong + qword_1EF3FEB80);
  swift_retain();
  swift_release();
  sub_1BC2B3ED8();
  swift_release();
  if ((v43 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(_QWORD *)(v44[0] + 16) <= v43)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1BC0FC574(v44[0]+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v43, (uint64_t)v6, type metadata accessor for WeekdaysAndDosages);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)&v6[*(int *)(v39 + 24)];
  swift_bridgeObjectRetain();
  sub_1BC0E8594((uint64_t)v6, type metadata accessor for WeekdaysAndDosages);
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v2 = v22;
    sub_1BC0FC574(v23+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * (v24 - 1), (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v25 = 0;
  }
  else
  {
    v25 = 1;
    v2 = v22;
  }
  v26 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, v25, 1, v42);
  swift_bridgeObjectRelease();
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v26);
  v20 = v40;
  if (v27 == 1)
  {
    sub_1BC0F2444((uint64_t)v10, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
LABEL_9:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_10:
    sub_1BC2B23E4();
    sub_1BC0F2444(v13, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, &v10[*(int *)(v26 + 20)], v14);
  sub_1BC0E8594((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  sub_1BC2B233C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_10;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v20, v13, v14);
LABEL_11:
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  swift_retain();
  swift_release();
  v28 = v41;
  v29 = v42;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(&v41[*(int *)(v42 + 20)], v20, v14);
  sub_1BC2B242C();
  *(_QWORD *)&v28[*(int *)(v29 + 24)] = 0x3FF0000000000000;
  v6 = (char *)sub_1BC2B3ECC();
  v22 = (unint64_t)v30;
  v18 = *v30;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v22 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    v32 = v43;
    if ((v43 & 0x8000000000000000) == 0)
      goto LABEL_14;
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_24:
  v18 = (char *)sub_1BC134FE4((unint64_t)v18);
  *(_QWORD *)v22 = v18;
  v32 = v43;
  if ((v43 & 0x8000000000000000) != 0)
    goto LABEL_25;
LABEL_14:
  if (*((_QWORD *)v18 + 2) <= v32)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v10 = (char *)v2;
  v22 = (unint64_t)&v18[((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))
                             + *(_QWORD *)(v38 + 72) * v32];
  v13 = *(int *)(v39 + 24);
  v2 = *(_QWORD *)(v22 + v13);
  v33 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v22 + v13) = v2;
  if ((v33 & 1) == 0)
  {
LABEL_27:
    v2 = sub_1BC0F9E08(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
    *(_QWORD *)(v22 + v13) = v2;
  }
  v35 = *(_QWORD *)(v2 + 16);
  v34 = *(_QWORD *)(v2 + 24);
  if (v35 >= v34 >> 1)
  {
    v2 = sub_1BC0F9E08(v34 > 1, v35 + 1, 1, v2);
    *(_QWORD *)(v22 + v13) = v2;
  }
  v20 = v40;
  v36 = (uint64_t)v41;
  *(_QWORD *)(v2 + 16) = v35 + 1;
  sub_1BC0F1B94(v36, v2 + ((v10[80] + 32) & ~(unint64_t)v10[80]) + *((_QWORD *)v10 + 9) * v35, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  ((void (*)(uint64_t *, _QWORD))v6)(v44, 0);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
}

uint64_t sub_1BC1ED21C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t result;
  void *v27;
  _QWORD *v28;
  void *v29;
  char *v30;
  uint64_t (*v31)(uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *aBlock[7];
  uint64_t v45;

  v8 = sub_1BC2B42E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B4304();
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for WeekdaysAndDosages(0);
  v13 = *(_QWORD *)(v43 - 8);
  v14 = MEMORY[0x1E0C80A78](v43);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v34 - v17;
  v37 = a3;
  sub_1BC2B3ED8();
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(v45 + 16) <= a4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v35 = v9;
  v36 = v8;
  v42 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = *(_QWORD *)(v13 + 72) * a4;
  sub_1BC0FC574(v45 + v42 + v19, (uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
  v20 = swift_bridgeObjectRelease();
  v21 = *(_QWORD *)&v18[*(int *)(v43 + 24)];
  MEMORY[0x1E0C80A78](v20);
  *(&v34 - 2) = a1;
  *(&v34 - 1) = a2;
  swift_bridgeObjectRetain();
  v22 = (_QWORD *)sub_1BC1EA458((void (*)(_QWORD))sub_1BC1F0FF4, (uint64_t)(&v34 - 4), v21);
  swift_bridgeObjectRelease();
  sub_1BC0E8594((uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
  aBlock[0] = v22;
  swift_bridgeObjectRetain();
  sub_1BC1EAA10(aBlock);
  swift_bridgeObjectRelease();
  v23 = aBlock[0];
  sub_1BC2B3ED8();
  if (aBlock[0][2] <= a4)
  {
LABEL_10:
    __break(1u);
    result = swift_release();
    __break(1u);
    return result;
  }
  sub_1BC0FC574((uint64_t)aBlock[0] + v42 + v19, (uint64_t)v16, type metadata accessor for WeekdaysAndDosages);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)&v16[*(int *)(v43 + 24)];
  swift_bridgeObjectRetain();
  sub_1BC0E8594((uint64_t)v16, type metadata accessor for WeekdaysAndDosages);
  v25 = sub_1BC16D344((uint64_t)v23, v24);
  swift_bridgeObjectRelease();
  if (v25)
    return swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v27 = (void *)sub_1BC2B4A0C();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v37;
  v28[3] = a4;
  v28[4] = v23;
  aBlock[4] = sub_1BC1F1038;
  aBlock[5] = v28;
  aBlock[0] = (_QWORD *)MEMORY[0x1E0C809B0];
  aBlock[1] = (_QWORD *)1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_19;
  v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v30 = v38;
  sub_1BC2B42F8();
  aBlock[0] = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v31, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  v32 = v41;
  v33 = v36;
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v30, v32, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v30, v40);
}

uint64_t sub_1BC1ED644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7;

  type metadata accessor for DosageItem(0);
  if ((sub_1BC2B2414() & 1) != 0)
    return sub_1BC118700(a2, a3, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  sub_1BC0FC574(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  v7 = type metadata accessor for Dosage();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a3, 0, 1, v7);
}

uint64_t sub_1BC1ED6F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, _QWORD);
  unint64_t *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRetain();
  v5 = (uint64_t (*)(uint64_t *, _QWORD))sub_1BC2B3ECC();
  v7 = v6;
  v8 = *v6;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v8;
  if ((result & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = sub_1BC134FE4(v8);
  v8 = result;
  *v7 = result;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v8 + 16) > a2)
  {
    v10 = type metadata accessor for WeekdaysAndDosages(0);
    *(_QWORD *)(v8
              + ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))
              + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a2
              + *(int *)(v10 + 24)) = a3;
    swift_bridgeObjectRelease();
    return v5(&v11, 0);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BC1ED7D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  void (*v7)(_BYTE *, _QWORD);
  unint64_t *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  _BYTE v14[32];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    v6 = swift_release();
    MEMORY[0x1E0C80A78](v6);
    v7 = (void (*)(_BYTE *, _QWORD))sub_1BC2B3ECC();
    v9 = v8;
    v10 = *v8;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v9 = v10;
    if ((result & 1) != 0)
    {
      if ((a4 & 0x8000000000000000) == 0)
        goto LABEL_4;
    }
    else
    {
      result = sub_1BC134FE4(v10);
      v10 = result;
      *v9 = result;
      if ((a4 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (*(_QWORD *)(v10 + 16) > a4)
        {
          v11 = type metadata accessor for WeekdaysAndDosages(0);
          v12 = v10
              + ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))
              + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a4
              + *(int *)(v11 + 24);
          result = sub_1BC1F0508((uint64_t (*)(unint64_t))sub_1BC1F0FC4);
          v13 = *(_QWORD *)(*(_QWORD *)v12 + 16);
          if (v13 >= result)
          {
            sub_1BC137F30(result, v13);
            v7(v14, 0);
            return swift_release();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1BC1ED940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v9;
  char v10;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v9 = type metadata accessor for DosageItem(0);
    v10 = sub_1BC1F0810(a6, a1 + *(int *)(v9 + 28), a2);
    swift_release();
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1BC1ED9D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD);
  unint64_t *v31;
  unint64_t *v32;
  unint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[32];

  v0 = sub_1BC2B2438();
  v44 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC2B23F0();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B38E4();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WeekdaysAndDosages(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (_QWORD *)((char *)v37 - v14);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v17 = result;
    v39 = v10;
    sub_1BC1EDD50(v8);
    sub_1BC0E7998(0, &qword_1EF3F9160, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = type metadata accessor for Dosage();
    v37[1] = v17;
    v19 = v18;
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = swift_allocObject();
    v38 = v13;
    v23 = v22;
    *(_OWORD *)(v22 + 16) = xmmword_1BC2B92D0;
    v24 = v22 + v21;
    sub_1BC2B23E4();
    sub_1BC2B242C();
    v25 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v24, v2, v0);
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v24 + *(int *)(v19 + 20), v5, v41);
    *(_QWORD *)(v24 + *(int *)(v19 + 24)) = 0x3FF0000000000000;
    sub_1BC2B242C();
    v26 = sub_1BC2B23FC();
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v2, v0);
    *v15 = v26;
    v15[1] = v28;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))((char *)v15 + *(int *)(v9 + 20), v8, v43);
    *(uint64_t *)((char *)v15 + *(int *)(v9 + 24)) = v23;
    v29 = (uint64_t)v38;
    sub_1BC0FC574((uint64_t)v15, (uint64_t)v38, type metadata accessor for WeekdaysAndDosages);
    v30 = (void (*)(char *, _QWORD))sub_1BC2B3ECC();
    v32 = v31;
    v33 = *v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v32 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v33 = sub_1BC0F9DF4(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
      *v32 = v33;
    }
    v36 = *(_QWORD *)(v33 + 16);
    v35 = *(_QWORD *)(v33 + 24);
    if (v36 >= v35 >> 1)
    {
      v33 = sub_1BC0F9DF4(v35 > 1, v36 + 1, 1, v33);
      *v32 = v33;
    }
    *(_QWORD *)(v33 + 16) = v36 + 1;
    sub_1BC0F1B94(v29, v33+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v36, type metadata accessor for WeekdaysAndDosages);
    v30(v45, 0);
    sub_1BC0E8594((uint64_t)v15, type metadata accessor for WeekdaysAndDosages);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1EDD50@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;

  v50 = a1;
  v1 = sub_1BC2B2594();
  v53 = *(_QWORD *)(v1 - 8);
  v54 = v1;
  MEMORY[0x1E0C80A78](v1);
  v52 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)&v49 - v5;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], v3);
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v49 - v7;
  v8 = sub_1BC2B38E4();
  v51 = *(_QWORD *)(v8 - 8);
  v9 = v51;
  v10 = MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v49 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v49 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v49 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v49 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v49 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v49 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v49 - v30;
  sub_1BC2B3890();
  sub_1BC1EACD8(v26);
  v32 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v32(v23, v29, v8);
  v32(v17, v29, v8);
  v32(v14, v26, v8);
  sub_1BC0E519C(&qword_1EF3FA2A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC18]);
  sub_1BC2B5054();
  v33 = v31;
  v34 = v51;
  sub_1BC2B503C();
  v35 = *(void (**)(char *, uint64_t))(v34 + 8);
  v35(v20, v8);
  v35(v26, v8);
  v35(v29, v8);
  v36 = v52;
  sub_1BC2B2564();
  v37 = sub_1BC2B3824();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v54);
  v38 = *(_QWORD *)(v37 + 16);
  v39 = sub_1BC2B3848();
  v40 = *(_QWORD *)(v39 - 8);
  if (v38)
  {
    v41 = (uint64_t)v55;
    (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v55, v37 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v39);
    v42 = 0;
  }
  else
  {
    v42 = 1;
    v41 = (uint64_t)v55;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v41, v42, 1, v39);
  swift_bridgeObjectRelease();
  v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v39);
  v44 = (uint64_t)v56;
  if (v43 == 1)
  {
    sub_1BC0F2444(v41, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
    v45 = 1;
  }
  else
  {
    sub_1BC2B3830();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
    v45 = 0;
  }
  v46 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v44, v45, 1, v8);
  v47 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v47(v46, v33, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v44, 1, v8) == 1)
  {
    v47(v50, v46, v8);
    return sub_1BC0F2444(v44, (unint64_t *)&qword_1EDA0FAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0]);
  }
  else
  {
    v35(v46, v8);
    return ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v50, v44, v8);
  }
}

void sub_1BC1EE1B4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1EE1E0()
{
  uint64_t v0;

  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF3FEB78), *(_QWORD *)(v0 + qword_1EF3FEB78 + 8));
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1EE248()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();

  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF3FEB78), *(_QWORD *)(v0 + qword_1EF3FEB78 + 8));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1EE2D0()
{
  return type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
}

uint64_t type metadata accessor for ButtonBackgroundColorCell(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF3FEBE8);
}

uint64_t sub_1BC1EE2EC()
{
  return swift_initClassMetadata2();
}

id sub_1BC1EE32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v34 = (char *)&v31 - v1;
  v2 = sub_1BC2B4DFC();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B4DCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B4E68();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC2B4EC8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B4EB0();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DC3190], v9);
  sub_1BC2B4DC0();
  v17 = v5;
  v18 = v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DC3060], v17);
  sub_1BC2B4DD8();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v4, *MEMORY[0x1E0DC30D0], v33);
  sub_1BC2B4E14();
  v19 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v20 = v34;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v34, v18, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  sub_1BC2B4EEC();
  objc_msgSend(v19, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  v21 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  objc_msgSend(v19, sel_setTintColor_, v21);

  v22 = objc_msgSend(v19, sel_titleLabel);
  objc_msgSend(v22, sel_setAdjustsFontForContentSizeCategory_, 1);

  v23 = objc_msgSend(v19, sel_titleLabel);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    objc_msgSend(v24, sel_setFont_, v25);

  }
  v26 = objc_msgSend(v19, sel_titleLabel);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, sel_setTextAlignment_, 1);

  }
  v28 = objc_msgSend(v19, sel_titleLabel);
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v28, sel_setNumberOfLines_, 1);

  }
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  return v19;
}

id sub_1BC1EE6E0(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ButtonBackgroundColorCell(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_1BC1EE728()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonBackgroundColorCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1EE75C()
{
  return type metadata accessor for ButtonBackgroundColorCell(0);
}

uint64_t *sub_1BC1EE764(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC2B38E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BC1EE820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BC2B38E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BC1EE87C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B38E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BC1EE90C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B38E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BC1EE9AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B38E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1BC1EEA24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B38E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1EEAAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1EEAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B38E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BC1EEB34()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1EEB40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC2B38E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WeekdaysAndDosages(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FEC90);
}

uint64_t sub_1BC1EEBC8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B38E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC1EEC48()
{
  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  sub_1BC2B4994();
  type metadata accessor for DayPickerCollectionViewCell();
  sub_1BC0E519C(&qword_1EF3FECD0, (uint64_t (*)(uint64_t))type metadata accessor for DayPickerCollectionViewCell, (uint64_t)&unk_1BC2C5304);
  sub_1BC2B497C();
  type metadata accessor for DosageCollectionViewCell(0);
  sub_1BC0E519C(&qword_1EF3FD968, type metadata accessor for DosageCollectionViewCell, (uint64_t)&protocol conformance descriptor for DosageCollectionViewCell);
  sub_1BC2B497C();
  sub_1BC2B3038();
  sub_1BC2B497C();
  type metadata accessor for ButtonBackgroundColorCell(0);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1EED3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t result;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _QWORD *v37;

  v5 = v4;
  v37 = v5;
  v10 = *v5;
  v11 = sub_1BC2B2600();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B4460() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      v18 = sub_1BC2B296C();
      v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a4[3] = v18;
      a4[4] = sub_1BC0E519C(&qword_1EF3F8B68, v19, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a4);
      return sub_1BC2B2960();
    }
  }
  v35 = v10;
  v36 = a4;
  sub_1BC2B25F4();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v21 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v22 = sub_1BC2B2144();
  v24 = v23;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v25 = sub_1BC2B25F4() != 0;
  v26 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v11);
  v27 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v27, v14, v11);
  *(_QWORD *)(v29 + v28) = v35;
  type metadata accessor for ScheduleHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC418, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleHeaderCell, (uint64_t)&unk_1BC2B9D04);
  swift_retain();
  v30 = sub_1BC2B2930();
  v32 = v31;
  sub_1BC2B2930();
  swift_release();
  swift_bridgeObjectRelease();
  v33 = v36;
  v36[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  v33[4] = sub_1BC184A54();
  result = swift_allocObject();
  *v33 = result;
  *(_QWORD *)(result + 16) = v22;
  *(_QWORD *)(result + 24) = v24;
  *(_BYTE *)(result + 32) = v25;
  *(_QWORD *)(result + 40) = sub_1BC1EF66C;
  *(_QWORD *)(result + 48) = v29;
  *(_QWORD *)(result + 56) = v30;
  *(_QWORD *)(result + 64) = v32;
  return result;
}

uint64_t sub_1BC1EF070(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t *, _QWORD);
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[4];
  uint64_t v32;

  v3 = sub_1BC2B2600();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B39E0();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FECD8, type metadata accessor for WeekdaysAndDosages, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  swift_beginAccess();
  if (!swift_weakLoadStrong()
    || (swift_retain(),
        swift_release(),
        sub_1BC2B3ED8(),
        swift_release(),
        v13 = *(_QWORD *)(v31[0] + 16),
        swift_bridgeObjectRelease(),
        v14 = sub_1BC2B25F4(),
        v14 < 0)
    || v14 >= v13)
  {
    sub_1BC2B39A4();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    v18 = sub_1BC2B39D4();
    v19 = sub_1BC2B48C8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v31[0] = v21;
      *(_DWORD *)v20 = 136446466;
      v22 = sub_1BC2B54F8();
      v28 = v3;
      v32 = sub_1BC12540C(v22, v23, v31);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2050;
      v24 = sub_1BC2B25F4();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
      v32 = v24;
      sub_1BC2B4FD0();
      _os_log_impl(&dword_1BC0DC000, v18, v19, "%{public}s Attempting to remove out of bounds section: %{public}ld ", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v21, -1, -1);
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v30);
  }
  else
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      v15 = sub_1BC2B25F4();
      v16 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3ECC();
      sub_1BC1EA808(v15, (uint64_t)v12);
      v16(v31, 0);
      swift_release();
      v17 = type metadata accessor for WeekdaysAndDosages(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 0, 1, v17);
    }
    else
    {
      v26 = type metadata accessor for WeekdaysAndDosages(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
    }
    return sub_1BC0F2444((uint64_t)v12, &qword_1EF3FECD8, type metadata accessor for WeekdaysAndDosages);
  }
}

uint64_t sub_1BC1EF444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1BC1EED3C(a1, a2, a3, a4);
}

uint64_t sub_1BC1EF464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  void *v6;
  uint64_t v7;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B2DD4();
  type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
  result = sub_1BC2B2A50();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 == result - 1)
      sub_1BC2B2CC0();
    else
      sub_1BC2B2C9C();
    sub_1BC2B2DC8();
    v6 = (void *)sub_1BC2B2D14();
    swift_unknownObjectRelease();
    sub_1BC2B4AE4();
    objc_msgSend(v6, sel_setContentInsets_);
    objc_msgSend(v6, sel_contentInsets);
    objc_msgSend(v6, sel_setContentInsets_);
    objc_msgSend(v6, sel_setContentInsetsReference_, 1);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_1BC1EF5A8()
{
  return sub_1BC1EF464();
}

uint64_t sub_1BC1EF5C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1EF5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC2B2600();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC1EF66C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B2600() - 8) + 80);
  return sub_1BC1EF070(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1BC1EF6B0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1EF6E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v133 = type metadata accessor for Dosage();
  v126 = *(_QWORD *)(v133 - 8);
  v3 = MEMORY[0x1E0C80A78](v133);
  v123 = (uint64_t)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v134 = (uint64_t)&v119 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v131 = (uint64_t)&v119 - v8;
  MEMORY[0x1E0C80A78](v7);
  v130 = (uint64_t)&v119 - v9;
  v10 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v10)
  {
    if (v10 < 0)
      goto LABEL_139;
    if (v10)
      return sub_1BC1F00E0(0, v10, 1, a1);
    return result;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_147;
  v132 = a1;
  v121 = result;
  v127 = v1;
  if (v10 < 2)
  {
    v16 = (char *)MEMORY[0x1E0DEE9D8];
    v125 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
    v120 = MEMORY[0x1E0DEE9D8];
    if (v10 != 1)
    {
      v18 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_105:
      v111 = v16;
      if (v18 >= 2)
      {
        v112 = *v132;
        do
        {
          v113 = v18 - 2;
          if (v18 < 2)
            goto LABEL_134;
          if (!v112)
            goto LABEL_146;
          v114 = *(_QWORD *)&v111[16 * v113 + 32];
          v115 = *(_QWORD *)&v111[16 * v18 + 24];
          v116 = v127;
          sub_1BC1B9BE4(v112 + *(_QWORD *)(v126 + 72) * v114, v112 + *(_QWORD *)(v126 + 72) * *(_QWORD *)&v111[16 * v18 + 16], v112 + *(_QWORD *)(v126 + 72) * v115, v125);
          v127 = v116;
          if (v116)
            break;
          if (v115 < v114)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_1BC26E1A0((uint64_t)v111);
          if (v113 >= *((_QWORD *)v111 + 2))
            goto LABEL_136;
          v117 = &v111[16 * v113 + 32];
          *(_QWORD *)v117 = v114;
          *((_QWORD *)v117 + 1) = v115;
          v118 = *((_QWORD *)v111 + 2);
          if (v18 > v118)
            goto LABEL_137;
          memmove(&v111[16 * v18 + 16], &v111[16 * v18 + 32], 16 * (v118 - v18));
          *((_QWORD *)v111 + 2) = v118 - 1;
          v18 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_1BC2B45F8();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v126 + 80);
    v120 = v14;
    v125 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }
    v21 = *v132;
    v22 = *(_QWORD *)(v126 + 72);
    v23 = v130;
    sub_1BC0FC574(*v132 + v22 * v20, v130, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v24 = v21 + v22 * v17;
    v25 = v131;
    sub_1BC0FC574(v24, v131, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    LODWORD(v129) = sub_1BC2B2378();
    sub_1BC0E8594(v25, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    sub_1BC0E8594(v23, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v17 = v19 + 2;
    v128 = v21;
    v135 = v22;
    if (v19 + 2 >= v10)
      goto LABEL_21;
    v124 = v19;
    v26 = v16;
    v27 = v22 * v20;
    v28 = v21;
    v29 = v19 + 2;
    v30 = v22 * v29;
    do
    {
      v31 = v10;
      v32 = v130;
      sub_1BC0FC574(v28 + v30, v130, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v33 = v131;
      sub_1BC0FC574(v28 + v27, v131, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v34 = sub_1BC2B2378();
      sub_1BC0E8594(v33, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC0E8594(v32, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if (((v129 ^ v34) & 1) != 0)
      {
        v16 = v26;
        v17 = v29;
        v19 = v124;
        v10 = v31;
        if ((v129 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      v28 += v135;
      ++v29;
      v10 = v31;
    }
    while (v31 != v29);
    v16 = v26;
    v17 = v31;
    v19 = v124;
LABEL_21:
    if ((v129 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    v50 = v135;
    if (v17 < v19)
      goto LABEL_140;
    if (v19 < v17)
      break;
LABEL_24:
    v35 = v132;
    if (v17 < v10)
      goto LABEL_25;
LABEL_57:
    if (v17 < v19)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1BC26DEB8(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v60 = *((_QWORD *)v16 + 2);
    v59 = *((_QWORD *)v16 + 3);
    v18 = v60 + 1;
    if (v60 >= v59 >> 1)
      v16 = sub_1BC26DEB8((char *)(v59 > 1), v60 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v61 = v16 + 32;
    v62 = &v16[16 * v60 + 32];
    *(_QWORD *)v62 = v19;
    *((_QWORD *)v62 + 1) = v17;
    if (v60)
    {
      while (1)
      {
        v63 = v18 - 1;
        if (v18 >= 4)
        {
          v68 = &v61[16 * v18];
          v69 = *((_QWORD *)v68 - 8);
          v70 = *((_QWORD *)v68 - 7);
          v74 = __OFSUB__(v70, v69);
          v71 = v70 - v69;
          if (v74)
            goto LABEL_122;
          v73 = *((_QWORD *)v68 - 6);
          v72 = *((_QWORD *)v68 - 5);
          v74 = __OFSUB__(v72, v73);
          v66 = v72 - v73;
          v67 = v74;
          if (v74)
            goto LABEL_123;
          v75 = v18 - 2;
          v76 = &v61[16 * v18 - 32];
          v78 = *(_QWORD *)v76;
          v77 = *((_QWORD *)v76 + 1);
          v74 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          if (v74)
            goto LABEL_125;
          v74 = __OFADD__(v66, v79);
          v80 = v66 + v79;
          if (v74)
            goto LABEL_128;
          if (v80 >= v71)
          {
            v98 = &v61[16 * v63];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v74 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v74)
              goto LABEL_132;
            v91 = v66 < v101;
            goto LABEL_94;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v92 = *((_QWORD *)v16 + 4);
            v93 = *((_QWORD *)v16 + 5);
            v74 = __OFSUB__(v93, v92);
            v85 = v93 - v92;
            v86 = v74;
            goto LABEL_88;
          }
          v65 = *((_QWORD *)v16 + 4);
          v64 = *((_QWORD *)v16 + 5);
          v74 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          v67 = v74;
        }
        if ((v67 & 1) != 0)
          goto LABEL_124;
        v75 = v18 - 2;
        v81 = &v61[16 * v18 - 32];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v84 = __OFSUB__(v82, v83);
        v85 = v82 - v83;
        v86 = v84;
        if (v84)
          goto LABEL_127;
        v87 = &v61[16 * v63];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v74 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v74)
          goto LABEL_130;
        if (__OFADD__(v85, v90))
          goto LABEL_131;
        if (v85 + v90 >= v66)
        {
          v91 = v66 < v90;
LABEL_94:
          if (v91)
            v63 = v75;
          goto LABEL_96;
        }
LABEL_88:
        if ((v86 & 1) != 0)
          goto LABEL_126;
        v94 = &v61[16 * v63];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v74 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v74)
          goto LABEL_129;
        if (v97 < v85)
          goto LABEL_14;
LABEL_96:
        v102 = v17;
        v103 = v63 - 1;
        if (v63 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v132)
          goto LABEL_144;
        v104 = v16;
        v105 = &v61[16 * v103];
        v106 = *(_QWORD *)v105;
        v107 = &v61[16 * v63];
        v108 = *((_QWORD *)v107 + 1);
        v109 = v127;
        sub_1BC1B9BE4(*v132 + *(_QWORD *)(v126 + 72) * *(_QWORD *)v105, *v132 + *(_QWORD *)(v126 + 72) * *(_QWORD *)v107, *v132 + *(_QWORD *)(v126 + 72) * v108, v125);
        v127 = v109;
        if (v109)
          goto LABEL_116;
        if (v108 < v106)
          goto LABEL_119;
        if (v63 > *((_QWORD *)v104 + 2))
          goto LABEL_120;
        *(_QWORD *)v105 = v106;
        *(_QWORD *)&v61[16 * v103 + 8] = v108;
        v110 = *((_QWORD *)v104 + 2);
        if (v63 >= v110)
          goto LABEL_121;
        v16 = v104;
        v18 = v110 - 1;
        memmove(&v61[16 * v63], v107 + 16, 16 * (v110 - 1 - v63));
        *((_QWORD *)v104 + 2) = v110 - 1;
        v91 = v110 > 2;
        v17 = v102;
        if (!v91)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v132[1];
    if (v17 >= v10)
      goto LABEL_105;
  }
  v129 = v10;
  v119 = v16;
  v51 = 0;
  v52 = v135 * (v17 - 1);
  v53 = v17 * v135;
  v54 = v19;
  v55 = v19 * v135;
  v35 = v132;
  v124 = v19;
  do
  {
    if (v54 != v17 + v51 - 1)
    {
      v56 = v128;
      if (!v128)
        goto LABEL_145;
      v57 = v128 + v55;
      v58 = v128 + v52;
      sub_1BC0F1B94(v128 + v55, v123, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if (v55 < v52 || v57 >= v56 + v53)
      {
        swift_arrayInitWithTakeFrontToBack();
        v50 = v135;
      }
      else
      {
        v50 = v135;
        if (v55 != v52)
          swift_arrayInitWithTakeBackToFront();
      }
      sub_1BC0F1B94(v123, v58, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v35 = v132;
      v19 = v124;
    }
    ++v54;
    --v51;
    v52 -= v50;
    v53 -= v50;
    v55 += v50;
  }
  while (v54 < v17 + v51);
  v16 = v119;
  v10 = v129;
  if (v17 >= v129)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v17, v19))
    goto LABEL_138;
  if (v17 - v19 >= v121)
    goto LABEL_57;
  if (__OFADD__(v19, v121))
    goto LABEL_141;
  if (v19 + v121 >= v10)
    v36 = v10;
  else
    v36 = v19 + v121;
  if (v36 >= v19)
  {
    if (v17 != v36)
    {
      v119 = v16;
      v37 = *(_QWORD *)(v126 + 72);
      v135 = v37 * (v17 - 1);
      v128 = v37;
      v38 = v17 * v37;
      v124 = v19;
      v122 = v36;
      do
      {
        v40 = 0;
        v41 = v19;
        v129 = v17;
        while (1)
        {
          v42 = *v35;
          v43 = v38;
          v44 = v38 + v40 + *v35;
          v45 = v130;
          v46 = v35;
          sub_1BC0FC574(v44, v130, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v47 = v131;
          sub_1BC0FC574(v135 + v40 + v42, v131, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          LOBYTE(v42) = sub_1BC2B2378();
          sub_1BC0E8594(v47, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E8594(v45, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if ((v42 & 1) == 0)
            break;
          v48 = *v46;
          if (!*v46)
            goto LABEL_143;
          v38 = v43;
          v49 = v48 + v135 + v40;
          sub_1BC0F1B94(v48 + v43 + v40, v134, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BC0F1B94(v134, v49, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v39 = v129;
          v40 -= v128;
          ++v41;
          v35 = v132;
          if (v129 == v41)
            goto LABEL_35;
        }
        v39 = v129;
        v38 = v43;
        v35 = v46;
LABEL_35:
        v17 = v39 + 1;
        v135 += v128;
        v38 += v128;
        v19 = v124;
      }
      while (v17 != v122);
      v17 = v122;
      v16 = v119;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC1F00E0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v29 = type metadata accessor for Dosage();
  v7 = MEMORY[0x1E0C80A78](v29);
  v30 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v26 = (uint64_t)&v23 - v10;
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - v13;
  v28 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v32 = v15 * (v28 - 1);
    v27 = v15;
    v31 = v15 * v28;
LABEL_5:
    v16 = 0;
    v17 = v25;
    while (1)
    {
      v18 = *a4;
      sub_1BC0FC574(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v19 = v26;
      sub_1BC0FC574(v32 + v16 + v18, v26, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      LOBYTE(v18) = sub_1BC2B2378();
      sub_1BC0E8594(v19, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      result = sub_1BC0E8594((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v32 += v27;
        v31 += v27;
        if (++v28 == v24)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v32 + v16;
      sub_1BC0F1B94(v20 + v31 + v16, v30, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1BC0F1B94(v30, v22, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v16 -= v27;
      ++v17;
      a4 = v21;
      if (v28 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

void sub_1BC1F031C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3FECE8)
  {
    type metadata accessor for WeekdaysAndDosages(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3FECE8);
  }
}

uint64_t sub_1BC1F0384()
{
  return sub_1BC1ED9D4();
}

uint64_t sub_1BC1F038C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for WeekdaysAndDosages(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_1BC2B38E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1F042C(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WeekdaysAndDosages(0) - 8) + 80);
  return sub_1BC1EC690(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1BC1F046C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC0E7998(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC1F04C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1F04E8()
{
  uint64_t v0;

  return sub_1BC1ECC74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC1F04F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC1ED21C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC1F04F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC1ED7D4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC1F0500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BC1ED940(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BC1F0508(uint64_t (*a1)(unint64_t))
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v1;
  v5 = type metadata accessor for Dosage();
  v6 = MEMORY[0x1E0C80A78](v5);
  v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v33 = (uint64_t)&v30 - v9;
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v30 - v11;
  v12 = *v1;
  v13 = *(_QWORD *)(*v1 + 16);
  if (!v13)
    return 0;
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v16 = 0;
  v31 = v14;
  while (1)
  {
    v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v12 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    v19 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v19)
      return v16;
    v20 = v15 + v14;
    v21 = v16 + 1;
    v30 = v1;
    v32 = v15;
    while (v21 < v19)
    {
      v22 = v3;
      v36 = v20;
      v23 = v35;
      sub_1BC0FC574(v12 + v20, v35, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v24 = a1(v23);
      result = sub_1BC0E8594(v23, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if ((v24 & 1) != 0)
      {
        v3 = v22;
        v25 = v32;
      }
      else
      {
        v3 = v22;
        v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v26 = *v3;
          v27 = *(_QWORD *)(*v3 + 16);
          if (v16 >= v27)
            goto LABEL_33;
          result = sub_1BC0FC574(v26 + v31 + v16 * v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if (v21 >= v27)
            goto LABEL_34;
          sub_1BC0FC574(v26 + v36, v34, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          result = swift_isUniquelyReferenced_nonNull_native();
          v3 = v30;
          *v30 = v26;
          if ((result & 1) == 0)
          {
            result = sub_1BC135060(v26);
            v26 = result;
            *v3 = result;
          }
          if (v16 >= *(_QWORD *)(v26 + 16))
            goto LABEL_35;
          result = sub_1BC1BAE30(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(_QWORD *)(*v3 + 16))
            goto LABEL_36;
          result = sub_1BC1BAE30(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_31;
      }
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_30;
      v12 = *v3;
      v19 = *(_QWORD *)(*v3 + 16);
      ++v21;
      v20 = v36 + v25;
      if (v29 == v19)
        return v16;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1F0810(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char v71;
  _QWORD v72[2];
  unsigned int v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v94 = a3;
  v87 = a2;
  v92 = a1;
  v3 = sub_1BC2B2438();
  v95 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B257C();
  v86 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B2594();
  v97 = *(_QWORD *)(v9 - 8);
  v98 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v88 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v96 = (char *)v72 - v12;
  v85 = type metadata accessor for Dosage();
  v76 = *(_QWORD *)(v85 - 8);
  v13 = MEMORY[0x1E0C80A78](v85);
  v84 = (uint64_t)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v89 = (uint64_t)v72 - v15;
  v16 = type metadata accessor for WeekdaysAndDosages(0);
  v90 = *(void (**)(char *, uint64_t, uint64_t))(v16 - 8);
  v91 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0CB0870];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v72 - v21;
  v23 = sub_1BC2B23F0();
  v24 = MEMORY[0x1E0C80A78](v23);
  v83 = (char *)v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v82 = (char *)v72 - v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v72 - v28;
  v31 = v30;
  v32 = (uint64_t (*)(uint64_t))v19;
  v34 = v33;
  sub_1BC118700(v94, (uint64_t)v22, (unint64_t *)&qword_1EDA0E710, v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v31) != 1)
  {
    v94 = v34;
    v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v81 = v29;
    v35(v29, v22, v31);
    result = sub_1BC2B3ED8();
    if ((v92 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v99 + 16) > v92)
    {
      v80 = v31;
      sub_1BC0FC574(v99+ ((*((unsigned __int8 *)v90 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v90 + 80))+ *((_QWORD *)v90 + 9) * v92, (uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)&v18[*(int *)(v91 + 24)];
      swift_bridgeObjectRetain();
      sub_1BC0E8594((uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
      v38 = *(_QWORD *)(v37 + 16);
      if (!v38)
      {
        swift_bridgeObjectRelease();
        v44 = *(void (**)(char *, uint64_t))(v94 + 8);
        v43 = v81;
LABEL_16:
        v44(v43, v80);
        return 1;
      }
      v39 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      v72[1] = v37;
      v40 = v37 + v39;
      v77 = *MEMORY[0x1E0CB1140];
      v73 = *MEMORY[0x1E0CB1178];
      v76 = *(_QWORD *)(v76 + 72);
      v75 = v6;
      v74 = v8;
      v42 = v88;
      v41 = v89;
      v43 = v81;
      v79 = v3;
      v78 = v5;
      while (1)
      {
        v91 = v40;
        v92 = v38;
        sub_1BC0FC574(v40, v41, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v52 = v41 + *(int *)(v85 + 20);
        v53 = v96;
        sub_1BC2B2564();
        v54 = v86;
        v55 = *(_QWORD **)(v86 + 104);
        v56 = v77;
        ((void (*)(char *, _QWORD, uint64_t))v55)(v8, v77, v6);
        v93 = sub_1BC2B2588();
        v57 = *(void (**)(char *, uint64_t))(v54 + 8);
        v57(v8, v6);
        v90 = (void (*)(char *, uint64_t, uint64_t))v55;
        ((void (*)(char *, uint64_t, uint64_t))v55)(v8, v56, v6);
        v58 = sub_1BC2B2588();
        v57(v8, v6);
        v59 = v53;
        v60 = v42;
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v42, v59, v98);
        v61 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
        v62 = v82;
        v63 = v52;
        v64 = v80;
        v61(v82, v63, v80);
        v65 = v83;
        v61(v83, (uint64_t)v43, v64);
        if (v93 != v58)
          break;
        v66 = v73;
        v67 = v90;
        v90(v8, v73, v6);
        v93 = sub_1BC2B2588();
        v57(v8, v6);
        v67(v8, v66, v6);
        v68 = sub_1BC2B2588();
        v57(v8, v6);
        v44 = *(void (**)(char *, uint64_t))(v94 + 8);
        v44(v65, v64);
        v44(v62, v64);
        v69 = v98;
        v70 = *(void (**)(char *, uint64_t))(v97 + 8);
        v70(v60, v98);
        v70(v96, v69);
        v48 = v78;
        v49 = v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v78, v87, v79);
        v41 = v89;
        v50 = v84;
        sub_1BC0FC574(v89, v84, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        if (v93 != v68)
          goto LABEL_8;
        sub_1BC0E519C(&qword_1EF3FD978, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v71 = sub_1BC2B4424();
        sub_1BC0E8594(v50, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v48, v49);
        sub_1BC0E8594(v41, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        if ((v71 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v44(v81, v80);
          return 0;
        }
        v6 = v75;
        v8 = v74;
        v42 = v88;
        v43 = v81;
        v51 = v91;
LABEL_9:
        v40 = v51 + v76;
        v38 = v92 - 1;
        if (v92 == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      v44 = *(void (**)(char *, uint64_t))(v94 + 8);
      v44(v65, v64);
      v44(v62, v64);
      v45 = v98;
      v46 = v60;
      v47 = *(void (**)(char *, uint64_t))(v97 + 8);
      v47(v46, v98);
      v47(v96, v45);
      v48 = v78;
      v49 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v78, v87, v79);
      v41 = v89;
      v50 = v84;
      sub_1BC0FC574(v89, v84, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
LABEL_8:
      v51 = v91;
      sub_1BC0E8594(v50, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v48, v49);
      sub_1BC0E8594(v41, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v6 = v75;
      v8 = v74;
      v42 = v88;
      v43 = v81;
      goto LABEL_9;
    }
    __break(1u);
    return result;
  }
  sub_1BC0F2444((uint64_t)v22, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  return 1;
}

uint64_t sub_1BC1F0FC4()
{
  return sub_1BC2B2414() & 1;
}

uint64_t sub_1BC1F0FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC1ED644(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC1F100C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1F1038()
{
  uint64_t v0;

  return sub_1BC1ED6F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC1F1044()
{
  return sub_1BC1EB2CC();
}

void sub_1BC1F104C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FED08)
  {
    sub_1BC0E7998(255, &qword_1EF3FED10, type metadata accessor for WeekdaysAndDosages, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FED08);
  }
}

uint64_t sub_1BC1F10D4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1BC2B4814();
  if (!v18)
    return sub_1BC2B45D4();
  v19 = v18;
  v25 = v15;
  v39 = sub_1BC2B5258();
  v32 = sub_1BC2B5264();
  sub_1BC2B521C();
  v36 = v17;
  result = sub_1BC2B4808();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1BC2B4838();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1BC2B524C();
      sub_1BC2B482C();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

id sub_1BC1F13B0()
{
  return (id)sub_1BC1F29F0();
}

void sub_1BC1F13C4(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

uint64_t (*sub_1BC1F1408())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DynamicDataSource.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1BC1F29E8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BC1F1478@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 136);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1BC1F14DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1BC1F1548(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144)) = a1;
  return swift_release();
}

uint64_t sub_1BC1F1560()
{
  sub_1BC1F2A68();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC1F1588()
{
  sub_1BC1F2A20();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC1F15B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 152));
  swift_beginAccess();
  *v7 = a1;
  v7[1] = a2;
  v7[2] = a3;
  return swift_unknownObjectRelease();
}

char *DynamicDataSource.__allocating_init(dataSources:determinerPublisher:defaultDataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v10;

  swift_allocObject();
  v10 = sub_1BC1F2AB0(a1, a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return v10;
}

char *DynamicDataSource.init(dataSources:determinerPublisher:defaultDataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;

  v5 = sub_1BC1F2AB0(a1, a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1BC1F16E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getObjectType();
  result = sub_1BC2B2A14();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC1F1728()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = *v0;
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = *(_QWORD *)(v2 + 80);
  v4[3] = *(_QWORD *)(v2 + 88);
  v4[4] = v3;
  v5 = sub_1BC2B3EE4();
  swift_retain();
  swift_retain();
  MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v5);
  v6 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 144)) = v6;
  return swift_release();
}

uint64_t sub_1BC1F1840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t Strong;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t result;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char v41;
  void (*v42)(uint64_t, uint64_t);
  void (*v43)(char *, uint64_t);
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t TupleTypeMetadata2;
  char *v50;
  uint64_t v51;

  v44[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v44[0] = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B4FA0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v46 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)v44 - v11;
  v51 = *(_QWORD *)(v9 - 8);
  v13 = MEMORY[0x1E0C80A78](v10);
  v48 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v44 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v44 - v18;
  v20 = a2 + 16;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v45 = a1;
  v21((char *)v44 - v18, a1, a3);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v23 = 1;
  v50 = v19;
  v22(v19, 0, 1, a3);
  swift_beginAccess();
  v47 = v20;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v25 = v12;
    v26 = v7;
    v27 = v17;
    v28 = *(_QWORD *)Strong;
    v29 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 136);
    swift_beginAccess();
    v30 = *(_QWORD *)(v28 + 80);
    v17 = v27;
    v7 = v26;
    v12 = v25;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v17, v29);
    swift_release();
    v23 = 0;
  }
  v22(v17, v23, 1, a3);
  v31 = v50;
  v32 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v33 = v51;
  v34 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v34(v12, v50, v9);
  v34(v32, v17, v9);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v35(v12, 1, a3) == 1)
  {
    v36 = *(void (**)(char *, uint64_t))(v33 + 8);
    v36(v17, v9);
    v36(v31, v9);
    if (v35(v32, 1, a3) == 1)
      return ((uint64_t (*)(char *, uint64_t))v36)(v12, v9);
  }
  else
  {
    v34(v48, v12, v9);
    if (v35(v32, 1, a3) != 1)
    {
      v39 = v44[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v7 + 32))(v44[0], v32, a3);
      v40 = v48;
      v41 = sub_1BC2B4424();
      v42 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v42(v39, a3);
      v43 = *(void (**)(char *, uint64_t))(v51 + 8);
      v43(v17, v9);
      v43(v50, v9);
      v42((uint64_t)v40, a3);
      result = ((uint64_t (*)(char *, uint64_t))v43)(v12, v9);
      if ((v41 & 1) != 0)
        return result;
      goto LABEL_10;
    }
    v38 = *(void (**)(char *, uint64_t))(v51 + 8);
    v38(v17, v9);
    v38(v50, v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v48, a3);
  }
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, TupleTypeMetadata2);
LABEL_10:
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC1F202C(v45);
    return swift_release();
  }
  return result;
}

void sub_1BC1F1C18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;

  v2 = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  v8 = (void *)sub_1BC2B2A20();
  swift_unknownObjectRelease();
  objc_msgSend(v8, sel_unregisterObserver_, v2);

  v9 = v2[8];
  v10 = *v2;
  v11 = (uint64_t)v2 + *(_QWORD *)(*v2 + 136);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 80) - 8) + 16))(v7, v11);
  v12 = sub_1BC108D94();
  MEMORY[0x1BCCEDB58](&v19, v7, v9, v4, v12, *(_QWORD *)(v3 + 88));
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = v19;
  if (v19)
  {
    v18 = v20;
    v14 = (uint64_t)v2 + *(_QWORD *)(*v2 + 152);
    swift_beginAccess();
    *(_QWORD *)v14 = v13;
    *(_OWORD *)(v14 + 8) = v18;
  }
  else
  {
    v15 = v2[7];
    v16 = (uint64_t)v2 + *(_QWORD *)(*v2 + 152);
    v18 = *(_OWORD *)(v2 + 5);
    swift_unknownObjectRetain();
    swift_beginAccess();
    *(_OWORD *)v16 = v18;
    *(_QWORD *)(v16 + 16) = v15;
  }
  swift_unknownObjectRelease();
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  v17 = (void *)sub_1BC2B2A20();
  swift_unknownObjectRelease();
  objc_msgSend(v17, sel_registerObserver_, v2);

}

uint64_t sub_1BC1F1E68()
{
  swift_beginAccess();
  swift_getObjectType();
  return sub_1BC2B2F84() & 1;
}

uint64_t sub_1BC1F1EDC()
{
  swift_beginAccess();
  swift_getObjectType();
  return sub_1BC2B2F90();
}

uint64_t sub_1BC1F1F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC1F2E08(a3, a4, a3, a4);
}

uint64_t sub_1BC1F1F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC199AD4();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3D04();
  swift_retain();
  sub_1BC1F2E08((uint64_t)v10, a5, v11, v12);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BC1F202C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  v4 = sub_1BC1F14DC((uint64_t)v2);
  return sub_1BC1F2098(v4);
}

uint64_t sub_1BC1F2098(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  sub_1BC1F1C18(a1);
  v4 = type metadata accessor for DynamicDataSource(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v3);
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DynamicDataSource<A>, v4);
  return sub_1BC2B2A2C();
}

id *DynamicDataSource.deinit()
{
  id *v0;
  _QWORD *v1;
  void *v2;

  v1 = *v0;
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  v2 = (void *)sub_1BC2B2A20();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_unregisterObserver_, v0);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 17));
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DynamicDataSource.__deallocating_deinit()
{
  DynamicDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1F2208()
{
  return sub_1BC1F1EDC();
}

uint64_t sub_1BC1F2228()
{
  return sub_1BC1F1E68() & 1;
}

uint64_t sub_1BC1F224C()
{
  uint64_t v0;

  v0 = sub_1BC1F29E8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BC1F2280(uint64_t a1)
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DynamicDataSource<A>, a1);
  return sub_1BC2B2B04();
}

uint64_t sub_1BC1F22C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DynamicDataSource<A>, a3);
  return sub_1BC2B2AF8();
}

uint64_t sub_1BC1F2320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DynamicDataSource<A>, a3);
  return sub_1BC2B2AEC();
}

uint64_t DynamicDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[4];

  v2 = v1;
  v4 = *v1;
  v24 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)v2 + *(_QWORD *)(v4 + 152);
  swift_beginAccess();
  v9 = *((_QWORD *)v8 + 2);
  v25 = *(_OWORD *)v8;
  v29 = v25;
  v30 = v9;
  sub_1BC108D94();
  sub_1BC0E7AD8(0, &qword_1EF3FED20);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1BC0F2730(&v26, (uint64_t)v31);
    __swift_project_boxed_opaque_existential_0(v31, v31[3]);
    sub_1BC2B2E4C();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  }
  else
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
    sub_1BC0E7B24((uint64_t)&v26, qword_1EF3FED28, &qword_1EF3FED20);
    sub_1BC2B39A4();
    swift_retain_n();
    v11 = sub_1BC2B39D4();
    v12 = sub_1BC2B48C8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      *(_QWORD *)&v25 = swift_slowAlloc();
      *(_QWORD *)&v29 = v25;
      *(_DWORD *)v13 = 136315394;
      v14 = sub_1BC2B54F8();
      v31[0] = sub_1BC12540C(v14, v15, (uint64_t *)&v29);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v16 = (char *)v2 + *(_QWORD *)(*v2 + 152);
      swift_beginAccess();
      v17 = *((_QWORD *)v16 + 2);
      v26 = *(_OWORD *)v16;
      *(_QWORD *)&v27 = v17;
      swift_unknownObjectRetain();
      v18 = sub_1BC2B4478();
      *(_QWORD *)&v26 = sub_1BC12540C(v18, v19, (uint64_t *)&v29);
      sub_1BC2B4FD0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v11, v12, "[%s]: Cannot fetch supplementary item because child data source is not SupplementaryItemDataSource: %s", (uint8_t *)v13, 0x16u);
      v20 = v25;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
      MEMORY[0x1BCCEF3A0](v13, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
    v21 = sub_1BC2B29FC();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2ACD8];
    a1[3] = v21;
    a1[4] = sub_1BC0E519C(&qword_1EF3FD200, v22, MEMORY[0x1E0D2ACC8]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1BC2B29F0();
  }
}

uint64_t sub_1BC1F26E8@<X0>(uint64_t *a1@<X8>)
{
  return DynamicDataSource.supplementaryItem(ofKind:at:)(a1);
}

Swift::Void __swiftcall DynamicDataSource.registerCells(for:)(UICollectionView *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v2 = *(_QWORD *)(v1 + 56);
  v17 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)&v18 = v2;
  sub_1BC108D94();
  sub_1BC0E7AD8(0, &qword_1EF3F9AF8);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_0(&v22, *((uint64_t *)&v23 + 1));
    sub_1BC2B2E7C();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
  }
  else
  {
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
    sub_1BC0E7B24((uint64_t)&v22, &qword_1EF3F9B00, &qword_1EF3F9AF8);
  }
  v3 = *(_QWORD *)(v1 + 64);
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  if (v7)
    goto LABEL_9;
LABEL_10:
  v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v12 < v8)
    {
      v13 = *(_QWORD *)(v4 + 8 * v12);
      ++v9;
      if (v13)
        goto LABEL_23;
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_27;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (v13)
        goto LABEL_23;
      v9 = v12 + 2;
      if (v12 + 2 >= v8)
        goto LABEL_27;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (v13)
      {
LABEL_23:
        v7 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v9 << 6); ; i = v10 | (v9 << 6))
        {
          v15 = *(_QWORD *)(v3 + 56) + 24 * i;
          v16 = *(_QWORD *)(v15 + 16);
          v20 = *(_OWORD *)v15;
          v21 = v16;
          swift_unknownObjectRetain();
          if ((swift_dynamicCast() & 1) != 0)
          {
            sub_1BC0F2730(&v17, (uint64_t)&v22);
            __swift_project_boxed_opaque_existential_0(&v22, *((uint64_t *)&v23 + 1));
            sub_1BC2B2E7C();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
            if (!v7)
              goto LABEL_10;
          }
          else
          {
            v19 = 0;
            v17 = 0u;
            v18 = 0u;
            sub_1BC0E7B24((uint64_t)&v17, &qword_1EF3F9B00, &qword_1EF3F9AF8);
            if (!v7)
              goto LABEL_10;
          }
LABEL_9:
          v10 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      v14 = v12 + 3;
      if (v14 < v8)
      {
        v13 = *(_QWORD *)(v4 + 8 * v14);
        if (v13)
        {
          v9 = v14;
          goto LABEL_23;
        }
        while (1)
        {
          v9 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_29;
          if (v9 >= v8)
            break;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          ++v14;
          if (v13)
            goto LABEL_23;
        }
      }
    }
LABEL_27:
    swift_release();
    return;
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_1BC1F29C8(UICollectionView *a1)
{
  DynamicDataSource.registerCells(for:)(a1);
}

uint64_t sub_1BC1F29E8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1BC1F29F0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1BC1F2A20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BC1F2A68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

char *sub_1BC1F2AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v6 = v5;
  v38 = a4;
  v39 = a5;
  v41 = a3;
  v9 = *(_QWORD *)v5;
  v10 = sub_1BC2B2AE0();
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v9 + 80);
  v40 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1F30F8();
  v16 = (void *)sub_1BC2B4F7C();
  v17 = objc_allocWithZone(MEMORY[0x1E0CB6CA8]);
  v18 = (void *)sub_1BC2B4430();
  v19 = objc_msgSend(v17, sel_initWithName_loggingCategory_, v18, v16);

  *((_QWORD *)v6 + 2) = v19;
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 144)] = 0;
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v43 = 0xD000000000000012;
  v44 = 0x80000001BC2D13E0;
  sub_1BC108D94();
  v42 = a1;
  v20 = sub_1BC2B43C4();
  swift_bridgeObjectRetain();
  v21 = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DE9FA0], v20);
  v23 = sub_1BC1F10D4((void (*)(char *, char *))sub_1BC1F16E0, 0, v20, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v21, MEMORY[0x1E0DEDD18], v22);
  swift_bridgeObjectRelease();
  v42 = v23;
  sub_1BC18C440();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FB1E0, (uint64_t (*)(uint64_t))sub_1BC18C440, MEMORY[0x1E0DEAF20]);
  sub_1BC2B440C();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v24 = v44;
  *((_QWORD *)v6 + 3) = v43;
  *((_QWORD *)v6 + 4) = v24;
  *((_QWORD *)v6 + 8) = a1;
  *((_QWORD *)v6 + 9) = a2;
  swift_retain();
  sub_1BC2B3ED8();
  v25 = v15;
  v26 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v6[*(_QWORD *)(*(_QWORD *)v6 + 136)], v25, v13);
  if (v26)
  {
    v27 = v26;
    v29 = v38;
    v28 = v39;
  }
  else
  {
    sub_1BC2B2F30();
    v30 = v35;
    sub_1BC2B2AD4();
    sub_1BC2B2A8C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v37);
    v27 = sub_1BC2B2F0C();
    v28 = MEMORY[0x1E0D2B148];
    v29 = MEMORY[0x1E0D2B748];
  }
  *((_QWORD *)v6 + 5) = v27;
  *((_QWORD *)v6 + 6) = v29;
  *((_QWORD *)v6 + 7) = v28;
  v31 = (uint64_t *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 152)];
  *v31 = v27;
  v31[1] = v29;
  v31[2] = v28;
  swift_unknownObjectRetain();
  v32 = swift_unknownObjectRetain();
  sub_1BC1F2098(v32);
  sub_1BC1F1728();
  return v6;
}

uint64_t sub_1BC1F2E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for DynamicDataSource(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DynamicDataSource<A>, v5);
  return sub_1BC2B2A2C();
}

void sub_1BC1F2E5C()
{
  JUMPOUT(0x1BCCEF2BCLL);
}

id sub_1BC1F2E6C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  v2 = (void *)sub_1BC1F29F0();
  *a1 = v2;
  return v2;
}

void sub_1BC1F2E94(id *a1)
{
  sub_1BC1F13C4((uint64_t)*a1);
}

uint64_t sub_1BC1F2EBC()
{
  return 16;
}

__n128 sub_1BC1F2EC8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC1F2ED4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = sub_1BC1F2A20();
  a1[1] = v2;
  a1[2] = v3;
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC1F2F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = swift_unknownObjectRetain();
  return sub_1BC1F15B8(v3, v1, v2);
}

uint64_t sub_1BC1F2F40()
{
  return 16;
}

__n128 sub_1BC1F2F4C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC1F2F58()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DynamicDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicDataSource);
}

uint64_t method lookup function for DynamicDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DynamicDataSource.changeObservers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DynamicDataSource.changeObservers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DynamicDataSource.changeObservers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DynamicDataSource.resolvedDataSource.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DynamicDataSource.currentDataSource.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DynamicDataSource.__allocating_init(dataSources:determinerPublisher:defaultDataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of DynamicDataSource.shouldCollapseEmptySection(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DynamicDataSource.layout(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DynamicDataSource.snapshotDidChange(dataSourceID:snapshot:animated:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t sub_1BC1F30A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1F30C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC1F30EC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC1F1840(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_1BC1F30F8()
{
  unint64_t result;

  result = qword_1EF3FEDB0;
  if (!qword_1EF3FEDB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FEDB0);
  }
  return result;
}

uint64_t sub_1BC1F3134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD v31[2];

  v4 = sub_1BC2B24A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v31 - v9;
  sub_1BC152758();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B9600;
  sub_1BC2B2498();
  v12 = sub_1BC2B2480();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v10, v4);
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  sub_1BC2B2498();
  v16 = sub_1BC2B2474();
  v18 = v17;
  v15(v8, v4);
  *(_QWORD *)(inited + 64) = v16;
  *(_QWORD *)(inited + 72) = v18;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BC0FA054(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v21 = v19[2];
    v20 = v19[3];
    if (v21 >= v20 >> 1)
      v19 = sub_1BC0FA054((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
    v19[2] = v21 + 1;
    v22 = &v19[2 * v21];
    v22[4] = v12;
    v22[5] = v14;
  }
  else
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_1BC0FA054(0, v19[2] + 1, 1, v19);
  v24 = v19[2];
  v23 = v19[3];
  v25 = v24 + 1;
  if (v24 >= v23 >> 1)
    v19 = sub_1BC0FA054((_QWORD *)(v23 > 1), v24 + 1, 1, v19);
  v19[2] = v25;
  v26 = &v19[2 * v24];
  v26[4] = a1;
  v26[5] = a2;
  if (v18)
  {
    v27 = v19[3];
    swift_bridgeObjectRetain();
    if (v25 >= v27 >> 1)
      v19 = sub_1BC0FA054((_QWORD *)(v27 > 1), v24 + 2, 1, v19);
    v19[2] = v24 + 2;
    v28 = &v19[2 * v25];
    v28[4] = v16;
    v28[5] = v18;
  }
  swift_release();
  v31[1] = v19;
  sub_1BC1A5E2C(0, (unint64_t *)&qword_1EF3FA018, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC11BF0C();
  v29 = sub_1BC2B440C();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t type metadata accessor for DDIStepViewController()
{
  uint64_t result;

  result = qword_1EF3FEDB8;
  if (!qword_1EF3FEDB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1F340C()
{
  return swift_initClassMetadata2();
}

void sub_1BC1F3448(_BYTE *a1@<X8>)
{
  *a1 = -96;
}

void sub_1BC1F3454()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC1F34AC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC1F34D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DDIStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC1F350C()
{
  return type metadata accessor for DDIStepViewController();
}

uint64_t FrequencyIntervalPickerItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FrequencyIntervalPickerItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t FrequencyIntervalPickerItem.uniqueIdentifier.getter()
{
  type metadata accessor for FrequencyIntervalPickerItem();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

uint64_t type metadata accessor for FrequencyIntervalPickerItem()
{
  uint64_t result;

  result = qword_1EF3FEE90;
  if (!qword_1EF3FEE90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FrequencyIntervalPickerItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FrequencyIntervalPickerItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.title.modify())()
{
  type metadata accessor for FrequencyIntervalPickerItem();
  return nullsub_1;
}

uint64_t FrequencyIntervalPickerItem.placeholderText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FrequencyIntervalPickerItem.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.placeholderText.modify())()
{
  type metadata accessor for FrequencyIntervalPickerItem();
  return nullsub_1;
}

uint64_t FrequencyIntervalPickerItem.isEditEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 32));
}

uint64_t FrequencyIntervalPickerItem.isEditEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FrequencyIntervalPickerItem();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.isEditEnabled.modify())()
{
  type metadata accessor for FrequencyIntervalPickerItem();
  return nullsub_1;
}

uint64_t sub_1BC1F37EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  if (*a1)
    v3 = a1[1];
  else
    v3 = 0;
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  v5 = *v4;
  sub_1BC0F2690(v2);
  result = sub_1BC0F2600(v5);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t FrequencyIntervalPickerItem.dataProvider.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t FrequencyIntervalPickerItem.dataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.dataProvider.modify())()
{
  type metadata accessor for FrequencyIntervalPickerItem();
  return nullsub_1;
}

uint64_t sub_1BC1F3900@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC118CE4;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC1F3978(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC118CE4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  v8 = *v7;
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t FrequencyIntervalPickerItem.updateHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t FrequencyIntervalPickerItem.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.updateHandler.modify())()
{
  type metadata accessor for FrequencyIntervalPickerItem();
  return nullsub_1;
}

uint64_t FrequencyIntervalPickerItem.init(title:dataProvider:updateHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t result;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;

  type metadata accessor for FrequencyIntervalCollectionViewCell();
  sub_1BC0E008C(&qword_1EF3FEE18, v14, (uint64_t (*)(uint64_t))type metadata accessor for FrequencyIntervalCollectionViewCell, (uint64_t)&protocol conformance descriptor for FrequencyIntervalCollectionViewCell);
  *a7 = sub_1BC2B2930();
  a7[1] = v15;
  v16 = (int *)type metadata accessor for FrequencyIntervalPickerItem();
  result = sub_1BC2B242C();
  v18 = (uint64_t *)((char *)a7 + v16[7]);
  v19 = (uint64_t *)((char *)a7 + v16[9]);
  v20 = (uint64_t *)((char *)a7 + v16[10]);
  v21 = (uint64_t *)((char *)a7 + v16[6]);
  *v21 = a1;
  v21[1] = a2;
  *v18 = 0;
  v18[1] = 0;
  *((_BYTE *)a7 + v16[8]) = 1;
  *v19 = a3;
  v19[1] = a4;
  *v20 = a5;
  v20[1] = a6;
  return result;
}

uint64_t type metadata accessor for FrequencyIntervalCollectionViewCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1F3BAC(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_1BC1F3BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  sub_1BC0F2690(v2);
  return v2;
}

uint64_t sub_1BC1F3BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;

  if (a1)
    v5 = a2;
  else
    v5 = 0;
  v6 = (uint64_t *)(v3 + *(int *)(a3 + 36));
  result = sub_1BC0F2600(*v6);
  *v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1BC1F3C34(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(int *)(a2 + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v2 + v3);
  v6 = *v4;
  v5 = v4[1];
  if (!v6)
    v5 = 0;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v2;
  return sub_1BC186A90;
}

unint64_t sub_1BC1F3C68()
{
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

uint64_t sub_1BC1F3CC8(uint64_t a1, _QWORD **a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];

  sub_1BC0E5774(a1, (uint64_t)v7);
  v3 = *a2;
  v4 = (uint64_t)*a2 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v7, v4);
  v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xF0))(v5);
  return sub_1BC0E1CFC((uint64_t)v7, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC1F3D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1F3DB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xF0))(v4);
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC1F3E44(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC1F3E8C;
}

uint64_t sub_1BC1F3E8C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(a1 + 24)) + 0xF0))(result);
  return result;
}

id sub_1BC1F3ED4()
{
  return sub_1BC1F40D8(&OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_1BC1F3EE8);
}

id sub_1BC1F3EE8()
{
  id v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  sub_1BC0E1D38(0, &qword_1EF3FEFE8);
  v0 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v2 = (void *)sub_1BC2B4D48();
  v3 = sub_1BC2B4460();
  v5 = v4;
  sub_1BC0E008C(&qword_1EF3FEE18, v4, (uint64_t (*)(uint64_t))type metadata accessor for FrequencyIntervalCollectionViewCell, (uint64_t)&protocol conformance descriptor for FrequencyIntervalCollectionViewCell);
  v6 = v2;
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v3, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v6;
}

id sub_1BC1F40C4()
{
  return sub_1BC1F40D8(&OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___valueLabel, (uint64_t (*)(uint64_t))sub_1BC1F413C);
}

id sub_1BC1F40D8(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t ObjectType;
  void *v8;
  void *v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    ObjectType = swift_getObjectType();
    v8 = (void *)a2(ObjectType);
    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v8;
    v5 = v8;

    v4 = 0;
  }
  v10 = v4;
  return v5;
}

id sub_1BC1F413C()
{
  id v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  sub_1BC0E1D38(0, &qword_1EF3FEFE8);
  v0 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  v2 = (void *)sub_1BC2B4D48();
  v3 = sub_1BC2B4460();
  v5 = v4;
  sub_1BC0E008C(&qword_1EF3FEE18, v4, (uint64_t (*)(uint64_t))type metadata accessor for FrequencyIntervalCollectionViewCell, (uint64_t)&protocol conformance descriptor for FrequencyIntervalCollectionViewCell);
  v6 = v2;
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v3, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setTextAlignment_, 2);
  return v6;
}

id sub_1BC1F432C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView);
  }
  else
  {
    v4 = sub_1BC1F4388();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC1F4388()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AE0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v8 = sub_1BC2B4460();
  v9 = v4;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v5 = v2;
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6, v8, v9);

  return v5;
}

char *sub_1BC1F44B8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  objc_super v29;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___valueLabel] = 0;
  v10 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v12 = v4;
  v13 = objc_msgSend(v11, sel_init);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_separatorColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v15);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  *(_QWORD *)&v4[v10] = v13;
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView] = 0;

  v29.receiver = v12;
  v29.super_class = (Class)type metadata accessor for FrequencyIntervalCollectionViewCell();
  v16 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  v17 = objc_msgSend(v16, sel_contentView);
  v18 = objc_msgSend(v14, sel_systemBackgroundColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  v19 = objc_msgSend(v16, sel_contentView);
  v20 = sub_1BC1F3ED4();
  objc_msgSend(v19, sel_addSubview_, v20);

  v21 = objc_msgSend(v16, sel_contentView);
  v22 = sub_1BC1F40C4();
  objc_msgSend(v21, sel_addSubview_, v22);

  v23 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v23, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView]);

  v24 = sub_1BC1F432C();
  objc_msgSend(v24, sel_setDelegate_, v16);

  v25 = sub_1BC1F432C();
  objc_msgSend(v25, sel_setDataSource_, v16);

  v26 = objc_msgSend(v16, sel_contentView);
  v27 = sub_1BC1F432C();
  objc_msgSend(v26, sel_addSubview_, v27);

  sub_1BC1F4AA8();
  return v16;
}

id FrequencyIntervalCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1BC1F47FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  id v11;
  void *v12;
  void (*v13)(uint64_t *__return_ptr, _BYTE *);
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  _BYTE v18[24];
  uint64_t v19;
  char v20;
  uint64_t v21;

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EF3FEE28, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v18[-v3];
  v5 = type metadata accessor for FrequencyIntervalPickerItem();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v9, (uint64_t)&v19);
  if (!v21)
  {
    sub_1BC0E1CFC((uint64_t)&v19, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_9;
  }
  sub_1BC0E1B94();
  v10 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v10 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_9:
    sub_1BC0E1CFC((uint64_t)v4, &qword_1EF3FEE28, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
    return;
  }
  sub_1BC1F5680((uint64_t)v4, (uint64_t)v8);
  v11 = sub_1BC1F3ED4();
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v12);

  v13 = *(void (**)(uint64_t *__return_ptr, _BYTE *))&v8[*(int *)(v5 + 36)];
  if (!v13)
    goto LABEL_7;
  swift_retain();
  v13(&v19, v8);
  sub_1BC0F2600((uint64_t)v13);
  if ((v20 & 1) != 0)
    goto LABEL_7;
  v14 = v19;
  v15 = sub_1BC1F40C4();
  v19 = v14;
  sub_1BC243C38(0);
  v16 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setText_, v16);

  if (!__OFSUB__(v14, 1))
  {
    v17 = sub_1BC1F432C();
    objc_msgSend(v17, sel_selectRow_inComponent_animated_, v14 - 1, 0, 1);

LABEL_7:
    sub_1BC1F56C4((uint64_t)v8);
    return;
  }
  __break(1u);
}

void sub_1BC1F4AA8()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;

  v1 = sub_1BC1F3ED4();
  v2 = sub_1BC1F40C4();
  v3 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView;
  v4 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView];
  v5 = sub_1BC1F432C();
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v69 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC2BC920;
  v7 = sub_1BC1F3ED4();
  v8 = objc_msgSend(v7, sel_topAnchor);

  v9 = objc_msgSend(v0, sel_contentView);
  v10 = objc_msgSend(v9, sel_topAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 12.0);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = sub_1BC1F3ED4();
  v13 = objc_msgSend(v12, sel_leadingAnchor);

  v14 = objc_msgSend(v0, sel_contentView);
  v15 = objc_msgSend(v14, sel_leadingAnchor);

  if (qword_1EF3F8150 != -1)
    swift_once();
  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, *(double *)&qword_1EF3FEE10);

  *(_QWORD *)(v6 + 40) = v16;
  v17 = sub_1BC1F40C4();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_1BC1F3ED4();
  v20 = objc_msgSend(v19, sel_topAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  *(_QWORD *)(v6 + 48) = v21;
  v22 = sub_1BC1F40C4();
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = sub_1BC1F3ED4();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToAnchor_constant_, v25, *(double *)&qword_1EF3FEE10);
  *(_QWORD *)(v6 + 56) = v26;
  v27 = sub_1BC1F40C4();
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = objc_msgSend(v0, sel_contentView);
  v30 = objc_msgSend(v29, sel_trailingAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, -*(double *)&qword_1EF3FEE10);
  *(_QWORD *)(v6 + 64) = v31;
  v32 = objc_msgSend(*(id *)&v0[v3], sel_topAnchor);
  v33 = sub_1BC1F3ED4();
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 12.0);
  *(_QWORD *)(v6 + 72) = v35;
  v36 = objc_msgSend(*(id *)&v0[v3], sel_topAnchor);
  v37 = sub_1BC1F40C4();
  v38 = objc_msgSend(v37, sel_bottomAnchor);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, 12.0);
  *(_QWORD *)(v6 + 80) = v39;
  v40 = objc_msgSend(*(id *)&v0[v3], sel_leadingAnchor);
  v41 = sub_1BC1F3ED4();
  v42 = objc_msgSend(v41, sel_leadingAnchor);

  v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);
  *(_QWORD *)(v6 + 88) = v43;
  v44 = objc_msgSend(*(id *)&v0[v3], sel_trailingAnchor);
  v45 = objc_msgSend(v0, sel_contentView);
  v46 = objc_msgSend(v45, sel_trailingAnchor);

  v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v46);
  *(_QWORD *)(v6 + 96) = v47;
  v48 = objc_msgSend(*(id *)&v0[v3], sel_heightAnchor);
  v49 = objc_msgSend(v48, sel_constraintEqualToConstant_, 0.5);

  *(_QWORD *)(v6 + 104) = v49;
  v50 = sub_1BC1F432C();
  v51 = objc_msgSend(v50, sel_topAnchor);

  v52 = objc_msgSend(*(id *)&v0[v3], sel_bottomAnchor);
  v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v52, 12.0);

  *(_QWORD *)(v6 + 112) = v53;
  v54 = sub_1BC1F432C();
  v55 = objc_msgSend(v54, sel_leadingAnchor);

  v56 = objc_msgSend(v0, sel_contentView);
  v57 = objc_msgSend(v56, sel_leadingAnchor);

  v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v57);
  *(_QWORD *)(v6 + 120) = v58;
  v59 = sub_1BC1F432C();
  v60 = objc_msgSend(v59, sel_trailingAnchor);

  v61 = objc_msgSend(v0, sel_contentView);
  v62 = objc_msgSend(v61, sel_trailingAnchor);

  v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v62);
  *(_QWORD *)(v6 + 128) = v63;
  v64 = sub_1BC1F432C();
  v65 = objc_msgSend(v64, sel_bottomAnchor);

  v66 = objc_msgSend(v0, sel_contentView);
  v67 = objc_msgSend(v66, sel_bottomAnchor);

  v68 = objc_msgSend(v65, sel_constraintEqualToAnchor_constant_, v67, -12.0);
  *(_QWORD *)(v6 + 136) = v68;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v70 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v70);

}

id FrequencyIntervalCollectionViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FrequencyIntervalCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Int __swiftcall FrequencyIntervalCollectionViewCell.numberOfComponents(in:)(UIPickerView *in)
{
  return 1;
}

Swift::Int __swiftcall FrequencyIntervalCollectionViewCell.pickerView(_:numberOfRowsInComponent:)(UIPickerView *_, Swift::Int numberOfRowsInComponent)
{
  Swift::Int v2;

  v2 = *(_QWORD *)(sub_1BC243F64() + 16);
  swift_bridgeObjectRelease();
  return v2;
}

Swift::String_optional __swiftcall FrequencyIntervalCollectionViewCell.pickerView(_:titleForRow:forComponent:)(UIPickerView *_, Swift::Int titleForRow, Swift::Int forComponent)
{
  uint64_t v4;
  void *v5;
  Swift::String_optional result;

  v4 = sub_1BC243F64();
  if (titleForRow < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(v4 + 16) <= (unint64_t)titleForRow)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  v4 = sub_1BC243C38(0);
LABEL_6:
  result.value._object = v5;
  result.value._countAndFlagsBits = v4;
  return result;
}

Swift::Void __swiftcall FrequencyIntervalCollectionViewCell.pickerView(_:didSelectRow:inComponent:)(UIPickerView *_, Swift::Int didSelectRow, Swift::Int inComponent)
{
  sub_1BC1F5700(didSelectRow);
}

uint64_t FrequencyIntervalCollectionViewCell.deselectionBehavior.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC2B2C6C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BC1F5538()
{
  uint64_t result;
  uint64_t v1;

  sub_1BC2B2F00();
  result = sub_1BC2B2EF4();
  qword_1EF3FEE10 = v1;
  return result;
}

void _s19HealthMedicationsUI35FrequencyIntervalCollectionViewCellC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___valueLabel] = 0;
  v2 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v4 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  *(_QWORD *)&v0[v2] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC1F5680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FrequencyIntervalPickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1F56C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FrequencyIntervalPickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC1F5700(unint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  int v16;
  void (*v17)(_BYTE *, uint64_t *);
  uint64_t result;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v26[24];
  uint64_t v27;
  char v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC0E1C64(0, &qword_1EF3FEE28, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v26[-v9];
  v11 = type metadata accessor for FrequencyIntervalPickerItem();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v15, (uint64_t)&v27);
  if (!v29)
  {
    sub_1BC0E1CFC((uint64_t)&v27, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_8;
  }
  sub_1BC0E1B94();
  v16 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_8:
    sub_1BC0E1CFC((uint64_t)v10, &qword_1EF3FEE28, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
LABEL_9:
    sub_1BC2B39A4();
    v23 = sub_1BC2B39D4();
    v24 = sub_1BC2B48C8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1BC0DC000, v23, v24, "Item is not a FrequencyIntervalPickerItem. Unable to update.", v25, 2u);
      MEMORY[0x1BCCEF3A0](v25, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1BC1F5680((uint64_t)v10, (uint64_t)v14);
  v17 = *(void (**)(_BYTE *, uint64_t *))&v14[*(int *)(v11 + 40)];
  if (!v17)
  {
    sub_1BC1F56C4((uint64_t)v14);
    goto LABEL_9;
  }
  swift_retain();
  result = sub_1BC243F64();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(result + 16) > a1)
  {
    v19 = *(_QWORD *)(result + 8 * a1 + 32);
    swift_bridgeObjectRelease();
    v20 = sub_1BC1F40C4();
    v27 = v19;
    sub_1BC243C38(0);
    v21 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setText_, v21);

    v22 = sub_1BC1F40C4();
    objc_msgSend(v22, sel_sizeToFit);

    objc_msgSend(v2, sel_invalidateIntrinsicContentSize);
    objc_msgSend(v2, sel_setNeedsLayout);
    v27 = v19;
    v28 = 0;
    v17(v14, &v27);
    sub_1BC0F2600((uint64_t)v17);
    return sub_1BC1F56C4((uint64_t)v14);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1F5A60()
{
  return sub_1BC0E008C(&qword_1EF3FEE30, 255, (uint64_t (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem, (uint64_t)&protocol conformance descriptor for FrequencyIntervalPickerItem);
}

uint64_t sub_1BC1F5A90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  v4 = *v3;
  if (*v3)
    v5 = v3[1];
  else
    v5 = 0;
  *a2 = v4;
  a2[1] = v5;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC1F5ADC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for FrequencyIntervalPickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC2B2438();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = *v19;
    v21 = v19[1];
    v22 = a3[8];
    v23 = a3[9];
    v24 = *((_BYTE *)a2 + v22);
    *v18 = v20;
    v18[1] = v21;
    *((_BYTE *)v4 + v22) = v24;
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = (char *)a2 + v23;
    v27 = *(_QWORD *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      v28 = *((_QWORD *)v26 + 1);
      *v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    v30 = a3[10];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    if (*v32)
    {
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
  }
  return v4;
}

uint64_t destroy for FrequencyIntervalPickerItem(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9]))
    result = swift_release();
  if (*(_QWORD *)(a1 + a2[10]))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for FrequencyIntervalPickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B2438();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = *v18;
  v20 = v18[1];
  v21 = a3[8];
  v22 = a3[9];
  v23 = *((_BYTE *)a2 + v21);
  *v17 = v19;
  v17[1] = v20;
  *((_BYTE *)a1 + v21) = v23;
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (char *)a2 + v22;
  v26 = *(_QWORD *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26)
  {
    v27 = *((_QWORD *)v25 + 1);
    *v24 = v26;
    v24[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  if (*v30)
  {
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  return a1;
}

_QWORD *assignWithCopy for FrequencyIntervalPickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a1 + v16);
  v20 = *(_QWORD *)((char *)a2 + v16);
  if (v19)
  {
    if (v20)
    {
      v21 = *((_QWORD *)v18 + 1);
      *v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v20)
  {
    v22 = *((_QWORD *)v18 + 1);
    *v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
LABEL_8:
  v23 = a3[10];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = *(_QWORD *)((char *)a1 + v23);
  v27 = *v25;
  if (!v26)
  {
    if (v27)
    {
      v29 = v25[1];
      *v24 = v27;
      v24[1] = v29;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    return a1;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_14;
  }
  v28 = v25[1];
  *v24 = v27;
  v24[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for FrequencyIntervalPickerItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = *v13;
  if (*v13)
  {
    v15 = v13[1];
    *v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  v16 = a3[10];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = *v18;
  if (*v18)
  {
    v20 = v18[1];
    *v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  return a1;
}

_QWORD *assignWithTake for FrequencyIntervalPickerItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a2 + v21);
  if (*(_QWORD *)((char *)a1 + v21))
  {
    if (v24)
    {
      v25 = *((_QWORD *)v23 + 1);
      *v22 = v24;
      v22[1] = v25;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *((_QWORD *)v23 + 1);
    *v22 = v24;
    v22[1] = v26;
    goto LABEL_8;
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
LABEL_8:
  v27 = a3[10];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v30 = *(_QWORD *)((char *)a1 + v27);
  v31 = *v29;
  if (!v30)
  {
    if (v31)
    {
      v33 = v29[1];
      *v28 = v31;
      v28[1] = v33;
      return a1;
    }
LABEL_14:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_14;
  }
  v32 = v29[1];
  *v28 = v31;
  v28[1] = v32;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FrequencyIntervalPickerItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1F6208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FrequencyIntervalPickerItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1F6290(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC1F6304()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for FrequencyIntervalCollectionViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.itemUpdated()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t sub_1BC1F640C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t MedicationDoseEventDataSource.__allocating_init(healthStore:forMedication:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v4 + 112) = a1;
  *(_QWORD *)(v4 + 120) = a2;
  return v4;
}

uint64_t MedicationDoseEventDataSource.init(healthStore:forMedication:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return v2;
}

uint64_t sub_1BC1F64B4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  v3 = sub_1BC2B39E0();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_1BC1F6C2C(0, &qword_1EF3FEFF8, MEMORY[0x1E0CB43C0]);
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC1F6554()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t KeyPath;
  _QWORD *v18;

  v1 = *(void **)(v0[4] + 120);
  if (v1)
  {
    sub_1BC0E7940();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BC2B92B0;
    v3 = (void *)objc_opt_self();
    v4 = v1;
    v5 = (void *)sub_1BC2B1FDC();
    v6 = objc_msgSend(v3, sel_predicateForSamplesWithinDateInterval_options_, v5, 0);

    *(_QWORD *)(v2 + 32) = v6;
    v7 = objc_msgSend(v4, sel_semanticIdentifier);
    v8 = objc_msgSend(v7, sel_stringValue);

    if (!v8)
    {
      sub_1BC2B4460();
      v8 = (id)sub_1BC2B4430();
      swift_bridgeObjectRelease();
    }
    v9 = objc_msgSend(v3, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v8);

    *(_QWORD *)(v2 + 40) = v9;
    sub_1BC2B45A4();
    sub_1BC0E1D38(0, &qword_1EDA0E9D0);
    v10 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v10);

  }
  else
  {
    v12 = (void *)objc_opt_self();
    v10 = (void *)sub_1BC2B1FDC();
    v11 = objc_msgSend(v12, sel_predicateForSamplesWithinDateInterval_options_, v10, 0);
  }
  v0[12] = v11;

  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4398];
  sub_1BC1F6BD8(0, &qword_1EF3FF008, &qword_1EF3FF010, MEMORY[0x1E0CB4398]);
  sub_1BC1F6C2C(0, &qword_1EF3FF010, v13);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v14 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  sub_1BC0E1D38(0, &qword_1EF3FF000);
  v15 = v11;
  sub_1BC2B4358();

  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAEB88];
  sub_1BC1F6BD8(0, &qword_1EF3FF018, &qword_1EF3FF020, MEMORY[0x1E0CAEB88]);
  sub_1BC1F6C2C(0, &qword_1EF3FF020, v16);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  KeyPath = swift_getKeyPath();
  MEMORY[0x1BCCEB884](KeyPath, 0);
  sub_1BC2B4364();
  v18 = (_QWORD *)swift_task_alloc();
  v0[13] = v18;
  *v18 = v0;
  v18[1] = sub_1BC1F6904;
  return sub_1BC2B4370();
}

uint64_t sub_1BC1F6904(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 120) = a1;
  return swift_task_switch();
}

uint64_t sub_1BC1F6978()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = sub_1BC11C9CC(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease();
  if (v1)
  {
    v2 = *(void **)(v0 + 96);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));

  }
  else
  {
    sub_1BC2B39C8();
    v3 = sub_1BC2B39D4();
    v4 = sub_1BC2B48C8();
    v5 = os_log_type_enabled(v3, v4);
    v6 = *(void **)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 48);
    if (v5)
    {
      v17 = *(_QWORD *)(v0 + 64);
      v16 = *(_QWORD *)(v0 + 48);
      v10 = (uint8_t *)swift_slowAlloc();
      v15 = v8;
      v11 = swift_slowAlloc();
      v18 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = sub_1BC2B54F8();
      *(_QWORD *)(v0 + 16) = sub_1BC12540C(v12, v13, &v18);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v3, v4, "[%s] Error fetching medication dose event samples", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v11, -1, -1);
      MEMORY[0x1BCCEF3A0](v10, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    v1 = MEMORY[0x1E0DEE9D8];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BC1F6B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC1F6BD8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC1F6C2C(255, a3, a4);
    v5 = sub_1BC2B53A8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC1F6C2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC0E1D38(255, &qword_1EF3FF000);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

char *keypath_get_selector_startDate()
{
  return sel_startDate;
}

void sub_1BC1F6CA0(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_startDate);
  sub_1BC2B23A8();

}

uint64_t sub_1BC1F6CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1BC1F6C2C(0, &qword_1EF3FF030, MEMORY[0x1E0CB4400]);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC1F6D64()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(*(_QWORD *)(v0 + 32) + 120);
  if (v1)
  {
    sub_1BC0E7940();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BC2B92B0;
    v3 = (void *)objc_opt_self();
    v4 = v1;
    v5 = (void *)sub_1BC2B1FDC();
    v6 = objc_msgSend(v3, sel_predicateForSamplesWithinDateInterval_options_, v5, 0);

    *(_QWORD *)(v2 + 32) = v6;
    v7 = objc_msgSend(v4, sel_semanticIdentifier);
    v8 = objc_msgSend(v7, sel_stringValue);

    if (!v8)
    {
      sub_1BC2B4460();
      v8 = (id)sub_1BC2B4430();
      swift_bridgeObjectRelease();
    }
    v9 = objc_msgSend(v3, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v8);

    *(_QWORD *)(v2 + 40) = v9;
    sub_1BC2B45A4();
    sub_1BC0E1D38(0, &qword_1EDA0E9D0);
    v10 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v10);

  }
  else
  {
    v12 = (void *)objc_opt_self();
    v10 = (void *)sub_1BC2B1FDC();
    v11 = objc_msgSend(v12, sel_predicateForSamplesWithinDateInterval_options_, v10, 0);
  }
  v13 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 32);
  v20 = *(_QWORD *)(v0 + 48);

  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4398];
  sub_1BC1F6BD8(0, &qword_1EF3FF008, &qword_1EF3FF010, MEMORY[0x1E0CB4398]);
  sub_1BC1F6C2C(0, &qword_1EF3FF010, v15);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v16 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType, v19);
  sub_1BC0E1D38(0, &qword_1EF3FF000);
  v17 = v11;
  sub_1BC2B4358();

  sub_1BC2B437C();
  sub_1BC2B4394();

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v13, v14);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MedicationDoseEventDataSource.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t MedicationDoseEventDataSource.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t MedicationDoseEventDataSource.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BC1F70F8()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for MedicationDoseEventDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicationDoseEventDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationDoseEventDataSource.__allocating_init(healthStore:forMedication:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MedicationDoseEventDataSource.fetchDoseEvents(in:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 120) + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BC1F719C;
  return v6(a1);
}

uint64_t sub_1BC1F719C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of MedicationDoseEventDataSource.observeDoseEvents(in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 128) + *(_QWORD *)(*(_QWORD *)v2 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1BC0FEB64;
  return v8(a1, a2);
}

id sub_1BC1F7260(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  objc_class *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  objc_super v21;

  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v12 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___boltIconImageView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___labelView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___secondaryLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton] = 0;
  v13 = (objc_class *)type metadata accessor for ConnectivityIssueCell();
  v21.receiver = v4;
  v21.super_class = v13;
  v14 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v14, sel_setSelectedBackgroundView_, 0);
  v15 = (void *)objc_opt_self();
  v16 = v14;
  v17 = objc_msgSend(v15, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  v18 = v16;
  sub_1BC2B3B30();
  v19 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 0, 1, v19);
  MEMORY[0x1BCCEE23C](v11);

  sub_1BC1F7E18();
  return v18;
}

id sub_1BC1F7450()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___boltIconImageView, (uint64_t (*)(void))sub_1BC1F7464);
}

id sub_1BC1F7464()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 4);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_configurationWithPointSize_, 48.0);
  v3 = (void *)sub_1BC2B4430();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
    v6 = objc_msgSend(v1, sel_configurationWithHierarchicalColor_, v5);

    v7 = objc_msgSend(v4, sel_imageByApplyingSymbolConfiguration_, v6);
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v0, sel_setImage_, v7);

  return v0;
}

id sub_1BC1F75D4()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___labelView, (uint64_t (*)(void))sub_1BC1F75E8);
}

id sub_1BC1F75E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v14 = sub_1BC2B3BCC();
  v0 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC2B3CD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v9 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v10 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v10);

  sub_1BC2B3C68();
  sub_1BC2B3BF0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v11 = (void *)sub_1BC2B3B9C();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v14);
  objc_msgSend(v7, sel_setFont_, v11);

  return v7;
}

id sub_1BC1F7824()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___secondaryLabel, (uint64_t (*)(void))sub_1BC1F7838);
}

id sub_1BC1F7838()
{
  id v0;
  id v1;
  id result;
  void *v3;
  id v4;
  void *v5;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v3 = result;
    MobileGestalt_get_wapiCapability();

    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v4 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v5 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setText_, v5, 0xE000000000000000);

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC1F79F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v19;

  v1 = v0;
  v2 = sub_1BC2B4EC8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  v9 = OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton);
  if (v10)
  {
    v11 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton);
  }
  else
  {
    sub_1BC2B4E8C();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v12 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B4E98();
    v13 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
    sub_1BC2B4E44();
    sub_1BC0E1D38(0, &qword_1EDA0FE08);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = (void *)sub_1BC2B4ED4();
    sub_1BC0E1D38(0, &qword_1EF3F90D8);
    v15 = (void *)sub_1BC2B4DA8();
    objc_msgSend(v14, sel_addAction_forControlEvents_, v15, 64);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    v16 = *(void **)(v1 + v9);
    *(_QWORD *)(v1 + v9) = v14;
    v11 = v14;

    v10 = 0;
  }
  v17 = v10;
  return v11;
}

id sub_1BC1F7C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  sub_1BC0E1C64(0, &qword_1EF3F9D20, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v12 - v4;
  sub_1BC2B2228();
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v7 = result;
    sub_1BC0E1CB0((uint64_t)v5, (uint64_t)v3, &qword_1EF3F9D20, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v8 = sub_1BC2B2234();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) != 1)
    {
      v10 = (void *)sub_1BC2B2210();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
    }
    sub_1BC1069E4(MEMORY[0x1E0DEE9D8]);
    v11 = (void *)sub_1BC2B43AC();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_openSensitiveURL_withOptions_, v10, v11);

    return (id)sub_1BC0E1CFC((uint64_t)v5, &qword_1EF3F9D20, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC1F7E18()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA730;
  *(_QWORD *)(v2 + 32) = sub_1BC1F7450();
  *(_QWORD *)(v2 + 40) = sub_1BC1F75D4();
  *(_QWORD *)(v2 + 48) = sub_1BC1F7824();
  *(_QWORD *)(v2 + 56) = sub_1BC1F79F0();
  sub_1BC2B45A4();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v4 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setSpacing_, 16.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v5);

  v26 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2BA730;
  v8 = objc_msgSend(v5, sel_centerXAnchor);
  v9 = objc_msgSend(v1, sel_contentView);
  v10 = objc_msgSend(v9, sel_centerXAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v7 + 32) = v11;
  v12 = objc_msgSend(v5, sel_centerYAnchor);
  v13 = objc_msgSend(v1, sel_contentView);
  v14 = objc_msgSend(v13, sel_centerYAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(_QWORD *)(v7 + 40) = v15;
  v16 = objc_msgSend(v5, sel_leadingAnchor);
  v17 = objc_msgSend(v1, sel_contentView);
  v18 = objc_msgSend(v17, sel_layoutMarginsGuide);

  v19 = objc_msgSend(v18, sel_leadingAnchor);
  v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v7 + 48) = v20;
  v21 = objc_msgSend(v5, sel_trailingAnchor);
  v22 = objc_msgSend(v1, sel_contentView);
  v23 = objc_msgSend(v22, sel_layoutMarginsGuide);

  v24 = objc_msgSend(v23, sel_trailingAnchor);
  v25 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v24);

  *(_QWORD *)(v7 + 56) = v25;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v27 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v27);

}

id sub_1BC1F822C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConnectivityIssueCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ConnectivityIssueCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC1F82F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC1F8354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC1F83AC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC1F83F0()
{
  uint64_t result;
  uint64_t v1;

  type metadata accessor for ConnectivityIssueCell();
  sub_1BC1F84AC();
  result = sub_1BC2B2930();
  qword_1EF4029B0 = result;
  *(_QWORD *)algn_1EF4029B8 = v1;
  return result;
}

uint64_t type metadata accessor for ConnectivityIssueItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC1F8450()
{
  uint64_t v0;

  if (qword_1EF3F8158 != -1)
    swift_once();
  v0 = qword_1EF4029B0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1BC1F84AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8EB8;
  if (!qword_1EF3F8EB8)
  {
    v1 = type metadata accessor for ConnectivityIssueCell();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C2138, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8EB8);
  }
  return result;
}

void sub_1BC1F84F0()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___boltIconImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___labelView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___secondaryLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t type metadata accessor for MedicationSourceListDataSource()
{
  uint64_t result;

  result = qword_1EF3FF230;
  if (!qword_1EF3FF230)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1F85D0()
{
  return swift_initClassMetadata2();
}

void sub_1BC1F8640(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = qword_1EF3FF218;
  v3 = *(void **)(v1 + qword_1EF3FF218);
  *(_QWORD *)(v1 + qword_1EF3FF218) = a1;
  v6 = a1;
  if (v3)
    objc_msgSend(v3, sel_unregisterObserver_, v1);
  v4 = *(void **)(v1 + v2);
  if (v4)
  {
    objc_msgSend(v4, sel_registerObserver_, v1);
    v5 = *(void **)(v1 + v2);
    if (v5)
      objc_msgSend(v5, sel_fetchSources);
  }

}

uint64_t sub_1BC1F86CC(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD v16[2];

  v4 = v3;
  v8 = sub_1BC2B2438();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + qword_1EF3FF218) = 0;
  *(_QWORD *)(v4 + qword_1EF3FF220) = MEMORY[0x1E0DEE9E8];
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + qword_1EF3FF208) = a1;
  *(_QWORD *)(v4 + qword_1EF3FF210) = a2;
  swift_unknownObjectWeakAssign();
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  v12 = a1;
  v13 = a2;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v14 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC1F89A0();
  swift_release();

  return v14;
}

uint64_t sub_1BC1F887C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_1BC1F88D8()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC104940(v0);
  swift_bridgeObjectRelease();
  v1 = sub_1BC2B2C60();

  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1F89A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  id v21;
  void *v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;

  v1 = v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v38 = (char *)&v32 - v3;
  sub_1BC1FA22C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1FA35C();
  v10 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  v35 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1FA4B4();
  v37 = v13;
  v39 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC1FA558();
  v16 = *(_QWORD *)(v15 - 8);
  v40 = v15;
  v41 = v16;
  MEMORY[0x1E0C80A78](v15);
  v36 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v1 + qword_1EF3FF208);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v1;
  v20 = MEMORY[0x1E0C960D8];
  sub_1BC1FA3F4(0, &qword_1EF3FF308, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC1FA474(&qword_1EF3FF318, &qword_1EF3FF308, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v20, MEMORY[0x1E0C96108]);
  v21 = v18;
  swift_retain();
  sub_1BC2B3F44();
  sub_1BC0E519C(&qword_1EF3FF360, (uint64_t (*)(uint64_t))sub_1BC1FA22C, MEMORY[0x1E0C96148]);
  v22 = (void *)sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v42 = v22;
  v43 = MEMORY[0x1E0DEE9E8];
  v23 = MEMORY[0x1E0C95D78];
  sub_1BC1FA3F4(0, &qword_1EF3FF328, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC1FA474(&qword_1EF3FF330, &qword_1EF3FF328, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v23, MEMORY[0x1E0C95D90]);
  sub_1BC2B3FD4();
  swift_release();
  sub_1BC0E1D38(0, &qword_1EF3FF340);
  sub_1BC0E519C(&qword_1EF3FF348, (uint64_t (*)(uint64_t))sub_1BC1FA35C, MEMORY[0x1E0C957E8]);
  swift_retain();
  v25 = v33;
  v24 = v34;
  sub_1BC2B4004();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v24);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v42 = (id)sub_1BC2B4A0C();
  v26 = sub_1BC2B49C4();
  v27 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v38, 1, 1, v26);
  sub_1BC0E519C(&qword_1EF3FF358, (uint64_t (*)(uint64_t))sub_1BC1FA4B4, MEMORY[0x1E0C95950]);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v29 = v36;
  v28 = v37;
  sub_1BC2B4064();
  sub_1BC101BB8(v27);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v28);
  sub_1BC0E519C(&qword_1EF3FF368, (uint64_t (*)(uint64_t))sub_1BC1FA558, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v30 = v40;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v30);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

void sub_1BC1F8E60(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v3 = *(id *)(a1 + qword_1EF3FF210);
  v4 = swift_bridgeObjectRetain();
  sub_1BC133514(v4);
  swift_bridgeObjectRelease();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v5 = (void *)sub_1BC2B4A0C();
  v6 = objc_allocWithZone(MEMORY[0x1E0D2F890]);
  sub_1BC0E1D38(0, &qword_1EF3FA790);
  v7 = (void *)sub_1BC2B4580();
  swift_release();
  v8 = objc_msgSend(v6, sel_initWithHealthStore_sources_queue_, v3, v7, v5);

  *a2 = v8;
}

uint64_t sub_1BC1F8F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  _QWORD v34[2];

  v7 = sub_1BC2B2438();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v34 - v12;
  if (sub_1BC2B4460() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
LABEL_13:
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v23 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v24 = sub_1BC2B2D68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v13, 1, 1, v24);
    v25 = sub_1BC2B2D80();
    v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
    a3[3] = v25;
    a3[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v26, MEMORY[0x1E0D2B310]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1BC2B2D74();
  }
  if (sub_1BC2B4460() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v20 = sub_1BC2B296C();
      v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v20;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v21, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v27 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BC2B92D0;
  v34[0] = *(_QWORD *)(v3 + qword_1EF3FF208);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v29 = sub_1BC2B3758();
  v31 = v30;
  *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v28 + 64) = sub_1BC0F2748();
  *(_QWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 40) = v31;
  sub_1BC2B446C();
  swift_bridgeObjectRelease();
  v34[0] = 0x74497265746F6F46;
  v34[1] = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v32 = sub_1BC2B2EDC();
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v32;
  a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v33, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC2B2ED0();
}

uint64_t sub_1BC1F9418@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC1FA3F4(0, &qword_1EF3FF308, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v7 = a1;
  swift_retain();
  result = sub_1BC2B3F38();
  *a3 = result;
  return result;
}

void sub_1BC1F94B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v17[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = objc_msgSend(a3, sel_semanticIdentifier);
  v10 = objc_msgSend(v9, sel_stringValue);

  if (!v10)
  {
    sub_1BC2B4460();
    v10 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v10);

  v12 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1BC0F22BC;
  *(_QWORD *)(v13 + 24) = v8;
  v14 = objc_allocWithZone(MEMORY[0x1E0CB6C28]);
  v17[4] = sub_1BC1FA6C8;
  v17[5] = v13;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BC1F9D34;
  v17[3] = &block_descriptor_20;
  v15 = _Block_copy(v17);
  v16 = objc_msgSend(v14, sel_initWithSampleType_samplePredicate_completionHandler_, v12, v11, v15);

  _Block_release(v15);
  swift_release();
  objc_msgSend(*(id *)(a4 + qword_1EF3FF210), sel_executeQuery_, v16);

}

void sub_1BC1F9690(int a1, void *a2, id a3, void (*a4)(id, uint64_t))
{
  id v6;
  void *v7;

  if (a3)
  {
    v6 = a3;
    a4(a3, 1);

  }
  else
  {
    if (a2)
      v7 = a2;
    else
      v7 = (void *)MEMORY[0x1E0DEE9E8];
    a4(v7, 0);
  }
}

void sub_1BC1F9704()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1F9730()
{
  return type metadata accessor for MedicationSourceListDataSource();
}

uint64_t sub_1BC1F9738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_1BC2B2C9C();
  sub_1BC2B2C90();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  v8 = sub_1BC2B2D14();
  v7(v4, v0);
  return v8;
}

uint64_t sub_1BC1F97FC()
{
  type metadata accessor for MedicationSourceListCell(0);
  sub_1BC2B497C();
  type metadata accessor for MedicationSourceListNoneCell(0);
  sub_1BC2B497C();
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  return sub_1BC2B4988();
}

uint64_t sub_1BC1F9878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC1F8F50(a1, a2, a3);
}

uint64_t sub_1BC1F9898()
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2C22A8);
  return sub_1BC2B3074();
}

uint64_t sub_1BC1F98E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  __int128 v27;
  uint64_t v28;

  v2 = v1;
  v4 = sub_1BC2B2438();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_sources);
  if (!v8)
    return sub_1BC2B2C18();
  v9 = v8;
  v10 = objc_msgSend(v8, sel_allSources);

  sub_1BC0E1D38(0, &qword_1EF3FF2E8);
  sub_1BC0F1488(&qword_1EF3FF2F0, &qword_1EF3FF2E8, 0x1E0D2F878, MEMORY[0x1E0DEFCF8]);
  v11 = sub_1BC2B47B4();

  swift_retain();
  v12 = sub_1BC1F9E08(v11, v2);
  swift_bridgeObjectRelease();
  swift_release();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_4;
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v15 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B2BC4() - 8) + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject();
    v27 = xmmword_1BC2B92D0;
    *(_OWORD *)(v17 + 16) = xmmword_1BC2B92D0;
    v28 = v17 + v16;
    sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v27;
    v19 = type metadata accessor for MedicationSourceListNoneItem();
    v20 = (_QWORD *)swift_allocObject();
    type metadata accessor for MedicationSourceListNoneCell(0);
    v20[2] = sub_1BC2B2930();
    v20[3] = v21;
    sub_1BC2B242C();
    v22 = sub_1BC2B23FC();
    v23 = v4;
    v25 = v24;
    v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v7, v23);
    v20[4] = v22;
    v20[5] = v25;
    *(_QWORD *)(v18 + 56) = v19;
    *(_QWORD *)(v18 + 64) = sub_1BC0E519C(&qword_1EF3FF2F8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSourceListNoneItem, (uint64_t)&unk_1BC2C4CA0);
    *(_QWORD *)(v18 + 32) = v20;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    v26(v7, v23);
    goto LABEL_8;
  }
  if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_7;
LABEL_4:
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC0F87D4(v12);
  swift_bridgeObjectRelease();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_8:
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1F9CCC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  swift_retain();
  sub_1BC1F98E4(v3);

  return swift_release();
}

uint64_t sub_1BC1F9D08()
{
  return sub_1BC0E519C(&qword_1EF3FF2E0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSourceListDataSource, (uint64_t)&unk_1BC2C2228);
}

uint64_t sub_1BC1F9D34(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC0E1D38(0, &qword_1EF3FA790);
    sub_1BC0F1488(&qword_1EF3FA798, &qword_1EF3FA790, 0x1E0CB6C18, MEMORY[0x1E0DEFCF8]);
    v5 = sub_1BC2B47B4();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1F9E08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v41 = a2;
  v3 = sub_1BC2B2438();
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    sub_1BC0E1D38(0, &qword_1EF3FF2E8);
    sub_1BC0F1488(&qword_1EF3FF2F0, &qword_1EF3FF2E8, 0x1E0D2F878, MEMORY[0x1E0DEFCF8]);
    result = sub_1BC2B47E4();
    a1 = v44;
    v36 = v45;
    v6 = v46;
    v7 = v47;
    v8 = v48;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 56);
    v36 = a1 + 56;
    v11 = ~v9;
    v12 = -v9;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v8 = v13 & v10;
    result = swift_bridgeObjectRetain();
    v6 = v11;
    v7 = 0;
  }
  v34[0] = v6;
  v34[3] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v35 = (unint64_t)(v6 + 64) >> 6;
  v34[2] = MEMORY[0x1E0DEE9B0] + 8;
  v37 = a1;
  if (a1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v8)
    {
      v14 = (v8 - 1) & v8;
      v15 = __clz(__rbit64(v8)) | (v7 << 6);
      v16 = v7;
      goto LABEL_29;
    }
    v19 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v19 >= v35)
      goto LABEL_34;
    v20 = *(_QWORD *)(v36 + 8 * v19);
    v16 = v7 + 1;
    if (!v20)
    {
      v16 = v7 + 2;
      if (v7 + 2 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v16);
      if (!v20)
      {
        v16 = v7 + 3;
        if (v7 + 3 >= v35)
          goto LABEL_34;
        v20 = *(_QWORD *)(v36 + 8 * v16);
        if (!v20)
        {
          v16 = v7 + 4;
          if (v7 + 4 >= v35)
            goto LABEL_34;
          v20 = *(_QWORD *)(v36 + 8 * v16);
          if (!v20)
          {
            v16 = v7 + 5;
            if (v7 + 5 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v16);
            if (!v20)
            {
              v21 = v7 + 6;
              while (v35 != v21)
              {
                v20 = *(_QWORD *)(v36 + 8 * v21++);
                if (v20)
                {
                  v16 = v21 - 1;
                  goto LABEL_28;
                }
              }
LABEL_34:
              sub_1BC1061A8();
              return v49;
            }
          }
        }
      }
    }
LABEL_28:
    v14 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_29:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v15);
    if (!v18)
      goto LABEL_34;
    while (1)
    {
      v22 = *(void **)(v41 + qword_1EF3FF208);
      v23 = *(void **)(v41 + qword_1EF3FF210);
      type metadata accessor for MedicationSourceListItem();
      v24 = (_QWORD *)swift_allocObject();
      type metadata accessor for MedicationSourceListCell(0);
      v25 = v22;
      v26 = v18;
      v27 = v23;
      v24[5] = sub_1BC2B2930();
      v24[6] = v28;
      v29 = v38;
      sub_1BC2B242C();
      v30 = sub_1BC2B23FC();
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
      v24[7] = v30;
      v24[8] = v32;
      v24[2] = v25;
      v24[3] = v26;
      v24[4] = v27;

      MEMORY[0x1BCCEDCF0](v33);
      if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
      sub_1BC2B4604();
      result = sub_1BC2B45A4();
      v7 = v16;
      v8 = v14;
      a1 = v37;
      if ((v37 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v17 = sub_1BC2B512C();
      if (v17)
      {
        v42 = v17;
        sub_1BC0E1D38(0, &qword_1EF3FF2E8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v18 = v43;
        swift_unknownObjectRelease();
        v16 = v7;
        v14 = v8;
        if (v18)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
  return result;
}

void sub_1BC1FA22C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FF300)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC1FA3F4(255, &qword_1EF3FF308, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC1FA474(&qword_1EF3FF318, &qword_1EF3FF308, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC2B3F50();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FF300);
  }
}

void sub_1BC1FA2C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FF310)
  {
    sub_1BC0E1D38(255, &qword_1EF3FA790);
    sub_1BC0F1488(&qword_1EF3FA798, &qword_1EF3FA790, 0x1E0CB6C18, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC2B47F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FF310);
  }
}

void sub_1BC1FA35C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FF320)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC1FA3F4(255, &qword_1EF3FF328, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC1FA474(&qword_1EF3FF330, &qword_1EF3FF328, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC2B3DC4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FF320);
  }
}

void sub_1BC1FA3F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC1FA2C4();
    v7 = v6;
    v8 = sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC1FA474(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC1FA3F4(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC1FA4B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FF338)
  {
    sub_1BC1FA35C();
    sub_1BC0E1D38(255, &qword_1EF3FF340);
    sub_1BC0E519C(&qword_1EF3FF348, (uint64_t (*)(uint64_t))sub_1BC1FA35C, MEMORY[0x1E0C957E8]);
    v0 = sub_1BC2B3DF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FF338);
  }
}

void sub_1BC1FA558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FF350)
  {
    sub_1BC1FA4B4();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF3FF358, (uint64_t (*)(uint64_t))sub_1BC1FA4B4, MEMORY[0x1E0C95950]);
    sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FF350);
  }
}

uint64_t sub_1BC1FA638@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC1F9418(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BC1FA640(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BC1F8E60(v1, a1);
}

void sub_1BC1FA648(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1BC1F8640(v1);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC1FA69C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1F94B4(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC1FA6A4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC1FA6C8(int a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_1BC1F9690(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

char *sub_1BC1FA6D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView);
  }
  else
  {
    v4 = sub_1BC1FA734(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_1BC1FA734(uint64_t a1)
{
  uint64_t v1;
  objc_class *v2;
  char *v3;
  char *v4;
  void *v5;
  double v6;
  objc_super v8;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView_severityLevel);
  v2 = (objc_class *)type metadata accessor for DrugInteractionSeverityLevelView();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel] = v1;
  v8.receiver = v3;
  v8.super_class = v2;
  v4 = (char *)objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC144DC4();
  v5 = *(void **)&v4[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview];
  if (v5)
    objc_msgSend(v5, sel_hk_alignConstraintsWithView_, v4);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v6) = 1144750080;
  objc_msgSend(v4, sel_setContentCompressionResistancePriority_forAxis_, 0, v6);
  return v4;
}

id sub_1BC1FA82C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v13 = sub_1BC2B4460();
    v14 = v7;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v13, v14);

    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC1FA9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  objc_super v11;

  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView_severityLevel] = a1;
  v4 = &v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView_interactionContent];
  *(_QWORD *)v4 = a2;
  *((_QWORD *)v4 + 1) = a3;
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for InteractionDetailEducationView();
  v5 = objc_msgSendSuper2(&v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = sub_1BC1FA6D4();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = sub_1BC1FA82C();
  objc_msgSend(v5, sel_addSubview_, v7);

  v8 = sub_1BC1FA82C();
  v9 = (void *)sub_1BC2B4430();
  objc_msgSend(v8, sel_setText_, v9);

  sub_1BC1FAC3C();
  return v5;
}

id InteractionDetailEducationView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InteractionDetailEducationView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC1FAC3C()
{
  void *v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;

  v31 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2BAF60;
  v2 = sub_1BC1FA6D4();
  v3 = objc_msgSend(v2, sel_topAnchor);

  v4 = objc_msgSend(v0, sel_topAnchor);
  v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v4);

  *(_QWORD *)(v1 + 32) = v5;
  v6 = sub_1BC1FA6D4();
  v7 = objc_msgSend(v6, sel_leadingAnchor);

  v8 = objc_msgSend(v0, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v1 + 40) = v9;
  v10 = sub_1BC1FA6D4();
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  v12 = objc_msgSend(v0, sel_trailingAnchor);
  v13 = objc_msgSend(v11, sel_constraintLessThanOrEqualToAnchor_, v12);

  *(_QWORD *)(v1 + 48) = v13;
  v14 = sub_1BC1FA6D4();
  v15 = objc_msgSend(v14, sel_bottomAnchor);

  v16 = sub_1BC1FA82C();
  v17 = objc_msgSend(v16, sel_topAnchor);

  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, -8.0);
  *(_QWORD *)(v1 + 56) = v18;
  v19 = sub_1BC1FA82C();
  v20 = objc_msgSend(v19, sel_leadingAnchor);

  v21 = objc_msgSend(v0, sel_leadingAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(_QWORD *)(v1 + 64) = v22;
  v23 = sub_1BC1FA82C();
  v24 = objc_msgSend(v23, sel_trailingAnchor);

  v25 = objc_msgSend(v0, sel_trailingAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v1 + 72) = v26;
  v27 = sub_1BC1FA82C();
  v28 = objc_msgSend(v27, sel_bottomAnchor);

  v29 = objc_msgSend(v0, sel_bottomAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(_QWORD *)(v1 + 80) = v30;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v32 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v32);

}

id InteractionDetailEducationView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void InteractionDetailEducationView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionDetailEducationView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionDetailEducationView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractionDetailEducationView()
{
  return objc_opt_self();
}

uint64_t method lookup function for InteractionDetailEducationView()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for MedicationStrengthsDataSource()
{
  uint64_t result;

  result = qword_1EF3FF3C0;
  if (!qword_1EF3FF3C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1FB15C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B3530();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC1FB1D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_1BC1FC9B0(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_1BC1FB224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v9;
  uint64_t v10;

  v4 = sub_1BC2B2D20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1BC2B2CC0();
    v9 = (void *)sub_1BC2B2D14();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v9, sel_contentInsets);
    objc_msgSend(v9, sel_setContentInsets_, 0.0);
    objc_msgSend(v9, sel_contentInsets);
    objc_msgSend(v9, sel_setContentInsets_);
  }
  else
  {
    if (!a1)
      return sub_1BC26B3D4(0, a2);
    sub_1BC2B2CC0();
    v9 = (void *)sub_1BC2B2D14();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (uint64_t)v9;
}

_QWORD *sub_1BC1FB354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v26;
  uint64_t v27;
  void *v28;
  unsigned __int8 v29;

  v4 = v3;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v11 = (uint64_t *)(v3 + qword_1EF4029D0);
  v26 = (char *)sub_1BC2B4460();
  v27 = v12;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v13 = (uint64_t)v26;
  v14 = v27;
  swift_retain();
  swift_bridgeObjectRelease();
  *v11 = v13;
  v11[1] = v14;
  v15 = v4 + qword_1EF3FF3B8;
  v16 = sub_1BC2B3530();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a3, v16);
  swift_release();
  sub_1BC0FC574(a1, (uint64_t)v10, type metadata accessor for MedicationSearchItem);
  v18 = type metadata accessor for MedicationSearchItem(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 0, 1, v18);
  swift_retain();
  v19 = sub_1BC26ECD4((uint64_t)v10, a2);
  swift_release();
  swift_retain();
  v20 = sub_1BC1FB65C();
  if (!(v20 >> 62))
  {
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_12:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!sub_1BC2B52D0())
    goto LABEL_12;
LABEL_3:
  if ((v20 & 0xC000000000000001) != 0)
  {
    v21 = (char *)MEMORY[0x1BCCEE950](0, v20);
  }
  else
  {
    if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    v21 = (char *)*(id *)(v20 + 32);
  }
  v10 = v21;
  swift_bridgeObjectRelease();
  v22 = sub_1BC1FB65C();
  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
LABEL_17:
  v23 = sub_1BC2B52D0();
LABEL_8:
  swift_bridgeObjectRelease();
  if (v23 != 1)
  {

    swift_release();
    swift_release();
LABEL_13:
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
    sub_1BC0E8594(a1, type metadata accessor for MedicationSearchItem);
    return v19;
  }
  v27 = 0;
  v28 = 0;
  v26 = v10;
  v29 = 0;
  v24 = v10;
  sub_1BC2B3EC0();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
  sub_1BC0E8594(a1, type metadata accessor for MedicationSearchItem);
  sub_1BC1287BC((uint64_t)v26, v27, v28, v29);
  return v19;
}

uint64_t sub_1BC1FB65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v1 = sub_1BC2B37C4();
  v29 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BC2B34A0();
  v3 = *(_QWORD *)(v27 - 8);
  v4 = MEMORY[0x1E0C80A78](v27);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v12 = type metadata accessor for MedicationSearchItem.Source(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v26 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v26 - v19;
  sub_1BC0E8644(v0 + qword_1EF4026C0, (uint64_t)v11);
  v21 = type metadata accessor for MedicationSearchItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v11, 1, v21) == 1)
  {
    sub_1BC1D7578((uint64_t)v11);
    return MEMORY[0x1E0DEE9D8];
  }
  v26 = v1;
  sub_1BC0FC574((uint64_t)v11, (uint64_t)v18, type metadata accessor for MedicationSearchItem.Source);
  sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationSearchItem);
  sub_1BC1FCC0C((uint64_t)v18, (uint64_t)v20);
  sub_1BC0FC574((uint64_t)v20, (uint64_t)v15, type metadata accessor for MedicationSearchItem.Source);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BC0E8594((uint64_t)v15, type metadata accessor for MedicationSearchItem.Source);
    sub_1BC0E8594((uint64_t)v20, type metadata accessor for MedicationSearchItem.Source);
    return MEMORY[0x1E0DEE9D8];
  }
  v22 = v27;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v15, v27);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v22);
  v23 = v28;
  sub_1BC2B37D0();
  sub_1BC2B37AC();
  swift_getKeyPath();
  v24 = sub_1BC2B45E0();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v26);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v22);
  sub_1BC0E8594((uint64_t)v20, type metadata accessor for MedicationSearchItem.Source);
  return v24;
}

uint64_t sub_1BC1FB980(unint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  id v6;

  v4 = (void *)sub_1BC26B3D4(a1, a2);
  v5 = (uint64_t)v4;
  if (a1 >= 2)
  {
    if (a1 != 2)
    {
      v6 = v4;
      v5 = sub_1BC1FB224(a1, a2);
LABEL_6:

      return v5;
    }
    if (v4)
    {
      v6 = v4;
      objc_msgSend(v6, sel_contentInsets);
      objc_msgSend(v6, sel_setContentInsets_, 4.0);
      goto LABEL_6;
    }
  }
  return v5;
}

uint64_t sub_1BC1FBA08()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = sub_1BC1FB65C();
  swift_retain();
  v3 = sub_1BC1FB1D8(v2, (uint64_t)v0, v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC1FBA6C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void (*v22)(id *, _QWORD);
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  id v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t *v50;
  _QWORD v52[3];
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD v71[2];
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v67 = a3;
  v5 = sub_1BC2B2FA8();
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)v52 - v9;
  v10 = sub_1BC2B2C6C();
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B3A34();
  v58 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  MEMORY[0x1E0C80A78](v12);
  v57 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v7);
  MEMORY[0x1E0C80A78](v14);
  v53 = (char *)v52 - v15;
  v55 = sub_1BC2B3A58();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1BC2B3CD4();
  v77 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  sub_1BC2B3C80();
  sub_1BC2B4F40();
  sub_1BC2B3C98();
  v56 = (id)objc_opt_self();
  v21 = objc_msgSend(v56, sel_labelColor);
  v69 = v19;
  v22 = (void (*)(id *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v22(&v72, 0);
  v62 = a2;
  sub_1BC2B3ED8();
  v23 = v75;
  if (v75 == 255)
  {
    v27 = 0;
  }
  else
  {
    v25 = (uint64_t)v72;
    v24 = v73;
    v26 = v74;
    if ((v75 & 1) != 0)
    {
      sub_1BC1287BC((uint64_t)v72, v73, v74, v75);
      v27 = 0;
    }
    else
    {
      v27 = objc_msgSend(v72, sel_identifier);
      sub_1BC1287BC(v25, v24, v26, v23);
    }
  }
  v28 = objc_msgSend(v20, sel_identifier);
  v29 = v28;
  if (v27)
  {
    if (v28)
    {
      sub_1BC1FCBD0();
      v30 = v27;
      sub_1BC2B4D84();

    }
    else
    {

    }
  }
  else if (v28)
  {

  }
  v72 = (id)sub_1BC2B54F8();
  v73 = v31;
  sub_1BC2B44FC();
  sub_1BC2B4F10();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v52[2] = v72;
  v52[1] = v73;
  v32 = v70;
  v75 = v70;
  v76 = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v72);
  (*(void (**)(uint64_t *, char *, uint64_t))(v77 + 16))(boxed_opaque_existential_1, v69, v32);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v34 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v53, 1, 1, v34);
  sub_1BC2B3A4C();
  v36 = v58;
  v35 = v59;
  v37 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, *MEMORY[0x1E0DC1C20], v59);
  sub_1BC2B3AC4();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v55);
  v38 = swift_allocObject();
  v39 = v62;
  swift_weakInit();
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v38;
  *(_QWORD *)(v40 + 24) = v20;
  v41 = v63;
  *v63 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v60 + 104))(v41, *MEMORY[0x1E0D2B168], v61);
  swift_retain();
  v42 = v20;
  v43 = v66;
  sub_1BC2B3B24();
  v44 = objc_msgSend(v56, sel_secondarySystemBackgroundColor);
  sub_1BC2B3B18();
  v45 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v43, 0, 1, v45);
  v47 = *(_QWORD *)(v39 + qword_1EF4029D0);
  v46 = *(_QWORD *)(v39 + qword_1EF4029D0 + 8);
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v71, ".StrengthCell.");
  HIBYTE(v71[1]) = -18;
  sub_1BC2B4F40();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v71[0] = v47;
  v71[1] = v46;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v68, *MEMORY[0x1E0D2B8C8], v65);
  v48 = sub_1BC2B2D98();
  v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
  v50 = v67;
  v67[3] = v48;
  v50[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v49, MEMORY[0x1E0D2B340]);
  __swift_allocate_boxed_opaque_existential_1(v50);
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v69, v70);
  return swift_release();
}

uint64_t sub_1BC1FC1BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;
  id v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    v5 = a3;
    sub_1BC2B3EC0();

    return swift_release();
  }
  return result;
}

uint64_t sub_1BC1FC25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  _QWORD v14[2];
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  unsigned __int8 v20;

  v0 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3ED8();
  v4 = v20;
  if (v20 == 255)
    return MEMORY[0x1E0DEE9D8];
  v5 = v17;
  v6 = v18;
  v7 = v19;
  if ((v20 & 1) != 0 || (v8 = sub_1BC2B4F28()) == 0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v9 = (void *)v8;
    sub_1BC2B4F4C();
    v16 = v6;

    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BC2B92D0;
    v15 = (uint64_t *)(v10 + 32);
    v14[1] = sub_1BC26E5EC();
    swift_bridgeObjectRelease();
    v17 = 0x74497265746F6F46;
    v18 = 0xEB000000005F6D65;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v6 = v16;
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v11 = sub_1BC2B2EDC();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
    *(_QWORD *)(v10 + 56) = v11;
    *(_QWORD *)(v10 + 64) = sub_1BC0E519C(&qword_1EF3F8B78, v12, MEMORY[0x1E0D2B6A8]);
    __swift_allocate_boxed_opaque_existential_1(v15);
    sub_1BC2B2EC4();
  }
  sub_1BC1287BC(v5, v6, v7, v4);
  return v10;
}

uint64_t sub_1BC1FC464()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
  sub_1BC2B497C();
  sub_1BC2B3038();
  sub_1BC2B497C();
  type metadata accessor for CustomStrengthOptionCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FF418, (uint64_t (*)(uint64_t))type metadata accessor for CustomStrengthOptionCell, (uint64_t)&unk_1BC2C45BC);
  return sub_1BC2B497C();
}

uint64_t sub_1BC1FC520()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92D0;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B2144();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v6 = sub_1BC2B2144();
  v8 = v7;
  swift_bridgeObjectRelease();

  v9 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 56) = &type metadata for CustomStrengthOptionItem;
  *(_QWORD *)(v0 + 64) = sub_1BC1FC930();
  v10 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 32) = v10;
  type metadata accessor for CustomStrengthOptionCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FF418, (uint64_t (*)(uint64_t))type metadata accessor for CustomStrengthOptionCell, (uint64_t)&unk_1BC2C45BC);
  swift_retain();
  v11 = sub_1BC2B2930();
  v10[2] = v2;
  v10[3] = v4;
  v10[4] = v6;
  v10[5] = v8;
  v10[6] = sub_1BC1FC928;
  v10[7] = v9;
  v10[8] = v11;
  v10[9] = v12;
  swift_release();
  return v0;
}

uint64_t sub_1BC1FC754()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1BC2B3EC0();
    return swift_release();
  }
  return result;
}

void sub_1BC1FC7DC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC1FC808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1EF3FF3B8;
  v2 = sub_1BC2B3530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1FC858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BC2B2C60();
  swift_release();
  sub_1BC1D7578(v0 + qword_1EF4026C0);
  swift_bridgeObjectRelease();
  v1 = v0 + qword_1EF3FF3B8;
  v2 = sub_1BC2B3530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1FC8FC()
{
  return type metadata accessor for MedicationStrengthsDataSource();
}

uint64_t sub_1BC1FC904()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC1FC928()
{
  return sub_1BC1FC754();
}

unint64_t sub_1BC1FC930()
{
  unint64_t result;

  result = qword_1EF3FF410;
  if (!qword_1EF3FF410)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for CustomStrengthOptionItem, &type metadata for CustomStrengthOptionItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FF410);
  }
  return result;
}

uint64_t sub_1BC1FC974()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC1FC9B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v22 = a2;
  v23 = a3;
  if (a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    if (!v6)
      return v7;
    v28 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC125B04(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v28;
    v21 = a1 & 0xC000000000000001;
    while (v6 != v9)
    {
      if (v21)
        v10 = (id)MEMORY[0x1BCCEE950](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v24 = v10;
      sub_1BC1FBA6C(&v24, v22, v25);
      if (v4)
      {
        swift_release();

        return v7;
      }
      v4 = 0;

      v28 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      if (v13 >= v12 >> 1)
        sub_1BC125B04(v12 > 1, v13 + 1, 1);
      ++v9;
      v14 = v26;
      v15 = v27;
      v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      MEMORY[0x1E0C80A78](v16);
      v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v18);
      sub_1BC2241D0(v13, (uint64_t)v18, &v28, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      v7 = v28;
      if (v6 == v9)
        return v7;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC1FCB9C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC1FCBC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC1FC1BC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_1BC1FCBD0()
{
  unint64_t result;

  result = qword_1EF3F8E20;
  if (!qword_1EF3F8E20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3F8E20);
  }
  return result;
}

uint64_t sub_1BC1FCC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1FCC50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC2B4F40();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_1BC1FCC78()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1BC1FE170);
}

id sub_1BC1FCC8C()
{
  return sub_1BC12B6C0(&OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader____lazy_storage___formStrengthLabel, (uint64_t (*)(void))sub_1BC1FE40C);
}

void sub_1BC1FCCA0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = sub_1BC1FCC78();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = sub_1BC1FCC8C();
  objc_msgSend(v0, sel_addSubview_, v2);

  v3 = sub_1BC1FCC78();
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v4 = sub_1BC1FCC8C();
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v5 = sub_1BC1FCC78();
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v0, sel_topAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 30.0);

  objc_msgSend(v8, sel_setActive_, 1);
  v9 = sub_1BC1FCC78();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v0, sel_leadingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 4.0);

  objc_msgSend(v12, sel_setActive_, 1);
  v13 = sub_1BC1FCC78();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v0, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  objc_msgSend(v16, sel_setActive_, 1);
  v17 = sub_1BC1FCC8C();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_1BC1FCC78();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 4.0);
  objc_msgSend(v21, sel_setActive_, 1);

  v22 = sub_1BC1FCC8C();
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = objc_msgSend(v0, sel_leadingAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 4.0);

  objc_msgSend(v25, sel_setActive_, 1);
  v26 = sub_1BC1FCC8C();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = objc_msgSend(v0, sel_trailingAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  objc_msgSend(v29, sel_setActive_, 1);
  v30 = sub_1BC1FCC8C();
  v31 = objc_msgSend(v30, sel_bottomAnchor);

  v32 = objc_msgSend(v0, sel_bottomAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, -20.0);

  objc_msgSend(v33, sel_setActive_, 1);
}

uint64_t sub_1BC1FD1E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FF510, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsHeaderItem);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  v8 = type metadata accessor for MedicationLogDetailsHeaderItem();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader_item;
  swift_beginAccess();
  sub_1BC0E5774(v12, (uint64_t)v28);
  if (v28[3])
  {
    sub_1BC0E1B94();
    v13 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1BC1FDF74((uint64_t)v7, (uint64_t)v11);
      v14 = sub_1BC1FCC78();
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setText_, v15);

      v16 = sub_1BC1FCC8C();
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setText_, v17);

      return sub_1BC1FDFB8((uint64_t)v11);
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v28, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3FF510, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsHeaderItem);
  sub_1BC2B39A4();
  v19 = v0;
  v20 = sub_1BC2B39D4();
  v21 = sub_1BC2B48C8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v26 = v1;
    v27 = v23;
    *(_DWORD *)v22 = 136315138;
    sub_1BC0E5774(v12, (uint64_t)v28);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v24 = sub_1BC2B4490();
    v28[0] = sub_1BC12540C(v24, v25, &v27);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v20, v21, "Incorrect view model for MedicationLogDetailsHeaderItem: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v23, -1, -1);
    MEMORY[0x1BCCEF3A0](v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_1BC1FD5BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationLogDetailsHeader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationLogDetailsHeader()
{
  return objc_opt_self();
}

uint64_t *sub_1BC1FD668(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC1FD730(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC1FD798(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC1FD834(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1FD908(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1BC1FD978(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC1FDA1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1FDA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC1FDAA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC1FDAB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for MedicationLogDetailsHeaderItem()
{
  uint64_t result;

  result = qword_1EF3FF4C8;
  if (!qword_1EF3FF4C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC1FDB6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC1FDBE0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC1FDC34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1FD1E0();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC1FDCB4(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC1FDD00;
}

uint64_t sub_1BC1FDD00(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1FD1E0();
  return result;
}

uint64_t sub_1BC1FDD30()
{
  uint64_t v0;

  v0 = qword_1EF3FF420;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1BC1FDD64()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_1BC1FDDE0()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1FDE54()
{
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B44D8();
}

uint64_t sub_1BC1FDEB0()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

unint64_t sub_1BC1FDF2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FF508;
  if (!qword_1EF3FF508)
  {
    v1 = type metadata accessor for MedicationLogDetailsHeaderItem();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C23E8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FF508);
  }
  return result;
}

uint64_t sub_1BC1FDF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationLogDetailsHeaderItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC1FDFB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationLogDetailsHeaderItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC1FDFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v24;

  v4 = type metadata accessor for MedicationLogDetailsHeaderItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v24 - v9;
  v11 = *(int *)(v8 + 24);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  if (v12 == *v14 && v13 == v14[1])
  {
    sub_1BC1FE12C(a1, (uint64_t)&v24 - v9);
    sub_1BC1FE12C(a2, (uint64_t)v7);
  }
  else
  {
    v16 = sub_1BC2B53CC();
    sub_1BC1FE12C(a1, (uint64_t)v10);
    sub_1BC1FE12C(a2, (uint64_t)v7);
    v17 = 0;
    if ((v16 & 1) == 0)
      goto LABEL_14;
  }
  v18 = *(int *)(v4 + 28);
  v19 = *(_QWORD *)&v10[v18];
  v20 = *(_QWORD *)&v10[v18 + 8];
  v21 = &v7[v18];
  if (v19 == *(_QWORD *)v21 && v20 == *((_QWORD *)v21 + 1))
    v17 = 1;
  else
    v17 = sub_1BC2B53CC();
LABEL_14:
  sub_1BC1FDFB8((uint64_t)v10);
  sub_1BC1FDFB8((uint64_t)v7);
  return v17 & 1;
}

uint64_t sub_1BC1FE12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationLogDetailsHeaderItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC1FE170()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  v2 = sub_1BC2B4460();
  v4 = v3;
  v5 = v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v13 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6, v13, v4);

  objc_msgSend(v5, sel_setTextAlignment_, 4);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B60]);
  v9 = objc_msgSend(v8, sel_fontDescriptor);
  v10 = objc_msgSend(v9, sel_fontDescriptorWithSymbolicTraits_, 2);

  if (v10)
  {
    v11 = v10;
    objc_msgSend(v8, sel_pointSize);
    v12 = objc_msgSend(v7, sel_fontWithDescriptor_size_, v11);

    objc_msgSend(v5, sel_setFont_, v12);
  }
  else
  {
    __break(1u);
  }
}

id sub_1BC1FE40C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = sub_1BC2B4460();
  v3 = v2;
  v4 = v0;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v9 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v3);

  v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  v7 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v4, sel_setFont_, v7);

  return v4;
}

id PregnancyLactationInteractionCriticalAlertItem.interaction.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC1FE650()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v0 + 16);
  v3 = objc_msgSend(v2, sel_medication);
  v4 = objc_msgSend(v3, sel_semanticIdentifier);

  v5 = objc_msgSend(v4, sel_description);
  sub_1BC2B4460();

  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_interactionType);
  type metadata accessor for HKDismissedPregnancyLactationInteractionType(0);
  sub_1BC2B4478();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.showMoreAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_retain();
  return v1;
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.dismissAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_retain();
  return v1;
}

_QWORD *PregnancyLactationInteractionCriticalAlertItem.__allocating_init(interaction:showMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v10 = (_QWORD *)swift_allocObject();
  type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  sub_1BC0E008C(&qword_1EF3FF518, 255, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertCell);
  v11 = sub_1BC2B2930();
  v10[2] = a1;
  v10[3] = v11;
  v10[4] = v12;
  v10[5] = a2;
  v10[6] = a3;
  v10[7] = a4;
  v10[8] = a5;
  return v10;
}

_QWORD *PregnancyLactationInteractionCriticalAlertItem.init(interaction:showMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  sub_1BC0E008C(&qword_1EF3FF518, 255, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertCell);
  v11 = sub_1BC2B2930();
  v5[2] = a1;
  v5[3] = v11;
  v5[4] = v12;
  v5[5] = a2;
  v5[6] = a3;
  v5[7] = a4;
  v5[8] = a5;
  return v5;
}

void sub_1BC1FE914()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 16);
  sub_1BC2B4D90();

}

uint64_t PregnancyLactationInteractionCriticalAlertItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1FE9C8()
{
  sub_1BC2B5450();
  sub_1BC2B4D90();
  return sub_1BC2B548C();
}

uint64_t sub_1BC1FEA08()
{
  return sub_1BC1FE650();
}

BOOL sub_1BC1FEA28(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void sub_1BC1FEA34()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1BC2B4D90();

}

uint64_t sub_1BC1FEA7C()
{
  uint64_t v0;
  id v1;

  sub_1BC2B5450();
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1BC2B4D90();

  return sub_1BC2B548C();
}

Swift::Void __swiftcall PregnancyLactationInteractionCriticalAlertItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  uint64_t v2;

  (*(void (**)(UIView *, UIViewController *))(v2 + 40))(_, in);
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.deselectionBehavior(in:)()
{
  uint64_t v0;

  type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
  sub_1BC0E008C(&qword_1EF3FF520, v0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertItem);
  return sub_1BC2B2B70();
}

uint64_t sub_1BC1FEB58()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 40))();
}

uint64_t sub_1BC1FEB7C()
{
  type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
  return sub_1BC2B2B70();
}

BOOL _s19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  id v11;

  sub_1BC102870();
  v4 = *(void **)(a1 + 16);
  v5 = objc_msgSend(v4, sel_medication);
  v6 = objc_msgSend(v5, sel_semanticIdentifier);

  v7 = *(void **)(a2 + 16);
  v8 = objc_msgSend(v7, sel_medication);
  v9 = objc_msgSend(v8, sel_semanticIdentifier);

  v10 = sub_1BC2B4D84();
  if ((v10 & 1) == 0)
    return 0;
  v11 = objc_msgSend(v4, sel_interactionType);
  return v11 == objc_msgSend(v7, sel_interactionType);
}

uint64_t type metadata accessor for PregnancyLactationInteractionCriticalAlertItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC1FECF4(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FF528, a2, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertItem);
}

uint64_t method lookup function for PregnancyLactationInteractionCriticalAlertItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.__allocating_init(interaction:showMoreAction:dismissAction:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

_QWORD *InteractionFactorsItem.__allocating_init(factors:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6 = (_QWORD *)swift_allocObject();
  type metadata accessor for InteractionFactorsCell();
  sub_1BC0E008C(&qword_1EF3FD3B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsCell);
  v7 = sub_1BC2B2930();
  v6[2] = a1;
  v6[3] = v7;
  v6[4] = v8;
  v6[5] = a2;
  v6[6] = a3;
  return v6;
}

uint64_t InteractionFactorsItem.factors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionFactorsItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsItem.analyticsManager.getter()
{
  return swift_retain();
}

_QWORD *InteractionFactorsItem.init(factors:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for InteractionFactorsCell();
  sub_1BC0E008C(&qword_1EF3FD3B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsCell);
  v7 = sub_1BC2B2930();
  v3[2] = a1;
  v3[3] = v7;
  v3[4] = v8;
  v3[5] = a2;
  v3[6] = a3;
  return v3;
}

BOOL static InteractionFactorsItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC16C7B0(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16));
}

uint64_t sub_1BC1FEEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  result = sub_1BC2B545C();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = v1 + 32;
    do
    {
      v4 += 8;
      result = sub_1BC2B545C();
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_1BC1FEF24(uint64_t a1, void *a2)
{
  sub_1BC1FF114(a2);
}

uint64_t InteractionFactorsItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t InteractionFactorsItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC1FEF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BC2B5450();
  sub_1BC2B44D8();
  v1 = *(_QWORD *)(v0 + 16);
  sub_1BC2B545C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_1BC2B545C();
      --v2;
    }
    while (v2);
  }
  return sub_1BC2B548C();
}

BOOL sub_1BC1FF004(uint64_t a1, uint64_t a2)
{
  return sub_1BC16C7B0(*(_QWORD **)(*(_QWORD *)a1 + 16), *(_QWORD **)(*(_QWORD *)a2 + 16));
}

uint64_t sub_1BC1FF018()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 144))();
}

uint64_t sub_1BC1FF040()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v1 = *v0;
  sub_1BC2B44D8();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  result = sub_1BC2B545C();
  if (v3)
  {
    v5 = v2 + 32;
    do
    {
      v5 += 8;
      result = sub_1BC2B545C();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1BC1FF09C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BC2B5450();
  v1 = *v0;
  sub_1BC2B44D8();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  sub_1BC2B545C();
  if (v3)
  {
    v4 = v2 + 32;
    do
    {
      v4 += 8;
      sub_1BC2B545C();
      --v3;
    }
    while (v3);
  }
  return sub_1BC2B548C();
}

void sub_1BC1FF114(void *a1)
{
  objc_class *v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  objc_super v10;
  uint64_t v11;
  uint64_t v12;

  v2 = (objc_class *)type metadata accessor for InteractionFactorsViewController();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = (uint64_t *)&v3[qword_1EF3FD668];
  v11 = sub_1BC2B4460();
  v12 = v5;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v6 = v12;
  v7 = v3;
  swift_bridgeObjectRelease();
  *v4 = v11;
  v4[1] = v6;

  v10.receiver = v7;
  v10.super_class = v2;
  v8 = objc_msgSendSuper2(&v10, sel_initWithCollectionViewLayout_, 0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v8);
  objc_msgSend(v9, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v9, sel_setModalInPresentation_, 1);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v9, 1, 0);

  sub_1BC2B37E8();
}

uint64_t sub_1BC1FF26C(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EF3FF600, a2, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsItem, (uint64_t)&protocol conformance descriptor for InteractionFactorsItem);
}

uint64_t type metadata accessor for InteractionFactorsItem()
{
  return objc_opt_self();
}

uint64_t method lookup function for InteractionFactorsItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionFactorsItem.__allocating_init(factors:analyticsManager:roomType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InteractionFactorsItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of InteractionFactorsItem.didSelectCell(_:in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of InteractionFactorsItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

id sub_1BC1FF304()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_logDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel] = 0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MedicationsRecordAllButton();
  v1 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC1FF564();
  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v1, sel_didTapRecord_, 64);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92D0;
  v3 = sub_1BC2B3D40();
  v4 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  v5 = v1;
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v5;
}

void sub_1BC1FF464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BC1FF8D4();

  }
}

uint64_t sub_1BC1FF564()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  double v24;
  _QWORD v26[2];

  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v26 - v1;
  v3 = sub_1BC2B4E68();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B4DCC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B4EC8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B4EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DC3060], v7);
  sub_1BC2B4DD8();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DC3198], v3);
  sub_1BC2B4DC0();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_systemBlueColor);
  sub_1BC2B4E44();
  v17 = objc_msgSend(v15, sel_secondarySystemGroupedBackgroundColor);
  sub_1BC2B4E38();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v18 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B4E98();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v2, v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v2, 0, 1, v11);
  v19 = (void *)v26[1];
  sub_1BC2B4EEC();
  objc_msgSend(v19, sel_setRole_, 1);
  v20 = objc_msgSend(v19, sel_titleLabel);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, sel_setTextAlignment_, 1);

  }
  v22 = objc_msgSend(v19, sel_titleLabel);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, sel_setAdjustsFontForContentSizeCategory_, 1);

  }
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v24) = 1144750080;
  objc_msgSend(v19, sel_setContentHuggingPriority_forAxis_, 0, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1BC1FF8D4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  id v14;
  uint64_t v16;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - v6;
  sub_1BC2B4EE0();
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel];
  if (v8)
  {
    v9 = sub_1BC2B4EC8();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
    {
      v10 = (void *)objc_opt_self();
      swift_retain();
      v11 = objc_msgSend(v10, sel_systemBlueColor);
      v12 = v11;
      v13 = 0.5;
      if (*(_BYTE *)(v8 + 16))
        v13 = 1.0;
      v14 = objc_msgSend(v11, sel_colorWithAlphaComponent_, v13);

      sub_1BC2B4E44();
      swift_release();
    }
  }
  sub_1BC201010((uint64_t)v7, (uint64_t)v5);
  sub_1BC2B4EEC();
  objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
  return sub_1BC0F2444((uint64_t)v7, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228]);
}

void sub_1BC1FFA60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel);
  if (v1 && *(_BYTE *)(v1 + 16) == 1)
  {
    if (MEMORY[0x1BCCEF478](v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_logDelegate))
    {
      swift_retain();
      sub_1BC210920();
      swift_release();
      swift_unknownObjectRelease();
    }
  }
}

id sub_1BC1FFB58()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationsRecordAllButton);
}

uint64_t type metadata accessor for MedicationsRecordAllButton()
{
  return objc_opt_self();
}

id sub_1BC1FFBBC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MedicationsRecordAllButton()), sel_init);
    sub_1BC2B4C88();
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_1BC1FFC5C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  char *v14;
  char *v15;
  char *v16;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, qword_1EF3FF728, type metadata accessor for MedicationDoseRecordAllItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = type metadata accessor for MedicationDoseRecordAllItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v12, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (v27[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v13 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1BC200FCC((uint64_t)v7, (uint64_t)v11);
      v14 = (char *)sub_1BC1FFBBC();
      v15 = &v11[*(int *)(v8 + 28)];
      MEMORY[0x1BCCEF478](v15);
      *(_QWORD *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_logDelegate + 8] = *((_QWORD *)v15 + 1);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      v16 = (char *)sub_1BC1FFBBC();
      *(_QWORD *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel] = *(_QWORD *)&v11[*(int *)(v8 + 24)];
      swift_retain_n();
      swift_release();
      sub_1BC1FF8D4();

      swift_release();
      return sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationDoseRecordAllItem);
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1BC0F2444((uint64_t)v7, qword_1EF3FF728, type metadata accessor for MedicationDoseRecordAllItem);
  sub_1BC2B39A4();
  v18 = v0;
  v19 = sub_1BC2B39D4();
  v20 = sub_1BC2B48C8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v25 = v1;
    v26 = v22;
    *(_DWORD *)v21 = 136315138;
    sub_1BC0FC574(v12, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    sub_1BC0E84E8();
    v23 = sub_1BC2B4490();
    v27[0] = sub_1BC12540C(v23, v24, &v26);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v19, v20, "Incorrect view model for MedicationDoseRecordAllItem: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v22, -1, -1);
    MEMORY[0x1BCCEF3A0](v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_1BC20003C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v57;
  uint64_t v58;
  objc_super v59;

  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v57 - v10;
  v12 = sub_1BC2B3B48();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton] = 0;
  v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item];
  v17 = (objc_class *)type metadata accessor for MedicationDoseRecordAllCell();
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v59.receiver = v4;
  v59.super_class = v17;
  v18 = objc_msgSendSuper2(&v59, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC2B3B3C();
  v19 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v20 = objc_msgSend(v19, sel_colorWithAlphaComponent_, 0.0);

  sub_1BC2B3B18();
  v58 = v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v21 = v18;
  MEMORY[0x1BCCEE23C](v11);

  v22 = objc_msgSend(v21, sel_contentView);
  v23 = sub_1BC1FFBBC();
  objc_msgSend(v22, sel_addSubview_, v23);

  v24 = sub_1BC1FFBBC();
  v25 = objc_msgSend(v24, sel_topAnchor);

  v26 = objc_msgSend(v21, sel_contentView);
  v27 = objc_msgSend(v26, sel_topAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 16.0);
  objc_msgSend(v28, sel_setActive_, 1);

  v29 = sub_1BC1FFBBC();
  v30 = objc_msgSend(v29, sel_heightAnchor);

  v31 = objc_msgSend(v30, sel_constraintGreaterThanOrEqualToConstant_, 41.0);
  objc_msgSend(v31, sel_setActive_, 1);

  v32 = sub_1BC1FFBBC();
  v33 = objc_msgSend(v32, sel_widthAnchor);

  v34 = objc_msgSend(v33, sel_constraintGreaterThanOrEqualToConstant_, 178.0);
  objc_msgSend(v34, sel_setActive_, 1);

  v35 = sub_1BC1FFBBC();
  v36 = objc_msgSend(v35, sel_leadingAnchor);

  v37 = objc_msgSend(v21, sel_contentView);
  v38 = objc_msgSend(v37, sel_leadingAnchor);

  v39 = objc_msgSend(v36, sel_constraintGreaterThanOrEqualToAnchor_, v38);
  objc_msgSend(v39, sel_setActive_, 1);

  v40 = sub_1BC1FFBBC();
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = objc_msgSend(v21, sel_contentView);
  v43 = objc_msgSend(v42, sel_trailingAnchor);

  v44 = objc_msgSend(v41, sel_constraintLessThanOrEqualToAnchor_, v43);
  objc_msgSend(v44, sel_setActive_, 1);

  v45 = sub_1BC1FFBBC();
  v46 = objc_msgSend(v45, sel_bottomAnchor);

  v47 = objc_msgSend(v21, sel_contentView);
  v48 = objc_msgSend(v47, sel_bottomAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  objc_msgSend(v49, sel_setActive_, 1);

  v50 = sub_1BC1FFBBC();
  v51 = objc_msgSend(v50, sel_centerXAnchor);

  v52 = objc_msgSend(v21, sel_contentView);
  v53 = objc_msgSend(v52, sel_safeAreaLayoutGuide);

  v54 = objc_msgSend(v53, sel_centerXAnchor);
  v55 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v54);

  objc_msgSend(v55, sel_setActive_, 1);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v12);
  return v21;
}

id sub_1BC2006CC()
{
  return sub_1BC0F3CF0(type metadata accessor for MedicationDoseRecordAllCell);
}

uint64_t type metadata accessor for MedicationDoseRecordAllCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationsRecordAllDataSource(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0F930);
}

uint64_t sub_1BC200750()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MedicationsDoseLogHeaderItem(319);
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC2007DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC200834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC1FFC5C();
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t (*sub_1BC2008A8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2008F0;
}

uint64_t sub_1BC2008F0(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC1FFC5C();
  return result;
}

unint64_t sub_1BC200920()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t sub_1BC2009A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[24];

  v6 = sub_1BC2B23F0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v18[-v11];
  v13 = *(_QWORD *)(a1 + *(int *)(a3 + 24))
      + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
  swift_beginAccess();
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, v13, v6);
  v15 = *(_QWORD *)(a2 + *(int *)(a3 + 24))
      + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
  swift_beginAccess();
  v14(v10, v15, v6);
  LOBYTE(v15) = sub_1BC2B239C();
  v16 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v16(v10, v6);
  v16(v12, v6);
  return v15 & 1;
}

uint64_t sub_1BC200AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = sub_1BC2B2438();
  v22 = *(_QWORD *)(v1 - 8);
  v23 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for MedicationDoseRecordAllItem(0);
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE60, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  v20 = xmmword_1BC2B92D0;
  *(_OWORD *)(v10 + 16) = xmmword_1BC2B92D0;
  v11 = v10 + v9;
  v21 = v0;
  v12 = *(_QWORD *)(v0 + qword_1EDA11D88);
  v13 = v0 + qword_1EDA11D98;
  MEMORY[0x1BCCEF478](v13);
  v14 = *(_QWORD *)(v13 + 8);
  swift_retain();
  sub_1BC2B242C();
  v15 = (uint64_t *)&v7[v4[5]];
  type metadata accessor for MedicationDoseRecordAllCell();
  sub_1BC0E008C(&qword_1EDA0F9F0, v16, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell, (uint64_t)&unk_1BC2C2890);
  *v15 = sub_1BC2B2930();
  v15[1] = v17;
  *(_QWORD *)&v7[v4[7] + 8] = 0;
  v18 = swift_unknownObjectWeakInit();
  *(_QWORD *)&v7[v4[6]] = v12;
  *(_QWORD *)(v18 + 8) = v14;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BC200FCC((uint64_t)v7, v11);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = v20;
  sub_1BC0F7F78(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v23);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  return swift_bridgeObjectRelease();
}

void sub_1BC200D8C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC200DB8()
{
  uint64_t v0;

  sub_1BC0E8594(v0 + qword_1EDA11D90, type metadata accessor for MedicationsDoseLogHeaderItem);
  swift_release();
  return sub_1BC0F0430(v0 + qword_1EDA11D98);
}

uint64_t sub_1BC200DFC()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  sub_1BC0E8594(v0 + qword_1EDA11D90, type metadata accessor for MedicationsDoseLogHeaderItem);
  swift_release();
  sub_1BC0F0430(v0 + qword_1EDA11D98);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC200E64()
{
  return type metadata accessor for MedicationsRecordAllDataSource(0);
}

uint64_t sub_1BC200E6C()
{
  uint64_t v0;

  type metadata accessor for MedicationDoseRecordAllCell();
  sub_1BC0E008C(&qword_1EDA0F9F0, v0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell, (uint64_t)&unk_1BC2C2890);
  return sub_1BC2B497C();
}

uint64_t sub_1BC200EBC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + qword_1EDA11D90;
  a1[3] = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  a1[4] = sub_1BC0E008C(&qword_1EDA0F868, 255, type metadata accessor for MedicationsDoseLogHeaderItem, (uint64_t)&unk_1BC2BA800);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1BC0FC574(v3, (uint64_t)boxed_opaque_existential_1, type metadata accessor for MedicationsDoseLogHeaderItem);
}

uint64_t sub_1BC200F3C()
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2C2860);
  return sub_1BC2B3074();
}

uint64_t sub_1BC200F88()
{
  return sub_1BC0E008C(&qword_1EF3FF720, 255, type metadata accessor for MedicationsRecordAllDataSource, (uint64_t)&unk_1BC2C27E0);
}

uint64_t type metadata accessor for MedicationDoseRecordAllItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF3FF788);
}

uint64_t sub_1BC200FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationDoseRecordAllItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC201010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC20106C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC201090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC1FF464(a1, a2, v2);
}

uint64_t sub_1BC201098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v24 = a4;
  v25 = a3;
  v27 = a2;
  v7 = sub_1BC2B2438();
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MedicationDoseRecordAllItem(0);
  v11 = *((_QWORD *)v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + qword_1EDA11D98 + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_1BC0FC574(a2, v4 + qword_1EDA11D90, type metadata accessor for MedicationsDoseLogHeaderItem);
  *(_QWORD *)(v4 + qword_1EDA11D88) = a1;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE60, type metadata accessor for MedicationDoseRecordAllItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  v23 = xmmword_1BC2B92D0;
  *(_OWORD *)(v15 + 16) = xmmword_1BC2B92D0;
  swift_retain_n();
  sub_1BC2B242C();
  v16 = (uint64_t *)&v13[v10[5]];
  type metadata accessor for MedicationDoseRecordAllCell();
  sub_1BC0E008C(&qword_1EDA0F9F0, v17, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell, (uint64_t)&unk_1BC2C2890);
  *v16 = sub_1BC2B2930();
  v16[1] = v18;
  *(_QWORD *)&v13[v10[7] + 8] = 0;
  v19 = swift_unknownObjectWeakInit();
  *(_QWORD *)&v13[v10[6]] = a1;
  *(_QWORD *)(v19 + 8) = v24;
  swift_unknownObjectWeakAssign();
  sub_1BC200FCC((uint64_t)v13, v15 + v14);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = v23;
  sub_1BC0F7F78(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v20(v9, v7);
  sub_1BC2B2BAC();
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v28, "MutableArray<");
  HIWORD(v28[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v20(v9, v7);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v21 = sub_1BC2B2C00();
  sub_1BC0E8594(v27, type metadata accessor for MedicationsDoseLogHeaderItem);
  return v21;
}

uint64_t *sub_1BC201408(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    v13 = *(uint64_t *)((char *)a2 + v9);
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = v13;
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectWeakCopyInit();
    *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  }
  return a1;
}

uint64_t sub_1BC2014CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_1BC20152C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  v12 = *(_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = v12;
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  return a1;
}

uint64_t sub_1BC2015C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  v10 = a2 + a3[7];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign() + 8) = *(_QWORD *)(v10 + 8);
  return a1;
}

uint64_t sub_1BC201678(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a2 + a3[7];
  *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *(_QWORD *)(v8 + 8);
  return a1;
}

uint64_t sub_1BC2016F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  v12 = a2 + a3[7];
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_QWORD *)(v12 + 8);
  return a1;
}

uint64_t sub_1BC201794()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC2017A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC201820()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC20182C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BC2018A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC201930()
{
  return sub_1BC0E008C(&qword_1EDA0FA08, 255, type metadata accessor for MedicationDoseRecordAllItem, (uint64_t)&unk_1BC2C2928);
}

uint64_t type metadata accessor for MedicationLogDetailsViewController()
{
  uint64_t result;

  result = qword_1EF3FF800;
  if (!qword_1EF3FF800)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC20199C()
{
  return swift_initClassMetadata2();
}

void sub_1BC201A18(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC2045EC();
}

void sub_1BC201A3C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1BC204084(0);
    objc_msgSend(v2, sel_addGestureRecognizer_, v3);

    v4 = objc_msgSend(v0, sel_navigationController);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, sel_navigationBar);

      v7 = sub_1BC204084(1);
      objc_msgSend(v6, sel_addGestureRecognizer_, v7);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC201B24(void *a1)
{
  id v1;
  id v2;
  void *v3;
  objc_super v4;

  v1 = a1;
  sub_1BC201BAC();
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for MedicationLogDetailsViewController();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  v2 = objc_msgSend(v1, sel_collectionView);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setPreservesSuperviewLayoutMargins_, 1);

    sub_1BC201A3C();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC201BAC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, sel_navigationItem);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel);
  objc_msgSend(v1, sel_setLeftBarButtonItem_, v2);

  v3 = objc_msgSend(v0, sel_navigationItem);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_didTapDone);
  objc_msgSend(v3, sel_setRightBarButtonItem_, v4);

}

id sub_1BC201CA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF3FF7F8;
  v2 = *(void **)(v0 + qword_1EF3FF7F8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF3FF7F8);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    objc_msgSend(v4, sel_setTimeStyle_, 1);
    objc_msgSend(v4, sel_setDateStyle_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC201D38()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC201D64(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC201D94()
{
  uint64_t v0;

  swift_release();
  sub_1BC0F0430(v0 + qword_1EF3FF7D8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

id sub_1BC201E00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationLogDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC201E34(uint64_t a1)
{
  swift_release();
  sub_1BC0F0430(a1 + qword_1EF3FF7D8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_1BC201EAC()
{
  return type metadata accessor for MedicationLogDetailsViewController();
}

void sub_1BC201EB4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  unsigned int v15;
  id v16;
  uint64_t *v17;

  v2 = v1;
  v4 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v4, 0);

  v5 = sub_1BC2B25F4();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = qword_1EF3FF7F0;
  v7 = *(_QWORD *)(v2 + qword_1EF3FF7F0);
  if (v5 >= *(_QWORD *)(v7 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((*(_BYTE *)(v7 + v5 + 32) & 1) != 0)
  {
    v8 = sub_1BC2B25F4();
    if ((v8 & 0x8000000000000000) == 0)
    {
      v9 = *(_QWORD *)(v2 + v6);
      if (v8 < *(_QWORD *)(v9 + 16))
      {
        if (*(_BYTE *)(v9 + v8 + 32) == 1 && sub_1BC2020E0() == 1)
        {
          v10 = (uint64_t *)(v2 + qword_1EF3FF7E8);
          swift_beginAccess();
          if (!sub_1BC23E51C(2, *v10))
          {
            sub_1BC202468();
            return;
          }
          goto LABEL_19;
        }
        return;
      }
LABEL_24:
      __break(1u);
      return;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!sub_1BC2020E0())
  {
    v11 = (void *)sub_1BC2B25C4();
    v12 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v11);

    if (v12)
    {
      type metadata accessor for MedicationLogDetailsUnitCell();
      if (swift_dynamicCastClass())
      {
        v13 = sub_1BC16FC18();
        v14 = sub_1BC170A98();
        v15 = objc_msgSend(v14, sel_isFirstResponder);

        if (v15)
        {
          objc_msgSend(v13, sel_endEditing_, 1);
        }
        else
        {
          v16 = sub_1BC170A98();
          objc_msgSend(v16, sel_becomeFirstResponder);

          v12 = v13;
          v13 = v16;
        }

        v12 = v13;
      }

    }
    v17 = (uint64_t *)(v2 + qword_1EF3FF7E8);
    swift_beginAccess();
    if (sub_1BC23E51C(2, *v17))
LABEL_19:
      sub_1BC2021B4();
  }
}

unint64_t sub_1BC2020E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v1 = v0;
  result = sub_1BC2B25F4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = *(_QWORD *)(v0 + qword_1EF3FF7F0);
  if (result >= *(_QWORD *)(v3 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = *(_BYTE *)(v3 + result + 32);
  result = sub_1BC2B25E8();
  v5 = result;
  if ((v4 & 1) == 0)
    goto LABEL_7;
  v6 = (uint64_t *)(v0 + qword_1EF3FF7E8);
  result = swift_beginAccess();
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = *v6;
  if (v5 < *(_QWORD *)(*v6 + 16))
    return *(unsigned __int8 *)(v7 + v5 + 32);
  __break(1u);
LABEL_7:
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = *(_QWORD *)(v1 + qword_1EF3FF7E0);
  if (v5 < *(_QWORD *)(v7 + 16))
    return *(unsigned __int8 *)(v7 + v5 + 32);
LABEL_14:
  __break(1u);
  return result;
}

void sub_1BC2021B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD *v34;

  v1 = v0;
  v2 = sub_1BC2B2600();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v1[qword_1EF3FF7E8];
  swift_beginAccess();
  v7 = *(_QWORD *)v6;
  v8 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v8)
  {
    if (*(_BYTE *)(v7 + 32) == 2)
    {
      v9 = 0;
LABEL_7:
      v13 = objc_msgSend(v1, sel_collectionView);
      if (v13)
      {
        v14 = v13;
        MEMORY[0x1BCCEBD58](v9, 1);
        v15 = (void *)sub_1BC2B25C4();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v16 = objc_msgSend(v14, sel_cellForItemAtIndexPath_, v15);

        if (v16)
        {
          type metadata accessor for MedicationLogDetailsTimePickerCell();
          v17 = swift_dynamicCastClass();
          if (v17)
          {
            v18 = v17;
            swift_beginAccess();
            sub_1BC1EA944(v9);
            swift_endAccess();
            v19 = (void *)objc_opt_self();
            v20 = (_QWORD *)swift_allocObject();
            v20[2] = v18;
            v20[3] = v1;
            v20[4] = v9;
            v33 = sub_1BC2045D8;
            v34 = v20;
            v21 = MEMORY[0x1E0C809B0];
            aBlock = MEMORY[0x1E0C809B0];
            v30 = 1107296256;
            v31 = sub_1BC1AEAE4;
            v32 = &block_descriptor_15;
            v22 = _Block_copy(&aBlock);
            v23 = v16;
            v24 = v1;
            swift_release();
            v25 = swift_allocObject();
            *(_QWORD *)(v25 + 16) = v18;
            v33 = sub_1BC2045E4;
            v34 = (_QWORD *)v25;
            aBlock = v21;
            v30 = 1107296256;
            v31 = sub_1BC231260;
            v32 = &block_descriptor_21;
            v26 = _Block_copy(&aBlock);
            v27 = v23;
            swift_release();
            objc_msgSend(v19, sel_animateWithDuration_animations_completion_, v22, v26, 0.4);
            _Block_release(v26);
            _Block_release(v22);
          }

        }
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v9 = 0;
      v10 = v8 - 1;
      v11 = v7 + 33;
      while (v10 != v9)
      {
        v12 = *(unsigned __int8 *)(v11 + v9++);
        if (v12 == 2)
          goto LABEL_7;
      }
    }
  }
}

uint64_t sub_1BC202468()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[5];

  v1 = v0;
  v2 = sub_1BC2B2600();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for MedicationLogDetailsTimePickerItem();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v0[qword_1EF3FF7E8];
  result = swift_beginAccess();
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(*(_QWORD *)v9 + 16);
  if (v12)
  {
    if (*(_BYTE *)(v11 + 32) == 1)
    {
      v13 = 0;
LABEL_7:
      result = swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v9 + 16) <= v13)
      {
        __break(1u);
      }
      else
      {
        v26 = v2;
        v17 = v13 + 1;
        sub_1BC135370(v13 + 1, v13 + 1, 2);
        swift_endAccess();
        v25 = v3;
        v18 = *(_QWORD *)(*(_QWORD *)&v1[qword_1EF3FF7C8] + qword_1EF402CE0);
        v27[3] = (uint64_t)v6;
        v27[4] = sub_1BC0E519C(&qword_1EF3FF858, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem, (uint64_t)&unk_1BC2B9AA0);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
        swift_retain();
        v19 = v1;
        sub_1BC2B242C();
        v20 = &v8[v6[6]];
        *((_QWORD *)v20 + 1) = 0;
        swift_unknownObjectWeakInit();
        v21 = (uint64_t *)&v8[v6[7]];
        type metadata accessor for MedicationLogDetailsTimePickerCell();
        sub_1BC0E519C(&qword_1EF3FF860, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerCell, (uint64_t)&unk_1BC2B9974);
        *v21 = sub_1BC2B2930();
        v21[1] = v22;
        *(_QWORD *)&v8[v6[5]] = v18;
        *((_QWORD *)v20 + 1) = &off_1E74B82B8;
        swift_unknownObjectWeakAssign();

        sub_1BC0F3DC4((uint64_t)v8, (uint64_t)boxed_opaque_existential_1);
        MEMORY[0x1BCCEBD58](v17, 1);
        sub_1BC2B2C3C();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
      }
    }
    else
    {
      v13 = 0;
      v14 = v12 - 1;
      v15 = v11 + 33;
      while (v14 != v13)
      {
        v16 = *(unsigned __int8 *)(v15 + v13++);
        if (v16 == 1)
          goto LABEL_7;
      }
    }
  }
  return result;
}

uint64_t sub_1BC2026F0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC201EB4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC2027A0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v24;

  v4 = *(_QWORD *)(v2 + qword_1EF3FF7F0);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_17:
    v24 = sub_1BC2B2600();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a2, 1, 1, v24);
  }
  v6 = a1;
  v7 = (uint64_t *)(v2 + qword_1EF3FF7E8);
  v8 = qword_1EF3FF7E0;
  v9 = v4 + 32;
  swift_beginAccess();
  v10 = 0;
  while ((*(_BYTE *)(v9 + v10) & 1) != 0)
  {
    v11 = *v7;
    v12 = *(_QWORD *)(*v7 + 16);
    if (v12)
    {
      if (*(unsigned __int8 *)(v11 + 32) == v6)
        goto LABEL_19;
      v13 = 0;
      v14 = v11 + 33;
      v15 = v12 - 1;
      while (v15 != v13)
      {
        v16 = *(unsigned __int8 *)(v14 + v13++);
        if (v16 == v6)
          goto LABEL_16;
      }
    }
LABEL_3:
    if (++v10 == v5)
      goto LABEL_17;
  }
  v17 = *(_QWORD *)(v2 + v8);
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
    goto LABEL_3;
  if (*(unsigned __int8 *)(v17 + 32) != v6)
  {
    v13 = 0;
    v19 = v17 + 33;
    v20 = v18 - 1;
    while (v20 != v13)
    {
      v21 = *(unsigned __int8 *)(v19 + v13++);
      if (v21 == v6)
        goto LABEL_16;
    }
    goto LABEL_3;
  }
LABEL_19:
  v13 = 0;
LABEL_16:
  MEMORY[0x1BCCEBD58](v13);
  v22 = sub_1BC2B2600();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 0, 1, v22);
}

id sub_1BC20290C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  id result;
  void *v35;
  void *v36;
  id v37;
  id v38;
  char v39;
  char v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  unint64_t *v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *v70;
  void *v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  void (**v81)(char *, _QWORD *);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  id v92;
  void *v93;
  void *v94;
  id v95;
  void *v96;
  uint64_t v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  void *v107;
  void *v108;
  id v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  id v115;
  id v116;
  _QWORD *v117;
  void *v118;
  void *v119;
  id v120;
  id v121;
  void *v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t);
  char *v138;
  uint64_t ObjectType;
  void (**v140)(char *, _QWORD *);
  _QWORD *v141;
  uint64_t v142;
  uint64_t aBlock;
  uint64_t v144;
  void (*v145)(uint64_t, void *);
  void *v146;
  uint64_t (*v147)(uint64_t);
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;

  ObjectType = swift_getObjectType();
  v130 = sub_1BC2B2594();
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v128 = (char *)&v123 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v127 = (uint64_t)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v136 = (uint64_t)&v123 - v5;
  v6 = sub_1BC2B23F0();
  v137 = *(void (**)(char *, uint64_t))(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v131 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v133 = (char *)&v123 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v135 = (char *)&v123 - v12;
  MEMORY[0x1E0C80A78](v11);
  v132 = (char *)&v123 - v13;
  v14 = (_QWORD *)sub_1BC2B39E0();
  v140 = (void (**)(char *, _QWORD *))*(v14 - 1);
  v141 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v138 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v123 - v17;
  sub_1BC0E1C64(0, &qword_1EF3FF850, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v123 - v23;
  v25 = sub_1BC2B2600();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v123 - v30;
  v142 = swift_allocBox();
  v134 = v32;
  sub_1BC2027A0(0, (uint64_t)v24);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v33(v24, 1, v25) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v24, &qword_1EF3FF850, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
LABEL_12:
    sub_1BC2B39C8();
    v46 = sub_1BC2B39D4();
    v47 = sub_1BC2B48C8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      aBlock = v49;
      *(_DWORD *)v48 = 136315138;
      v50 = sub_1BC2B54F8();
      v150 = sub_1BC12540C(v50, v51, &aBlock);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v46, v47, "[%s] Couldn't reference unit value", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v49, -1, -1);
      MEMORY[0x1BCCEF3A0](v48, -1, -1);
    }

    v140[1](v18, v141);
    return (id)swift_deallocBox();
  }
  v125 = v6;
  v124 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v124(v31, v24, v25);
  v126 = v0;
  result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    return result;
  }
  v35 = result;
  v36 = (void *)sub_1BC2B25C4();
  v37 = objc_msgSend(v35, sel_cellForItemAtIndexPath_, v36);

  if (!v37)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v25);
    goto LABEL_12;
  }
  type metadata accessor for MedicationLogDetailsUnitCell();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_11;
  }
  v38 = sub_1BC16FC18();
  v123 = sub_1BC1714FC();
  v40 = v39;

  v41 = *(void (**)(char *, uint64_t))(v26 + 8);
  v41(v31, v25);
  if ((v40 & 1) != 0)
    goto LABEL_12;
  v42 = v126;
  sub_1BC2027A0(1u, (uint64_t)v22);
  if (v33(v22, 1, v25) == 1)
  {
    v43 = &qword_1EF3FF850;
    v44 = (void (*)(uint64_t))MEMORY[0x1E0CB1658];
    v45 = (uint64_t)v22;
LABEL_9:
    sub_1BC0E1CFC(v45, v43, v44);
LABEL_23:
    v61 = v138;
    sub_1BC2B39C8();
    v62 = sub_1BC2B39D4();
    v63 = sub_1BC2B48C8();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      v65 = swift_slowAlloc();
      aBlock = v65;
      *(_DWORD *)v64 = 136315138;
      v66 = sub_1BC2B54F8();
      v149 = sub_1BC12540C(v66, v67, &aBlock);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v62, v63, "[%s] Couldn't reference date value", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v65, -1, -1);
      MEMORY[0x1BCCEF3A0](v64, -1, -1);
    }

    v140[1](v61, v141);
    return (id)swift_deallocBox();
  }
  v124(v29, v22, v25);
  result = objc_msgSend(v42, sel_collectionView);
  if (!result)
    goto LABEL_39;
  v52 = result;
  v53 = (void *)sub_1BC2B25C4();
  v54 = objc_msgSend(v52, sel_cellForItemAtIndexPath_, v53);

  v55 = v125;
  if (!v54)
  {
LABEL_22:
    v41(v29, v25);
    goto LABEL_23;
  }
  type metadata accessor for MedicationLogDetailsTimeCell();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_22;
  }
  v56 = sub_1BC1AFD60();

  v41(v29, v25);
  v57 = (uint64_t)v56 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_logDate;
  swift_beginAccess();
  v58 = v136;
  sub_1BC186618(v57, v136);

  v59 = v137;
  v60 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v137 + 6);
  if (v60(v58, 1, v55) == 1)
  {
    v43 = (unint64_t *)&qword_1EDA0E710;
    v44 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    v45 = v58;
    goto LABEL_9;
  }
  v68 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v59 + 4);
  v69 = v132;
  v68(v132, v58, v55);
  v70 = v134;
  v68(v134, (uint64_t)v69, v55);
  v141 = (_QWORD *)swift_allocObject();
  v141[2] = v42;
  v71 = v42;
  v72 = *(char **)&v42[qword_1EF3FF7C8];
  ObjectType = qword_1EF402CE0;
  v140 = (void (**)(char *, _QWORD *))v72;
  v73 = v59;
  v74 = *(_QWORD *)&v72[qword_1EF402CE0] + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  v75 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v73 + 2);
  v76 = v135;
  v75(v135, v74, v55);
  v77 = v133;
  v75(v133, (uint64_t)v70, v55);
  sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v78 = v71;
  v79 = v55;
  LOBYTE(v74) = sub_1BC2B4424();
  v80 = (void (*)(char *, uint64_t))*((_QWORD *)v73 + 1);
  v80(v77, v79);
  v80(v76, v79);
  if ((v74 & 1) != 0 || v78[qword_1EF3FF7D0] != 1)
  {
    v86 = *(double *)&v123;
    v87 = (uint64_t)v135;
    v88 = v125;
    v75(v135, (uint64_t)v134, v125);
    sub_1BC2039F4(v87, 0, v78, v86);
    swift_release();
    v80((char *)v87, v88);
  }
  else
  {
    v137 = v80;
    v138 = v78;
    v82 = ObjectType;
    v81 = v140;
    swift_retain();
    v83 = v127;
    sub_1BC236CD8(v127);
    swift_release();
    v84 = v125;
    if (v60(v83, 1, v125) == 1)
    {
      v85 = *(uint64_t *)((char *)v81 + v82) + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      v75(v131, v85, v84);
      sub_1BC0E1CFC(v83, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
    else
    {
      v68(v131, v83, v84);
    }
    v89 = v141;
    v90 = v130;
    v91 = v128;
    sub_1BC2B2564();
    sub_1BC2B24BC();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v91, v90);
    v92 = sub_1BC201CA0();
    v93 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v94 = (void *)sub_1BC2B2360();
    v95 = objc_msgSend(v92, sel_hm_localizableTimeStringKeyWithPrefix_date_, v93, v94);

    sub_1BC2B4460();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v96 = (void *)qword_1EDA0FEF8;
    sub_1BC127B70(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
    v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = xmmword_1BC2B92D0;
    v98 = v96;
    swift_bridgeObjectRetain();
    v99 = sub_1BC201CA0();
    v100 = (void *)sub_1BC2B2360();
    v101 = objc_msgSend(v99, sel_stringFromDate_, v100);

    v102 = sub_1BC2B4460();
    v104 = v103;

    *(_QWORD *)(v97 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v97 + 64) = sub_1BC0F2748();
    *(_QWORD *)(v97 + 32) = v102;
    *(_QWORD *)(v97 + 40) = v104;
    sub_1BC2B2144();
    if (*(_QWORD *)(v97 + 16))
    {
      sub_1BC2B443C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v105 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v141 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v105, 0);

    v106 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v107 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v108 = (void *)objc_opt_self();
    v140 = (void (**)(char *, _QWORD *))objc_msgSend(v108, sel_actionWithTitle_style_handler_, v107, 1, 0);

    v109 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v110 = (_QWORD *)swift_allocObject();
    v110[2] = sub_1BC204528;
    v110[3] = v89;
    v111 = v123;
    v112 = v142;
    v110[4] = v123;
    v110[5] = v112;
    swift_retain();
    swift_retain();
    v113 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v147 = sub_1BC204534;
    v148 = v110;
    aBlock = MEMORY[0x1E0C809B0];
    v144 = 1107296256;
    v145 = sub_1BC1D2994;
    v146 = &block_descriptor_21;
    v114 = _Block_copy(&aBlock);
    swift_release();
    v115 = objc_msgSend(v108, sel_actionWithTitle_style_handler_, v113, 0, v114);
    _Block_release(v114);

    v116 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v117 = (_QWORD *)swift_allocObject();
    v117[2] = sub_1BC204528;
    v117[3] = v89;
    v117[4] = v111;
    v117[5] = v112;
    swift_retain();
    swift_retain();
    v118 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v147 = sub_1BC204588;
    v148 = v117;
    aBlock = MEMORY[0x1E0C809B0];
    v144 = 1107296256;
    v145 = sub_1BC1D2994;
    v146 = &block_descriptor_9;
    v119 = _Block_copy(&aBlock);
    swift_release();
    v120 = objc_msgSend(v108, sel_actionWithTitle_style_handler_, v118, 0, v119);
    _Block_release(v119);

    v122 = v140;
    v121 = v141;
    objc_msgSend(v141, sel_addAction_, v140);
    objc_msgSend(v121, sel_addAction_, v120);
    objc_msgSend(v121, sel_addAction_, v115);
    objc_msgSend(v138, sel_presentViewController_animated_completion_, v121, 1, 0);
    swift_release();

    v137(v131, v125);
  }
  return (id)swift_release();
}

uint64_t sub_1BC2039F4(uint64_t a1, char a2, char *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, char *, uint64_t);
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_1BC2B23F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a3, sel_dismissViewControllerAnimated_completion_, 1, 0);
  v12 = *(_QWORD *)(*(_QWORD *)&a3[qword_1EF3FF7C8] + qword_1EF402CE0);
  *(double *)(v12 + 40) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v13 = v12 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  v14 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 40);
  swift_retain();
  v14(v13, v11, v8);
  swift_endAccess();
  swift_release();
  result = MEMORY[0x1BCCEF478](&a3[qword_1EF3FF7D8]);
  if (result)
  {
    v16 = swift_retain();
    sub_1BC20F7C0(v16, a2 & 1);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BC203B5C(double a1, uint64_t a2, void (*a3)(char *, uint64_t, double), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v9 = sub_1BC2B23F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  a3(v12, a6, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1BC203C3C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC20290C();

}

id sub_1BC203C70(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1BC203C84(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC0F2A68();
  objc_msgSend(v9, sel_setAlpha_, 0.0);

  v10 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v10);

  MEMORY[0x1BCCEBD58](a3, 1);
  sub_1BC2B2BDC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC203D88(char a1, void *a2)
{
  id v3;
  id v4;

  if ((a1 & 1) != 0)
  {
    v3 = sub_1BC0F2A68();
    objc_msgSend(v3, sel_setAlpha_, 1.0);

    v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(a2, sel_setBackgroundColor_, v4);

  }
}

id sub_1BC203E0C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - v4;
  sub_1BC0E1C64(0, &qword_1EF3FF850, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = sub_1BC2B2600();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2027A0(1u, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return (id)sub_1BC0E1CFC((uint64_t)v8, &qword_1EF3FF850, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  result = objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    v14 = result;
    v15 = (void *)sub_1BC2B25C4();
    v16 = objc_msgSend(v14, sel_cellForItemAtIndexPath_, v15);

    if (v16)
    {
      type metadata accessor for MedicationLogDetailsTimeCell();
      if (swift_dynamicCastClass())
      {
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
        objc_msgSend(v17, sel_setDateStyle_, 0);
        objc_msgSend(v17, sel_setTimeStyle_, 1);
        v18 = sub_1BC1AFD60();
        v19 = sub_1BC2B23F0();
        v20 = *(_QWORD *)(v19 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v5, a1, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v5, 0, 1, v19);
        sub_1BC1B06F0((uint64_t)v5);

      }
      else
      {

      }
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC204084(char a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  void *v7;

  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v7 = v3;
    sub_1BC0F3E98();
    v4 = sub_1BC2B53C0();

  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, v4, sel_endEditing_);
  swift_unknownObjectRelease();
  objc_msgSend(v5, sel_setCancelsTouchesInView_, a1 & 1);
  return v5;
}

id sub_1BC20414C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char *v8;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v38 = a8;
  v42 = a7;
  v43 = a6;
  v39 = a2;
  v40 = a4;
  v41 = a1;
  v11 = (int *)type metadata accessor for MedicationLogDetailsHeaderItem();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v37[-v15];
  v17 = &v8[qword_1EF3FF7D8];
  *(_QWORD *)&v8[qword_1EF3FF7D8 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v8[qword_1EF3FF7E0] = &unk_1E74AFE00;
  *(_QWORD *)&v8[qword_1EF3FF7E8] = &unk_1E74AFE28;
  v18 = qword_1EF3FF7F0;
  v19 = qword_1EF3F8198;
  v20 = v8;
  if (v19 != -1)
    swift_once();
  *(_QWORD *)&v8[v18] = qword_1EF402CD0;
  *(_QWORD *)&v20[qword_1EF3FF7F8] = 0;
  v20[qword_1EF3FF7D0] = v38 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC2B242C();
  v21 = &v16[v11[5]];
  v22 = unk_1EF3FF428;
  *v21 = qword_1EF3FF420;
  v21[1] = v22;
  v23 = &v16[v11[6]];
  *v23 = v39;
  v23[1] = a3;
  v24 = &v16[v11[7]];
  *v24 = v40;
  v24[1] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC1FE12C((uint64_t)v16, (uint64_t)v14);
  type metadata accessor for MedicationLogDetailsDataSource();
  swift_allocObject();
  v25 = swift_retain();
  v26 = sub_1BC27E6D8(v25, (uint64_t)v14);
  swift_release();
  v27 = qword_1EF3FF7C8;
  *(_QWORD *)&v20[qword_1EF3FF7C8] = v26;
  *((_QWORD *)v17 + 1) = v42;
  swift_unknownObjectWeakAssign();

  sub_1BC2B2DEC();
  sub_1BC127B70(0, (unint64_t *)&qword_1EF400100, (unint64_t *)&qword_1EF3F8998);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BC2B92D0;
  v29 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v28 + 32) = *(_QWORD *)&v20[v27];
  *(_QWORD *)(v28 + 40) = v29;
  swift_retain();
  sub_1BC2B2E10();
  v30 = (void *)sub_1BC2B2FE4();
  v31 = v30;
  swift_retain();
  sub_1BC27EB7C((uint64_t)v30, (uint64_t)&off_1E74B82B8);
  swift_release();

  v32 = qword_1EDA0FEE8;
  v33 = v31;
  if (v32 != -1)
    swift_once();
  v34 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v35 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setTitle_, v35);

  sub_1BC1FDFB8((uint64_t)v16);
  return v33;
}

uint64_t sub_1BC204504()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC204528(uint64_t a1, char a2, double a3)
{
  uint64_t v3;

  return sub_1BC2039F4(a1, a2, *(char **)(v3 + 16), a3);
}

uint64_t sub_1BC204534(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC203B5C(*(double *)(v1 + 32), a1, *(void (**)(char *, uint64_t, double))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), 1);
}

uint64_t objectdestroy_2Tm_1()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC204588(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC203B5C(*(double *)(v1 + 32), a1, *(void (**)(char *, uint64_t, double))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), 0);
}

uint64_t sub_1BC2045AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC2045D8()
{
  uint64_t v0;

  return sub_1BC203C84(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1BC2045E4(char a1)
{
  uint64_t v1;

  sub_1BC203D88(a1, *(void **)(v1 + 16));
}

void sub_1BC2045EC()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[qword_1EF3FF7D8 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[qword_1EF3FF7E0] = &unk_1E74B0070;
  *(_QWORD *)&v0[qword_1EF3FF7E8] = &unk_1E74B0098;
  v1 = qword_1EF3FF7F0;
  if (qword_1EF3F8198 != -1)
    swift_once();
  *(_QWORD *)&v0[v1] = qword_1EF402CD0;
  *(_QWORD *)&v0[qword_1EF3FF7F8] = 0;
  swift_bridgeObjectRetain();

  sub_1BC2B52B8();
  __break(1u);
}

unint64_t sub_1BC2046F0()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t sub_1BC204774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_identifier;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC2047EC()
{
  return type metadata accessor for MedicationsDayHistoryEmptyItem();
}

uint64_t type metadata accessor for MedicationsDayHistoryEmptyItem()
{
  uint64_t result;

  result = qword_1EF3FF890;
  if (!qword_1EF3FF890)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC204830()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC2048A8()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC2048F8()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC20494C()
{
  sub_1BC2B5450();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC2049B0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BC2049EC()
{
  return sub_1BC2046F0();
}

uint64_t sub_1BC204A0C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_bodyText);
  if (*v2 == *(_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_bodyText)
    && v2[1] == *(_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_bodyText + 8))
  {
    return 1;
  }
  else
  {
    return sub_1BC2B53CC();
  }
}

unint64_t sub_1BC204A4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FF940;
  if (!qword_1EF3FF940)
  {
    v1 = type metadata accessor for MedicationsDayHistoryEmptyItem();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C2AB8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FF940);
  }
  return result;
}

uint64_t sub_1BC204A94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  sub_1BC125B54(0, 0, 0);
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    v3 = 0;
    while (2)
    {
      v4 = *(_QWORD *)(a1 + 32 + 8 * v3);
      v5 = 0xE000000000000000;
      switch(v4)
      {
        case 0:
          goto LABEL_7;
        case 1:
        case 2:
        case 3:
          sub_1BC2B51BC();
          swift_bridgeObjectRelease();
          sub_1BC2B44FC();
          swift_bridgeObjectRelease();
          sub_1BC2B44FC();
          sub_1BC2B44FC();
          swift_bridgeObjectRelease();
          if (qword_1EDA0FEE8 != -1)
            swift_once();
          v6 = (id)qword_1EDA0FEF8;
          swift_bridgeObjectRetain();
          v4 = sub_1BC2B2144();
          v5 = v7;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
LABEL_7:
          v9 = *(_QWORD *)(v12 + 16);
          v8 = *(_QWORD *)(v12 + 24);
          if (v9 >= v8 >> 1)
            sub_1BC125B54(v8 > 1, v9 + 1, 1);
          ++v3;
          *(_QWORD *)(v12 + 16) = v9 + 1;
          v10 = v12 + 16 * v9;
          *(_QWORD *)(v10 + 32) = v4;
          *(_QWORD *)(v10 + 40) = v5;
          if (v2 == v3)
            break;
          continue;
        default:
          result = sub_1BC2B52B8();
          __break(1u);
          return result;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v12;
}

__n128 sub_1BC204D84()
{
  __n128 result;

  __asm { FMOV            V0.2D, #16.0 }
  *(__n128 *)&qword_1EF402A10 = result;
  *(__n128 *)&qword_1EF402A20 = result;
  return result;
}

uint64_t sub_1BC204D98(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC2070E8();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC204E08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC204E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC2070E8();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC204EC4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC204F0C;
}

uint64_t sub_1BC204F0C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC2070E8();
  return result;
}

id sub_1BC204F3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = sub_1BC204F98();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC204F98()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v1 = (void *)sub_1BC2B4C64();
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  v7 = sub_1BC2B4460();
  v8 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v7, v8);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v4;
}

id sub_1BC205178()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    v14 = sub_1BC2B4460();
    v15 = v8;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v9 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10, v14, v15);

    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v9, sel_setNumberOfLines_, 0);
    objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC20539C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton);
  }
  else
  {
    v4 = sub_1BC2053FC(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC2053FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - v3;
  v5 = sub_1BC2B4EC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_init);
  v18 = sub_1BC2B4460();
  v19 = v10;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v11 = v18;
  v12 = v19;
  v13 = v9;
  swift_bridgeObjectRelease();
  v18 = v11;
  v19 = v12;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setAccessibilityIdentifier_, v14);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v15) = 1148846080;
  objc_msgSend(v13, sel_setContentCompressionResistancePriority_forAxis_, 0, v15);
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, a1, sel_editButtonTapped_, 64);
  objc_msgSend(v13, sel_setContentHorizontalAlignment_, 4);
  sub_1BC2B4E8C();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v16 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B4E98();
  sub_1BC2B4DF0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_1BC2B4EEC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13;
}

void sub_1BC205718(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  id v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints) = a1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC16D050(v3, v2);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = (void *)objc_opt_self();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v6 = (void *)sub_1BC2B4580();
    objc_msgSend(v5, sel_deactivateConstraints_, v6);

    swift_bridgeObjectRetain();
    v7 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v7);
    swift_bridgeObjectRelease();

  }
}

id sub_1BC205828(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  id v10;
  objc_super v12;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints] = MEMORY[0x1E0DEE9D8];
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionFactorsCell();
  v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC205A40();

  return v10;
}

id sub_1BC205920(void *a1)
{
  _BYTE *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton] = 0;
  v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints] = MEMORY[0x1E0DEE9D8];
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionFactorsCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t sub_1BC205A40()
{
  void *v0;
  uint64_t ObjectType;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  v2 = objc_msgSend(v0, sel_contentView);
  v3 = sub_1BC204F3C();
  objc_msgSend(v2, sel_addSubview_, v3);

  v4 = objc_msgSend(v0, sel_contentView);
  v5 = sub_1BC205178();
  objc_msgSend(v4, sel_addSubview_, v5);

  v6 = objc_msgSend(v0, sel_contentView);
  v7 = sub_1BC20539C();
  objc_msgSend(v6, sel_addSubview_, v7);

  sub_1BC2065B8(*((_BYTE *)v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout));
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC2B92C0;
  v9 = sub_1BC2B3CE0();
  v10 = MEMORY[0x1E0DC23D0];
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  v11 = sub_1BC2B3D40();
  v12 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v8 + 48) = v11;
  *(_QWORD *)(v8 + 56) = v12;
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = ObjectType;
  sub_1BC13079C();
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC205C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = MEMORY[0x1BCCEF478](a3 + 16);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1BC2B39A4();
    v10 = sub_1BC2B39D4();
    v11 = sub_1BC2B48BC();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17 = v13;
      *(_DWORD *)v12 = 136446210;
      v16[0] = v12 + 4;
      v14 = sub_1BC2B54F8();
      v16[1] = sub_1BC12540C(v14, v15, &v17);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v10, v11, "[%{public}s] traitCollectionDidChange", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v13, -1, -1);
      MEMORY[0x1BCCEF3A0](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v9, sel_invalidateIntrinsicContentSize);
    objc_msgSend(v9, sel_setNeedsLayout);

  }
}

uint64_t sub_1BC205DE8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  uint64_t v10;
  void *v12;
  id v13;
  id v14;
  objc_super v15;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = (void *)sub_1BC2B3AE8();
  v9 = (objc_class *)type metadata accessor for InteractionFactorsCell();
  v15.receiver = v1;
  v15.super_class = v9;
  objc_msgSendSuper2(&v15, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1BCCEE230]();
  v10 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
  {
    sub_1BC1640DC((uint64_t)v7, (uint64_t)v5);
    MEMORY[0x1BCCEE23C](v5);
    return sub_1BC164138((uint64_t)v7);
  }
  else
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_systemBackgroundColor);
    v14 = objc_msgSend(v12, sel_secondarySystemBackgroundColor);
    sub_1BC2B4CE8();

    sub_1BC2B3B18();
    return MEMORY[0x1BCCEE23C](v7);
  }
}

id sub_1BC206034()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  objc_class *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v6 = sub_1BC2B39D4();
  v7 = sub_1BC2B48BC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v16 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v18 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_1BC2B54F8();
    v17 = sub_1BC12540C(v11, v12, &v18);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v6, v7, "[%{public}s] layoutSubviews", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    MEMORY[0x1BCCEF3A0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = (objc_class *)type metadata accessor for InteractionFactorsCell();
  v19.receiver = v1;
  v19.super_class = v13;
  objc_msgSendSuper2(&v19, sel_layoutSubviews);
  return sub_1BC206238();
}

id sub_1BC206238()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unsigned __int8 *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  id result;
  objc_class *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;
  CGRect v22;

  swift_getObjectType();
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v22);
  LODWORD(v5) = sub_1BC2064BC();
  sub_1BC2B39A4();
  v6 = v0;
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48BC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v18 = v5;
    v5 = v9;
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v5 = 136446722;
    v11 = sub_1BC2B54F8();
    v19 = sub_1BC12540C(v11, v12, &v20);
    v17 = v1;
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 1024;
    LODWORD(v19) = v18 & 1;
    sub_1BC2B4FD0();
    *(_WORD *)(v5 + 18) = 1024;
    v13 = v6[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout];

    LODWORD(v19) = v13;
    sub_1BC2B4FD0();

    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%{public}s] shouldUseVerticalLayout: %{BOOL}d, isUsingVerticalLayout: %{BOOL}d", (uint8_t *)v5, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    v14 = v5;
    LOBYTE(v5) = v18;
    MEMORY[0x1BCCEF3A0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  result = (id)(v5 & 1);
  if ((_DWORD)result != v6[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout])
  {
    sub_1BC2065B8(v5 & 1);
    objc_msgSend(v6, sel_invalidateIntrinsicContentSize);
    v16 = (objc_class *)type metadata accessor for InteractionFactorsCell();
    v21.receiver = v6;
    v21.super_class = v16;
    return objc_msgSendSuper2(&v21, sel_layoutSubviews);
  }
  return result;
}

BOOL sub_1BC2064BC()
{
  id v0;
  id v1;
  id v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;

  v0 = sub_1BC20539C();
  v1 = objc_msgSend(v0, sel_titleLabel);

  if (v1)
  {
    sub_1BC2B4C7C();

  }
  if (qword_1EF3F8160 != -1)
    swift_once();
  v2 = sub_1BC204F3C();
  sub_1BC2B4C7C();
  v4 = v3;

  v5 = sub_1BC204F3C();
  sub_1BC2B4C7C();
  v7 = v6;

  return v4 < v7;
}

void sub_1BC2065B8(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    *((_BYTE *)v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout) = 1;
    sub_1BC0E7940();
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BC2BAEA0;
    v4 = sub_1BC204F3C();
    v5 = objc_msgSend(v4, sel_leadingAnchor);

    v6 = objc_msgSend(v2, sel_contentView);
    v7 = objc_msgSend(v6, sel_layoutMarginsGuide);

    v8 = objc_msgSend(v7, sel_leadingAnchor);
    v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);

    *(_QWORD *)(v3 + 32) = v9;
    v10 = sub_1BC204F3C();
    v11 = objc_msgSend(v10, sel_topAnchor);

    v12 = objc_msgSend(v2, sel_contentView);
    v13 = objc_msgSend(v12, sel_topAnchor);

    if (qword_1EF3F8160 != -1)
      swift_once();
    v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, *(double *)&qword_1EF402A10);

    *(_QWORD *)(v3 + 40) = v14;
    v15 = sub_1BC204F3C();
    v16 = objc_msgSend(v15, sel_trailingAnchor);

    v17 = objc_msgSend(v2, sel_contentView);
    v18 = objc_msgSend(v17, sel_layoutMarginsGuide);

    v19 = objc_msgSend(v18, sel_trailingAnchor);
    v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);

    *(_QWORD *)(v3 + 48) = v20;
    v21 = sub_1BC205178();
    v22 = objc_msgSend(v21, sel_leadingAnchor);

    v23 = sub_1BC204F3C();
    v24 = objc_msgSend(v23, sel_leadingAnchor);

    v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
    *(_QWORD *)(v3 + 56) = v25;
    v26 = sub_1BC205178();
    v27 = objc_msgSend(v26, sel_topAnchor);

    v28 = sub_1BC204F3C();
    v29 = objc_msgSend(v28, sel_bottomAnchor);

    v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
    *(_QWORD *)(v3 + 64) = v30;
    v31 = sub_1BC205178();
    v32 = objc_msgSend(v31, sel_trailingAnchor);

    v33 = objc_msgSend(v2, sel_contentView);
    v34 = objc_msgSend(v33, sel_layoutMarginsGuide);

    v35 = objc_msgSend(v34, sel_trailingAnchor);
    v36 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v35);

    *(_QWORD *)(v3 + 72) = v36;
    v37 = sub_1BC20539C();
    v38 = objc_msgSend(v37, sel_leadingAnchor);

    v39 = objc_msgSend(v2, sel_contentView);
    v40 = objc_msgSend(v39, sel_layoutMarginsGuide);

    v41 = objc_msgSend(v40, sel_leadingAnchor);
    v42 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v41);

    *(_QWORD *)(v3 + 80) = v42;
    v43 = sub_1BC20539C();
    v44 = objc_msgSend(v43, sel_topAnchor);

    v45 = sub_1BC205178();
    v46 = objc_msgSend(v45, sel_bottomAnchor);

    v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v46);
    *(_QWORD *)(v3 + 88) = v47;
    v48 = sub_1BC20539C();
    v49 = objc_msgSend(v48, sel_trailingAnchor);

    v50 = objc_msgSend(v2, sel_contentView);
    v51 = objc_msgSend(v50, sel_layoutMarginsGuide);

    v52 = objc_msgSend(v51, sel_trailingAnchor);
    v53 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v52);

    *(_QWORD *)(v3 + 96) = v53;
    v54 = sub_1BC20539C();
    v55 = objc_msgSend(v54, sel_bottomAnchor);

    v56 = objc_msgSend(v2, sel_contentView);
    v57 = objc_msgSend(v56, sel_bottomAnchor);

    v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v57, -*(double *)&qword_1EF402A20);
    *(_QWORD *)(v3 + 104) = v58;
  }
  else
  {
    *((_BYTE *)v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout) = 0;
    sub_1BC0E7940();
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BC2C2BF0;
    v59 = sub_1BC204F3C();
    v60 = objc_msgSend(v59, sel_leadingAnchor);

    v61 = objc_msgSend(v2, sel_contentView);
    v62 = objc_msgSend(v61, sel_layoutMarginsGuide);

    v63 = objc_msgSend(v62, sel_leadingAnchor);
    v64 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v63);

    *(_QWORD *)(v3 + 32) = v64;
    v65 = sub_1BC204F3C();
    v66 = objc_msgSend(v65, sel_topAnchor);

    v67 = objc_msgSend(v2, sel_contentView);
    v68 = objc_msgSend(v67, sel_topAnchor);

    if (qword_1EF3F8160 != -1)
      swift_once();
    v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v68, *(double *)&qword_1EF402A10);

    *(_QWORD *)(v3 + 40) = v69;
    v70 = sub_1BC20539C();
    v71 = objc_msgSend(v70, sel_leadingAnchor);

    v72 = sub_1BC204F3C();
    v73 = objc_msgSend(v72, sel_trailingAnchor);

    v74 = objc_msgSend(v71, sel_constraintGreaterThanOrEqualToAnchor_constant_, v73, *(double *)&qword_1EF402A18);
    *(_QWORD *)(v3 + 48) = v74;
    v75 = sub_1BC20539C();
    v76 = objc_msgSend(v75, sel_firstBaselineAnchor);

    v77 = sub_1BC204F3C();
    v78 = objc_msgSend(v77, sel_firstBaselineAnchor);

    v79 = objc_msgSend(v76, (SEL)&selRef_sharedBehavior + 6, v78);
    *(_QWORD *)(v3 + 56) = v79;
    v80 = sub_1BC20539C();
    v81 = objc_msgSend(v80, sel_trailingAnchor);

    v82 = objc_msgSend(v2, sel_contentView);
    v83 = objc_msgSend(v82, sel_trailingAnchor);

    v84 = objc_msgSend(v81, sel_constraintEqualToAnchor_constant_, v83, -*(double *)&qword_1EF402A10);
    *(_QWORD *)(v3 + 64) = v84;
    v85 = sub_1BC205178();
    v86 = objc_msgSend(v85, sel_leadingAnchor);

    v87 = sub_1BC204F3C();
    v88 = objc_msgSend(v87, sel_leadingAnchor);

    v89 = objc_msgSend(v86, (SEL)&selRef_sharedBehavior + 6, v88);
    *(_QWORD *)(v3 + 72) = v89;
    v90 = sub_1BC205178();
    v91 = objc_msgSend(v90, sel_topAnchor);

    v92 = sub_1BC204F3C();
    v93 = objc_msgSend(v92, sel_bottomAnchor);

    v94 = objc_msgSend(v91, (SEL)&selRef_sharedBehavior + 6, v93);
    *(_QWORD *)(v3 + 80) = v94;
    v95 = sub_1BC205178();
    v96 = objc_msgSend(v95, sel_trailingAnchor);

    v97 = sub_1BC204F3C();
    v98 = objc_msgSend(v97, sel_trailingAnchor);

    v99 = objc_msgSend(v96, (SEL)&selRef_sharedBehavior + 6, v98);
    *(_QWORD *)(v3 + 88) = v99;
    v100 = sub_1BC205178();
    v101 = objc_msgSend(v100, sel_bottomAnchor);

    v102 = objc_msgSend(v2, sel_contentView);
    v103 = objc_msgSend(v102, sel_bottomAnchor);

    v104 = objc_msgSend(v101, sel_constraintEqualToAnchor_constant_, v103, -*(double *)&qword_1EF402A20);
    *(_QWORD *)(v3 + 96) = v104;
  }
  sub_1BC2B45A4();
  sub_1BC205718(v3);
}

uint64_t sub_1BC2070E8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint32_t *p_align;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v5, (uint64_t)v31);
  if (!v31[3])
  {
    sub_1BC0F7954((uint64_t)v31);
LABEL_9:
    sub_1BC2B39A4();
    v17 = v0;
    v18 = sub_1BC2B39D4();
    v19 = sub_1BC2B48C8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v29 = v1;
      v21 = (uint8_t *)v20;
      v22 = swift_slowAlloc();
      v30 = v22;
      *(_DWORD *)v21 = 136446210;
      sub_1BC0E5774(v5, (uint64_t)v31);
      sub_1BC0E84E8();
      v23 = sub_1BC2B4490();
      v31[0] = sub_1BC12540C(v23, v24, &v30);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v18, v19, "Incorrect view model for InteractionFactorsItem: %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v22, -1, -1);
      MEMORY[0x1BCCEF3A0](v21, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v29);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for InteractionFactorsItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_9;
  v6 = v30;
  v7 = sub_1BC204F3C();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v8 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v9 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  p_align = &stru_1E74C9FE8.align;
  objc_msgSend(v7, sel_setText_, v9);

  v11 = sub_1BC205178();
  if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
  {
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1BC204A94(v12);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3738]), sel_init);
    sub_1BC0F87F0(v13);
    swift_bridgeObjectRelease();
    v15 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v14, sel_stringFromItems_, v15);

    if (v16)
    {
      sub_1BC2B4460();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    v26 = (void *)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v27 = v26;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    p_align = (_DWORD *)(&stru_1E74C9FE8 + 24);
  }
  v28 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, *((SEL *)p_align + 363), v28);

  sub_1BC206238();
  return swift_release();
}

uint64_t type metadata accessor for InteractionFactorsCell()
{
  return objc_opt_self();
}

uint64_t Array<A>.displayString()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = swift_bridgeObjectRetain();
    v2 = sub_1BC204A94(v1);
    swift_bridgeObjectRelease();
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3738]), sel_init);
    sub_1BC0F87F0(v2);
    swift_bridgeObjectRelease();
    v4 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v3, sel_stringFromItems_, v4);

    if (v5)
    {
      v6 = sub_1BC2B4460();

    }
    else
    {

      return 0;
    }
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v7 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v6 = sub_1BC2B2144();
    swift_bridgeObjectRelease();

  }
  return v6;
}

void sub_1BC20777C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v5, (uint64_t)v18);
  if (v18[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    type metadata accessor for InteractionFactorsItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = objc_msgSend(v0, sel_viewController);
      if (v6)
      {
        v7 = v6;
        sub_1BC1FF114(v6);
        swift_release();

        return;
      }
      swift_release();
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v18);
  }
  sub_1BC2B39A4();
  v8 = v0;
  v9 = sub_1BC2B39D4();
  v10 = sub_1BC2B48C8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v1;
    v17 = v12;
    v13 = v12;
    *(_DWORD *)v11 = 136446210;
    sub_1BC0E5774(v5, (uint64_t)v18);
    sub_1BC0E84E8();
    v14 = sub_1BC2B4490();
    v18[0] = sub_1BC12540C(v14, v15, &v17);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v9, v10, "Incorrect view model for InteractionFactorsItem: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v13, -1, -1);
    MEMORY[0x1BCCEF3A0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id InteractionFactorsCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC207B04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for InteractionFactorsCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of InteractionFactorsCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of InteractionFactorsCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1BC207BBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC207BE0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC207C04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC205C08(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1BC207C0C()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  return 0xD000000000000015;
}

id sub_1BC207CF0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___frequencyTitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___frequencyTitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___frequencyTitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 4);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v7 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v7);

    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1BC207E58()
{
  return sub_1BC207E78(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___timesStackView, 4);
}

id sub_1BC207E68()
{
  return sub_1BC207E78(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___dosesStackView, 1);
}

id sub_1BC207E78(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
    v8 = (void *)sub_1BC2B4580();
    v9 = objc_msgSend(v7, sel_initWithArrangedSubviews_, v8);

    objc_msgSend(v9, sel_setAxis_, 1);
    objc_msgSend(v9, sel_setAlignment_, a2);
    objc_msgSend(v9, sel_setDistribution_, 3);
    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v9, sel_setSpacing_, 2.0);
    v10 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v9;
    v5 = v9;

    v4 = 0;
  }
  v11 = v4;
  return v5;
}

id sub_1BC207F94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___containerStackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___containerStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___containerStackView);
  }
  else
  {
    v4 = sub_1BC207FF4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC207FF4()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  sub_1BC0E7940();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v0 + 32) = sub_1BC207E58();
  *(_QWORD *)(v0 + 40) = sub_1BC207E68();
  sub_1BC2B45A4();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v2 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 0);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setDistribution_, 3);
  objc_msgSend(v3, sel_setSpacing_, 8.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v3, sel_addArrangedSubview_, v4);

  return v3;
}

void sub_1BC2082D4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC207CF0();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = sub_1BC207F94();
  objc_msgSend(v3, sel_addSubview_, v4);

  v50 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC2BA310;
  v6 = sub_1BC207CF0();
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v0, sel_contentView);
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, 12.0);
  *(_QWORD *)(v5 + 32) = v10;
  v11 = sub_1BC207CF0();
  v12 = objc_msgSend(v11, sel_leadingAnchor);

  v13 = objc_msgSend(v0, sel_contentView);
  v14 = objc_msgSend(v13, sel_layoutMarginsGuide);

  v15 = objc_msgSend(v14, (SEL)&ShapeCell.base_props + 6);
  v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v5 + 40) = v16;
  v17 = sub_1BC207CF0();
  v18 = objc_msgSend(v17, sel_trailingAnchor);

  v19 = objc_msgSend(v0, sel_contentView);
  v20 = objc_msgSend(v19, (SEL)&selRef_initWithRootViewController_ + 5);

  v21 = objc_msgSend(v20, sel_trailingAnchor);
  v22 = objc_msgSend(v18, (SEL)&selRef_sharedBehavior + 6, v21);

  *(_QWORD *)(v5 + 48) = v22;
  v23 = sub_1BC207F94();
  v24 = objc_msgSend(v23, sel_topAnchor);

  v25 = sub_1BC207CF0();
  v26 = objc_msgSend(v25, sel_bottomAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 12.0);
  *(_QWORD *)(v5 + 56) = v27;
  v28 = sub_1BC207F94();
  v29 = objc_msgSend(v28, sel_bottomAnchor);

  v30 = objc_msgSend(v0, sel_contentView);
  v31 = objc_msgSend(v30, sel_bottomAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, -12.0);
  *(_QWORD *)(v5 + 64) = v32;
  v33 = sub_1BC207F94();
  v34 = objc_msgSend(v33, sel_leadingAnchor);

  v35 = objc_msgSend(v0, sel_contentView);
  v36 = objc_msgSend(v35, sel_layoutMarginsGuide);

  v37 = objc_msgSend(v36, sel_leadingAnchor);
  v38 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v5 + 72) = v38;
  v39 = sub_1BC207F94();
  v40 = objc_msgSend(v39, sel_trailingAnchor);

  v41 = objc_msgSend(v0, sel_contentView);
  v42 = objc_msgSend(v41, sel_layoutMarginsGuide);

  v43 = objc_msgSend(v42, sel_trailingAnchor);
  v44 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v43, 8.0);

  *(_QWORD *)(v5 + 80) = v44;
  v45 = sub_1BC207E58();
  v46 = objc_msgSend(v45, sel_trailingAnchor);

  v47 = sub_1BC207E68();
  v48 = objc_msgSend(v47, sel_leadingAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -8.0);
  *(_QWORD *)(v5 + 88) = v49;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v51 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, v51);

}

uint64_t sub_1BC208874()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  id v37;
  id v38;
  double v39;
  uint64_t v40;
  id v41;
  double v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t ObjectType;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  int v77;
  uint64_t v78;
  _QWORD v79[6];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v75 = (_QWORD *)sub_1BC2B39E0();
  v2 = *(v75 - 1);
  MEMORY[0x1E0C80A78](v75);
  v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - v7;
  v9 = sub_1BC2B227C();
  v74 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v73 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B2294();
  v71 = *(_QWORD *)(v11 - 8);
  v72 = v11;
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  v13 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v76 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FF9D0, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem, v5);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v60 - v16;
  v18 = type metadata accessor for ScheduleIntervalItem();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v63 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v21, (uint64_t)v79);
  if (!v79[3])
  {
    sub_1BC0F2444((uint64_t)v79, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_9;
  }
  sub_1BC0E1B94();
  v22 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, v22 ^ 1u, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_9:
    sub_1BC0F2444((uint64_t)v17, &qword_1EF3FF9D0, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem);
    sub_1BC2B39A4();
    v51 = v1;
    v52 = sub_1BC2B39D4();
    v53 = sub_1BC2B48C8();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v78 = v55;
      *(_DWORD *)v54 = 136446466;
      v56 = sub_1BC2B54F8();
      v79[0] = sub_1BC12540C(v56, v57, &v78);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2080;
      sub_1BC0E5774(v21, (uint64_t)v79);
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v58 = sub_1BC2B4490();
      v79[0] = sub_1BC12540C(v58, v59, &v78);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v52, v53, "%{public}s Incorrect view model for %s Expecting ScheduleIntervalItem", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v55, -1, -1);
      MEMORY[0x1BCCEF3A0](v54, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, _QWORD *))(v2 + 8))(v4, v75);
  }
  v62 = v18;
  v23 = v9;
  v24 = v63;
  sub_1BC209350((uint64_t)v17, v63);
  v25 = sub_1BC207CF0();
  swift_bridgeObjectRetain();
  v26 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setText_, v26);

  v27 = sub_1BC207E58();
  sub_1BC2B4C94();

  v28 = sub_1BC207E68();
  sub_1BC2B4C94();

  v29 = *(_QWORD *)(v24 + 40);
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v61 = v8;
    v31 = v29 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    type metadata accessor for UILayoutPriority(0);
    ObjectType = v32;
    v67 = *(_QWORD *)(v13 + 72);
    v66 = *MEMORY[0x1E0DC48D0];
    v60 = v29;
    swift_bridgeObjectRetain();
    v64 = v23;
    v33 = (uint64_t)v76;
    v65 = v1;
    do
    {
      sub_1BC209754(v31, v33);
      v34 = v69;
      sub_1BC2B2288();
      v35 = v73;
      sub_1BC2B2270();
      sub_1BC2B23C0();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v64);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v72);
      v36 = sub_1BC209394();
      v75 = v36;
      swift_bridgeObjectRelease();
      v37 = sub_1BC209394();
      v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
      objc_msgSend(v38, sel_setAttributedText_, v36);
      v77 = 1065353216;
      LODWORD(v78) = 1132068864;
      sub_1BC0E519C((unint64_t *)&unk_1EDA0FCA8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
      sub_1BC2B39EC();
      LODWORD(v39) = v79[0];
      objc_msgSend(v38, sel_setContentHuggingPriority_forAxis_, 0, v39);
      objc_msgSend(v38, sel_setAdjustsFontForContentSizeCategory_, 1);
      objc_msgSend(v38, sel_setNumberOfLines_, 1);
      v40 = v66;
      objc_msgSend(v38, sel_setMaximumContentSizeCategory_, v66);
      v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
      objc_msgSend(v41, sel_setAttributedText_, v37);
      LODWORD(v42) = 1144750080;
      objc_msgSend(v41, sel_setContentHuggingPriority_forAxis_, 0, v42);
      objc_msgSend(v41, sel_setAdjustsFontForContentSizeCategory_, 1);
      objc_msgSend(v41, sel_setNumberOfLines_, 1);
      objc_msgSend(v41, sel_setMaximumContentSizeCategory_, v40);

      v43 = sub_1BC207E58();
      objc_msgSend(v43, sel_addArrangedSubview_, v38);

      v44 = sub_1BC207E68();
      v33 = (uint64_t)v76;
      v45 = v44;
      objc_msgSend(v44, sel_addArrangedSubview_, v41);

      sub_1BC0E8594(v33, type metadata accessor for ScheduleDataSource.DoseItem);
      v31 += v67;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v8 = v61;
  }
  v46 = v63;
  v47 = v63 + *(int *)(v62 + 32);
  v48 = sub_1BC2B3B48();
  v49 = *(_QWORD *)(v48 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v8, v47, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v8, 0, 1, v48);
  MEMORY[0x1BCCEE23C](v8);
  return sub_1BC0E8594(v46, (uint64_t (*)(_QWORD))type metadata accessor for ScheduleIntervalItem);
}

id sub_1BC209104()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleIntervalCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScheduleIntervalCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC2091D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC209220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC208874();
  return sub_1BC0F2444(a1, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC20929C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2092E4;
}

uint64_t sub_1BC2092E4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC208874();
  return result;
}

uint64_t type metadata accessor for ScheduleIntervalItem()
{
  uint64_t result;

  result = qword_1EF3FFA60;
  if (!qword_1EF3FFA60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC209350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduleIntervalItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BC209394()
{
  void *v0;
  id v1;
  uint64_t inited;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  double v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v25;

  v25 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v0 = (void *)sub_1BC2B4C64();
  v1 = objc_msgSend(v0, sel_fontDescriptor);
  sub_1BC209798(0, &qword_1EF3FF9D8, &qword_1EF3F9910, type metadata accessor for AttributeName);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92D0;
  v3 = (void *)*MEMORY[0x1E0DC1380];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1380];
  sub_1BC0E7998(0, &qword_1EF3FF9E0, (uint64_t (*)(uint64_t))sub_1BC2097F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2B92D0;
  sub_1BC209798(0, &qword_1EF3FF9F0, &qword_1EF3FF9F8, type metadata accessor for FeatureKey);
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC2B92C0;
  v6 = (void *)*MEMORY[0x1E0DC4A60];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x1E0DC4A60];
  *(_QWORD *)(v5 + 40) = 6;
  v7 = (void *)*MEMORY[0x1E0DC4A50];
  *(_QWORD *)(v5 + 48) = *MEMORY[0x1E0DC4A50];
  *(_QWORD *)(v5 + 56) = 0;
  v8 = v3;
  v9 = v6;
  v10 = v7;
  *(_QWORD *)(v4 + 32) = sub_1BC106CA4(v5);
  sub_1BC0E7998(0, qword_1EF3FFA00, (uint64_t (*)(uint64_t))sub_1BC2097F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 40) = v4;
  sub_1BC106D9C(inited);
  type metadata accessor for AttributeName(0);
  sub_1BC0E519C(&qword_1EF3F8640, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC2B9014);
  v12 = (void *)sub_1BC2B43AC();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v1, sel_fontDescriptorByAddingAttributes_, v12);

  objc_msgSend(v0, sel_pointSize);
  v15 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v13, v14);

  sub_1BC209798(0, (unint64_t *)&unk_1EDA0FE80, (unint64_t *)&qword_1EDA0FD50, type metadata accessor for Key);
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC2B92D0;
  v17 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(v16 + 64) = v25;
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = v15;
  swift_bridgeObjectRetain();
  v18 = v17;
  v19 = v15;
  sub_1BC1069C0(v16);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v21 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FD20, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B897C);
  v22 = (void *)sub_1BC2B43AC();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

uint64_t sub_1BC209754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC209798(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC209870(255, a3, a4);
    v5 = sub_1BC2B53A8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC2097F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FF9E8)
  {
    type metadata accessor for FeatureKey(255);
    sub_1BC0E519C(&qword_1EF3F8630, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC2B9058);
    v0 = sub_1BC2B43D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FF9E8);
  }
}

void sub_1BC209870(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t *sub_1BC2098D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 32);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_1BC2B3B48();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t sub_1BC209998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1BC2B3B48();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1BC2099F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_1BC2B3B48();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

_QWORD *sub_1BC209A88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B3B48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1BC209B44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BC2B3B48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_1BC209BA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 32);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BC2B3B48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1BC209C34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC209C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B3B48();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1BC209CBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC209CC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC2B3B48();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC209D3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B3B48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC209DCC()
{
  sub_1BC20A9C4();
  return sub_1BC2B4478();
}

uint64_t sub_1BC209DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13[4];
  uint64_t v14[5];

  swift_getObjectType();
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v5, (uint64_t)v14);
  if (v14[3])
  {
    sub_1BC0E1B94();
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC20A15C(v13[0], v13[1], v13[2], v13[3]);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v14);
  }
  sub_1BC2B39A4();
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48C8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_1BC2B54F8();
    v13[0] = sub_1BC12540C(v11, v12, v14);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%s]: Unexpected view model.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    MEMORY[0x1BCCEF3A0](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1BC20A15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  v6 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummary];
  v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummary];
  v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummary
                    + 8];
  *v6 = a1;
  v6[1] = a2;
  v6[2] = a3;
  v6[3] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC1BAC3C(v7, v8);
  v9 = *v6;
  v10 = v6[1];
  v18 = *v6;
  v19 = v10;
  v20 = v6[2];
  v21 = v6[3];
  sub_1BC20A9FC();
  objc_allocWithZone(v11);
  sub_1BC1BAC0C(v9, v10);
  v12 = (void *)sub_1BC2B41B4();
  v13 = objc_msgSend(v12, sel_view, v18, v19, v20, v21);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v14, sel_setBackgroundColor_, v15);

    v16 = objc_msgSend(v5, sel_contentView);
    objc_msgSend(v16, sel_addSubview_, v14);

    v17 = *(void **)&v5[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummaryView];
    *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummaryView] = v14;

  }
  sub_1BC20A2C8();

}

void sub_1BC20A2C8()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummaryView];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v4 = (void *)objc_opt_self();
    sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BC2BDB30;
    v6 = objc_msgSend(v2, sel_separatorLayoutGuide);
    v7 = objc_msgSend(v6, sel_leadingAnchor);

    v8 = objc_msgSend(v2, sel_contentView);
    v9 = objc_msgSend(v8, sel_leadingAnchor);

    v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
    *(_QWORD *)(v5 + 32) = v10;
    v11 = objc_msgSend(v3, sel_leadingAnchor);
    v12 = objc_msgSend(v2, sel_contentView);
    v13 = objc_msgSend(v12, sel_leadingAnchor);

    v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, 8.0);
    *(_QWORD *)(v5 + 40) = v14;
    v15 = objc_msgSend(v3, sel_trailingAnchor);
    v16 = objc_msgSend(v2, sel_contentView);
    v17 = objc_msgSend(v16, sel_trailingAnchor);

    v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, -8.0);
    *(_QWORD *)(v5 + 48) = v18;
    v19 = objc_msgSend(v3, sel_topAnchor);
    v20 = objc_msgSend(v2, sel_contentView);
    v21 = objc_msgSend(v20, sel_topAnchor);

    v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, 12.0);
    *(_QWORD *)(v5 + 56) = v22;
    v23 = objc_msgSend(v3, sel_bottomAnchor);
    v24 = objc_msgSend(v2, sel_contentView);
    v25 = objc_msgSend(v24, sel_bottomAnchor);

    v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, -12.0);
    *(_QWORD *)(v5 + 64) = v26;
    sub_1BC2B45A4();
    sub_1BC11BF6C();
    v27 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_activateConstraints_, v27);

  }
}

id sub_1BC20A668()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSummaryCollectionViewHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationSummaryCollectionViewHeaderCell()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for MedicationSummaryItem()
{
  return &type metadata for MedicationSummaryItem;
}

uint64_t sub_1BC20A718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC20A768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC209DFC();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC20A7D4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC20A81C;
}

uint64_t sub_1BC20A820@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC20A874(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC209DFC();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC20A8E4(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC20A81C;
}

uint64_t sub_1BC20A930(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC209DFC();
  return result;
}

uint64_t sub_1BC20A960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2C2E00, a3);
  return sub_1BC2B2B34();
}

unint64_t sub_1BC20A9C4()
{
  unint64_t result;

  result = qword_1EF3FFAE8;
  if (!qword_1EF3FFAE8)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FFAE8);
  }
  return result;
}

void sub_1BC20A9FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FFAF0)
  {
    sub_1BC0E2130(255, &qword_1EF3FFAF8, (uint64_t)&type metadata for MedicationSummaryView, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC20AA74();
    v0 = sub_1BC2B41C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FFAF0);
  }
}

unint64_t sub_1BC20AA74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF3FFB00;
  if (!qword_1EF3FFB00)
  {
    sub_1BC0E2130(255, &qword_1EF3FFAF8, (uint64_t)&type metadata for MedicationSummaryView, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1BC20AAEC();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CE0798], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF3FFB00);
  }
  return result;
}

unint64_t sub_1BC20AAEC()
{
  unint64_t result;

  result = qword_1EF3FFB08;
  if (!qword_1EF3FFB08)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationSummaryView, &type metadata for MedicationSummaryView);
    atomic_store(result, (unint64_t *)&qword_1EF3FFB08);
  }
  return result;
}

uint64_t CycleData.localizedDescription.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::Int active;
  id v6;
  id v7;
  char v8;
  Swift::Int v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = CycleData.calculateTotalActiveDays()();
  v6 = *v0;
  v7 = objc_msgSend(*v0, sel_scheduleType);
  if (v7 == (id)7)
  {
    v8 = 1;
  }
  else
  {
    if (v7 != (id)8)
      goto LABEL_20;
    v8 = 0;
    active /= 7;
  }
  v9 = CycleData.calculateTotalPauseDays()();
  v10 = objc_msgSend(v6, sel_scheduleType);
  if (v10 == (id)7)
  {
    if ((v8 & 1) != 0)
    {
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v11 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      swift_bridgeObjectRelease();

      sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC2B92C0;
      v13 = MEMORY[0x1E0DEB418];
      v14 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v12 + 64) = v14;
      *(_QWORD *)(v12 + 32) = active;
      *(_QWORD *)(v12 + 96) = v13;
      *(_QWORD *)(v12 + 104) = v14;
      *(_QWORD *)(v12 + 72) = v9;
      v15 = sub_1BC2B443C();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      return v15;
    }
    goto LABEL_12;
  }
  if (v10 == (id)8)
  {
    if ((v8 & 1) == 0)
    {
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v19 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      swift_bridgeObjectRelease();

      sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1BC2B92C0;
      v21 = MEMORY[0x1E0DEB418];
      v22 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v20 + 64) = v22;
      *(_QWORD *)(v20 + 32) = active;
      *(_QWORD *)(v20 + 96) = v21;
      *(_QWORD *)(v20 + 104) = v22;
      *(_QWORD *)(v20 + 72) = v9 / 7;
      v15 = sub_1BC2B443C();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
LABEL_12:
    sub_1BC2B39A4();
    v16 = sub_1BC2B39D4();
    v17 = sub_1BC2B48C8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1BC0DC000, v16, v17, "Attempted to display mismatched units for localizeDescription of CycleData", v18, 2u);
      MEMORY[0x1BCCEF3A0](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
LABEL_20:
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

uint64_t CycleData.localizedNextPhaseDateChangeDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  Swift::String v10;
  id v11;
  _BYTE v14[8];
  uint64_t v15;
  unsigned __int8 v16;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v14[-v1 - 8];
  v3 = sub_1BC2B23F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  CycleData.nextCycleChangeDate.getter((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BC0F8D88((uint64_t)v2);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  CycleData.currentPhase.getter((uint64_t)v14);
  if (v16 == 255)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  if (v15)
  {
    if ((v16 & 1) != 0)
    {
      if (qword_1EDA0FEE8 != -1)
        swift_once();
    }
    else if (qword_1EDA0FEE8 != -1)
    {
      swift_once();
    }
    v8 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC2B92D0;
    v10 = Date.formattedWithYearIfDifferent()();
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1BC0F2748();
    *(Swift::String *)(v9 + 32) = v10;
    v7 = sub_1BC2B443C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((v16 & 1) != 0)
    {
      if (qword_1EDA0FEE8 != -1)
        swift_once();
    }
    else if (qword_1EDA0FEE8 != -1)
    {
      swift_once();
    }
    v11 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B2144();
    swift_bridgeObjectRelease();

  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

void CycleData.currentPhase.getter(uint64_t a1@<X8>)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  char *v12;
  Swift::Int v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  Swift::Int active;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1BC2B23F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B23E4();
  v7 = *v1;
  v8 = (void *)sub_1BC2B2360();
  type metadata accessor for CycleData();
  v9 = (void *)sub_1BC2B2510();
  v10 = objc_msgSend(v7, sel_dayInCycleFor_calendar_, v8, v9);

  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v16 = -1;
    goto LABEL_8;
  }
  v11 = v10;
  v12 = (char *)objc_msgSend(v11, sel_daysIntoCycle);
  if ((objc_msgSend(v11, sel_isInPauseInterval) & 1) != 0)
  {
    v13 = CycleData.calculateTotalPauseDays()();

    v14 = __OFSUB__(v12, v13);
    v15 = (uint64_t)&v12[-v13];
    if (!v14)
    {
      if ((v15 & 0x8000000000000000) == 0 || (v14 = __OFSUB__(0, v15), v15 = -v15, !v14))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        *(_QWORD *)a1 = v12;
        *(_QWORD *)(a1 + 8) = v15;
        v16 = 1;
LABEL_8:
        *(_BYTE *)(a1 + 16) = v16;
        return;
      }
      goto LABEL_16;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  active = CycleData.calculateTotalActiveDays()();

  v14 = __OFSUB__(v12, active);
  v18 = (uint64_t)&v12[-active];
  if (v14)
    goto LABEL_15;
  if (v18 < 0)
  {
    v14 = __OFSUB__(0, v18);
    v18 = -v18;
    if (v14)
      goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)a1 = v12;
  *(_QWORD *)(a1 + 8) = v18;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t CycleData.nextCycleChangeDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t result;
  _BYTE v13[8];
  uint64_t v14;
  unsigned __int8 v15;

  v2 = sub_1BC2B23F0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7 - 8];
  CycleData.currentPhase.getter((uint64_t)v13);
  if (v15 == 255)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  v9 = v14;
  sub_1BC2B23E4();
  sub_1BC2B2390();
  v10 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  result = v10(v6, v2);
  if (__OFADD__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1BC2B233C();
    v10(v8, v2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
  }
  return result;
}

uint64_t CycleData.localizeCurrentPhaseDescription.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unsigned __int8 v20;

  v1 = type metadata accessor for CycleData();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  CycleData.currentPhase.getter((uint64_t)&v18);
  if (v20 == 255)
    return 0;
  v5 = v19;
  if (!v19)
  {
    if ((v20 & 1) != 0)
    {
      if (qword_1EDA0FEE8 != -1)
        swift_once();
    }
    else if (qword_1EDA0FEE8 != -1)
    {
      swift_once();
    }
    v13 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v4 = sub_1BC2B2144();
    swift_bridgeObjectRelease();

    return v4;
  }
  if ((v20 & 1) != 0)
    return CycleData.localizedNextPhaseDateChangeDescription.getter();
  v6 = *v0;
  if (objc_msgSend(*v0, sel_scheduleType) == (id)7)
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v7 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v8 + 16) = xmmword_1BC2B92C0;
    v10 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 32) = v5;
    v11 = CycleData.calculateTotalPauseDays()();
    v12 = objc_msgSend(v6, sel_scheduleType);
    if (v12 == (id)7)
      goto LABEL_25;
    if (v12 == (id)8)
    {
      v11 = 7 * (v11 / 7);
LABEL_25:
      *(_QWORD *)(v8 + 96) = v9;
      *(_QWORD *)(v8 + 104) = v10;
      *(_QWORD *)(v8 + 72) = v11;
      v4 = sub_1BC2B443C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  else if (objc_msgSend(v6, sel_scheduleType) == (id)8)
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v14 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v8 + 16) = xmmword_1BC2B92C0;
    v10 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 32) = v5;
    v11 = CycleData.calculateTotalPauseDays()();
    v15 = objc_msgSend(v6, sel_scheduleType);
    if (v15 == (id)7)
      goto LABEL_25;
    if (v15 == (id)8)
    {
      v11 /= 7;
      goto LABEL_25;
    }
  }
  else
  {
    sub_1BC20C390((uint64_t)v0, (uint64_t)v3);
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_1BC2B51BC();
    sub_1BC2B44FC();
    v17 = objc_msgSend(*v3, sel_scheduleType);
    sub_1BC2B539C();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
  }
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

uint64_t sub_1BC20BBE8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t IntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1BC2B39E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CycleData();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((char *)objc_msgSend(a1, sel_scheduleType) - 7 > (char *)1)
  {
    sub_1BC2B39A4();
    v20 = sub_1BC2B39D4();
    v21 = sub_1BC2B48C8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v28 = a3;
      v23 = v22;
      *(_WORD *)v22 = 0;
      v24 = v23;
      a3 = v28;
      MEMORY[0x1BCCEF3A0](v24, -1, -1);
    }

    v25 = sub_1BC2B2594();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a2, v25);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = 1;
  }
  else
  {
    *v13 = a1;
    v14 = (char *)v13 + *(int *)(v10 + 24);
    v15 = sub_1BC2B2594();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
    v17 = a1;
    v13[1] = _s19HealthMedicationsUI9CycleDataV22calculateTakeIntervals8scheduleSaySo028HKMedicationScheduleIntervalE0CGSo0jK0C_tFZ_0(v17);
    IntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0 = _s19HealthMedicationsUI9CycleDataV26calculateLastIntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0(v17);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a2, v15);
    *(_QWORD *)((char *)v13 + *(int *)(v10 + 28)) = IntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0;
    sub_1BC185B10((uint64_t)v13, a3);
    v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v19, 1, v10);
}

Swift::Int __swiftcall CycleData.calculateTotalActiveDays()()
{
  id *v0;
  Swift::Int result;
  unint64_t v2;
  Swift::Int v3;
  char *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  BOOL v16;
  unint64_t v17;
  id v18;
  Swift::Int v19;

  result = type metadata accessor for CycleData();
  v2 = *(unint64_t *)((char *)v0 + *(int *)(result + 28));
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_29;
  v3 = 0;
  if (!v2)
    return v3;
  v4 = 0;
  v17 = *(unint64_t *)((char *)v0 + *(int *)(result + 28));
  v18 = *v0;
  while (v4 != (char *)v2)
  {
    v5 = objc_msgSend(v18, sel_timeIntervals);
    sub_1BC1390BC();
    v6 = sub_1BC2B458C();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1BC2B52D0();
      if (v7)
      {
LABEL_7:
        v19 = v3;
        v8 = 4;
        while (1)
        {
          if ((v6 & 0xC000000000000001) != 0)
            result = MEMORY[0x1BCCEE950](v8 - 4, v6);
          else
            result = (Swift::Int)*(id *)(v6 + 8 * v8);
          v9 = (void *)result;
          v10 = v8 - 3;
          if (__OFADD__(v8 - 4, 1))
          {
            __break(1u);
            goto LABEL_27;
          }
          v11 = objc_msgSend((id)result, sel_cycleIndex);
          if (v11)
          {
            v12 = v11;
            v13 = (char *)objc_msgSend(v11, sel_integerValue);

            if (v13 == v4)
              break;
          }

          ++v8;
          if (v10 == v7)
          {
            result = swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease_n();
        v14 = objc_msgSend(v9, sel_cycleIntervalDays);

        if (v14)
        {
          v15 = objc_msgSend(v14, sel_integerValue);

          goto LABEL_19;
        }
LABEL_18:
        v15 = 0;
LABEL_19:
        v2 = v17;
        v3 = (Swift::Int)v15 + v19;
        if (__OFADD__(v19, v15))
          goto LABEL_28;
        goto LABEL_24;
      }
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
        goto LABEL_7;
    }
    result = swift_bridgeObjectRelease_n();
    v16 = __OFADD__(v3, v7);
    v3 += v7;
    if (v16)
      goto LABEL_28;
LABEL_24:
    if (++v4 == (char *)v2)
      return v3;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

Swift::Int __swiftcall CycleData.calculateTotalPauseDays()()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  Swift::Int result;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)*v0;
  v6 = objc_msgSend(*v0, sel_timeIntervals);
  sub_1BC1390BC();
  v7 = sub_1BC2B458C();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    v10 = objc_msgSend((id)v5, sel_timeIntervals);
    v5 = sub_1BC2B458C();

    if ((v5 & 0xC000000000000001) == 0)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v12 = *(id *)(v5 + 8 * v9 + 32);
        goto LABEL_8;
      }
      __break(1u);
      return result;
    }
  }
  v12 = (id)MEMORY[0x1BCCEE950](v8 - 1, v5);
LABEL_8:
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v13, sel_cycleIntervalDays);

  if (v14)
  {
    v15 = objc_msgSend(v14, sel_integerValue);

    return (Swift::Int)v15;
  }
  else
  {
    sub_1BC2B39A4();
    v16 = sub_1BC2B39D4();
    v17 = sub_1BC2B48C8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1BC0DC000, v16, v17, "Failed to get the cycle Interval days for the last time interval on the schedule during CycleData calculation.", v18, 2u);
      MEMORY[0x1BCCEF3A0](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
}

id CycleData.takePhaseLength.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC20C284(CycleData.calculateTotalActiveDays(), a1);
}

id CycleData.pausePhaseLength.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC20C284(CycleData.calculateTotalPauseDays(), a1);
}

id sub_1BC20C284@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  id *v2;
  uint64_t v4;
  id result;
  char v6;

  v4 = a1();
  result = objc_msgSend(*v2, sel_scheduleType);
  if (result == (id)7)
  {
    v6 = 1;
LABEL_5:
    *(_QWORD *)a2 = v4;
    *(_BYTE *)(a2 + 8) = v6;
    return result;
  }
  if (result == (id)8)
  {
    v6 = 0;
    v4 /= 7;
    goto LABEL_5;
  }
  result = (id)sub_1BC2B52B8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CycleData()
{
  uint64_t result;

  result = qword_1EF3FFB68;
  if (!qword_1EF3FFB68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC20C390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CycleData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t _s19HealthMedicationsUI9CycleDataV22calculateTakeIntervals8scheduleSaySo028HKMedicationScheduleIntervalE0CGSo0jK0C_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t result;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v34 - v7;
  v8 = objc_msgSend(a1, sel_scheduleType);
  v9 = objc_msgSend(a1, sel_timeIntervals);
  sub_1BC1390BC();
  v10 = sub_1BC2B458C();

  v11 = v10 >> 62;
  if (v8 == (id)7)
  {
    v34 = v3;
    v35 = v2;
    if (v11)
      goto LABEL_25;
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v12; v12 = sub_1BC2B52D0())
    {
      v13 = 4;
      while (1)
      {
        v14 = (v10 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1BCCEE950](v13 - 4, v10)
            : *(id *)(v10 + 8 * v13);
        v15 = v14;
        v16 = v13 - 3;
        if (__OFADD__(v13 - 4, 1))
          break;
        v17 = objc_msgSend(v14, sel_dose);
        if (!v17 || (v18 = v17, v19 = objc_msgSend(v17, sel_integerValue), v18, v19))
        {
          swift_bridgeObjectRelease_n();
          sub_1BC0E7940();
          v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_1BC2B7770;
          *(_QWORD *)(v30 + 32) = v15;
          v37 = v30;
          sub_1BC2B45A4();
          return v37;
        }

        ++v13;
        if (v16 == v12)
          goto LABEL_12;
      }
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
    v20 = v36;
    sub_1BC2B39A4();
    v21 = sub_1BC2B39D4();
    v22 = sub_1BC2B48C8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      MEMORY[0x1BCCEF3A0](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v35);
    return MEMORY[0x1E0DEE9D8];
  }
  if (!v11)
  {
    v24 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_17;
LABEL_28:
    swift_bridgeObjectRelease();
    sub_1BC2B39A4();
    v31 = sub_1BC2B39D4();
    v32 = sub_1BC2B48C8();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      MEMORY[0x1BCCEF3A0](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v24 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_28;
LABEL_17:
  result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v26 = (id)MEMORY[0x1BCCEE950](result, v10);
    goto LABEL_22;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v26 = *(id *)(v10 + 8 * result + 32);
LABEL_22:
    v27 = v26;
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(a1, sel_timeIntervals);
    sub_1BC2B458C();

    v37 = (uint64_t)v27;
    sub_1BC20CEF0();
    v29 = sub_1BC2B45B0();

    swift_bridgeObjectRelease();
    return v29;
  }
  __break(1u);
  return result;
}

unint64_t _s19HealthMedicationsUI9CycleDataV26calculateLastIntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;
  id v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_timeIntervals);
  sub_1BC1390BC();
  v7 = sub_1BC2B458C();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      result = v8 - 1;
      if (__OFSUB__(v8, 1))
      {
        __break(1u);
      }
      else if ((v7 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v10 = *(id *)(v7 + 8 * result + 32);
          goto LABEL_8;
        }
        __break(1u);
        return result;
      }
      v10 = (id)MEMORY[0x1BCCEE950](result, v7);
LABEL_8:
      v11 = v10;
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v11, sel_cycleIndex);

      if (v12)
      {
        v13 = objc_msgSend(v12, sel_integerValue);

        return (unint64_t)v13;
      }
      goto LABEL_12;
    }
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
LABEL_12:
  sub_1BC2B39A4();
  v14 = sub_1BC2B39D4();
  v15 = sub_1BC2B48C8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    MEMORY[0x1BCCEF3A0](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

ValueMetadata *type metadata accessor for CyclePhase()
{
  return &type metadata for CyclePhase;
}

char *initializeBufferWithCopyOfBuffer for CycleData(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BC2B2594();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)&v7[*(int *)(a3 + 28)] = *(char **)((char *)a2 + *(int *)(a3 + 28));
  }
  return v7;
}

uint64_t destroy for CycleData(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_1BC2B2594();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for CycleData(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC2B2594();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithCopy for CycleData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BC2B2594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *initializeWithTake for CycleData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B2594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for CycleData(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B2594();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for CycleData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC20CD64(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B2594();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CycleData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BC20CDEC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC2B2594();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC20CE60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2594();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BC20CEF0()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EF3FFBA8;
  if (!qword_1EF3FFBA8)
  {
    v1 = sub_1BC1390BC();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, &qword_1EF3FFBA8);
  }
  return result;
}

uint64_t sub_1BC20CF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1BC0E519C(&qword_1EF3FFBE0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
    result = sub_1BC2B47E4();
    v1 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
LABEL_8:
  if (v5)
  {
    v10 = (v5 - 1) & v5;
    v11 = __clz(__rbit64(v5)) | (v4 << 6);
    v12 = v4;
    goto LABEL_29;
  }
  v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v9)
    {
      v15 = *(_QWORD *)(v17 + 8 * v14);
      v12 = v4 + 1;
      if (v15)
        goto LABEL_28;
      v12 = v4 + 2;
      if (v4 + 2 < v9)
      {
        v15 = *(_QWORD *)(v17 + 8 * v12);
        if (v15)
          goto LABEL_28;
        v12 = v4 + 3;
        if (v4 + 3 < v9)
        {
          v15 = *(_QWORD *)(v17 + 8 * v12);
          if (v15)
            goto LABEL_28;
          v12 = v4 + 4;
          if (v4 + 4 < v9)
          {
            v15 = *(_QWORD *)(v17 + 8 * v12);
            if (v15)
              goto LABEL_28;
            v12 = v4 + 5;
            if (v4 + 5 < v9)
            {
              v15 = *(_QWORD *)(v17 + 8 * v12);
              if (!v15)
              {
                v16 = v4 + 6;
                while (v9 != v16)
                {
                  v15 = *(_QWORD *)(v17 + 8 * v16++);
                  if (v15)
                  {
                    v12 = v16 - 1;
                    goto LABEL_28;
                  }
                }
                goto LABEL_33;
              }
LABEL_28:
              v10 = (v15 - 1) & v15;
              v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
              v13 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
              swift_retain();
              if (v13)
              {
                do
                {
                  if (*(_QWORD *)(v13 + 48) == 5)
                    break;
                  result = swift_release();
                  v4 = v12;
                  v5 = v10;
                  if ((v1 & 0x8000000000000000) == 0)
                    goto LABEL_8;
LABEL_10:
                  if (!sub_1BC2B512C())
                    goto LABEL_33;
                  type metadata accessor for MedicationsDoseLogViewModel(0);
                  swift_unknownObjectRetain();
                  swift_dynamicCast();
                  v13 = v23;
                  swift_unknownObjectRelease();
                  v12 = v4;
                  v10 = v5;
                }
                while (v23);
              }
              goto LABEL_34;
            }
          }
        }
      }
    }
LABEL_33:
    v13 = 0;
LABEL_34:
    sub_1BC1061A8();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t MedicationsLogViewController.__allocating_init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(_QWORD *a1, uint64_t a2, void *a3, int a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  objc_class *v8;
  char v15;
  char v16;
  id v17;

  v15 = a6 & 1;
  v16 = a8 & 1;
  v17 = objc_allocWithZone(v8);
  return MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(a1, a2, a3, a4, a5, v15, a7, v16);
}

uint64_t sub_1BC20D26C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  _QWORD v43[4];
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v48 = sub_1BC2B23F0();
  v50 = *(_QWORD *)(v48 - 8);
  v2 = MEMORY[0x1E0C80A78](v48);
  v49 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v47 = (char *)v43 - v4;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1BC0E519C(&qword_1EF3FFBE0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
    result = sub_1BC2B47E4();
    a1 = v55;
    v46 = v56;
    v7 = v57;
    v6 = v58;
    v8 = v59;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 56);
    v46 = a1 + 56;
    v7 = ~v9;
    v11 = -v9;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v8 = v12 & v10;
    result = swift_bridgeObjectRetain();
    v6 = 0;
  }
  v43[3] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v43[1] = v7;
  v44 = (unint64_t)(v7 + 64) >> 6;
  v43[2] = MEMORY[0x1E0DEE9B0] + 8;
  v13 = v49;
  while (1)
  {
    v17 = v8;
    v18 = v6;
    if (a1 < 0)
    {
      v21 = sub_1BC2B512C();
      if (!v21)
        goto LABEL_41;
      v53 = v21;
      type metadata accessor for MedicationsDoseLogViewModel(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v22 = v54;
      swift_unknownObjectRelease();
      v19 = v8;
      if (!v22)
        goto LABEL_41;
      goto LABEL_33;
    }
    if (!v8)
      break;
    v19 = (v8 - 1) & v8;
    v20 = __clz(__rbit64(v8)) | (v6 << 6);
LABEL_32:
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v20);
    swift_retain();
    if (!v22)
      goto LABEL_41;
LABEL_33:
    v26 = *(void **)(v22 + 24);
    if (v26)
    {
      v52 = v19;
      v27 = v26;
      if (objc_msgSend(v27, sel_status) != *(id *)(v22 + 48)
        || (v28 = objc_msgSend(v27, sel_doseQuantity)) == 0
        || (v29 = v28, objc_msgSend(v28, sel_doubleValue), v31 = v30, v29, v31 != *(double *)(v22 + 40)))
      {
        swift_release();

LABEL_40:
        v42 = 0;
        goto LABEL_42;
      }
      v45 = v17;
      v32 = objc_msgSend(v27, sel_startDate);
      v51 = v6;
      v33 = v47;
      sub_1BC2B23A8();

      v34 = v22 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      v35 = a1;
      v36 = v50;
      v37 = v34;
      v38 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v13, v37, v48);
      sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v39 = sub_1BC2B4424();

      v40 = *(void (**)(char *, uint64_t))(v36 + 8);
      a1 = v35;
      v40(v13, v38);
      v41 = v33;
      v6 = v51;
      v40(v41, v38);
      result = swift_release();
      v8 = v52;
      if ((v39 & 1) == 0)
      {
        v42 = 0;
        goto LABEL_42;
      }
    }
    else
    {
      v14 = *(_QWORD *)(v22 + 48);
      v15 = *(_QWORD *)(v22 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
      result = swift_release();
      v16 = v14 == v15;
      v8 = v19;
      if (!v16)
        goto LABEL_40;
    }
  }
  v23 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v23 >= v44)
      goto LABEL_41;
    v24 = *(_QWORD *)(v46 + 8 * v23);
    ++v6;
    if (!v24)
    {
      v6 = v18 + 2;
      if (v18 + 2 >= v44)
        goto LABEL_41;
      v24 = *(_QWORD *)(v46 + 8 * v6);
      if (!v24)
      {
        v6 = v18 + 3;
        if (v18 + 3 >= v44)
          goto LABEL_41;
        v24 = *(_QWORD *)(v46 + 8 * v6);
        if (!v24)
        {
          v6 = v18 + 4;
          if (v18 + 4 >= v44)
            goto LABEL_41;
          v24 = *(_QWORD *)(v46 + 8 * v6);
          if (!v24)
          {
            v6 = v18 + 5;
            if (v18 + 5 >= v44)
              goto LABEL_41;
            v24 = *(_QWORD *)(v46 + 8 * v6);
            if (!v24)
            {
              v25 = v18 + 6;
              while (v44 != v25)
              {
                v24 = *(_QWORD *)(v46 + 8 * v25++);
                if (v24)
                {
                  v6 = v25 - 1;
                  goto LABEL_31;
                }
              }
LABEL_41:
              v42 = 1;
LABEL_42:
              sub_1BC1061A8();
              return v42;
            }
          }
        }
      }
    }
LABEL_31:
    v19 = (v24 - 1) & v24;
    v20 = __clz(__rbit64(v24)) + (v6 << 6);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(_QWORD *a1, uint64_t a2, void *a3, int a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  char *v8;
  char *v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int *v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  void (*v82)(void);
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t *v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  unint64_t v134;
  char *v135;

  v9 = v8;
  v126 = a4;
  v17 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v125 = (uint64_t)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v124 = (uint64_t)&v118 - v20;
  v21 = sub_1BC2B23F0();
  v22 = *(_QWORD *)(v21 - 8);
  v133 = (_QWORD *)v21;
  v134 = v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  result = MEMORY[0x1E0C80A78](v23);
  v135 = (char *)&v118 - v26;
  *(_QWORD *)&v9[qword_1EDA0F8B8] = MEMORY[0x1E0DEE9E8];
  v27 = &v9[qword_1EDA0F8F0];
  *(int64x2_t *)v27 = vdupq_n_s64(0x4040000000000000uLL);
  *((_OWORD *)v27 + 1) = xmmword_1BC2C2E80;
  *(_QWORD *)&v9[qword_1EDA0F8D8] = 0x4049000000000000;
  v28 = &unk_1EDA0F000;
  v128 = qword_1EDA0F898;
  *(_QWORD *)&v9[qword_1EDA0F898] = 0;
  v131 = qword_1EDA0F888;
  *(_QWORD *)&v9[qword_1EDA0F888] = 0;
  v29 = qword_1EDA0F8E8;
  *(_QWORD *)&v9[qword_1EDA0F8E8] = 0;
  v30 = qword_1EDA0F8C0;
  *(_QWORD *)&v9[qword_1EDA0F8C0] = 0;
  *(_QWORD *)&v9[qword_1EDA0F900] = 0;
  *(_QWORD *)&v9[qword_1EDA0F8F8] = 0;
  *(_QWORD *)&v9[qword_1EDA0F8B0] = 0;
  *(_QWORD *)&v9[qword_1EDA0F8A8] = 0;
  *(_QWORD *)&v9[qword_1EDA0F890] = a1;
  *(_QWORD *)&v9[qword_1EDA0F8A0] = a2;
  if ((a6 & 1) != 0)
  {
    __break(1u);
    goto LABEL_62;
  }
  v120 = v29;
  v121 = v30;
  v122 = (int *)v17;
  v123 = v25;
  *(_QWORD *)&v9[qword_1EDA0F8C8] = a5;
  if ((a8 & 1) != 0)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  *(_QWORD *)&v9[qword_1EDA0F908] = a7;
  sub_1BC2B3500();
  swift_allocObject();
  swift_retain();
  v31 = v9;
  swift_retain();
  *(_QWORD *)&v31[qword_1EDA0F8E0] = sub_1BC2B34F4();
  *(_QWORD *)&v31[qword_1EDA0F8D0] = a3;
  v129 = a2;
  v130 = a3;
  v32 = v133;
  v132 = a1;
  if (a1)
  {
    v33 = a1[2];
    if (v33 >> 62)
    {
      v57 = a3;
      swift_bridgeObjectRetain();
      v58 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      v36 = (unint64_t)v135;
      if (v58)
      {
LABEL_6:
        sub_1BC2B23E4();
        if (!a2)
        {
          v37 = 0;
          v38 = 0;
          v127 = 0;
          goto LABEL_25;
        }
LABEL_13:
        v41 = *(_QWORD *)(a2 + 16);
        if (v41 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          v37 = sub_1BC2B52D0();
          swift_bridgeObjectRelease();
          if (v37)
            goto LABEL_15;
        }
        else
        {
          v37 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          if (v37)
          {
LABEL_15:
            v119 = v31;
            v42 = *(_QWORD *)(a2 + 16);
            v43 = qword_1EDA0FEE8;
            swift_bridgeObjectRetain();
            v44 = a2;
            if (v43 != -1)
              swift_once();
            v45 = (id)qword_1EDA0FEF8;
            swift_bridgeObjectRetain();
            v46 = sub_1BC2B2144();
            v48 = v47;
            swift_bridgeObjectRelease();

            type metadata accessor for MedicationsLogDataSource();
            swift_allocObject();
            v49 = sub_1BC2536D4(v42, v46, v48, 0, 0);
            *(_QWORD *)&v9[v128] = v49;
            swift_release();
            v50 = (id)qword_1EDA0FEF8;
            swift_bridgeObjectRetain();
            v38 = sub_1BC2B2144();
            v37 = v51;
            swift_bridgeObjectRelease();

            v52 = *(_QWORD *)(v44 + 16);
            v53 = v44;
            if (v52 >> 62)
            {
              swift_bridgeObjectRetain();
              v53 = v44;
              v127 = sub_1BC2B52D0();
              swift_bridgeObjectRelease();
            }
            else
            {
              v127 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v54 = v133;
            v55 = v134;
            v36 = (unint64_t)v135;
            (*(void (**)(char *, _QWORD *))(v134 + 8))(v135, v133);
            v28 = *(_QWORD **)(v53 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
            v56 = *(_QWORD *)(v53 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title + 8);
            v32 = v54;
            (*(void (**)(unint64_t, uint64_t, _QWORD *))(v55 + 16))(v36, v53 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v54);
            swift_bridgeObjectRetain();
            v31 = v119;
            a1 = v132;
LABEL_24:
            swift_release();
            if (!a1)
            {
              swift_bridgeObjectRelease();
              v63 = v134;
              v64 = v32;
              v65 = v127;
              if ((v126 & 1) != 0)
                goto LABEL_29;
              goto LABEL_35;
            }
LABEL_25:
            swift_retain();
            swift_bridgeObjectRelease();
            type metadata accessor for MedicationsLogDataSource();
            swift_allocObject();
            v59 = swift_bridgeObjectRetain();
            v60 = sub_1BC2536D4(v59, v38, v37, 0, 0);
            *(_QWORD *)&v9[v131] = v60;
            swift_release();
            v61 = a1[2];
            if (v61 >> 62)
            {
              swift_bridgeObjectRetain();
              v62 = sub_1BC2B52D0();
              swift_bridgeObjectRelease();
            }
            else
            {
              v62 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v63 = v134;
            v64 = v32;
            (*(void (**)(unint64_t, _QWORD *))(v134 + 8))(v36, v32);
            v65 = v127 + v62;
            if (__OFADD__(v127, v62))
            {
              __break(1u);
              goto LABEL_48;
            }
            v28 = *(_QWORD **)((char *)a1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
            v56 = *(_QWORD *)((char *)a1
                            + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title
                            + 8);
            (*(void (**)(unint64_t, uint64_t, _QWORD *))(v63 + 16))(v36, (uint64_t)a1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v64);
            swift_bridgeObjectRetain();
            swift_release();
            if ((v126 & 1) != 0)
            {
LABEL_29:
              v66 = v122;
              v67 = v36;
              v68 = v124;
              (*(void (**)(uint64_t, unint64_t, _QWORD *))(v63 + 16))(v124 + v122[7], v67, v64);
              sub_1BC2B242C();
              v69 = (_QWORD *)(v68 + v66[5]);
              v70 = unk_1EF3F9BC8;
              *v69 = qword_1EF3F9BC0;
              v69[1] = v70;
              v71 = (_QWORD *)(v68 + v66[6]);
              *v71 = v28;
              v71[1] = v56;
              *(_QWORD *)(v68 + v66[8]) = v65;
              type metadata accessor for MedicationDoseRecordAllViewModel(0);
              v72 = swift_allocObject();
              *(_WORD *)(v72 + 16) = 1;
              swift_bridgeObjectRetain();
              sub_1BC2B23E4();
              v73 = v121;
              *(_QWORD *)&v9[v121] = v72;
              result = swift_release();
              if (*(_QWORD *)&v9[v73])
              {
                v74 = v125;
                sub_1BC10DB28(v68, v125);
                type metadata accessor for MedicationsRecordAllDataSource(0);
                swift_allocObject();
                v75 = swift_retain();
                v76 = sub_1BC201098(v75, v74, 0, 0);
                swift_release();
                v77 = v120;
                *(_QWORD *)&v9[v120] = v76;
                result = swift_release();
                v78 = *(_QWORD *)&v9[v77];
                v28 = (_QWORD *)&unk_1EDA0F000;
                if (v78)
                {
                  swift_retain();
                  a1 = sub_1BC0FA658(0, 1, 1, MEMORY[0x1E0DEE9D8]);
                  v80 = a1[2];
                  v79 = a1[3];
                  if (v80 >= v79 >> 1)
                    a1 = sub_1BC0FA658((_QWORD *)(v79 > 1), v80 + 1, 1, a1);
                  a1[2] = v80 + 1;
                  v81 = &a1[2 * v80];
                  v81[4] = v78;
                  v81[5] = MEMORY[0x1E0D2B148];
                  sub_1BC0E8594(v124, type metadata accessor for MedicationsDoseLogHeaderItem);
                  goto LABEL_38;
                }
LABEL_64:
                __break(1u);
                return result;
              }
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
LABEL_35:
            v119 = v31;
            v82 = *(void (**)(void))(v63 + 16);
            v133 = v28;
            v83 = v63;
            v84 = v123;
            v82();
            type metadata accessor for MedicationsDoseLogHeaderDataSource(0);
            v85 = swift_allocObject();
            v86 = v122;
            v87 = v64;
            v88 = v125;
            ((void (*)(uint64_t, uint64_t, _QWORD *))v82)(v125 + v122[7], v84, v87);
            swift_retain();
            sub_1BC2B242C();
            v89 = (_QWORD *)(v88 + v86[5]);
            v90 = unk_1EF3F9BC8;
            *v89 = qword_1EF3F9BC0;
            v89[1] = v90;
            v91 = (_QWORD *)(v88 + v86[6]);
            *v91 = v133;
            v91[1] = v56;
            v92 = v86[8];
            v127 = v65;
            *(_QWORD *)(v88 + v92) = v65;
            v93 = v88;
            v64 = v87;
            sub_1BC0F1B94(v93, v85 + qword_1EF402580, type metadata accessor for MedicationsDoseLogHeaderItem);
            swift_bridgeObjectRetain();
            swift_release();
            sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            sub_1BC2B2BC4();
            *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
            v94 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            sub_1BC2B2B94();
            v95 = sub_1BC2B2F18();
            (*(void (**)(uint64_t, _QWORD *))(v83 + 8))(v123, v87);
            swift_retain();
            a1 = sub_1BC0FA658(0, 1, 1, v94);
            v97 = a1[2];
            v96 = a1[3];
            if (v97 >= v96 >> 1)
              a1 = sub_1BC0FA658((_QWORD *)(v96 > 1), v97 + 1, 1, a1);
            v28 = (_QWORD *)&unk_1EDA0F000;
            a1[2] = v97 + 1;
            v98 = &a1[2 * v97];
            v98[4] = v95;
            v98[5] = MEMORY[0x1E0D2B148];
            swift_release();
            v63 = v134;
            v31 = v119;
            v65 = v127;
LABEL_38:
            v61 = *(_QWORD *)&v9[v128];
            if (!v61)
            {
LABEL_41:
              v100 = *(_QWORD *)&v9[v131];
              if (v100)
              {
                v101 = a1[2];
                v102 = a1[3];
                swift_retain_n();
                if (v101 >= v102 >> 1)
                  a1 = sub_1BC0FA658((_QWORD *)(v102 > 1), v101 + 1, 1, a1);
                a1[2] = v101 + 1;
                v103 = &a1[2 * v101];
                v103[4] = v100;
                v103[5] = MEMORY[0x1E0D2B148];
                swift_release();
              }
              (*(void (**)(char *, _QWORD *))(v63 + 8))(v135, v64);
              goto LABEL_51;
            }
            v36 = a1[2];
            v63 = a1[3];
            v62 = v36 + 1;
            swift_retain_n();
            if (v36 < v63 >> 1)
            {
LABEL_40:
              v63 = v134;
              a1[2] = v62;
              v99 = &a1[2 * v36];
              v99[4] = v61;
              v99[5] = MEMORY[0x1E0D2B148];
              swift_release();
              goto LABEL_41;
            }
LABEL_48:
            a1 = sub_1BC0FA658((_QWORD *)(v63 > 1), v62, 1, a1);
            goto LABEL_40;
          }
        }
        v127 = 0;
        v38 = 0;
        v28 = 0;
        v56 = 0xE000000000000000;
        goto LABEL_24;
      }
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      v35 = a3;
      v36 = (unint64_t)v135;
      if (v34)
        goto LABEL_6;
    }
  }
  else
  {
    v39 = a3;
    v36 = (unint64_t)v135;
  }
  if (a2)
  {
    v40 = *(_QWORD *)(a2 + 16);
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      v104 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v104)
        goto LABEL_12;
    }
    else if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_12:
      sub_1BC2B23E4();
      goto LABEL_13;
    }
  }
  v65 = 0;
LABEL_51:
  *(_QWORD *)&v31[qword_1EDA0F910] = v65;

  sub_1BC2B2DEC();
  swift_allocObject();
  sub_1BC2B2E04();
  v105 = (char *)sub_1BC2B2FE4();
  v106 = v105;
  v107 = *(_QWORD *)&v105[qword_1EDA0F8E8];
  if (v107)
  {
    *(_QWORD *)(v107 + qword_1EDA11D98 + 8) = &off_1E74B8718;
    swift_unknownObjectWeakAssign();
    v108 = v106;
    swift_retain();
    sub_1BC200AE4();
    swift_release();

  }
  else
  {
    v109 = v105;
  }
  v110 = *(uint64_t **)&v106[v28[275]];
  if (v110)
  {
    *(uint64_t *)((char *)v110 + qword_1EDA0F7F8 + 8) = (uint64_t)&off_1E74B8718;
    swift_unknownObjectWeakAssign();
    v111 = v106;
    swift_retain();
    v112 = swift_bridgeObjectRetain();
    v113 = sub_1BC218148(v112, v110);
    swift_bridgeObjectRelease();
    sub_1BC0F7E5C(v113);
    swift_bridgeObjectRelease();
    sub_1BC2B2C24();
    swift_release();

    swift_bridgeObjectRelease();
  }
  v114 = *(uint64_t **)&v106[qword_1EDA0F888];
  if (v114)
  {
    *(uint64_t *)((char *)v114 + qword_1EDA0F7F8 + 8) = (uint64_t)&off_1E74B8718;
    swift_unknownObjectWeakAssign();
    v115 = v106;
    swift_retain();
    v116 = swift_bridgeObjectRetain();
    v117 = sub_1BC218148(v116, v114);
    swift_bridgeObjectRelease();
    sub_1BC0F7E5C(v117);
    swift_bridgeObjectRelease();
    sub_1BC2B2C24();
    swift_release();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_release();
    swift_release();

  }
  return (uint64_t)v106;
}

id sub_1BC20E4E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EDA0F8F8;
  v2 = *(void **)(v0 + qword_1EDA0F8F8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EDA0F8F8);
  }
  else
  {
    v4 = sub_1BC20E540();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC20E540()
{
  id v0;
  id v1;
  void *v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_forState_, v2, 0, 0xE000000000000000);

  return v0;
}

id sub_1BC20E664()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = qword_1EDA0F8B0;
  v2 = *(void **)(v0 + qword_1EDA0F8B0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EDA0F8B0);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 7);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v4);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC20E710()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EDA0F8A8;
  v2 = *(void **)(v0 + qword_1EDA0F8A8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EDA0F8A8);
  }
  else
  {
    v4 = sub_1BC20E770();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC20E770()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  v2 = sub_1BC20E664();
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v3 = sub_1BC20E664();
  objc_msgSend(v0, sel_addSubview_, v3);

  v4 = sub_1BC20E664();
  objc_msgSend(v4, sel_hk_alignConstraintsWithView_insets_, v0, *MEMORY[0x1E0DC3298], *(double *)(MEMORY[0x1E0DC3298] + 8), *(double *)(MEMORY[0x1E0DC3298] + 16), *(double *)(MEMORY[0x1E0DC3298] + 24));

  v5 = sub_1BC20E4E4();
  objc_msgSend(v0, sel_addSubview_, v5);

  v6 = sub_1BC20E4E4();
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v7 = sub_1BC20E4E4();
  v8 = objc_msgSend(v7, sel_leftAnchor);

  v9 = objc_msgSend(v0, sel_leftAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, 32.0);

  objc_msgSend(v10, sel_setActive_, 1);
  v11 = sub_1BC20E4E4();
  v12 = objc_msgSend(v11, sel_rightAnchor);

  v13 = objc_msgSend(v0, sel_rightAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -32.0);

  objc_msgSend(v14, sel_setActive_, 1);
  v15 = sub_1BC20E4E4();
  v16 = objc_msgSend(v15, sel_topAnchor);

  v17 = objc_msgSend(v0, sel_topAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 32.0);

  objc_msgSend(v18, sel_setActive_, 1);
  v19 = sub_1BC20E4E4();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = objc_msgSend(v0, sel_bottomAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, -48.0);

  objc_msgSend(v22, sel_setActive_, 1);
  v23 = sub_1BC20E4E4();
  v24 = objc_msgSend(v23, sel_heightAnchor);

  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 50.0);
  objc_msgSend(v25, sel_setActive_, 1);

  return v0;
}

void sub_1BC20EB0C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double MinY;
  id v22;
  void *v23;
  double v24;
  double v25;
  id v26;
  double v27;
  id v29;
  CGRect v30;

  v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = v1;
  v3 = sub_1BC20E710();
  objc_msgSend(v3, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v12 = sub_1BC20E710();
  objc_msgSend(v2, sel_convertRect_fromCoordinateSpace_, v12, v5, v7, v9, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v30.origin.x = v14;
  v30.origin.y = v16;
  v30.size.width = v18;
  v30.size.height = v20;
  MinY = CGRectGetMinY(v30);
  v22 = objc_msgSend(v0, sel_collectionView);
  if (!v22)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v23 = v22;
  objc_msgSend(v22, sel_contentSize);
  v25 = v24;

  v26 = sub_1BC20E664();
  v29 = v26;
  v27 = 0.0;
  if (MinY < v25 && v25 > 0.0)
    v27 = 1.0;
  objc_msgSend(v26, sel_setAlpha_, v27);

}

void sub_1BC20EC4C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;

  v1 = sub_1BC20E4E4();
  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_didTapDone, 64);

  v2 = sub_1BC20E4E4();
  objc_msgSend(v2, sel_setEnabled_, 0);

  v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = sub_1BC20E710();
  objc_msgSend(v4, sel_addSubview_, v5);

  v6 = sub_1BC20E710();
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v7 = sub_1BC20E710();
  v8 = objc_msgSend(v7, sel_leftAnchor);

  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_leftAnchor);

  v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  objc_msgSend(v12, sel_setActive_, 1);

  v13 = sub_1BC20E710();
  v14 = objc_msgSend(v13, sel_rightAnchor);

  v15 = objc_msgSend(v0, sel_view);
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, sel_rightAnchor);

  v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);
  objc_msgSend(v18, sel_setActive_, 1);

  v19 = sub_1BC20E710();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = objc_msgSend(v0, sel_view);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, sel_bottomAnchor);

    v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);
    objc_msgSend(v24, sel_setActive_, 1);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1BC20EEF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC2184D4();
}

void sub_1BC20EF14()
{
  void *v0;
  void (*v1)(void);
  id v2;

  sub_1BC2B3020();
  v1 = (void (*)(void))sub_1BC2B302C();
  v1();
  v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    type metadata accessor for MedicationDoseLogHeaderView();
    sub_1BC0E519C(&qword_1EDA0F9E8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseLogHeaderView, (uint64_t)&unk_1BC2BA8D0);
    sub_1BC2B4994();

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC20EFB0(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLayoutSubviews);
  sub_1BC20EB0C();

}

void sub_1BC20F008()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  sub_1BC20EC4C();
  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_contentInset);
    v4 = v3;
    v6 = v5;
    v8 = v7;

    v9 = objc_msgSend(v0, sel_collectionView);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_setContentInset_, v4, v6, 130.0, v8);

      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel);
      v12 = objc_msgSend(v0, sel_navigationItem);
      objc_msgSend(v12, sel_setRightBarButtonItem_, v11);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC20F14C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC20F008();

}

uint64_t sub_1BC20F180()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_1BC2B4658();
  v0[3] = sub_1BC2B464C();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_1BC20F1E4;
  return sub_1BC2118B4();
}

uint64_t sub_1BC20F1E4()
{
  swift_task_dealloc();
  sub_1BC2B461C();
  return swift_task_switch();
}

uint64_t sub_1BC20F254()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC20F284(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - v3;
  v5 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1BC2B4658();
  v6 = a1;
  v7 = sub_1BC2B464C();
  v8 = (_QWORD *)swift_allocObject();
  v9 = MEMORY[0x1E0DF06E8];
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = v6;
  sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF3FFBD8, (uint64_t)v8);
  swift_release();
  sub_1BC212A64(1);
  objc_msgSend(v6, sel_dismissViewControllerAnimated_completion_, 1, 0);

}

void sub_1BC20F39C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC212A64(4);
  objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);

}

void sub_1BC20F3F0(char a1, char a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  objc_super v14;

  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  objc_msgSendSuper2(&v14, sel_setEditing_animated_, a1 & 1, a2 & 1);
  v5 = objc_msgSend(v2, sel_collectionView);
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  objc_msgSend(v5, sel_setEditing_, a1 & 1);

  v7 = objc_msgSend(v2, sel_collectionView);
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v8 = v7;
  objc_msgSend(v7, sel_setAllowsSelection_, 1);

  v9 = objc_msgSend(v2, sel_collectionView);
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = v9;
  v11 = a1 & 1;
  objc_msgSend(v9, sel_setAllowsMultipleSelection_, v11);

  v12 = objc_msgSend(v2, sel_collectionView);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_setAllowsMultipleSelectionDuringEditing_, v11);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1BC20F528(void *a1, uint64_t a2, char a3, char a4)
{
  id v6;

  v6 = a1;
  sub_1BC20F3F0(a3, a4);

}

void sub_1BC20F570(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  __int128 v6[2];
  uint64_t v7;
  id v8;
  _QWORD v9[4];

  v2 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC2B25C4();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    v8 = v4;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF400110);
    sub_1BC0E7AD8(0, &qword_1EF3F9B08);
    v5 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC0F2730(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_0(v9, v9[3]);
      sub_1BC2B2B28();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1BC0E8594((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC148598);
    }
  }
}

uint64_t sub_1BC20F6C4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC20F570(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC20F774(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC20EB0C();

}

uint64_t sub_1BC20F7C0(uint64_t a1, int a2)
{
  char *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  id v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v77;
  char *v78;
  int v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  __int128 v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  v4 = v2;
  v85 = sub_1BC2B2438();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v83 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for MedicationDoseRecordAllItem(0);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v81 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v90 = (void (*)(char *, uint64_t))((char *)&v77 - v10);
  v11 = sub_1BC2B23F0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v78 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v77 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v77 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v77 - v19;
  v92 = &v2[qword_1EDA0F8B8];
  swift_beginAccess();
  swift_retain();
  *(_QWORD *)&v89 = a1;
  sub_1BC213EA8(&v94, a1);
  swift_endAccess();
  swift_release();
  v21 = &unk_1EDA0F000;
  v22 = (_QWORD *)&unk_1EDA0F000;
  v93 = v12;
  v79 = a2;
  if ((a2 & 1) != 0)
  {
    v23 = *(_QWORD *)&v4[qword_1EDA0F890];
    v87 = v4;
    if (!v23)
      goto LABEL_13;
    v12 = *(_QWORD *)(v23 + 16);
    v86 = v23;
    if (v12 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v24 = sub_1BC2B52D0();
      if (v24)
        goto LABEL_5;
    }
    else
    {
      v24 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v24)
      {
LABEL_5:
        if (v24 < 1)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        v3 = (void (*)(uint64_t, uint64_t, uint64_t))(v89
                                                            + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate);
        swift_beginAccess();
        v25 = 0;
        v26 = v93;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v27 = MEMORY[0x1BCCEE950](v25, v12);
          }
          else
          {
            v27 = *(_QWORD *)(v12 + 8 * v25 + 32);
            swift_retain();
          }
          ++v25;
          (*(void (**)(char *, _QWORD, uint64_t))(v26 + 16))(v20, v3, v11);
          v28 = v27 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v26 + 40))(v28, v20, v11);
          swift_endAccess();
          swift_beginAccess();
          swift_retain();
          sub_1BC213EA8(&v94, v27);
          swift_endAccess();
          swift_release();
          swift_release();
        }
        while (v24 != v25);
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    v4 = v87;
    v12 = v93;
    v22 = &unk_1EDA0F000;
    v21 = (_QWORD *)&unk_1EDA0F000;
LABEL_13:
    v29 = *(_QWORD *)&v4[v22[276]];
    if (!v29)
      goto LABEL_24;
    v12 = *(_QWORD *)(v29 + 16);
    v86 = *(_QWORD *)&v4[v22[276]];
    if (v12 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v30 = sub_1BC2B52D0();
      if (v30)
        goto LABEL_16;
    }
    else
    {
      v30 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v30)
      {
LABEL_16:
        if (v30 < 1)
        {
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        v3 = (void (*)(uint64_t, uint64_t, uint64_t))(v89
                                                            + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate);
        swift_beginAccess();
        v31 = 0;
        v32 = v93;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v33 = MEMORY[0x1BCCEE950](v31, v12);
          }
          else
          {
            v33 = *(_QWORD *)(v12 + 8 * v31 + 32);
            swift_retain();
          }
          ++v31;
          (*(void (**)(char *, _QWORD, uint64_t))(v32 + 16))(v20, v3, v11);
          v34 = v33 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v32 + 40))(v34, v20, v11);
          swift_endAccess();
          swift_beginAccess();
          swift_retain();
          sub_1BC213EA8(&v94, v33);
          swift_endAccess();
          swift_release();
          swift_release();
        }
        while (v30 != v31);
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    v4 = v87;
    v12 = v93;
    v22 = &unk_1EDA0F000;
    v21 = &unk_1EDA0F000;
  }
LABEL_24:
  sub_1BC2B23E4();
  v35 = *(_QWORD *)&v4[v21[274]];
  if (!v35)
    goto LABEL_56;
  v36 = *(_QWORD *)(v35 + 16);
  if (v36 >> 62)
    goto LABEL_46;
  v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
LABEL_27:
  v38 = (uint64_t)v90;
  v86 = v35;
  if (!v37)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v38, 1, 1, v11);
    goto LABEL_44;
  }
  if ((v36 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v39 = *(_QWORD *)(v36 + 32);
      swift_retain();
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_49;
  }
  v39 = MEMORY[0x1BCCEE950](0, v36);
LABEL_31:
  swift_bridgeObjectRelease();
  v40 = v39 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v3(v38, v40, v11);
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v38, 0, 1, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v38, 1, v11) != 1)
  {
    v41 = v91;
    v90 = *(void (**)(char *, uint64_t))(v12 + 8);
    v90(v91, v11);
    v42 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v88, v38, v11);
    v3((uint64_t)v41, v42, v11);
    v12 = *(_QWORD *)(v35 + 16);
    if (!(v12 >> 62))
    {
      v43 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v43)
      {
LABEL_34:
        v87 = v4;
        v4 = (char *)(v12 & 0xC000000000000001);
        v44 = 4;
        while (1)
        {
          v36 = v44 - 4;
          if (v4)
          {
            v35 = MEMORY[0x1BCCEE950](v44 - 4, v12);
            v22 = (_QWORD *)(v44 - 3);
            if (__OFADD__(v36, 1))
              goto LABEL_45;
          }
          else
          {
            v35 = *(_QWORD *)(v12 + 8 * v44);
            swift_retain();
            v22 = (_QWORD *)(v44 - 3);
            if (__OFADD__(v36, 1))
            {
LABEL_45:
              __break(1u);
LABEL_46:
              swift_retain();
              swift_bridgeObjectRetain();
              v37 = sub_1BC2B52D0();
              goto LABEL_27;
            }
          }
          v45 = v35 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          v3((uint64_t)v20, v45, v11);
          sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
          v46 = sub_1BC2B4424();
          swift_release();
          v90(v20, v11);
          if ((v46 & 1) != 0)
          {
            ++v44;
            if (v22 != (_QWORD *)v43)
              continue;
          }
          LOBYTE(v35) = v46 ^ 1;
          v4 = v87;
          goto LABEL_53;
        }
      }
      goto LABEL_52;
    }
LABEL_51:
    swift_bridgeObjectRetain();
    v43 = sub_1BC2B52D0();
    if (v43)
      goto LABEL_34;
LABEL_52:
    LOBYTE(v35) = 0;
LABEL_53:
    swift_bridgeObjectRelease();
    swift_release();
    v90(v88, v11);
    v12 = v93;
    v22 = (_QWORD *)&unk_1EDA0F000;
    goto LABEL_54;
  }
LABEL_44:
  swift_release();
  sub_1BC0F8D88(v38);
  LOBYTE(v35) = 0;
LABEL_54:
  v47 = *(uint64_t **)&v4[qword_1EDA0F888];
  if (v47)
  {
    *(uint64_t *)((char *)v47 + qword_1EDA0F800) = *(_QWORD *)(v86 + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    v48 = swift_bridgeObjectRetain();
    v49 = sub_1BC218148(v48, v47);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BC0F7E5C(v49);
    swift_bridgeObjectRelease();
    sub_1BC2B2C24();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_56:
  v50 = *(_QWORD *)&v4[v22[276]];
  if (v50)
  {
    v51 = *(uint64_t **)&v4[qword_1EDA0F898];
    if (v51)
    {
      *(uint64_t *)((char *)v51 + qword_1EDA0F800) = *(_QWORD *)(v50 + 16);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = v93;
      swift_retain();
      v52 = swift_bridgeObjectRetain();
      v53 = sub_1BC218148(v52, v51);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BC0F7E5C(v53);
      swift_bridgeObjectRelease();
      sub_1BC2B2C24();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  v90 = 0;
  if (*(_QWORD *)&v4[qword_1EDA0F8E8])
  {
    v54 = *(_QWORD *)&v4[qword_1EDA0F8C0];
    if (v54)
    {
      if ((v35 & 1) != *(_BYTE *)(v54 + 17))
      {
        v55 = ~(_BYTE)v79;
        *(_BYTE *)(v54 + 17) = v35 & ~(_BYTE)v79 & 1;
        if ((v55 & 1) != 0)
        {
          if ((v35 & 1) != 0)
          {
            swift_retain();
            swift_retain();
            v57 = v78;
            sub_1BC2B23E4();
LABEL_68:
            v58 = v54 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
            swift_beginAccess();
            (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v58, v57, v11);
            swift_endAccess();
            sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE60, type metadata accessor for MedicationDoseRecordAllItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v59 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
            v60 = swift_allocObject();
            v89 = xmmword_1BC2B92D0;
            *(_OWORD *)(v60 + 16) = xmmword_1BC2B92D0;
            v88 = (char *)(v60 + v59);
            swift_retain();
            v61 = v4;
            v62 = (uint64_t)v81;
            sub_1BC2B242C();
            v63 = v82;
            v64 = (uint64_t *)(v62 + *(int *)(v82 + 20));
            type metadata accessor for MedicationDoseRecordAllCell();
            sub_1BC0E519C(&qword_1EDA0F9F0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell, (uint64_t)&unk_1BC2C2890);
            *v64 = sub_1BC2B2930();
            v64[1] = v65;
            *(_QWORD *)(v62 + *(int *)(v63 + 28) + 8) = 0;
            v66 = swift_unknownObjectWeakInit();
            *(_QWORD *)(v62 + *(int *)(v63 + 24)) = v54;
            *(_QWORD *)(v66 + 8) = &off_1E74B8718;
            swift_unknownObjectWeakAssign();

            sub_1BC0F1B94(v62, (uint64_t)v88, type metadata accessor for MedicationDoseRecordAllItem);
            sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v67 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B2BC4() - 8) + 80);
            v68 = (v67 + 32) & ~v67;
            v69 = swift_allocObject();
            *(_OWORD *)(v69 + 16) = v89;
            *(_QWORD *)&v89 = v69 + v68;
            v86 = sub_1BC0F7F78(v60);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            v70 = v83;
            sub_1BC2B242C();
            sub_1BC2B23FC();
            (*(void (**)(char *, uint64_t))(v84 + 8))(v70, v85);
            v12 = v93;
            sub_1BC2B2BAC();
            sub_1BC2B2C18();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_69;
          }
          v57 = v78;
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v78, v91, v11);
        }
        else
        {
          v56 = v89 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          v57 = v78;
          (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v78, v56, v11);
        }
        swift_retain();
        swift_retain();
        goto LABEL_68;
      }
    }
  }
LABEL_69:
  v71 = sub_1BC20E4E4();
  v72 = swift_bridgeObjectRetain();
  v73 = sub_1BC210C44(v72);
  swift_bridgeObjectRelease();
  if ((v73 & 1) != 0)
  {
    v74 = 1;
  }
  else
  {
    v75 = swift_bridgeObjectRetain();
    v74 = sub_1BC20D26C(v75);
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v71, sel_setEnabled_, v74 & 1);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v91, v11);
}

void sub_1BC210644(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  swift_getObjectType();
  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v8 = swift_retain_n();
    v9 = sub_1BC12EE38(v8);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v16 = *(_QWORD *)&v2[qword_1EDA0F908] == 1 && *(_QWORD *)&v2[qword_1EDA0F910] > 1;
    objc_allocWithZone((Class)type metadata accessor for MedicationLogDetailsViewController());
    swift_retain();
    v23 = v2;
    v24 = sub_1BC20414C(a1, v9, v11, v13, v15, (uint64_t)v2, (uint64_t)&off_1E74B8718, v16);
    swift_release();

    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v24);
    objc_msgSend(v26, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v26, sel_setModalInPresentation_, 1);
    objc_msgSend(v23, sel_presentViewController_animated_completion_, v26, 1, 0);
    swift_release();

  }
  else
  {
    sub_1BC2B39C8();
    v17 = sub_1BC2B39D4();
    v18 = sub_1BC2B48C8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v28 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = sub_1BC2B54F8();
      v27 = sub_1BC12540C(v21, v22, &v28);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v17, v18, "[%s] Couldn't load view model", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v20, -1, -1);
      MEMORY[0x1BCCEF3A0](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1BC210920()
{
  char *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  result = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - v3;
  v5 = *(_QWORD *)&v0[qword_1EDA0F890];
  if (!v5)
    return result;
  v6 = *(uint64_t **)&v0[qword_1EDA0F888];
  if (!v6)
    return result;
  v7 = *(_QWORD *)(v5 + 16);
  if (v7 >> 62)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v8 = result;
    if (result)
      goto LABEL_5;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
    result = swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_5:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      v19 = v4;
      v20 = v5;
      v9 = 0;
      do
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          v10 = MEMORY[0x1BCCEE950](v9, v7);
        }
        else
        {
          v10 = *(_QWORD *)(v7 + 8 * v9 + 32);
          swift_retain();
        }
        ++v9;
        *(_QWORD *)(v10 + 48) = 4;
        swift_beginAccess();
        swift_retain();
        sub_1BC213EA8(&v21, v10);
        swift_endAccess();
        swift_release();
        swift_release();
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      v4 = v19;
      v5 = v20;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  *(uint64_t *)((char *)v6 + qword_1EDA0F800) = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_retain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BC218148(v11, v6);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BC0F7E5C(v12);
  swift_bridgeObjectRelease();
  sub_1BC2B2C24();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)&v0[qword_1EDA0F900];
  if ((v13 & 0x20) == 0)
    *(_QWORD *)&v0[qword_1EDA0F900] = v13 | 0x20;
  v14 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_1BC2B4658();
  v15 = v0;
  v16 = sub_1BC2B464C();
  v17 = (_QWORD *)swift_allocObject();
  v18 = MEMORY[0x1E0DF06E8];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v15;
  sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF3FFBF8, (uint64_t)v17);
  swift_release();
  sub_1BC212A64(1);
  objc_msgSend(v15, sel_dismissViewControllerAnimated_completion_, 1, 0);
  swift_release();
  return swift_release();
}

