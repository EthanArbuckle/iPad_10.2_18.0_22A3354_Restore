uint64_t sub_242AC824C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_242AC7FF8(a1, a2, a3, a4, a5);
}

uint64_t UInt64.vector2.getter(unint64_t a1)
{
  int v1;
  unint64_t v2;
  uint64_t inited;

  v1 = a1;
  v2 = HIDWORD(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224180);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  *(_DWORD *)(inited + 32) = v2;
  *(_DWORD *)(inited + 36) = v1;
  return sub_242AC7F30(inited);
}

unint64_t UInt64.init(highAndLow:)(double a1)
{
  return HIDWORD(a1) | ((unint64_t)LODWORD(a1) << 32);
}

uint64_t sub_242AC82CC(int8x16_t a1, double a2)
{
  uint64x2_t v2;
  __int32 v3;
  __int32 v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t inited;

  v2 = vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)a1.i8, (int32x2_t)*(_OWORD *)&vextq_s8(a1, a1, 8uLL)), (uint32x2_t)0xCD9E8D57D2511F53);
  v3 = v2.i32[2];
  v4 = v2.i32[0];
  v5 = HIDWORD(v2.i64[0]);
  v6 = HIDWORD(v2.i64[1]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224180);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4DE40;
  *(_DWORD *)(inited + 32) = LODWORD(a2) ^ a1.i32[1] ^ v6;
  *(_DWORD *)(inited + 36) = v3;
  *(_DWORD *)(inited + 40) = HIDWORD(a2) ^ a1.i32[3] ^ v5;
  *(_DWORD *)(inited + 44) = v4;
  return sub_242AC7E20(inited);
}

uint64_t sub_242AC836C(int8x16_t a1, double a2)
{
  int8x16_t v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;

  sub_242AC82CC(a1, a2);
  OUTLINED_FUNCTION_1_30(v3, (int32x2_t)0xBB67AE859E3779B9);
  OUTLINED_FUNCTION_1_30(v4, (int32x2_t)0x76CF5D0A3C6EF372);
  OUTLINED_FUNCTION_1_30(v5, (int32x2_t)0x32370B8FDAA66D2BLL);
  OUTLINED_FUNCTION_1_30(v6, (int32x2_t)0xED9EBA1478DDE6E4);
  OUTLINED_FUNCTION_1_30(v7, (int32x2_t)0xA90668991715609DLL);
  OUTLINED_FUNCTION_1_30(v8, (int32x2_t)0x646E171EB54CDA56);
  OUTLINED_FUNCTION_1_30(v9, (int32x2_t)0x1FD5C5A35384540FLL);
  OUTLINED_FUNCTION_1_30(v10, (int32x2_t)0xDB3D7428F1BBCDC8);
  return sub_242AC82CC(v11, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0x96A522AD8FF34781)));
}

uint64_t sub_242AC83F8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 && v1 <= 8)
  {
    v2 = 0;
    v3 = *(unsigned __int8 *)(a1 + 32);
    v4 = v1 - 1;
    v5 = 8;
    while (v4 != v2)
    {
      v6 = (unint64_t)*(unsigned __int8 *)(a1 + v2++ + 33) << v5;
      v5 += 8;
      v7 = __CFADD__(v3, v6);
      v3 += v6;
      if (v7)
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease();
    UInt64.vector2.getter(v3);
    return 0;
  }
  else
  {
    result = OUTLINED_FUNCTION_3_28();
    __break(1u);
  }
  return result;
}

uint64_t sub_242AC8508(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = *a1;
  if ((sub_242C00B0C(*(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152), &unk_25137C618) & 1) == 0)
    goto LABEL_23;
  Tensor.scalarType.getter();
  if (v2 != MEMORY[0x24BEE3F88])
    goto LABEL_23;
  v3 = sub_242B29D9C(v1);
  swift_release();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_242AC3CB0();
    v5 = 0;
    v6 = v11;
    v7 = *(_QWORD *)(v11 + 16);
    do
    {
      v8 = *(_DWORD *)(v3 + 4 * v5 + 32);
      if (v7 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_242AC3CB0();
      ++v5;
      *(_QWORD *)(v11 + 16) = v7 + 1;
      *(_DWORD *)(v11 + 4 * v7++ + 32) = v8;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
  }
  v9 = *(_QWORD *)(v6 + 16);
  if (v9 < 2)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v9 == 2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v9 < 4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 == 4)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v9 >= 6)
  {
    if (v9 != 6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = OUTLINED_FUNCTION_3_28();
  __break(1u);
  return result;
}

void sub_242AC86E8()
{
  uint64_t v0;
  int8x16_t v1;
  uint64_t v2;

  if (*(_BYTE *)(v0 + 24) == 1)
  {
    *(_BYTE *)(v0 + 24) = 0;
  }
  else
  {
    sub_242AC836C(*(int8x16_t *)v0, *(double *)(v0 + 16));
    sub_242AC8748(v1);
    *(_BYTE *)(v0 + 24) = 1;
    *(_QWORD *)(v0 + 32) = v2;
    sub_242AC8AB8((__int128 *)v0);
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AC8748(int8x16_t a1)
{
  uint64_t inited;
  int32x2_t v2;
  int8x16_t v3;
  int32x2_t v4;
  int8x16_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257224238);
  inited = swift_initStackObject();
  v2 = (int32x2_t)vextq_s8(a1, a1, 8uLL).u64[0];
  v3 = (int8x16_t)vshll_n_s32(vzip1_s32(*(int32x2_t *)a1.i8, v2), 0x20uLL);
  v4 = vzip2_s32(*(int32x2_t *)a1.i8, v2);
  v5.i64[0] = v4.u32[0];
  v5.i64[1] = v4.u32[1];
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  *(int8x16_t *)(inited + 32) = vorrq_s8(v3, v5);
  return sub_242AC7EA8(inited);
}

uint64_t sub_242AC87A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_242AC83F8(a1);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v4;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

void sub_242AC87D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_242AC7C3C(a1, a3, a2, a4, a5);
}

uint64_t sub_242AC87F0@<X0>(_QWORD *a1@<X8>)
{
  int8x16_t *v1;
  __int128 *v2;
  __int128 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  unint64_t v23;
  _DWORD *v24;
  int v25;
  uint64_t v26;
  int v27;
  __int128 v28;
  double v29;
  _OWORD v30[3];
  int v31;

  v2 = (__int128 *)v1;
  v29 = *(double *)v1[1].i64;
  sub_242AC836C(*v1, v29);
  v28 = v4;
  v5 = DWORD2(v4);
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v30[0] = MEMORY[0x24BEE4AF8];
  sub_242AC31CC();
  v7 = *(_QWORD *)&v30[0];
  v8 = *(_QWORD *)(*(_QWORD *)&v30[0] + 16);
  v9 = *(_QWORD *)(*(_QWORD *)&v30[0] + 24) >> 1;
  v10 = v8 + 1;
  if (v9 <= v8)
  {
    sub_242AC31CC();
    v7 = *(_QWORD *)&v30[0];
    v9 = *(_QWORD *)(*(_QWORD *)&v30[0] + 24) >> 1;
  }
  v11 = v28;
  *(_QWORD *)(v7 + 16) = v10;
  *(_DWORD *)(v7 + 4 * v8 + 32) = v5;
  v12 = v8 + 2;
  if ((uint64_t)v9 < (uint64_t)(v8 + 2))
  {
    OUTLINED_FUNCTION_0_39();
    v11 = v28;
    v7 = *(_QWORD *)&v30[0];
  }
  v13 = HIDWORD(v11);
  *(_QWORD *)(v7 + 16) = v12;
  *(_DWORD *)(v7 + 4 * v10 + 32) = HIDWORD(v28);
  v14 = *(_QWORD *)(v7 + 16);
  v15 = v14 + 1;
  if (v14 >= *(_QWORD *)(v7 + 24) >> 1)
  {
    OUTLINED_FUNCTION_0_39();
    LODWORD(v11) = v28;
  }
  v16 = v11;
  v17 = *(_QWORD *)&v30[0];
  *(_QWORD *)(*(_QWORD *)&v30[0] + 16) = v15;
  *(_DWORD *)(v17 + 4 * v14 + 32) = v13;
  if ((int64_t)(v14 + 2) > *(_QWORD *)(v17 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_32();
    v17 = *(_QWORD *)&v30[0];
  }
  *(_QWORD *)(v17 + 16) = v14 + 2;
  *(_DWORD *)(v17 + 32 + 4 * v15) = v16;
  *(_QWORD *)&v30[0] = v6;
  sub_242AC31CC();
  v18 = v6;
  v19 = *(_QWORD *)(v6 + 16);
  v20 = *(_QWORD *)(v18 + 24) >> 1;
  v21 = v19 + 1;
  if (v20 <= v19)
  {
    OUTLINED_FUNCTION_0_39();
    v18 = *(_QWORD *)&v30[0];
    v20 = *(_QWORD *)(*(_QWORD *)&v30[0] + 24) >> 1;
  }
  *(_QWORD *)(v18 + 16) = v21;
  *(_DWORD *)(v18 + 4 * v19 + 32) = LODWORD(v29);
  if ((uint64_t)v20 < (uint64_t)(v19 + 2))
  {
    OUTLINED_FUNCTION_2_32();
    v18 = *(_QWORD *)&v30[0];
  }
  *(_QWORD *)(v18 + 16) = v19 + 2;
  *(_DWORD *)(v18 + 32 + 4 * v21) = HIDWORD(v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
  result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_242C51BF0;
  *(_DWORD *)(result + 32) = 1;
  v23 = *(_QWORD *)(v17 + 16);
  if (!v23)
  {
    __break(1u);
    goto LABEL_21;
  }
  v24 = (_DWORD *)result;
  *(_DWORD *)(result + 36) = *(_DWORD *)(v17 + 32);
  if (v23 == 1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(_DWORD *)(result + 40) = *(_DWORD *)(v17 + 36);
  if (v23 < 3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(_DWORD *)(result + 44) = *(_DWORD *)(v17 + 40);
  if (v23 == 3)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v25 = *(_DWORD *)(v17 + 44);
  result = swift_release();
  v24[12] = v25;
  v26 = *(_QWORD *)(v18 + 16);
  if (!v26)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24[13] = *(_DWORD *)(v18 + 32);
  if (v26 != 1)
  {
    v27 = *(_DWORD *)(v18 + 36);
    swift_release();
    v24[14] = v27;
    v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_242A8E108((uint64_t)&unk_25137B578, (uint64_t)v24, (uint64_t)v30, a1);
    return sub_242AC8AB8(v2);
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_242AC8AB8(__int128 *a1)
{
  uint64_t inited;
  int v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;

  v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224180);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4DE40;
  *(_OWORD *)(inited + 32) = v7;
  v3 = HIDWORD(v7) + 1;
  if (HIDWORD(v7) != -1)
  {
    v4 = 3;
LABEL_10:
    *(_DWORD *)(inited + 32 + 4 * v4) = v3;
    goto LABEL_11;
  }
  v3 = DWORD2(v7) + 1;
  if (DWORD2(v7) != -1)
  {
    v4 = 2;
    goto LABEL_10;
  }
  v3 = DWORD1(v7) + 1;
  if (DWORD1(v7) != -1)
  {
    v4 = 1;
    goto LABEL_10;
  }
  v3 = v7 + 1;
  if ((_DWORD)v7 != -1)
  {
    v4 = 0;
    goto LABEL_10;
  }
  *(_DWORD *)(inited + 44) = 0;
LABEL_11:
  result = sub_242AC7E20(inited);
  *a1 = v6;
  return result;
}

uint64_t UInt64.vector4.getter(unint64_t a1)
{
  int v1;
  unint64_t v2;
  uint64_t inited;

  v1 = a1;
  v2 = HIDWORD(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224180);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4DE40;
  *(_QWORD *)(inited + 32) = 0;
  *(_DWORD *)(inited + 40) = v2;
  *(_DWORD *)(inited + 44) = v1;
  return sub_242AC7E20(inited);
}

Swift::UInt64 __swiftcall SystemArc4RandomNumberGenerator.next()()
{
  _QWORD v1[2];

  v1[1] = *MEMORY[0x24BDAC8D0];
  v1[0] = 0;
  arc4random_buf(v1, 8uLL);
  return v1[0];
}

void SystemArc4RandomNumberGenerator.next(count:)(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  sub_242A85D30(a1);
  if ((unint64_t)(a1 - 0x1000000000000000) >> 61 == 7)
  {
    v4 = v2;
    OUTLINED_FUNCTION_4_26(v3, 8 * a1);
    *(_QWORD *)(v4 + 16) = a1;
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    __break(1u);
  }
}

void SystemArc4RandomNumberGenerator.next<A>(count:upperBound:)(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  sub_242A85D30(a1);
  if ((unint64_t)(a1 - 0x1000000000000000) >> 61 == 7)
  {
    v4 = v2;
    OUTLINED_FUNCTION_4_26(v3, 8 * a1);
    *(_QWORD *)(v4 + 16) = a1;
    MEMORY[0x24BDAC7A8](v5);
    sub_242C485D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_242AC8D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD v24[3];
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  result = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v24[0] = v13;
    if (!a3)
    {
LABEL_6:
      *(_QWORD *)v24[0] = a3;
      return result;
    }
    if ((unint64_t)(a3 - 1) < *(_QWORD *)(v14 + 16))
    {
      v20 = 0;
      v28 = v14 + 32;
      v26 = v16;
      v27 = v15;
      v24[2] = v18;
      v25 = result;
      v21 = (uint64_t)v18;
      v22 = v15;
      do
      {
        v23 = *result;
        sub_242AC8E48(*(_QWORD *)(v28 + 8 * v20), a5, v22, a7, a8, v21);
        (*(void (**)(uint64_t, uint64_t, char *))(v26 + 40))(v23 + *(_QWORD *)(v26 + 72) * v20, v21, v22);
        result = v25;
        ++v20;
      }
      while (a3 != v20);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_242AC8E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t TupleTypeMetadata2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char v52;
  uint64_t v53;
  char *v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  char v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t AssociatedConformanceWitness;
  int v70;
  char v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  void (*v83)(char *, uint64_t);
  char *v84;
  char *v85;
  uint64_t v86;
  char v87;
  BOOL v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char *v95;
  char *v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  int v104;
  char v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  char v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t (*v120)(char *, uint64_t);
  char *v121;
  char *v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(char *, uint64_t);
  char *v127;
  char v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char v133;
  char *v134;
  char *v135;
  char *v136;
  char v137;
  uint64_t (*v138)(char *, uint64_t);
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char v149;
  void (*v150)(char *, uint64_t);
  char *v151;
  char *v152;
  char *v153;
  char v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t, char *);
  char *v161;
  char v162;
  void (*v163)(char *, uint64_t);
  char v164;
  char *v165;
  char *v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v173;
  int v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  uint64_t AssociatedTypeWitness;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(uint64_t, uint64_t);
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(char *, char *, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;

  v197 = a5;
  v212 = a1;
  v179 = a6;
  v214 = *MEMORY[0x24BDAC8D0];
  v201 = (char *)a4;
  v8 = *(_QWORD *)(a4 + 8);
  v9 = *(_QWORD *)(v8 + 24);
  swift_getAssociatedTypeWitness();
  v188 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v186 = (char *)&v175 - v10;
  v11 = swift_checkMetadataState();
  v205 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v185 = (char *)&v175 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v184 = (char *)&v175 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v192 = (char *)&v175 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v198 = (void (*)(uint64_t, uint64_t))((char *)&v175 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v177 = (char *)&v175 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v202 = (char *)&v175 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v175 - v24;
  v211 = v26;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v178 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v204 = (char *)&v175 - v28;
  v193 = v9;
  v191 = *(_QWORD *)(v9 + 16);
  v190 = swift_getAssociatedTypeWitness();
  v29 = MEMORY[0x24BDAC7A8](v190);
  v189 = (char *)&v175 - v30;
  v31 = *((_QWORD *)a3 - 1);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v183 = (char *)&v175 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v182 = (char *)&v175 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v175 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v200 = (char *)&v175 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v175 = (char *)&v175 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v176 = (char *)&v175 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v203 = (char *)&v175 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)&v175 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v175 - v50;
  v52 = sub_242C48B3C();
  v209 = v8;
  v207 = v31;
  v181 = TupleTypeMetadata2;
  v206 = v51;
  v195 = (uint64_t)v38;
  if ((v52 & 1) == 0)
  {
    v55 = sub_242C48B3C();
    v56 = sub_242C48B30();
    if ((v55 & 1) != 0)
    {
      if (v56 > 64)
      {
        v213 = 0;
        sub_242ACA978();
        sub_242C48B00();
        v57 = sub_242C48200();
        v194 = *(char **)(v31 + 8);
        ((void (*)(char *, char *))v194)(v51, a3);
        TupleTypeMetadata2 = v181;
        goto LABEL_9;
      }
      v180 = (uint64_t)v25;
      swift_getAssociatedConformanceWitness();
      sub_242C492B0();
      sub_242C49250();
      v60 = sub_242C481B8();
      v61 = v51;
      v51 = *(char **)(v31 + 8);
      ((void (*)(char *, char *))v51)(v61, a3);
      (*(void (**)(char *, uint64_t, char *))(v31 + 16))(v49, a2, a3);
      TupleTypeMetadata2 = v181;
      v194 = v51;
      if ((v60 & 1) == 0)
      {
LABEL_20:
        ((void (*)(char *, char *))v51)(v49, a3);
        v54 = v202;
        v25 = (char *)v180;
        goto LABEL_21;
      }
      v62 = sub_242C48B24();
      ((void (*)(char *, char *))v51)(v49, a3);
      v54 = v202;
      v25 = (char *)v180;
      if (v62)
        goto LABEL_21;
    }
    else
    {
      v54 = v202;
      if (v56 >= 64)
      {
        v213 = 0;
        sub_242ACA978();
        sub_242C48B00();
        v63 = sub_242C48200();
        v194 = *(char **)(v207 + 8);
        ((void (*)(char *, char *))v194)(v51, a3);
        TupleTypeMetadata2 = v181;
        if ((v63 & 1) == 0)
          goto LABEL_21;
        goto LABEL_19;
      }
      v58 = v207;
      (*(void (**)(char *, uint64_t, char *))(v207 + 16))(v51, a2, a3);
      v59 = sub_242C48B24();
      v194 = *(char **)(v58 + 8);
      ((void (*)(char *, char *))v194)(v51, a3);
      TupleTypeMetadata2 = v181;
      if (v59)
        goto LABEL_21;
    }
LABEL_19:
    v174 = 0;
    v173 = 565;
    sub_242C48F5C();
    __break(1u);
    goto LABEL_20;
  }
  if (sub_242C48B30() >= 64)
  {
    v213 = 0;
    sub_242ACA978();
    sub_242C48B00();
    v57 = sub_242C48200();
    v194 = *(char **)(v31 + 8);
    ((void (*)(char *, char *))v194)(v51, a3);
LABEL_9:
    v54 = v202;
    if ((v57 & 1) != 0)
      goto LABEL_19;
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t, char *))(v31 + 16))(v51, a2, a3);
  v53 = sub_242C48B24();
  v194 = *(char **)(v31 + 8);
  ((void (*)(char *, char *))v194)(v51, a3);
  v54 = v202;
  if (!v53)
    goto LABEL_19;
LABEL_21:
  v213 = v212;
  sub_242ACAA2C();
  sub_242C48B00();
  v64 = &v204[*(int *)(TupleTypeMetadata2 + 48)];
  v199 = v64;
  sub_242C48EC0();
  v65 = v25;
  v66 = a2;
  v67 = v25;
  v68 = v211;
  v210 = *(void (**)(char *, char *, uint64_t))(v205 + 16);
  v210(v65, v64, v211);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LODWORD(v64) = sub_242C48B3C();
  v70 = sub_242C48B3C();
  v208 = AssociatedConformanceWitness;
  if (((v64 ^ v70) & 1) != 0)
  {
    v71 = sub_242C48B3C();
    v180 = (uint64_t)v67;
    v72 = sub_242C48B30();
    v73 = a3;
    v74 = sub_242C48B30();
    v75 = v66;
    if ((v71 & 1) != 0)
    {
      v76 = v206;
      if (v74 >= v72)
      {
        v145 = v211;
        swift_getAssociatedConformanceWitness();
        sub_242C492B0();
        v146 = v202;
        sub_242C49250();
        v147 = v73;
        swift_getAssociatedConformanceWitness();
        v148 = v180;
        v149 = sub_242C481AC();
        v150 = *(void (**)(char *, uint64_t))(v205 + 8);
        v150(v146, v145);
        v151 = v177;
        v210(v177, (char *)v148, v145);
        v152 = v176;
        (*(void (**)(char *, uint64_t, char *))(v207 + 16))(v176, v75, v147);
        v198 = (void (*)(uint64_t, uint64_t))v150;
        if ((v149 & 1) != 0)
        {
          v153 = v152;
          v84 = v76;
          v85 = v194;
          ((void (*)(char *, char *))v194)(v153, v147);
          v150(v151, v145);
          v150((char *)v180, v145);
          a3 = v147;
        }
        else
        {
          sub_242C48B00();
          v164 = sub_242C481AC();
          v165 = v76;
          v84 = v76;
          v166 = v152;
          v85 = v194;
          ((void (*)(char *, char *))v194)(v165, v147);
          ((void (*)(char *, char *))v85)(v166, v147);
          v150((char *)v180, v145);
          a3 = v147;
          if ((v164 & 1) == 0)
            goto LABEL_62;
        }
      }
      else
      {
        v77 = v66;
        v78 = v73;
        (*(void (**)(char *, uint64_t, char *))(v207 + 16))(v206, v77, v73);
        v79 = v202;
        v80 = v211;
        sub_242C48B00();
        swift_getAssociatedConformanceWitness();
        v81 = v180;
        v82 = sub_242C481AC();
        v83 = *(void (**)(char *, uint64_t))(v205 + 8);
        v83(v79, v80);
        v198 = (void (*)(uint64_t, uint64_t))v83;
        v83((char *)v81, v80);
        v84 = v76;
        a3 = v78;
        v85 = v194;
        if ((v82 & 1) == 0)
          goto LABEL_62;
      }
    }
    else
    {
      v88 = v72 < v74;
      v89 = v202;
      v90 = v206;
      v91 = v207;
      if (v88)
      {
        v92 = v180;
        v93 = v211;
        v210(v202, (char *)v180, v211);
        sub_242C48B00();
        v94 = sub_242C481AC();
        v95 = v90;
        v96 = v73;
        v84 = v90;
        a3 = v73;
        v85 = v194;
        ((void (*)(char *, char *))v194)(v95, v96);
        v198 = *(void (**)(uint64_t, uint64_t))(v205 + 8);
        v198(v92, v93);
        if ((v94 & 1) == 0)
          goto LABEL_62;
      }
      else
      {
        swift_getAssociatedConformanceWitness();
        sub_242C492B0();
        sub_242C49250();
        v154 = sub_242C481A0();
        v155 = v90;
        a3 = v73;
        v156 = v73;
        v85 = v194;
        ((void (*)(char *, char *))v194)(v155, v156);
        v157 = (char *)v198;
        v158 = v180;
        v159 = v211;
        v210((char *)v198, (char *)v180, v211);
        v160 = *(void (**)(char *, uint64_t, char *))(v91 + 16);
        v161 = v175;
        v160(v175, v75, a3);
        if ((v154 & 1) == 0)
        {
          ((void (*)(char *, char *))v85)(v161, a3);
          v167 = *(void (**)(char *, uint64_t))(v205 + 8);
          v167(v157, v159);
          v167((char *)v158, v159);
LABEL_62:
          ((void (*)(char *, char *))v85)(v203, a3);
          v168 = v181;
          v169 = v178;
          v110 = v207;
          goto LABEL_65;
        }
        sub_242C48B00();
        swift_getAssociatedConformanceWitness();
        v162 = sub_242C481AC();
        v163 = *(void (**)(char *, uint64_t))(v205 + 8);
        v163(v89, v159);
        v163(v157, v159);
        v198 = (void (*)(uint64_t, uint64_t))v163;
        v163((char *)v158, v159);
        v84 = v206;
        if ((v162 & 1) == 0)
          goto LABEL_62;
      }
    }
  }
  else
  {
    v86 = sub_242C48B30();
    if (v86 >= sub_242C48B30())
    {
      v84 = v206;
      (*(void (**)(char *, uint64_t, char *))(v207 + 16))(v206, v66, a3);
      sub_242C48B00();
      swift_getAssociatedConformanceWitness();
      v87 = sub_242C481AC();
      v97 = *(void (**)(char *, uint64_t))(v205 + 8);
      v97(v54, v68);
      v198 = (void (*)(uint64_t, uint64_t))v97;
      v97(v67, v68);
      v85 = v194;
    }
    else
    {
      v210(v54, v67, v68);
      v84 = v206;
      sub_242C48B00();
      v87 = sub_242C481AC();
      v85 = v194;
      ((void (*)(char *, char *))v194)(v84, a3);
      v198 = *(void (**)(uint64_t, uint64_t))(v205 + 8);
      v198((uint64_t)v67, v68);
    }
    v75 = v66;
    if ((v87 & 1) == 0)
      goto LABEL_62;
  }
  v180 = swift_getAssociatedConformanceWitness();
  sub_242C492B0();
  v98 = v195;
  sub_242C49250();
  sub_242C48ECC();
  ((void (*)(uint64_t, char *))v85)(v98, a3);
  v196 = v75;
  sub_242C48B0C();
  ((void (*)(char *, char *))v85)(v84, a3);
  v212 = 0;
  v195 = MEMORY[0x24BEE4AE0] + 8;
  v99 = v192;
  v100 = v199;
  v101 = a3;
  v102 = v211;
  while (1)
  {
    v210(v99, v100, v102);
    v103 = v99;
    v104 = sub_242C48B3C();
    if (((v104 ^ sub_242C48B3C()) & 1) == 0)
    {
      v116 = sub_242C48B30();
      if (v116 >= sub_242C48B30())
      {
        v124 = v207;
        v115 = v206;
        (*(void (**)(void))(v207 + 16))();
        v112 = v202;
        v125 = v211;
        sub_242C48B00();
        swift_getAssociatedConformanceWitness();
        v113 = sub_242C481AC();
        v126 = (uint64_t (*)(char *, uint64_t))v198;
        v198((uint64_t)v112, v125);
        v114 = v126(v103, v125);
        v99 = v103;
        v110 = v124;
      }
      else
      {
        v117 = v202;
        v118 = v211;
        v210(v202, v103, v211);
        v119 = v206;
        sub_242C48B00();
        v112 = v117;
        v115 = v119;
        v113 = sub_242C481AC();
        ((void (*)(char *, char *))v194)(v119, v101);
        v114 = ((uint64_t (*)(char *, uint64_t))v198)(v103, v118);
        v99 = v103;
        v110 = v207;
      }
LABEL_44:
      if ((v113 & 1) == 0)
        goto LABEL_64;
      goto LABEL_53;
    }
    v105 = sub_242C48B3C();
    v106 = sub_242C48B30();
    v107 = v200;
    v108 = sub_242C48B30();
    if ((v105 & 1) != 0)
    {
      v109 = (void (*)(char *, uint64_t))v198;
      if (v108 < v106)
      {
        v111 = v206;
        v110 = v207;
        (*(void (**)(char *, char *, char *))(v207 + 16))(v206, v107, v101);
        v112 = v202;
        sub_242C48B00();
        swift_getAssociatedConformanceWitness();
        v99 = v192;
        v113 = sub_242C481AC();
        v109(v112, v102);
        v114 = ((uint64_t (*)(char *, uint64_t))v109)(v99, v102);
        v115 = v111;
        goto LABEL_44;
      }
      swift_getAssociatedConformanceWitness();
      v127 = v107;
      sub_242C492B0();
      v112 = v202;
      sub_242C49250();
      swift_getAssociatedConformanceWitness();
      v99 = v192;
      v128 = sub_242C481AC();
      v109(v112, v102);
      v129 = v184;
      v210(v184, v99, v102);
      v130 = v182;
      (*(void (**)(char *, char *, char *))(v207 + 16))(v182, v127, v101);
      if ((v128 & 1) != 0)
      {
        ((void (*)(char *, char *))v194)(v130, v101);
        v131 = v211;
        v109(v129, v211);
        v114 = ((uint64_t (*)(char *, uint64_t))v109)(v99, v131);
        v115 = v206;
        v110 = v207;
        goto LABEL_53;
      }
      v138 = (uint64_t (*)(char *, uint64_t))v109;
      v139 = v206;
      v140 = v211;
      sub_242C48B00();
      v115 = v139;
      v123 = sub_242C481AC();
      v141 = v139;
      v142 = v194;
      ((void (*)(char *, char *))v194)(v141, v101);
      ((void (*)(char *, char *))v142)(v130, v101);
      v114 = v138(v99, v140);
      goto LABEL_52;
    }
    v120 = (uint64_t (*)(char *, uint64_t))v198;
    if (v106 >= v108)
      break;
    v121 = v202;
    v99 = v192;
    v210(v202, v192, v102);
    v122 = v206;
    sub_242C48B00();
    v112 = v121;
    v123 = sub_242C481AC();
    ((void (*)(char *, char *))v194)(v122, v101);
    v114 = v120(v99, v102);
    v115 = v122;
LABEL_52:
    v110 = v207;
    if ((v123 & 1) == 0)
      goto LABEL_64;
LABEL_53:
    MEMORY[0x24BDAC7A8](v114);
    v143 = v201;
    *(&v175 - 4) = v101;
    *(&v175 - 3) = v143;
    v173 = v197;
    v144 = v212;
    sub_242BA1484();
    v212 = v144;
    sub_242C48EC0();
    (*(void (**)(char *, char *, char *))(v110 + 40))(v204, v115, v101);
    v100 = v199;
    v102 = v211;
    (*(void (**)(char *, char *, uint64_t))(v205 + 40))(v199, v112, v211);
  }
  sub_242C492B0();
  v132 = v206;
  sub_242C49250();
  v133 = sub_242C481A0();
  ((void (*)(char *, char *))v194)(v132, v101);
  v134 = v185;
  v135 = v192;
  v210(v185, v192, v102);
  v136 = v183;
  (*(void (**)(char *, char *, char *))(v207 + 16))(v183, v107, v101);
  if ((v133 & 1) != 0)
  {
    v112 = v202;
    sub_242C48B00();
    swift_getAssociatedConformanceWitness();
    v137 = sub_242C481AC();
    v120(v112, v102);
    v120(v134, v102);
    v114 = v120(v135, v102);
    v99 = v135;
    v115 = v206;
    v110 = v207;
    if ((v137 & 1) == 0)
      goto LABEL_64;
    goto LABEL_53;
  }
  ((void (*)(char *, char *))v194)(v136, v101);
  v120(v134, v102);
  v120(v135, v102);
  v110 = v207;
LABEL_64:
  v170 = v194;
  ((void (*)(char *, char *))v194)(v200, v101);
  ((void (*)(char *, char *))v170)(v203, v101);
  v168 = v181;
  v169 = v178;
  a3 = v101;
LABEL_65:
  v171 = v204;
  (*(void (**)(uint64_t, char *, char *))(v110 + 16))(v179, v204, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v171, v168);
}

void sub_242ACA694(uint64_t a1)
{
  SystemArc4RandomNumberGenerator.next<A>(count:upperBound:)(a1);
}

Swift::UInt64 sub_242ACA6A8()
{
  return SystemArc4RandomNumberGenerator.next()();
}

uint64_t sub_242ACA6BC()
{
  return sub_242C4805C();
}

_QWORD *sub_242ACA6FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242AC8D24(a1, a2, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4]);
}

unint64_t sub_242ACA71C(uint64_t a1)
{
  unint64_t result;

  result = sub_242ACA740();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242ACA740()
{
  unint64_t result;

  result = qword_257224188;
  if (!qword_257224188)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for SystemArc4RandomNumberGenerator, &type metadata for SystemArc4RandomNumberGenerator);
    atomic_store(result, (unint64_t *)&qword_257224188);
  }
  return result;
}

uint64_t type metadata accessor for AnyRandomNumberGenerator()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SystemArc4RandomNumberGenerator()
{
  return &type metadata for SystemArc4RandomNumberGenerator;
}

__n128 __swift_memcpy40_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PhiloxRandomNumberGenerator(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 40))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhiloxRandomNumberGenerator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhiloxRandomNumberGenerator()
{
  return &type metadata for PhiloxRandomNumberGenerator;
}

unint64_t sub_242ACA868(uint64_t a1)
{
  unint64_t result;

  result = sub_242A771D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242ACA88C(uint64_t a1)
{
  unint64_t result;

  result = sub_242ACA8B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242ACA8B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257224230;
  if (!qword_257224230)
  {
    v1 = type metadata accessor for AnyRandomNumberGenerator();
    result = MEMORY[0x2494EDE24](&unk_242C51D84, v1);
    atomic_store(result, (unint64_t *)&qword_257224230);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_242ACA914(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257224250);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242ACA954(uint64_t a1)
{
  uint64_t v1;

  return sub_242AC8194(a1, *(_QWORD *)(v1 + 40));
}

unint64_t sub_242ACA978()
{
  unint64_t result;

  result = qword_257224258;
  if (!qword_257224258)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257224258);
  }
  return result;
}

uint64_t sub_242ACA9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  v7 = swift_allocObject();
  sub_242A64518(&v9, v7 + 16);
  return v7;
}

unint64_t sub_242ACAA2C()
{
  unint64_t result;

  result = qword_257224260[0];
  if (!qword_257224260[0])
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, qword_257224260);
  }
  return result;
}

void sub_242ACAA68(void *a1)
{
  uint64_t v1;

  arc4random_buf(a1, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 64));
}

void OUTLINED_FUNCTION_0_39()
{
  sub_242AC31CC();
}

uint64_t OUTLINED_FUNCTION_1_30(int8x16_t a1, int32x2_t a2)
{
  int32x2_t v2;

  return sub_242AC82CC(a1, COERCE_DOUBLE(vadd_s32(v2, a2)));
}

void OUTLINED_FUNCTION_2_32()
{
  sub_242AC31CC();
}

uint64_t OUTLINED_FUNCTION_3_28()
{
  return sub_242C48F5C();
}

void OUTLINED_FUNCTION_4_26(void *__buf@<X1>, size_t a2@<X8>)
{
  arc4random_buf(__buf, a2);
}

void OUTLINED_FUNCTION_6_27()
{
  sub_242A5E098();
}

void sub_242ACAAF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_2_33((uint64_t)v8, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  sub_242ACAC2C((uint64_t)v8, a1, a2, a3);
  OUTLINED_FUNCTION_7_0();
}

void sub_242ACAB6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13[2];

  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_2_33((uint64_t)v10, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  sub_242A587A8(a1, (uint64_t)v13);
  sub_242ACACC4((uint64_t)v10, v13, a2, a3, a4);
  OUTLINED_FUNCTION_7_0();
}

uint64_t Sampling<>.count.getter()
{
  return sub_242ACB5F0();
}

uint64_t Sampling.underestimatedCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void sub_242ACAC2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_242C483EC();
  type metadata accessor for Sampling.IteratorFactory(0, a2, a3, v9);
  *a4 = sub_242ACAC8C(a1);
  a4[1] = v8;
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242ACAC8C(uint64_t a1)
{
  swift_allocObject();
  return sub_242ACB2FC(a1);
}

void sub_242ACACC4(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;

  v10 = sub_242C483EC();
  type metadata accessor for Sampling.SampledIteratorFactory(0, a3, a4, v11);
  *a5 = sub_242ACAD34(a1, a2);
  a5[1] = v10;
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242ACAD34(uint64_t a1, __int128 *a2)
{
  swift_allocObject();
  return sub_242ACB3FC(a1, a2);
}

uint64_t Sampling.makeIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 112))();
}

uint64_t (*sub_242ACADA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>))()
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*result)();

  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_57_0();
  swift_getAssociatedTypeWitness();
  v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v4, a1, a2);
  sub_242C483D4();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, a2);
  result = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)result + 2) = a2;
  *((_QWORD *)result + 3) = a3;
  *((_QWORD *)result + 4) = v10;
  *a4 = sub_242ACB868;
  a4[1] = result;
  return result;
}

uint64_t sub_242ACAE8C()
{
  swift_getAssociatedTypeWitness();
  swift_projectBox();
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_242C48A94();
  return swift_endAccess();
}

uint64_t sub_242ACAF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t (*v18)@<X0>(uint64_t@<X8>);
  uint64_t result;

  v14 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_57_0();
  swift_getAssociatedTypeWitness();
  v15 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v7, a2, a4);
  sub_242C483D4();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, a4);
  v16 = *(_QWORD *)(a3 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (uint64_t (*)@<X0>(uint64_t@<X8>))swift_allocObject();
  *((_QWORD *)v18 + 2) = a3;
  *((_QWORD *)v18 + 3) = a4;
  *((_QWORD *)v18 + 4) = a5;
  *((_QWORD *)v18 + 5) = a6;
  *((_QWORD *)v18 + 6) = v15;
  result = OUTLINED_FUNCTION_2_33((uint64_t)v18 + v17, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
  *a7 = sub_242ACB820;
  a7[1] = v18;
  return result;
}

uint64_t sub_242ACB074@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28[32];

  v24 = a1;
  v27 = a4;
  v25 = *(_QWORD *)(*(_QWORD *)(a3 + 8) + 8);
  v26 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_242C48A64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - v8;
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  swift_getAssociatedTypeWitness();
  swift_projectBox();
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_242C48A94();
  swift_endAccess();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v12 = swift_getAssociatedTypeWitness();
    v13 = v27;
    v14 = 1;
  }
  else
  {
    v15 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v11, v9, AssociatedTypeWitness);
    v16 = (void (*)(char *, _QWORD))sub_242C48854();
    v18 = v17;
    v19 = swift_getAssociatedTypeWitness();
    v20 = v27;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v27, v18, v19);
    v16(v28, 0);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, AssociatedTypeWitness);
    v13 = v20;
    v14 = 0;
    v12 = v19;
  }
  return __swift_storeEnumTagSinglePayload(v13, v14, 1, v12);
}

uint64_t Sampling.Iterator.next()()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_242ACB2FC(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1);
  return v1;
}

uint64_t (*sub_242ACB330@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v7, (uint64_t)v2 + *(_QWORD *)(v4 + 96), v5);
  return sub_242ACADA4((uint64_t)v7, v5, *(_QWORD *)(v4 + 88), a2);
}

uint64_t sub_242ACB3C0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t sub_242ACB3F0()
{
  return sub_242ACB5B4((void (*)(void))sub_242ACB3C0);
}

uint64_t sub_242ACB3FC(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  sub_242A64518(a2, v2 + *(_QWORD *)(*(_QWORD *)v2 + 136));
  return sub_242ACB2FC(a1);
}

uint64_t sub_242ACB434@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)v2 + *(_QWORD *)(v4 + 96);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, v8, v5);
  v10 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 136));
  v11 = v10[3];
  v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v13 = *(_QWORD *)(v4 + 128);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v8, v5, v13, v11, v12);
  swift_getAssociatedTypeWitness();
  v14 = sub_242C48650();
  v15 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v14);
  return sub_242ACAF48((uint64_t)v7, (uint64_t)&v18, v5, v14, v13, v15, a2);
}

uint64_t sub_242ACB564()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
}

uint64_t sub_242ACB574()
{
  uint64_t v0;

  v0 = sub_242ACB3C0();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  return v0;
}

uint64_t sub_242ACB5A8()
{
  return sub_242ACB5B4((void (*)(void))sub_242ACB574);
}

uint64_t sub_242ACB5B4(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_242ACB5D4()
{
  Sampling.makeIterator()();
  return swift_release();
}

uint64_t sub_242ACB5F0()
{
  return sub_242C487B8();
}

void sub_242ACB620()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t type metadata accessor for Sampling(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sampling);
}

_QWORD *initializeBufferWithCopyOfBuffer for MPSGraphTensorStorage.MPSExecutionContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for LazyTensorFunction.Key.TensorOperationDescriptionKey()
{
  return swift_release();
}

_QWORD *sub_242ACB678(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_242ACB6B0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Sampling.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sampling.Iterator);
}

uint64_t sub_242ACB6EC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Sampling.IteratorFactory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sampling.IteratorFactory);
}

uint64_t sub_242ACB768()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Sampling.SampledIteratorFactory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sampling.SampledIteratorFactory);
}

uint64_t sub_242ACB7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_242ACB820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_242ACB074(v1 + ((v3 + 56) & ~v3), v2, *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_242ACB844()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242ACB868()
{
  return sub_242ACAE8C();
}

uint64_t OUTLINED_FUNCTION_2_33@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_242ACB880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_242C48D7C();
    for (i = (uint64_t *)(a1 + 48); ; i += 3)
    {
      v8 = *(i - 1);
      v9 = *i;
      v11[0] = *(i - 2);
      v11[1] = v8;
      v11[2] = v9;
      sub_242C480E0();
      swift_retain();
      sub_242ACF18C(v11, a3, &v12);
      swift_release();
      swift_bridgeObjectRelease();
      if (v3)
        break;
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      if (!--v5)
      {
        v8 = v13;
        swift_release();
        return v8;
      }
    }
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v8;
}

uint64_t sub_242ACB9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  unint64_t v18[2];
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_242AC3CE8();
    v7 = v22;
    v8 = (unint64_t *)(a1 + 40);
    while (1)
    {
      v9 = *v8;
      v18[0] = *(v8 - 1);
      v18[1] = v9;
      sub_242C480E0();
      sub_242ACF794(v18, a2, &v19);
      if (v3)
        break;
      v3 = 0;
      swift_bridgeObjectRelease();
      v10 = v19;
      v11 = v20;
      v12 = v21;
      v22 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        v16 = v21;
        v17 = v20;
        sub_242AC3CE8();
        v12 = v16;
        v11 = v17;
        v7 = v22;
      }
      *(_QWORD *)(v7 + 16) = v13 + 1;
      v14 = v7 + 40 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      v8 += 2;
      *(_OWORD *)(v14 + 40) = v11;
      *(_OWORD *)(v14 + 56) = v12;
      if (!--v5)
      {
        swift_release();
        return v7;
      }
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v7;
}

void sub_242ACBB1C()
{
  uint64_t v0;

  sub_242B6BAF0(v0);
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242ACBB44()
{
  uint64_t v0;

  v0 = sub_242B6BDF4();
  swift_release();
  return v0;
}

void sub_242ACBB80(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = a1 + 40;
    v7 = MEMORY[0x24BEE4AF8];
    v16 = a1 + 40;
    do
    {
      v8 = (_OWORD *)(v6 + 24 * v5);
      v9 = v5;
      while (1)
      {
        if (v9 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v10 = *((_QWORD *)v8 - 1);
        v11 = *v8;
        v20[0] = v10;
        v20[1] = v11;
        v17 = v11;
        v19 = *((_QWORD *)&v11 + 1);
        sub_242C480E0();
        swift_retain();
        v12 = a2(v20, &v19);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        if ((v12 & 1) != 0)
          break;
        ++v9;
        swift_release();
        swift_bridgeObjectRelease();
        v8 = (_OWORD *)((char *)v8 + 24);
        if (v4 == v9)
          goto LABEL_17;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_242AC31B0();
        v7 = v21;
      }
      v14 = *(_QWORD *)(v7 + 16);
      if (v14 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_242AC31B0();
        v7 = v21;
      }
      v5 = v9 + 1;
      *(_QWORD *)(v7 + 16) = v14 + 1;
      v15 = v7 + 24 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_OWORD *)(v15 + 40) = v17;
      v6 = v16;
    }
    while (v4 - 1 != v9);
  }
LABEL_17:
  swift_bridgeObjectRelease();
}

unint64_t sub_242ACBD60(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  unint64_t v7;

  if (!a3)
  {
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v7 = 0xD00000000000001DLL;
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242C491CC();
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v7 = 0xD00000000000001FLL;
    v5 = MEMORY[0x24BEE1768];
    MEMORY[0x2494EC0FC](a1, MEMORY[0x24BEE1768]);
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    MEMORY[0x2494EC0FC](a2, v5);
LABEL_5:
    sub_242C48314();
    swift_bridgeObjectRelease();
    return v7;
  }
  if (a1 | a2)
    return 0xD000000000000027;
  else
    return 0xD000000000000015;
}

uint64_t sub_242ACBF50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  if (*(_QWORD *)(v0 + 96))
  {
    v1 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    v2 = objc_msgSend(*(id *)(v0 + 80), sel_inputNames);
    v1 = sub_242C48548();

    *(_QWORD *)(v0 + 96) = v1;
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_34();
  }
  sub_242C480E0();
  return v1;
}

void sub_242ACBFCC()
{
  uint64_t v0;

  sub_242B127BC(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  sub_242C48E54();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_1_0();
}

void sub_242ACBFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v30 = v3;
  v31 = v2;
  v5 = v4;
  v33 = v6;
  v34 = v7;
  v29 = v8;
  v32 = v9 & 1;
  v10 = sub_242C48944();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_4_9();
  v11 = sub_242C4895C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_4_9();
  v15 = v14 - v13;
  v16 = sub_242C47FF0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_4_9();
  sub_242A8AA58(0, (unint64_t *)&qword_257223398);
  sub_242C47FE4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x24BEE5748], v11);
  sub_242AD253C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224158);
  sub_242AD257C((unint64_t *)&qword_257227880, &qword_257224158, MEMORY[0x24BEE12C8]);
  sub_242C48B9C();
  OUTLINED_FUNCTION_14_14();
  *(_QWORD *)(v0 + 16) = sub_242C48980();
  *(_WORD *)(v0 + 88) = 0;
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 144) = sub_242C480BC();
  sub_242A6FE24(v30, v0 + 24);
  *(_BYTE *)(v0 + 76) = v32;
  *(_QWORD *)(v0 + 104) = v33;
  *(_QWORD *)(v0 + 112) = v34;
  *(_QWORD *)(v0 + 120) = v5;
  *(_QWORD *)(v0 + 128) = v31;
  sub_242C480E0();
  sub_242C480E0();
  v17 = sub_242ACC400(v29, v30, v32);
  *(_QWORD *)(v0 + 80) = v17;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = objc_msgSend(v17, sel_outputNames);
  v20 = sub_242C48548();

  v21 = *(_QWORD *)(v20 + 16);
  OUTLINED_FUNCTION_3_6();
  if (v21 < v18)
    goto LABEL_4;
  OUTLINED_FUNCTION_33_10();
  v22 = sub_242A7055C();
  v23 = OUTLINED_FUNCTION_21_14();
  v24 = sub_242C48548();

  LOBYTE(v23) = sub_242ACCB24(v24, v22);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_136();
  if ((v23 & 1) == 0)
  {
LABEL_4:
    sub_242C48C38();
    OUTLINED_FUNCTION_14_14();
    sub_242C48314();
    OUTLINED_FUNCTION_33_10();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572246F8);
    sub_242C48E78();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_14_14();
    sub_242C48314();
    v26 = OUTLINED_FUNCTION_21_14();
    v27 = MEMORY[0x24BEE0D00];
    v28 = sub_242C48548();

    MEMORY[0x2494EC0FC](v28, v27);
    sub_242C48314();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_4_0();
    sub_242C48314();
    OUTLINED_FUNCTION_3_29();
    sub_242A59170();
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34();
  sub_242A6FDE8(v30);
  type metadata accessor for EspressoBufferCache();
  v25 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + 136) = v25;
  OUTLINED_FUNCTION_13_11();
}

id sub_242ACC400(void *a1, uint64_t a2, char a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char v20;
  uint8_t *v21;
  os_signpost_id_t v22;
  uint8_t *v23;
  void (*v24)(char *, uint64_t);
  id v25;
  NSObject *v26;
  char *v27;
  os_signpost_type_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint8_t *v33;
  os_signpost_id_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;

  v41 = a1;
  v4 = a3 & 1;
  v40 = sub_242C47F3C();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_242C47F0C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  if (qword_257220560 != -1)
    swift_once();
  v15 = sub_242C47F30();
  __swift_project_value_buffer(v15, (uint64_t)qword_257223378);
  sub_242C47F00();
  v16 = sub_242C47F24();
  v17 = sub_242C489A4();
  if ((sub_242C48A34() & 1) != 0)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v37 = v6;
    v19 = a2;
    v20 = v4;
    v21 = v18;
    *(_WORD *)v18 = 0;
    v22 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v16, v17, v22, "Build Espresso Network", "", v21, 2u);
    v23 = v21;
    v4 = v20;
    a2 = v19;
    v6 = v37;
    MEMORY[0x2494EDF68](v23, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
  sub_242C47F60();
  swift_allocObject();
  sub_242C47F54();
  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v14, v6);
  v25 = sub_242ACD9A8(v41, a2, v4);
  v26 = sub_242C47F24();
  v27 = v42;
  sub_242C47F48();
  v28 = sub_242C48998();
  if ((sub_242C48A34() & 1) != 0)
  {
    swift_retain();
    v29 = v38;
    sub_242C47F6C();
    swift_release();
    v30 = v39;
    v31 = v40;
    if ((*(unsigned int (**)(char *, uint64_t))(v39 + 88))(v29, v40) == *MEMORY[0x24BEE7810])
    {
      v32 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
      v32 = "";
    }
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    v34 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v26, v28, v34, "Build Espresso Network", v32, v33, 2u);
    MEMORY[0x2494EDF68](v33, -1, -1);
  }

  v24(v27, v6);
  swift_release();
  return v25;
}

uint64_t sub_242ACCB24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  char v12;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
    v12 = 1;
    return v12 & 1;
  }
  if (v2 != 1)
  {
    sub_242C480E0();
    v12 = sub_242AD1DE8(a1, a2);
LABEL_16:
    swift_bridgeObjectRelease();
    return v12 & 1;
  }
  result = sub_242A9B71C(a2);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
    {
      v9 = result;
      v10 = (_QWORD *)(a1 + 40);
      while (1)
      {
        v11 = *(v10 - 1) == v9 && v7 == *v10;
        if (v11 || (sub_242C4925C() & 1) != 0)
          break;
        v10 += 2;
        if (!--v8)
          goto LABEL_12;
      }
      v12 = 1;
    }
    else
    {
LABEL_12:
      v12 = 0;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_242ACCBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  char v19;
  __int128 v20[4];
  _BYTE v21[80];

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v16 = sub_242C47F90();
  v15[2] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_4_9();
  v15[1] = v3 - v2;
  v15[0] = sub_242C47F0C();
  MEMORY[0x24BDAC7A8](v15[0]);
  OUTLINED_FUNCTION_4_9();
  v6 = v5 - v4;
  v7 = sub_242C47F30();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_9();
  v11 = v10 - v9;
  OUTLINED_FUNCTION_28_17();
  if (v18[3])
  {
    sub_242A587A8((uint64_t)v18, (uint64_t)v20);
    sub_242A6FDE8((uint64_t)v18);
    sub_242A64518(v20, (uint64_t)v21);
    sub_242A587A8((uint64_t)v21, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    if (!swift_dynamicCast())
    {
      v18[0] = 0;
      v18[1] = 0xE000000000000000;
      sub_242C48C38();
      OUTLINED_FUNCTION_4_27();
      OUTLINED_FUNCTION_14_14();
      sub_242C48314();
      sub_242C48E78();
      OUTLINED_FUNCTION_14_14();
      sub_242C48314();
      OUTLINED_FUNCTION_4_27();
      v19 = 3;
      OUTLINED_FUNCTION_3_29();
      sub_242A59170();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    sub_242A929A8((uint64_t)v18, (uint64_t *)&unk_257228D70);
  }
  v17 = v1;
  if (qword_257220560 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v7, (uint64_t)qword_257223378);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  MEMORY[0x24BDAC7A8](v13);
  v15[-2] = v17;
  sub_242C47F00();
  v14 = (uint8_t *)OUTLINED_FUNCTION_22_13();
  *(_WORD *)v14 = 0;
  sub_242AD13F0(v14, 2u, v11, v6, "Build Program", "", (void (*)(uint64_t *__return_ptr))sub_242AD2524);
  OUTLINED_FUNCTION_37_2();
}

uint64_t sub_242ACD34C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[30];
  _BYTE v8[64];

  sub_242A670D8(a1, (uint64_t)v7);
  sub_242BACC80((uint64_t)v8);
  type metadata accessor for MILProgramBuilder();
  swift_initStackObject();
  sub_242B001A0(v7, 0, 0, (uint64_t)v8);
  sub_242AFD004();
  if (v2)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v5 = v4;
    result = swift_release();
    *a2 = v5;
  }
  return result;
}

void sub_242ACD40C(char a1@<W0>, uint64_t a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;

  if (a1 == 2 || (a1 & 1) != 0)
  {
    if (qword_257220510 != -1)
      swift_once();
    v4 = qword_257259970;
    v5 = unk_257259978;
    v6 = __swift_project_boxed_opaque_existential_1(qword_257259958, qword_257259970);
    v7 = MEMORY[0x24BDAC7A8](v6);
    v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
    sub_242B76988(1, (uint64_t)v9, v4, v5, a2);
  }
  else
  {
    static ComputeDevice.gpu.getter();
    if (*((_QWORD *)&v20 + 1))
    {
      v3 = v20;
      *(_OWORD *)a2 = v19;
      *(_OWORD *)(a2 + 16) = v3;
      *(_OWORD *)(a2 + 32) = v21;
      *(_DWORD *)(a2 + 48) = v22;
    }
    else
    {
      if (qword_257220510 != -1)
        swift_once();
      v11 = qword_257259970;
      v12 = unk_257259978;
      v13 = __swift_project_boxed_opaque_existential_1(qword_257259958, qword_257259970);
      v14 = MEMORY[0x24BDAC7A8](v13);
      v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
      sub_242B76988(1, (uint64_t)v16, v11, v12, a2);
      sub_242A929A8((uint64_t)&v19, (uint64_t *)&unk_257228D70);
    }
  }
}

uint64_t sub_242ACD5CC(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  int v6;
  _OWORD v7[3];
  int v8;

  sub_242A66290(a1, (uint64_t)&v3);
  if (*((_QWORD *)&v4 + 1))
  {
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = v5;
    v8 = v6;
    v1 = *((_QWORD *)&v5 + 1);
    sub_242AD25B8(*((uint64_t *)&v5 + 1));
    sub_242A6FDE8((uint64_t)v7);
    if (v1 != 1)
    {
      if (v1 == 2)
        return 0;
      sub_242AD25CC(v1);
    }
  }
  else
  {
    sub_242A929A8((uint64_t)&v3, (uint64_t *)&unk_257228D70);
  }
  return 1;
}

uint64_t sub_242ACD664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = sub_242C47B7C();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = swift_task_alloc();
  return OUTLINED_FUNCTION_6_28();
}

uint64_t sub_242ACD6C0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[21];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[20] + 16))(v1, v0[16], v0[19]);
  type metadata accessor for MILProgramParser();
  swift_allocObject();
  v0[22] = sub_242B8A59C(v1, 1852399981, 0xE400000000000000);
  v2 = (_QWORD *)swift_task_alloc();
  v0[23] = v2;
  *v2 = v0;
  v2[1] = sub_242ACD754;
  return sub_242B89F9C();
}

uint64_t sub_242ACD754()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_28();
}

uint64_t sub_242ACD7B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_program);
  if (v2
    && (v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_inputs)) != 0
    && (v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_outputs)) != 0)
  {
    v14 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 128);
    sub_242A6FE24(v5, v0 + 16);
    sub_242A6FE24(v5, v0 + 72);
    sub_242AD25E0(v3);
    v6 = v2;
    sub_242AD25E0(v4);
    sub_242ACD5CC(v0 + 72);
    sub_242A929A8(v0 + 72, (uint64_t *)&unk_257228D70);
    v7 = OUTLINED_FUNCTION_2_0();
    sub_242ACBFFC();
    swift_release();
    sub_242A6FDE8(v5);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 136);
    swift_release();
    sub_242A6FDE8(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    v7 = 0;
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_242ACD944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release();
  sub_242A6FDE8(v2);
  OUTLINED_FUNCTION_20_19(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_242ACD9A8(void *a1, uint64_t a2, char a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  v5 = a1;
  v6 = sub_242ACDA58();
  v7 = sub_242ACDAA0();
  v8 = *(_QWORD *)(a2 + 40);
  if ((unint64_t)(v8 - 1) >= 2)
    swift_unknownObjectRetain();
  else
    v8 = 0;
  v9 = sub_242ACDC34(a3 & 1);
  v10 = objc_allocWithZone((Class)SNNEspressoV1ExecutionContext);
  return sub_242AD12C0(v5, v6, v7, v8, v9);
}

id sub_242ACDA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = 2;
  if (v1 == 2)
    v2 = 3;
  if (v1 == 1)
    v3 = 1;
  else
    v3 = v2;
  return objc_msgSend(objc_allocWithZone((Class)SNNComputeUnit), sel_initWithComputeUnitKind_, v3);
}

uint64_t sub_242ACDAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  if (v1 == 2)
  {
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_242C4B7C0;
    *(_QWORD *)(v2 + 32) = sub_242ACDA58();
    if (qword_257220510 != -1)
      swift_once();
    v3 = qword_257259970;
    v4 = unk_257259978;
    v5 = __swift_project_boxed_opaque_existential_1(qword_257259958, qword_257259970);
    v6 = MEMORY[0x24BDAC7A8](v5);
    v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v9 + 16))(v8, v6);
    sub_242B76988(1, (uint64_t)v8, v3, v4, (uint64_t)v16);
    v10 = 2;
    if (v17 == 2)
      v10 = 3;
    if (v17 == 1)
      v11 = 1;
    else
      v11 = v10;
    v12 = objc_msgSend(objc_allocWithZone((Class)SNNComputeUnit), sel_initWithComputeUnitKind_, v11);
    sub_242A6FDE8((uint64_t)v16);
    *(_QWORD *)(v2 + 40) = v12;
    v15 = v2;
    sub_242C4856C();
    return v15;
  }
  else
  {
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_242C4BF60;
    *(_QWORD *)(v14 + 32) = sub_242ACDA58();
    sub_242C4856C();
    return v14;
  }
}

id sub_242ACDC34(char a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_allocWithZone((Class)SNNComputePrecision);
  if ((a1 & 1) != 0)
    v3 = 1;
  else
    v3 = 2;
  return objc_msgSend(v2, sel_initWithComputePrecisionKind_, v3);
}

void sub_242ACDC70()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  id v8;
  id v9;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v2 = sub_242ACDDF8();
  v4 = v3;
  if (v2 >> 62)
    v5 = sub_242C48FC8();
  else
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4 != v5)
  {
    if (v4 >= v5)
    {
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_29_10(v4);
    OUTLINED_FUNCTION_29_10(v5 - 1);
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v4, v2);
      else
        swift_retain();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v7 = Strong;
        swift_retain();
        v8 = sub_242C080B8();
        objc_msgSend(v8, sel_lock);

        if ((*(_QWORD *)(v7 + 40) & 0x8000000000000000) != 0)
          swift_unknownObjectRetain();
        else
          sub_242C0854C();
        v9 = sub_242C080B8();
        objc_msgSend(v9, sel_unlock);
        swift_release();
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_31_15();

      }
      else
      {
        swift_release();
      }
      ++v4;
    }
    while (v5 != v4);
  }
  OUTLINED_FUNCTION_34();

  sub_242A6FDE8(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_136();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_136();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242ACDDF8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_34();
  OUTLINED_FUNCTION_28_1();
  sub_242C3772C();
  v1 = v0;
  OUTLINED_FUNCTION_4_0();
  return v1;
}

uint64_t sub_242ACDE40()
{
  sub_242ACDC70();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoV1Executor()
{
  return objc_opt_self();
}

uint64_t sub_242ACDE80()
{
  return sub_242ACDEA4();
}

uint64_t sub_242ACDEA4()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2572246E8);
  sub_242C48968();
  return v1;
}

uint64_t sub_242ACDF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  int v22;
  uint8_t *v23;
  NSObject *v24;
  os_signpost_type_t v25;
  os_signpost_id_t v26;
  uint64_t v27;
  os_signpost_type_t v28;
  os_signpost_id_t v29;
  uint8_t *v30;
  NSObject *v31;
  os_signpost_type_t v32;
  os_signpost_id_t v33;
  os_signpost_type_t v34;
  os_signpost_id_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t *v40;
  _QWORD v41[2];
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v45 = a2;
  v48 = a4;
  v53 = sub_242C47F0C();
  v49 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C47F30();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_242C480E0();
  v44 = a1;
  sub_242ACBB80(v13, (uint64_t (*)(_QWORD *, uint64_t *))sub_242AD1DCC);
  v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v16 = sub_242C480BC();
  v50 = v15;
  v51 = v16;
  sub_242A5CDDC(v16);
  v43 = sub_242ACE4C4(v50, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242ACBFCC();
  v18 = sub_242ACE80C(v17);
  v46 = v19;
  v47 = v18;
  swift_bridgeObjectRelease();
  if (qword_257220560 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v9, (uint64_t)qword_257223378);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
  swift_retain();
  sub_242C47F00();
  v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v21 = 0;
  v22 = sub_242AD14FC(v21, 2u, (uint64_t)v12, (uint64_t)v8, "Run Espresso Network", "", a3);
  v42 = v4;
  MEMORY[0x2494EDF68](v21, -1, -1);
  v49 = *(_QWORD *)(v49 + 8);
  ((void (*)(char *, uint64_t))v49)(v8, v53);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v22)
  {
    v50 = 0;
    v51 = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v50 = 0xD00000000000001ALL;
    v51 = 0x8000000242C68A60;
    ComputeDevice.description.getter();
    sub_242C48314();
    swift_bridgeObjectRelease();
    v52 = 4;
    sub_242A59170();
  }
  sub_242C47F00();
  v23 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v23 = 0;
  v24 = sub_242C47F24();
  v25 = sub_242C489A4();
  v26 = sub_242C47EF4();
  v41[1] = v20;
  _os_signpost_emit_with_name_impl(&dword_242A44000, v24, v25, v26, "Unbind Inputs", "", v23, 2u);
  v27 = v42;
  sub_242ACEBC8(v43, v44, v45);
  v45 = v27;
  v28 = sub_242C48998();
  v29 = sub_242C47EF4();
  _os_signpost_emit_with_name_impl(&dword_242A44000, v24, v28, v29, "Unbind Inputs", "", v23, 2u);

  MEMORY[0x2494EDF68](v23, -1, -1);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v49)(v8, v53);
  sub_242C47F00();
  v30 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v30 = 0;
  v31 = sub_242C47F24();
  v32 = sub_242C489A4();
  v33 = sub_242C47EF4();
  _os_signpost_emit_with_name_impl(&dword_242A44000, v31, v32, v33, "Unbind Outputs", "", v30, 2u);
  sub_242ACED60(v47);
  v34 = sub_242C48998();
  v35 = sub_242C47EF4();
  _os_signpost_emit_with_name_impl(&dword_242A44000, v31, v34, v35, "Unbind Outputs", "", v30, 2u);

  MEMORY[0x2494EDF68](v30, -1, -1);
  ((void (*)(char *, uint64_t))v49)(v8, v53);
  v36 = sub_242B09A3C();
  v38 = v37;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v40 = v48;
  *v48 = v36;
  v40[1] = v38;
  return result;
}

uint64_t sub_242ACE3E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *a1;
  v2 = a1[1];
  v3 = (_QWORD *)sub_242ACBF50();
  v4 = v3;
  v5 = v3[2];
  if (!v5)
    goto LABEL_17;
  v6 = v3[4] == v1 && v3[5] == v2;
  if (v6 || (result = sub_242C4925C(), (result & 1) != 0))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v5 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v8 = v4 + 7;
    v9 = 1;
    while (1)
    {
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      if (*(v8 - 1) == v1 && *v8 == v2)
        goto LABEL_7;
      result = sub_242C4925C();
      if ((result & 1) != 0)
        goto LABEL_7;
      v8 += 2;
      ++v9;
      if (v10 == v5)
        goto LABEL_17;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_242ACE4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  uint8_t *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  char *v24;
  os_signpost_type_t v25;
  char *v26;
  uint64_t v27;
  const char *v28;
  uint8_t *v29;
  os_signpost_id_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v35 = a2;
  v34 = a1;
  v2 = sub_242C47F3C();
  v33 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_242C47F0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  if (qword_257220560 != -1)
    swift_once();
  v13 = sub_242C47F30();
  __swift_project_value_buffer(v13, (uint64_t)qword_257223378);
  sub_242C47F00();
  v14 = sub_242C47F24();
  v15 = sub_242C489A4();
  if ((sub_242C48A34() & 1) != 0)
  {
    v16 = v2;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v14, v15, v18, "Bind Inputs", "", v17, 2u);
    v19 = v17;
    v2 = v16;
    MEMORY[0x2494EDF68](v19, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v12, v4);
  sub_242C47F60();
  swift_allocObject();
  sub_242C47F54();
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v12, v4);
  v21 = v36;
  swift_retain();
  v22 = sub_242ACB880(v34, v35, v21);
  v23 = sub_242C47F24();
  v24 = v37;
  sub_242C47F48();
  v25 = sub_242C48998();
  if ((sub_242C48A34() & 1) != 0)
  {
    swift_retain();
    v26 = v32;
    sub_242C47F6C();
    swift_release();
    v27 = v33;
    if ((*(unsigned int (**)(char *, uint64_t))(v33 + 88))(v26, v2) == *MEMORY[0x24BEE7810])
    {
      v28 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v2);
      v28 = "";
    }
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v23, v25, v30, "Bind Inputs", v28, v29, 2u);
    MEMORY[0x2494EDF68](v29, -1, -1);
  }

  v20(v24, v4);
  swift_release();
  return v22;
}

uint64_t sub_242ACE80C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_signpost_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint8_t *v24;
  os_signpost_id_t v25;
  uint8_t *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_signpost_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  const char *v45;
  uint64_t v46;
  uint8_t *v47;
  os_signpost_id_t v48;
  uint8_t *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v4 = sub_242C47F3C();
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v53 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_242C47F0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v51 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v51 - v14;
  if (qword_257220560 != -1)
    swift_once();
  v16 = sub_242C47F30();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_257223378);
  sub_242C47F00();
  v56 = v17;
  v18 = sub_242C47F24();
  v19 = sub_242C489A4();
  if ((sub_242C48A34() & 1) != 0)
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v52 = a1;
    v21 = v6;
    v22 = v2;
    v23 = v10;
    v24 = v20;
    *(_WORD *)v20 = 0;
    v25 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v18, v19, v25, "Bind Outputs", "", v24, 2u);
    v26 = v24;
    v10 = v23;
    v2 = v22;
    v6 = v21;
    a1 = v52;
    MEMORY[0x2494EDF68](v26, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v15, v6);
  sub_242C47F60();
  swift_allocObject();
  sub_242C47F54();
  v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v15, v6);
  swift_retain();
  v28 = sub_242ACB9BC(a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v58 = sub_242C480BC();
  v29 = sub_242A5AD4C(v28);
  v30 = swift_bridgeObjectRelease();
  v57 = v29;
  sub_242A5D190(v30, v31, v32, v33, v34, v35, v36, v37, v51, v52, v53, v54, v55, v56);
  v38 = v57;
  v39 = sub_242C47F24();
  sub_242C47F48();
  v40 = sub_242C48998();
  if ((sub_242C48A34() & 1) != 0)
  {
    v56 = v38;
    swift_retain();
    v41 = v53;
    sub_242C47F6C();
    swift_release();
    v42 = v54;
    v43 = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v54 + 88))(v41, v55) == *MEMORY[0x24BEE7810])
    {
      v44 = v10;
      v45 = "[Error] Interval already ended";
    }
    else
    {
      v46 = v42;
      v44 = v10;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v43);
      v45 = "";
    }
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    v48 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v39, v40, v48, "Bind Outputs", v45, v47, 2u);
    v49 = v47;
    v10 = v44;
    MEMORY[0x2494EDF68](v49, -1, -1);
    v38 = v56;
  }

  v27(v10, v6);
  swift_release();
  return v38;
}

uint64_t sub_242ACEBC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;

  if (a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_242C480E0();
  if (!v5)
    return swift_bridgeObjectRelease();
  while (2)
  {
    if (v5 >= 1)
    {
      v7 = 0;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x2494EC84C](v7, a1);
        }
        else
        {
          v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
          swift_retain();
        }
        if (!*(_QWORD *)(a3 + 16))
          goto LABEL_15;
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        sub_242C480E0();
        v11 = sub_242A61310(v10, v9);
        if ((v12 & 1) != 0)
        {
          v13 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v11);
          if (*(_QWORD *)(v13 + 16))
            break;
        }
        swift_release();
        swift_bridgeObjectRelease();
LABEL_16:
        if (v5 == ++v7)
          return swift_bridgeObjectRelease();
      }
      v14 = *(_QWORD *)(v13 + 32);
      if ((v14 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        sub_242C480E0();
        result = sub_242C48FC8();
        v5 = result;
        if (!result)
          return swift_bridgeObjectRelease();
        continue;
      }
      if (v14 >= *(_QWORD *)(a2 + 16))
        goto LABEL_19;
      swift_retain();
      swift_bridgeObjectRelease();
      sub_242ACEF1C(v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_242ACEE2C);
      swift_release();
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_242ACED60(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result;
    sub_242C480E0();
    sub_242C480E0();
    v3 = v2 + 64;
    do
    {
      v4 = *(_QWORD *)(v3 - 8);
      ObjectType = swift_getObjectType();
      sub_242C480E0();
      swift_unknownObjectRetain();
      v6 = swift_retain();
      sub_242ACEE2C(v6, ObjectType, v4);
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ACEE2C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(_BYTE *)(result + 216) == 1)
    return sub_242AD11A4(result, a2, a3);
  return result;
}

uint64_t sub_242ACEE40(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    swift_release();
    if (a1 && v3 == a1)
      return swift_release();
  }
  else if (!a1)
  {
    return swift_release();
  }
  v4 = swift_weakLoadStrong();
  if (v4)
  {
    v5 = v4;
    swift_retain();
    v6 = sub_242C080B8();
    objc_msgSend(v6, sel_lock);

    if ((*(_QWORD *)(v5 + 40) & 0x8000000000000000) != 0)
      swift_unknownObjectRetain();
    else
      sub_242C0854C();
    v7 = sub_242C080B8();
    objc_msgSend(v7, sel_unlock);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_31_15();

  }
  swift_weakAssign();
  return swift_release();
}

uint64_t sub_242ACEF1C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v5 = swift_retain();
  sub_242BC9F84(v5, v2, 0, 0);
  v7 = v6;
  ObjectType = swift_getObjectType();
  a2(a1, ObjectType, v7);
  return swift_unknownObjectRelease();
}

uint64_t sub_242ACEF88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  sub_242C480E0();
  if (v6 && (v7 = sub_242A61310(a1, a2), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
    swift_retain();
  }
  else
  {
    v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_242ACF01C(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 216);
  *(_BYTE *)(v1 + 216) = result & 1;
  *(_BYTE *)(v1 + 217) = (*(_BYTE *)(v1 + 217) | v2 ^ result) & 1;
  return result;
}

uint64_t sub_242ACF040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  sub_242C480E0();
  v3 = swift_retain();
  sub_242B8C89C(v3, v1, v2, v4, v5, v6, v7, v8, v10, v11);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242ACF0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _BOOL4 v8;
  int v9;
  uint64_t ObjectType;
  int v11;
  uint64_t v12;
  uint64_t v14;

  v8 = sub_242ACF9A4(a3, a4);
  if (*(_QWORD *)(v4 + 64) == 1)
  {
    v9 = 1;
  }
  else
  {
    ObjectType = swift_getObjectType();
    v9 = sub_242ACFA4C(ObjectType, a4);
  }
  sub_242ACF53C(a1, a2, (_BYTE *)&v14 + 1);
  v11 = BYTE1(v14);
  v12 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v14, v12, a4);
  if (v11 == 10)
    return v8 & v9 & (v14 == 10);
  else
    return 0;
}

uint64_t sub_242ACF18C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  unsigned __int8 v16;
  unsigned __int8 v18;
  uint64_t v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *(_QWORD *)(v6 + 152);
  v16 = *(_BYTE *)(v6 + 160);
  swift_retain_n();
  sub_242C480E0();
  v8 = sub_242BC9F84(v6, v6, 0, 0);
  v10 = sub_242ACF0B4(v4, v5, (uint64_t)v8, v9);
  swift_unknownObjectRelease();
  v11 = v10 ^ 1 | *(_BYTE *)(a2 + 88);
  v12 = sub_242ACEF88(v4, v5);
  if (v12)
  {
    v13 = v12;
    sub_242ACF01C(v11 & 1);
  }
  else
  {
    v19 = v7;
    v18 = v16;
    v14 = *(void **)(a2 + 80);
    type metadata accessor for EspressoBuffer();
    v13 = swift_allocObject();
    sub_242C480E0();
    sub_242C480E0();
    sub_242ACFF54(v4, v5, (uint64_t)&v19, &v18, 0, v11 & 1, v14);
    sub_242ACF040(v13);
  }
  swift_bridgeObjectRelease();
  sub_242ACEE40(0);
  sub_242ACEF1C(v13, (void (*)(uint64_t, uint64_t, uint64_t))sub_242ACF314);
  result = swift_release();
  *a3 = v13;
  return result;
}

uint64_t sub_242ACF314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_BYTE *)(a1 + 217) == 1)
    sub_242AD0BC8();
  if ((*(_BYTE *)(a1 + 216) & 1) != 0)
    return sub_242AD0F7C(a1, a2, a3);
  else
    return sub_242AD0D44(a1, a2, a3);
}

uint64_t sub_242ACF38C(uint64_t *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;

  v4 = *a1;
  v5 = *a2;
  result = sub_242ACF53C(a3, a4, &v21);
  if (v5 == 10 && v21 == 10)
  {
    result = sub_242ACF658();
    if ((v9 & 1) != 0)
      v8 = 4;
    else
      v8 = result;
  }
  else if ((v5 - 1) > 0xA)
  {
    v8 = 1;
  }
  else
  {
    v8 = qword_242C52238[(char)(v5 - 1)];
  }
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v4 + 32);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v10)
        goto LABEL_17;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  v14 = 1;
LABEL_17:
  if ((v5 - 1) > 0xA)
    v15 = 1;
  else
    v15 = qword_242C52238[(char)(v5 - 1)];
  if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
    goto LABEL_26;
  type metadata accessor for IOSurfaceTensorStorage();
  v21 = v4;
  v20 = v5;
  if ((sub_242AF7204(&v21, (char *)&v20) & 1) != 0)
  {
    v21 = v4;
    v20 = v5;
    sub_242C480E0();
    return sub_242AF7238(&v21, &v20);
  }
  else
  {
    v17 = sub_242C48AC4();
    v19 = v18;
    type metadata accessor for NativeTensorStorage();
    v21 = v4;
    v20 = v5;
    v16 = sub_242B1DCA4(&v21, (char *)&v20, v17, v19, v8);
    sub_242C480E0();
  }
  return v16;
}

uint64_t sub_242ACF53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t result;
  char v16[24];

  v4 = v3;
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 144);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_5;
  sub_242C480E0();
  v9 = sub_242A61310(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    v12 = *(void **)(v4 + 80);
    v13 = (void *)sub_242C48224();
    v14 = objc_msgSend(v12, sel_dataTypeForBlobWithName_, v13);

    sub_242C2BEBC((uint64_t)v14, v16);
    v11 = v16[0];
    swift_beginAccess();
    sub_242C480E0();
    sub_242B8C8A8(v11, a1, a2);
    goto LABEL_6;
  }
  LOBYTE(v11) = *(_BYTE *)(*(_QWORD *)(v8 + 56) + v9);
LABEL_6:
  swift_endAccess();
  result = swift_bridgeObjectRelease();
  *a3 = v11;
  return result;
}

uint64_t sub_242ACF658()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40) == 1)
    return 0;
  else
    return getpagesize();
}

uint64_t sub_242ACF694(uint64_t *a1, unsigned __int8 *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unsigned __int8 v16;
  uint64_t v17;

  v9 = a3 & 1;
  v10 = *a1;
  v11 = *a2;
  v12 = sub_242ACEF88(a4, a5);
  if (v12)
  {
    sub_242ACEE40(0);
    sub_242ACF01C(v9);
    return v12;
  }
  else
  {
    v17 = v10;
    v16 = v11;
    v14 = *(void **)(a6 + 80);
    type metadata accessor for EspressoBuffer();
    v13 = swift_allocObject();
    sub_242C480E0();
    sub_242C480E0();
    sub_242ACFF54(a4, a5, (uint64_t)&v17, &v16, 1, v9, v14);
    sub_242ACF040(v13);
  }
  return v13;
}

uint64_t sub_242ACF794@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  _QWORD *v17;
  _UNKNOWN **v18;
  _UNKNOWN **v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;

  v6 = *a1;
  v5 = a1[1];
  v7 = *(_QWORD *)(a2 + 120);
  v8 = *(_QWORD *)(a2 + 128);
  sub_242B5B370(*a1, v5, v7, v8, (uint64_t)&v24);
  v9 = v24;
  sub_242B5B370(v6, v5, v7, v8, (uint64_t)&v24);
  v10 = v25;
  swift_bridgeObjectRelease();
  sub_242ACF53C(v6, v5, &v24);
  v12 = v10 != 10 || v24 != 10;
  v13 = v12 | *(_BYTE *)(a2 + 89);
  v24 = v9;
  v26 = v10;
  v14 = sub_242ACF694(&v24, &v26, v13 & 1, v6, v5, a2);
  v16 = v15;
  if (*(_BYTE *)(v14 + 216) == 1)
  {
    v24 = v9;
    v26 = v10;
    type metadata accessor for EspressoTensorStorage();
    swift_allocObject();
    v17 = (_QWORD *)sub_242C08120(&v24, (char *)&v26, v14);
    swift_retain();
    v18 = &off_251390F38;
  }
  else
  {
    v24 = v9;
    v26 = v10;
    v17 = (_QWORD *)sub_242ACF38C(&v24, &v26, v6, v5);
    v18 = v19;
    swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v14 + 217) & 1) != 0 || ((v16 ^ 1) & 1) != 0 || (*(_BYTE *)(v14 + 216) & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    sub_242ACF314(v14, ObjectType, (uint64_t)v18);
  }
  if (object_getClass(v17) == (Class)_TtC14NeuralNetworks21EspressoTensorStorage)
  {
    if (v17)
    {
      v21 = v17[5];
      if ((v21 & 0x8000000000000000) == 0)
      {
        v22 = v17[4];
        swift_unknownObjectRetain();
        sub_242AD22EC(v22, v21);
        sub_242ACEE40((uint64_t)v17);
        sub_242AD22F8(v22, v21);
      }
    }
  }
  *a3 = v6;
  a3[1] = v5;
  a3[2] = (unint64_t)v17;
  a3[3] = (unint64_t)v18;
  a3[4] = v14;
  return sub_242C480E0();
}

BOOL sub_242ACF9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(v2 + 64) == 1)
    return 1;
  v6 = getpagesize();
  swift_getObjectType();
  v7 = dynamic_cast_existential_1_conditional(a1);
  if (v7)
  {
    return *(_QWORD *)(v7 + 32) == v6;
  }
  else
  {
    ObjectType = swift_getObjectType();
    v11 = sub_242BC84C4(ObjectType, a2, v10);
    if (v6 == -1)
      return 1;
    if (v6)
      return v11 % v6 == 0;
    else
      return v11 == 0;
  }
}

uint64_t sub_242ACFA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>), _QWORD, _QWORD, uint64_t, uint64_t))(a2 + 56))(&v3, sub_242AD1220, 0, MEMORY[0x24BEE1328], a1, a2);
  return v3;
}

uint64_t sub_242ACFA9C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoBufferCache()
{
  return objc_opt_self();
}

void sub_242ACFAE0()
{
  sub_242C49340();
  sub_242C4934C();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242ACFB1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_242ACDDF8();
  v4 = v3;
  result = OUTLINED_FUNCTION_135();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

void sub_242ACFB58()
{
  sub_242B648D4();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242ACFB74()
{
  return sub_242ACBB44();
}

uint64_t sub_242ACFB94()
{
  return sub_242ACBB78();
}

void sub_242ACFBB4()
{
  sub_242ACFAE0();
}

uint64_t sub_242ACFBCC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  char v6;

  v2 = v1;
  result = OUTLINED_FUNCTION_2_34();
  v5 = *(_DWORD *)(v2 + 208);
  switch(v5)
  {
    case 65568:
      v6 = 10;
      break;
    case 131080:
      v6 = 0;
      break;
    case 262152:
      v6 = 4;
      break;
    case 131104:
      v6 = 2;
      break;
    default:
      sub_242C48C38();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_32_13();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_3_29();
      sub_242A59170();
  }
  *a1 = v6;
  return result;
}

void sub_242ACFCEC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  void *Strong;
  int blob_shape;
  uint64_t v5;

  v2 = sub_242C485CC();
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 16) = 10;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_242C48290();
  blob_shape = espresso_network_query_blob_shape();
  OUTLINED_FUNCTION_135();
  if (blob_shape)
  {
    sub_242C48C38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_0();
    sub_242C48314();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_3_29();
    sub_242A59170();
  }
  sub_242A5B894();
  *a1 = v5;
}

uint64_t sub_242ACFEA4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;

  sub_242ACFCEC(&v9);
  result = v9;
  v1 = *(_QWORD *)(v9 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(v9 + 32);
    v3 = 1;
    while (1)
    {
      v4 = *v2++;
      v5 = v3 * v4;
      if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
        break;
      v3 = v5;
      if (!--v1)
        goto LABEL_7;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v5 = 1;
LABEL_7:
  swift_bridgeObjectRelease();
  sub_242ACFBCC((char *)&v8);
  v6 = v8 - 1;
  if (v6 > 0xA)
    v7 = 1;
  else
    v7 = qword_242C52238[(char)v6];
  result = v5 * v7;
  if ((unsigned __int128)(v5 * (__int128)v7) >> 64 != (v5 * v7) >> 63)
    goto LABEL_13;
  return result;
}

uint64_t sub_242ACFF54(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, char a5, char a6, void *a7)
{
  uint64_t v7;
  unsigned int v11;
  char v12;
  char v13;
  int v14;
  int v15;
  uint64_t v17;

  v11 = *a4;
  v12 = a5 & 1;
  v13 = a6 & 1;
  *(_BYTE *)(v7 + 217) = 0;
  swift_weakInit();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_BYTE *)(v7 + 32) = v12;
  swift_unknownObjectUnownedInit();
  bzero((void *)(v7 + 48), 0xA4uLL);
  OUTLINED_FUNCTION_9_24();
  bzero((void *)(v7 + 48), 0xA8uLL);
  OUTLINED_FUNCTION_28_1();
  swift_endAccess();
  *(_BYTE *)(v7 + 216) = v13;
  if (v11 >= 0xD || ((0x1515u >> v11) & 1) == 0)
  {
    sub_242C48F5C();
    __break(1u);
LABEL_6:
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v17 = OUTLINED_FUNCTION_44_0();
    MEMORY[0x2494EC0FC](v17, MEMORY[0x24BEE1768]);
    OUTLINED_FUNCTION_3_6();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    OUTLINED_FUNCTION_32_13();
    sub_242C48314();
    OUTLINED_FUNCTION_3_29();
    sub_242A59170();
  }
  v14 = dword_242C52200[(char)v11];
  OUTLINED_FUNCTION_9_24();
  *(_DWORD *)(v7 + 208) = v14;
  OUTLINED_FUNCTION_44_0();
  v15 = espresso_buffer_pack_tensor_shape();
  swift_endAccess();
  OUTLINED_FUNCTION_3_6();
  if (v15)
    goto LABEL_6;
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_3_6();

  return v7;
}

uint64_t sub_242AD0190()
{
  uint64_t v0;
  uint64_t v1;

  if (swift_weakLoadStrong())
  {
    v1 = swift_retain();
    sub_242C08768(v1, v1);
    swift_release();
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectUnownedDestroy();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_242AD020C()
{
  sub_242AD0190();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoBuffer()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EspressoBuffer.Mode()
{
  return &type metadata for EspressoBuffer.Mode;
}

uint64_t _s14NeuralNetworks14EspressoBufferC4ModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242AD02AC + 4 * byte_242C51FB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242AD02E0 + 4 * byte_242C51FB0[v4]))();
}

uint64_t sub_242AD02E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD02E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AD02F0);
  return result;
}

uint64_t sub_242AD02FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AD0304);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242AD0308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD0310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EspressoBuffer.DataOwnership()
{
  return &type metadata for EspressoBuffer.DataOwnership;
}

unint64_t sub_242AD0330()
{
  unint64_t result;

  result = qword_2572246C8;
  if (!qword_2572246C8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C520F4, &type metadata for EspressoBuffer.DataOwnership);
    atomic_store(result, (unint64_t *)&qword_2572246C8);
  }
  return result;
}

unint64_t sub_242AD0370()
{
  unint64_t result;

  result = qword_2572246D0;
  if (!qword_2572246D0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5215C, &type metadata for EspressoBuffer.Mode);
    atomic_store(result, (unint64_t *)&qword_2572246D0);
  }
  return result;
}

void sub_242AD03AC()
{
  sub_242AD257C(&qword_2572246D8, &qword_2572246E0, MEMORY[0x24BEE2C18]);
}

BOOL sub_242AD03D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == v3)
    return 0;
  if (v2 == 12)
    return v3 != 4;
  if (v2 == 10)
    return v3 != 10;
  return v2 != 4 || v3 != 12;
}

uint64_t sub_242AD042C(float *a1, uint64_t a2, const float *a3, uint64_t a4, char a5, unsigned __int8 a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  char v28;

  v25 = a4;
  v24 = a2;
  v13 = sub_242C49208();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a5;
  v27 = a6;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 16))(&v26, ObjectType, a8);
  result = v26;
  v19 = *(_QWORD *)(v26 + 16);
  if (v19)
  {
    v20 = (uint64_t *)(v26 + 32);
    v21 = 1;
    while (1)
    {
      v22 = *v20++;
      v23 = v21 * v22;
      if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63)
        break;
      v21 = v23;
      if (!--v19)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v23 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE38B8], v13);
    sub_242AB0FE8(a3, v25, &v28, a1, v24, &v27, v23, (uint64_t)v16);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

void *sub_242AD0578(void *a1, uint64_t a2, uint64_t a3)
{
  void *result;
  const void *v7;
  size_t v8;

  result = (void *)swift_beginAccess();
  v7 = *(const void **)(a3 + 48);
  if (v7)
  {
    if (a1)
      v8 = a2 - (_QWORD)a1;
    else
      v8 = 0;
    return memmove(a1, v7, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_242AD05E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  float *v7;
  float *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  const void **v15;
  const float *v16;
  uint64_t v17;
  uint64_t v18;
  void *result;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  uint64_t *v26;
  unsigned __int8 v27;
  char v28;
  unsigned __int8 v29[104];
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_17_17();
  v30 = v1;
  v31 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_242C49208();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_4_9();
  v13 = v12 - v11;
  v14 = *v4;
  sub_242ACFBCC((char *)v29);
  LOBYTE(v26) = v14;
  v15 = (const void **)(v0 + 48);
  if (sub_242AD03D8(v29, (unsigned __int8 *)&v26))
  {
    OUTLINED_FUNCTION_2_34();
    v16 = *(const float **)(v0 + 48);
    v17 = sub_242ACFEA4();
    if (v16)
      v18 = (uint64_t)v16 + v17;
    else
      v18 = 0;
    sub_242ACFBCC(&v28);
    v27 = v14;
    sub_242ACFCEC(&v26);
    result = v26;
    v20 = v26[2];
    if (v20)
    {
      v21 = v26 + 4;
      v22 = 1;
      while (1)
      {
        v23 = *v21++;
        v24 = v22 * v23;
        if ((unsigned __int128)(v22 * (__int128)v23) >> 64 != (v22 * v23) >> 63)
          break;
        v22 = v24;
        if (!--v20)
          goto LABEL_16;
      }
      __break(1u);
      goto LABEL_18;
    }
    v24 = 1;
LABEL_16:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BEE38B8], v9);
    sub_242AB0FE8(v16, v18, &v28, v8, v6, &v27, v24, v13);
    return (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  }
  else
  {
    result = (void *)OUTLINED_FUNCTION_2_34();
    if (!*v15)
    {
LABEL_18:
      __break(1u);
      return result;
    }
    if (v8)
      v25 = v6 - (_QWORD)v8;
    else
      v25 = 0;
    return memmove(v8, *v15, v25);
  }
}

uint64_t sub_242AD0774(const float *a1, uint64_t a2, char a3, float *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  float *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  char v28;

  v25 = a5;
  v24 = a4;
  v13 = sub_242C49208();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a3;
  v27 = a6;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 16))(&v26, ObjectType, a8);
  result = v26;
  v19 = *(_QWORD *)(v26 + 16);
  if (v19)
  {
    v20 = (uint64_t *)(v26 + 32);
    v21 = 1;
    while (1)
    {
      v22 = *v20++;
      v23 = v21 * v22;
      if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63)
        break;
      v21 = v23;
      if (!--v19)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v23 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE38B8], v13);
    sub_242AB0FE8(a1, a2, &v28, v24, v25, &v27, v23, (uint64_t)v16);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

void *sub_242AD08C0(const void *a1, uint64_t a2, uint64_t a3)
{
  size_t v6;

  swift_beginAccess();
  if (a1)
    v6 = a2 - (_QWORD)a1;
  else
    v6 = 0;
  return memmove(*(void **)(a3 + 48), a1, v6);
}

BOOL sub_242AD0928(unsigned __int8 *a1)
{
  unsigned __int8 v1;
  unsigned __int8 v3;
  unsigned __int8 v4;

  v1 = *a1;
  sub_242ACFBCC((char *)&v4);
  v3 = v1;
  return sub_242AD03D8(&v4, &v3);
}

uint64_t sub_242AD0968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *Strong;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v21 = 0;
  v5 = sub_242C485CC();
  *(_OWORD *)(v5 + 32) = 0u;
  *(_QWORD *)(v5 + 16) = 10;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_242C48290();
  LODWORD(Strong) = espresso_network_query_blob_shape();
  swift_release();
  if ((_DWORD)Strong)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (v8)
  {
    if ((v21 & 0x8000000000000000) != 0)
    {
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    if (v8 < v21)
      goto LABEL_24;
    v9 = 1;
    sub_242C480E0();
    sub_242A5B894();
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = 0;
      v9 = 1;
      do
      {
        v13 = *(_QWORD *)(v10 + 8 * v12 + 32);
        if ((unsigned __int128)(v9 * (__int128)v13) >> 64 != (v9 * v13) >> 63)
          goto LABEL_22;
        v9 *= v13;
      }
      while (v11 != ++v12);
    }
  }
  else
  {
    sub_242C480E0();
    v9 = 1;
  }
  v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 16);
  v14(&v20, a2, a3);
  v15 = *(_QWORD *)(v20 + 16);
  if (v15)
  {
    v16 = 0;
    v17 = 1;
    while (1)
    {
      v18 = *(_QWORD *)(v20 + 8 * v16 + 32);
      v19 = v17 * v18;
      if ((unsigned __int128)(v17 * (__int128)v18) >> 64 != (v17 * v18) >> 63)
        break;
      ++v16;
      v17 *= v18;
      if (v15 == v16)
      {
        swift_bridgeObjectRelease();
        if (v9 == v19)
          goto LABEL_17;
LABEL_19:
        v14(&v20, a2, a3);
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (v9 != 1)
    goto LABEL_19;
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_242AD0BC8()
{
  void *Strong;
  uint64_t result;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_242C48290();
  LODWORD(Strong) = espresso_network_bind_buffer();
  result = swift_release();
  if ((_DWORD)Strong)
  {
    sub_242C48C38();
    sub_242C48314();
    type metadata accessor for EspressoBuffer();
    sub_242C48E78();
    sub_242C48314();
    sub_242A59170();
  }
  return result;
}

uint64_t sub_242AD0D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *Strong;
  uint64_t result;
  uint64_t v8;
  char v9;

  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 64))(sub_242AD2304, a1, MEMORY[0x24BEE4AE0] + 8, a2, a3);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_242C48290();
  swift_beginAccess();
  LODWORD(Strong) = espresso_network_bind_buffer();
  swift_endAccess();
  swift_release();
  if ((_DWORD)Strong)
  {
    sub_242C48C38();
    sub_242C48314();
    type metadata accessor for EspressoBuffer();
    sub_242C48E78();
    sub_242C48314();
LABEL_6:
    sub_242A59170();
  }
  result = sub_242AD0968(a1, a2, a3);
  if (v9 != 2 || result | v8)
  {
    sub_242ACBD60(result, v8, v9);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_242AD0F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  char v7;
  uint64_t result;
  uint64_t v9;
  char v10;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  v7 = *(_BYTE *)(a1 + 32);
  sub_242C48290();
  swift_beginAccess();
  LODWORD(Strong) = espresso_network_bind_buffer();
  swift_endAccess();
  swift_release();
  if ((_DWORD)Strong)
  {
    sub_242C48C38();
    sub_242C48314();
    type metadata accessor for EspressoBuffer();
    sub_242C48E78();
    sub_242C48314();
LABEL_9:
    sub_242A59170();
  }
  result = sub_242AD0968(a1, a2, a3);
  if (v10 != 2 || result | v9)
  {
    sub_242ACBD60(result, v9, v10);
    goto LABEL_9;
  }
  if ((v7 & 1) == 0)
    return sub_242AD231C(v3, a1, a2, a3);
  return result;
}

uint64_t sub_242AD11A4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (*(_BYTE *)(result + 32) == 1)
    return sub_242AD2164(v3, result, a2, a3);
  return result;
}

uint64_t sub_242AD11C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (result)
  {
    v4 = result;
    result = swift_beginAccess();
    *(_QWORD *)(a3 + 48) = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242AD1220@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = getpagesize();
  v5 = (result - 1);
  if (__OFSUB__((_DWORD)result, 1))
  {
    __break(1u);
  }
  else if ((v5 & 0x80000000) == 0)
  {
    *a2 = (v5 & a1) == 0;
    return result;
  }
  result = sub_242C48F50();
  __break(1u);
  return result;
}

id sub_242AD12C0(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v5;
  void *v6;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v16[2];

  v6 = v5;
  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_242A8AA58(0, &qword_257224708);
  v11 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v16[0] = 0;
  v12 = objc_msgSend(v6, sel_initWithMILProgram_primaryComputeUnit_computeUnits_preferredMetalDevice_computePrecision_error_, a1, a2, v11, a4, a5, v16);

  if (v12)
  {
    v13 = v16[0];
  }
  else
  {
    v14 = v16[0];
    sub_242C47AF8();

    swift_willThrow();
  }

  swift_unknownObjectRelease();
  return v12;
}

void sub_242AD13F0(uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, void (*a7)(uint64_t *__return_ptr))
{
  NSObject *v11;
  os_signpost_type_t v12;
  os_signpost_id_t v13;
  os_signpost_type_t v14;
  os_signpost_id_t v15;
  uint8_t *buf;
  uint64_t v18;
  uint64_t v19;

  v11 = sub_242C47F24();
  v12 = sub_242C489A4();
  v13 = sub_242C47EF4();
  buf = a1;
  _os_signpost_emit_with_name_impl(&dword_242A44000, v11, v12, v13, a5, a6, a1, a2);
  a7(&v19);
  if (!v18)
  {
    v14 = sub_242C48998();
    v15 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v11, v14, v15, a5, a6, buf, a2);
  }

}

uint64_t sub_242AD14FC(uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7)
{
  NSObject *v12;
  os_signpost_type_t v13;
  os_signpost_id_t v14;
  uint64_t v15;
  os_signpost_id_t v16;

  v12 = sub_242C47F24();
  v13 = sub_242C489A4();
  v14 = sub_242C47EF4();
  _os_signpost_emit_with_name_impl(&dword_242A44000, v12, v13, v14, a5, a6, a1, a2);
  objc_msgSend(*(id *)(a7 + 80), sel_plan);
  v15 = espresso_plan_execute_sync();
  LOBYTE(a7) = sub_242C48998();
  v16 = sub_242C47EF4();
  _os_signpost_emit_with_name_impl(&dword_242A44000, v12, (os_signpost_type_t)a7, v16, a5, a6, a1, a2);
  swift_release();

  return v15;
}

uint64_t sub_242AD15FC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_242AD16CC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_242A8ABFC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_242A8ABFC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_242C480E0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_242AD16CC(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_242AD1820((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_242C48ADC();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_242AD18E4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_242C48D1C();
    if (!v8)
    {
      result = sub_242C48F50();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_242AD1820(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242AD18E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_242AD1978(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_242AD1B98(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_242AD1B98((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_242AD1978(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_242C48344();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  sub_242AD1AE8(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_242C48C44();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_242C4901C();
  __break(1u);
LABEL_14:
  result = sub_242C48F50();
  __break(1u);
  return result;
}

void sub_242AD1AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220FC8);
    v4 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_1_0();
}

void sub_242AD1B44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_242C48380();
    OUTLINED_FUNCTION_12_16(v4);
  }
  else
  {
    v3 = MEMORY[0x2494EBEF8](15, a1 >> 16);
    OUTLINED_FUNCTION_12_16(v3);
  }
  OUTLINED_FUNCTION_1_0();
}

char *sub_242AD1B98(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220FC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_242AD1D30(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_242AD1C6C(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_242AD1C6C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_242C4901C();
  __break(1u);
  return result;
}

char *sub_242AD1D30(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_242C4901C();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_242AD1DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_242ACDF08(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_242AD1DCC(uint64_t *a1)
{
  return sub_242ACE3E4(a1) & 1;
}

uint64_t sub_242AD1DE8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v6 = (_QWORD *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_242BA2DE8(0, v5, v6);
    v7 = sub_242AD1F64((uint64_t)v6, v5, v3, a2);
  }
  else
  {
    v8 = (_QWORD *)swift_slowAlloc();
    sub_242BA2DE8(0, v5, v8);
    v7 = sub_242AD1F64((uint64_t)v8, v5, v3, a2);
    MEMORY[0x2494EDF68](v8, -1, -1);
  }
  return v7 & 1;
}

uint64_t sub_242AD1F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t i;
  unint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = *(_QWORD *)(a3 + 16);
  if (v28)
  {
    v29 = a4 + 56;
    v27 = a3 + 32;
    sub_242C480E0();
    v26 = 0;
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      sub_242C49340();
      sub_242C480E0();
      sub_242C4817C();
      v9 = sub_242C49394();
      v10 = -1 << *(_BYTE *)(a4 + 32);
      v11 = v9 & ~v10;
      v12 = v11 >> 6;
      v13 = 1 << v11;
      if (((1 << v11) & *(_QWORD *)(v29 + 8 * (v11 >> 6))) == 0)
        goto LABEL_22;
      v14 = *(_QWORD *)(a4 + 48);
      v15 = (_QWORD *)(v14 + 16 * v11);
      v16 = *v15 == v8 && v15[1] == v7;
      if (!v16 && (sub_242C4925C() & 1) == 0)
        break;
      result = swift_bridgeObjectRelease();
LABEL_10:
      v18 = *(_QWORD *)(a1 + 8 * v12);
      *(_QWORD *)(a1 + 8 * v12) = v13 | v18;
      if ((v13 & v18) == 0)
      {
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          return result;
        }
        if (++v26 == *(_QWORD *)(a4 + 16))
        {
          v24 = 1;
LABEL_26:
          swift_bridgeObjectRelease();
          return v24;
        }
      }
LABEL_23:
      if (++v5 == v28)
      {
        v24 = 0;
        goto LABEL_26;
      }
    }
    v19 = ~v10;
    for (i = v11 + 1; ; i = v21 + 1)
    {
      v21 = i & v19;
      if (((*(_QWORD *)(v29 + (((i & v19) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v19)) & 1) == 0)
        break;
      v22 = (_QWORD *)(v14 + 16 * v21);
      v23 = *v22 == v8 && v22[1] == v7;
      if (v23 || (sub_242C4925C() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v12 = v21 >> 6;
        v13 = 1 << v21;
        goto LABEL_10;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  return 0;
}

uint64_t sub_242AD2164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  unsigned __int8 v21;

  sub_242ACFBCC((char *)v20);
  v8 = v20[0];
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 8))(v20, a3, a4);
  v9 = v20[0];
  LOBYTE(v20[0]) = v8;
  v21 = v9;
  if (!sub_242AD03D8((unsigned __int8 *)v20, &v21))
    return (*(uint64_t (**)(void *(*)(void *, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 64))(sub_242AD22B0, a2, MEMORY[0x24BEE4AE0] + 8, a3, a4);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 48);
  v11 = sub_242ACFEA4();
  MEMORY[0x24BDAC7A8](v11);
  v14 = v10;
  v15 = v12;
  v16 = v8;
  v17 = v9;
  v18 = a1;
  v19 = a4;
  return (*(uint64_t (**)(uint64_t (*)(float *, uint64_t)))(a4 + 64))(sub_242AD22C8);
}

void *sub_242AD22B0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AD0578(a1, a2, v2);
}

uint64_t sub_242AD22C8(float *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AD042C(a1, a2, *(const float **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_BYTE *)(v2 + 33), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_242AD22EC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    return swift_unknownObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_242AD22F8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    return swift_unknownObjectRelease();
  else
    return swift_release();
}

uint64_t sub_242AD2304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AD11C8(a1, a2, v2);
}

uint64_t sub_242AD231C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  sub_242ACFBCC((char *)v17);
  v7 = LOBYTE(v17[0]);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 8))(v17, a3, a4);
  v8 = v17[0];
  LOBYTE(v17[0]) = v7;
  LOBYTE(v16) = v8;
  if (!sub_242AD03D8((unsigned __int8 *)v17, (unsigned __int8 *)&v16))
    return (*(uint64_t (**)(void *(*)(const void *, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 56))(sub_242AD24E8, a2, MEMORY[0x24BEE4AE0] + 8, a3, a4);
  swift_beginAccess();
  sub_242ACFCEC(&v16);
  result = v16;
  v10 = *(_QWORD *)(v16 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v16 + 32);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v10)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    v14 = 1;
LABEL_9:
    result = swift_bridgeObjectRelease();
    if ((v7 - 1) > 0xA)
      v15 = 1;
    else
      v15 = qword_242C52238[(char)(v7 - 1)];
    if ((unsigned __int128)(v14 * (__int128)v15) >> 64 == (v14 * v15) >> 63)
    {
      MEMORY[0x24BDAC7A8](result);
      return (*(uint64_t (**)(uint64_t (*)(const float *, uint64_t)))(a4 + 56))(sub_242AD2500);
    }
  }
  __break(1u);
  return result;
}

void *sub_242AD24E8(const void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AD08C0(a1, a2, v2);
}

uint64_t sub_242AD2500(const float *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AD0774(a1, a2, *(_BYTE *)(v2 + 16), *(float **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_242AD2524@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_242ACD34C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_242AD253C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257227870;
  if (!qword_257227870)
  {
    v1 = sub_242C48944();
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_257227870);
  }
  return result;
}

void sub_242AD257C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x2494EDE24](a3, v5), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AD25B8(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2)
    return swift_unknownObjectRetain();
  return result;
}

uint64_t sub_242AD25CC(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t sub_242AD25E0(uint64_t result)
{
  if (result)
  {
    sub_242C480E0();
    return sub_242C480E0();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_34()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_4_27()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 312);
  *(_QWORD *)(v0 - 320) = *(_QWORD *)(v0 - 320);
  *(_QWORD *)(v0 - 312) = v1;
}

uint64_t OUTLINED_FUNCTION_6_28()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_9_24()
{
  return swift_beginAccess();
}

unint64_t OUTLINED_FUNCTION_12_16(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

void OUTLINED_FUNCTION_13_20(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_242A929A8(v2 - 160, a2);
}

uint64_t OUTLINED_FUNCTION_20_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

id OUTLINED_FUNCTION_21_14()
{
  uint64_t v0;
  uint64_t v1;

  return objc_msgSend(*(id *)(v0 + 80), (SEL)(v1 + 978));
}

uint64_t OUTLINED_FUNCTION_22_13()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_25_13()
{
  uint64_t v0;

  return sub_242A66290(v0 - 160, v0 - 320);
}

uint64_t OUTLINED_FUNCTION_26_16()
{
  uint64_t v0;

  return sub_242A766C4(v0 - 224, v0 - 160);
}

uint64_t OUTLINED_FUNCTION_28_17()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v0, v1 - 320);
}

uint64_t OUTLINED_FUNCTION_29_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_242B4B240(a1, v1, v2);
}

__n128 OUTLINED_FUNCTION_30_13()
{
  uint64_t v0;

  return *(__n128 *)(v0 - 320);
}

uint64_t OUTLINED_FUNCTION_31_15()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_32_13()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_33_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242B127BC(v0, v1);
}

void sub_242AD2750()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  v1 = objc_msgSend(v0, sel_shape);
  sub_242AAB33C();
  v2 = sub_242C48548();

  if (v2 >> 62)
    goto LABEL_12;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (v3 >= 1)
    {
      v4 = 0;
      v5 = 1;
      while (1)
      {
        v6 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2494EC84C](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
        v7 = v6;
        v8 = (uint64_t)objc_msgSend(v6, sel_integerValue);

        if ((unsigned __int128)(v5 * (__int128)v8) >> 64 != (v5 * v8) >> 63)
          break;
        ++v4;
        v5 *= v8;
        if (v3 == v4)
          goto LABEL_13;
      }
      __break(1u);
LABEL_12:
      sub_242C480E0();
      v3 = sub_242C48FC8();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_242AD2880(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;

  if (result >= a2)
  {
    v4 = __OFSUB__(result, a3);
    v3 = result - a3 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  if (v3 == v4)
    __break(1u);
  return result;
}

uint64_t Dense.weight.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 < 0)
    {
      *a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

uint64_t sub_242AD291C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Dense.weight.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_242AD2994(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_retain();
  return Dense.weight.setter((uint64_t)&v2);
}

uint64_t Dense.weight.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_31_16(a1);
}

void Dense.weight.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t sub_242AD2A8C(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return OUTLINED_FUNCTION_31_16(a1);
  v2 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_31_16(v2);
  return swift_release();
}

uint64_t Dense.$weight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  return swift_retain();
}

void Dense.bias.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_BYTE *)(v1 + 26) == 1)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 32);
    if ((~v2 & 0xF000000000000007) != 0)
    {
      if (v2 < 0)
      {
        *a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    else
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    OUTLINED_FUNCTION_4_28();
    __break(1u);
  }
  else
  {
    *a1 = 0;
  }
}

void sub_242AD2B9C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  Dense.bias.getter(&v2);
  *a1 = v2;
}

void sub_242AD2C14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  swift_retain();
  Dense.bias.setter(&v3, v1, v2);
}

void Dense.bias.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  if (*(_BYTE *)(v3 + 26) == 1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_34_10(v4, a2, a3);
LABEL_5:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v4)
      goto LABEL_5;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void Dense.bias.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  a1[1] = v1;
  if (*(_BYTE *)(v1 + 26) != 1)
  {
    *a1 = 0;
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
LABEL_6:
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242AD2DA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 26))
    {
      if (v3)
      {
        v4 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_34_10(v4, v5, v6);
LABEL_9:
        swift_release();
        return;
      }
      goto LABEL_12;
    }
    if (!v3)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 26))
  {
    if (v3)
    {
      swift_release();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_34_10((uint64_t)a1, a2, a3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

uint64_t Dense.$bias.getter@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  __int16 v3;
  __int16 v4;
  uint64_t result;

  if (v1[26] == 1)
  {
    if (v1[25])
      v3 = 256;
    else
      v3 = 0;
    v4 = v3 | v1[24];
    result = swift_retain();
  }
  else
  {
    result = 0;
    v4 = 0;
  }
  *(_QWORD *)a1 = result;
  *(_WORD *)(a1 + 8) = v4;
  return result;
}

uint64_t Dense.isEveryParameterInitialized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  BOOL v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    return 1;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  v5 = !v4;
  result = v5 ^ 1u;
  if (v4 && *(_BYTE *)(v0 + 26))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
    result = (~v6 & 0xF000000000000007) != 0 && v6 < 0;
  }
  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t Dense.unitCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_242AD2F38@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;

  v5 = *a1;
  v6 = *((_BYTE *)a1 + 8);
  v7 = *((_BYTE *)a1 + 9);
  v8 = *a2;
  v9 = *((unsigned __int16 *)a2 + 4);
  OUTLINED_FUNCTION_226();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224718);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v10 + 16) = 0;
  v11 = *(_QWORD *)(v5 + 32);
  if ((~v11 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_11:
    OUTLINED_FUNCTION_4_28();
    __break(1u);
    goto LABEL_12;
  }
  if ((v11 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_11;
  }
  v12 = v10;
  v21 = v7;
  OUTLINED_FUNCTION_30_14();
  if (!(!v14 & v13))
  {
LABEL_12:
    OUTLINED_FUNCTION_11();
    sub_242C480E0();
    OUTLINED_FUNCTION_4_18();
  }
  v15 = *(_QWORD *)(v3 + 40);
  if (v8)
  {
    v16 = v9 & 1;
    v17 = (v9 >> 8) & 1;
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_5();
    v18 = v8;
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_5();
    sub_242A785DC(0);
    v18 = v19;
    v16 = 0;
    LOBYTE(v17) = 1;
  }
  OUTLINED_FUNCTION_17_1();
  swift_release();
  result = swift_release();
  *(_QWORD *)a3 = v5;
  *(_BYTE *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 9) = v21;
  *(_QWORD *)(a3 + 16) = v18;
  *(_BYTE *)(a3 + 24) = v16;
  *(_BYTE *)(a3 + 25) = v17;
  *(_BYTE *)(a3 + 26) = v8 != 0;
  *(_QWORD *)(a3 + 32) = v15;
  *(_QWORD *)(a3 + 40) = v12;
  return result;
}

void Dense.init(weight:bias:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  char v29;

  v4 = *a1;
  v5 = *a2;
  OUTLINED_FUNCTION_226();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224718);
  v6 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v6 + 16) = 0;
  OUTLINED_FUNCTION_2_0();
  v7 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_15_16(v7, v8, v9, v10, v11, v12, v13);
  v15 = v14;
  OUTLINED_FUNCTION_11();
  swift_release();
  if (v5)
  {
    v16 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_15_16(v16, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_12_9();
  }
  v23 = *(_QWORD *)(v4 + 16);
  v24 = *(_QWORD *)(v23 + 152);
  if (*(_QWORD *)(v24 + 16) <= 1uLL)
  {
LABEL_12:
    sub_242C480E0();
    OUTLINED_FUNCTION_4_18();
  }
  v25 = *(_QWORD *)(v24 + 40);
  if (!v5)
  {
LABEL_9:
    swift_release();
    *(_QWORD *)a3 = v15;
    OUTLINED_FUNCTION_29_11();
    *(_BYTE *)(a3 + 26) = v5 != 0;
    *(_QWORD *)(a3 + 32) = v25;
    *(_QWORD *)(a3 + 40) = v6;
    return;
  }
  v26 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  v28 = *(_QWORD *)(v23 + 152);
  if (!*(_QWORD *)(v28 + 16))
  {
    sub_242C480E0();
    goto LABEL_12;
  }
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v28 + 32);
  v29 = sub_242C00B0C(v26, inited);
  swift_setDeallocating();
  if ((v29 & 1) != 0)
  {
    OUTLINED_FUNCTION_17_1();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void Dense.init(unitCount:weightInitializer:biasInitializer:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_226();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224718);
  v6 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v6 + 16) = 0;
  if (a1 < 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    v7 = v6;
    OUTLINED_FUNCTION_2_0();
    swift_retain();
    v8 = OUTLINED_FUNCTION_11();
    sub_242A78594(v8);
    v10 = v9;
    swift_allocObject();
    OUTLINED_FUNCTION_32_14();
    if (a2)
      sub_242A78594(a2);
    else
      sub_242A785DC(0);
    OUTLINED_FUNCTION_17_1();
    swift_release();
    swift_release();
    swift_release();
    *(_QWORD *)a3 = v10;
    OUTLINED_FUNCTION_29_11();
    *(_BYTE *)(a3 + 26) = a2 != 0;
    *(_QWORD *)(a3 + 32) = a1;
    *(_QWORD *)(a3 + 40) = v7;
  }
}

uint64_t Dense.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 152) + 16);
  if ((unint64_t)(v2 - 5) <= 0xFFFFFFFFFFFFFFFCLL)
    sub_242A59264();
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(unsigned __int8 *)(v1 + 26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v5 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v5 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v5 + 32) = v3;
  OUTLINED_FUNCTION_11();
  *(_QWORD *)(v5 + 40) = TensorShape.subscript.getter(v2 - 1);
  sub_242A78630();
  OUTLINED_FUNCTION_17_1();
  result = swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    v7 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v7 + 32) = v3;
    OUTLINED_FUNCTION_6();
    sub_242A78630();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Dense.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t (**v41)(_QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  int v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  int v57;
  _BYTE v58[48];
  uint64_t v59;
  __int128 v60;
  char v61;
  char v62;

  v4 = *a1;
  v5 = *v2;
  v6 = v2[2];
  v7 = *((_BYTE *)v2 + 26);
  v8 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224720);
  v9 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 48) = 0;
  *(_QWORD *)(v9 + 32) = 0;
  *(_BYTE *)(v9 + 56) = -2;
  *(_QWORD *)(v9 + 72) = 0;
  *(_QWORD *)(v9 + 80) = 0;
  *(_QWORD *)(v9 + 64) = 0;
  *(_BYTE *)(v9 + 88) = -3;
  OUTLINED_FUNCTION_8_17();
  if (v11)
    goto LABEL_36;
  if ((v10 & 0x8000000000000000) == 0)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_14();
  if (!(!v11 & v14))
    goto LABEL_31;
  v15 = v12;
  *(_QWORD *)(v12 + 96) = v2[5];
  *(_OWORD *)(v12 + 104) = xmmword_242C52290;
  *(_BYTE *)(v12 + 120) = 0;
  *(_OWORD *)v58 = xmmword_242C4B7F0;
  v58[16] = 1;
  *(_QWORD *)&v58[24] = v12;
  *(_QWORD *)&v54 = v8;
  OUTLINED_FUNCTION_44_0();
  sub_242C480E0();
  if ((sub_242C1AFF8((uint64_t *)&v54) & 1) == 0)
  {
    *(_QWORD *)v58 = v8;
    *(_OWORD *)&v58[8] = xmmword_242C4CD60;
    v58[24] = 0;
    *(_OWORD *)&v58[32] = xmmword_242C4B7F0;
    LOBYTE(v59) = 1;
    *(_QWORD *)&v60 = v15;
    v62 = 11;
    OUTLINED_FUNCTION_44_0();
    sub_242A8E344(2, 4, 1);
    sub_242C480E0();
    OUTLINED_FUNCTION_23_17();
    goto LABEL_33;
  }
  sub_242A8E358(2, 4, 1);
  OUTLINED_FUNCTION_3_6();
  swift_bridgeObjectRelease_n();
  *(_QWORD *)v58 = v4;
  OUTLINED_FUNCTION_24_15();
  (*(void (**)(__int128 *__return_ptr))(v16 + 32))(&v54);
  OUTLINED_FUNCTION_8_17();
  if (v11)
    goto LABEL_36;
  if ((v17 & 0x8000000000000000) == 0)
    goto LABEL_38;
  v18 = v54;
  *(_QWORD *)v58 = v17 & 0x7FFFFFFFFFFFFFFFLL;
  OUTLINED_FUNCTION_24_15();
  (*(void (**)(_BYTE *__return_ptr))(v19 + 32))(v58);
  v20 = v58[0];
  if (v18 != v58[0])
  {
    if (qword_2572205C0 != -1)
      swift_once();
    v13 = qword_257259A18;
    v21 = v20 + 13 * v18;
    if (v21 >= *(_QWORD *)(qword_257259A18 + 16))
    {
      __break(1u);
LABEL_31:
      *(_QWORD *)&v58[8] = 0;
      *(_QWORD *)&v58[16] = 0;
      *(_QWORD *)v58 = 1;
      v58[24] = -1;
      *(_QWORD *)&v58[40] = 0;
      v59 = 0;
      *(_QWORD *)&v58[32] = v13;
      LOBYTE(v60) = -1;
      v62 = 4;
      OUTLINED_FUNCTION_44_0();
      sub_242C480E0();
      goto LABEL_33;
    }
    v18 = *(unsigned __int8 *)(qword_257259A18 + v21 + 32);
    if (v18 == 13)
    {
      *(_QWORD *)v58 = v4;
      OUTLINED_FUNCTION_24_15();
      OUTLINED_FUNCTION_8_17();
      if (!v11)
      {
        if (v45 < 0)
        {
LABEL_40:
          v46 = v43;
          v47 = v44;
          *(_QWORD *)v58 = v45 & 0x7FFFFFFFFFFFFFFFLL;
          OUTLINED_FUNCTION_24_15();
          *(_QWORD *)v58 = v46;
          *(_QWORD *)&v58[8] = v47;
          *(_OWORD *)&v58[16] = xmmword_242C4CD60;
          v58[32] = 0;
          *(_QWORD *)&v58[40] = v48;
          v59 = v49;
          v60 = xmmword_242C4E7C0;
          v61 = 0;
          v62 = 1;
          OUTLINED_FUNCTION_23_17();
LABEL_33:
          sub_242A59264();
        }
        goto LABEL_38;
      }
      goto LABEL_36;
    }
  }
  v22 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)&v54 = *(_QWORD *)(v22 + 152);
  OUTLINED_FUNCTION_8_17();
  if (v11)
    goto LABEL_36;
  if ((v23 & 0x8000000000000000) == 0)
    goto LABEL_38;
  *(_QWORD *)&v50 = *(_QWORD *)(*(_QWORD *)(v23 + 16) + 152);
  sub_242C34B34((uint64_t)&v54, (uint64_t)&v50, v58);
  OUTLINED_FUNCTION_8_17();
  if (v11)
  {
LABEL_36:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_39:
    v43 = OUTLINED_FUNCTION_4_28();
    __break(1u);
    goto LABEL_40;
  }
  if ((v24 & 0x8000000000000000) == 0)
    goto LABEL_38;
  v26 = *(_QWORD *)v58;
  v27 = *(_QWORD *)(v24 + 16);
  if ((v7 & 1) != 0)
  {
    v28 = *(_QWORD *)(v6 + 32);
    if ((v25 & ~v28) != 0)
    {
      if (v28 < 0)
      {
        v29 = *(_QWORD *)(v28 + 16);
        swift_retain();
        goto LABEL_22;
      }
LABEL_38:
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
      goto LABEL_39;
    }
    goto LABEL_36;
  }
  v29 = 0;
LABEL_22:
  *(_QWORD *)&v54 = v26;
  BYTE8(v54) = v18;
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = v7;
  swift_retain();
  OUTLINED_FUNCTION_11();
  v30 = sub_242BD0D40((uint64_t)sub_242AD4718);
  v32 = v31;
  swift_release();
  *(_OWORD *)&v58[8] = xmmword_242C522A0;
  *(_OWORD *)&v58[24] = xmmword_242C522B0;
  *(_QWORD *)v58 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
  *(_QWORD *)&v58[40] = "init(id:input:weight:bias:resultDescriptor:creationSite:backward:)";
  v59 = 66;
  LOWORD(v60) = 2;
  type metadata accessor for LinearOperation();
  OUTLINED_FUNCTION_2_0();
  sub_242B01F18(0, 0, 0, v22, v27, v29, (uint64_t *)&v54, (uint64_t)v58, v30, v32);
  v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  v36 = *(_QWORD *)(v5 + 32);
  if ((~v36 & 0xF000000000000007) == 0)
    goto LABEL_36;
  if ((v36 & 0x8000000000000000) == 0)
    goto LABEL_38;
  v37 = inited + 32;
  *(_QWORD *)(inited + 32) = v36 & 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(inited + 40) = v4;
  swift_retain();
  sub_242A70278(v36);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_44_0();
  v38 = 0;
  v39 = 0;
  while (1)
  {
    v40 = v38;
    sub_242A66290(*(_QWORD *)(*(_QWORD *)(v37 + 8 * v39) + 16) + 168, (uint64_t)&v50);
    if (*((_QWORD *)&v51 + 1))
      break;
    sub_242A662D8((uint64_t)&v50);
    v38 = 1;
    v39 = 1;
    if ((v40 & 1) != 0)
    {
      OUTLINED_FUNCTION_3_6();
      v57 = 0;
      v56 = 0u;
      v54 = 0u;
      v55 = 0u;
      goto LABEL_29;
    }
  }
  OUTLINED_FUNCTION_3_6();
  v54 = v50;
  v55 = v51;
  v56 = v52;
  v57 = v53;
LABEL_29:
  OUTLINED_FUNCTION_3_6();
  v41 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257221EE8, (uint64_t (*)(uint64_t))type metadata accessor for LinearOperation, (uint64_t)&unk_242C54D24);
  sub_242BC9830(v34, v41, 0, (uint64_t)&v54, a2);
  return swift_release();
}

uint64_t sub_242AD3BF0(uint64_t result, _QWORD *a2, char a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[72];
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[56];
  _BYTE v46[56];
  _BYTE v47[56];
  const char *v48;
  __int128 v49;
  __int128 v50;
  const char *v51;
  uint64_t v52;
  __int16 v53;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = a2[2];
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v8 == 1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = *(_QWORD *)(result + 32);
  v11 = a2[4];
  v10 = a2[5];
  if ((a3 & 1) == 0)
  {
    v16 = 0;
    v41 = 0;
    v13 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v10 + 16);
LABEL_8:
    v49 = xmmword_242C522A0;
    v50 = xmmword_242C522C0;
    v48 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
    v51 = "init(id:gradient:input:weight:bias:creationSite:)";
    v52 = 49;
    v53 = 2;
    type metadata accessor for LinearGradientOperation();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_242B02150(0, 0, 0, v13, v14, v15, v16, (uint64_t)&v48);
    v18 = v17;
    sub_242A66290(v13 + 168, (uint64_t)v47);
    sub_242A66290((uint64_t)v47, (uint64_t)v46);
    sub_242A66290((uint64_t)v46, (uint64_t)v45);
    type metadata accessor for ContextManager();
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)v42);
    swift_release();
    v19 = v44;
    swift_retain();
    sub_242A5DC30((uint64_t)v42);
    sub_242B93328();
    sub_242B933C0((uint64_t)v42);
    swift_release();
    v20 = v43;
    swift_retain();
    sub_242A5DC30((uint64_t)v42);
    type metadata accessor for TensorRepresentation();
    v21 = swift_allocObject();
    v42[0] = 1;
    v22 = sub_242B4C3E0(v18, 0, v45, 0x100000000, v19, v20, v21);
    type metadata accessor for TensorHandle();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v22;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242A662D8((uint64_t)v46);
    sub_242A8A510(&qword_257221EE0, (uint64_t (*)(uint64_t))type metadata accessor for LinearGradientOperation, (uint64_t)&unk_242C54C0C);
    sub_242A66290((uint64_t)v47, (uint64_t)v46);
    sub_242A66290((uint64_t)v46, (uint64_t)v45);
    swift_retain_n();
    sub_242B93328();
    sub_242B933C0((uint64_t)v42);
    swift_release();
    v24 = v44;
    swift_retain();
    sub_242A5DC30((uint64_t)v42);
    sub_242B93328();
    sub_242B933C0((uint64_t)v42);
    swift_release();
    v25 = v43;
    swift_retain();
    sub_242A5DC30((uint64_t)v42);
    v26 = swift_allocObject();
    v42[0] = 1;
    v27 = sub_242B4C3E0(v18, 1, v45, 0x100000000, v24, v25, v26);
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v27;
    swift_retain();
    sub_242BC995C();
    swift_release();
    swift_release();
    sub_242A662D8((uint64_t)v46);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_242C4B7F0;
    swift_retain();
    swift_retain();
    v30 = sub_242AC4964();
    *(_QWORD *)(v29 + 32) = v23;
    *(_QWORD *)(v29 + 40) = v30;
    *(_QWORD *)(v29 + 48) = v31;
    swift_retain();
    swift_retain();
    v32 = sub_242AC4964();
    *(_QWORD *)(v29 + 56) = v28;
    *(_QWORD *)(v29 + 64) = v32;
    *(_QWORD *)(v29 + 72) = v33;
    if (!v41)
    {
      sub_242A662D8((uint64_t)v47);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v29;
    }
    sub_242A66290((uint64_t)v47, (uint64_t)v46);
    sub_242A66290((uint64_t)v46, (uint64_t)v45);
    swift_retain();
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)v42);
    swift_release();
    v34 = v44;
    swift_retain();
    sub_242A5DC30((uint64_t)v42);
    sub_242B93328();
    sub_242B933C0((uint64_t)v42);
    swift_release();
    v35 = v43;
    swift_retain();
    sub_242A5DC30((uint64_t)v42);
    v36 = swift_allocObject();
    v42[0] = 1;
    v37 = sub_242B4C3E0(v18, 2, v45, 0x100000000, v34, v35, v36);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v37;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242A662D8((uint64_t)v46);
    swift_retain();
    swift_retain();
    v3 = sub_242AC4964();
    v6 = v38;
    v4 = *(_QWORD *)(v29 + 16);
    v7 = v4 + 1;
    if (v4 < *(_QWORD *)(v29 + 24) >> 1)
    {
LABEL_10:
      *(_QWORD *)(v29 + 16) = v7;
      v39 = (_QWORD *)(v29 + 24 * v4);
      v39[4] = v5;
      v39[5] = v3;
      v39[6] = v6;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
      sub_242A662D8((uint64_t)v47);
      return v29;
    }
LABEL_16:
    sub_242A5EBB0();
    v29 = v40;
    goto LABEL_10;
  }
  if (v8 >= 3)
  {
    v12 = a2[6];
    v13 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v10 + 16);
    v16 = *(_QWORD *)(v12 + 16);
    swift_retain();
    v41 = v12;
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_242AD4218()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_242AD426C(char a1)
{
  if ((a1 & 1) != 0)
    return 1935763810;
  else
    return 0x746867696577;
}

void sub_242AD4298(char *a1, char *a2)
{
  sub_242B3ED40(*a1, *a2);
}

void sub_242AD42A4()
{
  sub_242C449C0();
}

uint64_t sub_242AD42AC()
{
  return sub_242A5C560();
}

void sub_242AD42B4()
{
  sub_242BA8EF4();
}

uint64_t sub_242AD42BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AD4218();
  *a1 = result;
  return result;
}

uint64_t sub_242AD42E8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242AD426C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242AD4310()
{
  char *v0;

  return sub_242AD426C(*v0);
}

uint64_t sub_242AD4318@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AD4268();
  *a1 = result;
  return result;
}

uint64_t sub_242AD433C()
{
  sub_242AD4720();
  return sub_242C494D8();
}

uint64_t sub_242AD4364()
{
  sub_242AD4720();
  return sub_242C494E4();
}

void Dense.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257224728);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242AD4720();
  sub_242C49448();
  if (!v2)
  {
    sub_242A97E88();
    OUTLINED_FUNCTION_12_17();
    sub_242C490D0();
    v26 = HIBYTE(v19);
    v27 = v19;
    OUTLINED_FUNCTION_12_17();
    sub_242C49094();
    v16 = v18;
    v17 = v19;
    v14 = v18;
    v15 = v19;
    sub_242AD2F38(&v16, &v14, (uint64_t)&v18);
    OUTLINED_FUNCTION_1_12();
    v6 = v19;
    v7 = HIBYTE(v19);
    v8 = v20;
    v9 = v21;
    v10 = v22;
    v11 = v23;
    v12 = v24;
    v13 = v25;
    *(_QWORD *)a2 = v18;
    *(_BYTE *)(a2 + 8) = v6;
    *(_BYTE *)(a2 + 9) = v7;
    *(_QWORD *)(a2 + 16) = v8;
    *(_BYTE *)(a2 + 24) = v9;
    *(_BYTE *)(a2 + 25) = v10;
    *(_BYTE *)(a2 + 26) = v11;
    *(_QWORD *)(a2 + 32) = v12;
    *(_QWORD *)(a2 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_0_9();
}

void Dense.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  __int16 v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  int v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257224738);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_BYTE *)v1 + 8);
  v8 = *((_BYTE *)v1 + 9);
  v16 = v1[2];
  v21 = *((unsigned __int8 *)v1 + 24);
  LODWORD(v4) = *((unsigned __int8 *)v1 + 26);
  v14 = *((unsigned __int8 *)v1 + 25);
  v15 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242AD4720();
  sub_242C49478();
  v19 = v6;
  LOBYTE(v20) = v7;
  HIBYTE(v20) = v8;
  v22 = 0;
  sub_242A97EC4();
  OUTLINED_FUNCTION_18_18();
  v9 = v18;
  sub_242C49184();
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  }
  else
  {
    v11 = v16;
    v10 = v17;
    if (v15)
    {
      if (v14)
        v12 = 256;
      else
        v12 = 0;
      v13 = v12 | v21;
      swift_retain();
    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    v19 = v11;
    v20 = v13;
    v22 = 1;
    OUTLINED_FUNCTION_18_18();
    sub_242C4913C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242AD46C0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Dense.init(from:)(a1, a2);
}

void sub_242AD46D4(_QWORD *a1)
{
  Dense.encode(to:)(a1);
}

unint64_t sub_242AD46E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  unint64_t result;

  v2 = __OFSUB__(a1, 1);
  result = a1 - 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result >= *(_QWORD *)(a2 + 16))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_242AD4708()
{
  return swift_deallocObject();
}

uint64_t sub_242AD4718(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242AD3BF0(a1, a2, *(_BYTE *)(v2 + 16));
}

unint64_t sub_242AD4720()
{
  unint64_t result;

  result = qword_257224730;
  if (!qword_257224730)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52498, &type metadata for Dense.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257224730);
  }
  return result;
}

uint64_t destroy for Dense()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Dense(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Dense(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Dense(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Dense(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Dense(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Dense()
{
  return &type metadata for Dense;
}

uint64_t storeEnumTagSinglePayload for Dense.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242AD4A10 + 4 * byte_242C522D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242AD4A44 + 4 * byte_242C522D0[v4]))();
}

uint64_t sub_242AD4A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD4A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AD4A54);
  return result;
}

uint64_t sub_242AD4A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AD4A68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242AD4A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD4A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Dense.CodingKeys()
{
  return &type metadata for Dense.CodingKeys;
}

unint64_t sub_242AD4A94()
{
  unint64_t result;

  result = qword_257224798;
  if (!qword_257224798)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52470, &type metadata for Dense.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257224798);
  }
  return result;
}

unint64_t sub_242AD4AD4()
{
  unint64_t result;

  result = qword_2572247A0;
  if (!qword_2572247A0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C523A8, &type metadata for Dense.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572247A0);
  }
  return result;
}

unint64_t sub_242AD4B14()
{
  unint64_t result;

  result = qword_2572247A8;
  if (!qword_2572247A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C523D0, &type metadata for Dense.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572247A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_28()
{
  return sub_242C48F5C();
}

void OUTLINED_FUNCTION_15_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  unsigned __int8 v7;
  uint64_t v8;
  va_list va;

  va_start(va, a7);
  *(_BYTE *)(v8 - 132) = v7;
  sub_242A78538((uint64_t *)va, (unint64_t)v7 << 32);
}

uint64_t OUTLINED_FUNCTION_18_18()
{
  uint64_t v0;

  return v0 - 96;
}

void OUTLINED_FUNCTION_24_15()
{
  Tensor.scalarType.getter();
}

void OUTLINED_FUNCTION_29_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 8) = 256;
  *(_QWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 24) = 256;
}

uint64_t OUTLINED_FUNCTION_31_16(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return Parameter.wrappedValue.setter(va);
}

uint64_t OUTLINED_FUNCTION_32_14()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_34_10(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return Parameter.wrappedValue.setter(va);
}

void sub_242AD4C1C(void *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  char **v12;
  id v13;

  v7 = *(unsigned __int8 *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  *(_OWORD *)(OUTLINED_FUNCTION_1_4() + 16) = xmmword_242C4BF60;
  v8 = a2 & 0xC000000000000001;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((v7 & 1) != 0)
  {
    if (v8)
      OUTLINED_FUNCTION_0_1();
    v9 = *(id *)(a2 + 32);
    OUTLINED_FUNCTION_2_35();
    v11 = *(id *)(a2 + 40);
    OUTLINED_FUNCTION_0_40();
    v12 = &selRef_cumulativeProductWithTensor_axisTensor_exclusive_reverse_name_;
  }
  else
  {
    if (v8)
      OUTLINED_FUNCTION_0_1();
    v10 = *(id *)(a2 + 32);
    OUTLINED_FUNCTION_2_35();
    v13 = *(id *)(a2 + 40);
    OUTLINED_FUNCTION_0_40();
    v12 = &selRef_cumulativeSumWithTensor_axisTensor_exclusive_reverse_name_;
  }
  sub_242AD4F14(v7, a2, v3, a2 & 1, v4, v2, a1, (SEL *)v12);

  OUTLINED_FUNCTION_5_28();
  OUTLINED_FUNCTION_1_31();
}

void sub_242AD4D44(void *a1, uint64_t a2)
{
  sub_242AD4C1C(a1, a2);
}

void sub_242AD4D58(void *a1, uint64_t a2)
{
  sub_242AD4D74(a1, a2, (SEL *)&selRef_sortWithTensor_axis_descending_name_);
}

void sub_242AD4D74(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  *(_OWORD *)(OUTLINED_FUNCTION_1_4() + 16) = xmmword_242C4BF60;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v7 = *(id *)(a2 + 32);
  v8 = v7;
  v9 = *(_QWORD *)(v3 + 48);
  v10 = *(_BYTE *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 24);
  v11 = *(_QWORD *)(v3 + 32);
  sub_242C480E0();
  sub_242AD4F9C((uint64_t)v8, v9, v10, v12, v11, a1, a3);

  OUTLINED_FUNCTION_5_28();
  OUTLINED_FUNCTION_1_31();
}

void sub_242AD4E44(void *a1, uint64_t a2)
{
  sub_242AD4D74(a1, a2, (SEL *)&selRef_argSortWithTensor_axis_descending_name_);
}

uint64_t sub_242AD4E60(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257222188, (uint64_t (*)(uint64_t))type metadata accessor for ArgumentSortOperation, (uint64_t)&unk_242C5164C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AD4E9C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257222190, (uint64_t (*)(uint64_t))type metadata accessor for SortOperation, (uint64_t)&unk_242C51630);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AD4ED8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257222180, (uint64_t (*)(uint64_t))type metadata accessor for CumulativeOperation, (uint64_t)&unk_242C5FA30);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242AD4F14(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, void *a7, SEL *a8)
{
  void *v14;
  id v15;

  v14 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a7, *a8, a1, a2, a3 & 1, a4 & 1, v14);

  OUTLINED_FUNCTION_12_0();
}

void sub_242AD4F9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, SEL *a7)
{
  void *v12;
  id v13;

  v12 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a6, *a7, a1, a2, a3 & 1, v12);

  OUTLINED_FUNCTION_12_0();
}

uint64_t OUTLINED_FUNCTION_0_40()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_2_35()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242B4B240(1, v1 == 0, v0);
}

uint64_t OUTLINED_FUNCTION_5_28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return sub_242C4856C();
}

uint64_t resize(images:size:mode:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v11;
  unsigned __int8 v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(_QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  const char *v46;
  _BYTE v47[40];
  uint64_t v48;
  __int16 v49;
  char v50;

  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + 16);
  if ((unint64_t)(*(_QWORD *)(*(_QWORD *)(v8 + 152) + 16) - 5) < 0xFFFFFFFFFFFFFFFELL)
  {
    v46 = *(const char **)(*(_QWORD *)(v8 + 152) + 16);
    *(_OWORD *)v47 = xmmword_242C52540;
    v47[16] = 0;
    *(_OWORD *)&v47[24] = xmmword_242C52560;
    LOBYTE(v48) = 1;
    v50 = 7;
    OUTLINED_FUNCTION_6_29();
    goto LABEL_28;
  }
  v11 = *a4;
  v12 = *(_BYTE *)(v8 + 160);
  v13 = static ScalarType.floatingPointTypes.getter();
  v14 = sub_242B64794(v12, (uint64_t)v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    sub_242C21A14();
    v46 = v41;
    *(_QWORD *)v47 = v42;
    *(_OWORD *)&v47[8] = xmmword_242C52540;
    v47[24] = 0;
    *(_QWORD *)&v47[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    LOBYTE(v48) = 2;
    v50 = 3;
    OUTLINED_FUNCTION_6_29();
LABEL_28:
    sub_242A59264();
  }
  v15 = *(_QWORD *)(v7 + 16);
  v16 = *(_QWORD *)(v15 + 152);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17 < 2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = sub_242AD5D84(0, v17 - 2, *(_QWORD *)(v16 + 16));
  if ((v19 & 1) != 0)
    v15 = v17;
  else
    v15 = v18;
  if ((v15 & 0x8000000000000000) != 0)
    goto LABEL_22;
  if (v17 < v15)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_242C480E0();
  sub_242A5B894();
  v21 = *(_QWORD *)(v20 + 16);
  v14 = v21 + 2;
  if (__OFADD__(v21, 2))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_15_15(v15 > 1, v14);
    v25 = v39;
    v15 = *(_QWORD *)(v39 + 24);
    v24 = v15 >> 1;
    goto LABEL_18;
  }
  v22 = v20;
  sub_242C480E0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native
    && (v15 = *(_QWORD *)(v22 + 24), v24 = v15 >> 1, (uint64_t)(v15 >> 1) >= v14))
  {
    v25 = v22;
  }
  else
  {
    if (v21 <= v14)
      v26 = v21 + 2;
    else
      v26 = v21;
    sub_242A5DFBC(isUniquelyReferenced_nonNull_native, v26, 1, v22);
    v25 = v27;
    v15 = *(_QWORD *)(v27 + 24);
    v24 = v15 >> 1;
  }
  v5 = *(_QWORD *)(v25 + 16);
  v14 = v5 + 1;
  if (v24 <= v5)
    goto LABEL_25;
LABEL_18:
  *(_QWORD *)(v25 + 16) = v14;
  *(_QWORD *)(v25 + 8 * v5 + 32) = a2;
  v28 = v5 + 2;
  if ((uint64_t)v24 < v28)
  {
    OUTLINED_FUNCTION_15_15(v15 > 1, v28);
    v25 = v40;
  }
  *(_QWORD *)(v25 + 16) = v28;
  *(_QWORD *)(v25 + 8 * v14 + 32) = a3;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v7 + 16);
  v45 = v11;
  v30 = *(_BYTE *)(v29 + 160);
  v43 = v25;
  v44 = v30;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = a2;
  *(_QWORD *)(v31 + 24) = a3;
  *(_BYTE *)(v31 + 32) = v11;
  swift_retain();
  v32 = sub_242BD0D40((uint64_t)sub_242AD5E48);
  v34 = v33;
  swift_release();
  v46 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ImageOps.swift";
  *(_OWORD *)v47 = xmmword_242C4CA40;
  *(_OWORD *)&v47[16] = xmmword_242C52550;
  *(_QWORD *)&v47[32] = "init(id:operand:size:samplingMode:resultDescriptor:creationSite:backward:)";
  v48 = 74;
  v49 = 2;
  type metadata accessor for ResizeOperation();
  swift_allocObject();
  sub_242B05B44(0, 0, 0, v29, a2, a3, (uint64_t)&v45, (uint64_t)&v43, (uint64_t)&v46, v32, v34);
  v36 = v35;
  v37 = (uint64_t (**)(_QWORD, _QWORD))sub_242AD5E54();
  sub_242A66290(*(_QWORD *)(v7 + 16) + 168, (uint64_t)&v43);
  return sub_242BC9830(v36, v37, 0, (uint64_t)&v43, a5);
}

uint64_t static InterpolationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t InterpolationMode.hash(into:)()
{
  _BYTE *v0;

  if (*v0 == 2)
    return sub_242C4934C();
  sub_242C4934C();
  return sub_242C49358();
}

uint64_t InterpolationMode.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_242C49340();
  sub_242C4934C();
  if (v1 != 2)
    sub_242C49358();
  return sub_242C49394();
}

uint64_t sub_242AD5504()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_242C49340();
  sub_242C4934C();
  if (v1 != 2)
    sub_242C49358();
  return sub_242C49394();
}

uint64_t sub_242AD556C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[56];
  _BYTE v25[56];
  const char *v26;
  __int128 v27;
  __int128 v28;
  const char *v29;
  uint64_t v30;
  __int16 v31;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = *(_QWORD *)(*(_QWORD *)(result + 32) + 16);
      v8 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
      v25[0] = a5;
      v9 = *(_BYTE *)(v8 + 160);
      v20 = *(_QWORD *)(v8 + 152);
      v21 = v9;
      v27 = xmmword_242C4CA40;
      v28 = xmmword_242C52570;
      v26 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ImageOps.swift";
      v29 = "init(id:gradientOperand:operand:size:samplingMode:resultDescriptor:creationSite:)";
      v30 = 81;
      v31 = 2;
      type metadata accessor for ResizeGradientOperation();
      swift_allocObject();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_242C480E0();
      sub_242B05C9C(0, 0, 0, v7, v8, a3, a4, (uint64_t)v25);
      v11 = v10;
      sub_242A66290(v7 + 168, (uint64_t)v25);
      sub_242A66290((uint64_t)v25, (uint64_t)v24);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_242B93328();
      sub_242B933C0((uint64_t)&v20);
      swift_release();
      v12 = v23;
      swift_retain();
      sub_242A5DC30((uint64_t)&v20);
      sub_242B93328();
      sub_242B933C0((uint64_t)&v20);
      swift_release();
      v13 = v22;
      swift_retain();
      sub_242A5DC30((uint64_t)&v20);
      type metadata accessor for TensorRepresentation();
      v14 = swift_allocObject();
      LOBYTE(v20) = 1;
      v15 = sub_242B4C60C(v11, 0, v24, 0x100000000, v12, v13, v14);
      type metadata accessor for TensorHandle();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v15;
      swift_retain();
      sub_242BC995C();
      swift_release();
      sub_242A662D8((uint64_t)v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v18 = sub_242AC4964();
      *(_QWORD *)(v17 + 32) = v16;
      *(_QWORD *)(v17 + 40) = v18;
      *(_QWORD *)(v17 + 48) = v19;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Tensor.resized(to:mode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  char v5;
  char v7;
  uint64_t v8;

  v5 = *a3;
  v8 = *v4;
  v7 = v5;
  return resize(images:size:mode:)(&v8, a1, a2, &v7, a4);
}

uint64_t sub_242AD585C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000242C695A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242AD596C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x696D697263736964;
}

uint64_t sub_242AD59B4()
{
  sub_242AD6324();
  return sub_242C48524();
}

uint64_t sub_242AD5A10()
{
  sub_242AD6324();
  return sub_242C484F4();
}

uint64_t sub_242AD5A5C()
{
  char *v0;

  return sub_242AD596C(*v0);
}

uint64_t sub_242AD5A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242AD585C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242AD5A88()
{
  sub_242AD5E94();
  return sub_242C494D8();
}

uint64_t sub_242AD5AB0()
{
  sub_242AD5E94();
  return sub_242C494E4();
}

void InterpolationMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  char v10;
  __int16 v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572247B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242AD5E94();
  sub_242C49478();
  if (v8 == 2)
  {
    v13 = 1;
    v12 = 0;
    sub_242AD5ED0();
    OUTLINED_FUNCTION_3_5();
  }
  else
  {
    v11 = 0;
    sub_242AD5ED0();
    OUTLINED_FUNCTION_3_5();
    if (!v2)
    {
      v10 = 1;
      sub_242C49160();
    }
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_0_9();
}

void InterpolationMode.init(from:)(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  char v7;
  char v8;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572247C8);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242AD5E94();
  sub_242C49448();
  if (!v2)
  {
    sub_242AD5F0C();
    sub_242C490D0();
    if ((v8 & 1) != 0)
    {
      OUTLINED_FUNCTION_1_12();
      v6 = 2;
    }
    else
    {
      v7 = sub_242C490AC();
      OUTLINED_FUNCTION_1_12();
      v6 = v7 & 1;
    }
    *a2 = v6;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_0_9();
}

void sub_242AD5D5C(_QWORD *a1@<X0>, char *a2@<X8>)
{
  InterpolationMode.init(from:)(a1, a2);
}

void sub_242AD5D70(_QWORD *a1)
{
  InterpolationMode.encode(to:)(a1);
}

uint64_t sub_242AD5D84(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

void sub_242AD5DD4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || a1 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(v5 + 16) <= a1)
      v7 = a1;
    else
      v7 = *(_QWORD *)(v5 + 16);
    sub_242A5DFBC(isUniquelyReferenced_nonNull_native, v7, a2 & 1, v5);
    *v2 = v8;
  }
}

uint64_t sub_242AD5E38()
{
  return swift_deallocObject();
}

uint64_t sub_242AD5E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AD556C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
}

unint64_t sub_242AD5E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2572216B0;
  if (!qword_2572216B0)
  {
    v1 = type metadata accessor for ResizeOperation();
    result = MEMORY[0x2494EDE24](&unk_242C550D4, v1);
    atomic_store(result, (unint64_t *)&qword_2572216B0);
  }
  return result;
}

unint64_t sub_242AD5E94()
{
  unint64_t result;

  result = qword_2572247B8;
  if (!qword_2572247B8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52840, &type metadata for InterpolationMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572247B8);
  }
  return result;
}

unint64_t sub_242AD5ED0()
{
  unint64_t result;

  result = qword_2572247C0;
  if (!qword_2572247C0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52818, &type metadata for InterpolationMode.Discriminator);
    atomic_store(result, (unint64_t *)&qword_2572247C0);
  }
  return result;
}

unint64_t sub_242AD5F0C()
{
  unint64_t result;

  result = qword_2572247D0;
  if (!qword_2572247D0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C527F0, &type metadata for InterpolationMode.Discriminator);
    atomic_store(result, (unint64_t *)&qword_2572247D0);
  }
  return result;
}

unint64_t sub_242AD5F4C()
{
  unint64_t result;

  result = qword_2572247D8;
  if (!qword_2572247D8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for InterpolationMode, &type metadata for InterpolationMode);
    atomic_store(result, (unint64_t *)&qword_2572247D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InterpolationMode(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_242AD5FD8 + 4 * byte_242C52580[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for InterpolationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242AD6090 + 4 * byte_242C5258A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242AD60C4 + 4 * byte_242C52585[v5]))();
}

uint64_t sub_242AD60C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD60CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AD60D4);
  return result;
}

uint64_t sub_242AD60E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AD60E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242AD60EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD60F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD6100(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_242AD611C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for InterpolationMode()
{
  return &type metadata for InterpolationMode;
}

ValueMetadata *type metadata accessor for InterpolationMode.Discriminator()
{
  return &type metadata for InterpolationMode.Discriminator;
}

uint64_t _s14NeuralNetworks17InterpolationModeO13DiscriminatorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242AD61A4 + 4 * byte_242C52594[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242AD61D8 + 4 * byte_242C5258F[v4]))();
}

uint64_t sub_242AD61D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD61E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AD61E8);
  return result;
}

uint64_t sub_242AD61F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AD61FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242AD6200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AD6208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterpolationMode.CodingKeys()
{
  return &type metadata for InterpolationMode.CodingKeys;
}

unint64_t sub_242AD6228()
{
  unint64_t result;

  result = qword_2572247E0;
  if (!qword_2572247E0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52728, &type metadata for InterpolationMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572247E0);
  }
  return result;
}

unint64_t sub_242AD6268()
{
  unint64_t result;

  result = qword_2572247E8;
  if (!qword_2572247E8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C527C8, &type metadata for InterpolationMode.Discriminator);
    atomic_store(result, (unint64_t *)&qword_2572247E8);
  }
  return result;
}

unint64_t sub_242AD62A8()
{
  unint64_t result;

  result = qword_2572247F0;
  if (!qword_2572247F0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52698, &type metadata for InterpolationMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572247F0);
  }
  return result;
}

unint64_t sub_242AD62E8()
{
  unint64_t result;

  result = qword_2572247F8;
  if (!qword_2572247F8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C526C0, &type metadata for InterpolationMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572247F8);
  }
  return result;
}

unint64_t sub_242AD6324()
{
  unint64_t result;

  result = qword_257224800;
  if (!qword_257224800)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52750, &type metadata for InterpolationMode.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257224800);
  }
  return result;
}

void sub_242AD6360()
{
  unint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  char v3;

  v3 = OUTLINED_FUNCTION_3_30();
  *v1 = v0;
  if ((v3 & 1) == 0
    || (v0 & 0x8000000000000000) != 0
    || (v0 & 0x4000000000000000) != 0
    || v2 > *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v0 >> 62)
    {
      OUTLINED_FUNCTION_2_36();
      sub_242C48FC8();
      OUTLINED_FUNCTION_9_25();
    }
    OUTLINED_FUNCTION_5_29();
  }
  OUTLINED_FUNCTION_7_0();
}

uint64_t OUTLINED_FUNCTION_2_36()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_3_30()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject();
}

void OUTLINED_FUNCTION_5_29()
{
  JUMPOUT(0x2494EC858);
}

uint64_t OUTLINED_FUNCTION_9_25()
{
  return swift_bridgeObjectRelease();
}

void sub_242AD6438()
{
  __asm { BR              X10 }
}

__n128 *sub_242AD6478()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  __n128 *v5;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v5 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_6(v5, (__n128)xmmword_242C4BF60);
  if (v4)
    OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_1_32();
  v6 = sub_242AD6B14((uint64_t)v3, v1, v0, v2, (SEL *)&selRef_absoluteWithTensor_name_);

  v5[2].n128_u64[0] = (unint64_t)v6;
  sub_242C4856C();
  return v5;
}

void sub_242AD6B00()
{
  sub_242AD6438();
}

id sub_242AD6B14(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a4, *a5, a1, v8);

  return v9;
}

uint64_t OUTLINED_FUNCTION_1_32()
{
  return sub_242C480E0();
}

uint64_t sub_242AD6B9C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242C4BF60;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v6 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v6 = *(id *)(a2 + 32);
  v7 = v6;
  v9 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  sub_242C480E0();
  v10 = sub_242AD6CEC((uint64_t)v7, v9, v8, a1);

  *(_QWORD *)(v5 + 32) = v10;
  sub_242C4856C();
  return v5;
}

uint64_t sub_242AD6C74(void *a1, uint64_t a2)
{
  return sub_242AD6B9C(a1, a2);
}

unint64_t sub_242AD6C88(uint64_t a1)
{
  unint64_t result;

  result = sub_242AD6CAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242AD6CAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257224808;
  if (!qword_257224808)
  {
    v1 = type metadata accessor for UnaryLogicalOperation();
    result = MEMORY[0x2494EDE24](&unk_242C54FA0, v1);
    atomic_store(result, (unint64_t *)&qword_257224808);
  }
  return result;
}

id sub_242AD6CEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;

  v6 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a4, sel_notWithTensor_name_, a1, v6);

  return v7;
}

uint64_t sub_242AD6D5C(uint64_t a1)
{
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AD6D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_242C4925C();
}

uint64_t sub_242AD6DA8()
{
  sub_242C49340();
  sub_242C480E0();
  OUTLINED_FUNCTION_3_26();
  swift_bridgeObjectRelease();
  return sub_242C49394();
}

uint64_t sub_242AD6DFC()
{
  uint64_t *v0;

  return sub_242AD6D5C(*v0);
}

ValueMetadata *type metadata accessor for NameScope()
{
  return &type metadata for NameScope;
}

uint64_t sub_242AD6E14()
{
  return sub_242AD6DA8();
}

uint64_t sub_242AD6E1C()
{
  sub_242C49340();
  sub_242C480E0();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  return sub_242C49394();
}

uint64_t sub_242AD6E70(uint64_t *a1, uint64_t *a2)
{
  return sub_242AD6D8C(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_242AD6E88()
{
  unint64_t result;

  result = qword_257224810;
  if (!qword_257224810)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52A08, &type metadata for NameScope);
    atomic_store(result, (unint64_t *)&qword_257224810);
  }
  return result;
}

uint64_t sub_242AD6EC4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&unk_242C52AB0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AD6EF0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;

  v13 = *a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  *(_QWORD *)(v6 + 16) = v14;
  *(_QWORD *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v13 + 8);
  *(_QWORD *)(v6 + 40) = a4;
  *(_BYTE *)(v6 + 48) = a5 & 1;
  *(_BYTE *)(v6 + 49) = a6;
  return v6;
}

uint64_t sub_242AD6F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  *(_QWORD *)(v7 + 16) = v15;
  *(_QWORD *)(v7 + 24) = a3;
  *(_QWORD *)(v7 + 32) = a4;
  *(_QWORD *)(v7 + 40) = a5;
  *(_BYTE *)(v7 + 48) = a6 & 1;
  *(_BYTE *)(v7 + 49) = a7;
  return v7;
}

uint64_t sub_242AD701C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_242AD7040()
{
  sub_242AD701C();
  return swift_deallocClassInstance();
}

void sub_242AD7060()
{
  sub_242C48D28();
  swift_dynamicCastClassUnconditional();
  swift_retain();
  OUTLINED_FUNCTION_1_0();
}

void sub_242AD70B0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;

  v2 = v1;
  sub_242AD7060();
  sub_242AD7060();
  v4 = sub_242C48D34();
  swift_release();
  swift_release();
  if (v4)
  {
    sub_242AD7138(*(_QWORD *)(a1 + 32), v2, a1, v4);
    swift_release();
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242AD7138(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v8 = *a2;
  v16 = a2[2];
  sub_242C480E0();
  sub_242C480E0();
  sub_242B64A2C();
  if ((a2[6] & 1) != 0 || (*(_BYTE *)(a3 + 48) & 1) != 0)
  {
    v11 = 0;
    v12 = 1;
  }
  else
  {
    v13 = a2[5];
    v14 = *(_QWORD *)(a3 + 40);
    v11 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
      return;
    }
    v12 = 0;
  }
  if (*((_BYTE *)a2 + 49) == 1)
    v15 = *(_BYTE *)(a3 + 49);
  else
    v15 = 0;
  type metadata accessor for StoredPropertyInfo(0, *(_QWORD *)(v8 + 152), v9, v10);
  sub_242AD7244(v16, a4, a1, v11, v12, v15);
  swift_retain();
}

uint64_t sub_242AD7244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_BYTE *)(result + 48) = a5 & 1;
  *(_BYTE *)(result + 49) = a6;
  return result;
}

uint64_t sub_242AD72B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5, char a6)
{
  char v11;

  v11 = a5 & 1;
  swift_allocObject();
  return sub_242AD7328(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_242AD7328(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5, char a6)
{
  return sub_242AD6EF0(a1, a2, a3, a4, a5 & 1, a6);
}

uint64_t sub_242AD7330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  char v13;

  v13 = a6 & 1;
  swift_allocObject();
  return sub_242AD73C0(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_242AD73C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  return sub_242AD6F90(a1, a2, a3, a4, a5, a6 & 1, a7);
}

void sub_242AD73C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  int v82;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v76 = v4;
  v6 = v5;
  v8 = v7;
  v71 = v9;
  v61 = sub_242C48EE4();
  v60 = *(_QWORD *)(v61 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_5_6();
  v65 = OUTLINED_FUNCTION_25_14(v11);
  v64 = *(_QWORD *)(v65 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_36_11();
  v63 = v13 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v62 = (uint64_t)&v59 - v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v74 = (uint64_t)&v59 - v19;
  v21 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v3, v1, v20);
  v67 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v59 - v23;
  v25 = (uint64_t *)((char *)&v59 + *(int *)(v22 + 36) - v23);
  v28 = type metadata accessor for StoredPropertyInfo(255, AssociatedTypeWitness, v26, v27);
  v75 = OUTLINED_FUNCTION_3_15();
  v29 = sub_242C47FFC();
  v73 = v25;
  *v25 = v29;
  v30 = (uint64_t *)&v24[*(int *)(v21 + 40)];
  v69 = v18;
  OUTLINED_FUNCTION_37_13((uint64_t)v24);
  *v30 = v6;
  v30[1] = v76;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_242C4B7D0;
  swift_getDynamicType();
  v70 = v6;
  sub_242A6548C(v6);
  *(_QWORD *)(v31 + 32) = sub_242C494F0();
  *(_QWORD *)(v31 + 40) = v32;
  v68 = v21;
  v33 = *(int *)(v21 + 44);
  v66 = v24;
  *(_QWORD *)&v24[v33] = v31;
  v72 = v8;
  OUTLINED_FUNCTION_37_13(v74);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224A18);
  v34 = OUTLINED_FUNCTION_44_8();
  if ((_DWORD)v34)
  {
    OUTLINED_FUNCTION_31_17();
    OUTLINED_FUNCTION_17_18();
    *(_QWORD *)&v79 = OUTLINED_FUNCTION_16_16();
    MEMORY[0x24BDAC7A8](v79);
    *(&v59 - 2) = AssociatedTypeWitness;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257224A30);
    sub_242AC7974(&qword_257224A38, &qword_257224A30);
    v35 = OUTLINED_FUNCTION_26_17();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_12();
  }
  else
  {
    v81 = 0;
    v79 = 0u;
    v80 = 0u;
    OUTLINED_FUNCTION_18_19(v34, &qword_257224A20);
    sub_242B8FA24(AssociatedTypeWitness, (uint64_t)&v79);
    if (*((_QWORD *)&v80 + 1))
    {
      OUTLINED_FUNCTION_31_17();
      OUTLINED_FUNCTION_17_18();
      v37 = v62;
      OUTLINED_FUNCTION_23_18(v62);
      v38 = v64;
      v39 = v63;
      OUTLINED_FUNCTION_21_15(v63, *MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v64 + 104));
      OUTLINED_FUNCTION_6_30();
      OUTLINED_FUNCTION_6_30();
      v40 = v79;
      v41 = v77;
      v42 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v42(v39, v21);
      v42(v37, v21);
      if (v40 == v41)
      {
        sub_242B8FA24(AssociatedTypeWitness, (uint64_t)&v77);
        if (v78)
        {
          v43 = sub_242A64518(&v77, (uint64_t)&v79);
          v44 = (void *)MEMORY[0x2494ED6EC](v43);
          v45 = OUTLINED_FUNCTION_4_6();
          *(_QWORD *)(v45 + 16) = sub_242C47FFC();
          v35 = v45 + 16;
          OUTLINED_FUNCTION_27_14();
          v46 = sub_242B8FB5C(v41, v37);
          sub_242C48650();
          OUTLINED_FUNCTION_24_16();
          v47 = OUTLINED_FUNCTION_27_14();
          MEMORY[0x24BDAC7A8](v47);
          *(&v59 - 4) = AssociatedTypeWitness;
          *(&v59 - 3) = (uint64_t)&v79;
          *(&v59 - 2) = v45;
          sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA750, (uint64_t)(&v59 - 6), v46, v37);
          OUTLINED_FUNCTION_2_34();
          OUTLINED_FUNCTION_10_20();
          swift_release();
          objc_autoreleasePoolPop(v44);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
        }
        else
        {
          sub_242A929A8((uint64_t)&v77, &qword_257224A28);
          v35 = OUTLINED_FUNCTION_39_11();
        }
        OUTLINED_FUNCTION_43_12();
      }
      else
      {
        *(_QWORD *)&v77 = MEMORY[0x24BEE4B00];
        v48 = OUTLINED_FUNCTION_17_18();
        MEMORY[0x24BDAC7A8](v48);
        *(&v59 - 2) = (uint64_t)&v77;
        OUTLINED_FUNCTION_19_16((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v59 - 4));
        v49 = OUTLINED_FUNCTION_4_6();
        v50 = sub_242C47FFC();
        *(_QWORD *)(v49 + 16) = v50;
        v35 = v49 + 16;
        MEMORY[0x24BDAC7A8](v50);
        *(&v59 - 2) = (uint64_t)&v77;
        *(&v59 - 1) = v49;
        v51 = v59;
        sub_242ADA024();
        sub_242C491F0();
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v51, v61);
        OUTLINED_FUNCTION_2_34();
        OUTLINED_FUNCTION_10_20();
        swift_release();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_43_12();
      }
    }
    else
    {
      OUTLINED_FUNCTION_18_19(v36, &qword_257224A28);
      v35 = OUTLINED_FUNCTION_39_11();
    }
  }
  v52 = MEMORY[0x2494EC198](v35, v28);
  if ((v52 & 0x8000000000000000) == 0)
  {
    v53 = v52;
    if (!v52)
    {
LABEL_16:
      sub_242A6549C(v70);
      swift_bridgeObjectRelease();
      v56 = v67;
      v57 = v66;
      v58 = v68;
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v71, v66, v68);
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v72, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v54 = 0;
    v55 = v52 - 1;
    while (!__OFSUB__(v55, v54))
    {
      ++v54;
      sub_242C48680();
      v82 = 0;
      sub_242C48E00();
      sub_242C48DDC();
      if (v53 == v54)
        goto LABEL_16;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_242AD7AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, int *);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v38 = v3;
  v4 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_40_10();
  v5 = sub_242C48A64();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - v6;
  v37 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_5_6();
  v36 = v9;
  v10 = v0;
  v42 = v2;
  v39 = *(_QWORD *)(v2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for StoredPropertyInfo(255, AssociatedTypeWitness, v12, v13);
  while (1)
  {
    OUTLINED_FUNCTION_3_15();
    v14 = OUTLINED_FUNCTION_38_10();
    v15 = MEMORY[0x2494EDE24](MEMORY[0x24BEE2A38], v14);
    v16 = MEMORY[0x2494EDE24](MEMORY[0x24BEE2A68], v14);
    v17 = MEMORY[0x2494EC420](&v44, v14, v15, v16);
    v18 = v44;
    if (!v44)
    {
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_22_14();
      OUTLINED_FUNCTION_0_41(v23);
      v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221158);
      v46 = MEMORY[0x24BEE1328];
      v24 = OUTLINED_FUNCTION_5_30(MEMORY[0x24BEE44F0]);
      v25 = v38;
      v26 = 1;
      goto LABEL_11;
    }
    v43 = v45;
    v19 = *(uint64_t (**)(uint64_t, int *))(v10 + *(int *)(v42 + 40));
    if (v19)
    {
      v20 = *(_QWORD *)(v44 + 32);
      OUTLINED_FUNCTION_0_3();
      swift_retain();
      v21 = v19(v20, &v43);
      swift_endAccess();
      if ((v21 & 1) != 0)
        sub_242AD7E60();
    }
    else
    {
      swift_retain();
    }
    sub_242AD7060();
    v44 = v22;
    sub_242C48D28();
    if (OUTLINED_FUNCTION_44_8())
      break;
    OUTLINED_FUNCTION_6_13((uint64_t)v7, 1);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
  }
  OUTLINED_FUNCTION_6_13((uint64_t)v7, 0);
  v27 = v36;
  v28 = v37;
  v29 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v36, v7, v4);
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_22_14();
  OUTLINED_FUNCTION_0_41(v30);
  v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221158);
  v46 = MEMORY[0x24BEE1328];
  v31 = (int *)OUTLINED_FUNCTION_5_30(MEMORY[0x24BEE44F0]);
  v32 = v31[12];
  v33 = v31[20];
  v40 = v31[16];
  v41 = v33;
  v34 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v38, v27, v4);
  v44 = *(_QWORD *)(v10 + *(int *)(v42 + 44));
  OUTLINED_FUNCTION_44_0();
  sub_242C480E0();
  sub_242B64A2C();
  swift_release();
  v35 = v44;
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v4);
  *(_QWORD *)(v34 + v32) = v35;
  LOBYTE(v35) = *(_BYTE *)(v18 + 49);
  swift_release();
  *(_BYTE *)(v34 + v40) = v35;
  OUTLINED_FUNCTION_2_34();
  *(_DWORD *)(v34 + v41) = v43;
  v25 = v34;
  v26 = 0;
  v24 = (uint64_t)v31;
LABEL_11:
  __swift_storeEnumTagSinglePayload(v25, v26, 1, v24);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242AD7E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  _QWORD v99[7];

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v92 = v6;
  v8 = v7;
  v10 = v9;
  v99[5] = *MEMORY[0x24BDAC8D0];
  v11 = *v9;
  v88 = sub_242C48EE4();
  v87 = *(_QWORD *)(v88 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_5_6();
  v14 = OUTLINED_FUNCTION_25_14(v13);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_36_11();
  MEMORY[0x24BDAC7A8](v15);
  v16 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_36_11();
  v20 = v18 - v19;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = *(_QWORD *)(v11 + 152);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v31 = (char *)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v30) = *((_BYTE *)v10 + 48);
  v93 = v10;
  v90 = v5;
  v91 = v8;
  if ((v30 & 1) != 0)
  {
    v81 = v29;
    v82 = v28;
    v83 = v27;
    v84 = v25;
    v89 = v26;
    sub_242AD7060();
    v33 = v32;
    sub_242C494C0();
    if (swift_dynamicCastClass())
    {
      v85 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v31, v91, v23);
      v34 = v89;
      swift_getAtKeyPath();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v23);
      v35 = v16;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v16 + 16))(v20, v34, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A18);
      v36 = OUTLINED_FUNCTION_44_8();
      v37 = v3;
      if ((_DWORD)v36)
      {
        OUTLINED_FUNCTION_30_15();
        OUTLINED_FUNCTION_12_18();
        *(_QWORD *)&v96 = OUTLINED_FUNCTION_16_16();
        MEMORY[0x24BDAC7A8](v96);
        *(&v80 - 2) = v3;
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257224A30);
        OUTLINED_FUNCTION_14_15(v38, v39, v40, v41);
        sub_242AC7974(&qword_257224A38, &qword_257224A30);
        OUTLINED_FUNCTION_26_17();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      }
      else
      {
        v98 = 0;
        v96 = 0u;
        v97 = 0u;
        OUTLINED_FUNCTION_18_19(v36, &qword_257224A20);
        sub_242B8FA24(v3, (uint64_t)&v96);
        if (*((_QWORD *)&v97 + 1))
        {
          v80 = v23;
          OUTLINED_FUNCTION_30_15();
          OUTLINED_FUNCTION_12_18();
          v52 = v81;
          OUTLINED_FUNCTION_23_18(v81);
          v53 = v83;
          v54 = v82;
          OUTLINED_FUNCTION_21_15(v82, *MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v83 + 104));
          OUTLINED_FUNCTION_6_30();
          OUTLINED_FUNCTION_6_30();
          v55 = v96;
          v56 = v94;
          v57 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
          v57(v54, v16);
          v57(v52, v16);
          if (v55 == v56)
          {
            sub_242B8FA24(v37, (uint64_t)&v94);
            if (v95)
            {
              v58 = sub_242A64518(&v94, (uint64_t)&v96);
              v59 = (void *)MEMORY[0x2494ED6EC](v58);
              v60 = v37;
              v61 = OUTLINED_FUNCTION_4_6();
              type metadata accessor for StoredPropertyInfo(0, v60, v62, v63);
              *(_QWORD *)(v61 + 16) = sub_242C47FFC();
              v64 = *((_QWORD *)&v97 + 1);
              v65 = v98;
              __swift_project_boxed_opaque_existential_1(&v96, *((uint64_t *)&v97 + 1));
              sub_242B8FB5C(v64, v65);
              OUTLINED_FUNCTION_40_10();
              sub_242C48650();
              OUTLINED_FUNCTION_24_16();
              v66 = *((_QWORD *)&v97 + 1);
              v67 = v98;
              v68 = __swift_project_boxed_opaque_existential_1(&v96, *((uint64_t *)&v97 + 1));
              MEMORY[0x24BDAC7A8](v68);
              *(&v80 - 4) = v60;
              *(&v80 - 3) = (uint64_t)&v96;
              *(&v80 - 2) = v61;
              sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA64C, (uint64_t)(&v80 - 6), v66, v67);
              OUTLINED_FUNCTION_2_34();
              OUTLINED_FUNCTION_10_20();
              v37 = v60;
              swift_release();
              objc_autoreleasePoolPop(v59);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
            }
            else
            {
              sub_242A929A8((uint64_t)&v94, &qword_257224A28);
              type metadata accessor for StoredPropertyInfo(0, v37, v78, v79);
              OUTLINED_FUNCTION_13_21();
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
            OUTLINED_FUNCTION_15_17();
          }
          else
          {
            *(_QWORD *)&v94 = MEMORY[0x24BEE4B00];
            v71 = OUTLINED_FUNCTION_12_18();
            MEMORY[0x24BDAC7A8](v71);
            *(&v80 - 2) = (uint64_t)&v94;
            OUTLINED_FUNCTION_19_16(sub_242ADA618, (uint64_t)(&v80 - 4));
            v72 = OUTLINED_FUNCTION_4_6();
            OUTLINED_FUNCTION_14_15(v72, v73, v74, v75);
            v76 = sub_242C47FFC();
            *(_QWORD *)(v72 + 16) = v76;
            MEMORY[0x24BDAC7A8](v76);
            *(&v80 - 2) = (uint64_t)&v94;
            *(&v80 - 1) = v72;
            v77 = v86;
            sub_242ADA024();
            sub_242C491F0();
            (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v77, v88);
            OUTLINED_FUNCTION_2_34();
            OUTLINED_FUNCTION_37_0();
            swift_release();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
            OUTLINED_FUNCTION_15_17();
          }
          goto LABEL_14;
        }
        OUTLINED_FUNCTION_18_19(v51, &qword_257224A28);
        type metadata accessor for StoredPropertyInfo(0, v3, v69, v70);
        OUTLINED_FUNCTION_13_21();
      }
      OUTLINED_FUNCTION_15_17();
LABEL_14:
      (*(void (**)(uint64_t *, uint64_t))(v35 + 8))(v89, v37);
      v47 = OUTLINED_FUNCTION_37_0();
LABEL_15:
      OUTLINED_FUNCTION_14_15(v47, v48, v49, v50);
      OUTLINED_FUNCTION_33_11();
    }
    return OUTLINED_FUNCTION_4_29();
  }
  else
  {
    v42 = v10[5];
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16))(v31, v8, v23);
    v89 = &v80;
    MEMORY[0x24BDAC7A8](v43);
    *(&v80 - 4) = v5;
    *(&v80 - 3) = v3;
    *(&v80 - 2) = v1;
    *(&v80 - 1) = v42;
    type metadata accessor for StoredPropertyInfo(255, v3, v44, v45);
    sub_242C48650();
    sub_242C48A64();
    sub_242BA1484();
    result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v31, v23);
    if (v99[0])
    {
      v47 = OUTLINED_FUNCTION_37_0();
      goto LABEL_15;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_242AD8704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;

  v66 = a4;
  v7 = sub_242C48EE4();
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v61 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v60 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v60 - v20;
  v22 = a1 + a2;
  v65 = v23;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v24((char *)&v60 - v20, v22, a3);
  v64 = v21;
  v24(v19, (uint64_t)v21, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224A18);
  if (swift_dynamicCast())
  {
    sub_242A64518(&v69, (uint64_t)v72);
    v25 = v73;
    v26 = v74;
    __swift_project_boxed_opaque_existential_1(v72, v73);
    *(_QWORD *)&v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    MEMORY[0x24BDAC7A8](v69);
    *(&v60 - 2) = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257224A30);
    type metadata accessor for StoredPropertyInfo(0, a3, v27, v28);
    sub_242AC7974(&qword_257224A38, &qword_257224A30);
    v29 = sub_242C4841C();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
LABEL_9:
    v55 = v65;
    v54 = v66;
    v56 = v64;
    goto LABEL_10;
  }
  v71 = 0;
  v69 = 0u;
  v70 = 0u;
  sub_242A929A8((uint64_t)&v69, &qword_257224A20);
  sub_242B8FA24(a3, (uint64_t)&v69);
  if (!*((_QWORD *)&v70 + 1))
  {
    sub_242A929A8((uint64_t)&v69, &qword_257224A28);
    type metadata accessor for StoredPropertyInfo(0, a3, v44, v45);
    v29 = sub_242C485C0();
    goto LABEL_9;
  }
  sub_242A64518(&v69, (uint64_t)v72);
  v30 = v74;
  __swift_project_boxed_opaque_existential_1(v72, v73);
  sub_242B8FB74(v30, (uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BEE27F8], v9);
  sub_242C484E8();
  sub_242C484E8();
  v31 = v69;
  v32 = v67;
  v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v13, v9);
  v33(v16, v9);
  if (v31 != v32)
  {
    *(_QWORD *)&v67 = MEMORY[0x24BEE4B00];
    v46 = v73;
    v47 = v74;
    v48 = __swift_project_boxed_opaque_existential_1(v72, v73);
    MEMORY[0x24BDAC7A8](v48);
    *(&v60 - 2) = (uint64_t)&v67;
    sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v60 - 4), v46, v47);
    v49 = swift_allocObject();
    type metadata accessor for StoredPropertyInfo(0, a3, v50, v51);
    v52 = sub_242C47FFC();
    *(_QWORD *)(v49 + 16) = v52;
    MEMORY[0x24BDAC7A8](v52);
    *(&v60 - 2) = (uint64_t)&v67;
    *(&v60 - 1) = v49;
    v53 = v61;
    sub_242ADA024();
    sub_242C491F0();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v53, v63);
    swift_beginAccess();
    v29 = *(_QWORD *)(v49 + 16);
    sub_242C480E0();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    goto LABEL_9;
  }
  sub_242B8FA24(a3, (uint64_t)&v67);
  if (v68)
  {
    v34 = sub_242A64518(&v67, (uint64_t)&v69);
    v35 = (void *)MEMORY[0x2494ED6EC](v34);
    v36 = swift_allocObject();
    type metadata accessor for StoredPropertyInfo(0, a3, v37, v38);
    *(_QWORD *)(v36 + 16) = sub_242C47FFC();
    v39 = *((_QWORD *)&v70 + 1);
    v40 = v71;
    __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v70 + 1));
    sub_242B8FB5C(v39, v40);
    sub_242C48650();
    sub_242C4859C();
    v41 = *((_QWORD *)&v70 + 1);
    v42 = v71;
    v43 = __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v70 + 1));
    MEMORY[0x24BDAC7A8](v43);
    *(&v60 - 4) = a3;
    *(&v60 - 3) = (uint64_t)&v69;
    *(&v60 - 2) = v36;
    sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA750, (uint64_t)(&v60 - 6), v41, v42);
    swift_beginAccess();
    v29 = *(_QWORD *)(v36 + 16);
    sub_242C480E0();
    swift_release();
    objc_autoreleasePoolPop(v35);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
  }
  else
  {
    sub_242A929A8((uint64_t)&v67, &qword_257224A28);
    type metadata accessor for StoredPropertyInfo(0, a3, v58, v59);
    v29 = sub_242C485C0();
  }
  v55 = v65;
  v54 = v66;
  v56 = v64;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
LABEL_10:
  result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, a3);
  *v54 = v29;
  return result;
}

uint64_t sub_242AD8D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];

  v13[5] = (*(uint64_t (**)(void))(a2 + 16))();
  v13[2] = a1;
  v13[3] = a2;
  type metadata accessor for StoredPropertyInfo(255, a1, v4, v5);
  v6 = sub_242C48650();
  type metadata accessor for AnyStoredPropertyInfo();
  v7 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v6);
  v11 = OUTLINED_FUNCTION_20_20((void (*)(char *, uint64_t))sub_242ADA6C8, (uint64_t)v13, v8, v9, MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v10);
  swift_bridgeObjectRelease();
  return v11;
}

void sub_242AD8DEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t EnumTagSinglePayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *KeyPath;

  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, *(_QWORD *)(a1 + 16));
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_13(EnumTagSinglePayload, v3, v4, v5);
    OUTLINED_FUNCTION_13_21();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    swift_allocObject();
    v6 = sub_242C48578();
    v8 = (_QWORD *)v7;
    v11 = OUTLINED_FUNCTION_41_13(v6, v7, v9, v10);
    MEMORY[0x24BDAC7A8](v11);
    KeyPath = (uint64_t *)swift_getKeyPath();
    *v8 = sub_242AD72B0(0x65756C6176, 0xE500000000000000, KeyPath, 0, 1, 1);
    sub_242B3E490();
  }
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242AD8ED8(uint64_t a1)
{
  return sub_242AD8D40(a1, (uint64_t)&off_251384718);
}

uint64_t sub_242AD8EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  _QWORD v16[3];
  __int128 v17;
  __int128 v18;

  v3 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12D8], v3);
  v4 = MEMORY[0x24BEE17A8];
  sub_242C487A0();
  v17 = v18;
  v15[2] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B28);
  v6 = OUTLINED_FUNCTION_40_10();
  type metadata accessor for StoredPropertyInfo(v6, v7, v8, v9);
  v16[0] = v4;
  v16[1] = sub_242AA1C80();
  v10 = MEMORY[0x2494EDE24](MEMORY[0x24BEE1BD8], v5, v16);
  return OUTLINED_FUNCTION_20_20((void (*)(char *, uint64_t))sub_242ADA6E4, (uint64_t)v15, v11, v12, MEMORY[0x24BEE4078], v10, MEMORY[0x24BEE40A8], v13);
}

uint64_t sub_242AD8FBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *KeyPath;
  uint64_t result;

  v2 = sub_242C48650();
  type metadata accessor for StoredPropertyInfo(0, v2, v3, v4);
  sub_242ACA978();
  v5 = sub_242C48B48();
  v7 = v6;
  KeyPath = (uint64_t *)swift_getKeyPath();
  result = sub_242AD72B0(v5, v7, KeyPath, 0, 1, 1);
  *a1 = result;
  return result;
}

uint64_t sub_242AD907C()
{
  return sub_242C48680();
}

uint64_t sub_242AD9094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t *, _QWORD);
  uint64_t v7;
  uint64_t v9;

  v5 = *(_QWORD *)(a4 + a3 - 8);
  sub_242C48650();
  v6 = (uint64_t (*)(uint64_t *, _QWORD))sub_242C48674();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(v7, a1, v5);
  return v6(&v9, 0);
}

uint64_t sub_242AD9114(uint64_t a1)
{
  uint64_t *v1;

  return sub_242AD8EE4(*v1, *(_QWORD *)(a1 + 16));
}

uint64_t sub_242AD9124(uint64_t a1)
{
  return sub_242AD8D40(a1, (uint64_t)&off_251384740);
}

uint64_t type metadata accessor for AnyStoredPropertyInfo()
{
  return objc_opt_self();
}

uint64_t sub_242AD9150()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for StoredPropertyInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StoredPropertyInfo);
}

uint64_t sub_242AD9190()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_242AD9198()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_242AD9238(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v11 = *v10;
    v12 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = (unint64_t *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    v14 = *v13;
    swift_retain();
    if (v14 < 0xFFFFFFFF)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v15 = v13[1];
      *(_QWORD *)v12 = v14;
      *(_QWORD *)(v12 + 8) = v15;
      swift_retain();
    }
    *(_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
    sub_242C480E0();
  }
  return a1;
}

uint64_t sub_242AD9364(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = ((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  if (*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242AD93F4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = v6 + a1;
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *v8;
  v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (unint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  swift_retain();
  if (v11 < 0xFFFFFFFF)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v12 = v10[1];
    *(_QWORD *)v9 = v11;
    *(_QWORD *)(v9 + 8) = v12;
    swift_retain();
  }
  *(_QWORD *)((v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AD94C4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (unint64_t *)(v9 & 0xFFFFFFFFFFFFFFF8);
  v12 = *v11;
  if (*v10 < 0xFFFFFFFFuLL)
  {
    if (v12 >= 0xFFFFFFFF)
    {
      v14 = v11[1];
      *v10 = v12;
      v10[1] = v14;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v10 = *(_OWORD *)v11;
    goto LABEL_8;
  }
  if (v12 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v13 = v11[1];
  *v10 = v12;
  v10[1] = v13;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AD95EC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v10 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v11 = *(_QWORD *)(v10 + 8);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v11;
  }
  *(_QWORD *)((v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_242AD96B0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (unint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  if (*v9 < 0xFFFFFFFFuLL)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      v13 = v10[1];
      *v9 = v11;
      v9[1] = v13;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (v11 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v12 = v10[1];
  *v9 = v11;
  v9[1] = v12;
  swift_release();
LABEL_8:
  *(_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AD97BC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 < a2)
  {
    if (((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    __asm { BR              X14 }
  }
  if (v6 >= 0x7FFFFFFF)
    return __swift_getEnumTagSinglePayload(a1, v6, AssociatedTypeWitness);
  v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

void sub_242AD9908(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v7)
  {
    if (((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v11 = ~v7 + a2;
      bzero(a1, ((((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_242AD9A24@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;

  *(_BYTE *)(v3 + v5) = 0;
  if ((_DWORD)v4)
  {
    if (a1 < 0x7FFFFFFF)
    {
      v7 = (_QWORD *)((v3 + a3 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((v4 & 0x80000000) != 0)
        v8 = v4 ^ 0x80000000;
      else
        v8 = (v4 - 1);
      *v7 = v8;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v3, v4, a1, a2);
    }
  }
  return result;
}

uint64_t type metadata accessor for RecursiveStoredPropertiesIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RecursiveStoredPropertiesIterator);
}

void sub_242AD9AC0()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242AD9AD0()
{
  type metadata accessor for Field();
  sub_242AD9B2C();
  return 1;
}

void sub_242AD9B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_242C48D10();
  v31 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_36_11();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - v14;
  v16 = v7[3];
  v17 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v16);
  sub_242AD9D80((uint64_t)v5, v16, v17);
  v33 = v3;
  sub_242C494C0();
  v18 = (uint64_t *)swift_dynamicCastClass();
  if (v18)
  {
    v32 = v18;
    v19 = dynamic_cast_existential_0_class_conditional(v1);
    sub_242A587A8((uint64_t)v7, (uint64_t)v35);
    if (v19)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      v22 = 0;
      v23 = v5[1];
      v24 = v5[2];
      v25 = 1;
      v26 = v33;
    }
    else
    {
      v27 = v35[4];
      __swift_project_boxed_opaque_existential_1(v35, v35[3]);
      sub_242B8FB74(v27, (uint64_t)v15);
      v28 = v31;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v12, *MEMORY[0x24BEE27F8], v8);
      LOBYTE(v27) = sub_242C48200();
      v29 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v29(v12, v8);
      v29((uint64_t)v15, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      v23 = v5[1];
      v24 = v5[2];
      v26 = v33;
      if ((v27 & 1) != 0)
      {
        v22 = 0;
        v25 = 1;
      }
      else
      {
        v25 = 0;
        v22 = v5[3];
      }
    }
    type metadata accessor for StoredPropertyInfo(0, v26, v20, v21);
    v34 = sub_242AD72B0(v23, v24, v32, v22, v25, 0);
    OUTLINED_FUNCTION_0_3();
    sub_242C48650();
    sub_242C480E0();
    swift_retain();
    sub_242C48620();
    swift_endAccess();
    swift_release();
    OUTLINED_FUNCTION_13_11();
  }
  else
  {
    OUTLINED_FUNCTION_4_29();
  }
}

uint64_t sub_242AD9D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = j__OUTLINED_FUNCTION_2_68(a2, a3);
  sub_242ADA498(v7, v3, a1, a2, v7, a3);
  return sub_242ADA298(24, (void (*)(uint64_t, uint64_t))sub_242ADA6BC);
}

uint64_t sub_242AD9DFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v6;

  type metadata accessor for StoredPropertyInfo(0, a1, a2, a3);
  result = swift_dynamicCastClass();
  v6 = result;
  if (result)
    result = swift_retain();
  *a4 = v6;
  return result;
}

uint64_t sub_242AD9E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for Field() + 36));
  OUTLINED_FUNCTION_44_0();
  sub_242B8C8E4(v4, v2, v3, v5, v6, v7, v8, v9, v11, v12);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_242AD9EB0(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v7 = sub_242C48320();
  v9 = v8;
  sub_242A9E568(v7, v8, *a3);
  if (v10)
  {
    v11 = v10;
    v12 = sub_242C48B54();
    sub_242AD9F34(v11, a4, v7, v9, a2, v12, v13 & 1);
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_242AD9F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, char a7)
{
  char v12;

  v12 = a7 & 1;
  type metadata accessor for StoredPropertyInfo(0, *(_QWORD *)(*a5 + *MEMORY[0x24BEE2878]), a3, a4);
  sub_242AD7330(a3, a4, (uint64_t)a5, a1, a6, v12, 0);
  OUTLINED_FUNCTION_0_3();
  sub_242C48650();
  OUTLINED_FUNCTION_44_0();
  swift_retain();
  sub_242C48620();
  return swift_endAccess();
}

uint64_t sub_242ADA024()
{
  sub_242C48EE4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
  sub_242AC7974(&qword_257224A50, &qword_257224A48);
  return sub_242C48B9C();
}

uint64_t sub_242ADA0AC(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t result;
  int v21;
  _QWORD v22[2];

  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v22 - v14;
  *a1 = -2147483644;
  v16 = *(_QWORD *)(a3 + 24);
  if ((v16 & 0x8000000000000000) != 0 || HIDWORD(v16))
  {
    result = sub_242C48F50();
    __break(1u);
  }
  else
  {
    sub_242B8FB74(a6, (uint64_t)v22 - v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BEE2800], v9);
    sub_242C484E8();
    sub_242C484E8();
    v18 = v22[0];
    v17 = v22[1];
    v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v13, v9);
    result = ((uint64_t (*)(char *, uint64_t))v19)(v15, v9);
    if (v17 == v18)
      v21 = 0x1000000;
    else
      v21 = 50331648;
    a1[2] = v21 | v16;
  }
  return result;
}

uint64_t sub_242ADA298(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;

  sub_242B8FA24(v2, (uint64_t)&v8);
  if (!v10)
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224A40);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v8 = 0xD00000000000002DLL;
    v9 = 0x8000000242C696C0;
    v11 = 9;
    goto LABEL_12;
  }
  if (__OFADD__((*(unsigned int *)(v7 + 48) + 3) & 0x1FFFFFFFCLL, 4 * (a1 / 4)))
  {
    __break(1u);
LABEL_8:
    __break(1u);
LABEL_9:
    sub_242A929A8((uint64_t)&v8, &qword_257224A28);
    goto LABEL_10;
  }
  v5 = swift_allocObject();
  if (!v5)
  {
    v8 = 0;
    v9 = 0xE000000000000000;
    sub_242C48C38();
    sub_242C48314();
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v11 = 9;
LABEL_12:
    sub_242A59170();
  }
  *(_QWORD *)(v5 + 16) = 0;
  if (__OFSUB__(a1, 8))
    goto LABEL_8;
  a2(v5 + 24, v5 + 24 + a1 - 8);
  return swift_retain();
}

uint64_t sub_242ADA498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;

  v11 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for Field() + 36));
  return sub_242ADA4FC(v11, a2, a3, a4, a5, v11, a6);
}

uint64_t sub_242ADA4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v15;

  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242B8FB74(a7, (uint64_t)v12);
  LODWORD(a7) = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  v13 = *MEMORY[0x24BEE27F8];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((_DWORD)a7 == v13)
    return sub_242C491E4();
  if (*(_BYTE *)(a3 + 32) == 1)
    return sub_242C48E30();
  return sub_242C494C0();
}

uint64_t sub_242ADA618(uint64_t a1, uint64_t a2)
{
  return sub_242AD9E54(a1, a2);
}

uint64_t sub_242ADA620()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242ADA644(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242AD9EB0(a1, a2, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_242ADA64C()
{
  return sub_242AD9AD0();
}

uint64_t sub_242ADA658@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_242AD9DFC(*(_QWORD *)(v3 + 16), a1, a2, a3);
}

uint64_t sub_242ADA670@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_242AD8704(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 24), a2);
}

uint64_t dynamic_cast_existential_0_class_conditional(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

uint64_t sub_242ADA6BC(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242ADA0AC(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t sub_242ADA6C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_242ADA6E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_242AD8FBC(a1);
}

uint64_t sub_242ADA708()
{
  return 16;
}

BOOL sub_242ADA714(_QWORD *a1, _QWORD *a2)
{
  return *a2 == *a1;
}

uint64_t sub_242ADA728()
{
  return sub_242C48788();
}

_QWORD *sub_242ADA730(_QWORD *result, _QWORD *a2)
{
  *a2 = result[1];
  a2[1] = *result;
  return result;
}

uint64_t sub_242ADA754@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  return sub_242ADA658(a1, a2, a3);
}

void OUTLINED_FUNCTION_0_41(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  *(_QWORD *)(a1 - 48) = 0x206874615079656BLL;
  *(_QWORD *)(a1 - 40) = v4;
  strcpy((char *)(a1 - 23), "c bitmask ");
  *(_QWORD *)(a1 - 31) = *(uint64_t *)((char *)v1 + 9);
  *(_QWORD *)(v3 - 112) = v2;
}

uint64_t OUTLINED_FUNCTION_4_29()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_5_30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return swift_getTupleTypeMetadata();
}

uint64_t OUTLINED_FUNCTION_6_30()
{
  return sub_242C484E8();
}

uint64_t OUTLINED_FUNCTION_10_20()
{
  return sub_242C480E0();
}

_QWORD *OUTLINED_FUNCTION_12_18()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 136), v0);
}

uint64_t OUTLINED_FUNCTION_13_21()
{
  return sub_242C485C0();
}

uint64_t OUTLINED_FUNCTION_14_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for StoredPropertyInfo(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_15_17()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_16()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
}

_QWORD *OUTLINED_FUNCTION_17_18()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 128), v0);
}

void OUTLINED_FUNCTION_18_19(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_242A929A8(v2 - 176, a2);
}

uint64_t OUTLINED_FUNCTION_19_16(uint64_t (*a1)(_QWORD, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_242B8FB9C(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_20_20(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  return sub_242A7DAD0(a1, a2, v8, v9, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_21_15@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 320));
}

void OUTLINED_FUNCTION_23_18(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242B8FB74(v1, a1);
}

uint64_t OUTLINED_FUNCTION_24_16()
{
  return sub_242C4859C();
}

uint64_t OUTLINED_FUNCTION_25_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_242C48D10();
}

uint64_t OUTLINED_FUNCTION_26_17()
{
  return sub_242C4841C();
}

_QWORD *OUTLINED_FUNCTION_27_14()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 176), *(_QWORD *)(v0 - 152));
}

uint64_t OUTLINED_FUNCTION_30_15()
{
  uint64_t v0;

  return sub_242A64518((__int128 *)(v0 - 176), v0 - 136);
}

uint64_t OUTLINED_FUNCTION_31_17()
{
  uint64_t v0;

  return sub_242A64518((__int128 *)(v0 - 176), v0 - 128);
}

void OUTLINED_FUNCTION_33_11()
{
  JUMPOUT(0x2494EC198);
}

uint64_t OUTLINED_FUNCTION_37_13(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t OUTLINED_FUNCTION_38_10()
{
  return sub_242C48E00();
}

uint64_t OUTLINED_FUNCTION_39_11()
{
  return sub_242C485C0();
}

uint64_t OUTLINED_FUNCTION_40_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_41_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for StoredPropertyInfo(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_43_12()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_44_8()
{
  return swift_dynamicCast();
}

void sub_242ADA960(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v6 = MEMORY[0x24BEE4AF8];
      sub_242AC3124();
      if (v2 < 0)
        break;
      v3 = 0;
      while (v2 != v3)
      {
        if ((a1 & 0xC000000000000001) != 0)
          MEMORY[0x2494EC84C](v3, a1);
        else
          OUTLINED_FUNCTION_123_0();
        OUTLINED_FUNCTION_123_0();
        swift_getAtKeyPath();
        swift_release_n();
        v4 = *(_QWORD *)(v6 + 16);
        if (v4 >= *(_QWORD *)(v6 + 24) >> 1)
          sub_242AC3124();
        ++v3;
        *(_QWORD *)(v6 + 16) = v4 + 1;
        *(_QWORD *)(v6 + 8 * v4 + 32) = v5;
        if (v2 == v3)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      sub_242C480E0();
      v2 = sub_242C48FC8();
      swift_bridgeObjectRelease();
      if (!v2)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_release();
  }
}

void sub_242ADAAF4(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_242AC3680();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    v10 = v1 & 0xC000000000000001;
    v4 = v1;
    while (v2 != v3)
    {
      if (v10)
        MEMORY[0x2494EC84C](v3, v1);
      else
        OUTLINED_FUNCTION_91();
      v5 = sub_242C48B54();
      v7 = v6;
      swift_release();
      v8 = *(_QWORD *)(v11 + 16);
      if (v8 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_242AC3680();
      ++v3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_BYTE *)(v9 + 40) = v7 & 1;
      v1 = v4;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    sub_242C480E0();
    v2 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
}

void sub_242ADAC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  void (*v31)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double (*v45)(char *, uint64_t);
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;

  OUTLINED_FUNCTION_17_17();
  v66 = v0;
  v2 = v1;
  LODWORD(v63) = v3;
  v5 = v4;
  v6 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_1();
  v59 = v7;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_8_11();
  v65 = v9;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_11();
  v61 = v11;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_8_11();
  v60 = v13;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v54 - v15;
  v17 = sub_242C48D28();
  v18 = MEMORY[0x2494EDE24](&unk_242C52AB0, v17);
  v20 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v17, v18, v19);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v54 - v24;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v54 - v29;
  if (!v5)
  {
LABEL_35:
    OUTLINED_FUNCTION_13_11();
    return;
  }
  v64 = v6;
  v31 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v6 + 16);
  v32 = v27;
  v62 = v31;
  v31(v16, v66, v2, v28);
  v33 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v33 + 16) = v63 & 1;
  v63 = v5;
  *(_QWORD *)(v33 + 24) = v5;
  sub_242AD73C8();
  v56 = v30;
  v57 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v22, v30, v20);
  MEMORY[0x2494EDE24](&unk_242C52CB0, v20);
  sub_242C48404();
  OUTLINED_FUNCTION_15_18();
  if (!v67.n128_u64[0])
  {
    v58 = MEMORY[0x24BEE4AF8];
LABEL_34:
    v45 = *(double (**)(char *, uint64_t))(v57 + 8);
    v46 = v45(v25, v20);
    v67 = 0uLL;
    Array<A>.resolve(descriptor:)(&v67, v58, v47, v48, v49, v50, v51, v52, v46, v53);
    swift_bridgeObjectRelease();
    v45(v56, v20);
    goto LABEL_35;
  }
  v58 = MEMORY[0x24BEE4AF8];
  v34 = v65;
  while (1)
  {
    while (1)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_40_10();
      sub_242C48E30();
      if (!OUTLINED_FUNCTION_68_6())
        break;
      OUTLINED_FUNCTION_18_20(v60);
      if ((v63 & 1) != 0)
      {
        OUTLINED_FUNCTION_91();
        OUTLINED_FUNCTION_9_26();
        OUTLINED_FUNCTION_2_37();
        v35 = ~*(_QWORD *)(v67.n128_u64[0] + 32) & 0xF000000000000007;
        swift_release();
        if (v35)
        {
          OUTLINED_FUNCTION_40_11();
          OUTLINED_FUNCTION_9_26();
          OUTLINED_FUNCTION_2_37();
          v38 = *(_QWORD *)(v67.n128_u64[0] + 32);
          if ((~v38 & 0xF000000000000007) == 0)
            goto LABEL_19;
          goto LABEL_24;
        }
        v34 = v65;
      }
      else
      {
        OUTLINED_FUNCTION_91();
        OUTLINED_FUNCTION_2_37();
      }
      v36 = v61;
      OUTLINED_FUNCTION_18_20(v61);
      OUTLINED_FUNCTION_6_31(v36);
LABEL_15:
      OUTLINED_FUNCTION_31_15();
LABEL_21:
      OUTLINED_FUNCTION_15_18();
      if (!v67.n128_u64[0])
        goto LABEL_34;
    }
    sub_242C48E30();
    if (OUTLINED_FUNCTION_68_6())
      break;
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_15_18();
    if (!v67.n128_u64[0])
      goto LABEL_34;
  }
  OUTLINED_FUNCTION_18_20(v34);
  if ((v63 & 2) == 0)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_2_37();
LABEL_17:
    OUTLINED_FUNCTION_18_20(v59);
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_31_15();
LABEL_20:
    v34 = v65;
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_9_26();
  OUTLINED_FUNCTION_2_37();
  v37 = ~*(_QWORD *)(v67.n128_u64[0] + 32) & 0xF000000000000007;
  swift_release();
  if (!v37)
    goto LABEL_17;
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_9_26();
  OUTLINED_FUNCTION_2_37();
  v38 = *(_QWORD *)(v67.n128_u64[0] + 32);
  if ((~v38 & 0xF000000000000007) == 0)
  {
LABEL_19:
    OUTLINED_FUNCTION_31_15();
    OUTLINED_FUNCTION_8_1();
    goto LABEL_20;
  }
LABEL_24:
  v34 = v65;
  if ((v38 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_31_15();
    OUTLINED_FUNCTION_8_1();
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_91();
  swift_getAtKeyPath();
  OUTLINED_FUNCTION_135();
  v39 = *(_QWORD *)(v67.n128_u64[0] + 32);
  if ((~v39 & 0xF000000000000007) != 0)
  {
    if ((v39 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_24_0();
      goto LABEL_38;
    }
    sub_242A7028C();
    OUTLINED_FUNCTION_157_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_242A5E1D4();
      v58 = v43;
    }
    v40 = *(_QWORD *)(v58 + 16);
    v41 = v40 + 1;
    if (v40 >= *(_QWORD *)(v58 + 24) >> 1)
    {
      v55 = v40 + 1;
      sub_242A5E1D4();
      v41 = v55;
      v58 = v44;
    }
    v42 = v58;
    *(_QWORD *)(v58 + 16) = v41;
    *(_QWORD *)(v42 + 8 * v40 + 32) = v39 & 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_85_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_105_0();
LABEL_38:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

Swift::Void __swiftcall Layer.prepare(for:)(NeuralNetworks::LearningPhase a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_17_17();
  v3 = v1;
  v5 = v4;
  v7 = v6;
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_242C48E30();
  v21 = MEMORY[0x2494EDE24](&unk_242C52AB0, v10);
  v13 = OUTLINED_FUNCTION_77_4(v21, v11, v21, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_27_9();
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v20 - v17;
  v19 = *v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v9, v3, v5);
  sub_242AD73C8();
  OUTLINED_FUNCTION_2_33(v2, (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  MEMORY[0x2494EDE24](&unk_242C52CB0, v13);
  sub_242C48404();
  OUTLINED_FUNCTION_46_9();
  while (v23)
  {
    swift_bridgeObjectRelease();
    LOBYTE(v23) = v19;
    swift_setAtWritableKeyPath();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_46_9();
  }
  OUTLINED_FUNCTION_2_37();
  OUTLINED_FUNCTION_6_31((uint64_t)v18);
  OUTLINED_FUNCTION_13_11();
}

uint64_t Layer.callAsFunction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(void);

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_63_7();
    v3 = v4();
  }
  MEMORY[0x24BDAC7A8](v3);
  return sub_242B92F94();
}

uint64_t sub_242ADB3EC(_QWORD *a1)
{
  uint64_t v1;

  return nullsub_1(*a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8) | (*(unsigned __int8 *)(v1 + 9) << 8));
}

uint64_t sub_242ADB414()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t *);
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t *v22;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _BYTE v41[128];
  _QWORD v42[16];
  _BYTE __src[128];
  _BYTE __dst[96];
  _BYTE v45[136];

  memcpy(__dst, v0, sizeof(__dst));
  sub_242AEF150((uint64_t)__dst);
  sub_242BDA968();
  memcpy(v45, __src, 0x80uLL);
  memcpy(v42, __src, sizeof(v42));
  sub_242AEF1C4((uint64_t)v45);
  v1 = v42[12];
  if (*(_QWORD *)(v42[12] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC32C();
        v1 = v2;
      }
      v3 = *(_QWORD *)(v1 + 16);
      if (!v3)
        break;
      v4 = v3 - 1;
      v5 = v1 + 16 * v4;
      v6 = *(_QWORD *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(_QWORD *)(v1 + 16) = v4;
      v42[12] = v1;
      LODWORD(v25) = v5;
      v7 = (uint64_t (*)(uint64_t, uint64_t *))v42[13];
      if (v42[13])
      {
        v8 = *(_QWORD *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        v9 = v7(v8, &v25);
        swift_endAccess();
        if ((v9 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224BB8);
          sub_242A7AF34(&qword_257224BD0, &qword_257224BB8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224BB8);
      swift_dynamicCastClassUnconditional();
      v10 = v42[15];
      v11 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v42[15] + 16);
      if (__OFADD__(v13, v12))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_242A5E0B4();
        v10 = v14;
      }
      if (*(_QWORD *)(v11 + 16))
      {
        v15 = *(_QWORD *)(v10 + 16);
        if ((*(_QWORD *)(v10 + 24) >> 1) - v15 < v12)
          goto LABEL_35;
        v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v12)
        {
          v18 = *(_QWORD *)(v10 + 16);
          v19 = __OFADD__(v18, v12);
          v20 = v18 + v12;
          if (v19)
            goto LABEL_36;
          *(_QWORD *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224BC0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224BC8), swift_dynamicCastClass()))
      {
        swift_retain();
        v21 = (void (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
        v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v23 = sub_242A79120();
          swift_release();
        }
        v21(v41, 0);
        swift_release();
      }
      swift_release();
      v1 = v42[12];
      if (!*(_QWORD *)(v42[12] + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    v25 = v42[0];
    v26 = v42[1];
    v27 = v42[2];
    v28 = v42[3];
    v29 = BYTE2(v42[3]);
    v30 = v42[4];
    v31 = v42[5];
    v32 = *(_QWORD *)((char *)&v42[5] + 4);
    v33 = v42[7];
    v34 = v42[8];
    v35 = v42[9];
    v36 = v42[10];
    v37 = v42[11];
    v38 = v1;
    v39 = *(_OWORD *)&v42[13];
    v40 = v42[15];
    sub_242AEF26C((uint64_t)&v25);
    memcpy(v41, __src, sizeof(v41));
    return sub_242AEF26C((uint64_t)v41);
  }
  return result;
}

uint64_t sub_242ADB870()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, int *);
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD);
  uint64_t *v24;
  uint64_t *v25;
  uint64_t result;
  uint64_t v27;
  char v28[36];
  int v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE __dst[96];

  memcpy(__dst, v0, 0x58uLL);
  sub_242AEFA6C((uint64_t)__dst);
  sub_242BDAF0C();
  v1 = v57;
  v30 = v45;
  v31 = v46;
  v32 = v47;
  v33 = v48;
  v34 = v49;
  v35 = v50;
  v36 = v51;
  v37 = v52;
  v38 = v53;
  v39 = v54;
  v40 = v55;
  v41 = v56;
  v42 = v57;
  v43 = v58;
  v44 = v59;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v57);
  v2 = *(_QWORD *)(v56 + 16);
  sub_242C480E0();
  if (v2)
  {
    v3 = v56;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC35C();
        v3 = v4;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (!v5)
        break;
      v6 = v5 - 1;
      v7 = v3 + 16 * v6;
      v8 = *(_QWORD *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(_QWORD *)(v3 + 16) = v6;
      v41 = v3;
      v29 = v7;
      v9 = (uint64_t (*)(uint64_t, int *))v42;
      if (v42)
      {
        v10 = *(_QWORD *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        v11 = v9(v10, &v29);
        swift_endAccess();
        if ((v11 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225258);
          sub_242A7AF34(&qword_257225270, &qword_257225258, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225258);
      swift_dynamicCastClassUnconditional();
      v12 = v44;
      v13 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v44 + 16);
      if (__OFADD__(v15, v14))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_242A5E0B4();
        v12 = v16;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        v17 = *(_QWORD *)(v12 + 16);
        if ((*(_QWORD *)(v12 + 24) >> 1) - v17 < v14)
          goto LABEL_38;
        v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v14)
        {
          v20 = *(_QWORD *)(v12 + 16);
          v21 = __OFADD__(v20, v14);
          v22 = v20 + v14;
          if (v21)
            goto LABEL_39;
          *(_QWORD *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225260);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225268), swift_dynamicCastClass()))
      {
        swift_retain();
        v23 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v25 = sub_242A79120();
          swift_release();
        }
        v23(v28, 0);
        swift_release();
      }
      swift_release();
      v3 = v41;
      if (!*(_QWORD *)(v41 + 16))
      {
        v27 = v42;
        v1 = v57;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v57;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADBD44()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, _DWORD *);
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t *v22;
  uint64_t *v23;
  uint64_t result;
  _DWORD v25[34];
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[168];
  _BYTE v30[168];
  _BYTE __src[168];
  _BYTE __dst[136];
  _BYTE v33[176];

  memcpy(__dst, v0, sizeof(__dst));
  sub_242A97FBC((uint64_t)__dst);
  sub_242BDB3E8();
  memcpy(v33, __src, 0xA8uLL);
  memcpy(v30, __src, sizeof(v30));
  sub_242AEF834((uint64_t)v33);
  v1 = *(_QWORD *)&v30[136];
  if (*(_QWORD *)(*(_QWORD *)&v30[136] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC38C();
        v1 = v2;
      }
      v3 = *(_QWORD *)(v1 + 16);
      if (!v3)
        break;
      v4 = v3 - 1;
      v5 = v1 + 16 * v4;
      v6 = *(_QWORD *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(_QWORD *)(v1 + 16) = v4;
      *(_QWORD *)&v30[136] = v1;
      v25[0] = v5;
      v7 = *(uint64_t (**)(uint64_t, _DWORD *))&v30[144];
      if (*(_QWORD *)&v30[144])
      {
        v8 = *(_QWORD *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        v9 = v7(v8, v25);
        swift_endAccess();
        if ((v9 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225238);
          sub_242A7AF34(&qword_257225250, &qword_257225238, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225238);
      swift_dynamicCastClassUnconditional();
      v10 = *(_QWORD *)&v30[160];
      v11 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(*(_QWORD *)&v30[160] + 16);
      if (__OFADD__(v13, v12))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_242A5E0B4();
        v10 = v14;
      }
      if (*(_QWORD *)(v11 + 16))
      {
        v15 = *(_QWORD *)(v10 + 16);
        if ((*(_QWORD *)(v10 + 24) >> 1) - v15 < v12)
          goto LABEL_35;
        v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v12)
        {
          v18 = *(_QWORD *)(v10 + 16);
          v19 = __OFADD__(v18, v12);
          v20 = v18 + v12;
          if (v19)
            goto LABEL_36;
          *(_QWORD *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225240);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225248), swift_dynamicCastClass()))
      {
        swift_retain();
        v21 = (void (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
        v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v23 = sub_242A79120();
          swift_release();
        }
        v21(v29, 0);
        swift_release();
      }
      swift_release();
      v1 = *(_QWORD *)&v30[136];
      if (!*(_QWORD *)(*(_QWORD *)&v30[136] + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    memcpy(v25, v30, sizeof(v25));
    v26 = v1;
    v27 = *(_OWORD *)&v30[144];
    v28 = *(_QWORD *)&v30[160];
    sub_242AEF8B0((uint64_t)v25);
    memcpy(v29, __src, sizeof(v29));
    return sub_242AEF8B0((uint64_t)v29);
  }
  return result;
}

uint64_t sub_242ADC13C()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, _DWORD *);
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t *v22;
  uint64_t *v23;
  uint64_t result;
  _DWORD v25[40];
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[192];
  _QWORD v30[24];
  _BYTE __src[192];
  _BYTE __dst[160];
  _BYTE v33[200];

  memcpy(__dst, v0, 0x9CuLL);
  sub_242AEF40C((uint64_t)__dst);
  sub_242BDB87C();
  memcpy(v33, __src, 0xC0uLL);
  memcpy(v30, __src, sizeof(v30));
  sub_242AEF4B4((uint64_t)v33);
  v1 = v30[20];
  if (*(_QWORD *)(v30[20] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC3BC();
        v1 = v2;
      }
      v3 = *(_QWORD *)(v1 + 16);
      if (!v3)
        break;
      v4 = v3 - 1;
      v5 = v1 + 16 * v4;
      v6 = *(_QWORD *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(_QWORD *)(v1 + 16) = v4;
      v30[20] = v1;
      v25[0] = v5;
      v7 = (uint64_t (*)(uint64_t, _DWORD *))v30[21];
      if (v30[21])
      {
        v8 = *(_QWORD *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        v9 = v7(v8, v25);
        swift_endAccess();
        if ((v9 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224C58);
          sub_242A7AF34(&qword_257224C70, &qword_257224C58, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C58);
      swift_dynamicCastClassUnconditional();
      v10 = v30[23];
      v11 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v30[23] + 16);
      if (__OFADD__(v13, v12))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_242A5E0B4();
        v10 = v14;
      }
      if (*(_QWORD *)(v11 + 16))
      {
        v15 = *(_QWORD *)(v10 + 16);
        if ((*(_QWORD *)(v10 + 24) >> 1) - v15 < v12)
          goto LABEL_35;
        v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v12)
        {
          v18 = *(_QWORD *)(v10 + 16);
          v19 = __OFADD__(v18, v12);
          v20 = v18 + v12;
          if (v19)
            goto LABEL_36;
          *(_QWORD *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C60);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224C68), swift_dynamicCastClass()))
      {
        swift_retain();
        v21 = (void (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
        v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v23 = sub_242A79120();
          swift_release();
        }
        v21(v29, 0);
        swift_release();
      }
      swift_release();
      v1 = v30[20];
      if (!*(_QWORD *)(v30[20] + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    memcpy(v25, v30, 0x9CuLL);
    v26 = v1;
    v27 = *(_OWORD *)&v30[21];
    v28 = v30[23];
    sub_242AEF590((uint64_t)v25);
    memcpy(v29, __src, sizeof(v29));
    return sub_242AEF590((uint64_t)v29);
  }
  return result;
}

uint64_t sub_242ADC534()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, int *);
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD);
  uint64_t *v24;
  uint64_t *v25;
  uint64_t result;
  uint64_t v27;
  char v28[36];
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE __dst[80];

  memcpy(__dst, v0, 0x43uLL);
  sub_242AEF778((uint64_t)__dst);
  sub_242BDBD10();
  v1 = v63;
  v30 = v48;
  v31 = v49;
  v32 = v50;
  v33 = v51;
  v34 = v52;
  v35 = v53;
  v36 = v54;
  v37 = v55;
  v38 = v56;
  v39 = v57;
  v40 = v58;
  v41 = v59;
  v42 = v60;
  v43 = v61;
  v44 = v62;
  v45 = v63;
  v46 = v64;
  v47 = v65;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v63);
  v2 = *(_QWORD *)(v62 + 16);
  sub_242C480E0();
  if (v2)
  {
    v3 = v62;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC294();
        v3 = v4;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (!v5)
        break;
      v6 = v5 - 1;
      v7 = v3 + 16 * v6;
      v8 = *(_QWORD *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(_QWORD *)(v3 + 16) = v6;
      v44 = v3;
      v29 = v7;
      v9 = (uint64_t (*)(uint64_t, int *))v45;
      if (v45)
      {
        v10 = *(_QWORD *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        v11 = v9(v10, &v29);
        swift_endAccess();
        if ((v11 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224FE8);
          sub_242A7AF34(&qword_257225000, &qword_257224FE8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FE8);
      swift_dynamicCastClassUnconditional();
      v12 = v47;
      v13 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v47 + 16);
      if (__OFADD__(v15, v14))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_242A5E0B4();
        v12 = v16;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        v17 = *(_QWORD *)(v12 + 16);
        if ((*(_QWORD *)(v12 + 24) >> 1) - v17 < v14)
          goto LABEL_38;
        v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v14)
        {
          v20 = *(_QWORD *)(v12 + 16);
          v21 = __OFADD__(v20, v14);
          v22 = v20 + v14;
          if (v21)
            goto LABEL_39;
          *(_QWORD *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FF0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224FF8), swift_dynamicCastClass()))
      {
        swift_retain();
        v23 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v25 = sub_242A79120();
          swift_release();
        }
        v23(v28, 0);
        swift_release();
      }
      swift_release();
      v3 = v44;
      if (!*(_QWORD *)(v44 + 16))
      {
        v27 = v45;
        v1 = v63;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v63;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADCA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, int *);
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD);
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t result;
  char v27[36];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_242BDC2C8();
  v0 = v34;
  v29 = v33;
  v30 = v34;
  v31 = v35;
  v32 = v36;
  swift_retain();
  sub_242A6548C(v34);
  v1 = *(_QWORD *)(v33 + 16);
  sub_242C480E0();
  if (v1)
  {
    v2 = v33;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC3EC();
        v2 = v3;
      }
      v4 = *(_QWORD *)(v2 + 16);
      if (!v4)
        break;
      v5 = v4 - 1;
      v6 = v2 + 16 * v5;
      v7 = *(_QWORD *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(_QWORD *)(v2 + 16) = v5;
      v29 = v2;
      v28 = v6;
      v8 = (uint64_t (*)(uint64_t, int *))v30;
      if (v30)
      {
        v9 = *(_QWORD *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        v10 = v8(v9, &v28);
        swift_endAccess();
        if ((v10 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224E38);
          sub_242A7AF34(&qword_257224E50, &qword_257224E38, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E38);
      swift_dynamicCastClassUnconditional();
      v11 = v32;
      v12 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v32 + 16);
      if (__OFADD__(v14, v13))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_242A5E0B4();
        v11 = v15;
      }
      if (*(_QWORD *)(v12 + 16))
      {
        v16 = *(_QWORD *)(v11 + 16);
        if ((*(_QWORD *)(v11 + 24) >> 1) - v16 < v13)
          goto LABEL_38;
        v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v19 = *(_QWORD *)(v11 + 16);
          v20 = __OFADD__(v19, v13);
          v21 = v19 + v13;
          if (v20)
            goto LABEL_39;
          *(_QWORD *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E40);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224E48), swift_dynamicCastClass()))
      {
        swift_retain();
        v22 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v24 = sub_242A79120();
          swift_release();
        }
        v22(v27, 0);
        swift_release();
      }
      swift_release();
      v2 = v29;
      if (!*(_QWORD *)(v29 + 16))
      {
        v25 = v30;
        v0 = v34;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v25 = v34;
LABEL_34:
    swift_release();
    sub_242A6549C(v25);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADCE18(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, char *);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t *v31;
  uint64_t *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42[4];
  uint64_t v43[2];
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[4];

  v2 = v1[1];
  v69[0] = *v1;
  v69[1] = v2;
  v69[2] = v1[2];
  sub_242AEF7EC((uint64_t)v69);
  sub_242BDC708((uint64_t)v69, (uint64_t)sub_242AEB844, 0, v3, v4, v5, v6, v7, v34, v35, v36, v37, v38, v40, a1, v42[0], v42[1], v42[2], v42[3],
    v43[0]);
  v8 = v66;
  v43[1] = v56;
  v44 = v57;
  v45 = v58;
  v46 = v59;
  v47 = v60;
  v48 = v61;
  v49 = v62;
  v50 = v63;
  v51 = v64;
  v52 = v65;
  v53 = v66;
  v54 = v67;
  v55 = v68;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v66);
  v9 = *(_QWORD *)(v65 + 16);
  sub_242C480E0();
  if (v9)
  {
    v10 = v65;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC41C();
        v10 = v11;
      }
      v12 = *(_QWORD *)(v10 + 16);
      if (!v12)
        break;
      v13 = v12 - 1;
      v14 = v10 + 16 * v13;
      v15 = *(_QWORD *)(v14 + 32);
      LODWORD(v14) = *(_DWORD *)(v14 + 40);
      *(_QWORD *)(v10 + 16) = v13;
      v52 = v10;
      HIDWORD(v43[0]) = v14;
      v16 = (uint64_t (*)(uint64_t, char *))v53;
      if (v53)
      {
        v17 = *(_QWORD *)(v15 + 32);
        swift_beginAccess();
        swift_retain();
        v18 = v16(v17, (char *)v43 + 4);
        swift_endAccess();
        if ((v18 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225118);
          sub_242A7AF34(&qword_257225130, &qword_257225118, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225118);
      swift_dynamicCastClassUnconditional();
      v19 = v55;
      v20 = *(_QWORD *)(v15 + 16);
      v21 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v55 + 16);
      if (__OFADD__(v22, v21))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_242A5E0B4();
        v19 = v23;
      }
      if (*(_QWORD *)(v20 + 16))
      {
        v24 = *(_QWORD *)(v19 + 16);
        if ((*(_QWORD *)(v19 + 24) >> 1) - v24 < v21)
          goto LABEL_38;
        v25 = v19 + 16 * v24 + 32;
        if (v20 + 32 < v25 + 16 * v21 && v25 < v20 + 32 + 16 * v21)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v21)
        {
          v27 = *(_QWORD *)(v19 + 16);
          v28 = __OFADD__(v27, v21);
          v29 = v27 + v21;
          if (v28)
            goto LABEL_39;
          *(_QWORD *)(v19 + 16) = v29;
        }
      }
      else if (v21)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225120);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225128), swift_dynamicCastClass()))
      {
        swift_retain();
        v30 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
        v32 = v31;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v32 = sub_242A79120();
          swift_release();
        }
        v30(v42, 0);
        swift_release();
      }
      swift_release();
      v10 = v52;
      if (!*(_QWORD *)(v52 + 16))
      {
        v39 = v53;
        v8 = v66;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v39 = v66;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v39);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADD2D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, char *);
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  void (*v32)(uint64_t *, _QWORD);
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43[4];
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v3 = *v1;
  v4 = v2[2];
  if (*((_BYTE *)v2 + 9))
    v5 = 256;
  else
    v5 = 0;
  v6 = v5 | *((unsigned __int8 *)v2 + 8);
  swift_retain();
  swift_retain();
  sub_242BDCC38(v3, v6, v4, (uint64_t)sub_242AEB844, 0, v7, v8, v9, v37, v38, v39, v40, v41, a1, v43[0], v43[1], v43[2], v43[3], v44,
    v45);
  v10 = v58;
  v45 = v53;
  v46 = v54;
  v47 = v55;
  v48 = v56;
  v49 = v57;
  v50 = v58;
  v51 = v59;
  v52 = v60;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v58);
  v11 = *(_QWORD *)(v57 + 16);
  sub_242C480E0();
  if (v11)
  {
    v12 = v57;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC44C();
        v12 = v13;
      }
      v14 = *(_QWORD *)(v12 + 16);
      if (!v14)
        break;
      v15 = v14 - 1;
      v16 = v12 + 16 * v15;
      v17 = *(_QWORD *)(v16 + 32);
      LODWORD(v16) = *(_DWORD *)(v16 + 40);
      *(_QWORD *)(v12 + 16) = v15;
      v49 = v12;
      HIDWORD(v44) = v16;
      v18 = (uint64_t (*)(uint64_t, char *))v50;
      if (v50)
      {
        v19 = *(_QWORD *)(v17 + 32);
        swift_beginAccess();
        swift_retain();
        v20 = v18(v19, (char *)&v44 + 4);
        swift_endAccess();
        if ((v20 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224D38);
          sub_242A7AF34(&qword_257224D50, &qword_257224D38, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D38);
      swift_dynamicCastClassUnconditional();
      v21 = v52;
      v22 = *(_QWORD *)(v17 + 16);
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v52 + 16);
      if (__OFADD__(v24, v23))
        goto LABEL_39;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v24 + v23 > *(_QWORD *)(v21 + 24) >> 1)
      {
        sub_242A5E0B4();
        v21 = v25;
      }
      if (*(_QWORD *)(v22 + 16))
      {
        v26 = *(_QWORD *)(v21 + 16);
        if ((*(_QWORD *)(v21 + 24) >> 1) - v26 < v23)
          goto LABEL_41;
        v27 = v21 + 16 * v26 + 32;
        if (v22 + 32 < v27 + 16 * v23 && v27 < v22 + 32 + 16 * v23)
          goto LABEL_43;
        swift_arrayInitWithCopy();
        if (v23)
        {
          v29 = *(_QWORD *)(v21 + 16);
          v30 = __OFADD__(v29, v23);
          v31 = v29 + v23;
          if (v30)
            goto LABEL_42;
          *(_QWORD *)(v21 + 16) = v31;
        }
      }
      else if (v23)
      {
        goto LABEL_40;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D40);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224D48), swift_dynamicCastClass()))
      {
        swift_retain();
        v32 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
        v34 = v33;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v34 = sub_242A79120();
          swift_release();
        }
        v32(v43, 0);
        swift_release();
      }
      swift_release();
      v12 = v49;
      if (!*(_QWORD *)(v49 + 16))
      {
        v35 = v50;
        v10 = v58;
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v35 = v58;
LABEL_37:
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v35);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADD768()
{
  _OWORD *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, int *);
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t result;
  char v29[36];
  int v30;
  char v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[3];

  v1 = v0[1];
  v49[0] = *v0;
  v49[1] = v1;
  sub_242AEF6C0((uint64_t)v49);
  sub_242BDD158();
  v2 = v46;
  v31 = v40;
  v32 = v41;
  v33 = v42;
  v34 = v43;
  v35 = v44;
  v36 = v45;
  v37 = v46;
  v38 = v47;
  v39 = v48;
  swift_retain();
  swift_retain();
  sub_242A6548C(v46);
  v3 = *(_QWORD *)(v45 + 16);
  sub_242C480E0();
  if (v3)
  {
    v4 = v45;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC47C();
        v4 = v5;
      }
      v6 = *(_QWORD *)(v4 + 16);
      if (!v6)
        break;
      v7 = v6 - 1;
      v8 = v4 + 16 * v7;
      v9 = *(_QWORD *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(_QWORD *)(v4 + 16) = v7;
      v36 = v4;
      v30 = v8;
      v10 = (uint64_t (*)(uint64_t, int *))v37;
      if (v37)
      {
        v11 = *(_QWORD *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        v12 = v10(v11, &v30);
        swift_endAccess();
        if ((v12 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224CF8);
          sub_242A7AF34(&qword_257224D10, &qword_257224CF8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224CF8);
      swift_dynamicCastClassUnconditional();
      v13 = v39;
      v14 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v39 + 16);
      if (__OFADD__(v16, v15))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_242A5E0B4();
        v13 = v17;
      }
      if (*(_QWORD *)(v14 + 16))
      {
        v18 = *(_QWORD *)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - v18 < v15)
          goto LABEL_38;
        v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v15)
        {
          v21 = *(_QWORD *)(v13 + 16);
          v22 = __OFADD__(v21, v15);
          v23 = v21 + v15;
          if (v22)
            goto LABEL_39;
          *(_QWORD *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D00);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224D08), swift_dynamicCastClass()))
      {
        swift_retain();
        v24 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v26 = sub_242A79120();
          swift_release();
        }
        v24(v29, 0);
        swift_release();
      }
      swift_release();
      v4 = v36;
      if (!*(_QWORD *)(v36 + 16))
      {
        v27 = v37;
        v2 = v46;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v46;
LABEL_34:
    swift_release();
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADDBB8()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, int *);
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD);
  uint64_t *v24;
  uint64_t *v25;
  uint64_t result;
  uint64_t v27;
  char v28[36];
  int v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE __dst[96];

  memcpy(__dst, v0, 0x58uLL);
  sub_242AEFA6C((uint64_t)__dst);
  sub_242BDD624();
  v1 = v57;
  v30 = v45;
  v31 = v46;
  v32 = v47;
  v33 = v48;
  v34 = v49;
  v35 = v50;
  v36 = v51;
  v37 = v52;
  v38 = v53;
  v39 = v54;
  v40 = v55;
  v41 = v56;
  v42 = v57;
  v43 = v58;
  v44 = v59;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v57);
  v2 = *(_QWORD *)(v56 + 16);
  sub_242C480E0();
  if (v2)
  {
    v3 = v56;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC4AC();
        v3 = v4;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (!v5)
        break;
      v6 = v5 - 1;
      v7 = v3 + 16 * v6;
      v8 = *(_QWORD *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(_QWORD *)(v3 + 16) = v6;
      v41 = v3;
      v29 = v7;
      v9 = (uint64_t (*)(uint64_t, int *))v42;
      if (v42)
      {
        v10 = *(_QWORD *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        v11 = v9(v10, &v29);
        swift_endAccess();
        if ((v11 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225298);
          sub_242A7AF34(&qword_2572252B0, &qword_257225298, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225298);
      swift_dynamicCastClassUnconditional();
      v12 = v44;
      v13 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v44 + 16);
      if (__OFADD__(v15, v14))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_242A5E0B4();
        v12 = v16;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        v17 = *(_QWORD *)(v12 + 16);
        if ((*(_QWORD *)(v12 + 24) >> 1) - v17 < v14)
          goto LABEL_38;
        v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v14)
        {
          v20 = *(_QWORD *)(v12 + 16);
          v21 = __OFADD__(v20, v14);
          v22 = v20 + v14;
          if (v21)
            goto LABEL_39;
          *(_QWORD *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572252A0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572252A8), swift_dynamicCastClass()))
      {
        swift_retain();
        v23 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v25 = sub_242A79120();
          swift_release();
        }
        v23(v28, 0);
        swift_release();
      }
      swift_release();
      v3 = v41;
      if (!*(_QWORD *)(v41 + 16))
      {
        v27 = v42;
        v1 = v57;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v57;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADE08C()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t *);
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t *v22;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _BYTE v41[152];
  _BYTE v42[152];
  _BYTE __src[152];
  _BYTE __dst[120];
  _BYTE v45[160];

  memcpy(__dst, v0, sizeof(__dst));
  sub_242AEF92C((uint64_t)__dst);
  sub_242BDDB00();
  memcpy(v45, __src, 0x98uLL);
  memcpy(v42, __src, sizeof(v42));
  sub_242AEF974((uint64_t)v45);
  v1 = *(_QWORD *)&v42[120];
  if (*(_QWORD *)(*(_QWORD *)&v42[120] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC4DC();
        v1 = v2;
      }
      v3 = *(_QWORD *)(v1 + 16);
      if (!v3)
        break;
      v4 = v3 - 1;
      v5 = v1 + 16 * v4;
      v6 = *(_QWORD *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(_QWORD *)(v1 + 16) = v4;
      *(_QWORD *)&v42[120] = v1;
      LODWORD(v25) = v5;
      v7 = *(uint64_t (**)(uint64_t, uint64_t *))&v42[128];
      if (*(_QWORD *)&v42[128])
      {
        v8 = *(_QWORD *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        v9 = v7(v8, &v25);
        swift_endAccess();
        if ((v9 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225278);
          sub_242A7AF34(&qword_257225290, &qword_257225278, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225278);
      swift_dynamicCastClassUnconditional();
      v10 = *(_QWORD *)&v42[144];
      v11 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(*(_QWORD *)&v42[144] + 16);
      if (__OFADD__(v13, v12))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_242A5E0B4();
        v10 = v14;
      }
      if (*(_QWORD *)(v11 + 16))
      {
        v15 = *(_QWORD *)(v10 + 16);
        if ((*(_QWORD *)(v10 + 24) >> 1) - v15 < v12)
          goto LABEL_35;
        v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v12)
        {
          v18 = *(_QWORD *)(v10 + 16);
          v19 = __OFADD__(v18, v12);
          v20 = v18 + v12;
          if (v19)
            goto LABEL_36;
          *(_QWORD *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225280);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225288), swift_dynamicCastClass()))
      {
        swift_retain();
        v21 = (void (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
        v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v23 = sub_242A79120();
          swift_release();
        }
        v21(v41, 0);
        swift_release();
      }
      swift_release();
      v1 = *(_QWORD *)&v42[120];
      if (!*(_QWORD *)(*(_QWORD *)&v42[120] + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    v25 = *(_QWORD *)v42;
    v26 = v42[8];
    v27 = v42[9];
    v28 = *(_QWORD *)&v42[16];
    v29 = v42[24];
    v30 = v42[25];
    v31 = v42[26];
    v32 = *(_OWORD *)&v42[32];
    v33 = *(_OWORD *)&v42[48];
    v34 = *(_OWORD *)&v42[64];
    v35 = *(_OWORD *)&v42[80];
    v36 = *(_OWORD *)&v42[96];
    v37 = *(_QWORD *)&v42[112];
    v38 = v1;
    v39 = *(_OWORD *)&v42[128];
    v40 = *(_QWORD *)&v42[144];
    sub_242AEF9F0((uint64_t)&v25);
    memcpy(v41, __src, sizeof(v41));
    return sub_242AEF9F0((uint64_t)v41);
  }
  return result;
}

uint64_t sub_242ADE4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, char *);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD);
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42[4];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(unsigned __int8 *)(v2 + 4);
  swift_retain();
  swift_retain();
  sub_242BDE00C(v5, v3, v4, (uint64_t)sub_242AEB844, 0, v6, v7, v8, v36, v37, v38, v39, v40, a1, v42[0], v42[1], v42[2], v42[3], v43,
    v44,
    v45,
    v46);
  v9 = v56;
  LODWORD(v44) = v51;
  BYTE4(v44) = v52;
  v45 = v53;
  v46 = v54;
  v47 = v55;
  v48 = v56;
  v49 = v57;
  v50 = v58;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v56);
  v10 = *(_QWORD *)(v55 + 16);
  sub_242C480E0();
  if (v10)
  {
    v11 = v55;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC2C4();
        v11 = v12;
      }
      v13 = *(_QWORD *)(v11 + 16);
      if (!v13)
        break;
      v14 = v13 - 1;
      v15 = v11 + 16 * v14;
      v16 = *(_QWORD *)(v15 + 32);
      LODWORD(v15) = *(_DWORD *)(v15 + 40);
      *(_QWORD *)(v11 + 16) = v14;
      v47 = v11;
      HIDWORD(v43) = v15;
      v17 = (uint64_t (*)(uint64_t, char *))v48;
      if (v48)
      {
        v18 = *(_QWORD *)(v16 + 32);
        swift_beginAccess();
        swift_retain();
        v19 = v17(v18, (char *)&v43 + 4);
        swift_endAccess();
        if ((v19 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224FB8);
          sub_242A7AF34(&qword_257224FD0, &qword_257224FB8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FB8);
      swift_dynamicCastClassUnconditional();
      v20 = v50;
      v21 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v50 + 16);
      if (__OFADD__(v23, v22))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v23 + v22 > *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_242A5E0B4();
        v20 = v24;
      }
      if (*(_QWORD *)(v21 + 16))
      {
        v25 = *(_QWORD *)(v20 + 16);
        if ((*(_QWORD *)(v20 + 24) >> 1) - v25 < v22)
          goto LABEL_38;
        v26 = v20 + 16 * v25 + 32;
        if (v21 + 32 < v26 + 16 * v22 && v26 < v21 + 32 + 16 * v22)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v22)
        {
          v28 = *(_QWORD *)(v20 + 16);
          v29 = __OFADD__(v28, v22);
          v30 = v28 + v22;
          if (v29)
            goto LABEL_39;
          *(_QWORD *)(v20 + 16) = v30;
        }
      }
      else if (v22)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FC0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224FC8), swift_dynamicCastClass()))
      {
        swift_retain();
        v31 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
        v33 = v32;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v33 = sub_242A79120();
          swift_release();
        }
        v31(v42, 0);
        swift_release();
      }
      swift_release();
      v11 = v47;
      if (!*(_QWORD *)(v47 + 16))
      {
        v34 = v48;
        v9 = v56;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v34 = v56;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v34);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADE970()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, _DWORD *);
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD);
  uint64_t *v24;
  uint64_t *v25;
  uint64_t result;
  uint64_t v27;
  char v28[36];
  _DWORD v29[3];
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE __dst[88];

  memcpy(__dst, v0, 0x50uLL);
  sub_242AEF368((uint64_t)__dst);
  sub_242BDE574();
  v1 = v60;
  v29[1] = v46;
  v30 = v47;
  v31 = v48;
  v32 = v49;
  v33 = v50;
  v34 = v51;
  v35 = v52;
  v36 = v53;
  v37 = v54;
  v38 = v55;
  v39 = v56;
  v40 = v57;
  v41 = v58;
  v42 = v59;
  v43 = v60;
  v44 = v61;
  v45 = v62;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v60);
  v2 = *(_QWORD *)(v59 + 16);
  sub_242C480E0();
  if (v2)
  {
    v3 = v59;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC50C();
        v3 = v4;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (!v5)
        break;
      v6 = v5 - 1;
      v7 = v3 + 16 * v6;
      v8 = *(_QWORD *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(_QWORD *)(v3 + 16) = v6;
      v42 = v3;
      v29[0] = v7;
      v9 = (uint64_t (*)(uint64_t, _DWORD *))v43;
      if (v43)
      {
        v10 = *(_QWORD *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        v11 = v9(v10, v29);
        swift_endAccess();
        if ((v11 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224BF8);
          sub_242A7AF34(&qword_257224C10, &qword_257224BF8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224BF8);
      swift_dynamicCastClassUnconditional();
      v12 = v45;
      v13 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v45 + 16);
      if (__OFADD__(v15, v14))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_242A5E0B4();
        v12 = v16;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        v17 = *(_QWORD *)(v12 + 16);
        if ((*(_QWORD *)(v12 + 24) >> 1) - v17 < v14)
          goto LABEL_38;
        v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v14)
        {
          v20 = *(_QWORD *)(v12 + 16);
          v21 = __OFADD__(v20, v14);
          v22 = v20 + v14;
          if (v21)
            goto LABEL_39;
          *(_QWORD *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C00);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224C08), swift_dynamicCastClass()))
      {
        swift_retain();
        v23 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v25 = sub_242A79120();
          swift_release();
        }
        v23(v28, 0);
        swift_release();
      }
      swift_release();
      v3 = v42;
      if (!*(_QWORD *)(v42 + 16))
      {
        v27 = v43;
        v1 = v60;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v60;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADEED0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, char *);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40[4];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;

  v2 = *(_OWORD *)(v1 + 16);
  v58[0] = *(_OWORD *)v1;
  v58[1] = v2;
  v59 = *(_QWORD *)(v1 + 32);
  sub_242AEF3D8((uint64_t)v58);
  sub_242BDEB30((uint64_t)v58, (uint64_t)sub_242AEB844, 0, v3, v4, v5, v6, v7, v35, v36, v37, v38, a1, v40[0], v40[1], v40[2], v40[3], v41, v42,
    v43);
  v8 = v55;
  v42 = v50;
  LOWORD(v43) = v51;
  v44 = v52;
  v45 = v53;
  v46 = v54;
  v47 = v55;
  v48 = v56;
  v49 = v57;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v55);
  v9 = *(_QWORD *)(v54 + 16);
  sub_242C480E0();
  if (v9)
  {
    v10 = v54;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC53C();
        v10 = v11;
      }
      v12 = *(_QWORD *)(v10 + 16);
      if (!v12)
        break;
      v13 = v12 - 1;
      v14 = v10 + 16 * v13;
      v15 = *(_QWORD *)(v14 + 32);
      LODWORD(v14) = *(_DWORD *)(v14 + 40);
      *(_QWORD *)(v10 + 16) = v13;
      v46 = v10;
      HIDWORD(v41) = v14;
      v16 = (uint64_t (*)(uint64_t, char *))v47;
      if (v47)
      {
        v17 = *(_QWORD *)(v15 + 32);
        swift_beginAccess();
        swift_retain();
        v18 = v16(v17, (char *)&v41 + 4);
        swift_endAccess();
        if ((v18 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224C38);
          sub_242A7AF34(&qword_257224C50, &qword_257224C38, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C38);
      swift_dynamicCastClassUnconditional();
      v19 = v49;
      v20 = *(_QWORD *)(v15 + 16);
      v21 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v49 + 16);
      if (__OFADD__(v22, v21))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_242A5E0B4();
        v19 = v23;
      }
      if (*(_QWORD *)(v20 + 16))
      {
        v24 = *(_QWORD *)(v19 + 16);
        if ((*(_QWORD *)(v19 + 24) >> 1) - v24 < v21)
          goto LABEL_38;
        v25 = v19 + 16 * v24 + 32;
        if (v20 + 32 < v25 + 16 * v21 && v25 < v20 + 32 + 16 * v21)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v21)
        {
          v27 = *(_QWORD *)(v19 + 16);
          v28 = __OFADD__(v27, v21);
          v29 = v27 + v21;
          if (v28)
            goto LABEL_39;
          *(_QWORD *)(v19 + 16) = v29;
        }
      }
      else if (v21)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C40);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224C48), swift_dynamicCastClass()))
      {
        swift_retain();
        v30 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
        v32 = v31;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v32 = sub_242A79120();
          swift_release();
        }
        v30(v40, 0);
        swift_release();
      }
      swift_release();
      v10 = v46;
      if (!*(_QWORD *)(v46 + 16))
      {
        v33 = v47;
        v8 = v55;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v33 = v55;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v33);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADF350()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, int *);
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD);
  uint64_t *v26;
  uint64_t *v27;
  uint64_t result;
  uint64_t v29;
  char v30[36];
  int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[5];

  v1 = v0[1];
  v60[0] = *v0;
  v60[1] = v1;
  v2 = v0[3];
  v60[2] = v0[2];
  v60[3] = v2;
  sub_242AEF0FC((uint64_t)v60);
  sub_242BDF044();
  v3 = v57;
  v32 = v46;
  v33 = v47;
  v34 = v48;
  v35 = v49;
  v36 = v50;
  v37 = v51;
  v38 = v52;
  v39 = v53;
  v40 = v54;
  v41 = v55;
  v42 = v56;
  v43 = v57;
  v44 = v58;
  v45 = v59;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v57);
  v4 = *(_QWORD *)(v56 + 16);
  sub_242C480E0();
  if (v4)
  {
    v5 = v56;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC56C();
        v5 = v6;
      }
      v7 = *(_QWORD *)(v5 + 16);
      if (!v7)
        break;
      v8 = v7 - 1;
      v9 = v5 + 16 * v8;
      v10 = *(_QWORD *)(v9 + 32);
      LODWORD(v9) = *(_DWORD *)(v9 + 40);
      *(_QWORD *)(v5 + 16) = v8;
      v42 = v5;
      v31 = v9;
      v11 = (uint64_t (*)(uint64_t, int *))v43;
      if (v43)
      {
        v12 = *(_QWORD *)(v10 + 32);
        swift_beginAccess();
        swift_retain();
        v13 = v11(v12, &v31);
        swift_endAccess();
        if ((v13 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224B98);
          sub_242A7AF34(&qword_257224BB0, &qword_257224B98, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224B98);
      swift_dynamicCastClassUnconditional();
      v14 = v45;
      v15 = *(_QWORD *)(v10 + 16);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v45 + 16);
      if (__OFADD__(v17, v16))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v16 > *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_242A5E0B4();
        v14 = v18;
      }
      if (*(_QWORD *)(v15 + 16))
      {
        v19 = *(_QWORD *)(v14 + 16);
        if ((*(_QWORD *)(v14 + 24) >> 1) - v19 < v16)
          goto LABEL_38;
        v20 = v14 + 16 * v19 + 32;
        if (v15 + 32 < v20 + 16 * v16 && v20 < v15 + 32 + 16 * v16)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v16)
        {
          v22 = *(_QWORD *)(v14 + 16);
          v23 = __OFADD__(v22, v16);
          v24 = v22 + v16;
          if (v23)
            goto LABEL_39;
          *(_QWORD *)(v14 + 16) = v24;
        }
      }
      else if (v16)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224BA0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224BA8), swift_dynamicCastClass()))
      {
        swift_retain();
        v25 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v27 = v26;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v27 = sub_242A79120();
          swift_release();
        }
        v25(v30, 0);
        swift_release();
      }
      swift_release();
      v5 = v42;
      if (!*(_QWORD *)(v42 + 16))
      {
        v29 = v43;
        v3 = v57;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v29 = v57;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v29);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADF844()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, int *);
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  uint64_t *v25;
  uint64_t *v26;
  uint64_t result;
  uint64_t v28;
  char v29[36];
  int v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD v59[3];
  uint64_t v60;

  v1 = *(_OWORD *)(v0 + 16);
  v59[0] = *(_OWORD *)v0;
  v59[1] = v1;
  v59[2] = *(_OWORD *)(v0 + 32);
  v60 = *(_QWORD *)(v0 + 48);
  sub_242AEF314((uint64_t)v59);
  sub_242BDF574();
  v2 = v56;
  v31 = v45;
  v32 = v46;
  v33 = v47;
  v34 = v48;
  v35 = v49;
  v36 = v50;
  v37 = v51;
  v38 = v52;
  v39 = v53;
  v40 = v54;
  v41 = v55;
  v42 = v56;
  v43 = v57;
  v44 = v58;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v56);
  v3 = *(_QWORD *)(v55 + 16);
  sub_242C480E0();
  if (v3)
  {
    v4 = v55;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC59C();
        v4 = v5;
      }
      v6 = *(_QWORD *)(v4 + 16);
      if (!v6)
        break;
      v7 = v6 - 1;
      v8 = v4 + 16 * v7;
      v9 = *(_QWORD *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(_QWORD *)(v4 + 16) = v7;
      v41 = v4;
      v30 = v8;
      v10 = (uint64_t (*)(uint64_t, int *))v42;
      if (v42)
      {
        v11 = *(_QWORD *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        v12 = v10(v11, &v30);
        swift_endAccess();
        if ((v12 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224BD8);
          sub_242A7AF34(&qword_257224BF0, &qword_257224BD8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224BD8);
      swift_dynamicCastClassUnconditional();
      v13 = v44;
      v14 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v44 + 16);
      if (__OFADD__(v16, v15))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_242A5E0B4();
        v13 = v17;
      }
      if (*(_QWORD *)(v14 + 16))
      {
        v18 = *(_QWORD *)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - v18 < v15)
          goto LABEL_38;
        v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v15)
        {
          v21 = *(_QWORD *)(v13 + 16);
          v22 = __OFADD__(v21, v15);
          v23 = v21 + v15;
          if (v22)
            goto LABEL_39;
          *(_QWORD *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224BE0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224BE8), swift_dynamicCastClass()))
      {
        swift_retain();
        v24 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v26 = sub_242A79120();
          swift_release();
        }
        v24(v29, 0);
        swift_release();
      }
      swift_release();
      v4 = v41;
      if (!*(_QWORD *)(v41 + 16))
      {
        v28 = v42;
        v2 = v56;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v28 = v56;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242A6549C(v28);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242ADFD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, char *);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD);
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[4];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_242BDFA8C(*(_QWORD *)v8, *(unsigned __int8 *)(v8 + 8) | (*(unsigned __int8 *)(v8 + 9) << 8), (uint64_t)sub_242AEB844, 0, a5, a6, a7, a8, v36, v37, v38, v39, a1, v40[0], v40[1], v40[2], v40[3], v41, v42,
    v43);
  v9 = v51;
  v42 = v48;
  LOWORD(v43) = v49;
  v44 = v50;
  v45 = v51;
  v46 = v52;
  v47 = v53;
  swift_retain();
  sub_242A6548C(v51);
  v10 = *(_QWORD *)(v50 + 16);
  sub_242C480E0();
  if (v10)
  {
    v11 = v50;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC5FC();
        v11 = v12;
      }
      v13 = *(_QWORD *)(v11 + 16);
      if (!v13)
        break;
      v14 = v13 - 1;
      v15 = v11 + 16 * v14;
      v16 = *(_QWORD *)(v15 + 32);
      LODWORD(v15) = *(_DWORD *)(v15 + 40);
      *(_QWORD *)(v11 + 16) = v14;
      v44 = v11;
      HIDWORD(v41) = v15;
      v17 = (uint64_t (*)(uint64_t, char *))v45;
      if (v45)
      {
        v18 = *(_QWORD *)(v16 + 32);
        swift_beginAccess();
        swift_retain();
        v19 = v17(v18, (char *)&v41 + 4);
        swift_endAccess();
        if ((v19 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572252D8);
          sub_242A7AF34(&qword_2572252F0, &qword_2572252D8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572252D8);
      swift_dynamicCastClassUnconditional();
      v20 = v47;
      v21 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v47 + 16);
      if (__OFADD__(v23, v22))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v23 + v22 > *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_242A5E0B4();
        v20 = v24;
      }
      if (*(_QWORD *)(v21 + 16))
      {
        v25 = *(_QWORD *)(v20 + 16);
        if ((*(_QWORD *)(v20 + 24) >> 1) - v25 < v22)
          goto LABEL_38;
        v26 = v20 + 16 * v25 + 32;
        if (v21 + 32 < v26 + 16 * v22 && v26 < v21 + 32 + 16 * v22)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v22)
        {
          v28 = *(_QWORD *)(v20 + 16);
          v29 = __OFADD__(v28, v22);
          v30 = v28 + v22;
          if (v29)
            goto LABEL_39;
          *(_QWORD *)(v20 + 16) = v30;
        }
      }
      else if (v22)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572252E0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572252E8), swift_dynamicCastClass()))
      {
        swift_retain();
        v31 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
        v33 = v32;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v33 = sub_242A79120();
          swift_release();
        }
        v31(v40, 0);
        swift_release();
      }
      swift_release();
      v11 = v44;
      if (!*(_QWORD *)(v44 + 16))
      {
        v34 = v45;
        v9 = v51;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v34 = v51;
LABEL_34:
    swift_release();
    sub_242A6549C(v34);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE0164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BDFEF4();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC62C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224DB8);
          sub_242A7AF34(&qword_257224DD0, &qword_257224DB8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224DB8);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224DC0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224DC8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE053C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE0298();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC65C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224F18);
          sub_242A7AF34(&qword_257224F30, &qword_257224F18, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F18);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F20);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224F28), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE091C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE05F8();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC68C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224E98);
          sub_242A7AF34(&qword_257224EB0, &qword_257224E98, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E98);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224EA0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224EA8), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE0CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE0958();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC6BC();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224F58);
          sub_242A7AF34(&qword_257224F70, &qword_257224F58, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F58);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F60);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224F68), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE10D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE0D1C();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC6EC();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224D58);
          sub_242A7AF34(&qword_257224D70, &qword_257224D58, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D58);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D60);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224D68), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE14AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE10C0();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC71C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224D78);
          sub_242A7AF34(&qword_257224D90, &qword_257224D78, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D78);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D80);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224D88), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, char *);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD);
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[4];
  uint64_t v41;
  __int128 v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_242BE1420(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(unsigned __int8 *)(v8 + 16) | (*(unsigned __int8 *)(v8 + 17) << 8), (uint64_t)sub_242AEB844, 0, a6, a7, a8, v36, v37, v38, v39, a1, v40[0], v40[1], v40[2], v40[3], v41, v42,
    *((uint64_t *)&v42 + 1));
  v9 = v53;
  v42 = v49;
  v43 = v50;
  v44 = v51;
  v45 = v52;
  v46 = v53;
  v47 = v54;
  v48 = v55;
  swift_retain();
  sub_242A6548C(v53);
  v10 = *(_QWORD *)(v52 + 16);
  sub_242C480E0();
  if (v10)
  {
    v11 = v52;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC74C();
        v11 = v12;
      }
      v13 = *(_QWORD *)(v11 + 16);
      if (!v13)
        break;
      v14 = v13 - 1;
      v15 = v11 + 16 * v14;
      v16 = *(_QWORD *)(v15 + 32);
      LODWORD(v15) = *(_DWORD *)(v15 + 40);
      *(_QWORD *)(v11 + 16) = v14;
      v45 = v11;
      HIDWORD(v41) = v15;
      v17 = (uint64_t (*)(uint64_t, char *))v46;
      if (v46)
      {
        v18 = *(_QWORD *)(v16 + 32);
        swift_beginAccess();
        swift_retain();
        v19 = v17(v18, (char *)&v41 + 4);
        swift_endAccess();
        if ((v19 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572252B8);
          sub_242A7AF34(&qword_2572252D0, &qword_2572252B8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572252B8);
      swift_dynamicCastClassUnconditional();
      v20 = v48;
      v21 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v48 + 16);
      if (__OFADD__(v23, v22))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v23 + v22 > *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_242A5E0B4();
        v20 = v24;
      }
      if (*(_QWORD *)(v21 + 16))
      {
        v25 = *(_QWORD *)(v20 + 16);
        if ((*(_QWORD *)(v20 + 24) >> 1) - v25 < v22)
          goto LABEL_38;
        v26 = v20 + 16 * v25 + 32;
        if (v21 + 32 < v26 + 16 * v22 && v26 < v21 + 32 + 16 * v22)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v22)
        {
          v28 = *(_QWORD *)(v20 + 16);
          v29 = __OFADD__(v28, v22);
          v30 = v28 + v22;
          if (v29)
            goto LABEL_39;
          *(_QWORD *)(v20 + 16) = v30;
        }
      }
      else if (v22)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572252C0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572252C8), swift_dynamicCastClass()))
      {
        swift_retain();
        v31 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
        v33 = v32;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v33 = sub_242A79120();
          swift_release();
        }
        v31(v40, 0);
        swift_release();
      }
      swift_release();
      v11 = v45;
      if (!*(_QWORD *)(v45 + 16))
      {
        v34 = v46;
        v9 = v53;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v34 = v53;
LABEL_34:
    swift_release();
    sub_242A6549C(v34);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE1CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE18E4();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC77C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224CB8);
          sub_242A7AF34(&qword_257224CD0, &qword_257224CB8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224CB8);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224CC0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224CC8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE2080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, int *);
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD);
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t result;
  char v27[36];
  int v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_242BE1CA8();
  v0 = v40;
  v29 = v36;
  v30 = v37;
  v31 = v38;
  v32 = v39;
  v33 = v40;
  v34 = v41;
  v35 = v42;
  swift_retain();
  sub_242A6548C(v40);
  v1 = *(_QWORD *)(v39 + 16);
  sub_242C480E0();
  if (v1)
  {
    v2 = v39;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC7AC();
        v2 = v3;
      }
      v4 = *(_QWORD *)(v2 + 16);
      if (!v4)
        break;
      v5 = v4 - 1;
      v6 = v2 + 16 * v5;
      v7 = *(_QWORD *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(_QWORD *)(v2 + 16) = v5;
      v32 = v2;
      v28 = v6;
      v8 = (uint64_t (*)(uint64_t, int *))v33;
      if (v33)
      {
        v9 = *(_QWORD *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        v10 = v8(v9, &v28);
        swift_endAccess();
        if ((v10 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572250B8);
          sub_242A7AF34(&qword_2572250D0, &qword_2572250B8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572250B8);
      swift_dynamicCastClassUnconditional();
      v11 = v35;
      v12 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v35 + 16);
      if (__OFADD__(v14, v13))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_242A5E0B4();
        v11 = v15;
      }
      if (*(_QWORD *)(v12 + 16))
      {
        v16 = *(_QWORD *)(v11 + 16);
        if ((*(_QWORD *)(v11 + 24) >> 1) - v16 < v13)
          goto LABEL_38;
        v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v19 = *(_QWORD *)(v11 + 16);
          v20 = __OFADD__(v19, v13);
          v21 = v19 + v13;
          if (v20)
            goto LABEL_39;
          *(_QWORD *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572250C0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572250C8), swift_dynamicCastClass()))
      {
        swift_retain();
        v22 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v24 = sub_242A79120();
          swift_release();
        }
        v22(v27, 0);
        swift_release();
      }
      swift_release();
      v2 = v32;
      if (!*(_QWORD *)(v32 + 16))
      {
        v25 = v33;
        v0 = v40;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v25 = v40;
LABEL_34:
    swift_release();
    sub_242A6549C(v25);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE2498()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, int *);
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t result;
  char v29[36];
  int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;

  v1 = v0[1];
  v47 = *v0;
  v48 = v1;
  v49 = v0[2];
  v50 = *((_BYTE *)v0 + 48);
  sub_242BE2164();
  v2 = v44;
  v31 = v39;
  v32 = v40;
  v33 = v41;
  v34 = v42;
  v35 = v43;
  v36 = v44;
  v37 = v45;
  v38 = v46;
  swift_retain();
  sub_242A6548C(v44);
  v3 = *(_QWORD *)(v43 + 16);
  sub_242C480E0();
  if (v3)
  {
    v4 = v43;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC7DC();
        v4 = v5;
      }
      v6 = *(_QWORD *)(v4 + 16);
      if (!v6)
        break;
      v7 = v6 - 1;
      v8 = v4 + 16 * v7;
      v9 = *(_QWORD *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(_QWORD *)(v4 + 16) = v7;
      v35 = v4;
      v30 = v8;
      v10 = (uint64_t (*)(uint64_t, int *))v36;
      if (v36)
      {
        v11 = *(_QWORD *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        v12 = v10(v11, &v30);
        swift_endAccess();
        if ((v12 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225098);
          sub_242A7AF34(&qword_2572250B0, &qword_257225098, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225098);
      swift_dynamicCastClassUnconditional();
      v13 = v38;
      v14 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v38 + 16);
      if (__OFADD__(v16, v15))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_242A5E0B4();
        v13 = v17;
      }
      if (*(_QWORD *)(v14 + 16))
      {
        v18 = *(_QWORD *)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - v18 < v15)
          goto LABEL_38;
        v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v15)
        {
          v21 = *(_QWORD *)(v13 + 16);
          v22 = __OFADD__(v21, v15);
          v23 = v21 + v15;
          if (v22)
            goto LABEL_39;
          *(_QWORD *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572250A0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572250A8), swift_dynamicCastClass()))
      {
        swift_retain();
        v24 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v26 = sub_242A79120();
          swift_release();
        }
        v24(v29, 0);
        swift_release();
      }
      swift_release();
      v4 = v35;
      if (!*(_QWORD *)(v35 + 16))
      {
        v27 = v36;
        v2 = v44;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v44;
LABEL_34:
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE28C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];

  sub_242BE25E0();
  v35 = v34;
  v36[0] = *((_QWORD *)&v32 + 1);
  v27 = v31;
  v28 = v32;
  v29 = v33;
  v30 = v34;
  sub_242AEF6E8((uint64_t)v36);
  v24 = v33;
  sub_242A6548C(v33);
  sub_242AEF670((uint64_t)&v35);
  v0 = *((_QWORD *)&v32 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC80C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v28 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v29;
      if ((_QWORD)v29)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225158);
          sub_242A7AF34(&qword_257225170, &qword_257225158, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225158);
      swift_dynamicCastClassUnconditional();
      v9 = v30;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v30 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225160);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225168), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v28 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v28 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v29);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v36);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_242AE2CA8()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, int *);
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t result;
  char v29[36];
  int v30;
  __int128 v31;
  __int128 v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  int v47;

  v1 = v0[1];
  v45 = *v0;
  v46 = v1;
  v47 = *((_DWORD *)v0 + 8);
  sub_242BE2A5C();
  v2 = v42;
  v31 = v38;
  v32 = v39;
  v33 = v40;
  v34 = v41;
  v35 = v42;
  v36 = v43;
  v37 = v44;
  swift_retain();
  sub_242A6548C(v42);
  v3 = *(_QWORD *)(v41 + 16);
  sub_242C480E0();
  if (v3)
  {
    v4 = v41;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC83C();
        v4 = v5;
      }
      v6 = *(_QWORD *)(v4 + 16);
      if (!v6)
        break;
      v7 = v6 - 1;
      v8 = v4 + 16 * v7;
      v9 = *(_QWORD *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(_QWORD *)(v4 + 16) = v7;
      v34 = v4;
      v30 = v8;
      v10 = (uint64_t (*)(uint64_t, int *))v35;
      if (v35)
      {
        v11 = *(_QWORD *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        v12 = v10(v11, &v30);
        swift_endAccess();
        if ((v12 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225138);
          sub_242A7AF34(&qword_257225150, &qword_257225138, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225138);
      swift_dynamicCastClassUnconditional();
      v13 = v37;
      v14 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v16, v15))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_242A5E0B4();
        v13 = v17;
      }
      if (*(_QWORD *)(v14 + 16))
      {
        v18 = *(_QWORD *)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - v18 < v15)
          goto LABEL_38;
        v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v15)
        {
          v21 = *(_QWORD *)(v13 + 16);
          v22 = __OFADD__(v21, v15);
          v23 = v21 + v15;
          if (v22)
            goto LABEL_39;
          *(_QWORD *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225140);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225148), swift_dynamicCastClass()))
      {
        swift_retain();
        v24 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v26 = sub_242A79120();
          swift_release();
        }
        v24(v29, 0);
        swift_release();
      }
      swift_release();
      v4 = v34;
      if (!*(_QWORD *)(v34 + 16))
      {
        v27 = v35;
        v2 = v42;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v42;
LABEL_34:
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE30C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE2EA8();
  v33 = *((_QWORD *)&v32 + 1);
  v34[0] = v31;
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = *((_QWORD *)&v31 + 1);
  sub_242A6548C(*((uint64_t *)&v31 + 1));
  sub_242AEF670((uint64_t)&v33);
  v0 = v31;
  if (*(_QWORD *)(v31 + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC86C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *(_QWORD *)&v28 = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))*((_QWORD *)&v28 + 1);
      if (*((_QWORD *)&v28 + 1))
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225198);
          sub_242A7AF34(&qword_2572251B0, &qword_257225198, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225198);
      swift_dynamicCastClassUnconditional();
      v9 = *((_QWORD *)&v29 + 1);
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572251A0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572251A8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = v28;
      if (!*(_QWORD *)(v28 + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(*((uint64_t *)&v28 + 1));
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE34A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, int *);
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD);
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t result;
  char v27[36];
  int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_242BE32A8();
  v0 = v38;
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v33 = v39;
  v34 = v40;
  swift_retain();
  sub_242A6548C(v38);
  v1 = *(_QWORD *)(v37 + 16);
  sub_242C480E0();
  if (v1)
  {
    v2 = v37;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC89C();
        v2 = v3;
      }
      v4 = *(_QWORD *)(v2 + 16);
      if (!v4)
        break;
      v5 = v4 - 1;
      v6 = v2 + 16 * v5;
      v7 = *(_QWORD *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(_QWORD *)(v2 + 16) = v5;
      v31 = v2;
      v28 = v6;
      v8 = (uint64_t (*)(uint64_t, int *))v32;
      if (v32)
      {
        v9 = *(_QWORD *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        v10 = v8(v9, &v28);
        swift_endAccess();
        if ((v10 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225178);
          sub_242A7AF34(&qword_257225190, &qword_257225178, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225178);
      swift_dynamicCastClassUnconditional();
      v11 = v34;
      v12 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v34 + 16);
      if (__OFADD__(v14, v13))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_242A5E0B4();
        v11 = v15;
      }
      if (*(_QWORD *)(v12 + 16))
      {
        v16 = *(_QWORD *)(v11 + 16);
        if ((*(_QWORD *)(v11 + 24) >> 1) - v16 < v13)
          goto LABEL_38;
        v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v19 = *(_QWORD *)(v11 + 16);
          v20 = __OFADD__(v19, v13);
          v21 = v19 + v13;
          if (v20)
            goto LABEL_39;
          *(_QWORD *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225180);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225188), swift_dynamicCastClass()))
      {
        swift_retain();
        v22 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v24 = sub_242A79120();
          swift_release();
        }
        v22(v27, 0);
        swift_release();
      }
      swift_release();
      v2 = v31;
      if (!*(_QWORD *)(v31 + 16))
      {
        v25 = v32;
        v0 = v38;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v25 = v38;
LABEL_34:
    swift_release();
    sub_242A6549C(v25);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE38AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE3700();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC8CC();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225038);
          sub_242A7AF34(&qword_257225050, &qword_257225038, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225038);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225040);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225048), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE3C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE3A60();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC8FC();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225018);
          sub_242A7AF34(&qword_257225030, &qword_257225018, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225018);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225020);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225028), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE406C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE3DC0();
  v33 = *((_QWORD *)&v32 + 1);
  v34[0] = v31;
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = *((_QWORD *)&v31 + 1);
  sub_242A6548C(*((uint64_t *)&v31 + 1));
  sub_242AEF670((uint64_t)&v33);
  v0 = v31;
  if (*(_QWORD *)(v31 + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC92C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *(_QWORD *)&v28 = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))*((_QWORD *)&v28 + 1);
      if (*((_QWORD *)&v28 + 1))
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572251D8);
          sub_242A7AF34(&qword_2572251F0, &qword_2572251D8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572251D8);
      swift_dynamicCastClassUnconditional();
      v9 = *((_QWORD *)&v29 + 1);
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572251E0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572251E8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = v28;
      if (!*(_QWORD *)(v28 + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(*((uint64_t *)&v28 + 1));
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE444C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, int *);
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD);
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t result;
  char v27[36];
  int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_242BE41C0();
  v0 = v38;
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v33 = v39;
  v34 = v40;
  swift_retain();
  sub_242A6548C(v38);
  v1 = *(_QWORD *)(v37 + 16);
  sub_242C480E0();
  if (v1)
  {
    v2 = v37;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC95C();
        v2 = v3;
      }
      v4 = *(_QWORD *)(v2 + 16);
      if (!v4)
        break;
      v5 = v4 - 1;
      v6 = v2 + 16 * v5;
      v7 = *(_QWORD *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(_QWORD *)(v2 + 16) = v5;
      v31 = v2;
      v28 = v6;
      v8 = (uint64_t (*)(uint64_t, int *))v32;
      if (v32)
      {
        v9 = *(_QWORD *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        v10 = v8(v9, &v28);
        swift_endAccess();
        if ((v10 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572251B8);
          sub_242A7AF34(&qword_2572251D0, &qword_2572251B8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572251B8);
      swift_dynamicCastClassUnconditional();
      v11 = v34;
      v12 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v34 + 16);
      if (__OFADD__(v14, v13))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_242A5E0B4();
        v11 = v15;
      }
      if (*(_QWORD *)(v12 + 16))
      {
        v16 = *(_QWORD *)(v11 + 16);
        if ((*(_QWORD *)(v11 + 24) >> 1) - v16 < v13)
          goto LABEL_38;
        v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v19 = *(_QWORD *)(v11 + 16);
          v20 = __OFADD__(v19, v13);
          v21 = v19 + v13;
          if (v20)
            goto LABEL_39;
          *(_QWORD *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572251C0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572251C8), swift_dynamicCastClass()))
      {
        swift_retain();
        v22 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v24 = sub_242A79120();
          swift_release();
        }
        v22(v27, 0);
        swift_release();
      }
      swift_release();
      v2 = v31;
      if (!*(_QWORD *)(v31 + 16))
      {
        v25 = v32;
        v0 = v38;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v25 = v38;
LABEL_34:
    swift_release();
    sub_242A6549C(v25);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE4850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE4618();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC98C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225078);
          sub_242A7AF34(&qword_257225090, &qword_257225078, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225078);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225080);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225088), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE4C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE4978();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC9BC();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225058);
          sub_242A7AF34(&qword_257225070, &qword_257225058, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225058);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225060);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225068), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE5010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE4CD8();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BEC9EC();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224E78);
          sub_242A7AF34(&qword_257224E90, &qword_257224E78, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E78);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E80);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224E88), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE53E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE507C();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECA1C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224D98);
          sub_242A7AF34(&qword_257224DB0, &qword_257224D98, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D98);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224DA0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224DA8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE57C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE5420();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECA4C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224E58);
          sub_242A7AF34(&qword_257224E70, &qword_257224E58, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E58);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E60);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224E68), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE5BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE5780();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECA7C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224DD8);
          sub_242A7AF34(&qword_257224DF0, &qword_257224DD8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224DD8);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224DE0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224DE8), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE5F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE5AE0();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECAAC();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224F78);
          sub_242A7AF34(&qword_257224F90, &qword_257224F78, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F78);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F80);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224F88), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE6360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE5E40();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECADC();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224E18);
          sub_242A7AF34(&qword_257224E30, &qword_257224E18, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E18);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E20);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224E28), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE6740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE61A0();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECB0C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224C18);
          sub_242A7AF34(&qword_257224C30, &qword_257224C18, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C18);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C20);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224C28), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE6B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, char *);
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD);
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38[4];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, char *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, char *);
  uint64_t v48;
  uint64_t v49;

  v1 = sub_242C480E0();
  sub_242BE6500(v1, (uint64_t)sub_242AEB844, 0, v2, v3, v4, v5, v6, v34, v35, v36, a1, v38[0], v38[1], v38[2], v38[3], v39, v40, v41,
    (uint64_t)v42);
  v7 = (uint64_t)v47;
  v40 = v45;
  v41 = v46;
  v42 = v47;
  v43 = v48;
  v44 = v49;
  sub_242C480E0();
  swift_retain();
  sub_242A6548C((uint64_t)v47);
  v8 = *(_QWORD *)(v46 + 16);
  sub_242C480E0();
  if (v8)
  {
    v9 = v46;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECB3C();
        v9 = v10;
      }
      v11 = *(_QWORD *)(v9 + 16);
      if (!v11)
        break;
      v12 = v11 - 1;
      v13 = v9 + 16 * v12;
      v14 = *(_QWORD *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(_QWORD *)(v9 + 16) = v12;
      v41 = v9;
      HIDWORD(v39) = v13;
      v15 = v42;
      if (v42)
      {
        v16 = *(_QWORD *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        v17 = v15(v16, (char *)&v39 + 4);
        swift_endAccess();
        if ((v17 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224F98);
          sub_242A7AF34(&qword_257224FB0, &qword_257224F98, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F98);
      swift_dynamicCastClassUnconditional();
      v18 = v44;
      v19 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v44 + 16);
      if (__OFADD__(v21, v20))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_242A5E0B4();
        v18 = v22;
      }
      if (*(_QWORD *)(v19 + 16))
      {
        v23 = *(_QWORD *)(v18 + 16);
        if ((*(_QWORD *)(v18 + 24) >> 1) - v23 < v20)
          goto LABEL_38;
        v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v20)
        {
          v26 = *(_QWORD *)(v18 + 16);
          v27 = __OFADD__(v26, v20);
          v28 = v26 + v20;
          if (v27)
            goto LABEL_39;
          *(_QWORD *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FA0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224FA8), swift_dynamicCastClass()))
      {
        swift_retain();
        v29 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
        v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v31 = sub_242A79120();
          swift_release();
        }
        v29(v38, 0);
        swift_release();
      }
      swift_release();
      v9 = v41;
      if (!*(_QWORD *)(v41 + 16))
      {
        v32 = (uint64_t)v42;
        v7 = (uint64_t)v47;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v32 = (uint64_t)v47;
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v32);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242A6549C(v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE6F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE6998();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECB6C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224F38);
          sub_242A7AF34(&qword_257224F50, &qword_257224F38, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F38);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F40);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224F48), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE7324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE6CF8();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECB9C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224EB8);
          sub_242A7AF34(&qword_257224ED0, &qword_257224EB8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224EB8);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224EC0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224EC8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE76FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE70FC();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECBCC();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224CD8);
          sub_242A7AF34(&qword_257224CF0, &qword_257224CD8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224CD8);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224CE0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224CE8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE7AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE7500();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECBFC();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224D18);
          sub_242A7AF34(&qword_257224D30, &qword_257224D18, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D18);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224D20);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224D28), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE7EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE78C4();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECC2C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224EF8);
          sub_242A7AF34(&qword_257224F10, &qword_257224EF8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224EF8);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224F00);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224F08), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE8284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE7C88();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECC5C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224ED8);
          sub_242A7AF34(&qword_257224EF0, &qword_257224ED8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224ED8);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224EE0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224EE8), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE8664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  char v32[36];
  int v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, int *);
  uint64_t v36;
  uint64_t v37;

  sub_242BE7FE8();
  v1 = v0;
  v3 = v2;
  v34 = v0;
  v35 = (uint64_t (*)(uint64_t, int *))v2;
  v36 = v4;
  v37 = v5;
  swift_retain();
  v31 = v3;
  sub_242A6548C(v3);
  v6 = *(_QWORD *)(v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = v1;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECC8C();
        v7 = v8;
      }
      v9 = *(_QWORD *)(v7 + 16);
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = v7 + 16 * v10;
      v12 = *(_QWORD *)(v11 + 32);
      LODWORD(v11) = *(_DWORD *)(v11 + 40);
      *(_QWORD *)(v7 + 16) = v10;
      v34 = v7;
      v33 = v11;
      v13 = v35;
      if (v35)
      {
        v14 = *(_QWORD *)(v12 + 32);
        swift_beginAccess();
        swift_retain();
        v15 = v13(v14, &v33);
        swift_endAccess();
        if ((v15 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224C78);
          sub_242A7AF34(&qword_257224C90, &qword_257224C78, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C78);
      swift_dynamicCastClassUnconditional();
      v16 = v37;
      v17 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v19, v18))
        goto LABEL_34;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_242A5E0B4();
        v16 = v20;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v21 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v21 < v18)
          goto LABEL_36;
        v22 = v16 + 16 * v21 + 32;
        if (v17 + 32 < v22 + 16 * v18 && v22 < v17 + 32 + 16 * v18)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v24 = *(_QWORD *)(v16 + 16);
          v25 = __OFADD__(v24, v18);
          v26 = v24 + v18;
          if (v25)
            goto LABEL_37;
          *(_QWORD *)(v16 + 16) = v26;
        }
      }
      else if (v18)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C80);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224C88), swift_dynamicCastClass()))
      {
        swift_retain();
        v27 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v29 = v28;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v29 = sub_242A79120();
          swift_release();
        }
        v27(v32, 0);
        swift_release();
      }
      swift_release();
      v7 = v34;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_32;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_242A6549C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE8A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE8348();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECCBC();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224DF8);
          sub_242A7AF34(&qword_257224E10, &qword_257224DF8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224DF8);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224E00);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224E08), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE8E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];

  sub_242BE86EC();
  v35 = v34;
  v36[0] = *((_QWORD *)&v32 + 1);
  v27 = v31;
  v28 = v32;
  v29 = v33;
  v30 = v34;
  sub_242AEF6E8((uint64_t)v36);
  v24 = v33;
  sub_242A6548C(v33);
  sub_242AEF670((uint64_t)&v35);
  v0 = *((_QWORD *)&v32 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECCEC();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v28 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v29;
      if ((_QWORD)v29)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572250F8);
          sub_242A7AF34(&qword_257225110, &qword_2572250F8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572250F8);
      swift_dynamicCastClassUnconditional();
      v9 = v30;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v30 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225100);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225108), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v28 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v28 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v29);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v36);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_242AE9200()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, int *);
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t result;
  char v29[36];
  int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v1 = v0[1];
  v45 = *v0;
  v46 = v1;
  v47 = v0[2];
  sub_242BE8BB0();
  v2 = v42;
  v31 = v38;
  v32 = v39;
  v33 = v40;
  v34 = v41;
  v35 = v42;
  v36 = v43;
  v37 = v44;
  swift_retain();
  sub_242A6548C(v42);
  v3 = *(_QWORD *)(v41 + 16);
  sub_242C480E0();
  if (v3)
  {
    v4 = v41;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECD1C();
        v4 = v5;
      }
      v6 = *(_QWORD *)(v4 + 16);
      if (!v6)
        break;
      v7 = v6 - 1;
      v8 = v4 + 16 * v7;
      v9 = *(_QWORD *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(_QWORD *)(v4 + 16) = v7;
      v34 = v4;
      v30 = v8;
      v10 = (uint64_t (*)(uint64_t, int *))v35;
      if (v35)
      {
        v11 = *(_QWORD *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        v12 = v10(v11, &v30);
        swift_endAccess();
        if ((v12 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572250D8);
          sub_242A7AF34(&qword_2572250F0, &qword_2572250D8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572250D8);
      swift_dynamicCastClassUnconditional();
      v13 = v37;
      v14 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v37 + 16);
      if (__OFADD__(v16, v15))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_242A5E0B4();
        v13 = v17;
      }
      if (*(_QWORD *)(v14 + 16))
      {
        v18 = *(_QWORD *)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - v18 < v15)
          goto LABEL_38;
        v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v15)
        {
          v21 = *(_QWORD *)(v13 + 16);
          v22 = __OFADD__(v21, v15);
          v23 = v21 + v15;
          if (v22)
            goto LABEL_39;
          *(_QWORD *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572250E0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_2572250E8), swift_dynamicCastClass()))
      {
        swift_retain();
        v24 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v26 = sub_242A79120();
          swift_release();
        }
        v24(v29, 0);
        swift_release();
      }
      swift_release();
      v4 = v34;
      if (!*(_QWORD *)(v34 + 16))
      {
        v27 = v35;
        v2 = v42;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v27 = v42;
LABEL_34:
    swift_release();
    sub_242A6549C(v27);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242AE961C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE8FF4();
  v33 = v32;
  v34[0] = *((_QWORD *)&v30 + 1);
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = v31;
  sub_242A6548C(v31);
  sub_242AEF670((uint64_t)&v33);
  v0 = *((_QWORD *)&v30 + 1);
  if (*(_QWORD *)(*((_QWORD *)&v30 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECD4C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *((_QWORD *)&v27 + 1) = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))v28;
      if ((_QWORD)v28)
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224C98);
          sub_242A7AF34(&qword_257224CB0, &qword_257224C98, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224C98);
      swift_dynamicCastClassUnconditional();
      v9 = v29;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v29 + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224CA0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257224CA8), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = *((_QWORD *)&v27 + 1);
      if (!*(_QWORD *)(*((_QWORD *)&v27 + 1) + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(v28);
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE99F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  char v25[36];
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[2];

  sub_242BE93B8();
  v33 = *((_QWORD *)&v32 + 1);
  v34[0] = v31;
  v27 = v30;
  v28 = v31;
  v29 = v32;
  sub_242AEF6E8((uint64_t)v34);
  v24 = *((_QWORD *)&v31 + 1);
  sub_242A6548C(*((uint64_t *)&v31 + 1));
  sub_242AEF670((uint64_t)&v33);
  v0 = v31;
  if (*(_QWORD *)(v31 + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECD7C();
        v0 = v1;
      }
      v2 = *(_QWORD *)(v0 + 16);
      if (!v2)
        break;
      v3 = v2 - 1;
      v4 = v0 + 16 * v3;
      v5 = *(_QWORD *)(v4 + 32);
      LODWORD(v4) = *(_DWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 16) = v3;
      *(_QWORD *)&v28 = v0;
      v26 = v4;
      v6 = (uint64_t (*)(uint64_t, int *))*((_QWORD *)&v28 + 1);
      if (*((_QWORD *)&v28 + 1))
      {
        v7 = *(_QWORD *)(v5 + 32);
        swift_beginAccess();
        swift_retain();
        v8 = v6(v7, &v26);
        swift_endAccess();
        if ((v8 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225218);
          sub_242A7AF34(&qword_257225230, &qword_257225218, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225218);
      swift_dynamicCastClassUnconditional();
      v9 = *((_QWORD *)&v29 + 1);
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 16);
      if (__OFADD__(v12, v11))
        goto LABEL_33;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E0B4();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_35;
        v15 = v9 + 16 * v14 + 32;
        if (v10 + 32 < v15 + 16 * v11 && v15 < v10 + 32 + 16 * v11)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225220);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225228), swift_dynamicCastClass()))
      {
        swift_retain();
        v20 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v22 = v21;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v22 = sub_242A79120();
          swift_release();
        }
        v20(v25, 0);
        swift_release();
      }
      swift_release();
      v0 = v28;
      if (!*(_QWORD *)(v28 + 16))
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_242A6549C(*((uint64_t *)&v28 + 1));
    swift_bridgeObjectRelease();
    sub_242AEF710((uint64_t)v34);
    sub_242A6549C(v24);
    return sub_242AEF698((uint64_t)&v33);
  }
  return result;
}

uint64_t sub_242AE9DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, int *);
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD);
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t result;
  char v27[36];
  int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_242BE97B8();
  v0 = v38;
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v33 = v39;
  v34 = v40;
  swift_retain();
  sub_242A6548C(v38);
  v1 = *(_QWORD *)(v37 + 16);
  sub_242C480E0();
  if (v1)
  {
    v2 = v37;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242BECDAC();
        v2 = v3;
      }
      v4 = *(_QWORD *)(v2 + 16);
      if (!v4)
        break;
      v5 = v4 - 1;
      v6 = v2 + 16 * v5;
      v7 = *(_QWORD *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(_QWORD *)(v2 + 16) = v5;
      v31 = v2;
      v28 = v6;
      v8 = (uint64_t (*)(uint64_t, int *))v32;
      if (v32)
      {
        v9 = *(_QWORD *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        v10 = v8(v9, &v28);
        swift_endAccess();
        if ((v10 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572251F8);
          sub_242A7AF34(&qword_257225210, &qword_2572251F8, (uint64_t)&unk_242C52AB0);
          sub_242AD7E60();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572251F8);
      swift_dynamicCastClassUnconditional();
      v11 = v34;
      v12 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v34 + 16);
      if (__OFADD__(v14, v13))
        goto LABEL_36;
      swift_retain_n();
      sub_242C480E0();
      sub_242C480E0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_242A5E0B4();
        v11 = v15;
      }
      if (*(_QWORD *)(v12 + 16))
      {
        v16 = *(_QWORD *)(v11 + 16);
        if ((*(_QWORD *)(v11 + 24) >> 1) - v16 < v13)
          goto LABEL_38;
        v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v19 = *(_QWORD *)(v11 + 16);
          v20 = __OFADD__(v19, v13);
          v21 = v19 + v13;
          if (v20)
            goto LABEL_39;
          *(_QWORD *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225200);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_257225208), swift_dynamicCastClass()))
      {
        swift_retain();
        v22 = (void (*)(char *, _QWORD))swift_modifyAtWritableKeyPath();
        v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_242A79038();
        }
        else
        {
          *v24 = sub_242A79120();
          swift_release();
        }
        v22(v27, 0);
        swift_release();
      }
      swift_release();
      v2 = v31;
      if (!*(_QWORD *)(v31 + 16))
      {
        v25 = v32;
        v0 = v38;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_242C4901C();
    __break(1u);
  }
  else
  {
    v25 = v38;
LABEL_34:
    swift_release();
    sub_242A6549C(v25);
    swift_release();
    swift_bridgeObjectRelease();
    sub_242A6549C(v0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void Layer.place(on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t *, _QWORD);
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_17_17();
  v2 = v0;
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_242C48D28();
  v20 = (char *)MEMORY[0x2494EDE24](&unk_242C52AB0, v7);
  v10 = OUTLINED_FUNCTION_77_4((uint64_t)v20, v8, (uint64_t)v20, v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_27_9();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v20 - v16;
  OUTLINED_FUNCTION_2_33((uint64_t)v6, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
  sub_242AD73C8();
  v20 = v17;
  v21 = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v1, v17, v10);
  MEMORY[0x2494EDE24](&unk_242C52CB0, v10);
  sub_242C48404();
  OUTLINED_FUNCTION_59_7();
  if (v22)
  {
    while (1)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_40_10();
      sub_242C48E30();
      if (OUTLINED_FUNCTION_66_6())
        break;
      sub_242C48E30();
      if (OUTLINED_FUNCTION_66_6())
      {
        OUTLINED_FUNCTION_205();
        v18 = (void (*)(uint64_t *, _QWORD))OUTLINED_FUNCTION_58_5();
        LayerState.place(on:)();
        goto LABEL_6;
      }
LABEL_7:
      OUTLINED_FUNCTION_72_1();
      OUTLINED_FUNCTION_59_7();
      if (!v22)
        goto LABEL_8;
    }
    OUTLINED_FUNCTION_205();
    v18 = (void (*)(uint64_t *, _QWORD))OUTLINED_FUNCTION_58_5();
    Parameter.place(on:)();
LABEL_6:
    v18(&v22, 0);
    OUTLINED_FUNCTION_72_1();
    goto LABEL_7;
  }
LABEL_8:
  v19 = *(void (**)(char *, uint64_t))(v21 + 8);
  v19(v15, v10);
  v19(v20, v10);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242AEA3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;

  return sub_242AEACA4(a1, *(_QWORD *)v7, *(unsigned __int8 *)(v7 + 8) | (*(unsigned __int8 *)(v7 + 9) << 8), a2, a3, a4, a5, a6, a7);
}

uint64_t sub_242AEA408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v1 + 48);
  sub_242AEF314(v1);
  return sub_242ADF844();
}

uint64_t sub_242AEA45C@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  v3 = v1[3];
  a1[2] = v1[2];
  a1[3] = v3;
  sub_242AEF0FC((uint64_t)v1);
  return sub_242ADF350();
}

uint64_t sub_242AEA4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v4;

  v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v2 + 32);
  sub_242AEF3D8(v2);
  return sub_242ADEED0(a1);
}

uint64_t sub_242AEA4F4@<X0>(void *a1@<X8>)
{
  const void *v1;

  memcpy(a1, v1, 0x50uLL);
  sub_242AEF368((uint64_t)v1);
  return sub_242ADE970();
}

uint64_t sub_242AEA540@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  *(float *)a5 = a6;
  *(_BYTE *)(a5 + 4) = a2;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  swift_retain();
  swift_retain();
  return sub_242ADE4EC(a1);
}

uint64_t sub_242AEA594@<X0>(void *a1@<X8>)
{
  const void *v1;

  memcpy(a1, v1, 0x78uLL);
  sub_242AEF92C((uint64_t)v1);
  return sub_242ADE08C();
}

uint64_t sub_242AEA5E0@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  sub_242AEF6C0((uint64_t)v1);
  return sub_242ADD768();
}

uint64_t sub_242AEA624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a2;
  *(_BYTE *)(a5 + 8) = a3 & 1;
  *(_BYTE *)(a5 + 9) = HIBYTE(a3) & 1;
  *(_QWORD *)(a5 + 16) = a4;
  swift_retain();
  swift_retain();
  return sub_242ADD2D4(a1);
}

uint64_t sub_242AEA684@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _OWORD *v2;
  __int128 v4;

  v4 = v2[1];
  *a2 = *v2;
  a2[1] = v4;
  a2[2] = v2[2];
  sub_242AEF7EC((uint64_t)v2);
  return sub_242ADCE18(a1);
}

uint64_t sub_242AEA6D0()
{
  return sub_242ADCA20();
}

uint64_t sub_242AEA6F0@<X0>(void *a1@<X8>)
{
  const void *v1;

  memcpy(a1, v1, 0x43uLL);
  sub_242AEF778((uint64_t)v1);
  return sub_242ADC534();
}

uint64_t sub_242AEA73C@<X0>(void *a1@<X8>)
{
  const void *v1;

  memcpy(a1, v1, 0x9CuLL);
  sub_242AEF40C((uint64_t)v1);
  return sub_242ADC13C();
}

uint64_t sub_242AEA788@<X0>(void *a1@<X8>)
{
  const void *v1;

  memcpy(a1, v1, 0x88uLL);
  sub_242A97FBC((uint64_t)v1);
  return sub_242ADBD44();
}

uint64_t sub_242AEA7D4()
{
  uint64_t (*v0)(uint64_t);
  const void *v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_57_9();
  memcpy(v3, v1, 0x58uLL);
  sub_242AEFA6C((uint64_t)v1);
  return v0(v2);
}

uint64_t sub_242AEA81C@<X0>(void *a1@<X8>)
{
  const void *v1;

  memcpy(a1, v1, 0x60uLL);
  sub_242AEF150((uint64_t)v1);
  return sub_242ADB414();
}

double sub_242AEA868@<D0>(_OWORD *a1@<X8>)
{
  __int128 *v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  sub_242AE9200();
  result = *(double *)&v4;
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  return result;
}

uint64_t sub_242AEA8B4(uint64_t a1, uint64_t a2)
{
  sub_242AE8E1C();
  return a2;
}

uint64_t sub_242AEA8EC()
{
  return sub_242AE8664();
}

uint64_t sub_242AEA900()
{
  return sub_242AE8284();
}

float sub_242AEA914(float a1)
{
  sub_242AE7AD4();
  return a1;
}

uint64_t sub_242AEA944(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  return a2;
}

uint64_t sub_242AEA974()
{
  return sub_242AE6F44();
}

uint64_t sub_242AEA988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a2;
  sub_242C480E0();
  return sub_242AE6B20(a1);
}

uint64_t sub_242AEA9BC()
{
  return sub_242AE6740();
}

uint64_t sub_242AEA9D0()
{
  return sub_242AE6360();
}

uint64_t sub_242AEA9E4()
{
  return sub_242AE5F80();
}

uint64_t sub_242AEA9F8()
{
  return sub_242AE5BA0();
}

uint64_t sub_242AEAA0C()
{
  return sub_242AE57C0();
}

float sub_242AEAA20(float a1, uint64_t a2, void (*a3)(void))
{
  a3();
  return a1;
}

uint64_t sub_242AEAA50()
{
  return sub_242AE4C30();
}

uint64_t sub_242AEAA64()
{
  return sub_242AE4850();
}

uint64_t sub_242AEAA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  a6();
  return a2;
}

uint64_t sub_242AEAAB0()
{
  return sub_242AE3C8C();
}

uint64_t sub_242AEAAC4()
{
  return sub_242AE38AC();
}

uint64_t sub_242AEAAD8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  return a2;
}

float sub_242AEAB08@<S0>(uint64_t a1@<X8>)
{
  float *v1;
  float result;
  __int128 v4;
  __int128 v5;
  float v6;

  v4 = *(_OWORD *)v1;
  v5 = *((_OWORD *)v1 + 1);
  v6 = v1[8];
  sub_242AE2CA8();
  result = v6;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(float *)(a1 + 32) = v6;
  return result;
}

float sub_242AEAB54(float a1)
{
  sub_242AE28C4();
  return a1;
}

uint64_t sub_242AEAB8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v1 + 48);
  return sub_242AE2498();
}

uint64_t sub_242AEABC4(uint64_t a1, uint64_t a2)
{
  sub_242AE2080();
  return a2;
}

uint64_t sub_242AEAC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = a2;
  *(_QWORD *)(a9 + 8) = a3;
  *(_BYTE *)(a9 + 16) = a4 & 1;
  *(_BYTE *)(a9 + 17) = BYTE1(a4);
  return sub_242AE188C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_242AEAC38()
{
  return sub_242AE14AC();
}

float sub_242AEAC4C(float a1, uint64_t a2, void (*a3)(void))
{
  a3();
  return a1;
}

uint64_t sub_242AEAC7C()
{
  return sub_242AE091C();
}

uint64_t sub_242AEAC90()
{
  return sub_242AE053C();
}

uint64_t sub_242AEACA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = a2;
  *(_BYTE *)(a9 + 8) = a3 & 1;
  *(_BYTE *)(a9 + 9) = BYTE1(a3);
  return sub_242ADFD48(a1, a2, a3, a4, a5, a6, a7, a8);
}

void Layer.placed(on:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_64_6(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224A60);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_242C48C38();
    sub_242C48314();
    OUTLINED_FUNCTION_55_6();
    swift_getDynamicType();
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_64_6(a4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 + 16) + 8))(a1, a2);
    OUTLINED_FUNCTION_12_0();
  }
}

uint64_t sub_242AEAE24(_QWORD *a1)
{
  _QWORD *v1;

  return nullsub_1(*a1, *v1, v1[1]);
}

uint64_t sub_242AEAE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;

  return sub_242AEAC04(a1, *(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(unsigned __int8 *)(v6 + 16) | (*(unsigned __int8 *)(v6 + 17) << 8), a2, a3, a4, a5, a6);
}

void sub_242AEAE68(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_34_11(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_49_9();
  OUTLINED_FUNCTION_22_15();
}

uint64_t sub_242AEAE98()
{
  void *v0;
  const void *v1;
  void *v2;

  OUTLINED_FUNCTION_33_12();
  memcpy(v0, v1, 0x78uLL);
  OUTLINED_FUNCTION_41_14();
  return sub_242AEA594(v2);
}

void sub_242AEAEDC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_34_11(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_49_9();
  OUTLINED_FUNCTION_22_15();
}

uint64_t sub_242AEAF0C()
{
  void *v0;
  const void *v1;
  void *v2;

  OUTLINED_FUNCTION_33_12();
  memcpy(v0, v1, 0x88uLL);
  OUTLINED_FUNCTION_41_14();
  return sub_242AEA788(v2);
}

void sub_242AEAF50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_10();
  *v0 = sub_242AEAAD8(v1, v2, v3, (void (*)(void))sub_242AE99F4);
  v0[1] = v4;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEAF7C()
{
  sub_242AEB01C();
}

void sub_242AEAF8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_10();
  *v0 = sub_242AEAAD8(v1, v2, v3, (void (*)(void))sub_242AE406C);
  v0[1] = v4;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEAFB8()
{
  sub_242AEB01C();
}

uint64_t sub_242AEAFC4(_QWORD *a1)
{
  _QWORD *v1;

  return nullsub_1(*a1, *v1, v1[1]);
}

void sub_242AEAFD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_10();
  *v0 = sub_242AEAAD8(v1, v2, v3, (void (*)(void))sub_242AE30C8);
  v0[1] = v4;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEAFFC(_QWORD *a1)
{
  _QWORD *v1;

  return nullsub_1(*a1, *v1, v1[1]);
}

void sub_242AEB010()
{
  sub_242AEB01C();
}

void sub_242AEB01C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_51_10();
  *v0 = sub_242AEAA78(v2, v3, v4, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v5);
  v0[1] = v6;
  v0[2] = v7;
  v0[3] = v8;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEB048(_QWORD *a1)
{
  _QWORD *v1;

  return nullsub_1(*a1, *v1, v1[1]);
}

void sub_242AEB05C()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_10();
  v2 = sub_242AEAB54(*(float *)(v1 + 16));
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = v4;
  *(float *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEB084(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  nullsub_1(*a1, a2, a3);
  OUTLINED_FUNCTION_0_11();
}

void sub_242AEB0BC(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  _OWORD v5[2];
  int v6;
  __int128 v7;
  __int128 v8;
  int v9;

  v3 = v1[1];
  v7 = *v1;
  v8 = v3;
  v9 = *((_DWORD *)v1 + 8);
  sub_242AEAB08((uint64_t)v5);
  v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = v6;
  OUTLINED_FUNCTION_48_11();
}

void sub_242AEB110()
{
  uint64_t v0;
  _OWORD *v1;

  OUTLINED_FUNCTION_47_10();
  sub_242AEA684(v0, v1);
  OUTLINED_FUNCTION_0_11();
}

uint64_t sub_242AEB134()
{
  void *v0;

  return sub_242AEC978(v0);
}

void Layer.isEveryParameterInitialized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_73_6();
  type metadata accessor for ParametrizedLayers();
  OUTLINED_FUNCTION_63_7();
  sub_242AEDD54(v0, v1, v2);
  OUTLINED_FUNCTION_9();
}

void Layer.initializeParameters(recursively:initializer:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, _QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  _QWORD v50[2];
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v58 = v4;
  v59 = v5;
  LODWORD(v65) = v6;
  v7 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_13_1();
  v50[1] = v8;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_8_11();
  v55 = v10;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_8_11();
  v56 = v12;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_8_11();
  v53 = v14;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_8_11();
  v57 = v16;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_8_11();
  v61 = v18;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v50 - v20;
  v22 = sub_242C48D28();
  v64 = (char *)MEMORY[0x2494EDE24](&unk_242C52AB0, v22);
  v24 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v22, (uint64_t)v64, v23);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)v50 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v50 - v32;
  v62 = v7;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  OUTLINED_FUNCTION_79_3((uint64_t)v21);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = v65;
  v54 = v21;
  sub_242AD73C8();
  v51 = v33;
  v52 = v25;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v33, v24);
  MEMORY[0x2494EDE24](&unk_242C52CB0, v24);
  sub_242C48404();
  v64 = v31;
  v65 = v24;
  sub_242AD7AC0();
  if (!v66)
  {
LABEL_33:
    v48 = *(void (**)(char *, uint64_t))(v52 + 8);
    v49 = v65;
    v48(v64, v65);
    v48(v51, v49);
    OUTLINED_FUNCTION_13_11();
    return;
  }
  v35 = v67;
  v63 = type metadata accessor for AnyLayerVariablePathCache();
  v60 = v34;
  while (1)
  {
    sub_242BA14C4(v35);
    v37 = v36;
    swift_bridgeObjectRelease();
    v66 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
    sub_242A7AF34((unint64_t *)&qword_257224A68, &qword_257221158, MEMORY[0x24BEE12B0]);
    sub_242C48194();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_40_10();
    sub_242C48E30();
    if (OUTLINED_FUNCTION_67_6())
    {
      OUTLINED_FUNCTION_20_21();
      OUTLINED_FUNCTION_80_5();
      OUTLINED_FUNCTION_5_31();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_38_11();
      OUTLINED_FUNCTION_76_4();
      if (v38)
      {
        OUTLINED_FUNCTION_83();
      }
      else
      {
        OUTLINED_FUNCTION_17_1();
        OUTLINED_FUNCTION_20_21();
        OUTLINED_FUNCTION_123_0();
        OUTLINED_FUNCTION_5_31();
        OUTLINED_FUNCTION_157_0();
        OUTLINED_FUNCTION_38_11();
        v39 = *(_QWORD *)(v66 + 32);
        if ((v24 & ~v39) != 0)
        {
          swift_release();
          if (v39 < 0)
          {
            OUTLINED_FUNCTION_32_15();
            OUTLINED_FUNCTION_123_0();
            OUTLINED_FUNCTION_5_31();
            OUTLINED_FUNCTION_157_0();
            OUTLINED_FUNCTION_38_11();
            v43 = *(_QWORD *)(v66 + 32);
            if ((~v43 & 0xF000000000000007) == 0)
              goto LABEL_34;
            if ((v43 & 0x8000000000000000) == 0)
              goto LABEL_35;
            sub_242A7028C();
            swift_release();
            v1 = v24;
          }
        }
        else
        {
          swift_release();
        }
        v40 = OUTLINED_FUNCTION_56_5();
        v58(v40);
        OUTLINED_FUNCTION_83();
        if (v66)
        {
          v69 = v66;
          OUTLINED_FUNCTION_205();
          v41 = (void (*)(uint64_t *, _QWORD))swift_modifyAtWritableKeyPath();
          Parameter.wrappedValue.setter(&v69);
          v41(&v66, 0);
          goto LABEL_25;
        }
      }
      goto LABEL_26;
    }
    sub_242C48E30();
    if (!OUTLINED_FUNCTION_67_6())
    {
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_83();
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_20_21();
    OUTLINED_FUNCTION_80_5();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_76_4();
    if (!v38)
      break;
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_17_1();
LABEL_27:
    sub_242AD7AC0();
    v35 = v67;
    if (!v66)
      goto LABEL_33;
  }
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_79_3(v55);
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_5_31();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_2_37();
  v42 = *(_QWORD *)(v66 + 32);
  if ((v24 & ~v42) == 0)
  {
    swift_release();
    goto LABEL_23;
  }
  swift_release();
  if ((v42 & 0x8000000000000000) == 0)
  {
LABEL_23:
    v44 = OUTLINED_FUNCTION_56_5();
    v58(v44);
    OUTLINED_FUNCTION_83();
    v45 = v66;
    if (v66)
    {
      v46 = (uint64_t)v54;
      v60(v54, v1, v3);
      OUTLINED_FUNCTION_123_0();
      swift_getAtKeyPath();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_6_31(v46);
      v68 = v45;
      v69 = v66;
      OUTLINED_FUNCTION_205();
      LayerState.wrappedValue.setter(&v68);
      swift_release();
LABEL_25:
      OUTLINED_FUNCTION_72_1();
    }
LABEL_26:
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_17_1();
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_32_15();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_5_31();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_2_37();
  v47 = *(_QWORD *)(v66 + 32);
  if ((~v47 & 0xF000000000000007) == 0)
  {
LABEL_34:
    OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
    goto LABEL_36;
  }
  if (v47 < 0)
  {
    sub_242A7028C();
    swift_release();
    v1 = v24;
    goto LABEL_23;
  }
LABEL_35:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_24_0();
LABEL_36:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

BOOL sub_242AEB784(uint64_t a1, uint64_t a2, char a3)
{
  return (a3 & 1) != 0 && dynamic_cast_existential_1_conditional(a1)
      || !dynamic_cast_existential_1_conditional(a1)
      && (swift_dynamicCastMetatype()
       || swift_dynamicCastMetatype()
       || (a3 & 1) != 0 && (dynamic_cast_existential_1_conditional(a1) || dynamic_cast_existential_1_conditional(a1)));
}

BOOL sub_242AEB844(uint64_t a1)
{
  if (dynamic_cast_existential_1_conditional(a1))
    return 0;
  if (dynamic_cast_existential_1_conditional(a1)
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || dynamic_cast_existential_1_conditional(a1))
  {
    return 1;
  }
  return dynamic_cast_existential_1_conditional(a1) != 0;
}

uint64_t Layer.cast(to:recursively:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_242AEB90C(a1, a2, 3, a3, a4, a5);
}

uint64_t sub_242AEB90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t *v46;
  void (*v47)(char *, uint64_t);
  uint64_t result;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;

  v7 = v6;
  LODWORD(v59) = a4;
  v57 = a3;
  v53 = a1;
  v54 = a2;
  v10 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v56 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v49 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)&v49 - v16;
  v17 = sub_242C48D28();
  v55 = v17;
  v52 = MEMORY[0x2494EDE24](&unk_242C52AB0, v17);
  v19 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v17, v52, v18);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v50 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v49 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v49 - v26;
  v60 = v10;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v28(a6, v7, a5);
  v58 = a6;
  v28((uint64_t)v51, a6, a5);
  v29 = swift_allocObject();
  *(_BYTE *)(v29 + 16) = (_BYTE)v59;
  v30 = v57;
  *(_QWORD *)(v29 + 24) = v57;
  v31 = v30;
  sub_242AD73C8();
  v51 = v27;
  v52 = v20;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v50, v27, v19);
  MEMORY[0x2494EDE24](&unk_242C52CB0, v19);
  sub_242C48404();
  sub_242AD7AC0();
  if (!v62)
  {
LABEL_24:
    v47 = *(void (**)(char *, uint64_t))(v52 + 8);
    v47(v25, v19);
    return ((uint64_t (*)(char *, uint64_t))v47)(v51, v19);
  }
  v55 = v7;
  v59 = v28;
  while (1)
  {
    swift_bridgeObjectRelease();
    sub_242C48E30();
    if (!swift_dynamicCastClass())
      break;
    v28((uint64_t)v15, v7, a5);
    if ((v31 & 1) != 0)
    {
      swift_retain();
      swift_getAtKeyPath();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v15, a5);
      if ((~v62[4] & 0xF000000000000007) != 0)
      {
        swift_release();
        swift_retain();
        swift_getAtKeyPath();
        swift_release();
        v33 = v62[4];
        if ((~v33 & 0xF000000000000007) == 0)
          goto LABEL_25;
        v28 = v59;
        if ((v33 & 0x8000000000000000) == 0)
          goto LABEL_25;
        v61 = v33 & 0x7FFFFFFFFFFFFFFFLL;
        Tensor.scalarType.getter();
        v35 = v34;
        v37 = v36;
        swift_release();
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v37 + 32))(&v61, v35, v37);
        LOBYTE(v37) = v61;
        v38 = static ScalarType.floatingPointTypes.getter();
        LOBYTE(v37) = sub_242B64794(v37, (uint64_t)v38);
        swift_bridgeObjectRelease();
        if ((v37 & 1) != 0)
        {
          swift_retain();
          swift_getAtKeyPath();
          swift_release();
          (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)(v54 + 8) + 32))(&v61);
          v39 = sub_242A79344(&v61);
          swift_release();
          v62 = v39;
          LOWORD(v63) = 256;
          goto LABEL_21;
        }
        goto LABEL_22;
      }
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, a5);
LABEL_9:
    swift_release();
LABEL_23:
    sub_242AD7AC0();
    if (!v62)
      goto LABEL_24;
  }
  sub_242C48E30();
  if (!swift_dynamicCastClass())
    goto LABEL_9;
  v32 = v56;
  v28((uint64_t)v56, v7, a5);
  if ((v31 & 2) == 0)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v32, a5);
    goto LABEL_9;
  }
  swift_retain();
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v32, a5);
  if ((~v62[4] & 0xF000000000000007) == 0)
  {
LABEL_16:
    swift_release_n();
    swift_release();
    v28 = v59;
    goto LABEL_23;
  }
  swift_release();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  v40 = v62[4];
  if ((~v40 & 0xF000000000000007) != 0)
  {
    v28 = v59;
    if (v40 < 0)
    {
      v61 = v40 & 0x7FFFFFFFFFFFFFFFLL;
      Tensor.scalarType.getter();
      v42 = v41;
      v44 = v43;
      swift_release();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v44 + 32))(&v61, v42, v44);
      LOBYTE(v44) = v61;
      v45 = static ScalarType.floatingPointTypes.getter();
      LOBYTE(v44) = sub_242B64794(v44, (uint64_t)v45);
      swift_bridgeObjectRelease();
      if ((v44 & 1) != 0)
      {
        swift_retain();
        swift_getAtKeyPath();
        swift_release();
        (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)(v54 + 8) + 32))(&v61);
        v46 = sub_242A79344(&v61);
        swift_release();
        v62 = v46;
LABEL_21:
        swift_retain();
        swift_setAtWritableKeyPath();
        swift_release();
      }
LABEL_22:
      swift_release_n();
      v7 = v55;
      v31 = v57;
      goto LABEL_23;
    }
  }
LABEL_25:
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t Layer.castParameters(to:recursively:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_242AEB90C(a1, a2, 1, a3, a4, a5);
}

void sub_242AEBFAC(uint64_t a1, uint64_t a2, char a3)
{
  if (((a3 & 1) == 0 || !OUTLINED_FUNCTION_7_21())
    && !OUTLINED_FUNCTION_7_21()
    && !swift_dynamicCastMetatype()
    && !swift_dynamicCastMetatype()
    && (a3 & 1) != 0
    && !OUTLINED_FUNCTION_7_21())
  {
    OUTLINED_FUNCTION_7_21();
  }
  OUTLINED_FUNCTION_9();
}

BOOL sub_242AEC060(uint64_t a1)
{
  return !dynamic_cast_existential_1_conditional(a1)
      && (dynamic_cast_existential_1_conditional(a1) || dynamic_cast_existential_1_conditional(a1))
      || dynamic_cast_existential_1_conditional(a1) != 0;
}

void sub_242AEC0F0()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[3] + 64))(v0[5], v0[2]);
  OUTLINED_FUNCTION_1_0();
}

void Layer.prepared(for:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;

  v4 = *a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, v3, a2);
  v5 = v4;
  Layer.prepare(for:)((NeuralNetworks::LearningPhase)&v5);
  OUTLINED_FUNCTION_7_19();
}

void Layer.prediction(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_2_33(v3, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v9 = 2;
  Layer.prepare(for:)((NeuralNetworks::LearningPhase)&v9);
  OUTLINED_FUNCTION_63_7();
  Layer.callAsFunction(_:)(v6, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, a2);
  OUTLINED_FUNCTION_12_0();
}

void Layer.sublayers(recursively:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(void);
  uint64_t v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_17_17();
  v12 = v0;
  v2 = v1;
  v11 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_242C48D28();
  v5 = MEMORY[0x2494EDE24](&unk_242C52AB0, v4);
  type metadata accessor for RecursiveStoredPropertiesIterator(0, v4, v5, v6);
  v7 = swift_allocBox();
  OUTLINED_FUNCTION_54_7();
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = v11;
  sub_242AD73C8();
  OUTLINED_FUNCTION_54_7();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = v12;
  v8[4] = v7;
  OUTLINED_FUNCTION_63_7();
  v9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224A70);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v10 + 16) = sub_242AEEFE8;
  *(_QWORD *)(v10 + 24) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224A78);
  *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v10;
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242AEC36C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];
  uint64_t v7;

  v2 = sub_242C48D28();
  v3 = MEMORY[0x2494EDE24](&unk_242C52AB0, v2);
  type metadata accessor for RecursiveStoredPropertiesIterator(0, v2, v3, v4);
  swift_projectBox();
  swift_beginAccess();
  sub_242AD7AC0();
  result = swift_endAccess();
  if (*(_QWORD *)&v6[0])
  {
    while (1)
    {
      swift_bridgeObjectRelease();
      swift_getAtPartialKeyPath();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572252F8);
      if ((swift_dynamicCast() & 1) != 0)
        return sub_242A64518(v6, a1);
      v7 = 0;
      memset(v6, 0, sizeof(v6));
      sub_242AEFABC((uint64_t)v6);
      swift_beginAccess();
      sub_242AD7AC0();
      result = swift_endAccess();
      if (!*(_QWORD *)&v6[0])
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void Layer.sublayerKeyPaths<A>(to:recursively:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_19_17(v1, v2, v3, v4, v5, v6);
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_13_22();
  v9 = MEMORY[0x2494EDE24](&unk_242C52AB0, v8);
  type metadata accessor for RecursiveStoredPropertiesIterator(0, v8, v9, v10);
  v11 = swift_allocBox();
  OUTLINED_FUNCTION_28_18();
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = v0;
  sub_242AD73C8();
  v12 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_45_8(v12)[6] = v11;
  swift_retain();
  sub_242C48BF0();
  v13 = sub_242C48BE4();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE2418], v13);
  sub_242C48C08();
  swift_release();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242AEC5F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = sub_242C48E30();
  v3 = MEMORY[0x2494EDE24](&unk_242C52AB0, v2);
  type metadata accessor for RecursiveStoredPropertiesIterator(0, v2, v3, v4);
  swift_projectBox();
  swift_beginAccess();
  sub_242AD7AC0();
  result = swift_endAccess();
  if (v6)
    result = swift_bridgeObjectRelease();
  *a1 = v6;
  return result;
}

void Layer.namedSublayerKeyPaths<A>(to:recursively:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_19_17(v1, v2, v3, v4, v5, v6);
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_13_22();
  v9 = MEMORY[0x2494EDE24](&unk_242C52AB0, v8);
  type metadata accessor for RecursiveStoredPropertiesIterator(0, v8, v9, v10);
  v11 = swift_allocBox();
  OUTLINED_FUNCTION_28_18();
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = v0;
  sub_242AD73C8();
  v12 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_45_8(v12)[6] = v11;
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_242C48BF0();
  OUTLINED_FUNCTION_40_10();
  v13 = sub_242C48BE4();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE2418], v13);
  sub_242C48C08();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_13_11();
}

BOOL sub_242AEC7CC(uint64_t a1, uint64_t a2, char a3)
{
  return !dynamic_cast_existential_1_conditional(a1)
      && ((a3 & 1) != 0 && OUTLINED_FUNCTION_7_21()
       || OUTLINED_FUNCTION_7_21()
       || (a3 & 1) != 0 && OUTLINED_FUNCTION_7_21());
}

uint64_t sub_242AEC848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_242C48E30();
  v3 = MEMORY[0x2494EDE24](&unk_242C52AB0, v2);
  type metadata accessor for RecursiveStoredPropertiesIterator(0, v2, v3, v4);
  swift_projectBox();
  swift_beginAccess();
  sub_242AD7AC0();
  result = swift_endAccess();
  if (v9)
  {
    type metadata accessor for AnyLayerVariablePathCache();
    sub_242BA14C4(v10);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
    sub_242A7AF34((unint64_t *)&qword_257224A68, &qword_257221158, MEMORY[0x24BEE12B0]);
    v6 = sub_242C48194();
    v8 = v7;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a1 = v6;
  a1[1] = v8;
  a1[2] = v9;
  return result;
}

uint64_t sub_242AEC978(void *__src)
{
  unsigned __int8 v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, int *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unsigned __int8 v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD __dst[9];
  _BYTE v54[72];
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;
  __int16 v62;
  char v63;
  uint64_t v64;
  __int16 v65;
  char v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, int *);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  __int16 v75;
  uint64_t v76;
  __int16 v77;
  char v78;
  uint64_t v79;
  __int16 v80;
  char v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, int *);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v86 = *MEMORY[0x24BDAC8D0];
  memcpy(__dst, __src, 0x43uLL);
  if (qword_257220568 != -1)
    goto LABEL_76;
  while (1)
  {
    swift_beginAccess();
    v1 = sub_242A9E698((uint64_t)&type metadata for LSTM, (uint64_t)off_257224A58);
    swift_endAccess();
    if (v1 != 2 && (v1 & 1) == 0)
      return 1;
    if (qword_257220590 != -1)
      swift_once();
    swift_retain();
    sub_242B5AFB4();
    v3 = sub_242AEE9B8((uint64_t)&type metadata for LSTM, (uint64_t)&type metadata for Parameter, 0, &qword_257225010);
    sub_242B5AFD4();
    swift_release();
    v48 = v1;
    if (!v3)
    {
      v52 = MEMORY[0x24BEE4AF8];
      v50 = MEMORY[0x24BEE4B08];
      v51 = MEMORY[0x24BEE4B08];
      memcpy(v54, __dst, 0x43uLL);
      v4 = swift_allocObject();
      *(_BYTE *)(v4 + 16) = 0;
      *(_DWORD *)(v4 + 20) = 4;
      sub_242AEF778((uint64_t)v54);
      sub_242BDA930();
      v5 = v83;
      v6 = v85;
      v56 = v71;
      v57 = v72;
      v58 = v73;
      v59 = v74;
      v60 = v75;
      v61 = v76;
      v62 = v77;
      v63 = v78;
      v64 = v79;
      v65 = v80;
      v66 = v81;
      v67 = v82;
      v68 = v83;
      v69 = v84;
      v70 = v85;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_242A6548C((uint64_t)v5);
      v7 = v67;
      v8 = *(_QWORD *)(v67 + 16);
      v45 = v6;
      sub_242C480E0();
      if (v8)
      {
        v47 = MEMORY[0x24BEE4AF8];
        do
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242BEC294();
            v7 = v9;
          }
          v10 = *(_QWORD *)(v7 + 16);
          if (!v10)
            goto LABEL_75;
          v11 = v10 - 1;
          v12 = v7 + 16 * v11;
          v13 = *(_QWORD *)(v12 + 32);
          LODWORD(v12) = *(_DWORD *)(v12 + 40);
          *(_QWORD *)(v7 + 16) = v11;
          v67 = v7;
          v49 = v12;
          if (v5)
          {
            v14 = *(_QWORD *)(v13 + 32);
            swift_beginAccess();
            swift_retain();
            v15 = v5(v14, &v49);
            swift_endAccess();
            if ((v15 & 1) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_257224FF0);
              sub_242A7AF34(&qword_257225008, &qword_257224FF0, (uint64_t)&unk_242C52AB0);
              sub_242AD7E60();
            }
          }
          else
          {
            swift_retain();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224FE8);
          swift_dynamicCastClassUnconditional();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224FF0);
          if (swift_dynamicCastClass())
          {
            v55 = v45;
            swift_retain_n();
            sub_242C480E0();
            sub_242C480E0();
            sub_242B64A2C();
            swift_release();
            swift_release();
            v43 = v55;
            v16 = *(unsigned __int8 *)(v13 + 49);
            swift_release();
            swift_beginAccess();
            v44 = v49;
            if (v52 >> 62)
            {
              sub_242C480E0();
              sub_242C48FC8();
              swift_bridgeObjectRelease();
            }
            v17 = swift_retain();
            MEMORY[0x2494EC0CC](v17);
            if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_242C485A8();
            sub_242C485F0();
            sub_242C4856C();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_242A5E764();
              v47 = v20;
            }
            v18 = v47;
            v19 = *(_QWORD *)(v47 + 16);
            if (v19 >= *(_QWORD *)(v47 + 24) >> 1)
            {
              sub_242A5E764();
              v18 = v21;
            }
            *(_QWORD *)(v18 + 16) = v19 + 1;
            v47 = v18;
            *(_QWORD *)(v18 + 8 * v19 + 32) = v43;
            if ((v44 & 4) != 0)
              sub_242BA31C0();
            if (v16)
              sub_242BA31C0();
            swift_release();
          }
          else
          {
            swift_release_n();
          }
          v7 = v67;
        }
        while (*(_QWORD *)(v67 + 16));
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_242A6549C((uint64_t)v5);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225010);
      swift_allocObject();
      sub_242AEE878();
      v3 = v23;
      if (!sub_242BA278C() && !sub_242BA2760())
      {
        swift_retain();
        sub_242B5AFB4();
        if (qword_257220598 != -1)
          swift_once();
        swift_beginAccess();
        v24 = swift_retain();
        sub_242B8C854(v24, &type metadata for LSTM, &type metadata for Parameter, 0);
        swift_endAccess();
        sub_242B5AFD4();
        swift_release();
      }
      v25 = (uint64_t)v83;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_242A6549C(v25);
      swift_bridgeObjectRelease();
      v1 = v48;
    }
    if (v1 == 2)
    {
      v27 = *(_QWORD *)(v3 + 16);
      if (v27 >> 62)
      {
        swift_retain();
        sub_242C480E0();
        v28 = sub_242C48FC8();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v26 = v28 > 0;
    }
    else
    {
      v26 = v1 & 1;
    }
    v46 = v26;
    v29 = *(_QWORD *)(v3 + 16);
    if (v29 >> 62)
    {
      sub_242C480E0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FF0);
      v42 = sub_242C48F74();
      swift_bridgeObjectRelease();
      v29 = v42;
    }
    else
    {
      v30 = v29 & 0xFFFFFFFFFFFFFF8;
      sub_242C480E0();
      sub_242C49280();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FF0);
      if (!swift_dynamicCastMetatype())
      {
        v39 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v39)
        {
          v40 = v30 + 32;
          while (swift_dynamicCastClass())
          {
            v40 += 8;
            if (!--v39)
              goto LABEL_49;
          }
          v29 = v30 | 1;
        }
      }
    }
LABEL_49:
    if (!(v29 >> 62))
    {
      v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v31)
        break;
      goto LABEL_51;
    }
    sub_242C480E0();
    v31 = sub_242C48FC8();
    swift_bridgeObjectRelease();
    if (!v31)
      break;
LABEL_51:
    v32 = 4;
    while (1)
    {
      if ((v29 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v32 - 4, v29);
      else
        swift_retain();
      v33 = v32 - 3;
      if (__OFADD__(v32 - 4, 1))
        break;
      v34 = sub_242C48B54();
      if ((v35 & 1) != 0)
      {
        swift_getAtKeyPath();
        v37 = *(_QWORD *)(v71 + 32);
        swift_release();
        swift_release();
        if ((v37 & 0x8000000000000000) == 0)
          goto LABEL_68;
      }
      else
      {
        LOBYTE(v71) = __dst[0];
        v72 = __dst[1];
        v73 = __dst[2];
        v74 = __dst[3];
        v75 = __dst[4];
        v76 = __dst[5];
        v77 = __dst[6];
        v78 = BYTE2(__dst[6]);
        v79 = __dst[7];
        v80 = __dst[8];
        v81 = BYTE2(__dst[8]);
        v36 = *(_QWORD *)(*(uint64_t *)((char *)&v71 + v34) + 32);
        swift_release();
        if ((~v36 & 0xF000000000000007) != 0 && (v36 & 0x8000000000000000) == 0)
        {
LABEL_68:
          v38 = v48;
          swift_bridgeObjectRelease();
          v22 = 0;
          goto LABEL_69;
        }
      }
      ++v32;
      if (v33 == v31)
        goto LABEL_62;
    }
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    swift_once();
  }
LABEL_62:
  v38 = v48;
  swift_bridgeObjectRelease();
  v22 = 1;
LABEL_69:
  if (v38 == 2)
  {
    swift_beginAccess();
    sub_242B8C810(v46, (uint64_t)&type metadata for LSTM);
    swift_endAccess();
  }
  swift_release();
  return v22;
}

uint64_t sub_242AED3B8(uint64_t a1, unint64_t a2, unint64_t a3, float a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  int v62;
  char v63;
  __int128 v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;

  v4 = a3;
  v5 = a2;
  v6 = a1;
  v75 = *MEMORY[0x24BDAC8D0];
  *(float *)&v59 = a4;
  BYTE4(v59) = a1;
  *(_QWORD *)&v60 = a2;
  *((_QWORD *)&v60 + 1) = a3;
  if (qword_257220568 != -1)
    goto LABEL_78;
  while (1)
  {
    swift_beginAccess();
    v7 = sub_242A9E698((uint64_t)&type metadata for Dropout, (uint64_t)off_257224A58);
    swift_endAccess();
    if (v7 != 2 && (v7 & 1) == 0)
      return 1;
    if (qword_257220590 != -1)
      swift_once();
    swift_retain();
    sub_242B5AFB4();
    v9 = sub_242AEE9B8((uint64_t)&type metadata for Dropout, (uint64_t)&type metadata for Parameter, 0, &qword_257224FE0);
    sub_242B5AFD4();
    swift_release();
    LODWORD(v54) = v7;
    if (!v9)
    {
      v57 = MEMORY[0x24BEE4AF8];
      v55 = MEMORY[0x24BEE4B08];
      v56 = MEMORY[0x24BEE4B08];
      v11 = swift_allocObject();
      *(_BYTE *)(v11 + 16) = 0;
      *(_DWORD *)(v11 + 20) = 4;
      swift_retain();
      swift_retain();
      sub_242BDA94C(v6, v5, v4, (uint64_t)sub_242AEFB84, v11, v12, v13, v14, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
        v59,
        v60,
        *((uint64_t *)&v60 + 1));
      v15 = *((_QWORD *)&v70 + 1);
      v5 = v72;
      v6 = v73;
      v4 = v74;
      v62 = v69;
      v63 = BYTE4(v69);
      v64 = v70;
      v65 = v71;
      v66 = v72;
      v67 = v73;
      v68 = v74;
      v51 = v70;
      swift_retain();
      v50 = v15;
      swift_retain();
      swift_retain();
      sub_242A6548C(v5);
      v16 = v65;
      v17 = *(_QWORD *)(v65 + 16);
      v52 = v4;
      sub_242C480E0();
      if (v17)
      {
        v53 = MEMORY[0x24BEE4AF8];
        do
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242BEC2C4();
            v16 = v18;
          }
          v19 = *(_QWORD *)(v16 + 16);
          if (!v19)
            goto LABEL_77;
          v20 = v19 - 1;
          v21 = v16 + 16 * v20;
          v22 = *(_QWORD *)(v21 + 32);
          LODWORD(v21) = *(_DWORD *)(v21 + 40);
          *(_QWORD *)(v16 + 16) = v20;
          v65 = v16;
          HIDWORD(v54) = v21;
          if (v5)
          {
            v4 = *(_QWORD *)(v22 + 32);
            swift_beginAccess();
            swift_retain();
            v23 = ((uint64_t (*)(unint64_t, char *))v5)(v4, (char *)&v54 + 4);
            swift_endAccess();
            if ((v23 & 1) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_257224FC0);
              sub_242A7AF34(&qword_257224FD8, &qword_257224FC0, (uint64_t)&unk_242C52AB0);
              sub_242AD7E60();
            }
          }
          else
          {
            swift_retain();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224FB8);
          swift_dynamicCastClassUnconditional();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224FC0);
          if (swift_dynamicCastClass())
          {
            v61 = v52;
            swift_retain_n();
            sub_242C480E0();
            sub_242C480E0();
            sub_242B64A2C();
            swift_release();
            swift_release();
            v24 = v61;
            v25 = *(unsigned __int8 *)(v22 + 49);
            swift_release();
            swift_beginAccess();
            HIDWORD(v49) = HIDWORD(v54);
            if (v57 >> 62)
            {
              sub_242C480E0();
              v48 = sub_242C48FC8();
              swift_bridgeObjectRelease();
            }
            else
            {
              v48 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v26 = swift_retain();
            MEMORY[0x2494EC0CC](v26);
            if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_242C485A8();
            sub_242C485F0();
            sub_242C4856C();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_242A5E764();
              v53 = v28;
            }
            v27 = v53;
            v4 = *(_QWORD *)(v53 + 16);
            if (v4 >= *(_QWORD *)(v53 + 24) >> 1)
            {
              sub_242A5E764();
              v27 = v29;
            }
            *(_QWORD *)(v27 + 16) = v4 + 1;
            v53 = v27;
            *(_QWORD *)(v27 + 8 * v4 + 32) = v24;
            if ((v49 & 0x400000000) != 0)
              sub_242BA31C0();
            if (v25)
              sub_242BA31C0();
            swift_release();
          }
          else
          {
            swift_release_n();
          }
          v16 = v65;
        }
        while (*(_QWORD *)(v65 + 16));
      }
      swift_release();
      swift_release();
      swift_release();
      sub_242A6549C(v5);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FE0);
      swift_allocObject();
      sub_242AEE878();
      v9 = v30;
      LOBYTE(v7) = v54;
      if (!sub_242BA278C() && !sub_242BA2760())
      {
        swift_retain();
        sub_242B5AFB4();
        if (qword_257220598 != -1)
          swift_once();
        swift_beginAccess();
        v31 = swift_retain();
        sub_242B8C854(v31, &type metadata for Dropout, &type metadata for Parameter, 0);
        swift_endAccess();
        sub_242B5AFD4();
        swift_release();
      }
      v32 = v72;
      swift_release();
      swift_release();
      swift_release();
      sub_242A6549C(v32);
      swift_bridgeObjectRelease();
    }
    if (v7 == 2)
    {
      v34 = *(_QWORD *)(v9 + 16);
      if (v34 >> 62)
      {
        swift_retain();
        sub_242C480E0();
        v35 = sub_242C48FC8();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v33 = v35 > 0;
    }
    else
    {
      v33 = v7 & 1;
    }
    LODWORD(v52) = v33;
    v5 = *(_QWORD *)(v9 + 16);
    if (v5 >> 62)
    {
      sub_242C480E0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FC0);
      v47 = sub_242C48F74();
      swift_bridgeObjectRelease();
      v5 = v47;
    }
    else
    {
      v36 = v5 & 0xFFFFFFFFFFFFFF8;
      sub_242C480E0();
      sub_242C49280();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224FC0);
      if (!swift_dynamicCastMetatype())
      {
        v44 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v44)
        {
          v45 = v36 + 32;
          while (swift_dynamicCastClass())
          {
            v45 += 8;
            if (!--v44)
              goto LABEL_51;
          }
          v5 = v36 | 1;
        }
      }
    }
LABEL_51:
    v53 = v9;
    if (!(v5 >> 62))
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v6)
        break;
      goto LABEL_53;
    }
    sub_242C480E0();
    v6 = sub_242C48FC8();
    swift_bridgeObjectRelease();
    if (!v6)
      break;
LABEL_53:
    v37 = 4;
    v4 = 0xF000000000000007;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v37 - 4, v5);
      else
        swift_retain();
      v38 = v37 - 3;
      if (__OFADD__(v37 - 4, 1))
        break;
      v39 = sub_242C48B54();
      if ((v40 & 1) != 0)
      {
        swift_getAtKeyPath();
        v42 = *(_QWORD *)(v69 + 32);
        swift_release();
        swift_release();
        if ((v42 & 0x8000000000000000) == 0)
          goto LABEL_70;
      }
      else
      {
        LODWORD(v69) = v59;
        BYTE4(v69) = BYTE4(v59);
        v70 = v60;
        v41 = *(_QWORD *)(*(uint64_t *)((char *)&v69 + v39) + 32);
        swift_release();
        if ((~v41 & 0xF000000000000007) != 0 && (v41 & 0x8000000000000000) == 0)
        {
LABEL_70:
          v43 = v54;
          swift_bridgeObjectRelease();
          v10 = 0;
          goto LABEL_71;
        }
      }
      ++v37;
      if (v38 == v6)
        goto LABEL_64;
    }
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    swift_once();
  }
LABEL_64:
  v43 = v54;
  swift_bridgeObjectRelease();
  v10 = 1;
LABEL_71:
  if (v43 == 2)
  {
    swift_beginAccess();
    sub_242B8C810(v52, (uint64_t)&type metadata for Dropout);
    swift_endAccess();
  }
  swift_release();
  return v10;
}

uint64_t sub_242AEDD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v5 = sub_242C48E30();
  v6 = MEMORY[0x2494EDE24](&unk_242C52AB0, v5);
  v20 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v5, v6, v7);
  v17[1] = *(_QWORD *)(v20 - 8);
  v8 = MEMORY[0x24BDAC7A8](v20);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v17[2] = (char *)v17 - v10;
  if (qword_257220568 != -1)
    swift_once();
  swift_beginAccess();
  v11 = off_257224A58;
  v12 = *((_QWORD *)off_257224A58 + 2);
  v19 = a3;
  if (!v12 || (v13 = sub_242A613F0(), (v14 & 1) == 0))
  {
    swift_endAccess();
    v18 = 0x100000000;
LABEL_8:
    type metadata accessor for AnyLayerVariablePathCache();
    sub_242BA21DC(a2);
  }
  v15 = *(_BYTE *)(v11[7] + v13);
  swift_endAccess();
  result = 1;
  if ((v15 & 1) != 0)
  {
    v18 = 1;
    goto LABEL_8;
  }
  return result;
}

void *sub_242AEE468()
{
  void *result;

  result = (void *)sub_242C480BC();
  off_257224A58 = result;
  return result;
}

uint64_t sub_242AEE4A4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(uint64_t *)(*(_QWORD *)result + 32) < 0;
  return result;
}

uint64_t sub_242AEE4B8()
{
  return swift_deallocClassInstance();
}

uint64_t sub_242AEE4C8(_QWORD *a1)
{
  _QWORD *v1;

  return nullsub_1(*a1, *v1, v1[1]);
}

void sub_242AEE4DC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = sub_242AEA8B4(a1, *v2);
  a2[1] = v4;
  a2[2] = v5;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEE508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_47_10();
  nullsub_1(v0, v1, v2);
  OUTLINED_FUNCTION_0_11();
}

void sub_242AEE530(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  _OWORD v5[6];

  v3 = v1[1];
  v5[3] = *v1;
  v5[4] = v3;
  v5[5] = v1[2];
  sub_242AEA868(v5);
  v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  a1[2] = v5[2];
  OUTLINED_FUNCTION_48_11();
}

uint64_t sub_242AEE57C(_QWORD *a1)
{
  _QWORD *v1;

  return nullsub_1(*a1, *v1, v1[1]);
}

void sub_242AEE594(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a2 = sub_242AEABC4(a1, *v2);
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6 & 1;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEE5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_8();
  nullsub_1(v0, v1, v2);
  OUTLINED_FUNCTION_21_16();
}

void sub_242AEE600()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_8();
  sub_242AEAB8C(v0);
  OUTLINED_FUNCTION_21_16();
}

void sub_242AEE64C()
{
  OUTLINED_FUNCTION_73_6();
  MEMORY[0x2494EDE24](&protocol conformance descriptor for Sequential<A, B>);
  OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_30_16();
}

void sub_242AEE678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_57_9();
  MEMORY[0x2494EDE24](&protocol conformance descriptor for Sequential<A, B>);
  v0 = OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_29_12(v0, v1, v2, v3);
}

uint64_t sub_242AEE6AC()
{
  const void *v0;
  _BYTE __dst[67];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_242AEB134() & 1;
}

void sub_242AEE6EC()
{
  void *v0;
  const void *v1;
  void *v2;

  OUTLINED_FUNCTION_33_12();
  memcpy(v0, v1, 0x43uLL);
  OUTLINED_FUNCTION_41_14();
  sub_242AEA6F0(v2);
  OUTLINED_FUNCTION_48_11();
}

void sub_242AEE72C()
{
  OUTLINED_FUNCTION_73_6();
  MEMORY[0x2494EDE24](&protocol conformance descriptor for CompiledModel<A, B>);
  OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_30_16();
}

void sub_242AEE758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_57_9();
  MEMORY[0x2494EDE24](&protocol conformance descriptor for CompiledModel<A, B>);
  v0 = OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_29_12(v0, v1, v2, v3);
}

uint64_t sub_242AEE78C()
{
  uint64_t v0;

  return sub_242AEB13C(*(unsigned __int8 *)(v0 + 4), *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(float *)v0);
}

uint64_t sub_242AEE79C(_QWORD *a1)
{
  uint64_t v1;

  return nullsub_1(*a1, *(unsigned __int8 *)(v1 + 4), *(_QWORD *)(v1 + 8));
}

uint64_t sub_242AEE7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242AEA540(a1, *(_BYTE *)(v2 + 4), *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), a2, *(float *)v2);
}

uint64_t sub_242AEE7C4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return nullsub_1(*a1, *v3, a3);
}

uint64_t sub_242AEE7D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_242AEA988(a1, *v2, a2);
}

void sub_242AEE7DC(uint64_t a1, uint64_t a2, char a3, int a4)
{
  _DWORD *v4;

  OUTLINED_FUNCTION_73_6();
  if (swift_dynamicCastMetatype())
    goto LABEL_2;
  if ((a3 & 1) != 0)
  {
    if (OUTLINED_FUNCTION_17_19())
    {
      OUTLINED_FUNCTION_17_19();
      goto LABEL_6;
    }
    if (OUTLINED_FUNCTION_17_19() || OUTLINED_FUNCTION_17_19())
LABEL_2:
      *v4 |= a4;
  }
LABEL_6:
  OUTLINED_FUNCTION_9();
}

void sub_242AEE878()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v0[4] = 0;
  if (v8 >> 62)
  {
    sub_242C48B78();
    v10 = sub_242C48F74();
  }
  else
  {
    sub_242C480E0();
    sub_242C49280();
    sub_242C48B78();
    v10 = v9;
  }
  v0[2] = v10;
  v0[3] = v7;
  v0[7] = v5;
  v0[8] = v3;
  MEMORY[0x24BDAC7A8](v10);
  swift_getKeyPath();
  swift_retain();
  sub_242ADA960(v9);
  v12 = v11;
  OUTLINED_FUNCTION_135();
  v0[5] = v12;
  sub_242ADAAF4(v9);
  v14 = v13;
  swift_bridgeObjectRelease();
  v1[6] = v14;
  OUTLINED_FUNCTION_13_11();
}

void sub_242AEE99C()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_70_6();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEE9B8(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  char v8;
  uint64_t v9;

  if (qword_257220598 != -1)
    swift_once();
  swift_beginAccess();
  if (*((_QWORD *)off_25722A3F0 + 2) && (sub_242A6141C(a1, a2, a3 & 1), (v8 & 1) != 0))
  {
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(a4);
    v9 = swift_dynamicCastClass();
    if (v9)
      OUTLINED_FUNCTION_91();
  }
  else
  {
    swift_endAccess();
    return 0;
  }
  return v9;
}

uint64_t sub_242AEEAB0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(*a1, a2, a3);
}

void sub_242AEEAC0()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  int v3;

  v1 = OUTLINED_FUNCTION_52_5();
  *(float *)v0 = sub_242AEAC4C(v1, v2, (void (*)(void))sub_242AE0CFC);
  *(_DWORD *)(v0 + 4) = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEEAF0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(*a1, a2, a3);
}

void sub_242AEEB04()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  int v3;

  v1 = OUTLINED_FUNCTION_52_5();
  *(float *)v0 = sub_242AEAC4C(v1, v2, (void (*)(void))sub_242AE7EAC);
  *(_DWORD *)(v0 + 4) = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEEB38(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_242AEA944(a1, *v2, (void (*)(void))sub_242AE7324);
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEEB70()
{
  float *v0;
  float v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_53_6();
  *v0 = sub_242AEAA20(v1, v2, (void (*)(void))sub_242AE5010);
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEEBB4()
{
  float *v0;
  float v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_53_6();
  *v0 = sub_242AEAA20(v1, v2, (void (*)(void))sub_242AE8A44);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEEBE4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(*a1, a2, a3);
}

void sub_242AEEBF4()
{
  float *v0;
  float v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_53_6();
  *v0 = sub_242AEAA20(v1, v2, (void (*)(void))sub_242AE0164);
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEEC20()
{
  float *v0;
  float v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_53_6();
  *v0 = sub_242AEAA20(v1, v2, (void (*)(void))sub_242AE53E8);
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEEC54()
{
  float *v0;
  float v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_53_6();
  *v0 = sub_242AEAA20(v1, v2, (void (*)(void))sub_242AE10D4);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEEC7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *a1;
  if (*(_BYTE *)(v1 + 9))
    v3 = 256;
  else
    v3 = 0;
  return nullsub_1(v2, *(_QWORD *)v1, v3 | *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_242AEECA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_242AEA624(a1, *(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), a2);
}

void sub_242AEECD0()
{
  uint64_t v0;
  float v1;
  int v2;

  v1 = OUTLINED_FUNCTION_52_5();
  *(float *)v0 = sub_242AEA914(v1);
  *(_DWORD *)(v0 + 4) = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEECF0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  nullsub_1(*a1, a2, a3);
  OUTLINED_FUNCTION_7_19();
}

void sub_242AEED24(_OWORD *a1@<X8>)
{
  sub_242AEA5E0(a1);
  OUTLINED_FUNCTION_7_19();
}

void sub_242AEED54(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_242AEA944(a1, *v2, (void (*)(void))sub_242AE76FC);
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEED84()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  int v3;

  v1 = OUTLINED_FUNCTION_52_5();
  *(float *)v0 = sub_242AEAC4C(v1, v2, (void (*)(void))sub_242AE1CA8);
  *(_DWORD *)(v0 + 4) = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242AEEDB0()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  int v3;

  v1 = OUTLINED_FUNCTION_52_5();
  *(float *)v0 = sub_242AEAC4C(v1, v2, (void (*)(void))sub_242AE961C);
  *(_DWORD *)(v0 + 4) = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEEDE4()
{
  void *v0;
  const void *v1;
  void *v2;

  OUTLINED_FUNCTION_35_12();
  memcpy(v0, v1, 0x9CuLL);
  OUTLINED_FUNCTION_41_14();
  return sub_242AEA73C(v2);
}

void sub_242AEEE28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242AEA4A8(a1, a2);
  OUTLINED_FUNCTION_0_11();
}

void sub_242AEEE64()
{
  void *v0;
  const void *v1;
  void *v2;

  OUTLINED_FUNCTION_35_12();
  memcpy(v0, v1, 0x50uLL);
  OUTLINED_FUNCTION_41_14();
  sub_242AEA4F4(v2);
  OUTLINED_FUNCTION_48_11();
}

void sub_242AEEEA4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_8();
  sub_242AEA408(v0);
  OUTLINED_FUNCTION_21_16();
}

void sub_242AEEED4()
{
  void *v0;
  const void *v1;
  void *v2;

  OUTLINED_FUNCTION_35_12();
  memcpy(v0, v1, 0x60uLL);
  OUTLINED_FUNCTION_41_14();
  sub_242AEA81C(v2);
  OUTLINED_FUNCTION_22_15();
}

void sub_242AEEF0C(_OWORD *a1@<X8>)
{
  sub_242AEA45C(a1);
  OUTLINED_FUNCTION_21_16();
}

uint64_t type metadata accessor for ParametrizedLayers()
{
  return objc_opt_self();
}

uint64_t sub_242AEEF5C()
{
  return OUTLINED_FUNCTION_0_42();
}

BOOL sub_242AEEF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AEB784(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_242AEEF70()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242AEEF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_242AEEFE8@<X0>(uint64_t a1@<X8>)
{
  return sub_242AEC36C(a1);
}

uint64_t sub_242AEF008()
{
  return OUTLINED_FUNCTION_0_42();
}

BOOL sub_242AEF014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AEC7CC(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_242AEF030()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242AEF054@<X0>(_QWORD *a1@<X8>)
{
  return sub_242AEC5F0(a1);
}

uint64_t sub_242AEF064()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242AEF070@<X0>(uint64_t *a1@<X8>)
{
  return sub_242AEC848(a1);
}

uint64_t dispatch thunk of Layer.isEveryParameterInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Layer.initializeParameters(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of Layer.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of LearningPhaseSensitive.learningPhase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LearningPhaseSensitive.learningPhase.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LearningPhaseSensitive.learningPhase.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_242AEF0B0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LayerPropertiesCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LayerPropertiesCache);
}

uint64_t sub_242AEF0FC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF150(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF1C4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v2);
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AEF26C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 104);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_242A6549C(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AEF314(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF368(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF3D8(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF40C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF4B4(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 168);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v3);
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AEF590(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 168);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_242A6549C(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AEF670(uint64_t a1)
{
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AEF698(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AEF6C0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_242AEF6E8(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_242AEF710(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_242AEF738()
{
  return OUTLINED_FUNCTION_0_42();
}

void sub_242AEF744()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_70_6();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AEF760()
{
  return 32;
}

__n128 sub_242AEF76C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_242AEF778(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF7C0()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242AEF7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  sub_242AEE7DC(a1, a2, *(_BYTE *)(v2 + 16), *(_DWORD *)(v2 + 20));
  return v3 & 1;
}

uint64_t sub_242AEF7EC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF834(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 144);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v2);
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AEF8B0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 144);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_242A6549C(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AEF92C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AEF974(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A6548C(v2);
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AEF9F0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 128);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_242A6549C(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AEFA6C(uint64_t a1)
{
  swift_retain();
  OUTLINED_FUNCTION_91();
  swift_retain();
  return a1;
}

uint64_t sub_242AEFAB0()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242AEFABC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257225300);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242AEFAFC()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242AEFB08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  sub_242AEBFAC(a1, a2, *(_BYTE *)(v2 + 16));
  return v3 & 1;
}

uint64_t sub_242AEFB28()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242AEFB34(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242BA2630(a1, *(_QWORD *)(v2 + 32), *(void (**)(char *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), (uint64_t)&type metadata for Parameter, MEMORY[0x24BEE1328], *(_QWORD *)(v2 + 24), (uint64_t)&protocol witness table for Parameter, a2);
}

uint64_t OUTLINED_FUNCTION_0_42()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_2_37()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_31()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_6_31(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_7_21()
{
  uint64_t v0;

  return dynamic_cast_existential_1_conditional(v0);
}

uint64_t OUTLINED_FUNCTION_9_26()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_13_22()
{
  return sub_242C48E30();
}

void OUTLINED_FUNCTION_15_18()
{
  sub_242AD7AC0();
}

uint64_t OUTLINED_FUNCTION_17_19()
{
  uint64_t v0;

  return dynamic_cast_existential_1_conditional(v0);
}

uint64_t OUTLINED_FUNCTION_18_20(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;

  return v2(a1, *(_QWORD *)(v3 - 112), v1);
}

void OUTLINED_FUNCTION_19_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 - 104) = a5;
  *(_QWORD *)(v6 - 96) = a6;
}

uint64_t OUTLINED_FUNCTION_20_21()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_28_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v3, v2, v1);
}

void OUTLINED_FUNCTION_29_12(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  Layer.placed(on:)(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_30_16()
{
  Layer.place(on:)();
}

uint64_t OUTLINED_FUNCTION_32_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 184))(v1, v2, v0);
}

void *OUTLINED_FUNCTION_34_11(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0x58uLL);
}

uint64_t OUTLINED_FUNCTION_38_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_40_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 144))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_41_14()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_45_8(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v2;
  result[3] = v1;
  v4 = *(_QWORD *)(v3 - 96);
  result[4] = *(_QWORD *)(v3 - 104);
  result[5] = v4;
  return result;
}

void OUTLINED_FUNCTION_46_9()
{
  sub_242AD7AC0();
}

__n128 OUTLINED_FUNCTION_47_10()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_49_9()
{
  return sub_242AEA7D4();
}

float OUTLINED_FUNCTION_52_5()
{
  uint64_t v0;

  return *(float *)v0;
}

float OUTLINED_FUNCTION_53_6()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t OUTLINED_FUNCTION_54_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_58_5()
{
  return swift_modifyAtWritableKeyPath();
}

void OUTLINED_FUNCTION_59_7()
{
  sub_242AD7AC0();
}

uint64_t OUTLINED_FUNCTION_64_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_66_6()
{
  return swift_dynamicCastClass();
}

uint64_t OUTLINED_FUNCTION_67_6()
{
  return swift_dynamicCastClass();
}

uint64_t OUTLINED_FUNCTION_68_6()
{
  return swift_dynamicCastClass();
}

uint64_t OUTLINED_FUNCTION_70_6()
{
  return sub_242C48B6C();
}

uint64_t OUTLINED_FUNCTION_77_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for RecursiveStoredPropertiesIterator(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_79_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_80_5()
{
  return swift_retain_n();
}

void sub_242AEFEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_1();
  v9 = OUTLINED_FUNCTION_10_21(v2, v3, v4, v5, v6, v7, v8);
  v10 = OUTLINED_FUNCTION_44_9(v9);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_18(v11, v17);
  if (!v0)
    goto LABEL_13;
  v12 = sub_242C480E0() + 64;
  while (*(_BYTE *)(v12 - 32) != 1)
  {
    v12 += 48;
    if (!--v0)
      goto LABEL_12;
  }
  v13 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_69();
  if (!v13)
  {
    OUTLINED_FUNCTION_33();
LABEL_11:
    swift_bridgeObjectRelease();
    sub_242C48C38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_34_12();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_5_32();
    OUTLINED_FUNCTION_42_11();
    sub_242A66F3C();
    v15 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_19_18(v15, v16);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_20_22();
  if ((v14 & 1) == 0)
  {
    OUTLINED_FUNCTION_29_13();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
LABEL_12:
  OUTLINED_FUNCTION_29_13();
LABEL_13:
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AF005C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  int v10;
  int *v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[4];
  id v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_18_1();
  v49 = v2;
  v50 = v3;
  v48 = *MEMORY[0x24BDAC8D0];
  v5 = *v4;
  v6 = type metadata accessor for MILBlobStorageWriter(0);
  v7 = *(int *)(v6 + 20);
  v8 = *(_DWORD *)(v0 + v7);
  v9 = __CFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v11 = (int *)v6;
  *(_DWORD *)(v0 + v7) = v10;
  v12 = *(void **)(v0 + *(int *)(type metadata accessor for MILBlobStorageWriter.BlobWriter(0) + 20));
  v13 = (uint64_t *)(v0 + v11[8]);
  v14 = *(_QWORD *)(v0 + v11[6]);
  v15 = *(_QWORD *)(*v13 + 16);
  if (v15)
  {
    v16 = *(_QWORD *)(v0 + v11[7]);
    v17 = (uint64_t *)(*v13 + 40);
    while (1)
    {
      v18 = v14 + v16;
      if (__CFADD__(v14, v16))
        break;
      v20 = *v17;
      v17 += 8;
      v19 = v20;
      v21 = v20 & 0x3F;
      if ((v20 & 0x3F) != 0)
      {
        v22 = 64 - v21;
        v9 = __CFADD__(v19, v22);
        v19 += v22;
        if (v9)
          goto LABEL_33;
      }
      v14 = v18 + v19;
      if (__CFADD__(v18, v19))
        goto LABEL_32;
      if (!--v15)
        goto LABEL_11;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v0 + v11[7]);
LABEL_11:
  v23 = v14 + v16;
  if (__CFADD__(v14, v16))
    goto LABEL_35;
  v46 = v5;
  v24 = v12;
  swift_retain();
  sub_242AF0AD8((uint64_t *)&v46, v23, (uint64_t)v45);
  if (v1)
    goto LABEL_19;
  v46 = 0;
  if ((objc_msgSend(v24, sel_seekToOffset_error_, v14, &v46) & 1) == 0)
  {
    v29 = v46;
    sub_242C47AF8();

LABEL_18:
    swift_willThrow();
LABEL_19:

    return v14;
  }
  v25 = v46;
  sub_242AF0CC4((uint64_t)v45, v24);
  v46 = 0;
  v26 = objc_msgSend(v24, sel_seekToOffset_error_, v23, &v46);
  v27 = v46;
  if ((v26 & 1) == 0)
  {
    v30 = v46;
    sub_242C47AF8();

    goto LABEL_18;
  }
  MEMORY[0x24BDAC7A8](v26);
  v28 = v27;
  swift_retain();
  sub_242A9F52C();
  swift_release();
  v32 = *((_QWORD *)&v45[0] + 1);
  if ((BYTE8(v45[0]) & 0x3F) != 0)
  {
    v33 = 64 - (BYTE8(v45[0]) & 0x3F);
    v9 = __CFADD__(*((_QWORD *)&v45[0] + 1), v33);
    v34 = *((_QWORD *)&v45[0] + 1) + v33;
    if (!v9)
      goto LABEL_26;
    __break(1u);
  }
  v34 = v32;
LABEL_26:
  v35 = v34 - v32;
  if (v34 < v32)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  if (v35)
  {
    if ((v35 & 0x8000000000000000) != 0)
      goto LABEL_37;
    v46 = (id)MEMORY[0x2494EB79C]();
    v47 = v36;
    sub_242AF1158((uint64_t)&v46);
    v37 = (uint64_t)v46;
    v38 = v47;
    v39 = (void *)sub_242C47BD0();
    sub_242A69418(v37, v38);
    objc_msgSend(v24, sel_writeData_, v39);

  }
  sub_242A5D980();
  v40 = *(_QWORD *)(*v13 + 16);
  sub_242A5DCB8();
  v41 = *v13;
  *(_QWORD *)(v41 + 16) = v40 + 1;
  v42 = (_OWORD *)(v41 + (v40 << 6));
  v43 = v45[1];
  v42[2] = v45[0];
  v42[3] = v43;
  v44 = v45[3];
  v42[4] = v45[2];
  v42[5] = v44;

  *v13 = v41;
  return v14;
}

void sub_242AF0394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_1();
  v9 = OUTLINED_FUNCTION_10_21(v2, v3, v4, v5, v6, v7, v8);
  v10 = OUTLINED_FUNCTION_44_9(v9);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_18(v11, v17);
  if (!v0)
    goto LABEL_13;
  v12 = sub_242C480E0() + 64;
  while (*(_BYTE *)(v12 - 32) != 2)
  {
    v12 += 48;
    if (!--v0)
      goto LABEL_12;
  }
  v13 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_69();
  if (!v13)
  {
    OUTLINED_FUNCTION_33();
LABEL_11:
    swift_bridgeObjectRelease();
    sub_242C48C38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_34_12();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_5_32();
    OUTLINED_FUNCTION_42_11();
    sub_242A66F3C();
    v15 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_19_18(v15, v16);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_20_22();
  if ((v14 & 1) == 0)
  {
    OUTLINED_FUNCTION_29_13();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
LABEL_12:
  OUTLINED_FUNCTION_29_13();
LABEL_13:
  OUTLINED_FUNCTION_0_9();
}

void sub_242AF0548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16[2];

  OUTLINED_FUNCTION_18_1();
  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = sub_242C47B7C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_9();
  v4 = v3 - v2;
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_242C47B58();
  v6 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if ((v7 & 1) == 0)
  {
    v8 = OUTLINED_FUNCTION_49_10();
    sub_242C47B40();
    v9 = (void *)sub_242C47B34();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
    v16[0] = 0;
    v10 = objc_msgSend(v8, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v9, 1, 0, v16);

    v11 = v16[0];
    if (v10)
    {
      v12 = OUTLINED_FUNCTION_49_10();
      sub_242C47B58();
      v13 = (void *)sub_242C48224();
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_242AF146C();
      v14 = sub_242C480BC();
      sub_242AF14AC((uint64_t)v13, 0, v14, v12);

    }
    else
    {
      v15 = v11;
      sub_242C47AF8();

      swift_willThrow();
    }
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242AF074C()
{
  sub_242AF07E4();
  OUTLINED_FUNCTION_1();
}

void sub_242AF0798()
{
  sub_242AF07E4();
  OUTLINED_FUNCTION_1();
}

void sub_242AF07E4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _OWORD v40[4];
  uint64_t v41;

  OUTLINED_FUNCTION_18_1();
  v33 = v1;
  v34 = v2;
  v4 = v3;
  v36 = v6;
  v37 = v5;
  v35 = v7;
  v38 = v8;
  v10 = v9;
  v41 = *MEMORY[0x24BDAC8D0];
  v11 = type metadata accessor for MILBlobStorageWriter.BlobWriter(0);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_4_9();
  v14 = v13 - v12;
  v15 = sub_242C47B7C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_9();
  v19 = v18 - v17;
  sub_242A6917C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v10, v15);
  v20 = sub_242A67CCC(v19);
  if (!v0)
  {
    v21 = v20;
    sub_242A691B8(v10, v14);
    *(_QWORD *)(v14 + *(int *)(v11 + 20)) = v21;
    v22 = v21;
    v34(v14, v38, v35, v37, v36, v4, v33);
    v23 = type metadata accessor for MILBlobStorageWriter(0);
    v24 = *(int *)(v23 + 20);
    v25 = *(_QWORD *)(v14 + v24 + 56);
    v26 = (char *)(v10 + v24);
    *(_QWORD *)v26 = *(_QWORD *)(v14 + v24);
    *(_OWORD *)(v26 + 8) = *(_OWORD *)(v14 + v24 + 8);
    *(_OWORD *)(v26 + 24) = *(_OWORD *)(v14 + v24 + 24);
    *(_OWORD *)(v26 + 40) = *(_OWORD *)(v14 + v24 + 40);
    *((_QWORD *)v26 + 7) = v25;
    *(_QWORD *)(v10 + *(int *)(v23 + 32)) = *(_QWORD *)(v14 + *(int *)(v23 + 32));
    sub_242C480E0();
    swift_bridgeObjectRelease();
    v39 = 0;
    if ((objc_msgSend(v22, sel_seekToOffset_error_, 0, &v39) & 1) != 0)
    {
      v27 = *((_OWORD *)v26 + 1);
      v40[0] = *(_OWORD *)v26;
      v40[1] = v27;
      v28 = *((_OWORD *)v26 + 3);
      v40[2] = *((_OWORD *)v26 + 2);
      v40[3] = v28;
      v29 = v39;
      sub_242AF0CC4((uint64_t)v40, v22);
      v39 = 0;
      if ((objc_msgSend(v22, sel_closeAndReturnError_, &v39) & 1) != 0)
      {
        v30 = v39;
        OUTLINED_FUNCTION_24_17();
        OUTLINED_FUNCTION_32_16();
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_50_0();
        OUTLINED_FUNCTION_26_11();

        goto LABEL_9;
      }
      v32 = v39;
      OUTLINED_FUNCTION_31_18();

      swift_willThrow();
      OUTLINED_FUNCTION_24_17();
      OUTLINED_FUNCTION_32_16();
      OUTLINED_FUNCTION_13_0();
    }
    else
    {
      v31 = v39;
      OUTLINED_FUNCTION_31_18();

      swift_willThrow();
      OUTLINED_FUNCTION_24_17();
      OUTLINED_FUNCTION_32_16();
      swift_release();
    }
    swift_release();
    OUTLINED_FUNCTION_26_11();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_4_0();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_26_11();
LABEL_9:
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AF0AD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *a1;
  OUTLINED_FUNCTION_48_12();
  v6 = sub_242AF0E60();
  if (v6 == 4)
  {
    sub_242C48C38();
    swift_bridgeObjectRelease();
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_17_5();
    sub_242C494F0();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_42_11();
    sub_242AF1430();
    OUTLINED_FUNCTION_24_1();
    *v7 = 0xD000000000000026;
    v7[1] = 0x8000000242C69990;
    return swift_willThrow();
  }
  v9 = v6;
  v10 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 152);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = (uint64_t *)(v10 + 32);
    v13 = 1;
    while (1)
    {
      v14 = *v12++;
      v15 = v13 * v14;
      if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
        break;
      v13 = v15;
      if (!--v11)
        goto LABEL_9;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v15 = 1;
LABEL_9:
  OUTLINED_FUNCTION_48_12();
  v17 = v16;
  v19 = v18;
  OUTLINED_FUNCTION_17_5();
  result = sub_242C1D2C0(v17, v19);
  v20 = v15 * result;
  if ((unsigned __int128)(v15 * (__int128)result) >> 64 != (v15 * result) >> 63)
    goto LABEL_13;
  if ((v20 & 0x8000000000000000) == 0)
  {
    *(_DWORD *)a3 = -559038737;
    *(_DWORD *)(a3 + 4) = (v9 + 1);
    *(_QWORD *)(a3 + 8) = v20;
    *(_QWORD *)(a3 + 16) = a2;
    *(_OWORD *)(a3 + 24) = 0u;
    *(_OWORD *)(a3 + 40) = 0u;
    *(_QWORD *)(a3 + 56) = 0;
    return result;
  }
LABEL_14:
  result = sub_242C48F50();
  __break(1u);
  return result;
}

uint64_t sub_242AF0CC4(uint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_242C47AC8();
  swift_allocObject();
  v11 = 0x4000000000;
  v12 = sub_242C47AA4();
  sub_242AF1340((int *)&v11, 0);
  v12 |= 0x4000000000000000uLL;
  sub_242AF0F08((uint64_t)&v11);
  v3 = OUTLINED_FUNCTION_30_17();
  sub_242A92930(v3, v4);
  OUTLINED_FUNCTION_30_17();
  v5 = (void *)sub_242C47BD0();
  v6 = OUTLINED_FUNCTION_30_17();
  sub_242A69418(v6, v7);
  objc_msgSend(a2, sel_writeData_, v5);

  v8 = OUTLINED_FUNCTION_30_17();
  return sub_242A69418(v8, v9);
}

uint64_t sub_242AF0D88(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (result)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 152);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = (uint64_t *)(v3 + 32);
      v6 = 1;
      while (1)
      {
        v7 = *v5++;
        v8 = v6 * v7;
        if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63)
          break;
        v6 = v8;
        if (!--v4)
          goto LABEL_8;
      }
      __break(1u);
    }
    else
    {
      v8 = 1;
LABEL_8:
      Tensor.scalarType.getter();
      result = sub_242C1D2C0(v9, v10);
      if ((unsigned __int128)(v8 * (__int128)result) >> 64 == (v8 * result) >> 63)
      {
        sub_242AB8E8C();
        return sub_242C48920();
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242AF0E60()
{
  if (swift_dynamicCastMetatype())
    return 0;
  if (OUTLINED_FUNCTION_51_11())
    return 1;
  if (OUTLINED_FUNCTION_51_11())
    return 2;
  if (OUTLINED_FUNCTION_51_11())
    return 3;
  return 4;
}

uint64_t sub_242AF0EDC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_242C480E0();
  return v1;
}

void sub_242AF0F08(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_242AF0F68()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 13) << 40) | ((unint64_t)*(unsigned __int8 *)(v1 + 14) << 48);
  *v0 = *(_QWORD *)v1;
  v0[1] = v2;
}

uint64_t sub_242AF10E4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t result;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;

  result = sub_242C47A98();
  if (result)
  {
    v7 = result;
    result = sub_242C47ABC();
    if (!__OFSUB__(a1, result))
    {
      v8 = (_OWORD *)(v7 + a1 - result);
      result = sub_242C47AB0();
      v9 = a4[1];
      *v8 = *a4;
      v8[1] = v9;
      v10 = a4[3];
      v8[2] = a4[2];
      v8[3] = v10;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_242AF1158(uint64_t a1)
{
  __asm { BR              X13 }
}

void *sub_242AF11B4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t __b, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  void *result;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;

  v30 = v25;
  LOWORD(v31) = v24;
  BYTE2(v31) = BYTE2(v24);
  HIBYTE(v31) = BYTE3(v24);
  v32 = BYTE4(v24);
  v33 = BYTE5(v24);
  v34 = BYTE6(v24);
  result = memset(&v30, v27, BYTE6(v24));
  v29 = v31 | ((unint64_t)v32 << 32) | ((unint64_t)v33 << 40) | ((unint64_t)v34 << 48);
  *v26 = v30;
  v26[1] = v29;
  return result;
}

char *sub_242AF1340(int *a1, int a2)
{
  char *result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  result = (char *)sub_242C47BAC();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_242C47A98();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = (char *)sub_242C47ABC();
  v8 = v5 - (_QWORD)result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_242C47AB0();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return (char *)memset(&v7[v8], a2, v11);
}

uint64_t type metadata accessor for MILBlobStorageWriter(uint64_t a1)
{
  return sub_242AF13E8(a1, qword_2572253F8);
}

uint64_t type metadata accessor for MILBlobStorageWriter.BlobWriter(uint64_t a1)
{
  return sub_242AF13E8(a1, qword_257225368);
}

uint64_t sub_242AF13E8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_242AF1418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AF0D88(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_242AF1430()
{
  unint64_t result;

  result = qword_257225308;
  if (!qword_257225308)
  {
    result = MEMORY[0x2494EDE24](&unk_242C52FC8, &unk_251384C88);
    atomic_store(result, (unint64_t *)&qword_257225308);
  }
  return result;
}

unint64_t sub_242AF146C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257220BA0;
  if (!qword_257220BA0)
  {
    type metadata accessor for FileAttributeKey(255);
    result = MEMORY[0x2494EDE24](&unk_242C4BD20, v1);
    atomic_store(result, (unint64_t *)&qword_257220BA0);
  }
  return result;
}

id sub_242AF14AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v7;
  id v8;

  type metadata accessor for FileAttributeKey(0);
  sub_242AF146C();
  v7 = (void *)sub_242C48080();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a4, sel_createFileAtPath_contents_attributes_, a1, a2, v7);

  return v8;
}

uint64_t sub_242AF1544(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MILBlobStorageWriter.BlobWriter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for MILBlobStorageWriterError()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242AF158C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242AF15AC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for MILBlobStorageWriter.BlobMetadata()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t *sub_242AF15F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_242C47B7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for MILBlobStorageWriter(0);
    v9 = v8[5];
    v10 = (_OWORD *)((char *)a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    *(uint64_t *)((char *)a1 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
    *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    v14 = *(int *)(a3 + 20);
    v15 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
    sub_242C480E0();
    v16 = v15;
  }
  return a1;
}

void sub_242AF16CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for MILBlobStorageWriter(0);
  swift_bridgeObjectRelease();

}

uint64_t sub_242AF1724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  id v15;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  v8 = v7[5];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  v13 = *(int *)(a3 + 20);
  v14 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  sub_242C480E0();
  v15 = v14;
  return a1;
}

uint64_t sub_242AF17D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 20);
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  return a1;
}

uint64_t sub_242AF18C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  v8 = v7[5];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_242AF196C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 20);
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  return a1;
}

uint64_t sub_242AF1A38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_242AF1A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = OUTLINED_FUNCTION_46_10();
  v4 = type metadata accessor for MILBlobStorageWriter(v3);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)v1)
  {
    OUTLINED_FUNCTION_11_21(v0, v1, v4);
  }
  else
  {
    OUTLINED_FUNCTION_27_15(*(int *)(v2 + 20));
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_242AF1A90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242AF1A9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_25_15();
  if (*(_DWORD *)(*(_QWORD *)(type metadata accessor for MILBlobStorageWriter(v4) - 8) + 84) == v3)
  {
    v5 = OUTLINED_FUNCTION_47_11();
    OUTLINED_FUNCTION_12_19(v5, v6, v7, v8);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_242AF1AE4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MILBlobStorageWriter(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_242AF1B58(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_242C47B7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_OWORD *)((char *)a1 + v8);
    v11 = (_OWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v14 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    sub_242C480E0();
  }
  return a1;
}

uint64_t sub_242AF1C10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242AF1C54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  sub_242C480E0();
  return a1;
}

uint64_t sub_242AF1CE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AF1DB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_242AF1E40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  v11 = *(_OWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_OWORD *)(v9 + 40) = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242AF1EE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_242AF1EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_46_10();
  v3 = sub_242C47B7C();
  if (*(_DWORD *)(*(_QWORD *)(v3 - 8) + 84) == (_DWORD)v1)
  {
    OUTLINED_FUNCTION_11_21(v0, v1, v3);
  }
  else
  {
    OUTLINED_FUNCTION_27_15(*(int *)(v2 + 32));
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_242AF1F40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242AF1F4C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_25_15();
  if (*(_DWORD *)(*(_QWORD *)(sub_242C47B7C() - 8) + 84) == v3)
  {
    v4 = OUTLINED_FUNCTION_47_11();
    OUTLINED_FUNCTION_12_19(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 32)) = (v0 - 1);
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_242AF1F94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_242C47B7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for MILBlobStorageWriter.Header()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t OUTLINED_FUNCTION_2_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 160) = v0;
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v2 - 176) = v1;
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v3 + 152);
  *(_BYTE *)(v2 - 68) = *(_BYTE *)(v3 + 160);
  return type metadata accessor for DataSourceTensorStorage();
}

uint64_t OUTLINED_FUNCTION_4_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, _QWORD, uint64_t);

  v2 = *(_QWORD *)(v1 - 192);
  v3 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v1 - 200) + 16);
  *(_QWORD *)(v1 - 168) = v0;
  return v3(*(_QWORD *)(v1 - 208), *(_QWORD *)(v1 - 152), v2);
}

uint64_t OUTLINED_FUNCTION_5_32()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_6_32(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 68) = 1;
  return sub_242B6C9FC(a1, v2 - 144, 0x100000000, v1);
}

uint64_t OUTLINED_FUNCTION_7_22()
{
  uint64_t v0;

  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_DWORD *)(v0 - 96) = 0;
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_18@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_9_27()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_242AF8A20(v1, v0, (uint64_t *)(v2 - 144), (char *)(v2 - 68));
}

uint64_t OUTLINED_FUNCTION_10_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 - 184) = a7;
  *(_QWORD *)(v7 - 152) = a1;
  return sub_242C47B7C();
}

uint64_t OUTLINED_FUNCTION_11_21(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_12_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_13_23()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = v0;
  return sub_242AF005C();
}

uint64_t OUTLINED_FUNCTION_14_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return sub_242B8C748(v10, *(_QWORD *)(v12 - 176), v11, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_18_21()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_18(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

unint64_t OUTLINED_FUNCTION_20_22()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A61310(v1, v0);
}

uint64_t OUTLINED_FUNCTION_24_17()
{
  uint64_t v0;

  return sub_242AF1544(v0);
}

uint64_t OUTLINED_FUNCTION_25_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_27_15@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t OUTLINED_FUNCTION_29_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_31_18()
{
  return sub_242C47AF8();
}

uint64_t OUTLINED_FUNCTION_32_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_34_12()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_36_14()
{
  return type metadata accessor for TensorHandle();
}

uint64_t OUTLINED_FUNCTION_37_14()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_38_12()
{
  return type metadata accessor for TensorRepresentation();
}

uint64_t OUTLINED_FUNCTION_42_11()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_43_13(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v3;

  return sub_242AF10E4(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_44_9(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 192) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_46_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_47_11()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_48_12()
{
  Tensor.scalarType.getter();
}

id OUTLINED_FUNCTION_49_10()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 695));
}

uint64_t OUTLINED_FUNCTION_51_11()
{
  return swift_dynamicCastMetatype();
}

uint64_t sub_242AF2294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[40];

  sub_242A587A8(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
  if (OUTLINED_FUNCTION_2_39())
  {
    OUTLINED_FUNCTION_16_17();
    v3 = v6;
    v4 = 1;
  }
  else if (OUTLINED_FUNCTION_2_39())
  {
    OUTLINED_FUNCTION_16_17();
    v3 = (unsigned __int16)v6;
    v4 = 2;
  }
  else if (OUTLINED_FUNCTION_2_39())
  {
    OUTLINED_FUNCTION_16_17();
    v3 = v6;
    v4 = 3;
  }
  else
  {
    if (!OUTLINED_FUNCTION_2_39())
    {
      sub_242C48C38();
      sub_242C48314();
      sub_242C48E78();
      sub_242C48314();
      sub_242A59170();
    }
    OUTLINED_FUNCTION_16_17();
    v4 = 0;
    v3 = v6;
  }
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v4;
  return result;
}

_QWORD *sub_242AF2444@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, unsigned int a3@<S0>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t *v10;
  char v11;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  float v27;
  _QWORD *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  int v32;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int v40;
  _QWORD v41[2];
  double v42[5];
  __int128 v43[2];
  int v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(a1 + 32))(&v49);
  v7 = MEMORY[0x24BEE3F88];
  switch((char)v49)
  {
    case 1:
    case 2:
    case 3:
      if (OUTLINED_FUNCTION_5_33((uint64_t)&protocol witness table for Float) == v7)
      {
        OUTLINED_FUNCTION_6_33();
        v10 = &qword_257221F30;
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_6_33();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
      if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
        goto LABEL_4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
      if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
      {
        OUTLINED_FUNCTION_7_23();
        v9 = OUTLINED_FUNCTION_23_19();
LABEL_15:
        OUTLINED_FUNCTION_24_18();
        v8 = 0;
        goto LABEL_16;
      }
      if (OUTLINED_FUNCTION_1_33())
      {
        _H0 = LOWORD(v42[0]);
        __asm { FCVT            S0, H0 }
        _S0 = truncf(_S0);
        __asm { FCVT            H0, S0 }
        sub_242B4A678((uint64_t)v43, _S0);
        if ((BYTE4(v43[0]) & 1) != 0)
        {
LABEL_23:
          OUTLINED_FUNCTION_4_31();
          OUTLINED_FUNCTION_9_28();
LABEL_41:
          sub_242C48314();
          OUTLINED_FUNCTION_10_22();
          OUTLINED_FUNCTION_15_19();
          OUTLINED_FUNCTION_8_8();
LABEL_42:
          sub_242C48F5C();
          __break(1u);
LABEL_43:
          if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
          {
            v11 = 0;
            _S0 = (float)LOBYTE(v43[0]);
            __asm { FCVT            H9, S0 }
          }
          else
          {
            _H9 = 0;
            v11 = 1;
          }
LABEL_69:
          OUTLINED_FUNCTION_21_17();
          LOWORD(v44) = _H9;
          BYTE2(v44) = v11;
          v23 = (uint64_t *)&unk_257225470;
LABEL_70:
          __swift_instantiateConcreteTypeFromMangledName(v23);
          v40 = OUTLINED_FUNCTION_11_22();
          if ((v40 & 1) == 0)
            LOWORD(v43[0]) = 0;
          v14 = LOWORD(v43[0]);
          result = (_QWORD *)OUTLINED_FUNCTION_22_16();
          if (v40)
          {
            v15 = 2;
            goto LABEL_74;
          }
          goto LABEL_84;
        }
      }
      else if ((OUTLINED_FUNCTION_1_33() & 1) != 0)
      {
        sub_242B4A548((uint64_t)v43, truncf(*(float *)v42));
        if ((BYTE4(v43[0]) & 1) != 0)
          goto LABEL_23;
      }
      else
      {
        if ((OUTLINED_FUNCTION_1_33() & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
          if ((OUTLINED_FUNCTION_0_43() & 1) == 0)
          {
            if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
            {
              v8 = 0;
              v9 = LOBYTE(v43[0]);
            }
            else
            {
              v9 = 0;
              v8 = 1;
            }
            goto LABEL_16;
          }
          v34 = OUTLINED_FUNCTION_8_19();
          v35 = *(_QWORD *)(v7 - 8);
          MEMORY[0x24BDAC7A8](v34);
          OUTLINED_FUNCTION_56();
          (*(void (**)(uint64_t))(v35 + 16))(v3);
          sub_242AF3244();
          sub_242C48ED8();
          if ((v41[0] & 0x100000000) == 0)
          {
            (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v3, v7);
            v9 = v41[0];
            goto LABEL_15;
          }
          v41[0] = 0;
          v41[1] = 0xE000000000000000;
          sub_242C48C38();
          sub_242C494F0();
          sub_242C48314();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_10_22();
          OUTLINED_FUNCTION_15_19();
          OUTLINED_FUNCTION_8_8();
          goto LABEL_42;
        }
        sub_242B4A3C0((uint64_t)v43, trunc(v42[0]));
        if ((BYTE4(v43[0]) & 1) != 0)
        {
          OUTLINED_FUNCTION_4_31();
          goto LABEL_41;
        }
      }
LABEL_4:
      v8 = 0;
      v9 = v43[0];
LABEL_16:
      OUTLINED_FUNCTION_21_17();
      v44 = v9;
      v45 = v8;
      v10 = (uint64_t *)&unk_257225458;
LABEL_17:
      __swift_instantiateConcreteTypeFromMangledName(v10);
      v16 = OUTLINED_FUNCTION_11_22();
      if ((v16 & 1) == 0)
        LODWORD(v43[0]) = 0;
      v14 = SLODWORD(v43[0]);
      result = (_QWORD *)OUTLINED_FUNCTION_22_16();
      if ((v16 & 1) == 0)
        goto LABEL_84;
      v15 = 1;
LABEL_74:
      *(_QWORD *)a2 = v14;
      *(_QWORD *)(a2 + 8) = 0;
      *(_BYTE *)(a2 + 16) = v15;
      return result;
    case 8:
      if (OUTLINED_FUNCTION_5_33((uint64_t)&protocol witness table for Float) == MEMORY[0x24BEE4678])
      {
        OUTLINED_FUNCTION_6_33();
        v23 = &qword_257221F30;
        goto LABEL_70;
      }
      OUTLINED_FUNCTION_6_33();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
      if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
      {
        v11 = 0;
        _H9 = v43[0];
        goto LABEL_69;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
      if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
      {
        sub_242A64518(v43, (uint64_t)v42);
        v25 = __swift_project_boxed_opaque_existential_1(v42, *(uint64_t *)&v42[3]);
        MEMORY[0x24BDAC7A8](v25);
        OUTLINED_FUNCTION_56();
        (*(void (**)(uint64_t))(v26 + 16))(v3);
        v27 = sub_242B4EC58();
        _H9 = LOWORD(v27);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
        if (!OUTLINED_FUNCTION_0_43())
          goto LABEL_43;
        v28 = OUTLINED_FUNCTION_7_23();
        v29 = *(_QWORD *)(v7 - 8);
        v30 = MEMORY[0x24BDAC7A8](v28);
        (*(void (**)(char *, __n128))(v29 + 16))((char *)v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v30);
        if (sub_242C48B30() <= 64)
        {
          v36 = sub_242C48B3C();
          v37 = OUTLINED_FUNCTION_23_19();
          OUTLINED_FUNCTION_19_19();
          if ((v36 & 1) != 0)
            _S0 = (float)v37;
          else
            _S0 = (float)(unint64_t)v37;
          __asm { FCVT            H9, S0 }
        }
        else
        {
          sub_242AF3280();
          sub_242AF32BC();
          sub_242C48068();
          OUTLINED_FUNCTION_19_19();
          _H9 = v41[0];
        }
      }
      OUTLINED_FUNCTION_24_18();
      v11 = 0;
      goto LABEL_69;
    case 10:
      v14 = a3;
      v15 = 3;
      goto LABEL_74;
    case 12:
      if (OUTLINED_FUNCTION_5_33((uint64_t)&protocol witness table for Float) == MEMORY[0x24BEE1328])
      {
        OUTLINED_FUNCTION_6_33();
        v24 = &qword_257221F30;
        goto LABEL_60;
      }
      OUTLINED_FUNCTION_6_33();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
      if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
      {
        v13 = v43[0];
        goto LABEL_59;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
      if ((OUTLINED_FUNCTION_0_43() & 1) != 0)
      {
        OUTLINED_FUNCTION_8_19();
        v13 = (sub_242C48134() & 1) == 0;
        OUTLINED_FUNCTION_24_18();
        goto LABEL_59;
      }
      if (OUTLINED_FUNCTION_0_43())
        goto LABEL_37;
      if (OUTLINED_FUNCTION_0_43())
        goto LABEL_46;
      if (OUTLINED_FUNCTION_0_43())
        goto LABEL_54;
      if (OUTLINED_FUNCTION_0_43() || OUTLINED_FUNCTION_0_43())
        goto LABEL_77;
      if (OUTLINED_FUNCTION_0_43())
      {
LABEL_37:
        v32 = LOBYTE(v43[0]);
      }
      else if (OUTLINED_FUNCTION_0_43())
      {
LABEL_46:
        v32 = LOWORD(v43[0]);
      }
      else
      {
        if (!OUTLINED_FUNCTION_0_43())
        {
          if (!OUTLINED_FUNCTION_0_43())
          {
            v13 = 2;
            goto LABEL_59;
          }
LABEL_77:
          _ZF = *(_QWORD *)&v43[0] == 0;
LABEL_56:
          v13 = !_ZF;
LABEL_59:
          OUTLINED_FUNCTION_21_17();
          LOBYTE(v44) = v13;
          v24 = (uint64_t *)&unk_257225468;
LABEL_60:
          __swift_instantiateConcreteTypeFromMangledName(v24);
          if ((OUTLINED_FUNCTION_11_22() & 1) == 0)
            LOBYTE(v43[0]) = 2;
          result = (_QWORD *)OUTLINED_FUNCTION_22_16();
          if (LOBYTE(v43[0]) != 2)
          {
            v15 = 0;
            v14 = v43[0] & 1;
            goto LABEL_74;
          }
LABEL_84:
          v46 = 0;
          v47 = 0xE000000000000000;
          sub_242C48C38();
          OUTLINED_FUNCTION_8_8();
          sub_242C48704();
          sub_242C48314();
          sub_242C494F0();
          sub_242C48314();
          swift_bridgeObjectRelease();
          sub_242C48314();
          v48 = 9;
          sub_242A59170();
        }
LABEL_54:
        v32 = v43[0];
      }
      _ZF = v32 == 0;
      goto LABEL_56;
    default:
      goto LABEL_84;
  }
}

void sub_242AF2D84(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_242AF2DC4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (v4)
  {
    sub_242A625DC(v0, v1, v4);
    v10 = OUTLINED_FUNCTION_13_24();
    v12 = OUTLINED_FUNCTION_3_31(v10, v11, v3);
    sub_242A62618(v12, v13, v4);
    v9 = 0;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_13_24();
    v7 = OUTLINED_FUNCTION_3_31(v5, v6, 0);
    sub_242A62618(v7, v8, 0);
    v9 = ((v2 & 1) == 0) ^ v0;
  }
  return v9 & 1;
}

void sub_242AF304C()
{
  __asm { BR              X11 }
}

uint64_t sub_242AF3084()
{
  return sub_242C4934C();
}

uint64_t sub_242AF315C()
{
  sub_242C49340();
  sub_242AF304C();
  return sub_242C49394();
}

uint64_t sub_242AF31B4()
{
  sub_242C49340();
  sub_242AF304C();
  return sub_242C49394();
}

unint64_t sub_242AF3208()
{
  unint64_t result;

  result = qword_257225440;
  if (!qword_257225440)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5303C, &type metadata for AttributeValue);
    atomic_store(result, (unint64_t *)&qword_257225440);
  }
  return result;
}

unint64_t sub_242AF3244()
{
  unint64_t result;

  result = qword_257225460;
  if (!qword_257225460)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE3FD8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_257225460);
  }
  return result;
}

unint64_t sub_242AF3280()
{
  unint64_t result;

  result = qword_257225478;
  if (!qword_257225478)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE4680], MEMORY[0x24BEE4678]);
    atomic_store(result, (unint64_t *)&qword_257225478);
  }
  return result;
}

unint64_t sub_242AF32BC()
{
  unint64_t result;

  result = qword_257225480;
  if (!qword_257225480)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE44C0], MEMORY[0x24BEE4478]);
    atomic_store(result, (unint64_t *)&qword_257225480);
  }
  return result;
}

uint64_t destroy for AttributeValue(uint64_t a1)
{
  return sub_242A62618(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14NeuralNetworks14AttributeValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242A625DC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AttributeValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242A625DC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_242A62618(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AttributeValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_242A62618(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributeValue(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xF8 && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 247;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 8)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributeValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributeValue()
{
  return &type metadata for AttributeValue;
}

uint64_t OUTLINED_FUNCTION_0_43()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_33()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_2_39()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_31(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_242A62618(a1, a2, a3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_4_31()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 264) = 0;
  *(_QWORD *)(v0 - 256) = 0xE000000000000000;
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_5_33@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_QWORD *)(v2 - 160) = v1;
  *(_QWORD *)(v2 - 152) = a1;
  *(_DWORD *)(v2 - 184) = v3;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 184), v1);
  return swift_getDynamicType();
}

uint64_t OUTLINED_FUNCTION_6_33()
{
  uint64_t v0;

  return sub_242A587A8(v0 - 184, v0 - 224);
}

_QWORD *OUTLINED_FUNCTION_7_23()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 - 264), v0 - 304);
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 304), *(_QWORD *)(v0 - 280));
}

_QWORD *OUTLINED_FUNCTION_8_19()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 - 264), v0 - 304);
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 304), *(_QWORD *)(v0 - 280));
}

uint64_t OUTLINED_FUNCTION_9_28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 256);
  *(_QWORD *)(v0 - 264) = *(_QWORD *)(v0 - 264);
  *(_QWORD *)(v0 - 256) = v1;
  return 1634692166;
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_11_22()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_12_20()
{
  return sub_242C4934C();
}

uint64_t OUTLINED_FUNCTION_13_24()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_15_19()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_16_17()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_18_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_20_23()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242C00B0C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_17()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_22_16()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_23_19()
{
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_24_18()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 304);
}

uint64_t sub_242AF3648()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 48);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

uint64_t sub_242AF36A0(int a1, uint64_t a2, uint64_t a3, uint64_t *a4, char *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  char v9;

  v8 = *a4;
  v9 = *a5;
  if (!a3)
    a1 = sub_242BD0204(0x7475706E69, 0xE500000000000000);
  *(_DWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = v8;
  *(_BYTE *)(v6 + 48) = v9;
  sub_242A56808(a6, v6 + 56);
  return v6;
}

uint64_t sub_242AF3704()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242AF3728()
{
  sub_242AF3704();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InputOperation()
{
  return objc_opt_self();
}

uint64_t OUTLINED_FUNCTION_24_19()
{
  return 0x7475706E69;
}

uint64_t sub_242AF3780()
{
  return sub_242AF3794();
}

uint64_t sub_242AF3794()
{
  if (qword_257220580 != -1)
    swift_once();
  return dword_2572599E0;
}

uint64_t sub_242AF37D4()
{
  return sub_242C4817C();
}

uint64_t sub_242AF37E8()
{
  return sub_242AF37D4();
}

uint64_t sub_242AF37FC(uint64_t a1)
{
  uint64_t result;

  result = sub_242AF3864(&qword_257221F78, (uint64_t)&unk_242C5314C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AF3830(uint64_t a1)
{
  uint64_t result;

  result = sub_242AF3864(&qword_257225540, (uint64_t)&unk_242C53108);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AF3864(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for InputOperation();
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242AF38A0(char a1, uint64_t a2)
{
  uint64_t result;

  if (*(_QWORD *)(a2 + 16))
  {
    if ((a1 & 1) != 0)
    {
      sub_242C480E0();
      Tensor.init(stacking:alongAxis:scalarType:)();
      Tensor.sum()();
    }
    else
    {
      sub_242C480E0();
      Tensor.init(stacking:alongAxis:scalarType:)();
      Tensor.mean()();
    }
    return swift_release();
  }
  else
  {
    result = sub_242C48F5C();
    __break(1u);
  }
  return result;
}

void sub_242AF3998(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v4 = (uint64_t *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 8);
  if (!*(_QWORD *)(v3 + 16)
    || (sub_242C00B0C(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 32) + 16) + 152), *(_QWORD *)(*(_QWORD *)(v2 + 16) + 152)) & 1) != 0&& (Tensor.scalarType.getter(), v6 = v5, Tensor.scalarType.getter(), v6 == v7))
  {
    swift_retain();
    sub_242A5D8BC();
    v8 = *(_QWORD *)(*v4 + 16);
    sub_242A5DC0C();
    v9 = *v4;
    *(_QWORD *)(v9 + 16) = v8 + 1;
    *(_QWORD *)(v9 + 8 * v8 + 32) = v2;
    *v4 = v9;
  }
  else
  {
    sub_242C48F5C();
    __break(1u);
  }
}

int *sub_242AF3A94@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v19;
  int *result;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 32))(a9, a1, a10);
  result = (int *)type metadata accessor for TrainingLoop(0, a10, a11, v19);
  *(_BYTE *)(a9 + result[9]) = a2;
  v21 = (_QWORD *)(a9 + result[10]);
  *v21 = a3;
  v21[1] = a4;
  v22 = (_QWORD *)(a9 + result[11]);
  *v22 = a5;
  v22[1] = a6;
  v23 = (_QWORD *)(a9 + result[12]);
  *v23 = a7;
  v23[1] = a8;
  return result;
}

uint64_t sub_242AF3B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  void (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  BOOL v25;
  void (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)(uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v26 - v7;
  v9 = sub_242C48A64();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v31 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v4;
  v33 = v3;
  v15 = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - v16;
  v34 = (int *)a1;
  v35 = v1;
  v18 = *(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 40));
  v29 = (uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 40));
  if ((v18(1) & 1) != 0)
  {
    v27 = v34[9];
    v28 = v15;
    v19 = *(void (**)(_QWORD))(v13 + 16);
    v20 = 1;
    v21 = 1;
    v26 = v19;
    while (2)
    {
      if (*(_BYTE *)(v35 + v27))
        v20 = 1;
      v19(v31);
      sub_242C483D4();
      v22 = v28;
      swift_getAssociatedConformanceWitness();
      while (1)
      {
        sub_242C48A94();
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, AssociatedTypeWitness);
        v23 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v35 + v34[12]))(v21, v20, v8);
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
        if ((v23 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v22);
          return (*(uint64_t (**)(uint64_t))(*((_QWORD *)v34 - 1) + 8))(v35);
        }
        v25 = __OFADD__(v20++, 1);
        if (v25)
        {
          __break(1u);
LABEL_17:
          __break(1u);
          return result;
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v22);
      result = (*(uint64_t (**)(uint64_t))(v35 + v34[11]))(v21);
      v19 = v26;
      if ((result & 1) == 0)
        return (*(uint64_t (**)(uint64_t))(*((_QWORD *)v34 - 1) + 8))(v35);
      v25 = __OFADD__(v21++, 1);
      if (v25)
        goto LABEL_17;
      if (((*v29)(v21) & 1) != 0)
        continue;
      break;
    }
  }
  return (*(uint64_t (**)(uint64_t))(*((_QWORD *)v34 - 1) + 8))(v35);
}

uint64_t EvaluationResults.loss.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t TrainingCount.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (*(_BYTE *)(v0 + 8) == 1)
    v1 = 0x207368636F7045;
  else
    v1 = 0x207370657453;
  v3 = v1;
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  return v3;
}

BOOL static TrainingAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TrainingAction.hash(into:)()
{
  return sub_242C4934C();
}

uint64_t TrainingAction.hashValue.getter()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t train<A, B, C, D>(_:on:using:count:evaluatingOn:criterion:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v58 = a8;
  v59 = a6;
  v60 = a7;
  v56 = a3;
  v57 = a2;
  v62 = a1;
  v63 = sub_242C48A64();
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v54 = (char *)&v48 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v19 = sub_242C48A64();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v48 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v48 - v27;
  v55 = *a4;
  v53 = *((unsigned __int8 *)a4 + 8);
  if ((v53 & 1) == 0)
  {
    OUTLINED_FUNCTION_3_32((uint64_t)&v48 - v27);
    OUTLINED_FUNCTION_5_34((uint64_t)v28);
    if (v29)
    {
      OUTLINED_FUNCTION_7_24((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    }
    else
    {
      v30 = v28[*(int *)(TupleTypeMetadata2 + 48) + 8];
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(a11 - 8) + 8))(v28, a11);
      if (v30 == 1)
      {
        result = sub_242C48F5C();
        __break(1u);
        return result;
      }
    }
  }
  OUTLINED_FUNCTION_3_32((uint64_t)v26);
  OUTLINED_FUNCTION_5_34((uint64_t)v26);
  if (v29)
  {
    OUTLINED_FUNCTION_7_24((uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v32 = 1;
    v31 = (uint64_t)v54;
  }
  else
  {
    v31 = (uint64_t)v54;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(v54, v26, a11);
    v32 = 0;
  }
  v51 = a15;
  v52 = a16;
  v49 = a13;
  v50 = a14;
  v54 = a9;
  __swift_storeEnumTagSinglePayload(v31, v32, 1, a11);
  OUTLINED_FUNCTION_3_32((uint64_t)v23);
  OUTLINED_FUNCTION_5_34((uint64_t)v23);
  if (v29)
  {
    OUTLINED_FUNCTION_7_24((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v34 = 0;
    v35 = -1;
  }
  else
  {
    v33 = &v23[*(int *)(TupleTypeMetadata2 + 48)];
    v34 = *(_QWORD *)v33;
    v35 = v33[8];
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(a11 - 8) + 8))(v23, a11);
  }
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = 0;
  *(_QWORD *)(v36 + 24) = MEMORY[0x24BEE4AF8];
  v37 = swift_allocObject();
  *(_BYTE *)(v37 + 16) = 0;
  v38 = MEMORY[0x24BDAC7A8](v37);
  *(&v48 - 22) = a10;
  *(&v48 - 21) = a11;
  v39 = v49;
  *(&v48 - 20) = a12;
  *(&v48 - 19) = v39;
  v40 = v51;
  *(&v48 - 18) = v50;
  *(&v48 - 17) = v40;
  v41 = v56;
  *(&v48 - 16) = v52;
  *(&v48 - 15) = v41;
  *(&v48 - 14) = v57;
  v42 = v53;
  *((_BYTE *)&v48 - 104) = v53;
  v43 = v55;
  *(&v48 - 12) = v38;
  *(&v48 - 11) = v43;
  *((_BYTE *)&v48 - 80) = v42;
  v44 = v58;
  *(&v48 - 9) = v36;
  *(&v48 - 8) = v44;
  *(&v48 - 7) = (uint64_t)v54;
  *(&v48 - 6) = v31;
  *(&v48 - 5) = v34;
  *((_BYTE *)&v48 - 32) = v35;
  v45 = v60;
  *(&v48 - 3) = v59;
  v47 = v45;
  sub_242BA1484();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v31, v63);
  swift_release();
  return swift_release();
}

uint64_t sub_242AF4348()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242AF436C()
{
  return swift_deallocObject();
}

BOOL sub_242AF437C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  _BOOL8 result;
  int EnumTagSinglePayload;
  uint64_t v22;

  v13 = sub_242C48A64();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)a1;
  v18 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  if (*(_BYTE *)(a2 + 16) == 2)
    return 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, a7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  result = 0;
  if (EnumTagSinglePayload != 1 && a5 != 255)
  {
    if (v18)
    {
      if ((a5 & 1) != 0)
      {
        if (a4 != -1)
        {
          if (!a4)
            return v17 == 0;
          return v17 % a4 == 0;
        }
        return 1;
      }
    }
    else if ((a5 & 1) == 0)
    {
      if (a4 != -1)
      {
        if (!a4)
          return v17 == 0;
        return v17 % a4 == 0;
      }
      return 1;
    }
    return 0;
  }
  return result;
}

__n128 sub_242AF44D0()
{
  __n128 result;

  sub_242BA1484();
  return result;
}

double sub_242AF4584()
{
  double result;

  *(_QWORD *)&result = sub_242AF44D0().n128_u64[0];
  return result;
}

uint64_t sub_242AF45F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void (*a8)(uint64_t *__return_ptr, __int128 *), uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t *__return_ptr, __int128 *);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *__return_ptr, __int128 *);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t *__return_ptr, __int128 *);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t *__return_ptr, __int128 *);
  uint64_t v71;
  uint64_t v72;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t *__return_ptr, __int128 *);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v99 = a7;
  v100 = a8;
  v87 = a6;
  v90 = a5;
  v88 = a4;
  v84 = a3;
  v83 = a1;
  v95 = a13;
  v96 = a12;
  v92 = a22;
  v93 = a14;
  v106 = a15;
  v91 = a10;
  v97 = a11;
  v98 = a9;
  v102 = a19;
  v103 = a21;
  v89 = a20;
  v104 = a18;
  v105 = a16;
  v101 = sub_242C48A64();
  v24 = *(_QWORD *)(v101 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  v26 = MEMORY[0x24BDAC7A8](v101);
  v94 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v25;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v74 - v28;
  v75 = (char *)&v74 - v28;
  v30 = *(_QWORD *)(a17 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = v32;
  v86 = type metadata accessor for TrainingLoop(0, a17, a20, v33);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v82 = (uint64_t)&v74 - v34;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v76 = a17;
  v35(v32, a2, a17);
  v36 = swift_allocObject();
  v37 = v90;
  *(_QWORD *)(v36 + 16) = a4;
  *(_QWORD *)(v36 + 24) = v37;
  v87 &= 1u;
  *(_BYTE *)(v36 + 32) = v87;
  v38 = v98;
  v39 = v100;
  *(_QWORD *)(v36 + 40) = v99;
  *(_QWORD *)(v36 + 48) = v39;
  *(_QWORD *)(v36 + 56) = v38;
  v78 = v24;
  v80 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v80(v29, v91, v101);
  v40 = *(unsigned __int8 *)(v24 + 80);
  v41 = (v40 + 120) & ~v40;
  v77 = v40 | 7;
  v74 = (v41 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v41 + v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v105;
  *(_QWORD *)(v43 + 24) = a17;
  v44 = v102;
  *(_QWORD *)(v43 + 32) = v104;
  *(_QWORD *)(v43 + 40) = v44;
  v45 = v103;
  *(_QWORD *)(v43 + 48) = v89;
  *(_QWORD *)(v43 + 56) = v45;
  v46 = v92;
  *(_QWORD *)(v43 + 64) = v92;
  *(_QWORD *)(v43 + 72) = v37;
  *(_BYTE *)(v43 + 80) = v87;
  v47 = v100;
  *(_QWORD *)(v43 + 88) = v88;
  *(_QWORD *)(v43 + 96) = v47;
  *(_QWORD *)(v43 + 104) = v38;
  v48 = v99;
  *(_QWORD *)(v43 + 112) = v99;
  v78 = *(_QWORD *)(v78 + 32);
  v49 = v101;
  ((void (*)(uint64_t, char *, uint64_t))v78)(v43 + v41, v75, v101);
  v50 = v43 + v74;
  *(_QWORD *)v50 = v97;
  *(_BYTE *)(v50 + 8) = v96;
  v51 = v94;
  *(_QWORD *)(v43 + v42) = v95;
  v52 = (_QWORD *)(v43 + ((v42 + 15) & 0xFFFFFFFFFFFFFFF8));
  v53 = v106;
  *v52 = v93;
  v52[1] = v53;
  v80(v51, v91, v49);
  v54 = (v40 + 152) & ~v40;
  v55 = (v79 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  v57 = v76;
  *(_QWORD *)(v56 + 16) = v105;
  *(_QWORD *)(v56 + 24) = v57;
  v58 = v102;
  *(_QWORD *)(v56 + 32) = v104;
  *(_QWORD *)(v56 + 40) = v58;
  v59 = v89;
  v60 = v103;
  *(_QWORD *)(v56 + 48) = v89;
  *(_QWORD *)(v56 + 56) = v60;
  *(_QWORD *)(v56 + 64) = v46;
  v61 = v90;
  *(_QWORD *)(v56 + 72) = v88;
  *(_QWORD *)(v56 + 80) = v61;
  *(_BYTE *)(v56 + 88) = v87;
  *(_QWORD *)(v56 + 96) = v48;
  v63 = v100;
  v62 = v101;
  v64 = v98;
  *(_QWORD *)(v56 + 104) = v100;
  *(_QWORD *)(v56 + 112) = v64;
  v65 = v94;
  v66 = v83;
  *(_QWORD *)(v56 + 120) = v95;
  *(_QWORD *)(v56 + 128) = v66;
  *(_QWORD *)(v56 + 136) = v93;
  *(_QWORD *)(v56 + 144) = v106;
  ((void (*)(uint64_t, char *, uint64_t))v78)(v56 + v54, v65, v62);
  v67 = v56 + v55;
  *(_QWORD *)v67 = v97;
  *(_BYTE *)(v67 + 8) = v96;
  v68 = v82;
  sub_242AF3A94((uint64_t)v81, v84, (uint64_t)sub_242AF6548, v36, (uint64_t)sub_242AF65F0, v43, (uint64_t)sub_242AF6754, v56, v82, v57, v59);
  swift_retain();
  v69 = v99;
  swift_retain();
  v70 = v63;
  v71 = (uint64_t)v63;
  v72 = v98;
  sub_242A6548C(v71);
  swift_retain();
  sub_242A6548C((uint64_t)v70);
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_242A6548C((uint64_t)v70);
  swift_retain();
  sub_242AF5704(v70, v72, v68, v69, v105, v57, v104, v102, v59);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 8))(v68, v86);
}

BOOL sub_242AF4B0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(unsigned __int8 *__return_ptr, _QWORD *))
{
  int v11;
  _BYTE *v12;
  int v13;
  _BOOL8 result;
  int v16;
  unsigned __int8 v17;
  _QWORD v18[3];

  v11 = a4 & 1;
  v12 = (_BYTE *)(a2 + 16);
  swift_beginAccess();
  v13 = *(unsigned __int8 *)(a2 + 16);
  result = v13 != 2;
  if (v13 != 2 && v11 != 0)
  {
    if (a3 >= a1)
    {
      swift_beginAccess();
      *(_QWORD *)(a5 + 24) = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRelease();
      if (a6)
      {
        v18[0] = a1;
        v18[1] = 0x1000000000000000;
        a6(&v17, v18);
        v16 = v17;
      }
      else
      {
        v16 = 0;
      }
      swift_beginAccess();
      *v12 = v16;
      return v16 != 2;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL sub_242AF4C08(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, void (*a12)(__int128 *__return_ptr, char *, char *), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _BYTE *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *__return_ptr, uint64_t *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t AssociatedConformanceWitness;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(__int128 *__return_ptr, char *, char *);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *__return_ptr, uint64_t *);
  char v69;
  uint64_t v70;
  uint64_t v71;

  v66 = a6;
  v67 = a8;
  v68 = (void (*)(char *__return_ptr, uint64_t *))a5;
  v24 = a14;
  v25 = *(_QWORD *)(a14 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v65 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_242C48A64();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v53 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v53 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
    return 1;
  v56 = v34;
  v57 = v32;
  v61 = a19;
  v62 = a18;
  v63 = a17;
  v64 = a20;
  v60 = a16;
  LODWORD(v58) = a10;
  v59 = a4;
  v36 = (_BYTE *)(a4 + 16);
  v37 = a9;
  swift_beginAccess();
  if (*v36 != 1 && v68)
  {
    swift_beginAccess();
    v55 = v25;
    v38 = *(_BYTE *)(a7 + 16);
    v39 = *(_QWORD *)(a7 + 24);
    v54 = a14;
    v40 = v68;
    v53 = a9;
    sub_242A6548C((uint64_t)v68);
    sub_242C480E0();
    sub_242AF38A0(v38, v39);
    swift_bridgeObjectRelease();
    v41 = v70;
    v70 = a1;
    v71 = v41 | 0x2000000000000000;
    v40(&v69, &v70);
    v42 = (uint64_t)v40;
    v24 = v54;
    v37 = v53;
    sub_242A6549C(v42);
    v25 = v55;
    swift_release();
    LOBYTE(v39) = v69;
    swift_beginAccess();
    *v36 = v39;
  }
  v70 = a1;
  LOBYTE(v71) = 1;
  v43 = v59;
  v44 = v67;
  if (sub_242AF437C((uint64_t)&v70, v59, v67, v37, v58, v24, a15))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v31, v44, v27);
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, a15) == 1)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
    }
    else
    {
      v45 = v43;
      v67 = a13;
      v58 = a12;
      v46 = v57;
      v47 = v56;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v31, a15);
      v48 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v65, a11, v24);
      v49 = (_QWORD *)swift_allocObject();
      v50 = (uint64_t)v68;
      v51 = v66;
      v49[2] = v68;
      v49[3] = v51;
      v49[4] = v45;
      sub_242A6548C(v50);
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      swift_retain();
      sub_242AF5B6C((_QWORD *(*)(uint64_t *__return_ptr, __int128 *))sub_242AF7188, (uint64_t)v49, v47, v48, v58, v67, v24, a15, v63, AssociatedConformanceWitness, v62, v64);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v48, v24);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, a15);
    }
  }
  swift_beginAccess();
  return *v36 != 2;
}

_QWORD *evaluate<A, B, C>(_:on:criterion:eventHandler:)(uint64_t a1, char *a2, void (*a3)(__int128 *__return_ptr, char *, char *), uint64_t a4, _QWORD *(*a5)(uint64_t *__return_ptr, __int128 *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_242AF5B6C(a5, a6, a2, a1, a3, a4, a7, a8, a9, a10, a11, a12);
}

BOOL sub_242AF5070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, void (*a8)(uint64_t *__return_ptr, _QWORD *), uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(__int128 *__return_ptr, char *, char *), uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  _BOOL8 result;
  int v37;
  BOOL v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t AssociatedConformanceWitness;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(__int128 *__return_ptr, char *, char *);
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73[3];
  _QWORD v74[3];

  v68 = a3;
  v69 = a8;
  v70 = a17;
  v66 = *(_QWORD *)(a17 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v65 = (char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_242C48A64();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v51 - v32;
  v67 = *(_QWORD *)(a18 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v64 = (char *)&v51 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (char *)(a4 + 16);
  swift_beginAccess();
  result = 0;
  v37 = *(unsigned __int8 *)(a4 + 16);
  v39 = (a6 & 1) == 0 && a5 < a2;
  if (v37 != 2 && !v39)
  {
    if (v37 == 1)
    {
      return 1;
    }
    else
    {
      v63 = a19;
      v56 = a16;
      v55 = a15;
      v57 = a14;
      v54 = a12;
      v58 = a7 + 16;
      v53 = a10;
      if ((a6 & 1) == 0)
      {
        swift_beginAccess();
        *(_QWORD *)(a7 + 24) = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRelease();
      }
      v62 = a23;
      v60 = a22;
      v59 = a21;
      v61 = a20;
      v52 = a9;
      if (!v69 || (v74[0] = a2, v74[1] = 0x3000000000000000, v69(v73, v74), LOBYTE(v73[0]) != 1))
      {
        v40 = v68;
        v68 = a13;
        sub_242AF55D0(v53, v40, a11, (uint64_t)v54, a13, v70, v63, v61, (uint64_t)v74, v60, v62);
      }
      swift_beginAccess();
      v41 = *v35;
      swift_beginAccess();
      *(_BYTE *)(a4 + 16) = v41;
      v71 = a2;
      v72 = 0;
      v42 = v57;
      if (sub_242AF437C((uint64_t)&v71, a4, v57, v55, v56, v70, a18))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v42, v29);
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, a18) == 1)
        {
          (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
        }
        else
        {
          v43 = v64;
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v33, a18);
          v45 = (uint64_t)v65;
          v44 = v66;
          v46 = v70;
          (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v53, v70);
          v47 = (_QWORD *)swift_allocObject();
          v48 = (uint64_t)v69;
          v49 = v52;
          v47[2] = v69;
          v47[3] = v49;
          v47[4] = a4;
          sub_242A6548C(v48);
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          swift_retain();
          sub_242AF5B6C((_QWORD *(*)(uint64_t *__return_ptr, __int128 *))sub_242AF683C, (uint64_t)v47, v43, v45, v54, a13, v46, a18, v61, AssociatedConformanceWitness, v59, v62);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
          (*(void (**)(char *, uint64_t))(v67 + 8))(v43, a18);
        }
      }
      swift_beginAccess();
      return *v35 != 2;
    }
  }
  return result;
}

void sub_242AF55D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  MEMORY[0x2494ED6EC]();
  sub_242AF5870(a1, a2, a4, a5, a3, a6, a7, a8, a9, a10, a11);
}

void sub_242AF5648()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t sub_242AF566C@<X0>(__int128 *a1@<X0>, void (*a2)(_QWORD *__return_ptr, __int128 *)@<X1>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  char *v5;
  char v6;
  char v7;
  uint64_t result;
  _QWORD v9[3];
  __int128 v10;

  v5 = (char *)(a3 + 16);
  if (!a2)
  {
    v6 = 0;
    goto LABEL_5;
  }
  v10 = *a1;
  a2(v9, &v10);
  v6 = v9[0];
  if (LOBYTE(v9[0]) != 2)
  {
LABEL_5:
    swift_beginAccess();
    v7 = *v5;
    goto LABEL_6;
  }
  v7 = 2;
LABEL_6:
  result = swift_beginAccess();
  *v5 = v7;
  *a4 = v6;
  return result;
}

uint64_t sub_242AF5704(void (*a1)(uint64_t *__return_ptr, __int128 *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;

  v12 = type metadata accessor for TrainingLoop(0, a6, a9, a4);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v19 - v14;
  if (a1)
  {
    v20 = xmmword_242C53170;
    swift_retain();
    a1(v19, &v20);
    if (!LOBYTE(v19[0]))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
      sub_242AF3B44(v12);
    }
    swift_beginAccess();
    v16 = *(_BYTE *)(a4 + 16);
    v17 = *(_QWORD *)(a4 + 24);
    sub_242C480E0();
    sub_242AF38A0(v16, v17);
    swift_bridgeObjectRelease();
    v19[1] = 0;
    a1(&v21, (__int128 *)v19);
    sub_242A6549C((uint64_t)a1);
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
    return sub_242AF3B44(v12);
  }
}

void sub_242AF5870(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v22 = a9;
  v20 = a1;
  v21 = a5;
  v19 = a4;
  v16 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v16 + 16))((char *)&v18 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = a6;
  v24 = a7;
  v25 = a8;
  v26 = a10;
  v27 = a11;
  v28 = a2;
  v29 = a3;
  v30 = v19;
  swift_getAssociatedConformanceWitness();
  valueWithGradient<A>(at:of:)();
}

uint64_t sub_242AF5948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  v8 = *(_QWORD *)(v6 - 72);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 48))(*(_QWORD *)(v6 - 192), a1, v2, v3);
  result = swift_bridgeObjectRelease();
  **(_QWORD **)(v6 - 176) = v8;
  return result;
}

uint64_t sub_242AF59A8@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *);

  v28 = a3;
  v29 = a2;
  v26 = a1;
  v27 = a6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v25 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v22 - v12;
  v14 = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v22 - v18;
  (*(void (**)(uint64_t, uint64_t))(a7 + 24))(a5, a7);
  Layer.callAsFunction(_:)((uint64_t)v13, a4, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);
  (*(void (**)(uint64_t, uint64_t))(a7 + 32))(a5, a7);
  v29(v19, v17);
  v20 = *(void (**)(char *, uint64_t))(v23 + 8);
  v20(v17, v14);
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v14);
}

_QWORD *sub_242AF5B6C(_QWORD *(*a1)(uint64_t *__return_ptr, __int128 *), uint64_t a2, char *a3, uint64_t a4, void (*a5)(__int128 *__return_ptr, char *, char *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t TupleTypeMetadata2;
  char *v53;
  uint64_t (*v54)(_QWORD, _QWORD, _QWORD);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(__int128 *__return_ptr, char *, char *);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(_QWORD *, char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  _QWORD *(*v75)(uint64_t *__return_ptr, __int128 *);
  char v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  v62 = a6;
  v60 = a5;
  v65 = a4;
  v72 = a3;
  v74 = a2;
  v75 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v63 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v64 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v61 = (char *)&v49 - v14;
  v66 = a10;
  v56 = a7;
  v59 = swift_getAssociatedTypeWitness();
  v58 = *(_QWORD *)(v59 - 8);
  v15 = MEMORY[0x24BDAC7A8](v59);
  v57 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v73 = (char *)&v49 - v18;
  v68 = *(_QWORD *)(a9 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v53 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = a9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v51 = sub_242C48A64();
  v20 = *(_QWORD *)(v51 - 8);
  v21 = MEMORY[0x24BDAC7A8](v51);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (uint64_t *)((char *)&v49 - v24);
  v71 = (void (*)(_QWORD *, char *, uint64_t))sub_242C48FBC();
  MEMORY[0x24BDAC7A8](v71);
  v26 = sub_242C48FB0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v49 - v28;
  BYTE1(v78) = 0;
  v79 = MEMORY[0x24BEE4AF8];
  v77 = xmmword_242C53180;
  result = v75(&v78, &v77);
  if (!(_BYTE)v78)
  {
    v50 = v27;
    sub_242C48428();
    sub_242C48F98();
    v72 = v29;
    sub_242C48FA4();
    v31 = v26;
    v32 = v51;
    v71 = *(void (**)(_QWORD *, char *, uint64_t))(v20 + 32);
    v71(v25, v23, v51);
    v33 = TupleTypeMetadata2;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, TupleTypeMetadata2);
    v36 = v67;
    v35 = v68;
    v37 = v53;
    if (EnumTagSinglePayload != 1)
    {
      v55 = a12;
      v38 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v68 + 32);
      v69 = v31;
      v70 = v23;
      v54 = v38;
      do
      {
        v39 = *v25;
        v40 = v25;
        result = (_QWORD *)v38(v37, (char *)v25 + *(int *)(v33 + 48), v36);
        if (__OFADD__(v39, 1))
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)&v77 = v39 + 1;
        *((_QWORD *)&v77 + 1) = 0x6000000000000000;
        v75((uint64_t *)&v76, &v77);
        LOBYTE(v78) = v76;
        if (v76 == 1)
        {
          (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
        }
        else
        {
          v41 = v55;
          v42 = (uint64_t)v61;
          (*(void (**)(uint64_t, uint64_t))(v55 + 24))(v36, v55);
          Layer.prediction(from:)(v42, v56);
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v42, v64);
          v43 = v57;
          (*(void (**)(uint64_t, uint64_t))(v41 + 32))(v36, v41);
          v60(&v77, v73, v43);
          v44 = *(void (**)(char *, uint64_t))(v58 + 8);
          v45 = v59;
          v44(v43, v59);
          v46 = v77;
          sub_242AF3998((uint64_t *)&v77);
          *(_QWORD *)&v77 = v39 + 1;
          *((_QWORD *)&v77 + 1) = v46 | 0x7000000000000000;
          swift_retain();
          v75((uint64_t *)&v76, &v77);
          v36 = v67;
          v35 = v68;
          swift_release_n();
          v47 = v45;
          v38 = v54;
          v44(v73, v47);
          (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
          LOBYTE(v78) = v76;
          if (v76 != 1)
          {
            v25 = v40;
            v31 = v69;
            v48 = v70;
            if (v76 == 2)
              break;
            goto LABEL_11;
          }
        }
        LOBYTE(v78) = 0;
        v25 = v40;
        v31 = v69;
        v48 = v70;
LABEL_11:
        sub_242C48FA4();
        v71(v25, v48, v32);
      }
      while (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v33) != 1);
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v72, v31);
    if (v78 == 2)
    {
      return (_QWORD *)swift_bridgeObjectRelease();
    }
    else
    {
      sub_242AF38A0(SBYTE1(v78), v79);
      swift_bridgeObjectRelease();
      *((_QWORD *)&v77 + 1) = 0x5000000000000000;
      v75((uint64_t *)&v76, &v77);
      return (_QWORD *)swift_release();
    }
  }
  return result;
}

unint64_t sub_242AF6148()
{
  unint64_t result;

  result = qword_257225548[0];
  if (!qword_257225548[0])
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TrainingAction, &type metadata for TrainingAction);
    atomic_store(result, qword_257225548);
  }
  return result;
}

void type metadata accessor for EvaluationResults()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for TrainingCount()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t storeEnumTagSinglePayload for TrainingAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242AF61E8 + 4 * byte_242C53195[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242AF621C + 4 * byte_242C53190[v4]))();
}

uint64_t sub_242AF621C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AF6224(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AF622CLL);
  return result;
}

uint64_t sub_242AF6238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AF6240);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242AF6244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AF624C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TrainingAction()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_242AF62A0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_242AF62A0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  switch(a2 >> 60)
  {
    case 0uLL:
    case 2uLL:
    case 4uLL:
    case 5uLL:
    case 7uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for TrainingEvent(uint64_t a1)
{
  return sub_242AF62DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_242AF62DC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  switch(a2 >> 60)
  {
    case 0uLL:
    case 2uLL:
    case 4uLL:
    case 5uLL:
    case 7uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *assignWithCopy for TrainingEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_242AF62A0(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_242AF62DC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for TrainingEvent(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_242AF62DC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x78 && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 119;
    }
    else
    {
      v2 = ((*(_QWORD *)(a1 + 8) >> 60) & 0x8F | (16 * (*(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
      if (v2 >= 0x77)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for TrainingEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x77)
  {
    *(_QWORD *)result = a2 - 120;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x78)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x78)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_242AF6420(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 60;
  if (v1 <= 7)
    return v1;
  else
    return (*(_DWORD *)a1 + 8);
}

uint64_t sub_242AF643C(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_242AF644C(_QWORD *result, uint64_t a2)
{
  if (a2 < 8)
  {
    result[1] = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 60);
  }
  else
  {
    *result = (a2 - 8);
    result[1] = 0x8000000000000000;
  }
  return result;
}

void type metadata accessor for TrainingEvent()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242AF6480(uint64_t a1)
{
  uint64_t v1;

  return sub_242AF45F4(a1, *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(unsigned __int8 *)(v1 + 104), *(_QWORD *)(v1 + 112), *(void (**)(uint64_t *__return_ptr, __int128 *))(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144), *(_BYTE *)(v1 + 152), *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40),
           *(_QWORD *)(v1 + 48),
           *(_QWORD *)(v1 + 56),
           *(_QWORD *)(v1 + 64));
}

uint64_t type metadata accessor for TrainingLoop(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrainingLoop);
}

uint64_t sub_242AF650C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

BOOL sub_242AF6548(uint64_t a1)
{
  uint64_t v1;

  return sub_242AF4B0C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(unsigned __int8 *__return_ptr, _QWORD *))(v1 + 48));
}

uint64_t sub_242AF655C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_34();
  swift_release();
  if (*(_QWORD *)(v0 + 96))
    swift_release();
  swift_release();
  if (!OUTLINED_FUNCTION_2_40())
    OUTLINED_FUNCTION_1_34();
  swift_release();
  return OUTLINED_FUNCTION_0_44();
}

BOOL sub_242AF65F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v10 = *(_OWORD *)(v1 + 48);
  v11 = *(_OWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(sub_242C48A64() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  return sub_242AF4C08(a1, *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), v1 + v7, *(_QWORD *)(v1 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(__int128 *__return_ptr, char *, char *))(v1+ ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v4, v3, v11, *((uint64_t *)&v11 + 1), v10,
           *((uint64_t *)&v10 + 1),
           v5);
}

uint64_t sub_242AF66D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_34();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  swift_release();
  if (!OUTLINED_FUNCTION_2_40())
    OUTLINED_FUNCTION_1_34();
  return OUTLINED_FUNCTION_0_44();
}

BOOL sub_242AF6754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14;
  __int128 v15;

  v8 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v14 = *(_OWORD *)(v3 + 48);
  v15 = *(_OWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(_QWORD *)(sub_242C48A64() - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_242AF5070(a1, a2, a3, *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_BYTE *)(v3 + 88), *(_QWORD *)(v3 + 96), *(void (**)(uint64_t *__return_ptr, _QWORD *))(v3 + 104), *(_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 120), *(_QWORD *)(v3 + 128), *(void (**)(__int128 *__return_ptr, char *, char *))(v3 + 136), *(_QWORD *)(v3 + 144), v3 + v11, *(_QWORD *)(v3 + v12), *(_BYTE *)(v3 + v12 + 8), v8, v7, v15,
           *((uint64_t *)&v15 + 1),
           v14,
           *((uint64_t *)&v14 + 1),
           v9);
}

uint64_t sub_242AF683C@<X0>(__int128 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_242AF566C(a1, *(void (**)(_QWORD *__return_ptr, __int128 *))(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_242AF6858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242AF59A8(a1, *(void (**)(char *, char *))(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2, *(_QWORD *)(v2 + 48));
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242AF68C0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_242AF6948(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || (((((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 16);
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_QWORD *)(v10 + 16) = v12;
    v13 = (_QWORD *)((v10 + 31) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)((v11 + 31) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_242AF6A44(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242AF6AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = v9;
  v10 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242AF6B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)(v9 + 16) = v11;
  swift_retain();
  swift_release();
  v12 = (_QWORD *)((v9 + 31) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v10 + 31) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_242AF6C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v9 = (_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_242AF6C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  _OWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  v11 = (_OWORD *)((v9 + 31) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_OWORD *)((v10 + 31) & 0xFFFFFFFFFFFFF8);
  *v11 = *v12;
  swift_release();
  *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_242AF6D30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)(((v8 + a1) & 0xFFFFFFFFFFFFF8) + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if ((((((((v8 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_242AF6DB8 + 4 * byte_242C531AA[v11]))();
  }
}

void sub_242AF6E34(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if ((((((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if ((((((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, (((((*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_242AF6F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (v4 + v5) & 0xFFFFFFFFFFFFFFF8;
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        *(_QWORD *)(v8 + 16) = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *(_QWORD *)(v8 + 8) = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for EvaluationMetricLogger(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for EvaluationMetricLogger(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EvaluationMetricLogger(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EvaluationMetricLogger()
{
  return &type metadata for EvaluationMetricLogger;
}

uint64_t storeEnumTagSinglePayload for EvaluationMetricLogger.ReductionKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242AF70C0 + 4 * byte_242C531BE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242AF70F4 + 4 * byte_242C531B9[v4]))();
}

uint64_t sub_242AF70F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AF70FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AF7104);
  return result;
}

uint64_t sub_242AF7110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AF7118);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242AF711C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AF7124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EvaluationMetricLogger.ReductionKind()
{
  return &type metadata for EvaluationMetricLogger.ReductionKind;
}

unint64_t sub_242AF7144()
{
  unint64_t result;

  result = qword_2572255D0;
  if (!qword_2572255D0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53380, &type metadata for EvaluationMetricLogger.ReductionKind);
    atomic_store(result, (unint64_t *)&qword_2572255D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_44()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return __swift_getEnumTagSinglePayload(v1 + v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_3_32(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_34(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_6_34()
{
  return sub_242C48A64();
}

uint64_t OUTLINED_FUNCTION_7_24@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

unint64_t sub_242AF7204(uint64_t *a1, char *a2)
{
  char v2;
  uint64_t v4;
  char v5;

  v2 = *a2;
  v4 = *a1;
  v5 = v2;
  return (unint64_t)sub_242AF7DB4((unsigned __int8 *)&v4) & 1;
}

uint64_t sub_242AF7238(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t result;
  unsigned __int8 v7;
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  v8 = *a1;
  v7 = v3;
  if ((v3 - 1) > 0xA)
    v4 = 1;
  else
    v4 = qword_242C53410[(char)(v3 - 1)];
  v5 = sub_242AF7344((uint64_t)&v8, &v7, v4);
  result = swift_allocObject();
  *(_BYTE *)(result + 32) = v3;
  *(_QWORD *)(result + 16) = v5;
  *(_QWORD *)(result + 24) = v2;
  *(_QWORD *)(result + 40) = sub_242AF7ED4;
  *(_QWORD *)(result + 48) = 0;
  return result;
}

void sub_242AF72C8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_33();
  sub_242AF7B58(0);
  IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(v0 + 16));
  sub_242A9DFE8();
  OUTLINED_FUNCTION_1_35();
  sub_242AF7C38(0);
  OUTLINED_FUNCTION_0_45();
}

uint64_t sub_242AF7328(uint64_t *a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  v6 = *a1;
  *(_BYTE *)(v5 + 32) = *a2;
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return v5;
}

uint64_t sub_242AF7344(uint64_t a1, unsigned __int8 *a2, Swift::Int a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t inited;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  const __CFDictionary *v25;
  IOSurfaceRef v26;
  uint64_t result;
  uint64_t v28;

  v4 = *a2;
  if ((v4 - 1) > 0xA)
    v5 = 1;
  else
    v5 = qword_242C53410[(char)(v4 - 1)];
  if (v5 > a3)
    goto LABEL_20;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(*(_QWORD *)a1 + 32);
    v8 = 1;
    while (1)
    {
      v9 = *v7++;
      v10 = v8 * v9;
      if ((unsigned __int128)(v8 * (__int128)v9) >> 64 != (v8 * v9) >> 63)
        break;
      v8 = v10;
      if (!--v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_20;
  }
  v10 = 1;
LABEL_11:
  if ((unsigned __int128)(v10 * (__int128)v5) >> 64 != (v10 * v5) >> 63)
    goto LABEL_17;
  v11 = (void *)*MEMORY[0x24BDD8E38];
  v12 = MEMORY[0x2494ED14C](*MEMORY[0x24BDD8E38]);
  v13 = (void *)*MEMORY[0x24BDD8E18];
  v14 = MEMORY[0x2494ED14C](*MEMORY[0x24BDD8E18], v12);
  v15 = v14;
  if (v5 < a3)
    v15 = roundUp(_:toMultipleOf:)(v14, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257225690);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C533B0;
  v17 = (void *)*MEMORY[0x24BDD8FD0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD8FD0];
  *(_QWORD *)(inited + 40) = v10;
  v18 = (void *)*MEMORY[0x24BDD8EB0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x24BDD8EB0];
  *(_QWORD *)(inited + 56) = 1;
  v19 = (void *)*MEMORY[0x24BDD8E30];
  *(_QWORD *)(inited + 64) = *MEMORY[0x24BDD8E30];
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = v11;
  *(_QWORD *)(inited + 88) = v12;
  *(_QWORD *)(inited + 96) = v13;
  *(_QWORD *)(inited + 104) = v15;
  type metadata accessor for CFString(0);
  sub_242AF7E94();
  v20 = v17;
  v21 = v18;
  v22 = v19;
  v23 = v11;
  v24 = v13;
  sub_242C480BC();
  v25 = (const __CFDictionary *)sub_242C48080();
  swift_bridgeObjectRelease();
  v26 = IOSurfaceCreate(v25);

  if (v26)
    return (uint64_t)v26;
  sub_242C480E0();
  sub_242C48C38();
  sub_242C48314();
  v28 = sub_242C480E0();
  MEMORY[0x2494EC0FC](v28, MEMORY[0x24BEE1768]);
  swift_bridgeObjectRelease();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C48E78();
  sub_242C48314();
LABEL_20:
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t sub_242AF769C(unint64_t *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  __IOSurface *v16;
  void *BaseAddress;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;

  v11 = *a1;
  v12 = *a2;
  type metadata accessor for IOSurfaceTensorStorage();
  v35 = v11;
  LOBYTE(v38) = v12;
  v13 = (uint64_t)qword_242C53410;
  v34 = v11;
  v14 = a4;
  if ((v12 - 1) > 0xA)
    v15 = 1;
  else
    v15 = qword_242C53410[(char)(v12 - 1)];
  v16 = (__IOSurface *)sub_242AF7344((uint64_t)&v35, (unsigned __int8 *)&v38, v15);
  IOSurfaceLock(v16, 0, 0);
  BaseAddress = IOSurfaceGetBaseAddress(v16);
  if (!BaseAddress)
    goto LABEL_20;
  a4 = *(_QWORD *)(a5 + 16);
  if (a4)
  {
    v18 = (uint64_t *)(a5 + 32);
    v19 = 1;
    v20 = *(_QWORD *)(a5 + 16);
    while (1)
    {
      v21 = *v18++;
      v22 = v19 * v21;
      if ((unsigned __int128)(v19 * (__int128)v21) >> 64 != (v19 * v21) >> 63)
        break;
      v19 = v22;
      if (!--v20)
        goto LABEL_11;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v22 = 1;
LABEL_11:
  if ((a6 - 1) > 0xAu)
    v13 = 1;
  else
    v13 = qword_242C53410[(char)(a6 - 1)];
  if ((unsigned __int128)(v22 * (__int128)v13) >> 64 != (v22 * v13) >> 63)
    goto LABEL_19;
  v23 = sub_242B27F5C((uint64_t)BaseAddress, v22 * v13, 1, 0, 0);
  if (!v23)
  {
LABEL_21:
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v35 = 0xD000000000000027;
    v36 = 0x8000000242C69C50;
    if (a4)
      goto LABEL_26;
    v30 = 1;
LABEL_23:
    v31 = v30 * v13;
    if ((unsigned __int128)(v30 * (__int128)v13) >> 64 == (v30 * v13) >> 63)
    {
LABEL_31:
      v38 = v31;
      sub_242C491CC();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v37 = 9;
      sub_242A59170();
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    v31 = a5 + 32;
    v32 = 1;
    while (1)
    {
      v33 = *(_QWORD *)v31;
      v31 += 8;
      v30 = v32 * v33;
      if ((unsigned __int128)(v32 * (__int128)v33) >> 64 != (v32 * v33) >> 63)
        break;
      v32 = v30;
      if (!--a4)
        goto LABEL_23;
    }
    __break(1u);
    goto LABEL_31;
  }
  v24 = v23;
  if (!objc_msgSend(*(id *)(v14 + 24), sel_commandBuffer))
    goto LABEL_25;
  swift_getObjectType();
  v25 = objc_msgSend(v24, sel_length);
  v26 = sub_242B648D4();
  v27 = sub_242B648D4();
  sub_242BF60A8(a7, v26, (uint64_t)v24, v27, (uint64_t)v25);
  sub_242BF607C();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  IOSurfaceUnlock(v16, 0, 0);
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 32) = v12;
  *(_QWORD *)(v28 + 16) = v16;
  *(_QWORD *)(v28 + 24) = v34;
  *(_QWORD *)(v28 + 40) = sub_242AF79EC;
  *(_QWORD *)(v28 + 48) = 0;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v28;
}

uint64_t sub_242AF79EC(__IOSurface *a1)
{
  return IOSurfaceSetPurgeable(a1, 2u, 0);
}

uint64_t sub_242AF79F8()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 40);
  if (v1)
    v1(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease();
  sub_242A6549C(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t sub_242AF7A44()
{
  sub_242AF79F8();
  return swift_deallocClassInstance();
}

uint64_t sub_242AF7A64(uint64_t a1)
{
  uint64_t v2;

  sub_242AF7B58(1);
  IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(a1 + 16));
  sub_242A9DFE8();
  sub_242AB8E8C();
  v2 = sub_242C47A80();
  sub_242AF7C38(1);
  return v2;
}

void sub_242AF7B00()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_33();
  sub_242AF7B58(1);
  IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(v0 + 16));
  sub_242A9DFE8();
  OUTLINED_FUNCTION_1_35();
  sub_242AF7C38(1);
  OUTLINED_FUNCTION_0_45();
}

uint64_t sub_242AF7B58(char a1)
{
  uint64_t v1;
  __IOSurface *v3;
  uint64_t result;

  v3 = *(__IOSurface **)(v1 + 16);
  IOSurfaceIncrementUseCount(v3);
  result = IOSurfaceLock(v3, a1 & 1, 0);
  if ((_DWORD)result)
  {
    sub_242C4892C();
    if (qword_257220548 != -1)
      swift_once();
    sub_242C47EE8();
    result = OUTLINED_FUNCTION_2_41();
    __break(1u);
  }
  return result;
}

void sub_242AF7C38(char a1)
{
  uint64_t v1;
  __IOSurface *v2;

  v2 = *(__IOSurface **)(v1 + 16);
  if (IOSurfaceUnlock(v2, a1 & 1, 0))
  {
    sub_242C4892C();
    if (qword_257220548 != -1)
      swift_once();
    sub_242C47EE8();
    OUTLINED_FUNCTION_2_41();
    __break(1u);
  }
  else
  {
    IOSurfaceDecrementUseCount(v2);
  }
}

Swift::Int __swiftcall roundUp(_:toMultipleOf:)(Swift::Int _, Swift::Int toMultipleOf)
{
  Swift::Int v3;
  Swift::Int v4;

  if (!toMultipleOf)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (_ == 0x8000000000000000 && toMultipleOf == -1)
    goto LABEL_13;
  v3 = _ % toMultipleOf;
  if (!(_ % toMultipleOf))
    return _;
  v4 = _ + toMultipleOf;
  if (__OFADD__(_, toMultipleOf))
    goto LABEL_11;
  _ = v4 - v3;
  if (__OFSUB__(v4, v3))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  return _;
}

uint64_t type metadata accessor for IOSurfaceTensorStorage()
{
  return objc_opt_self();
}

void sub_242AF7D74(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t sub_242AF7D80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return sub_242C480E0();
}

void sub_242AF7D8C()
{
  sub_242AF7B00();
}

void sub_242AF7DA0()
{
  sub_242AF72C8();
}

unsigned __int8 *sub_242AF7DB4(unsigned __int8 *result)
{
  int v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = result[8];
  v2 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v2)
  {
    v3 = (uint64_t *)(*(_QWORD *)result + 32);
    v4 = 1;
    while (1)
    {
      v5 = *v3++;
      v6 = v4 * v5;
      if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
        break;
      v4 = v6;
      if (!--v2)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v6 = 1;
LABEL_7:
    result = (unsigned __int8 *)MEMORY[0x2494ED194](*MEMORY[0x24BDD8FD0]);
    if (v6 < 1 || (uint64_t)result < v6)
      return 0;
    if ((v1 - 1) > 0xA)
      v8 = 1;
    else
      v8 = qword_242C53410[(char)(v1 - 1)];
    if ((unsigned __int128)(v6 * (__int128)v8) >> 64 == (v6 * v8) >> 63)
    {
      v9 = *MEMORY[0x24BDD8E38];
      v10 = MEMORY[0x2494ED14C](*MEMORY[0x24BDD8E38]);
      return (unsigned __int8 *)(MEMORY[0x2494ED194](v9) >= v10);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_242AF7E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257220B78;
  if (!qword_257220B78)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x2494EDE24](&unk_242C4BD64, v1);
    atomic_store(result, (unint64_t *)&qword_257220B78);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_35()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t OUTLINED_FUNCTION_2_41()
{
  return sub_242C48F5C();
}

uint64_t Collection<>.collated()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(v9, a1, a2, AssociatedTypeWitness, a3);
}

uint64_t Tensor.init<A>(collating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = &v14[-v10];
  sub_242C487D0();
  v15 = a2;
  v16 = a3;
  v17 = a1;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_242AAB47C(1, (uint64_t)sub_242AF819C, (uint64_t)v14, AssociatedTypeWitness, (uint64_t)&type metadata for Tensor, AssociatedConformanceWitness);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  v18 = 13;
  Tensor.init(stacking:alongAxis:scalarType:)();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a4 = v19;
  return result;
}

uint64_t sub_242AF8140@<X0>(_QWORD *a1@<X8>)
{
  uint64_t (*v2)(uint64_t *, _QWORD);
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t *, _QWORD))sub_242C48854();
  v4 = *v3;
  swift_retain();
  result = v2(&v6, 0);
  *a1 = v4;
  return result;
}

uint64_t sub_242AF819C@<X0>(_QWORD *a1@<X8>)
{
  return sub_242AF8140(a1);
}

uint64_t dispatch thunk of Collatable.init<A>(collating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void sub_242AF81B4()
{
  sub_242A59170();
}

uint64_t sub_242AF8210(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char v14;

  v13 = *a11;
  v14 = *((_BYTE *)a11 + 8);
  *(_DWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_QWORD *)(v12 + 56) = a6;
  *(_QWORD *)(v12 + 64) = a7;
  *(_QWORD *)(v12 + 72) = a8;
  *(_QWORD *)(v12 + 80) = a9;
  *(_QWORD *)(v12 + 88) = a10;
  *(_QWORD *)(v12 + 96) = v13;
  *(_BYTE *)(v12 + 104) = v14;
  sub_242A56808(a12, v12 + 112);
  return v12;
}

uint64_t sub_242AF825C()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 136))();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  return sub_242C4934C();
}

uint64_t sub_242AF82E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242AF8310()
{
  sub_242AF82E4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Base2DPoolOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AF8350()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_242AF835C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 160))();
}

uint64_t sub_242AF8384(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C5367C, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242AF83C0()
{
  return OUTLINED_FUNCTION_9_29(0x5F677661u);
}

#error "242AF8428: call analysis failed (funcsize=25)"

uint64_t sub_242AF8434()
{
  sub_242AF825C();
  return sub_242C49358();
}

uint64_t sub_242AF8460()
{
  return sub_242AF85CC();
}

uint64_t type metadata accessor for Average2DPoolOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AF8488()
{
  return OUTLINED_FUNCTION_3_34(0x5F677661u);
}

#error "242AF84F8: call analysis failed (funcsize=26)"

uint64_t sub_242AF8504()
{
  sub_242AF825C();
  return sub_242C49358();
}

uint64_t sub_242AF8530()
{
  return sub_242AF86A0();
}

uint64_t type metadata accessor for Average2DPoolGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AF8558()
{
  return OUTLINED_FUNCTION_9_29(0x5F78616Du);
}

#error "242AF85B8: call analysis failed (funcsize=23)"

uint64_t sub_242AF85C4()
{
  return sub_242AF85CC();
}

uint64_t sub_242AF85CC()
{
  uint64_t v0;

  sub_242AF82E4();
  sub_242A6549C(*(_QWORD *)(v0 + 176));
  return OUTLINED_FUNCTION_6_35();
}

uint64_t type metadata accessor for Max2DPoolOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AF861C()
{
  return OUTLINED_FUNCTION_3_34(0x5F78616Du);
}

#error "242AF868C: call analysis failed (funcsize=27)"

uint64_t sub_242AF8698()
{
  return sub_242AF86A0();
}

uint64_t sub_242AF86A0()
{
  sub_242AF82E4();
  swift_release();
  return OUTLINED_FUNCTION_6_35();
}

uint64_t type metadata accessor for Max2DPoolGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AF86F0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257221EF0, type metadata accessor for Max2DPoolGradientOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AF872C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257221EF8, type metadata accessor for Max2DPoolOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AF8768(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257221F00, type metadata accessor for Average2DPoolGradientOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AF87A4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257221F08, type metadata accessor for Average2DPoolOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AF87E0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257225B90, type metadata accessor for Base2DPoolOperation, (uint64_t)&unk_242C53644);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_36(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t OUTLINED_FUNCTION_3_34(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t OUTLINED_FUNCTION_4_32(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t OUTLINED_FUNCTION_6_35()
{
  return swift_deallocClassInstance();
}

uint64_t OUTLINED_FUNCTION_7_25(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12)
{
  uint64_t v12;

  return sub_242AF8210(a1, a2, a3, a5, a6, a7, v12, a8, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_9_29(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t sub_242AF8924(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_retain();
  sub_242AF8CE0();
  *(_BYTE *)(a1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) = 0;
  OUTLINED_FUNCTION_1_37();
  sub_242AF9478(a1);
  v3 = v2;
  swift_endAccess();
  swift_release();
  return v3;
}

uint64_t sub_242AF89AC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_46();
  *(_BYTE *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) = 0;
  OUTLINED_FUNCTION_1_37();
  sub_242C47BDC();
  return swift_endAccess();
}

uint64_t sub_242AF8A20(uint64_t a1, uint64_t a2, uint64_t *a3, char *a4)
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a3;
  v8 = *a4;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_initializationState) = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data) = xmmword_242C52F20;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) = 1;
  v9 = v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_url;
  v10 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_offset) = a2;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape) = v7;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType) = v8;
  return v4;
}

void sub_242AF8ADC(uint64_t a1)
{
  uint64_t v2;

  sub_242AF8CE0();
  v2 = a1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data;
  OUTLINED_FUNCTION_2_34();
  __asm { BR              X10 }
}

uint64_t sub_242AF8B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_242AF99D8(v1, v0 & 0xFFFFFFFFFFFFLL, BYTE6(v0));
  OUTLINED_FUNCTION_3_35();
  return v2;
}

uint64_t sub_242AF8C48()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_46();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data);
  OUTLINED_FUNCTION_2_34();
  v3 = *v1;
  v2 = v1[1];
  sub_242A92930(v3, v2);
  sub_242C47BC4();
  return sub_242A69418(v3, v2);
}

void sub_242AF8CE0()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_initializationState) & 1) == 0)
    sub_242AF8E34();
}

void sub_242AF8E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unsigned __int8 v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33[4];

  v2 = v0;
  v33[3] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_242C47B7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242A8AA58(0, (unint64_t *)&qword_257221670);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_url, v3);
  v7 = sub_242AF9094((uint64_t)v6);
  if (!v1)
  {
    v8 = v7;
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_offset);
    v33[0] = 0;
    v10 = objc_msgSend(v7, sel_seekToOffset_error_, v9, v33);
    v11 = v33[0];
    if (!v10)
      goto LABEL_17;
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v14 = (uint64_t *)(v12 + 32);
      v15 = 1;
      while (1)
      {
        v16 = *v14++;
        v17 = v15 * v16;
        if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63)
          break;
        v15 = v17;
        if (!--v13)
          goto LABEL_9;
      }
      __break(1u);
      goto LABEL_20;
    }
    v17 = 1;
LABEL_9:
    v18 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType) - 1;
    if (v18 > 0xA)
      v19 = 1;
    else
      v19 = qword_242C537A0[(char)v18];
    if ((unsigned __int128)(v17 * (__int128)v19) >> 64 != (v17 * v19) >> 63)
LABEL_20:
      __break(1u);
    v20 = v33[0];
    v21 = sub_242C48914();
    v23 = v22;
    if (v22 >> 60 != 15)
    {
      v24 = v21;
      v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data);
      swift_beginAccess();
      v26 = *v25;
      v27 = v25[1];
      *v25 = v24;
      v25[1] = v23;
      sub_242A69418(v26, v27);
    }
    v32 = 0;
    v28 = objc_msgSend(v8, sel_closeAndReturnError_, &v32);
    v11 = v32;
    if ((v28 & 1) != 0)
    {
      v29 = v32;

      *(_BYTE *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_initializationState) = 1;
    }
    else
    {
LABEL_17:
      v30 = v11;
      sub_242C47AF8();

      swift_willThrow();
    }
  }
}

id sub_242AF9094(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_242C47B34();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_242C47B7C();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_242C47AF8();

    swift_willThrow();
    v9 = sub_242C47B7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_242AF91A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_url;
  v2 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_242A69418(*(_QWORD *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data), *(_QWORD *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data + 8));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242AF9210()
{
  sub_242AF91A8();
  return swift_deallocClassInstance();
}

uint64_t sub_242AF9234()
{
  return type metadata accessor for DataSourceTensorStorage();
}

uint64_t type metadata accessor for DataSourceTensorStorage()
{
  uint64_t result;

  result = qword_257225BC0;
  if (!qword_257225BC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_242AF9274()
{
  uint64_t result;
  unint64_t v1;

  result = sub_242C47B7C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DataSourceTensorStorage.InitializationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242AF9368 + 4 * byte_242C536A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242AF939C + 4 * byte_242C536A0[v4]))();
}

uint64_t sub_242AF939C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AF93A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AF93ACLL);
  return result;
}

uint64_t sub_242AF93B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AF93C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242AF93C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AF93CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DataSourceTensorStorage.InitializationState()
{
  return &type metadata for DataSourceTensorStorage.InitializationState;
}

unint64_t sub_242AF93EC()
{
  unint64_t result;

  result = qword_257225C80;
  if (!qword_257225C80)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53764, &type metadata for DataSourceTensorStorage.InitializationState);
    atomic_store(result, (unint64_t *)&qword_257225C80);
  }
  return result;
}

void sub_242AF9428(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType);
}

uint64_t sub_242AF943C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape);
  return sub_242C480E0();
}

uint64_t sub_242AF9450()
{
  return sub_242AF8C48();
}

uint64_t sub_242AF9464()
{
  return sub_242AF89AC();
}

void sub_242AF9478(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 62;
  swift_retain_n();
  __asm { BR              X9 }
}

uint64_t sub_242AF94E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  unsigned int v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unsigned __int8 v15;

  v11 = v2;
  LOWORD(v12) = v0;
  BYTE2(v12) = BYTE2(v0);
  HIBYTE(v12) = BYTE3(v0);
  v13 = BYTE4(v0);
  v14 = BYTE5(v0);
  v15 = BYTE6(v0);
  sub_242A8AA58(0, &qword_257222990);
  swift_retain_n();
  v3 = sub_242C480E0();
  sub_242A5A5E8(v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  sub_242B1DB5C();
  sub_242B1DC14(v5, (uint64_t)&v11, v6);
  v8 = v7;
  swift_release_n();
  v9 = v12 | ((unint64_t)v13 << 32) | ((unint64_t)v14 << 40) | ((unint64_t)v15 << 48);
  *v1 = v11;
  v1[1] = v9;
  swift_release_n();
  return v8;
}

uint64_t sub_242AF991C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_242C47A98();
  if (!result || (result = sub_242C47ABC(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_242C47AB0();
      sub_242AB8E8C();
      return sub_242C47A80();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242AF99D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = a1;
  v5 = a2;
  v6 = BYTE2(a2);
  v7 = BYTE3(a2);
  v8 = BYTE4(a2);
  v9 = BYTE5(a2);
  v10 = &v4;
  v11 = (char *)&v4 + a3;
  sub_242AB8E8C();
  return sub_242C47A80();
}

void OUTLINED_FUNCTION_0_46()
{
  sub_242AF8CE0();
}

uint64_t OUTLINED_FUNCTION_1_37()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_43(uint64_t a1, uint64_t a2)
{
  return sub_242AF991C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_3_35()
{
  unint64_t v0;
  uint64_t v1;

  return sub_242A69418(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_33()
{
  unint64_t v0;
  uint64_t v1;

  return sub_242A92930(v1, v0);
}

uint64_t MaxPool1D.stride.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MaxPool1D.padding.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

NeuralNetworks::MaxPool1D __swiftcall MaxPool1D.init(kernelSize:stride:padding:)(Swift::Int kernelSize, Swift::Int_optional stride, Swift::Int padding)
{
  uint64_t v3;
  NeuralNetworks::MaxPool1D result;

  if (stride.is_nil)
    stride.value = kernelSize;
  *(_QWORD *)&stride.is_nil = padding;
  result.stride = stride.value;
  LOBYTE(result.padding) = stride.is_nil;
  *(_DWORD *)((char *)&result.padding + 1) = *(_DWORD *)((char *)&v3 + 1);
  *(_WORD *)((char *)&result.padding + 5) = *(_WORD *)((char *)&v3 + 5);
  HIBYTE(result.padding) = HIBYTE(v3);
  result.kernelSize = kernelSize;
  return result;
}

uint64_t MaxPool1D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  char *v8;

  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_34_13();
  maxPool2D(_:kernelSize:stride:padding:)(v7, 1, a2, 1, a3, 0, a4, v8);
  swift_release();
  Tensor.squeezingShape(at:)();
  return OUTLINED_FUNCTION_7_26();
}

uint64_t sub_242AF9BD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x69536C656E72656BLL && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656469727473 && a2 == 0xE600000000000000;
    if (v6 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_242C4925C();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_242AF9D28()
{
  char *v0;

  return sub_242AFAE9C(*v0);
}

uint64_t sub_242AF9D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242AF9BD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242AF9D54()
{
  sub_242AF9EB0();
  return sub_242C494D8();
}

uint64_t sub_242AF9D7C()
{
  sub_242AF9EB0();
  return sub_242C494E4();
}

void MaxPool1D.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[2];

  OUTLINED_FUNCTION_18_1();
  v8[1] = v1;
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257225C88);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_242AF9EB0();
  sub_242C49478();
  OUTLINED_FUNCTION_14_17();
  if (!v0)
  {
    OUTLINED_FUNCTION_14_17();
    OUTLINED_FUNCTION_14_17();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_0_9();
}

unint64_t sub_242AF9EB0()
{
  unint64_t result;

  result = qword_257225C90;
  if (!qword_257225C90)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54530, &type metadata for MaxPool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225C90);
  }
  return result;
}

uint64_t MaxPool1D.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[16];

  __swift_instantiateConcreteTypeFromMangledName(&qword_257225C98);
  OUTLINED_FUNCTION_160_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_27_16(a1);
  sub_242AF9EB0();
  OUTLINED_FUNCTION_19_20();
  v8[15] = 0;
  v6 = OUTLINED_FUNCTION_3_36();
  v8[14] = 1;
  OUTLINED_FUNCTION_3_36();
  v8[13] = 2;
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_84_2((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_23_15();
  return v6;
}

uint64_t sub_242AFA00C(uint64_t a1)
{
  uint64_t *v1;

  return MaxPool1D.forward(_:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_242AFA018@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = MaxPool1D.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_242AFA044()
{
  MaxPool1D.encode(to:)();
}

uint64_t MaxPool2D.kernelSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MaxPool2D.stride.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MaxPool2D.padding.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

void __swiftcall MaxPool2D.init(kernelSize:stride:padding:)(NeuralNetworks::MaxPool2D *__return_ptr retstr, Swift::tuple_height_Int_width_Int kernelSize, Swift::tuple_Int_Int_optional stride, Swift::tuple_Int_Int padding)
{
  Swift::Int width;
  Swift::Int height;

  retstr->kernelSize = kernelSize;
  if (stride.is_nil)
    width = kernelSize.width;
  else
    width = stride.value._1;
  if (stride.is_nil)
    height = kernelSize.height;
  else
    height = stride.value._0;
  retstr->stride.y = height;
  retstr->stride.x = width;
  retstr->padding = (Swift::tuple_y_Int_x_Int)padding;
}

uint64_t MaxPool2D.forward(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  OUTLINED_FUNCTION_26_18();
  return maxPool2D(_:kernelSize:stride:padding:)(&v8, v0, v1, v2, v3, v4, v5, v6);
}

double sub_242AFA0BC@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  MaxPool2D.init(from:)();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void MaxPool2D.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257225CA0);
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242AFA214();
  OUTLINED_FUNCTION_20_24();
  if (v0)
  {
    OUTLINED_FUNCTION_23_15();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
    sub_242A97F3C(&qword_257222660, MEMORY[0x24BEE40E8]);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_2_6();
    OUTLINED_FUNCTION_18_23();
  }
  OUTLINED_FUNCTION_0_9();
}

unint64_t sub_242AFA214()
{
  unint64_t result;

  result = qword_257225CA8;
  if (!qword_257225CA8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C544E0, &type metadata for MaxPool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225CA8);
  }
  return result;
}

void sub_242AFA250(_QWORD *a1)
{
  MaxPool2D.encode(to:)(a1);
}

void MaxPool2D.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257225CB0);
  OUTLINED_FUNCTION_160_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_27_16(a1);
  sub_242AFA214();
  OUTLINED_FUNCTION_17_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
  sub_242A97F3C(&qword_257222670, MEMORY[0x24BEE40D8]);
  OUTLINED_FUNCTION_1_38();
  if (!v1)
  {
    OUTLINED_FUNCTION_1_38();
    OUTLINED_FUNCTION_1_38();
  }
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_25_16();
}

uint64_t sub_242AFA36C()
{
  return sub_242AFAE3C();
}

uint64_t sub_242AFA388(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B3E70C(*a1, *a2);
}

uint64_t sub_242AFA394()
{
  unsigned __int8 *v0;

  return sub_242C449CC(*v0);
}

uint64_t sub_242AFA39C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A5C25C(a1, *v1);
}

uint64_t sub_242AFA3A4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242BA8DE0(a1, *v1);
}

uint64_t sub_242AFA3AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AFAE3C();
  *a1 = result;
  return result;
}

uint64_t sub_242AFA3E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AFA36C();
  *a1 = result;
  return result;
}

uint64_t sub_242AFA404()
{
  sub_242AFA214();
  return sub_242C494D8();
}

uint64_t sub_242AFA42C()
{
  sub_242AFA214();
  return sub_242C494E4();
}

uint64_t AveragePool1D.stride.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AveragePool1D.padding.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AveragePool1D.countIncludesPadding.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

NeuralNetworks::AveragePool1D __swiftcall AveragePool1D.init(kernelSize:stride:padding:countIncludesPadding:)(Swift::Int kernelSize, Swift::Int_optional stride, Swift::Int padding, Swift::Bool countIncludesPadding)
{
  Swift::Bool v5;
  uint64_t v6;
  NeuralNetworks::AveragePool1D result;

  if (stride.is_nil)
    stride.value = kernelSize;
  v5 = countIncludesPadding;
  *(_QWORD *)&stride.is_nil = padding;
  result.stride = stride.value;
  LOBYTE(result.padding) = stride.is_nil;
  *(_DWORD *)((char *)&result.padding + 1) = *(_DWORD *)((char *)&v6 + 1);
  *(_WORD *)((char *)&result.padding + 5) = *(_WORD *)((char *)&v6 + 5);
  HIBYTE(result.padding) = HIBYTE(v6);
  result.kernelSize = kernelSize;
  result.countIncludesPadding = v5;
  return result;
}

uint64_t AveragePool1D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v9;
  uint64_t *v10;

  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_34_13();
  averagePool2D(_:kernelSize:stride:padding:countIncludesPadding:)(v9, a2, 1, a3, 1, a4, 0, a5, v10);
  swift_release();
  Tensor.squeezingShape(at:)();
  return OUTLINED_FUNCTION_7_26();
}

uint64_t sub_242AFA51C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x69536C656E72656BLL && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656469727473 && a2 == 0xE600000000000000;
    if (v6 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x676E6964646170 && a2 == 0xE700000000000000;
      if (v7 || (sub_242C4925C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000242C69F60)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_242C4925C();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_242AFA6CC()
{
  return 4;
}

uint64_t sub_242AFA6D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242AFA70C + 4 * byte_242C53800[a1]))(0x69536C656E72656BLL, 0xEA0000000000657ALL);
}

uint64_t sub_242AFA70C()
{
  return 0x656469727473;
}

uint64_t sub_242AFA720()
{
  return 0x676E6964646170;
}

unint64_t sub_242AFA738()
{
  return 0xD000000000000014;
}

uint64_t sub_242AFA754()
{
  unsigned __int8 *v0;

  return sub_242AFA6D4(*v0);
}

uint64_t sub_242AFA75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242AFA51C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242AFA780@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AFA6CC();
  *a1 = result;
  return result;
}

uint64_t sub_242AFA7A4()
{
  sub_242AFA92C();
  return sub_242C494D8();
}

uint64_t sub_242AFA7CC()
{
  sub_242AFA92C();
  return sub_242C494E4();
}

void AveragePool1D.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257225CB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242AFA92C();
  sub_242C49478();
  OUTLINED_FUNCTION_13_26();
  if (!v0)
  {
    OUTLINED_FUNCTION_13_26();
    OUTLINED_FUNCTION_13_26();
    sub_242C49160();
  }
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_0_9();
}

unint64_t sub_242AFA92C()
{
  unint64_t result;

  result = qword_257225CC0;
  if (!qword_257225CC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54490, &type metadata for AveragePool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225CC0);
  }
  return result;
}

uint64_t AveragePool1D.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[80];
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_18_1();
  v11 = v1;
  v12 = v2;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257225CC8);
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_27_16(v4);
  sub_242AFA92C();
  OUTLINED_FUNCTION_19_20();
  v10[15] = 0;
  v8 = OUTLINED_FUNCTION_3_36();
  v10[14] = 1;
  OUTLINED_FUNCTION_3_36();
  v10[13] = 2;
  OUTLINED_FUNCTION_3_36();
  v10[12] = 3;
  sub_242C490AC();
  OUTLINED_FUNCTION_84_2((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_23_15();
  return v8;
}

uint64_t sub_242AFAAAC(uint64_t a1)
{
  uint64_t v1;

  return AveragePool1D.forward(_:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_242AFAABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;

  result = AveragePool1D.init(from:)();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 24) = v6 & 1;
  }
  return result;
}

void sub_242AFAAF0()
{
  AveragePool1D.encode(to:)();
}

uint64_t AveragePool2D.kernelSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AveragePool2D.stride.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t AveragePool2D.padding.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t AveragePool2D.countIncludesPadding.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

void __swiftcall AveragePool2D.init(kernelSize:stride:padding:countIncludesPadding:)(NeuralNetworks::AveragePool2D *__return_ptr retstr, Swift::tuple_height_Int_width_Int kernelSize, Swift::tuple_Int_Int_optional stride, Swift::tuple_Int_Int padding, Swift::Bool countIncludesPadding)
{
  Swift::Int width;
  Swift::Int height;

  retstr->kernelSize = kernelSize;
  if (stride.is_nil)
    width = kernelSize.width;
  else
    width = stride.value._1;
  if (stride.is_nil)
    height = kernelSize.height;
  else
    height = stride.value._0;
  retstr->stride.y = height;
  retstr->stride.x = width;
  retstr->padding = (Swift::tuple_y_Int_x_Int)padding;
  retstr->countIncludesPadding = countIncludesPadding;
}

uint64_t AveragePool2D.forward(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v9;

  OUTLINED_FUNCTION_26_18();
  return averagePool2D(_:kernelSize:stride:padding:countIncludesPadding:)(&v9, v1, v2, v3, v4, v5, v6, *(_BYTE *)(v0 + 48), v7);
}

double sub_242AFAB7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;

  AveragePool2D.init(from:)();
  if (!v1)
  {
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    result = *(double *)&v6;
    *(_OWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 48) = v7;
  }
  return result;
}

void AveragePool2D.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257225CD0);
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242AFACE4();
  OUTLINED_FUNCTION_20_24();
  if (v0)
  {
    OUTLINED_FUNCTION_23_15();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
    sub_242A97F3C(&qword_257222660, MEMORY[0x24BEE40E8]);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_2_6();
    OUTLINED_FUNCTION_18_23();
    *(_BYTE *)(v4 + 48) = 0;
  }
  OUTLINED_FUNCTION_0_9();
}

unint64_t sub_242AFACE4()
{
  unint64_t result;

  result = qword_257225CD8;
  if (!qword_257225CD8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54440, &type metadata for AveragePool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225CD8);
  }
  return result;
}

void sub_242AFAD20(_QWORD *a1)
{
  AveragePool2D.encode(to:)(a1);
}

void AveragePool2D.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257225CE0);
  OUTLINED_FUNCTION_160_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_27_16(a1);
  sub_242AFACE4();
  OUTLINED_FUNCTION_17_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
  sub_242A97F3C(&qword_257222670, MEMORY[0x24BEE40D8]);
  OUTLINED_FUNCTION_1_38();
  if (!v1)
  {
    OUTLINED_FUNCTION_1_38();
    OUTLINED_FUNCTION_1_38();
  }
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_25_16();
}

uint64_t sub_242AFAE3C()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_242AFAE80()
{
  return sub_242AFAE3C();
}

uint64_t sub_242AFAE9C(char a1)
{
  if (!a1)
    return 0x69536C656E72656BLL;
  if (a1 == 1)
    return 0x656469727473;
  return 0x676E6964646170;
}

uint64_t sub_242AFAEF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AFAE3C();
  *a1 = result;
  return result;
}

uint64_t sub_242AFAF28@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242AFAE9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242AFAF50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AFAE80();
  *a1 = result;
  return result;
}

uint64_t sub_242AFAF74()
{
  sub_242AFACE4();
  return sub_242C494D8();
}

uint64_t sub_242AFAF9C()
{
  sub_242AFACE4();
  return sub_242C494E4();
}

void GlobalAveragePool1D.forward(_:)()
{
  Tensor.mean(squeezingAxes:)(&unk_25137CA10);
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242AFAFFC()
{
  sub_242AFB514();
  return sub_242C494D8();
}

uint64_t sub_242AFB024()
{
  sub_242AFB514();
  return sub_242C494E4();
}

#error "242AFB06C: call analysis failed (funcsize=8)"

void GlobalAveragePool1D.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242AFB094(uint64_t a1)
{
  GlobalMaxPool1D.init(from:)(a1);
}

uint64_t sub_242AFB0A8()
{
  return GlobalAveragePool1D.encode(to:)();
}

uint64_t GlobalAveragePool2D.forward(_:)(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_16_18(a1);
  if (!(!v3 & v2) || v1 == 3)
  {
    OUTLINED_FUNCTION_5_36();
    OUTLINED_FUNCTION_10_23();
  }
  v4 = (uint64_t *)OUTLINED_FUNCTION_11_23();
  v12 = averagePool2D(_:kernelSize:stride:padding:countIncludesPadding:)(v4, v5, v6, v7, v8, v9, v10, 0, v11);
  OUTLINED_FUNCTION_15_20(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23);
  OUTLINED_FUNCTION_36_15();
  OUTLINED_FUNCTION_31_19();
  OUTLINED_FUNCTION_21_18(v20);
  swift_release();
  return OUTLINED_FUNCTION_12_21();
}

uint64_t sub_242AFB14C()
{
  sub_242AFB550();
  return sub_242C494D8();
}

uint64_t sub_242AFB174()
{
  sub_242AFB550();
  return sub_242C494E4();
}

#error "242AFB1BC: call analysis failed (funcsize=8)"

void GlobalAveragePool2D.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

uint64_t sub_242AFB1E4()
{
  return GlobalAveragePool2D.encode(to:)();
}

void GlobalMaxPool1D.forward(_:)()
{
  Tensor.max(squeezingAxes:)(&unk_25137C9E8);
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242AFB22C()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_242AFB248()
{
  return 0;
}

uint64_t sub_242AFB254@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AFB22C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_242AFB27C()
{
  sub_242AFB58C();
  return sub_242C494D8();
}

uint64_t sub_242AFB2A4()
{
  sub_242AFB58C();
  return sub_242C494E4();
}

#error "242AFB2EC: call analysis failed (funcsize=8)"

void GlobalMaxPool1D.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

uint64_t sub_242AFB314()
{
  return GlobalMaxPool1D.encode(to:)();
}

uint64_t GlobalMaxPool2D.forward(_:)(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_16_18(a1);
  if (!(!v3 & v2) || v1 == 3)
  {
    OUTLINED_FUNCTION_5_36();
    OUTLINED_FUNCTION_10_23();
  }
  v4 = (uint64_t *)OUTLINED_FUNCTION_11_23();
  v12 = maxPool2D(_:kernelSize:stride:padding:)(v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_15_20(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23);
  OUTLINED_FUNCTION_36_15();
  OUTLINED_FUNCTION_31_19();
  OUTLINED_FUNCTION_21_18(v20);
  swift_release();
  return OUTLINED_FUNCTION_12_21();
}

uint64_t sub_242AFB3B4()
{
  sub_242AFB5C8();
  return sub_242C494D8();
}

uint64_t sub_242AFB3DC()
{
  sub_242AFB5C8();
  return sub_242C494E4();
}

#error "242AFB424: call analysis failed (funcsize=8)"

void sub_242AFB430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void);
  void (*v23)(void);
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  OUTLINED_FUNCTION_18_1();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(v26);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  v23();
  sub_242C49478();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  OUTLINED_FUNCTION_0_9();
}

void GlobalMaxPool2D.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

uint64_t sub_242AFB500()
{
  return GlobalMaxPool2D.encode(to:)();
}

unint64_t sub_242AFB514()
{
  unint64_t result;

  result = qword_257225CF0;
  if (!qword_257225CF0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C543F0, &type metadata for GlobalAveragePool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225CF0);
  }
  return result;
}

unint64_t sub_242AFB550()
{
  unint64_t result;

  result = qword_257225D00;
  if (!qword_257225D00)
  {
    result = MEMORY[0x2494EDE24](&unk_242C543A0, &type metadata for GlobalAveragePool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225D00);
  }
  return result;
}

unint64_t sub_242AFB58C()
{
  unint64_t result;

  result = qword_257225D10;
  if (!qword_257225D10)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54350, &type metadata for GlobalMaxPool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225D10);
  }
  return result;
}

unint64_t sub_242AFB5C8()
{
  unint64_t result;

  result = qword_257225D20;
  if (!qword_257225D20)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54300, &type metadata for GlobalMaxPool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225D20);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MaxPool1D(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MaxPool1D(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for MaxPool1D()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for MaxPool2D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t getEnumTagSinglePayload for AveragePool1D(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AveragePool1D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

void type metadata accessor for AveragePool1D()
{
  OUTLINED_FUNCTION_22_4();
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AveragePool2D(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AveragePool2D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

void type metadata accessor for AveragePool2D()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for GlobalAveragePool1D()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for GlobalAveragePool2D()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for GlobalMaxPool1D()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for GlobalMaxPool2D()
{
  OUTLINED_FUNCTION_22_4();
}

ValueMetadata *type metadata accessor for GlobalMaxPool2D.CodingKeys()
{
  return &type metadata for GlobalMaxPool2D.CodingKeys;
}

ValueMetadata *type metadata accessor for GlobalMaxPool1D.CodingKeys()
{
  return &type metadata for GlobalMaxPool1D.CodingKeys;
}

ValueMetadata *type metadata accessor for GlobalAveragePool2D.CodingKeys()
{
  return &type metadata for GlobalAveragePool2D.CodingKeys;
}

ValueMetadata *type metadata accessor for GlobalAveragePool1D.CodingKeys()
{
  return &type metadata for GlobalAveragePool1D.CodingKeys;
}

ValueMetadata *type metadata accessor for AveragePool2D.CodingKeys()
{
  return &type metadata for AveragePool2D.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AveragePool1D.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242AFB8A0 + 4 * byte_242C53809[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242AFB8D4 + 4 * byte_242C53804[v4]))();
}

uint64_t sub_242AFB8D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AFB8DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AFB8E4);
  return result;
}

uint64_t sub_242AFB8F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AFB8F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242AFB8FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AFB904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AveragePool1D.CodingKeys()
{
  return &type metadata for AveragePool1D.CodingKeys;
}

ValueMetadata *type metadata accessor for MaxPool2D.CodingKeys()
{
  return &type metadata for MaxPool2D.CodingKeys;
}

uint64_t _s14NeuralNetworks13AveragePool2DV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242AFB97C + 4 * byte_242C53813[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242AFB9B0 + 4 * byte_242C5380E[v4]))();
}

uint64_t sub_242AFB9B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AFB9B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AFB9C0);
  return result;
}

uint64_t sub_242AFB9CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AFB9D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242AFB9D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AFB9E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MaxPool1D.CodingKeys()
{
  return &type metadata for MaxPool1D.CodingKeys;
}

unint64_t sub_242AFBA00()
{
  unint64_t result;

  result = qword_257225FE8;
  if (!qword_257225FE8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53F00, &type metadata for MaxPool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225FE8);
  }
  return result;
}

unint64_t sub_242AFBA40()
{
  unint64_t result;

  result = qword_257225FF0;
  if (!qword_257225FF0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53FF0, &type metadata for MaxPool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225FF0);
  }
  return result;
}

unint64_t sub_242AFBA80()
{
  unint64_t result;

  result = qword_257225FF8;
  if (!qword_257225FF8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C540A8, &type metadata for AveragePool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257225FF8);
  }
  return result;
}

unint64_t sub_242AFBAC0()
{
  unint64_t result;

  result = qword_257226000;
  if (!qword_257226000)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54198, &type metadata for AveragePool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226000);
  }
  return result;
}

unint64_t sub_242AFBB00()
{
  unint64_t result;

  result = qword_257226008;
  if (!qword_257226008)
  {
    result = MEMORY[0x2494EDE24](&unk_242C542B0, &type metadata for GlobalMaxPool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226008);
  }
  return result;
}

unint64_t sub_242AFBB40()
{
  unint64_t result;

  result = qword_257226010;
  if (!qword_257226010)
  {
    result = MEMORY[0x2494EDE24](&unk_242C542D8, &type metadata for GlobalMaxPool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226010);
  }
  return result;
}

unint64_t sub_242AFBB80()
{
  unint64_t result;

  result = qword_257226018;
  if (!qword_257226018)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54260, &type metadata for GlobalMaxPool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226018);
  }
  return result;
}

unint64_t sub_242AFBBC0()
{
  unint64_t result;

  result = qword_257226020;
  if (!qword_257226020)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54288, &type metadata for GlobalMaxPool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226020);
  }
  return result;
}

unint64_t sub_242AFBC00()
{
  unint64_t result;

  result = qword_257226028;
  if (!qword_257226028)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54210, &type metadata for GlobalAveragePool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226028);
  }
  return result;
}

unint64_t sub_242AFBC40()
{
  unint64_t result;

  result = qword_257226030;
  if (!qword_257226030)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54238, &type metadata for GlobalAveragePool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226030);
  }
  return result;
}

unint64_t sub_242AFBC80()
{
  unint64_t result;

  result = qword_257226038;
  if (!qword_257226038)
  {
    result = MEMORY[0x2494EDE24](&unk_242C541C0, &type metadata for GlobalAveragePool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226038);
  }
  return result;
}

unint64_t sub_242AFBCC0()
{
  unint64_t result;

  result = qword_257226040;
  if (!qword_257226040)
  {
    result = MEMORY[0x2494EDE24](&unk_242C541E8, &type metadata for GlobalAveragePool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226040);
  }
  return result;
}

unint64_t sub_242AFBD00()
{
  unint64_t result;

  result = qword_257226048;
  if (!qword_257226048)
  {
    result = MEMORY[0x2494EDE24](&unk_242C540D0, &type metadata for AveragePool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226048);
  }
  return result;
}

unint64_t sub_242AFBD40()
{
  unint64_t result;

  result = qword_257226050;
  if (!qword_257226050)
  {
    result = MEMORY[0x2494EDE24](&unk_242C540F8, &type metadata for AveragePool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226050);
  }
  return result;
}

unint64_t sub_242AFBD80()
{
  unint64_t result;

  result = qword_257226058;
  if (!qword_257226058)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54018, &type metadata for AveragePool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226058);
  }
  return result;
}

unint64_t sub_242AFBDC0()
{
  unint64_t result;

  result = qword_257226060;
  if (!qword_257226060)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54040, &type metadata for AveragePool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226060);
  }
  return result;
}

unint64_t sub_242AFBE00()
{
  unint64_t result;

  result = qword_257226068;
  if (!qword_257226068)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53F28, &type metadata for MaxPool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226068);
  }
  return result;
}

unint64_t sub_242AFBE40()
{
  unint64_t result;

  result = qword_257226070;
  if (!qword_257226070)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53F50, &type metadata for MaxPool2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226070);
  }
  return result;
}

unint64_t sub_242AFBE80()
{
  unint64_t result;

  result = qword_257226078;
  if (!qword_257226078)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53E70, &type metadata for MaxPool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226078);
  }
  return result;
}

unint64_t sub_242AFBEC0()
{
  unint64_t result;

  result = qword_257226080;
  if (!qword_257226080)
  {
    result = MEMORY[0x2494EDE24](&unk_242C53E98, &type metadata for MaxPool1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257226080);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_47()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_1_38()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_3_36()
{
  return sub_242C490C4();
}

uint64_t OUTLINED_FUNCTION_5_36()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_7_26()
{
  return swift_release();
}

void OUTLINED_FUNCTION_10_23()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  uint64_t v0;

  return v0 - 40;
}

uint64_t OUTLINED_FUNCTION_12_21()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_26()
{
  return sub_242C49178();
}

uint64_t OUTLINED_FUNCTION_14_17()
{
  return sub_242C49178();
}

uint64_t OUTLINED_FUNCTION_15_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return *(_QWORD *)(*(_QWORD *)(a10 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_16_18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(v1 - 40) = *a1;
  return *(_QWORD *)(*(_QWORD *)(v2 + 16) + 152);
}

__n128 OUTLINED_FUNCTION_18_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __n128 result;

  *(_OWORD *)(v2 - 144) = *(_OWORD *)(v2 - 96);
  __swift_destroy_boxed_opaque_existential_1(v0);
  v3 = *(_OWORD *)(v2 - 128);
  *(_OWORD *)v1 = *(_OWORD *)(v2 - 112);
  *(_OWORD *)(v1 + 16) = v3;
  result = *(__n128 *)(v2 - 144);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_20()
{
  return sub_242C49448();
}

uint64_t OUTLINED_FUNCTION_20_24()
{
  return sub_242C49448();
}

uint64_t OUTLINED_FUNCTION_21_18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 40) = a1;
  return Tensor.reshaped(to:)((uint64_t *)(v2 - 40), v1);
}

_QWORD *OUTLINED_FUNCTION_27_16(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_29_14(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void OUTLINED_FUNCTION_31_19()
{
  sub_242A5B894();
}

uint64_t OUTLINED_FUNCTION_32_17()
{
  return Tensor.expandingShape(at:)();
}

uint64_t OUTLINED_FUNCTION_36_15()
{
  return sub_242C480E0();
}

void sub_242AFC160()
{
  __asm { BR              X10 }
}

void sub_242AFC1A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  __n128 *v6;
  unint64_t v7;
  unint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v6 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_48(v6, (__n128)xmmword_242C4BF60);
  if (v5)
    OUTLINED_FUNCTION_4_34();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_1_39();
  OUTLINED_FUNCTION_5_37();
  OUTLINED_FUNCTION_1_32();
  sub_242A8A808((uint64_t)v4, (uint64_t)v3, v1, v0, v2);
  v8 = v7;

  v6[2].n128_u64[0] = v8;
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_0_45();
}

void sub_242AFC4B4()
{
  sub_242AFC160();
}

uint64_t sub_242AFC4C8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_242AFC564();
  if (!v2)
  {
    v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v7 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v7 + 16) = xmmword_242C4BF60;
    v9 = *(_QWORD *)(v1 + 24);
    v8 = *(_QWORD *)(v1 + 32);
    sub_242C480E0();
    sub_242AFCAA0((uint64_t)v6, 2147483656, v9, v8, a1);
    *(_QWORD *)(v7 + 32) = v10;
    OUTLINED_FUNCTION_8_21();
    v3 = v12;

  }
  return v3;
}

void sub_242AFC564()
{
  sub_242C480E0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_242AFC5E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3 & 0xC000000000000001;
  sub_242B4B240(0, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) != 0)
    v5 = (id)MEMORY[0x2494EC84C](0, v3);
  else
    v5 = *(id *)(v3 + 32);
  v6 = v5;
  sub_242B4B240(1, v4 == 0, v3);
  if (v4)
    v7 = (id)MEMORY[0x2494EC84C](1, v3);
  else
    v7 = *(id *)(v3 + 40);
  v8 = v7;
  sub_242AFCB18((uint64_t)v6, (uint64_t)v7, v2, v0, v1, (SEL *)&selRef_equalWithPrimaryTensor_secondaryTensor_name_);
  v10 = v9;

  return v10;
}

uint64_t sub_242AFC8E0(void *a1)
{
  return sub_242AFC4C8(a1);
}

void sub_242AFC8F4(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  unint64_t v14;

  if (*(_BYTE *)(v2 + 130))
  {
    if (*(_BYTE *)(v2 + 130) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
      v6 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_48(v6, (__n128)xmmword_242C4BF60);
      if (v4)
        OUTLINED_FUNCTION_4_34();
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_1_39();
      OUTLINED_FUNCTION_5_37();
      v7 = OUTLINED_FUNCTION_1_32();
      v12 = &selRef_logicalORWithPrimaryTensor_secondaryTensor_name_;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
      v6 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_48(v6, (__n128)xmmword_242C4BF60);
      if (v4)
        OUTLINED_FUNCTION_4_34();
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_1_39();
      OUTLINED_FUNCTION_5_37();
      v7 = OUTLINED_FUNCTION_1_32();
      v12 = &selRef_logicalXORWithPrimaryTensor_secondaryTensor_name_;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v6 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_0_48(v6, (__n128)xmmword_242C4BF60);
    if (v4)
      OUTLINED_FUNCTION_4_34();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_1_39();
    OUTLINED_FUNCTION_5_37();
    v7 = OUTLINED_FUNCTION_1_32();
    v12 = &selRef_logicalANDWithPrimaryTensor_secondaryTensor_name_;
  }
  OUTLINED_FUNCTION_7_27(v7, v8, v9, v10, v11, (SEL *)v12);
  v14 = v13;

  v6[2].n128_u64[0] = v14;
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_0_45();
}

void sub_242AFCA58(uint64_t a1, void *a2)
{
  sub_242AFC8F4(a1, a2);
}

uint64_t sub_242AFCA6C(uint64_t a1)
{
  uint64_t result;

  result = sub_242AA48A0((unint64_t *)&qword_257226088, (uint64_t (*)(uint64_t))type metadata accessor for BinaryArithmeticOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242AFCAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)OUTLINED_FUNCTION_11_24();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_castTensor_toType_name_, a1, a2, v8);

  OUTLINED_FUNCTION_7_0();
}

void sub_242AFCB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_242AFCB18(a1, a2, a3, a4, a5, (SEL *)&selRef_subtractionWithPrimaryTensor_secondaryTensor_name_);
}

void sub_242AFCB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  void *v10;
  id v11;

  v10 = (void *)OUTLINED_FUNCTION_11_24();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a5, *a6, a1, a2, v10);

  OUTLINED_FUNCTION_7_0();
}

uint64_t OUTLINED_FUNCTION_0_48(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return sub_242B4B240(0, (v2 & 0xC000000000000001) == 0, v2);
}

uint64_t OUTLINED_FUNCTION_1_39()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242B4B240(1, v1 == 0, v0);
}

void OUTLINED_FUNCTION_4_34()
{
  JUMPOUT(0x2494EC84CLL);
}

id OUTLINED_FUNCTION_5_37()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

void OUTLINED_FUNCTION_7_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  sub_242AFCB18(v10, v9, v7, v6, v8, a6);
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_11_24()
{
  return sub_242C48224();
}

void sub_242AFCBF4()
{
  __asm { BR              X10 }
}

uint64_t sub_242AFCC20()
{
  return 7;
}

void sub_242AFCC78()
{
  sub_242C48F5C();
  __break(1u);
}

void sub_242AFCCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v5 = (unint64_t *)(a1 + 32);
    while (1)
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & 0x8000000000000000) != 0)
        break;
      if (v6 >= *(_QWORD *)(a2 + 16))
        goto LABEL_10;
      v8 = a2 + 32 + 32 * v6;
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      sub_242C480E0();
      if (v12 >= v11 >> 1)
        sub_242AC315C();
      *(_QWORD *)(v14 + 16) = v12 + 1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      if (!--v3)
        goto LABEL_8;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_242AFCDDC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_60_6();
    OUTLINED_FUNCTION_27_17();
    if ((v2 & 1) != 0)
    {
      OUTLINED_FUNCTION_99_2();
      if (!v3)
      {
        OUTLINED_FUNCTION_10_24();
        if ((v4 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_99_2();
            if (v3)
              break;
            OUTLINED_FUNCTION_10_24();
          }
          while ((v5 & 1) != 0);
        }
      }
    }
  }
}

void sub_242AFCE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  char v10;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_47_12();
    OUTLINED_FUNCTION_63_7();
    sub_242C4817C();
    OUTLINED_FUNCTION_78();
    OUTLINED_FUNCTION_8_22();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_44_10();
      v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_17_20() & 1) == 0)
      {
        OUTLINED_FUNCTION_7_28();
        if ((v7 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_44_10();
            if (v6 && v8 == v3)
              break;
            if ((OUTLINED_FUNCTION_17_20() & 1) != 0)
              break;
            OUTLINED_FUNCTION_7_28();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
  OUTLINED_FUNCTION_52_6();
}

void sub_242AFCEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  char v10;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_47_12();
    OUTLINED_FUNCTION_63_7();
    sub_242C4817C();
    OUTLINED_FUNCTION_78();
    OUTLINED_FUNCTION_8_22();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_44_10();
      v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_17_20() & 1) == 0)
      {
        OUTLINED_FUNCTION_7_28();
        if ((v7 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_44_10();
            if (v6 && v8 == v3)
              break;
            if ((OUTLINED_FUNCTION_17_20() & 1) != 0)
              break;
            OUTLINED_FUNCTION_7_28();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
  OUTLINED_FUNCTION_52_6();
}

void sub_242AFCF9C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_60_6();
    OUTLINED_FUNCTION_27_17();
    if ((v2 & 1) != 0)
    {
      OUTLINED_FUNCTION_99_2();
      if (!v3)
      {
        OUTLINED_FUNCTION_10_24();
        if ((v4 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_99_2();
            if (v3)
              break;
            OUTLINED_FUNCTION_10_24();
          }
          while ((v5 & 1) != 0);
        }
      }
    }
  }
}

void sub_242AFD004()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = v0;
  v2 = (void *)MEMORY[0x2494ED6EC]();
  sub_242B0039C(v1);
  objc_autoreleasePoolPop(v2);
}

void sub_242AFD064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(unsigned __int8 *)(a1 + 16);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_74();
  sub_242BA2E04(&v6, a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

void sub_242AFD0F0()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  SEL v12;
  uint64_t v13;

  v4 = v2 & 1;
  v5 = (void *)OUTLINED_FUNCTION_26_19();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v4);
  OUTLINED_FUNCTION_5_38();
  OUTLINED_FUNCTION_2_44();
  if ((*(_BYTE *)(v3 - 103) & 1) != 0)
  {
    v7 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_28_20();
    OUTLINED_FUNCTION_9_9(v8, &qword_257226258);
    v9 = OUTLINED_FUNCTION_6_36();
    if ((v4 | v0) < 0)
    {
      __break(1u);
      JUMPOUT(0x242AFD7A8);
    }
    v7 = OUTLINED_FUNCTION_1_40(v9, v10);
  }
  v11 = (void *)OUTLINED_FUNCTION_94_2();

}

id sub_242AFD7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithFilename_line_column_, v7, a3, a4);

  return v8;
}

uint64_t sub_242AFD868@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[30];
  _BYTE v7[240];

  OUTLINED_FUNCTION_0_3();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
    sub_242A670D8(v3 + 240 * v4 - 208, (uint64_t)v7);
  else
    bzero(v7, 0xECuLL);
  sub_242B01140((uint64_t)v7, (uint64_t)v6);
  if (v6[0])
  {
    memcpy(a1, v6, 0xECuLL);
    return sub_242B01188((uint64_t)v7);
  }
  else
  {
    result = sub_242B01188((uint64_t)v6);
    __break(1u);
  }
  return result;
}

void sub_242AFD904()
{
  uint64_t v0;

  sub_242A70888((uint64_t)&unk_25137AE18);
  qword_257226090 = v0;
}

uint64_t sub_242AFD928(_QWORD *a1, void *a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 48) = v9;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + 64) = sub_242C480BC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220F88);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_242C4B7D0;
  sub_242A670D8((uint64_t)a1, v11 + 32);
  *(_QWORD *)(v4 + 16) = v11;
  sub_242A6945C(a1);
  *(_QWORD *)(v4 + 56) = v10;
  swift_unknownObjectUnownedInit();

  *(_BYTE *)(v4 + 72) = a3;
  *(_BYTE *)(v4 + 73) = a4;
  return v4;
}

uint64_t sub_242AFDA04()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectUnownedDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242AFDA50()
{
  sub_242AFDA04();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MILFunctionBuilder()
{
  return objc_opt_self();
}

void sub_242AFDA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v19[18];

  OUTLINED_FUNCTION_0_3();
  v1 = sub_242C2F2E0(*(_QWORD *)(v0 + 56));
  if (v1
    && (v4 = v1,
        v5 = swift_retain(),
        sub_242A9E814(v5, 0, 0, v4),
        v7 = v6,
        swift_release(),
        v1 = OUTLINED_FUNCTION_81(),
        v7))
  {
    if (*(_BYTE *)(v0 + 73) == 1)
    {
      OUTLINED_FUNCTION_0_49();
      OUTLINED_FUNCTION_24_20();
      if (v8)
      {
        OUTLINED_FUNCTION_40_12();
        do
        {
          OUTLINED_FUNCTION_80_6();
          if (!v9)
            OUTLINED_FUNCTION_86_2();
          OUTLINED_FUNCTION_61_7();
          if ((v10 & 1) == 0)
            OUTLINED_FUNCTION_72_5();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_24_20();
        }
        while (v11);
      }
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_34();
    }
  }
  else
  {
    OUTLINED_FUNCTION_100_1(v1, v2, v3);
    OUTLINED_FUNCTION_87_2();
    OUTLINED_FUNCTION_79_4(v12, v13);
    OUTLINED_FUNCTION_65_6();
    if (!v19[13])
    {
      OUTLINED_FUNCTION_87_2();
      OUTLINED_FUNCTION_79_4(v14, v15);
      OUTLINED_FUNCTION_65_6();
      if (!v19[17])
        OUTLINED_FUNCTION_87_2();
    }
    sub_242A6945C(v19);
    if ((*(_BYTE *)(v0 + 73) & 1) != 0)
    {
      OUTLINED_FUNCTION_0_49();
      OUTLINED_FUNCTION_24_20();
      if (v16)
      {
        OUTLINED_FUNCTION_40_12();
        do
        {
          OUTLINED_FUNCTION_80_6();
          if (!v9)
            OUTLINED_FUNCTION_85_3();
          OUTLINED_FUNCTION_62_7();
          if ((v17 & 1) == 0)
            OUTLINED_FUNCTION_73_7();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_24_20();
        }
        while (v18);
      }
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_136();
    }
  }
  OUTLINED_FUNCTION_37_15();
}

uint64_t sub_242AFDC64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_0_3();
  v5 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v5 + 16))
  {
    OUTLINED_FUNCTION_28_1();
    v6 = sub_242A61310(a1, a2);
    if ((v7 & 1) != 0)
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    else
      v8 = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v8 = 0;
  }
  result = swift_endAccess();
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_63_7();
    sub_242B8C7A4(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    swift_endAccess();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_28_1();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    return a1;
  }
  return result;
}

void sub_242AFDD78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  void *Strong;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  SEL v20;
  id v21;
  _QWORD v22[8];
  _QWORD v23[2];
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_242BC97A8();
  if (!v3
    || (v4 = v2,
        ObjectType = swift_getObjectType(),
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v22, ObjectType, v4),
        swift_unknownObjectRelease(),
        v6 = sub_242A56808((uint64_t)v22, (uint64_t)v23),
        (v27 & 1) != 0))
  {
    v7 = 0;
LABEL_6:
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_242A5A5E8(*(_QWORD *)(a1 + 152));
    OUTLINED_FUNCTION_9_9(v16, (unint64_t *)&qword_257221F28);
    v17 = (void *)sub_242C4853C();
    OUTLINED_FUNCTION_136();
    sub_242AFCBF4();
    sub_242AFDA90();
    v18 = (void *)sub_242C48224();
    OUTLINED_FUNCTION_4_0();
    v19 = (void *)OUTLINED_FUNCTION_94_2();
    v21 = objc_msgSend(v19, v20);

    return;
  }
  v8 = v23[0];
  v9 = v23[1];
  v10 = v25;
  v11 = v26;
  v12 = v24;
  OUTLINED_FUNCTION_9_9(v6, &qword_257226258);
  v13 = sub_242B7CD20(v8, v9, v12);
  if (((v11 | v10) & 0x8000000000000000) == 0)
  {
    v7 = sub_242AFD7E0(v13, v14, v10, v11);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_242AFDF04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  _QWORD v12[2];
  char v13;

  v6 = *a1;
  v7 = a1[1];
  v8 = *((_BYTE *)a1 + 16);
  OUTLINED_FUNCTION_0_3();
  v9 = *(_QWORD *)(v3 + 48);
  OUTLINED_FUNCTION_37_0();
  sub_242AFCE44(a2, a3, v9);
  v11 = v10;
  OUTLINED_FUNCTION_81();
  if ((v11 & 1) == 0)
  {
    v12[0] = v6;
    v12[1] = v7;
    v13 = v8;
    sub_242AFD064((uint64_t)v12, a2, a3);
  }
}

void sub_242AFDFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *Strong;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_32_0();
  sub_242BA2E04(&v23, a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  v13 = (void *)sub_242C48224();
  v14 = sub_242A56808(a4, (uint64_t)v24);
  v15 = 0;
  if ((v28 & 1) != 0)
    goto LABEL_4;
  v16 = v24[0];
  v17 = v24[1];
  v18 = v26;
  v19 = v27;
  v20 = v25;
  OUTLINED_FUNCTION_9_9(v14, &qword_257226258);
  v21 = sub_242B7CD20(v16, v17, v20);
  if (((v19 | v18) & 0x8000000000000000) == 0)
  {
    v15 = sub_242AFD7E0(v21, v22, v18, v19);
LABEL_4:

    return;
  }
  __break(1u);
}

void sub_242AFE114(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X7>, _QWORD *a4@<X8>)
{
  void *Strong;
  uint64_t ObjectType;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22[2];
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;

  v27 = (void *)a3;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v22, ObjectType, a2);
  sub_242A5A5E8(v22[0]);
  swift_bridgeObjectRelease();
  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v8 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(v22, ObjectType, a2);
  sub_242AFCBF4();
  v10 = v9;
  v11 = (void *)sub_242C48224();
  sub_242A56808((uint64_t)v27, (uint64_t)v22);
  v12 = 0;
  if ((v26 & 1) != 0)
    goto LABEL_4;
  v27 = Strong;
  v13 = v22[0];
  v14 = v22[1];
  v15 = v24;
  v16 = v25;
  v17 = v23;
  sub_242A8AA58(0, &qword_257226258);
  v18 = sub_242B7CD20(v13, v14, v17);
  if (((v16 | v15) & 0x8000000000000000) == 0)
  {
    v12 = sub_242AFD7E0(v18, v19, v15, v16);
    Strong = v27;
LABEL_4:
    v20 = objc_msgSend(Strong, sel_constantTensorWithBytes_shape_dataType_name_location_, a1, v8, v10, v11, v12);

    *a4 = v20;
    return;
  }
  __break(1u);
}

void sub_242AFE2DC(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242AFE700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v46;

  v9 = a7;
  v10 = a6;
  v11 = a5;
  v12 = a2;
  v13 = a1;
  v14 = *(_QWORD *)(a3 + 16);
  if (v14)
  {
    v41 = a1;
    v42 = a2;
    v43 = a5;
    sub_242C480E0();
    v39 = a4;
    OUTLINED_FUNCTION_74();
    v40 = a3;
    v17 = a3 + 48;
    v18 = MEMORY[0x24BEE4AF8];
    do
    {
      v20 = *(_QWORD *)(v17 - 16);
      v19 = *(_QWORD *)(v17 - 8);
      OUTLINED_FUNCTION_74();
      swift_retain();
      sub_242AFDA90();
      v22 = v21;
      v24 = v23;
      OUTLINED_FUNCTION_74();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_91_1();
        v18 = v27;
      }
      v25 = *(_QWORD *)(v18 + 16);
      if (v25 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        OUTLINED_FUNCTION_91_1();
        v18 = v28;
      }
      *(_QWORD *)(v18 + 16) = v25 + 1;
      v26 = (_QWORD *)(v18 + 32 * v25);
      v26[4] = v20;
      v26[5] = v19;
      v26[6] = v22;
      v26[7] = v24;
      swift_release();
      OUTLINED_FUNCTION_34();
      v17 += 24;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = a6;
    v9 = a7;
    v12 = v42;
    v11 = v43;
    v13 = v41;
  }
  else
  {
    v18 = MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v46 = sub_242C480BC();
  sub_242A5D488(v46, v29, v30, v31, v32, v33, v34, v35, v38, v39, v40, v41, v42, v43);
  sub_242AFE8B8(v13, v12, v18, v46, v11, v10, v9, v36, a9);
  OUTLINED_FUNCTION_3_6();
  return OUTLINED_FUNCTION_18_24();
}

void sub_242AFE8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *Strong;
  void *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;

  OUTLINED_FUNCTION_9_9(a1, &qword_257226268);
  v11 = MEMORY[0x24BEE4AF8];
  v12 = (_QWORD *)sub_242C480BC();
  v78 = a3;
  sub_242B127C8(a3, a4);
  sub_242C48E3C();
  swift_release();
  swift_retain();
  sub_242C49034();
  v13 = v89;
  if (!v89)
    goto LABEL_40;
  v14 = (uint64_t)v88;
  v79 = a4;
  do
  {
    v80 = v12;
    while (1)
    {
      v87 = v11;
      v84 = v14;
      if (*(_QWORD *)(a4 + 16)
        && (v15 = sub_242A61310(v14, v13), (v16 & 1) != 0)
        && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v15) + 16))
      {
        OUTLINED_FUNCTION_28_1();
        sub_242C480E0();
        v17 = sub_242C480E0();
        sub_242AFCCC4(v17, v78);
        v19 = v18;
        OUTLINED_FUNCTION_136();
      }
      else
      {
        v19 = v11;
      }
      v20 = *(_QWORD *)(v19 + 16);
      if (v20)
      {
        sub_242A8AA58(0, &qword_257226260);
        v21 = (uint64_t *)(v19 + 40);
        do
        {
          v22 = *(v21 - 1);
          v23 = *v21;
          OUTLINED_FUNCTION_0_3();
          OUTLINED_FUNCTION_39();
          sub_242BA2E04(&v86, v22, v23);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_242B007B0(v22, v23, (SEL *)&selRef_initWithName_);
          MEMORY[0x2494EC0CC]();
          if (*(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_242C485A8();
          v21 += 2;
          sub_242C485F0();
          sub_242C4856C();
          --v20;
        }
        while (v20);
        OUTLINED_FUNCTION_81();
        v24 = v87;
        a4 = v79;
        v12 = v80;
        v11 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        OUTLINED_FUNCTION_81();
        v24 = v11;
      }
      if (v24 >> 62)
        break;
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v25)
      {
        if (v25 == 1)
          goto LABEL_24;
        OUTLINED_FUNCTION_39();
        sub_242C49280();
LABEL_28:
        OUTLINED_FUNCTION_81();
        sub_242A8AA58(0, &qword_257226280);
        v28 = sub_242AFF22C();
        goto LABEL_29;
      }
LABEL_18:
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_84_4();
      v14 = (uint64_t)v88;
      v13 = v89;
      if (!v89)
        goto LABEL_40;
    }
    OUTLINED_FUNCTION_37_0();
    v26 = sub_242C48FC8();
    OUTLINED_FUNCTION_81();
    if (!v26)
      goto LABEL_18;
    OUTLINED_FUNCTION_37_0();
    v27 = sub_242C48FC8();
    OUTLINED_FUNCTION_81();
    if (v27 != 1)
    {
      OUTLINED_FUNCTION_37_0();
      sub_242C48F74();
      goto LABEL_28;
    }
LABEL_24:
    if ((v24 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v28 = *(id *)(v24 + 32);
        goto LABEL_29;
      }
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v28 = (id)MEMORY[0x2494EC84C](0, v24);
LABEL_29:
    v29 = v28;
    swift_isUniquelyReferenced_nonNull_native();
    v88 = v12;
    v30 = sub_242A61310(v84, v13);
    if (__OFADD__(v12[2], (v31 & 1) == 0))
      goto LABEL_65;
    v32 = v30;
    v33 = v31;
    v81 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226270);
    v34 = sub_242C48EF0();
    v11 = MEMORY[0x24BEE4AF8];
    if ((v34 & 1) != 0)
    {
      v35 = sub_242A61310(v84, v13);
      if ((v33 & 1) != (v36 & 1))
      {
LABEL_69:
        sub_242C492EC();
        __break(1u);
        JUMPOUT(0x242AFF1F8);
      }
      v32 = v35;
    }
    v37 = v88;
    if ((v33 & 1) != 0)
    {
      v38 = v88[7];

      *(_QWORD *)(v38 + 8 * v32) = v81;
      v12 = v37;
    }
    else
    {
      v88[(v32 >> 6) + 8] |= 1 << v32;
      v39 = (uint64_t *)(v37[6] + 16 * v32);
      *v39 = v84;
      v39[1] = v13;
      *(_QWORD *)(v37[7] + 8 * v32) = v29;
      v40 = v37[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_67;
      v12 = v37;
      v37[2] = v42;
      sub_242C480E0();
    }
    OUTLINED_FUNCTION_47();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_84_4();
    v14 = (uint64_t)v88;
    v13 = v89;
  }
  while (v89);
LABEL_40:
  swift_release_n();
  v43 = *(_QWORD *)(a5 + 16);
  if (!v43)
    goto LABEL_52;
  OUTLINED_FUNCTION_28_1();
  sub_242C480E0();
  v44 = (_BYTE *)(a5 + 64);
  while (2)
  {
    v82 = v43;
    v45 = *((_QWORD *)v44 - 4);
    v46 = *((_QWORD *)v44 - 3);
    v47 = *((_QWORD *)v44 - 1);
    v48 = *v44;
    v88 = (_QWORD *)*((_QWORD *)v44 - 2);
    v89 = v47;
    v90 = v48;
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_64_7();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_64_7();
    sub_242A9DC90();
    v83 = v49;
    OUTLINED_FUNCTION_30_18();
    swift_isUniquelyReferenced_nonNull_native();
    v88 = v12;
    v85 = v45;
    v50 = sub_242A61310(v45, v46);
    if (__OFADD__(v12[2], (v51 & 1) == 0))
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v52 = v50;
    v53 = v51;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226270);
    if ((sub_242C48EF0() & 1) != 0)
    {
      v54 = sub_242A61310(v85, v46);
      if ((v53 & 1) != (v55 & 1))
        goto LABEL_69;
      v52 = v54;
    }
    v12 = v88;
    if ((v53 & 1) != 0)
    {
      v56 = v88[7];

      *(_QWORD *)(v56 + 8 * v52) = v83;
    }
    else
    {
      v88[(v52 >> 6) + 8] |= 1 << v52;
      v57 = (uint64_t *)(v12[6] + 16 * v52);
      *v57 = v85;
      v57[1] = v46;
      *(_QWORD *)(v12[7] + 8 * v52) = v83;
      v58 = v12[2];
      v41 = __OFADD__(v58, 1);
      v59 = v58 + 1;
      if (v41)
        goto LABEL_64;
      v12[2] = v59;
      OUTLINED_FUNCTION_69();
    }
    v44 += 40;
    OUTLINED_FUNCTION_49();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_18();
    v43 = v82 - 1;
    if (v82 != 1)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_52:
  v60 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(a7 + 16))
  {
    v88 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_242C48D7C();
    v61 = *(_QWORD *)(a7 + 48);
    v62 = *(unsigned __int8 *)(a7 + 56);
    v63 = *(_QWORD *)(v61 + 16);
    if (v63)
    {
      v86 = v60;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_32_0();
      sub_242C48D7C();
      v64 = v61 + 32;
      do
      {
        v64 += 8;
        sub_242C4877C();
        sub_242C48D4C();
        sub_242C48D88();
        sub_242C48D94();
        sub_242C48D64();
        --v63;
      }
      while (v63);
    }
    else
    {
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_32_0();
    }
    __asm { BR              X8 }
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v66 = (void *)sub_242C48224();
  v67 = (void *)sub_242C48080();
  v68 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_9_9(v68, &qword_257226278);
  v69 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v70 = sub_242A56808(a9, (uint64_t)&v88);
  v71 = 0;
  if ((v93 & 1) == 0)
  {
    v72 = v91;
    v73 = v92;
    OUTLINED_FUNCTION_9_9(v70, &qword_257226258);
    v74 = OUTLINED_FUNCTION_33_13();
    if (((v73 | v72) & 0x8000000000000000) == 0)
    {
      v71 = sub_242AFD7E0(v74, v75, v72, v73);
      goto LABEL_62;
    }
LABEL_68:
    __break(1u);
    JUMPOUT(0x242AFF1A8);
  }
LABEL_62:

  OUTLINED_FUNCTION_6_12();
}

id sub_242AFF22C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_242A8AA58(0, &qword_257226268);
  v1 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithValues_, v1);

  return v2;
}

_QWORD *sub_242AFF2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[33];

  v4 = v2;
  if (*(_QWORD *)(a1 + 88) >> 62)
  {
    OUTLINED_FUNCTION_55_7();
    sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 152) >> 62)
  {
    OUTLINED_FUNCTION_55_7();
    sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_56_6();
  sub_242A5DA94();
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
  sub_242A5DC64();
  v8 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v8 + 16) = v7 + 1;
  sub_242A670D8(a1, v8 + 240 * v7 + 32);
  swift_endAccess();
  OUTLINED_FUNCTION_56_6();
  OUTLINED_FUNCTION_37_0();
  sub_242A5DA70();
  v9 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16);
  sub_242A5DDD8();
  v10 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v10 + 16) = v9 + 1;
  *(_QWORD *)(v10 + 8 * v9 + 32) = a2;
  swift_endAccess();
  sub_242AFD868(v26);
  v11 = v26[15];
  sub_242C480E0();
  sub_242A6945C(v26);
  v12 = *(_QWORD *)(v11 + 16);
  v26[32] = v11;
  if (v12)
  {
    v13 = (uint64_t *)(v11 + 40);
    while (1)
    {
      v14 = *(v13 - 1);
      v15 = *v13;
      swift_getObjectType();
      if (!dynamic_cast_existential_1_conditional(v14))
      {
        swift_unknownObjectRetain();
        OUTLINED_FUNCTION_97_2();
        ObjectType = swift_getObjectType();
        v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(ObjectType, v15);
        v23 = v22;
        sub_242B00DA8();
        swift_allocError();
        *(_QWORD *)v24 = v21;
        *(_QWORD *)(v24 + 8) = v23;
        *(_QWORD *)(v24 + 16) = 0;
        *(_QWORD *)(v24 + 24) = 0;
        *(_BYTE *)(v24 + 32) = 0;
        swift_willThrow();
        goto LABEL_13;
      }
      v17 = v16;
      v18 = swift_getObjectType();
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
      swift_unknownObjectRetain_n();
      v19(v4, v18, v17);
      if (v3)
        break;
      swift_unknownObjectRelease_n();
      v13 += 2;
      if (!--v12)
        goto LABEL_10;
    }
    OUTLINED_FUNCTION_97_2();
    swift_unknownObjectRelease();
LABEL_13:
    swift_unknownObjectRelease();
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_97_2();
  }
  return sub_242AFF4FC();
}

_QWORD *sub_242AFF4FC()
{
  _QWORD v1[30];

  swift_beginAccess();
  sub_242A9B810();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_242A9B874(v1);
  swift_endAccess();
  return sub_242A6945C(v1);
}

uint64_t sub_242AFF588(unsigned __int8 a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *inited;
  __n128 *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v13 = *a8;
  HIDWORD(v57) = *((unsigned __int8 *)a8 + 8);
  v14 = sub_242B2A0E8(a1);
  v66 = v15;
  v70 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
  inited = (__n128 *)swift_initStackObject();
  v17 = OUTLINED_FUNCTION_46_11(inited, (__n128)xmmword_242C4B7F0);
  v17[3].n128_u64[0] = a2;
  v17[3].n128_u64[1] = a3;
  v17[4].n128_u64[0] = 121;
  v17[4].n128_u64[1] = v18;
  v17[5].n128_u64[0] = a4;
  v17[5].n128_u64[1] = a5;
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_28_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v19 = MEMORY[0x24BEE4AF8];
  v74 = OUTLINED_FUNCTION_22_17();
  sub_242A5B0E8((uint64_t)inited, v20, v21, v22, v23, v24, v25, v26, v51, v54, v57, a6, a7, v66, v70, a9, v73);
  v28 = v27;
  v29 = OUTLINED_FUNCTION_80();
  sub_242A5D488(v29, v30, v31, v32, v33, v34, v35, v36, v52, v55, v58, v61, v64, v67);
  v37 = v74;
  v75 = OUTLINED_FUNCTION_22_17();
  sub_242A5D5BC();
  v38 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v39 + 32) = v62;
  *(_QWORD *)(v39 + 40) = v65;
  *(_QWORD *)(v39 + 48) = v13;
  *(_BYTE *)(v39 + 56) = BYTE4(v59);
  sub_242C480E0();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_22_17();
  v40 = OUTLINED_FUNCTION_83_3();
  v41 = OUTLINED_FUNCTION_136();
  sub_242A5D034(v41, v42, v43, v44, v45, v46, v47, v48, v53, v56, v59, v62, v65, v68);
  sub_242AFE8B8(v71, v69, v28, v37, v38, v75, v40, v49, v72);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_3_6();
  return OUTLINED_FUNCTION_34();
}

void sub_242AFF74C(unsigned __int8 a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *inited;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;

  v9 = *a6;
  HIDWORD(v58) = *((unsigned __int8 *)a6 + 8);
  v10 = sub_242B2A180(a1);
  v63 = v11;
  v65 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
  inited = (__n128 *)swift_initStackObject();
  v13 = OUTLINED_FUNCTION_46_11(inited, (__n128)xmmword_242C4B7D0);
  v13[3].n128_u64[0] = a2;
  v13[3].n128_u64[1] = a3;
  OUTLINED_FUNCTION_28_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v14 = MEMORY[0x24BEE4AF8];
  v68 = OUTLINED_FUNCTION_21_19();
  sub_242A5B0E8((uint64_t)inited, v15, v16, v17, v18, v19, v20, v21, v46, a5, 1, 2, v55, v58, a4, v63, v65);
  v23 = v22;
  v24 = OUTLINED_FUNCTION_34();
  sub_242A5D488(v24, v25, v26, v27, v28, v29, v30, v31, v47, v50, v52, v54, v56, v59);
  v32 = v23;
  v33 = v68;
  v69 = OUTLINED_FUNCTION_21_19();
  sub_242A5D5BC();
  v34 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = v53;
  *(_QWORD *)(v35 + 32) = v62;
  *(_QWORD *)(v35 + 40) = v51;
  *(_QWORD *)(v35 + 48) = v9;
  *(_BYTE *)(v35 + 56) = BYTE4(v60);
  sub_242C480E0();
  sub_242C480E0();
  OUTLINED_FUNCTION_21_19();
  v36 = OUTLINED_FUNCTION_83_3();
  v37 = OUTLINED_FUNCTION_136();
  sub_242A5D034(v37, v38, v39, v40, v41, v42, v43, v44, v48, v51, v53, *((uint64_t *)&v53 + 1), v57, v60);
  sub_242AFE8B8(v66, v64, v32, v33, v34, v69, v36, v45, a7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_6_12();
}

uint64_t sub_242AFF8E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6;
  int v7;
  __n128 *inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = *a4;
  v7 = *((unsigned __int8 *)a4 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_46_11(inited, (__n128)xmmword_242C4B7D0)[3].n128_u64[0] = a1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v56 = sub_242C480BC();
  v9 = sub_242A5A5CC((uint64_t)inited);
  v10 = OUTLINED_FUNCTION_136();
  sub_242A5CDDC(v10);
  v11 = v56;
  v44 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v12 + 32) = 0x6570797464;
  *(_QWORD *)(v12 + 40) = 0xE500000000000000;
  v13 = v7 - 2;
  if ((v7 - 2) < 0xB && ((0x543u >> v13) & 1) != 0)
  {
    v14 = v12;
    v15 = *(_QWORD *)&aInt32_1[8 * v13];
    v16 = qword_242C54830[v13];
    *(_QWORD *)(v12 + 48) = v15;
    *(_QWORD *)(v12 + 56) = v16;
    *(_BYTE *)(v12 + 64) = 4;
    v57 = OUTLINED_FUNCTION_58_6();
    sub_242A5AFE0(v14, v17, v18, v19, v20, v21, v22, v23, v38, v40, v42, v44, a2, a3, a5, v53, 1, 2, v55);
    v25 = v24;
    OUTLINED_FUNCTION_4_0();
    sub_242A5D5BC();
    v26 = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = v54;
    *(_QWORD *)(v27 + 32) = v48;
    *(_QWORD *)(v27 + 40) = v50;
    *(_QWORD *)(v27 + 48) = v6;
    *(_BYTE *)(v27 + 56) = v7;
    sub_242C480E0();
    OUTLINED_FUNCTION_37_0();
    v58 = OUTLINED_FUNCTION_58_6();
    v28 = OUTLINED_FUNCTION_83_3();
    v29 = OUTLINED_FUNCTION_136();
    sub_242A5D034(v29, v30, v31, v32, v33, v34, v35, v36, v39, v41, v43, v45, v48, v50);
    sub_242AFE700(1953718627, 0xE400000000000000, v46, v11, v25, v26, v28, v58, v52);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_3_6();
    return OUTLINED_FUNCTION_34();
  }
  else
  {
    result = OUTLINED_FUNCTION_66_7();
    __break(1u);
  }
  return result;
}

uint64_t sub_242AFFB68(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v13;
  char v14;
  _BYTE v15[57];
  char v16;

  v9 = *(_QWORD *)a5;
  v10 = *(_BYTE *)(a5 + 8);
  *(_QWORD *)v15 = a3;
  *(_QWORD *)&v15[8] = a4;
  sub_242C480E0();
  sub_242C48314();
  v11 = *(_OWORD *)v15;
  LOBYTE(v13) = v10;
  memset(v15, 0, sizeof(v15));
  v16 = 1;
  sub_242AFE2DC((uint64_t)&v13);
  v13 = v9;
  v14 = v10;
  sub_242AFF588(2u, a1, a2, v11, *((unint64_t *)&v11 + 1), a3, a4, &v13, (uint64_t)v15);
  return OUTLINED_FUNCTION_18_24();
}

void sub_242AFFC50()
{
  void *Strong;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  sub_242AFDA90();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  v4 = (id)sub_242C4853C();
  OUTLINED_FUNCTION_3_6();
  objc_msgSend(Strong, sel_retainOutputsWithNames_, v4);

}

uint64_t sub_242AFFCF0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  unint64_t v7;

  if (a3 >> 62)
  {
    if (a3 >> 62 == 1)
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_63_8();
      OUTLINED_FUNCTION_69_5();
      OUTLINED_FUNCTION_98_2();
      sub_242A62594(a2, a3);
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_63_8();
      OUTLINED_FUNCTION_69_5();
      OUTLINED_FUNCTION_98_2();
      OUTLINED_FUNCTION_136();
      sub_242C4934C();
      OUTLINED_FUNCTION_63_7();
      return sub_242A62594(v6, v7);
    }
  }
  else
  {
    sub_242B89308();
    return sub_242C4934C();
  }
}

uint64_t sub_242AFFDE4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  if (!(a2 >> 62))
  {
    if (a5 >> 62)
      goto LABEL_22;
    v30 = sub_242B89308();
    v31 = v30 == sub_242B89308();
LABEL_27:
    v29 = v31;
    return v29 & 1;
  }
  if (a2 >> 62 != 1)
  {
    if (a5 >> 62 != 2)
      goto LABEL_22;
    v32 = OUTLINED_FUNCTION_57_10();
    v33 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
    OUTLINED_FUNCTION_48_13();
    v34 = v33(v32, v6);
    v36 = v35;
    v38 = v37;
    ObjectType = swift_getObjectType();
    if (v34 != OUTLINED_FUNCTION_76_5(ObjectType, v40, v41, v42, v43, v44, v45, v46, v52, v55))
    {
      OUTLINED_FUNCTION_25_17();
      OUTLINED_FUNCTION_136();
      goto LABEL_22;
    }
    if (v36 == v47 && v38 == v48)
    {
      sub_242A62594(a4, a5);
      sub_242A62594(a1, a2);
      OUTLINED_FUNCTION_49();
    }
    else
    {
      v50 = sub_242C4925C();
      OUTLINED_FUNCTION_25_17();
      OUTLINED_FUNCTION_136();
      v29 = 0;
      if ((v50 & 1) == 0)
        return v29 & 1;
    }
    v31 = a3 == a6;
    goto LABEL_27;
  }
  if (a5 >> 62 != 1)
  {
LABEL_22:
    v29 = 0;
    return v29 & 1;
  }
  v13 = OUTLINED_FUNCTION_57_10();
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  OUTLINED_FUNCTION_48_13();
  LODWORD(v13) = v14(v13, v6);
  v53 = v15;
  v17 = v16;
  v18 = swift_getObjectType();
  if ((_DWORD)v13 != OUTLINED_FUNCTION_76_5(v18, v19, v20, v21, v22, v23, v24, v25, v53, v55))
  {
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_41_15();
    goto LABEL_22;
  }
  if (v54 == v26 && v17 == v27)
    v29 = 1;
  else
    v29 = sub_242C4925C();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_41_15();
  return v29 & 1;
}

void sub_242AFFFE4(uint64_t a1, unint64_t a2)
{
  sub_242C49340();
  if (a2 >> 62)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_63_8();
    OUTLINED_FUNCTION_31_20();
    OUTLINED_FUNCTION_153();
    if (a2 >> 62 == 1)
    {
      sub_242A62594(a1, a2);
      OUTLINED_FUNCTION_136();
    }
    else
    {
      OUTLINED_FUNCTION_136();
      sub_242C4934C();
      sub_242A62594(a1, a2);
    }
  }
  else
  {
    sub_242B89308();
    sub_242C4934C();
  }
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_42_12();
}

void sub_242B000C0()
{
  uint64_t v0;

  sub_242AFFFE4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_242B000CC(uint64_t a1)
{
  uint64_t v1;

  return sub_242AFFCF0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

void sub_242B000D8()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_242C49340();
  if (v1 >> 62)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_78_3();
    OUTLINED_FUNCTION_31_20();
    OUTLINED_FUNCTION_153();
    if (v1 >> 62 == 1)
    {
      OUTLINED_FUNCTION_77_5();
      OUTLINED_FUNCTION_136();
    }
    else
    {
      OUTLINED_FUNCTION_136();
      sub_242C4934C();
      OUTLINED_FUNCTION_77_5();
    }
  }
  else
  {
    sub_242B89308();
    sub_242C4934C();
  }
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_42_12();
}

uint64_t sub_242B00184(uint64_t a1, uint64_t a2)
{
  return sub_242AFFDE4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

_BYTE *sub_242B001A0(_QWORD *a1, char a2, char a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;

  v5 = v4;
  sub_242A670D8((uint64_t)a1, (uint64_t)(v5 + 16));
  v5[314] = a2;
  v5[315] = a3;
  sub_242A56808(a4, (uint64_t)(v5 + 256));
  LOBYTE(a4) = sub_242B00218(a2);
  sub_242A6945C(a1);
  v5[316] = a4;
  return v5;
}

uint64_t sub_242B00218(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t ObjectType;
  unsigned int v21;

  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_39();
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v6 = 32;
    do
    {
      v7 = *(_QWORD *)(v3 + v6);
      swift_getObjectType();
      v8 = dynamic_cast_existential_1_conditional(v7);
      if (v8)
      {
        v10 = v8;
        v11 = v9;
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_92_2();
          v5 = v14;
        }
        v12 = v5[2];
        if (v12 >= v5[3] >> 1)
        {
          OUTLINED_FUNCTION_92_2();
          v5 = v15;
        }
        v5[2] = v12 + 1;
        v13 = &v5[2 * v12];
        v13[4] = v10;
        v13[5] = v11;
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    OUTLINED_FUNCTION_49();
  }
  else
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = v5[2];
  if (v16)
  {
    LOBYTE(v17) = 0;
    v18 = v5 + 5;
    do
    {
      v19 = *v18;
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      v21 = sub_242B55188(a1 & 1, ObjectType, v19);
      swift_unknownObjectRelease();
      if (v17 <= v21)
        v17 = v21;
      else
        v17 = v17;
      v18 += 2;
      --v16;
    }
    while (v16);
  }
  else
  {
    v17 = 0;
  }
  OUTLINED_FUNCTION_4_0();
  return v17;
}

void sub_242B0039C(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_242B003F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  id v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD v46[43];

  sub_242A8AA58(0, &qword_257226248);
  sub_242B007B0(0x3631736F69, v1, (SEL *)&selRef_initWithOpsetName_);
  v6 = v5;
  v7 = 0;
  v8 = *(_QWORD **)(v4 - 72);
  v42 = v8[33];
  v44 = v8[32];
  v9 = v8[35];
  v40 = v8[34];
  v10 = v8[36];
  v11 = *v3;
  if ((*v3 & 1) == 0)
  {
    sub_242A8AA58(0, &qword_257226258);
    v12 = sub_242B7CD20(v44, v42, v40);
    if ((v10 | v9) < 0)
    {
      __break(1u);
      goto LABEL_18;
    }
    v7 = sub_242AFD7E0(v12, v13, v9, v10);
  }
  sub_242A8AA58(0, &qword_257226250);
  v39 = v6;
  v14 = sub_242B0080C(v39, v7);
  v15 = (void *)sub_242C48224();
  v16 = 0;
  if ((v11 & 1) != 0)
    goto LABEL_7;
  sub_242A8AA58(0, &qword_257226258);
  v17 = sub_242B7CD20(v44, v42, v40);
  if ((v10 | v9) < 0)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x242B007A0);
  }
  v16 = sub_242AFD7E0(v17, v18, v9, v10);
LABEL_7:
  v45 = v2;
  v19 = objc_msgSend(v14, sel_functionWithName_location_, v15, v16);

  v20 = *(_QWORD *)(v4 - 72);
  sub_242A670D8(v20 + 16, (uint64_t)v46);
  v21 = v3[1];
  v22 = v3[2];
  type metadata accessor for MILFunctionBuilder();
  swift_allocObject();
  v23 = v19;
  v24 = sub_242AFD928(v46, v23, v21, v22);
  v25 = *(_QWORD *)(*(_QWORD *)(v20 + 136) + 16);
  if (v25)
  {
    v41 = v23;
    v43 = v14;
    v26 = (uint64_t *)(sub_242C480E0() + 40);
    while (1)
    {
      v28 = *(v26 - 1);
      v27 = *v26;
      swift_getObjectType();
      if (!dynamic_cast_existential_1_conditional(v28))
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        ObjectType = swift_getObjectType();
        v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(ObjectType, v27);
        v37 = v36;
        sub_242B00DA8();
        swift_allocError();
        *(_QWORD *)v38 = v35;
        *(_QWORD *)(v38 + 8) = v37;
        *(_QWORD *)(v38 + 16) = 0;
        *(_QWORD *)(v38 + 24) = 0;
        *(_BYTE *)(v38 + 32) = 0;
        swift_willThrow();
        goto LABEL_16;
      }
      v30 = v29;
      v31 = swift_getObjectType();
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
      swift_unknownObjectRetain_n();
      v32(v24, v31, v30);
      if (v0)
        break;
      swift_unknownObjectRelease_n();
      v26 += 2;
      if (!--v25)
      {
        swift_bridgeObjectRelease();
        v23 = v41;
        v14 = v43;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_16:
    swift_unknownObjectRelease();

    swift_release();
  }
  else
  {
LABEL_13:
    sub_242B00864(v24);
    sub_242B00AB8();
    v33 = objc_msgSend(v14, sel_build);

    swift_release();
    *v45 = v33;
  }
}

void sub_242B007B0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  void *v5;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)OUTLINED_FUNCTION_5_38();
  OUTLINED_FUNCTION_34();
  objc_msgSend(v4, *a3, v5);

  OUTLINED_FUNCTION_9();
}

id sub_242B0080C(void *a1, void *a2)
{
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_location_, a1, a2);

  return v4;
}

uint64_t sub_242B00864(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v3 = v1[13];
  if (v3 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_242C480E0();
  if (!v4)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = v2[15];
    v7 = v2[16];
    swift_beginAccess();
    v8 = 0;
    v31 = v6 + 32;
    v32 = v6;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x2494EC84C](v8, v3);
      }
      else
      {
        v9 = *(_QWORD *)(v3 + 8 * v8 + 32);
        swift_retain();
      }
      sub_242BC9724();
      if (*(_QWORD *)(v7 + 16) && (v12 = sub_242A61310(v10, v11), (v13 & 1) != 0))
      {
        v14 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v12);
        if ((v14 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          sub_242C480E0();
          result = sub_242C48FC8();
          v4 = result;
          if (!result)
            return swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        if (v14 >= *(_QWORD *)(v32 + 16))
          goto LABEL_25;
        v15 = (uint64_t *)(v31 + 16 * v14);
        v17 = *v15;
        v16 = v15[1];
      }
      else
      {
        swift_bridgeObjectRelease();
        v18 = v2[19];
        v19 = v2[20];
        sub_242BC9724();
        if (!*(_QWORD *)(v19 + 16) || (v22 = sub_242A61310(v20, v21), (v23 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          sub_242BC9724();
          v17 = v26;
          v16 = v27;
          goto LABEL_20;
        }
        v24 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v22);
        if ((v24 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v24 >= *(_QWORD *)(v18 + 16))
          goto LABEL_27;
        v25 = v18 + 16 * v24;
        v17 = *(_QWORD *)(v25 + 32);
        v16 = *(_QWORD *)(v25 + 40);
      }
      sub_242C480E0();
      swift_bridgeObjectRelease();
LABEL_20:
      v28 = *(_QWORD *)(a1 + 40);
      sub_242C480E0();
      sub_242AFCE44(v17, v16, v28);
      v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
        sub_242AFDD78(v9);
      ++v8;
      swift_release();
      if (v4 == v8)
        return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_242B00AB8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;

  v1 = *(_QWORD *)(v0 + 168);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_242C480E0();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_242C480E0();
  result = sub_242C48FC8();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](i, v1);
      else
        swift_retain();
      sub_242AFFC50();
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_242B00B8C()
{
  uint64_t v0;

  sub_242A6945C((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MILProgramBuilder()
{
  return objc_opt_self();
}

uint64_t destroy for MILFunctionBuilder.AliasedIdentity(uint64_t a1)
{
  return sub_242A62594(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

void _s14NeuralNetworks18MILFunctionBuilderC15AliasedIdentityOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_242A625B8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  OUTLINED_FUNCTION_9();
}

uint64_t *assignWithCopy for MILFunctionBuilder.AliasedIdentity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_242A625B8(*a2, v4);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_242A62594(v6, v7);
  return a1;
}

uint64_t *assignWithTake for MILFunctionBuilder.AliasedIdentity(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_242A62594(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MILFunctionBuilder.AliasedIdentity(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 57) >> 5) | (4
                                                              * ((*(_QWORD *)(a1 + 8) >> 57) & 0x18 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for MILFunctionBuilder.AliasedIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_242B00D64(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 62;
}

uint64_t sub_242B00D70(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_242B00D80(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for MILFunctionBuilder.AliasedIdentity()
{
  return &type metadata for MILFunctionBuilder.AliasedIdentity;
}

unint64_t sub_242B00DA8()
{
  unint64_t result;

  result = qword_257226238;
  if (!qword_257226238)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5470C, &type metadata for MILEncodingError);
    atomic_store(result, (unint64_t *)&qword_257226238);
  }
  return result;
}

void sub_242B00DE4()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_242B0107C(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_242B00E24()
{
  sub_242C48C38();
  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_19_21();
  sub_242C48314();
  return 0;
}

void sub_242B00FFC()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_242B0107C(v0, (uint64_t)v1);
  sub_242B00DE4();
}

unint64_t sub_242B01040()
{
  unint64_t result;

  result = qword_257226240;
  if (!qword_257226240)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5474C, &type metadata for MILFunctionBuilder.AliasedIdentity);
    atomic_store(result, (unint64_t *)&qword_257226240);
  }
  return result;
}

uint64_t sub_242B0107C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_242B01094(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  void *v5;
  id v6;

  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v4 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v2, sel_initWithShape_dataType_name_, v4, a2, v5);

  return v6;
}

uint64_t sub_242B01140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_242B01188(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222958);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_242B011C8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_242AFE114(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 56), a2);
}

void sub_242B011E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD v28[30];

  OUTLINED_FUNCTION_0_3();
  v9 = sub_242C2F2E0(*(_QWORD *)(a3 + 56));
  if (v9
    && (v12 = v9,
        v13 = swift_unknownObjectRetain(),
        sub_242A9E814(v13, a5 | 0x8000000000000000, a2, v12),
        v15 = v14,
        swift_unknownObjectRelease(),
        v9 = OUTLINED_FUNCTION_80(),
        v15))
  {
    if (*(_BYTE *)(a3 + 73) == 1)
    {
      OUTLINED_FUNCTION_0_49();
      OUTLINED_FUNCTION_24_20();
      if (v16)
      {
        OUTLINED_FUNCTION_40_12();
        do
        {
          OUTLINED_FUNCTION_80_6();
          if (!v17)
            OUTLINED_FUNCTION_86_2();
          OUTLINED_FUNCTION_61_7();
          if ((v18 & 1) == 0)
            OUTLINED_FUNCTION_72_5();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_24_20();
        }
        while (v19);
      }
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_34();
    }
  }
  else
  {
    OUTLINED_FUNCTION_100_1(v9, v10, v11);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 72))(a2, a4, a5);
    v22 = v21;
    sub_242C480E0();
    sub_242A8D4C8(v20, v22, v28[17], v28[18]);
    v24 = v23;
    OUTLINED_FUNCTION_4_0();
    if (v24)
      OUTLINED_FUNCTION_4_0();
    sub_242A6945C(v28);
    if (*(_BYTE *)(a3 + 73) == 1)
    {
      OUTLINED_FUNCTION_0_49();
      OUTLINED_FUNCTION_24_20();
      if (v25)
      {
        OUTLINED_FUNCTION_40_12();
        do
        {
          OUTLINED_FUNCTION_80_6();
          if (!v17)
            OUTLINED_FUNCTION_85_3();
          OUTLINED_FUNCTION_62_7();
          if ((v26 & 1) == 0)
            OUTLINED_FUNCTION_73_7();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_24_20();
        }
        while (v27);
      }
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_136();
    }
  }
  OUTLINED_FUNCTION_37_15();
}

uint64_t sub_242B013F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  result = a2;
  if (a5 - 1 < 4)
  {
    sub_242C480E0();
    return sub_242C480E0();
  }
  if (!a5)
    return sub_242C480E0();
  return result;
}

uint64_t destroy for MILEncodingError(uint64_t a1)
{
  return sub_242B01450(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_242B01450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  result = a2;
  if (a5 - 1 < 4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a5)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for MILEncodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_242B013F8(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MILEncodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_242B013F8(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_242B01450(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MILEncodingError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_242B01450(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MILEncodingError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MILEncodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_242B01648(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_242B01650(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MILEncodingError()
{
  return &type metadata for MILEncodingError;
}

uint64_t OUTLINED_FUNCTION_0_49()
{
  return swift_bridgeObjectRetain_n();
}

id OUTLINED_FUNCTION_1_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_242AFD7E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_2_44()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A56808(v0, v1 - 160);
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  return sub_242C48224();
}

unint64_t OUTLINED_FUNCTION_6_36()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  return sub_242B7CD20(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_15_21()
{
  return sub_242C4853C();
}

uint64_t OUTLINED_FUNCTION_16_19()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_17_20()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_18_24()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_21()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_21_19()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_22_17()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_24_20()
{
  return sub_242C48338();
}

uint64_t OUTLINED_FUNCTION_25_17()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_242A62594(v2, v3);
  sub_242A62594(v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_19()
{
  return swift_unknownObjectUnownedLoadStrong();
}

uint64_t OUTLINED_FUNCTION_30_18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_242A62618(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_31_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

unint64_t OUTLINED_FUNCTION_33_13()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  return sub_242B7CD20(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_34_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 32) = a1;
  *(_QWORD *)(v2 - 160) = v1;
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_35_13()
{
  return sub_242C48314();
}

id OUTLINED_FUNCTION_39_12(id a1, SEL a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return objc_msgSend(a1, a2, a3, a4, v5, v4);
}

uint64_t OUTLINED_FUNCTION_41_15()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_242A62594(v2, v3);
  return sub_242A62594(v1, v0);
}

uint64_t OUTLINED_FUNCTION_44_10()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + 16 * v1);
}

__n128 *OUTLINED_FUNCTION_46_11(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 120;
  result[2].n128_u64[1] = 0xE100000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_47_12()
{
  return sub_242C49340();
}

uint64_t OUTLINED_FUNCTION_48_13()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_242A625B8(v1, v0);
  return sub_242A625B8(v2, v3);
}

id OUTLINED_FUNCTION_51_12(id a1, SEL a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return objc_msgSend(a1, a2, a3, a4, a5, v6, v5);
}

uint64_t OUTLINED_FUNCTION_53_7()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_55_7()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_56_6()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_57_10()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_58_6()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_60_6()
{
  return sub_242C49334();
}

void OUTLINED_FUNCTION_61_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242AFCEF0(v1, v0, *(_QWORD *)(v2 + 144));
}

void OUTLINED_FUNCTION_62_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242AFCEF0(v1, v0, *(_QWORD *)(v2 + 144));
}

uint64_t OUTLINED_FUNCTION_63_8()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_64_7()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_242A625DC(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_65_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_66_7()
{
  return sub_242C48F5C();
}

void OUTLINED_FUNCTION_67_7(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242AFDF04(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

double OUTLINED_FUNCTION_70_7()
{
  return 0.0;
}

void OUTLINED_FUNCTION_72_5()
{
  JUMPOUT(0x2494EBEA4);
}

void OUTLINED_FUNCTION_73_7()
{
  JUMPOUT(0x2494EBEA4);
}

id OUTLINED_FUNCTION_74_5(__n128 *a1, __n128 a2)
{
  Class *v2;

  a1[1] = a2;
  return objc_allocWithZone(*v2);
}

uint64_t OUTLINED_FUNCTION_76_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(a1, a10);
}

uint64_t OUTLINED_FUNCTION_77_5()
{
  uint64_t v0;
  unint64_t v1;

  return sub_242A62594(v0, v1);
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return swift_unknownObjectRetain();
}

unint64_t OUTLINED_FUNCTION_79_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_242A8D4C8(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_83_3()
{
  uint64_t v0;

  return sub_242A5A760(v0);
}

uint64_t OUTLINED_FUNCTION_84_4()
{
  return sub_242C49034();
}

uint64_t OUTLINED_FUNCTION_85_3()
{
  return swift_once();
}

uint64_t OUTLINED_FUNCTION_86_2()
{
  return swift_once();
}

void OUTLINED_FUNCTION_87_2()
{
  sub_242BC9724();
}

void OUTLINED_FUNCTION_91_1()
{
  sub_242A5EBD4();
}

void OUTLINED_FUNCTION_92_2()
{
  sub_242A5E170();
}

uint64_t OUTLINED_FUNCTION_93_2(uint64_t a1, unint64_t *a2)
{
  return sub_242A8AA58(0, a2);
}

uint64_t OUTLINED_FUNCTION_94_2()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_96_2(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return sub_242C4817C();
}

uint64_t OUTLINED_FUNCTION_100_1(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_242AFD868(va);
}

uint64_t sub_242B01BC8()
{
  _QWORD *v0;
  uint64_t v1;

  if (v0[15])
  {
    v1 = v0[15];
  }
  else
  {
    v1 = (*(uint64_t (**)(void))(*v0 + 200))();
    v0[15] = v1;
    sub_242C480E0();
    swift_bridgeObjectRelease();
  }
  sub_242C480E0();
  return v1;
}

void sub_242B01C28()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = OUTLINED_FUNCTION_20_13();
  if (v2 <= 1)
  {
LABEL_5:
    OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_3_20();
  }
  if ((unsigned __int128)(*(uint64_t *)(v1 + 40) * (__int128)*(uint64_t *)(v0 + 112)) >> 64 != (uint64_t)(*(_QWORD *)(v1 + 40) * *(_QWORD *)(v0 + 112)) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_13_14();
}

void sub_242B01C90()
{
  OUTLINED_FUNCTION_25_18();
}

uint64_t sub_242B01CA0()
{
  return OUTLINED_FUNCTION_9_30(0x6432766E6F63);
}

uint64_t sub_242B01CB0()
{
  return OUTLINED_FUNCTION_8_23();
}

unint64_t sub_242B01CC0()
{
  return 0xD000000000000013;
}

void sub_242B01CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_21_1();
}

void sub_242B01D38(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v16;
  char v17;

  v16 = *a8;
  v17 = *((_BYTE *)a8 + 8);
  if (!a3)
    a1 = sub_242BD0204(0x6C756D74616DLL, 0xE600000000000000);
  *(_DWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  *(_QWORD *)(v11 + 48) = a6;
  *(_BYTE *)(v11 + 56) = a5 & 1;
  *(_BYTE *)(v11 + 57) = a7 & 1;
  *(_QWORD *)(v11 + 64) = v16;
  *(_BYTE *)(v11 + 72) = v17;
  *(_QWORD *)(v11 + 80) = a10;
  *(_QWORD *)(v11 + 88) = a11;
  sub_242A56808(a9, v11 + 96);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B01DCC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_11_26();
  swift_bridgeObjectRelease();
  sub_242A6549C(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t sub_242B01DFC()
{
  sub_242B01DCC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MatrixMultiplicationOperation()
{
  return objc_opt_self();
}

uint64_t OUTLINED_FUNCTION_144_2()
{
  return 0x6C756D74616DLL;
}

void sub_242B01E54()
{
  sub_242B01ED0();
}

void sub_242B01E6C()
{
  sub_242C4817C();
  sub_242C49358();
  sub_242C49358();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B01EAC()
{
  sub_242B01E6C();
}

void sub_242B01ED0()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_2_0() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B01F18(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v15;
  char v16;

  v15 = *a7;
  v16 = *((_BYTE *)a7 + 8);
  if (!a3)
    a1 = sub_242BD0204(0x7261656E696CLL, 0xE600000000000000);
  *(_DWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = v15;
  *(_BYTE *)(v10 + 72) = v16;
  *(_QWORD *)(v10 + 80) = a9;
  *(_QWORD *)(v10 + 88) = a10;
  sub_242A56808(a8, v10 + 96);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B01F98()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_23_20();
  swift_bridgeObjectRelease();
  sub_242A6549C(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t sub_242B01FCC()
{
  sub_242B01F98();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LinearOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B0200C()
{
  return 0x7261656E696CLL;
}

void sub_242B02020()
{
  sub_242B02404();
}

uint64_t sub_242B02034()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_242A6548C(v1);
  return v1;
}

void sub_242B02064()
{
  OUTLINED_FUNCTION_24_21();
  sub_242C4817C();
  OUTLINED_FUNCTION_12_22();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B0208C()
{
  sub_242B02064();
}

uint64_t sub_242B020AC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v3 = (__n128 *)OUTLINED_FUNCTION_2_0();
  if (v2)
  {
    v4 = OUTLINED_FUNCTION_21_20(v3, (__n128)xmmword_242C54890);
    v4[3].n128_u64[0] = v1;
    v4[3].n128_u64[1] = v2;
  }
  else
  {
    OUTLINED_FUNCTION_21_20(v3, (__n128)xmmword_242C4B7E0)[3].n128_u64[0] = v1;
  }
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_11();
  swift_retain();
  OUTLINED_FUNCTION_6();
  return v6;
}

void sub_242B02150(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  if (!a3)
    a1 = sub_242BD0204(0x675F7261656E696CLL, 0xEB00000000646172);
  *(_DWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a7;
  sub_242A56808(a8, v8 + 80);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v14 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7F0;
  v15 = *(_BYTE *)(a5 + 160);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(a5 + 152);
  *(_BYTE *)(v14 + 40) = v15;
  v16 = *(_BYTE *)(a6 + 160);
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(a6 + 152);
  *(_BYTE *)(v14 + 56) = v16;
  if (a7)
  {
    v17 = *(_QWORD *)(a7 + 152);
    v18 = *(_BYTE *)(a7 + 160);
    swift_retain_n();
    OUTLINED_FUNCTION_11();
    swift_retain();
    OUTLINED_FUNCTION_5();
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    sub_242A5DEF4();
    v14 = v19;
    *(_QWORD *)(v19 + 16) = 3;
    *(_QWORD *)(v19 + 64) = v17;
    *(_BYTE *)(v19 + 72) = v18;
    swift_release();
    swift_release();
    swift_release();
    swift_release_n();
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
  }
  *(_QWORD *)(v8 + 72) = v14;
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B022B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_23_20();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B022E8()
{
  sub_242B022B4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LinearGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B02328()
{
  return 0x675F7261656E696CLL;
}

uint64_t sub_242B0234C()
{
  return sub_242C480E0();
}

void sub_242B02354()
{
  OUTLINED_FUNCTION_24_21();
  sub_242C4817C();
  OUTLINED_FUNCTION_12_22();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B02388()
{
  sub_242B02354();
}

void sub_242B023A8()
{
  sub_242A59170();
}

void sub_242B02404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v2 = OUTLINED_FUNCTION_2_0();
  if (v1)
  {
    *(_OWORD *)(v2 + 16) = xmmword_242C4B7E0;
    v3 = v0[6];
    *(_QWORD *)(v2 + 32) = v0[5];
    *(_QWORD *)(v2 + 40) = v3;
    *(_QWORD *)(v2 + 48) = v1;
  }
  else
  {
    *(_OWORD *)(v2 + 16) = xmmword_242C4B7C0;
    v4 = v0[6];
    *(_QWORD *)(v2 + 32) = v0[5];
    *(_QWORD *)(v2 + 40) = v4;
  }
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_21_1();
}

void sub_242B02498()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_13();
  if (!v0)
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_3_20();
  }
  OUTLINED_FUNCTION_13_14();
}

uint64_t sub_242B024FC()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_20_13();
  if (v1 < 4)
  {
    OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_3_20();
  }
  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_242B02570(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  *(_DWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_QWORD *)(v12 + 56) = a6;
  *(_QWORD *)(v12 + 64) = a7;
  *(_QWORD *)(v12 + 72) = a8;
  *(_OWORD *)(v12 + 80) = a9;
  *(_OWORD *)(v12 + 96) = a10;
  *(_QWORD *)(v12 + 112) = a11;
  *(_QWORD *)(v12 + 120) = 0;
  sub_242A56808(a12, v12 + 128);
  return v12;
}

void sub_242B025B4()
{
  sub_242A59170();
}

uint64_t sub_242B02610()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 160))();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242B024FC();
  sub_242C4934C();
  sub_242B024FC();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C4934C();
  return sub_242C49358();
}

uint64_t sub_242B026D0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_23_20();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B026FC()
{
  sub_242B026D0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseConvolution2DOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B0273C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_242B02748()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

__n128 sub_242B02758@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 176);
  v3 = *(_BYTE *)(v1 + 184);
  v4 = *(_BYTE *)(v1 + 185);
  v5 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 160);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242B02784()
{
  return sub_242B02610();
}

uint64_t sub_242B027A4(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C54D40, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242B027E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_27_18();
  *(_QWORD *)(v12 + 208) = v23;
  *(_QWORD *)(v12 + 216) = v22;
  if (!v15)
  {
    *(_QWORD *)&a9 = v21;
    *((_QWORD *)&a9 + 1) = v20;
    v24 = v19;
    v25 = v18;
    v26 = v17;
    v27 = v16;
    v13 = sub_242BD0204(0x6432766E6F63, 0xE600000000000000);
    v20 = *((_QWORD *)&a9 + 1);
    v16 = v27;
    v17 = v26;
    v18 = v25;
    v19 = v24;
  }
  return OUTLINED_FUNCTION_0_50(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_242B0286C()
{
  sub_242B02A48();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Convolution2DOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B028AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  sub_242A6548C(v1);
  return v1;
}

#error "242B02924: call analysis failed (funcsize=16)"

uint64_t sub_242B02938()
{
  return swift_release();
}

uint64_t type metadata accessor for Convolution2DGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B02964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_27_18();
  *(_OWORD *)(v12 + 208) = v21;
  *(_QWORD *)(v12 + 224) = v23;
  *(_QWORD *)(v12 + 232) = v22;
  if (!v15)
  {
    v24 = OUTLINED_FUNCTION_8_23();
    *(_QWORD *)&a9 = v25;
    *((_QWORD *)&a9 + 1) = v26;
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v13 = sub_242BD0204(v24, v35);
    v20 = a9;
    v16 = v34;
    v17 = v32;
    v18 = v30;
    v19 = v28;
  }
  return OUTLINED_FUNCTION_0_50(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

void sub_242B029E4()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_2_0() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 192), *(_BYTE *)(v0 + 200));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242B02A2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_242A6549C(*(_QWORD *)(v0 + 208));
}

uint64_t sub_242B02A48()
{
  uint64_t v0;

  sub_242B026D0();
  swift_bridgeObjectRelease();
  sub_242A6549C(*(_QWORD *)(v0 + 208));
  return v0;
}

uint64_t sub_242B02A70()
{
  sub_242B02A48();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConvolutionTranspose2DOperation()
{
  return objc_opt_self();
}

void sub_242B02AB0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242B01ECC();
  if (v0 >> 62)
  {
    OUTLINED_FUNCTION_6();
    v1 = sub_242C48FC8();
  }
  else
  {
    v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_6();
  }
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    sub_242AD5DD0(v1 + 1, 0);
    sub_242C4856C();
    v2 = OUTLINED_FUNCTION_6();
    sub_242B648DC(v2);
    OUTLINED_FUNCTION_74();
    sub_242B64AC0();
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_1();
  }
}

#error "242B02BA8: call analysis failed (funcsize=18)"

uint64_t sub_242B02BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_10_25();
  v37 = v36;
  v38 = a21;
  *(_QWORD *)(v29 + 192) = v39;
  if (!v32)
  {
    *(_QWORD *)&a9 = a21;
    *((_QWORD *)&a9 + 1) = v37;
    v40 = v35;
    v41 = v34;
    v42 = v33;
    v30 = sub_242BD0204(a28, a29);
    v38 = a21;
    v37 = *((_QWORD *)&a9 + 1);
    v33 = v42;
    v34 = v41;
    v35 = v40;
  }
  return OUTLINED_FUNCTION_0_50(v30, v31, v32, v33, v34, v35, v37, v38, a9, a10, a11, a12);
}

uint64_t sub_242B02C3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7F0;
  v2 = v0[5];
  v3 = v0[6];
  v4 = *(_QWORD *)(v2 + 152);
  LOBYTE(v2) = *(_BYTE *)(v2 + 160);
  *(_QWORD *)(v1 + 32) = v4;
  *(_BYTE *)(v1 + 40) = v2;
  LOBYTE(v2) = *(_BYTE *)(v3 + 160);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v3 + 152);
  *(_BYTE *)(v1 + 56) = v2;
  v5 = v0[7];
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + 152);
    v7 = *(_BYTE *)(v5 + 160);
    sub_242C480E0();
    OUTLINED_FUNCTION_74();
    swift_retain();
    sub_242C480E0();
    sub_242A5DEF4();
    v1 = v8;
    *(_QWORD *)(v8 + 16) = 3;
    *(_QWORD *)(v8 + 64) = v6;
    *(_BYTE *)(v8 + 72) = v7;
    swift_release();
  }
  else
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_74();
  }
  return v1;
}

uint64_t sub_242B02D14()
{
  sub_242B026D0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConvolutionTranspose2DGradientOperation()
{
  return objc_opt_self();
}

void sub_242B02D5C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221EC0, type metadata accessor for ConvolutionTranspose2DGradientOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02D98(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221EC8, type metadata accessor for ConvolutionTranspose2DOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02DD4(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221ED0, type metadata accessor for Convolution2DGradientOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02E10(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221ED8, type metadata accessor for Convolution2DOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02E4C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221EE0, type metadata accessor for LinearGradientOperation, (uint64_t)&unk_242C54C0C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02E88(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257226B18, type metadata accessor for LinearGradientOperation, (uint64_t)&unk_242C54BC8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02EC4(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221EE8, type metadata accessor for LinearOperation, (uint64_t)&unk_242C54D24);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02F00(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221F20, type metadata accessor for MatrixMultiplicationOperation, (uint64_t)&unk_242C54D08);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02F3C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257226B20, type metadata accessor for MatrixMultiplicationOperation, (uint64_t)&unk_242C54CA8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02F78(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257226B28, type metadata accessor for LinearOperation, (uint64_t)&unk_242C54C38);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02FB4(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257226B30, type metadata accessor for BaseConvolution2DOperation, (uint64_t)&unk_242C54B80);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B02FF0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2();
    atomic_store(MEMORY[0x2494EDE24](a3, v5), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t OUTLINED_FUNCTION_0_50(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12)
{
  return sub_242B02570(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_4_35()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_8_23()
{
  return 0x6172745F766E6F63;
}

uint64_t OUTLINED_FUNCTION_9_30(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x675F000000000000;
}

uint64_t OUTLINED_FUNCTION_11_26()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_12_22()
{
  return sub_242C49358();
}

uint64_t OUTLINED_FUNCTION_13_28()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_18()
{
  return swift_bridgeObjectRelease();
}

__n128 *OUTLINED_FUNCTION_21_20(__n128 *result, __n128 a2)
{
  uint64_t v2;
  unint64_t v3;

  result[1] = a2;
  v3 = *(_QWORD *)(v2 + 48);
  result[2].n128_u64[0] = *(_QWORD *)(v2 + 40);
  result[2].n128_u64[1] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_20()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_26_20@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_BYTE *)(v2 + 40) = a2;
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_27_18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *v0;
  v3 = *((_BYTE *)v0 + 8);
  *(_QWORD *)(v1 + 192) = v2;
  *(_BYTE *)(v1 + 200) = v3;
}

void sub_242B03154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 *v23;
  uint64_t ObjectType;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_16_20();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v7);
  if (!v8)
    goto LABEL_8;
  v10 = v8;
  v11 = v9;
  v12 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v12);
  v44 = v14;
  if (!v14)
  {
LABEL_7:
    OUTLINED_FUNCTION_145();
LABEL_8:
    sub_242A6A5B0();
    v22 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C54D60, v22, v23);
    goto LABEL_9;
  }
  v42 = v13;
  v43 = v11;
  v15 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v15);
  if (!v16)
  {
    OUTLINED_FUNCTION_145();
    goto LABEL_7;
  }
  v18 = v17;
  v41 = v16;
  if (*(_QWORD *)(v0 + 136))
  {
    v19 = sub_242B89308();
    OUTLINED_FUNCTION_13_13(v19);
    v39 = v20;
    v40 = v21;
  }
  else
  {
    if (*(float *)(v0 + 116) != 0.0)
    {
      sub_242A6A5B0();
      v35 = OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_0_30((__n128)xmmword_242C54D60, v35, v36);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_145();
      goto LABEL_9;
    }
    v39 = 0;
    v40 = 0;
  }
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, _DWORD *(*)@<X0>(_DWORD *@<X0>, _DWORD *@<X8>), _QWORD, _QWORD, uint64_t, uint64_t))(v18 + 56))(&v45, sub_242B0345C, 0, MEMORY[0x24BEE14E8], ObjectType, v18);
  v38 = v1;
  v25 = v45;
  sub_242C47930();
  v26 = OUTLINED_FUNCTION_0_51();
  MEMORY[0x24BDAC7A8](v26);
  *((_DWORD *)&v38 - 4) = v25;
  v27 = OUTLINED_FUNCTION_14_19((uint64_t)&v38);
  MEMORY[0x24BDAC7A8](v27);
  v28 = v42;
  *(&v38 - 8) = v44;
  *(&v38 - 7) = v28;
  v30 = v39;
  v29 = v40;
  *(&v38 - 6) = v2;
  *(&v38 - 5) = v30;
  *(&v38 - 4) = v29;
  *(&v38 - 3) = v3;
  *(&v38 - 2) = (uint64_t)sub_242B03ECC;
  *(&v38 - 1) = (uint64_t)(&v38 - 4);
  v31 = v38;
  sub_242BF6310((uint64_t)sub_242B03EE8, (uint64_t)(&v38 - 10), MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
  if (v31)
  {
    OUTLINED_FUNCTION_145();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_15_22();
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_37_10();
  }
  else
  {
    v32 = v40;
    OUTLINED_FUNCTION_15_22();
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_37_10();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v33 = OUTLINED_FUNCTION_2_0();
    if (v30)
    {
      *(_OWORD *)(v33 + 16) = xmmword_242C4B7F0;
      v34 = v43;
      *(_QWORD *)(v33 + 32) = v10;
      *(_QWORD *)(v33 + 40) = v34;
      *(_QWORD *)(v33 + 48) = v30;
      *(_QWORD *)(v33 + 56) = v32;
    }
    else
    {
      *(_OWORD *)(v33 + 16) = xmmword_242C4B7D0;
      v37 = v43;
      *(_QWORD *)(v33 + 32) = v10;
      *(_QWORD *)(v33 + 40) = v37;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
LABEL_9:
  OUTLINED_FUNCTION_26_14();
}

_DWORD *sub_242B0345C@<X0>(_DWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_242B03B80(a1, a2);
}

uint64_t sub_242B03470(const void *a1, const void *a2, uint64_t a3, uint64_t a4, float a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _BYTE v26[400];
  _BYTE v27[184];
  _BYTE v28[192];

  v11 = sub_242C47834();
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x2494EB3C4](0, 1, *(unsigned __int8 *)(a4 + 120), 0, 0, a5, *(float *)(a4 + 116), 1.0, 1.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220F00);
  v14 = swift_allocObject();
  v25 = xmmword_242C4B7D0;
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  memcpy((void *)(v14 + 32), a1, 0xB0uLL);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v25;
  memcpy((void *)(v15 + 32), a2, 0xB0uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226B40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v25;
  v17 = inited + 32;
  sub_242AB0920(a3, inited + 32);
  sub_242AB0920(v17, (uint64_t)v27);
  sub_242AB0920((uint64_t)v27, (uint64_t)v28);
  if (sub_242B03F18((uint64_t)v28) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v25 = v5;
    sub_242A5EC30();
    v19 = v18;
    v20 = *(_QWORD *)(v18 + 16);
    if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
    {
      sub_242A5EC30();
      v19 = v22;
    }
    sub_242AB0920((uint64_t)v27, (uint64_t)v26);
    *(_QWORD *)(v19 + 16) = v20 + 1;
    memcpy((void *)(v19 + 176 * v20 + 32), v26, 0xB0uLL);
    swift_bridgeObjectRelease();
  }
  sub_242C48A28();
  sub_242C489B0();
  sub_242C475F4();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_242B03718()
{
  sub_242B03154();
}

void sub_242B0372C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __n128 *v36;
  uint64_t ObjectType;
  uint64_t *v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unsigned __int32 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  __n128 *v53;
  __n128 *v54;
  __n128 *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_16_20();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v56 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v56 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v56 - v12;
  v14 = sub_242B89308();
  OUTLINED_FUNCTION_6_37(v14);
  if (!v16)
    goto LABEL_17;
  v68 = v15;
  v17 = sub_242B89308();
  OUTLINED_FUNCTION_6_37(v17);
  if (!v18)
  {
LABEL_16:
    OUTLINED_FUNCTION_145();
LABEL_17:
    sub_242A6A5B0();
    v35 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C54D70, v35, v36);
    goto LABEL_18;
  }
  v66 = v19;
  v69 = v18;
  v20 = sub_242B89308();
  OUTLINED_FUNCTION_6_37(v20);
  if (!v21)
  {
LABEL_15:
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  v64 = v22;
  v67 = v21;
  v23 = sub_242B89308();
  OUTLINED_FUNCTION_6_37(v23);
  if (!v24)
  {
LABEL_14:
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  v62 = v25;
  v65 = v24;
  v26 = sub_242B89308();
  OUTLINED_FUNCTION_6_37(v26);
  if (!v27)
  {
LABEL_13:
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  v59 = v28;
  v63 = v27;
  v29 = sub_242B89308();
  OUTLINED_FUNCTION_6_37(v29);
  if (!v30)
  {
    OUTLINED_FUNCTION_145();
    goto LABEL_13;
  }
  v57 = v31;
  v60 = v30;
  if (*(_QWORD *)(v0 + 152))
  {
    v32 = sub_242B89308();
    OUTLINED_FUNCTION_6_37(v32);
    v61 = v33;
    v58 = v34;
  }
  else
  {
    v61 = 0;
    v58 = 0;
  }
  ObjectType = swift_getObjectType();
  v38 = v70;
  ((void (*)(char *__return_ptr, _DWORD *(*)@<X0>(_DWORD *@<X0>, _DWORD *@<X8>), _QWORD, _QWORD, uint64_t))v59[7])((char *)&v71 + 4, sub_242B0345C, 0, MEMORY[0x24BEE14E8], ObjectType);
  v39 = HIDWORD(v71);
  v40 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, _DWORD *(*)@<X0>(_DWORD *@<X0>, _DWORD *@<X8>), _QWORD, _QWORD, uint64_t))(v57 + 56))(&v71, sub_242B03B94, 0, MEMORY[0x24BEE3F88], v40);
  v59 = v38;
  v41 = v71;
  sub_242C47930();
  OUTLINED_FUNCTION_1_41((uint64_t)v13);
  OUTLINED_FUNCTION_1_41((uint64_t)v10);
  v42 = OUTLINED_FUNCTION_0_51();
  v70 = &v56;
  v43 = MEMORY[0x24BDAC7A8](v42).n128_u32[0];
  *((_DWORD *)&v56 - 8) = v39;
  *(uint64_t *)((char *)&v56 - 28) = v44;
  *((_DWORD *)&v56 - 5) = v41;
  *((_DWORD *)&v56 - 4) = v43;
  v45 = OUTLINED_FUNCTION_14_19((uint64_t)&v56);
  MEMORY[0x24BDAC7A8](v45);
  v46 = v66;
  v47 = v67;
  *(&v56 - 14) = v69;
  *(&v56 - 13) = v46;
  *(&v56 - 12) = (uint64_t)v10;
  *(&v56 - 11) = v47;
  v48 = v65;
  *(&v56 - 10) = v64;
  *(&v56 - 9) = (uint64_t)v7;
  v49 = v62;
  *(&v56 - 8) = v48;
  *(&v56 - 7) = v49;
  v50 = v61;
  *(&v56 - 6) = v1;
  *(&v56 - 5) = v50;
  v51 = v59;
  *(&v56 - 4) = v58;
  *(&v56 - 3) = v2;
  *(&v56 - 2) = (uint64_t)sub_242B03F34;
  *(&v56 - 1) = (uint64_t)(&v56 - 6);
  sub_242BF6310((uint64_t)sub_242B03F5C, (uint64_t)(&v56 - 16), MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
  if (v51)
  {
    OUTLINED_FUNCTION_145();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_9_31();
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_37_10();
    sub_242A6AB60((uint64_t)v10);
    sub_242A6AB60((uint64_t)v13);
  }
  else
  {
    v52 = v58;
    OUTLINED_FUNCTION_9_31();
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_37_10();
    sub_242A6AB60((uint64_t)v10);
    sub_242A6AB60((uint64_t)v13);
    if (v61)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v53 = (__n128 *)OUTLINED_FUNCTION_2_0();
      v54 = OUTLINED_FUNCTION_3_37(v53, (__n128)xmmword_242C4DE40);
      v54[5].n128_u64[0] = v61;
      v54[5].n128_u64[1] = v52;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v55 = (__n128 *)OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_3_37(v55, (__n128)xmmword_242C4B810);
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
LABEL_18:
  OUTLINED_FUNCTION_26_14();
}

_DWORD *sub_242B03B80@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  if (result)
    *a2 = *result;
  else
    __break(1u);
  return result;
}

_DWORD *sub_242B03B94@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  if (result)
    *a2 = *result;
  else
    __break(1u);
  return result;
}

uint64_t sub_242B03BA8(const void *a1, const void *a2, const void *a3, const void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  const void *v16;
  const void *v17;
  uint64_t v18;
  _BYTE v19[184];
  _BYTE v20[176];
  _OWORD *v21;

  v16 = a1;
  v17 = a2;
  v8 = sub_242C476F0();
  v18 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C476E4();
  sub_242C476D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220F00);
  v11 = (_OWORD *)swift_allocObject();
  v11[1] = xmmword_242C4B7F0;
  memcpy(v11 + 2, a3, 0xB0uLL);
  memcpy(v11 + 13, a4, 0xB0uLL);
  v21 = v11;
  sub_242AB0920(a5, (uint64_t)v19);
  if (sub_242B03F18((uint64_t)v19) != 1)
  {
    memcpy(v20, v19, sizeof(v20));
    sub_242B654C8();
  }
  v12 = swift_allocObject();
  v15 = xmmword_242C4B7D0;
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
  memcpy((void *)(v12 + 32), v16, 0xB0uLL);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v15;
  memcpy((void *)(v13 + 32), v17, 0xB0uLL);
  sub_242C48A28();
  sub_242C489B0();
  sub_242C475F4();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_242B03E10()
{
  sub_242B0372C();
}

uint64_t sub_242B03E24(uint64_t a1)
{
  uint64_t result;

  result = sub_242B03E8C((unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B03E58(uint64_t a1)
{
  uint64_t result;

  result = sub_242B03E8C((unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B03E8C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C4B9C0, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242B03ECC(const void *a1, const void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_242B03470(a1, a2, a3, *(_QWORD *)(v3 + 24), *(float *)(v3 + 16));
}

void sub_242B03EE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_242AB06B8(a1, v2[5], v2[6], v2[7], v2[8], a2, v2[9]);
}

uint64_t sub_242B03F18(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 176))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242B03F34(const void *a1, const void *a2, const void *a3, const void *a4, uint64_t a5)
{
  return sub_242B03BA8(a1, a2, a3, a4, a5);
}

double sub_242B03F5C(uint64_t a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_242AA3754(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_OWORD *)(v1 + 88), *(_OWORD *)(v1 + 104), *(_QWORD *)(v1 + 120)).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_0_51()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v0);
  return __swift_storeEnumTagSinglePayload(v3, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_1_41(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

__n128 *OUTLINED_FUNCTION_3_37(__n128 *result, __n128 a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result[1] = a2;
  v4 = *(_QWORD *)(v3 - 112);
  result[2].n128_u64[0] = v2;
  result[2].n128_u64[1] = v4;
  v5 = *(_QWORD *)(v3 - 144);
  result[3].n128_u64[0] = *(_QWORD *)(v3 - 120);
  result[3].n128_u64[1] = v5;
  v6 = *(_QWORD *)(v3 - 160);
  result[4].n128_u64[0] = *(_QWORD *)(v3 - 136);
  result[4].n128_u64[1] = v6;
  return result;
}

void OUTLINED_FUNCTION_6_37(uint64_t a1)
{
  uint64_t v1;

  sub_242A9E618(a1, v1);
}

uint64_t OUTLINED_FUNCTION_9_31()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_14_19@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 8) = v1;
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_15_22()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

id sub_242B04080()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDE550]), sel_init);
  objc_msgSend(v1, sel_setBidirectional_, *(unsigned __int8 *)(v0 + 96));
  objc_msgSend(v1, sel_setProduceCell_, 1);
  objc_msgSend(v1, sel_setTraining_, 1);
  objc_msgSend(v1, sel_setInputGateActivation_, 3);
  objc_msgSend(v1, sel_setForgetGateActivation_, 3);
  objc_msgSend(v1, sel_setCellGateActivation_, 2);
  objc_msgSend(v1, sel_setOutputGateActivation_, 3);
  objc_msgSend(v1, sel_setActivation_, 2);
  objc_msgSend(v1, sel_setForgetGateLast_, 0);
  return v1;
}

uint64_t sub_242B04168(void *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BOOL8 v13;
  char v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v26;
  id v27;

  v4 = sub_242AA59A4();
  if ((v5 & 1) != 0)
  {
    v7 = 0;
  }
  else
  {
    v6 = v4;
    OUTLINED_FUNCTION_17_6(v4, (a2 & 0xC000000000000001) == 0);
    if ((a2 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_16_6();
    v7 = OUTLINED_FUNCTION_2_45(a2 + 8 * v6);
  }
  v8 = sub_242AA59BC();
  if ((v9 & 1) != 0)
  {
    v26 = 0;
  }
  else
  {
    v10 = v8;
    OUTLINED_FUNCTION_17_6(v8, (a2 & 0xC000000000000001) == 0);
    if ((a2 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_16_6();
    v26 = OUTLINED_FUNCTION_2_45(a2 + 8 * v10);
  }
  v11 = sub_242AA59E8();
  v12 = a2 & 0xC000000000000001;
  v13 = (a2 & 0xC000000000000001) == 0;
  v27 = a1;
  if ((v14 & 1) != 0)
  {
    v17 = v7;
    v18 = 0;
    v16 = 0;
  }
  else
  {
    v15 = v11;
    OUTLINED_FUNCTION_17_6(v11, v12 == 0);
    if (v12)
      OUTLINED_FUNCTION_16_6();
    v16 = OUTLINED_FUNCTION_2_45(a2 + 8 * v15);
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      OUTLINED_FUNCTION_16_6();
    }
    OUTLINED_FUNCTION_17_6(v15 + 1, 1);
    v17 = v7;
    v18 = OUTLINED_FUNCTION_2_45(a2 + 8 * (v15 + 1));
    v13 = 1;
  }
  OUTLINED_FUNCTION_17_6(0, v13);
  if (!v13)
    OUTLINED_FUNCTION_16_6();
  v19 = *(id *)(a2 + 32);
  OUTLINED_FUNCTION_17_6(1, v13);
  v20 = *(id *)(a2 + 40);
  v21 = sub_242B04080();
  OUTLINED_FUNCTION_2_4();
  v22 = (void *)OUTLINED_FUNCTION_6_38();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v27, sel_LSTMWithSourceTensor_recurrentWeight_inputWeight_bias_initState_initCell_descriptor_name_, v19, v20, v17, v26, v16, v18, v21, v22);

  sub_242A62558();
  v24 = OUTLINED_FUNCTION_8_25();

  return v24;
}

void sub_242B043A0()
{
  JUMPOUT(0x242B04268);
}

uint64_t sub_242B043AC(void *a1, uint64_t a2)
{
  return sub_242B04168(a1, a2);
}

uint64_t sub_242B043C0(void *a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;

  v5 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_1_42(0, (a2 & 0xC000000000000001) == 0);
  if (v5)
    OUTLINED_FUNCTION_0_52();
  v6 = *(id *)(a2 + 32);
  OUTLINED_FUNCTION_5_39();
  OUTLINED_FUNCTION_1_42(1, v7);
  v8 = *(id *)(a2 + 40);
  OUTLINED_FUNCTION_5_39();
  OUTLINED_FUNCTION_1_42(2, v9);
  v32 = *(id *)(a2 + 48);
  OUTLINED_FUNCTION_5_39();
  OUTLINED_FUNCTION_1_42(3, v10);
  v30 = *(id *)(a2 + 56);
  OUTLINED_FUNCTION_5_39();
  OUTLINED_FUNCTION_1_42(4, v11);
  v29 = *(id *)(a2 + 64);
  if (*(_QWORD *)(v2 + 64))
  {
    OUTLINED_FUNCTION_5_39();
    OUTLINED_FUNCTION_1_42(5, v12);
    v28 = *(id *)(a2 + 72);
  }
  else
  {
    v28 = 0;
  }
  v13 = sub_242B04688();
  v31 = v8;
  if ((v14 & 1) != 0)
  {
    v16 = 0;
  }
  else
  {
    v15 = v13;
    OUTLINED_FUNCTION_1_42(v13, 1);
    v16 = OUTLINED_FUNCTION_2_45(a2 + 8 * v15);
  }
  v17 = sub_242B046B4();
  if ((v18 & 1) != 0)
  {
    v22 = 0;
    v20 = 0;
  }
  else
  {
    v19 = v17;
    OUTLINED_FUNCTION_1_42(v17, 1);
    v20 = OUTLINED_FUNCTION_2_45(a2 + 8 * v19);
    OUTLINED_FUNCTION_5_39();
    OUTLINED_FUNCTION_1_42(++v19, v21);
    v22 = OUTLINED_FUNCTION_2_45(a2 + 8 * v19);
  }
  v23 = sub_242B04080();
  OUTLINED_FUNCTION_2_4();
  v24 = (void *)OUTLINED_FUNCTION_6_38();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, sel_LSTMGradientsWithSourceTensor_recurrentWeight_sourceGradient_zState_cellOutputFwd_inputWeight_bias_initState_initCell_descriptor_name_, v30, v29, v6, v32, v31, v28, v16, v20, v22, v23, v24);

  sub_242A62558();
  v26 = OUTLINED_FUNCTION_8_25();

  return v26;
}

uint64_t sub_242B04688()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 72))
    return 0;
  if (*(_QWORD *)(v0 + 64))
    return 6;
  return 5;
}

uint64_t sub_242B046B4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_242AA4CB4();
  if (result)
  {
    sub_242AA5A34(result);
    v2 = 5;
    if (*(_QWORD *)(v0 + 64))
      v2 = 6;
    if (*(_QWORD *)(v0 + 72))
      return v2 + 1;
    else
      return v2;
  }
  return result;
}

uint64_t sub_242B04700(void *a1, unint64_t a2)
{
  return sub_242B043C0(a1, a2);
}

uint64_t sub_242B04714(uint64_t a1)
{
  uint64_t result;

  result = sub_242B0477C((unint64_t *)&qword_2572230F0, (uint64_t (*)(uint64_t))type metadata accessor for LSTMLayerGradientOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B04748(uint64_t a1)
{
  uint64_t result;

  result = sub_242B0477C(&qword_2572230F8, (uint64_t (*)(uint64_t))type metadata accessor for LSTMLayerOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B0477C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C4F858, v4);
    atomic_store(result, a1);
  }
  return result;
}

void OUTLINED_FUNCTION_0_52()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_1_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B4B240(a1, a2, v2);
}

id OUTLINED_FUNCTION_2_45@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return sub_242C48224();
}

uint64_t OUTLINED_FUNCTION_8_25()
{
  return sub_242C48548();
}

id sub_242B047F8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1788]), sel_init);
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_242B04860(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_242B0496C((uint64_t)a1);
  if (!v1)
  {
    v4 = v3;
    v5 = sub_242B049F4((uint64_t)a1);
    v7 = v6;
    ObjectType = swift_getObjectType();
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24))(v5, v7, ObjectType, v4);
    v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242B04B3C(v9, v11, a1);
    OUTLINED_FUNCTION_3_19();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_242B0496C(uint64_t a1)
{
  uint64_t v1;
  _BYTE v2[16];
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = a1;
  if (!sub_242B05354((void (*)(uint64_t *__return_ptr))sub_242B05494, (uint64_t)v2))
  {
    MEMORY[0x24BDAC7A8](0);
    sub_242B052A4((void (*)(uint64_t *__return_ptr))sub_242B054AC);
  }
}

uint64_t sub_242B049F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v11;
  _QWORD v12[4];
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 88);
  v12[2] = a1;
  sub_242C480E0();
  sub_242B5CA10((uint64_t)sub_242B05478, (uint64_t)v12, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(a1 + 88);
  if (v6 >> 62)
  {
    sub_242C480E0();
    v7 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 == v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v14 = sub_242C480BC();
    v8 = sub_242A5A5CC(v4);
    v9 = swift_bridgeObjectRelease();
    v13 = v8;
    sub_242A5CDDC(v9);
    return v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_242B0543C();
    swift_allocError();
    *v11 = 0;
    return swift_willThrow();
  }
}

unint64_t sub_242B04B3C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE v43[112];
  _BYTE v44[112];
  _BYTE v45[112];
  unint64_t v46;

  v5 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = a3[19];
  if (v7 >> 62)
  {
LABEL_31:
    sub_242C480E0();
    v37 = sub_242C48FC8();
    swift_bridgeObjectRelease();
    if (v6 == v37)
    {
      sub_242C480E0();
      v8 = sub_242C48FC8();
      if (v8)
        goto LABEL_4;
      return swift_bridgeObjectRelease();
    }
LABEL_34:
    sub_242B0543C();
    swift_allocError();
    *v38 = 1;
    return swift_willThrow();
  }
  if (v6 != *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  sub_242C480E0();
  v8 = v6;
  if (!v6)
    return swift_bridgeObjectRelease();
LABEL_4:
  v41 = v6;
  v46 = v7 & 0xC000000000000001;
  v39 = v5 + 32;
  v40 = v8;
  v6 = 4;
  v42 = v7;
  while (1)
  {
    if (v46)
    {
      v9 = MEMORY[0x2494EC84C](v6 - 4, v7);
    }
    else
    {
      v9 = *(_QWORD *)(v7 + 8 * v6);
      swift_retain();
    }
    v10 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v12 = a3[13];
    v11 = a3[14];
    sub_242BC9724();
    v7 = v14;
    if (*(_QWORD *)(v11 + 16))
    {
      result = sub_242A61310(v13, v14);
      if ((v16 & 1) != 0)
        break;
    }
    swift_bridgeObjectRelease();
    v12 = a3[17];
    v18 = a3[18];
    sub_242BC9724();
    v7 = v20;
    if (!*(_QWORD *)(v18 + 16) || (result = sub_242A61310(v19, v20), (v21 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_242BC9724();
      v23 = v25;
      v24 = v26;
      goto LABEL_20;
    }
    v17 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * result);
    if ((v17 & 0x8000000000000000) != 0)
      goto LABEL_37;
    if (v17 >= *(_QWORD *)(v12 + 16))
      goto LABEL_38;
LABEL_18:
    v22 = v12 + 16 * v17;
    v23 = *(_QWORD *)(v22 + 32);
    v24 = *(_QWORD *)(v22 + 40);
    sub_242C480E0();
    swift_bridgeObjectRelease();
LABEL_20:
    if (!*(_QWORD *)(a2 + 16)
      || (v5 = a2, v27 = sub_242A61310(v23, v24), (v28 & 1) == 0)
      || (v29 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v27), !*(_QWORD *)(v29 + 16)))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242B0543C();
      swift_allocError();
      *v36 = 1;
      swift_willThrow();
      return swift_release();
    }
    v30 = *(_QWORD *)(v29 + 32);
    if (v30 >= v41)
      goto LABEL_30;
    v31 = v39 + 32 * v30;
    v33 = *(_QWORD *)(v31 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_retain();
    v34 = sub_242BCA40C();
    objc_msgSend(v34, sel_lock);

    swift_beginAccess();
    sub_242A6FF34(v9 + 40, (uint64_t)v45);
    if (!v45[105])
    {
      sub_242A6FF34(v9 + 40, (uint64_t)v43);
      sub_242BCA82C(v33, v32, (uint64_t)v44);
      sub_242A6FF70((uint64_t)v43);
      swift_beginAccess();
      sub_242A8D65C((uint64_t)v44, v9 + 40);
      swift_endAccess();
    }
    sub_242A6FF70((uint64_t)v45);
    v5 = v9;
    v35 = sub_242BCA40C();
    objc_msgSend(v35, sel_unlock);
    swift_unknownObjectRelease_n();
    swift_release_n();

    ++v6;
    v7 = v42;
    if (v10 == v40)
      return swift_bridgeObjectRelease();
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * result);
  if ((v17 & 0x8000000000000000) == 0)
  {
    if (v17 >= *(_QWORD *)(v12 + 16))
      goto LABEL_36;
    goto LABEL_18;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_242B04F1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  *a2 = sub_242BAC6E4();
  a2[1] = v4;
  a2[2] = v3;
  return swift_retain();
}

uint64_t sub_242B04F68()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t sub_242B04F8C()
{
  sub_242B04F68();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSGraphBackend()
{
  return objc_opt_self();
}

uint64_t sub_242B04FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  if (qword_257220518 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_257220DF0;
  type metadata accessor for LazyTensorFunctionExecutorCache();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_242B26D48(v2);
  *(_QWORD *)(v1 + 24) = 0;
  return v1;
}

void sub_242B05064(_QWORD *a1)
{
  sub_242B04860(a1);
}

uint64_t sub_242B05078@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int v21;

  v5 = a1 + 168;
  sub_242A66290(a1 + 168, (uint64_t)&v14);
  if (*((_QWORD *)&v15 + 1))
  {
    v6 = (void *)*((_QWORD *)&v16 + 1);
    if ((unint64_t)(*((_QWORD *)&v16 + 1) - 1) >= 2)
    {
      swift_unknownObjectRetain();
      sub_242A6FDE8((uint64_t)&v14);
      if (v6)
        goto LABEL_8;
    }
    else
    {
      sub_242A6FDE8((uint64_t)&v14);
    }
  }
  else
  {
    sub_242A662D8((uint64_t)&v14);
  }
  sub_242B76A0C();
  if (v7)
  {
    v6 = v7;
LABEL_8:
    type metadata accessor for SharedMetalDevice();
    v8 = sub_242B277B8(v6);
    if (v2)
      return swift_unknownObjectRelease();
    v10 = (uint64_t)v8;
    sub_242A670D8(a1, (uint64_t)&v14);
    type metadata accessor for MPSGraphExecutor();
    swift_allocObject();
    swift_retain();
    v13 = sub_242B12AA0(&v14, v10);
    sub_242A624E8(a1, (uint64_t)&v14);
    swift_retain();
    sub_242B26C84(v13, (uint64_t)&off_251387200, (uint64_t)&v14);
    swift_unknownObjectRelease();
    result = swift_release();
    *a2 = v13;
    a2[1] = (uint64_t)&off_251387200;
    return result;
  }
  sub_242A66290(v5, (uint64_t)&v18);
  if (*((_QWORD *)&v19 + 1))
  {
    v14 = v18;
    v15 = v19;
    v16 = v20;
    v17 = v21;
  }
  else
  {
    *((_QWORD *)&v16 + 1) = 0;
    *((_QWORD *)&v15 + 1) = &unk_251389888;
    *(_QWORD *)&v16 = &off_251389908;
    v17 = sub_242B76DF0(0);
    sub_242A662D8((uint64_t)&v18);
  }
  sub_242B054C4();
  swift_allocError();
  v12 = v11;
  sub_242A6FE24((uint64_t)&v14, v11);
  *(_BYTE *)(v12 + 108) = 19;
  swift_willThrow();
  return sub_242A6FDE8((uint64_t)&v14);
}

void sub_242B052A4(void (*a1)(uint64_t *__return_ptr))
{
  id v2;
  id v3;
  uint64_t v4;

  v2 = sub_242B047F8();
  objc_msgSend(v2, sel_lock);

  a1(&v4);
  v3 = sub_242B047F8();
  objc_msgSend(v3, sel_unlock);

}

uint64_t sub_242B05354(void (*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;

  sub_242B5AFB4();
  a1(&v6);
  if (!v2)
    a2 = v6;
  sub_242B5AFD4();
  return a2;
}

void sub_242B053D8(void (*a1)(void))
{
  sub_242B5AFB4();
  a1();
  sub_242B5AFD4();
}

unint64_t sub_242B0543C()
{
  unint64_t result;

  result = qword_257226BF0;
  if (!qword_257226BF0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54EB0, &type metadata for MPSGraphBackend.ResolutionError);
    atomic_store(result, (unint64_t *)&qword_257226BF0);
  }
  return result;
}

uint64_t sub_242B05478@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_242B04F1C(a1, a2);
}

uint64_t sub_242B05494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242B27088(*(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_242B054AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_242B05078(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_242B054C4()
{
  unint64_t result;

  result = qword_257228130;
  if (!qword_257228130)
  {
    result = MEMORY[0x2494EDE24](&unk_242C57FA8, &unk_251388940);
    atomic_store(result, (unint64_t *)&qword_257228130);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MPSGraphBackend.ResolutionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242B0554C + 4 * byte_242C54DF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242B05580 + 4 * byte_242C54DF0[v4]))();
}

uint64_t sub_242B05580(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B05588(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B05590);
  return result;
}

uint64_t sub_242B0559C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B055A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242B055A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B055B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPSGraphBackend.ResolutionError()
{
  return &type metadata for MPSGraphBackend.ResolutionError;
}

unint64_t sub_242B055D0()
{
  unint64_t result;

  result = qword_257226BF8;
  if (!qword_257226BF8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C54E88, &type metadata for MPSGraphBackend.ResolutionError);
    atomic_store(result, (unint64_t *)&qword_257226BF8);
  }
  return result;
}

uint64_t sub_242B0560C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v2 + 152);
  LOBYTE(v2) = *(_BYTE *)(v2 + 160);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_242C480E0();
}

void sub_242B05624()
{
  sub_242A59170();
}

uint64_t sub_242B05680()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_242C4B7D0;
  sub_242B0560C(v0 + 32);
  return v0;
}

uint64_t sub_242B056CC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_DWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  sub_242A56808(a5, v5 + 48);
  return v5;
}

uint64_t sub_242B056F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_242B0571C()
{
  sub_242B056F8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseUnaryElementwiseOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B0575C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

__n128 sub_242B0576C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_BYTE *)(v1 + 104);
  v4 = *(_BYTE *)(v1 + 105);
  v5 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 80);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242B05798(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C54FA0, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242B057D4()
{
  uint64_t v0;

  return sub_242A6549C(*(_QWORD *)(v0 + 112));
}

uint64_t sub_242B057DC()
{
  uint64_t v0;

  sub_242B056F8();
  sub_242A6549C(*(_QWORD *)(v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnaryElementwiseOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B05824()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242B05854(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257226DA0, type metadata accessor for UnaryElementwiseOperation, (uint64_t)&unk_242C54FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B05890(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257226DA8, type metadata accessor for BaseUnaryElementwiseOperation, (uint64_t)&unk_242C54F5C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242B058CC()
{
  sub_242A59170();
}

uint64_t sub_242B05928()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 80);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 72);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

uint64_t sub_242B05978(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t *a8, uint64_t a9)
{
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  v10 = *a7;
  v11 = *a8;
  v12 = *((_BYTE *)a8 + 8);
  *(_DWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 56) = a6;
  *(_BYTE *)(v9 + 64) = v10;
  *(_QWORD *)(v9 + 72) = v11;
  *(_BYTE *)(v9 + 80) = v12;
  sub_242A56808(a9, v9 + 88);
  return v9;
}

uint64_t sub_242B059C4()
{
  _BYTE *v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 128))();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_46();
  sub_242C4934C();
  if (v0[64] == 2)
  {
    OUTLINED_FUNCTION_2_46();
  }
  else
  {
    OUTLINED_FUNCTION_2_46();
    sub_242C49358();
  }
  return OUTLINED_FUNCTION_2_46();
}

uint64_t sub_242B05A64()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B05A90()
{
  sub_242B05A64();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseResizeOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B05AD4()
{
  return sub_242B059C4();
}

uint64_t sub_242B05AF4(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C550D4, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242B05B30()
{
  return 0x657A69736572;
}

void sub_242B05B44(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BYTE v16[6];

  *(_QWORD *)(v11 + 152) = a10;
  *(_QWORD *)(v11 + 160) = a11;
  if (!a3)
    a1 = sub_242BD0204(0x657A69736572, 0xE600000000000000);
  OUTLINED_FUNCTION_0_53(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, v14, v15, *(__int16 *)v16, *(__int16 *)&v16[2], v16[4], v16[5]);
  OUTLINED_FUNCTION_14_11();
}

uint64_t sub_242B05BA8()
{
  uint64_t v0;

  return sub_242A6549C(*(_QWORD *)(v0 + 152));
}

uint64_t sub_242B05BB0()
{
  uint64_t v0;

  sub_242B05A64();
  sub_242A6549C(*(_QWORD *)(v0 + 152));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResizeOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B05BF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242B05C28()
{
  return OUTLINED_FUNCTION_3_38();
}

uint64_t sub_242B05C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  swift_retain();
  return v0;
}

void sub_242B05C9C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v15[6];

  *(_QWORD *)(v8 + 152) = a4;
  if (!a3)
  {
    v9 = OUTLINED_FUNCTION_3_38();
    a1 = sub_242BD0204(v9, v10);
  }
  OUTLINED_FUNCTION_0_53(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12, v13, v14, *(__int16 *)v15, *(__int16 *)&v15[2], v15[4], v15[5]);
  OUTLINED_FUNCTION_14_11();
}

uint64_t OUTLINED_FUNCTION_23_21()
{
  return swift_release();
}

uint64_t sub_242B05CF8()
{
  sub_242B05A64();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResizeGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B05D40(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_2572216A8, type metadata accessor for ResizeGradientOperation, (uint64_t)&unk_242C550D4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B05D7C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450((unint64_t *)&qword_2572216B0, type metadata accessor for ResizeOperation, (uint64_t)&unk_242C550D4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B05DB8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257227080, type metadata accessor for BaseResizeOperation, (uint64_t)&unk_242C5509C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_53(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, __int16 a13, __int16 a14, char a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  a16 = v20;
  a11 = v21;
  a12 = v22;
  return sub_242B05978(a1, a2, a3, v18, v17, v16, &a16, &a11, v19);
}

uint64_t OUTLINED_FUNCTION_2_46()
{
  return sub_242C4934C();
}

uint64_t OUTLINED_FUNCTION_3_38()
{
  return 0x675F657A69736572;
}

void sub_242B05E48()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[48];
  _BYTE v10[48];

  v0 = sub_242C48E54();
  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_135();
  if (v1 < 2)
    return;
  v2 = 0;
  v3 = v1 >> 1;
  v4 = v1 - 1;
  v5 = 48 * v1 - 16;
  for (i = 32; ; i += 48)
  {
    if (v2 == v4)
      goto LABEL_11;
    v7 = *(_QWORD *)(v0 + 16);
    if (v2 >= v7)
      break;
    sub_242A62684(v0 + i, (uint64_t)v10, &qword_257220ED0);
    if (v4 >= v7)
      goto LABEL_14;
    sub_242A62684(v0 + v5, (uint64_t)v9, &qword_257220ED0);
    if ((OUTLINED_FUNCTION_7_29() & 1) == 0)
    {
      sub_242B4B44C();
      v0 = v8;
    }
    if (v2 >= *(_QWORD *)(v0 + 16))
      goto LABEL_15;
    sub_242B07174((uint64_t)v9, v0 + i);
    if (v4 >= *(_QWORD *)(v0 + 16))
      goto LABEL_16;
    sub_242B07174((uint64_t)v10, v0 + v5);
LABEL_11:
    ++v2;
    --v4;
    v5 -= 48;
    if (v3 == v2)
      return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

void sub_242B05F74(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 < 2)
    return;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 3; ; --i)
  {
    if (v3 == i - 4)
      goto LABEL_9;
    v6 = *(_QWORD *)(v1 + 16);
    if (v3 >= v6)
      break;
    if (i - 4 >= v6)
      goto LABEL_12;
    v7 = *(_QWORD *)(v1 + 8 * v3 + 32);
    v8 = *(_QWORD *)(v1 + 8 * i);
    if ((OUTLINED_FUNCTION_7_29() & 1) == 0)
    {
      sub_242B4B43C();
      v1 = v9;
    }
    *(_QWORD *)(v1 + 8 * v3 + 32) = v8;
    *(_QWORD *)(v1 + 8 * i) = v7;
LABEL_9:
    if (v4 == ++v3)
      return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_242B06028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t i;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_242C37C68(a1, a2);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 < 2)
    return;
  v4 = 0;
  v5 = v3 >> 1;
  for (i = v3 + 3; ; --i)
  {
    if (v4 == i - 4)
      goto LABEL_9;
    v7 = *(_QWORD *)(v2 + 16);
    if (v4 >= v7)
      break;
    if (i - 4 >= v7)
      goto LABEL_12;
    v8 = *(_QWORD *)(v2 + 8 * v4 + 32);
    v9 = *(_QWORD *)(v2 + 8 * i);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_242B4B570();
      v2 = v10;
    }
    *(_QWORD *)(v2 + 8 * v4 + 32) = v9;
    *(_QWORD *)(v2 + 8 * i) = v8;
LABEL_9:
    if (v5 == ++v4)
      return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_242B060E4(size_t a1, uint64_t a2)
{
  size_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t i;
  unint64_t v9;
  size_t v10;
  __int128 v11;
  __int128 v12;

  sub_242C480E0();
  sub_242C480E0();
  v4 = sub_242B6C690(a1, a2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34();
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34();
  if (v5 < 2)
    return;
  v6 = 0;
  v7 = v5 >> 1;
  for (i = v5 + 1; ; --i)
  {
    if (v6 == i - 2)
      goto LABEL_9;
    v9 = *(_QWORD *)(v4 + 16);
    if (v6 >= v9)
      break;
    if (i - 2 >= v9)
      goto LABEL_12;
    v11 = *(_OWORD *)(v4 + 16 * i);
    v12 = *(_OWORD *)(v4 + 16 * v6 + 32);
    if ((OUTLINED_FUNCTION_7_29() & 1) == 0)
    {
      sub_242B4B5A0();
      v4 = v10;
    }
    *(_OWORD *)(v4 + 16 * v6 + 32) = v11;
    *(_OWORD *)(v4 + 16 * i) = v12;
LABEL_9:
    if (v7 == ++v6)
      return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t matmul(_:transposed:_:transposed:)@<X0>(const char **a1@<X0>, char a2@<W1>, const char **a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  const char *v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (**v30)(_QWORD, _QWORD);
  uint64_t inited;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  const char *v40;
  char v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  const char *v47;
  _BYTE v48[32];
  const char *v49;
  uint64_t v50;
  __int128 v51;
  char v52;
  char v53;

  v10 = sub_242C49208();
  MEMORY[0x24BDAC7A8](v10);
  v11 = *a1;
  v12 = *(const char **)(*(_QWORD *)(*((_QWORD *)*a1 + 2) + 152) + 16);
  if ((unint64_t)v12 < 2)
    goto LABEL_11;
  v43 = a5;
  v13 = *a3;
  if (*(_QWORD *)(*(_QWORD *)(*((_QWORD *)*a3 + 2) + 152) + 16) < 2uLL)
  {
    v47 = *(const char **)(*(_QWORD *)(*((_QWORD *)*a3 + 2) + 152) + 16);
    *(_OWORD *)v48 = xmmword_242C55100;
    v48[16] = 0;
    OUTLINED_FUNCTION_6_39((__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_103_0();
    goto LABEL_15;
  }
  v47 = *a1;
  OUTLINED_FUNCTION_11_27();
  (*(void (**)(uint64_t *__return_ptr))(v14 + 32))(&v44);
  v15 = v44;
  v47 = v13;
  OUTLINED_FUNCTION_11_27();
  (*(void (**)(const char **__return_ptr))(v16 + 32))(&v47);
  v17 = v47;
  if (v15 == v47)
    goto LABEL_8;
  if (qword_2572205C0 != -1)
    swift_once();
  v12 = (const char *)qword_257259A18;
  v18 = v17 + 13 * v15;
  if (v18 >= *(_QWORD *)(qword_257259A18 + 16))
  {
    __break(1u);
LABEL_11:
    v47 = v12;
    *(_OWORD *)v48 = xmmword_242C55110;
    v48[16] = 0;
    OUTLINED_FUNCTION_6_39((__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_103_0();
    goto LABEL_15;
  }
  v15 = *(unsigned __int8 *)(qword_257259A18 + v18 + 32);
  if (v15 == 13)
  {
LABEL_14:
    v47 = v11;
    OUTLINED_FUNCTION_11_27();
    v35 = v34;
    v37 = v36;
    v47 = v13;
    Tensor.scalarType.getter();
    v47 = v35;
    *(_QWORD *)v48 = v37;
    *(_OWORD *)&v48[8] = xmmword_242C501F0;
    v48[24] = 6;
    v49 = v38;
    v50 = v39;
    v51 = xmmword_242C4CA60;
    v52 = 6;
    v53 = 1;
    OUTLINED_FUNCTION_103_0();
LABEL_15:
    sub_242A59264();
  }
LABEL_8:
  v19 = *(_QWORD *)(*((_QWORD *)v11 + 2) + 152);
  v44 = v19;
  v46 = *(_QWORD *)(*((_QWORD *)v13 + 2) + 152);
  v42 = a2 & 1;
  v41 = a4 & 1;
  sub_242C34BDC((uint64_t)&v44, a2 & 1, &v46, a4 & 1, (uint64_t *)&v47);
  v20 = v47;
  if (!v47)
  {
    v47 = 0;
    *(_QWORD *)v48 = 0xE000000000000000;
    swift_retain();
    swift_retain();
    sub_242C48C38();
    sub_242C48314();
    sub_242C480E0();
    v11 = (const char *)MEMORY[0x24BEE1768];
    MEMORY[0x2494EC0FC](v19, MEMORY[0x24BEE1768]);
    sub_242C48314();
    OUTLINED_FUNCTION_34();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v33 = sub_242C480E0();
    MEMORY[0x2494EC0FC](v33, v11);
    sub_242C48314();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34();
    sub_242C48314();
    OUTLINED_FUNCTION_10_26();
    __break(1u);
    goto LABEL_14;
  }
  v47 = v11;
  OUTLINED_FUNCTION_0_54();
  LOBYTE(v44) = v15;
  OUTLINED_FUNCTION_5_40();
  OUTLINED_FUNCTION_2_47();
  OUTLINED_FUNCTION_9_32();
  swift_release();
  v40 = v11;
  v21 = v47;
  v47 = v13;
  OUTLINED_FUNCTION_0_54();
  LOBYTE(v44) = v15;
  OUTLINED_FUNCTION_5_40();
  OUTLINED_FUNCTION_2_47();
  OUTLINED_FUNCTION_9_32();
  swift_release();
  v22 = *((_QWORD *)v21 + 2);
  v23 = *((_QWORD *)v47 + 2);
  v44 = (uint64_t)v20;
  v45 = v15;
  v24 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v24 + 16) = v42;
  *(_BYTE *)(v24 + 17) = v41;
  swift_retain();
  swift_retain();
  v25 = sub_242BD0D40((uint64_t)sub_242B0713C);
  v27 = v26;
  swift_release();
  v47 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
  *(_OWORD *)v48 = xmmword_242C522A0;
  *(_OWORD *)&v48[16] = xmmword_242C550F0;
  v49 = "init(id:leftOperand:transposed:rightOperand:transposed:resultDescriptor:creationSite:backward:)";
  v50 = 95;
  LOWORD(v51) = 2;
  type metadata accessor for MatrixMultiplicationOperation();
  OUTLINED_FUNCTION_2_0();
  sub_242B01D38(0, 0, 0, v22, v42, v23, v41, &v44, (uint64_t)&v47, v25, v27);
  v29 = v28;
  v30 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257221F20, (uint64_t (*)(uint64_t))type metadata accessor for MatrixMultiplicationOperation, (uint64_t)&unk_242C54D08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(inited + 32) = v40;
  *(_QWORD *)(inited + 40) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242B76A50(inited, "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/LinearAlgebra.swift", 106, 2, 85, "matmul(_:transposed:_:transposed:)", 34, 2);
  swift_setDeallocating();
  sub_242B71334();
  sub_242BC9830(v29, v30, 0, (uint64_t)&v44, v43);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242B067E8(uint64_t result, _QWORD *a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = a2[2];
  if (!v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v4 != 1)
  {
    v5 = *(_QWORD *)(result + 32);
    v6 = a2[4];
    v7 = a2[5];
    if ((a3 & 1) != 0)
    {
      if ((a4 & 1) != 0)
      {
        v17 = a2[5];
        v18 = v5;
        swift_retain();
        swift_retain();
        swift_retain();
        matmul(_:transposed:_:transposed:)(&v19, &v18, 1, &v17, 1);
        v8 = v19;
        v17 = v5;
        v18 = v6;
        v9 = 1;
        v10 = 1;
LABEL_13:
        matmul(_:transposed:_:transposed:)(&v19, &v18, v9, &v17, v10);
        v11 = v19;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
        v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_242C4B7F0;
        swift_retain();
        swift_retain();
        v13 = sub_242AC4964();
        *(_QWORD *)(v12 + 32) = v8;
        *(_QWORD *)(v12 + 40) = v13;
        *(_QWORD *)(v12 + 48) = v14;
        swift_retain();
        swift_retain();
        v15 = sub_242AC4964();
        *(_QWORD *)(v12 + 56) = v11;
        *(_QWORD *)(v12 + 64) = v15;
        *(_QWORD *)(v12 + 72) = v16;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return v12;
      }
      v17 = *(_QWORD *)(result + 32);
      v18 = v7;
      swift_retain();
      swift_retain();
      swift_retain();
      matmul(_:transposed:_:transposed:)(&v19, &v18, 0, &v17, 1);
      v8 = v19;
      v17 = v5;
      v18 = v6;
      v9 = 0;
    }
    else
    {
      v17 = a2[5];
      v18 = v5;
      if ((a4 & 1) != 0)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        matmul(_:transposed:_:transposed:)(&v19, &v18, 0, &v17, 0);
        v8 = v19;
        v17 = v6;
        v18 = v5;
      }
      else
      {
        swift_retain();
        swift_retain();
        swift_retain();
        matmul(_:transposed:_:transposed:)(&v19, &v18, 0, &v17, 1);
        v8 = v19;
        v17 = v5;
        v18 = v6;
      }
      v9 = 1;
    }
    v10 = 0;
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t Tensor.transposed(permutation:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)(_QWORD, _QWORD);
  const char *v19;
  char v20;
  const char *v21;
  __int128 v22;
  __int128 v23;
  const char *v24;
  uint64_t v25;
  __int16 v26;

  v4 = *v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v2 + 16) + 152) + 16);
  if (v6 < v5)
    goto LABEL_14;
  if (v5)
  {
    if (*(_QWORD *)(a1 + 32) >= v6)
      goto LABEL_14;
    if (v5 != 1)
    {
      v8 = 5;
      while (1)
      {
        v9 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
          break;
        if (*(_QWORD *)(a1 + 8 * v8) >= v6)
          goto LABEL_14;
        ++v8;
        if (v9 == v5)
          goto LABEL_9;
      }
      __break(1u);
      while (1)
      {
LABEL_14:
        OUTLINED_FUNCTION_10_26();
        __break(1u);
      }
    }
  }
LABEL_9:
  v19 = *(const char **)(*(_QWORD *)(*v2 + 16) + 152);
  sub_242C480E0();
  sub_242C34D3C((uint64_t)&v19, a1);
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_14;
  v10 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(*(_QWORD *)(v10 + 152) + 16) <= 1uLL)
  {
    swift_bridgeObjectRelease();
    *a2 = v4;
    return swift_retain();
  }
  else
  {
    v11 = *(_BYTE *)(v10 + 160);
    v19 = v21;
    v20 = v11;
    *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = a1;
    swift_bridgeObjectRetain_n();
    swift_retain();
    v12 = sub_242BD0D40((uint64_t)sub_242B0716C);
    v14 = v13;
    OUTLINED_FUNCTION_135();
    v21 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
    v22 = xmmword_242C55120;
    v23 = xmmword_242C55130;
    v24 = "init(id:operand:permutation:resultDescriptor:creationSite:backward:)";
    v25 = 68;
    v26 = 2;
    type metadata accessor for TransposeOperation();
    OUTLINED_FUNCTION_2_0();
    sub_242B9F034(0, 0, 0, v10, a1, (uint64_t *)&v19, (uint64_t)&v21, v12, v14);
    v16 = v15;
    v17 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257227088, (uint64_t (*)(uint64_t))type metadata accessor for TransposeOperation, (uint64_t)&unk_242C5AD00);
    sub_242A62684(*(_QWORD *)(v4 + 16) + 168, (uint64_t)&v19, (uint64_t *)&unk_257228D70);
    return sub_242BC9830(v16, v17, 0, (uint64_t)&v19, a2);
  }
}

uint64_t sub_242B06D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    v17[1] = 0;
    v17[2] = 0;
    v17[0] = v4;
    v18 = -1;
    v20 = 0;
    v21 = 0;
    v19 = v3;
    v22 = -1;
    v23 = 4;
    sub_242A59264();
  }
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a3 + 16);
  swift_retain();
  swift_retain();
  sub_242BC0874(-1, v3);
  v8 = v7;
  if (v3)
  {
    v9 = 0;
    v10 = a3 + 32;
    while (1)
    {
      v4 = *(_QWORD *)(v10 + 8 * v9);
      if (v4 < 0)
      {
        if (v4 < -v3)
          goto LABEL_19;
        v4 += v3;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        if (v4 < 0)
          goto LABEL_14;
      }
      else
      {
        sub_242B4B43C();
        v8 = v11;
        if (v4 < 0)
        {
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
      }
      if ((unint64_t)v4 >= *(_QWORD *)(v8 + 16))
        break;
      *(_QWORD *)(v8 + 8 * v4 + 32) = v9++;
      if (v3 == v9)
        goto LABEL_15;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
  v24 = v6;
  Tensor.transposed(permutation:)(v17, v8);
  swift_bridgeObjectRelease();
  v13 = v17[0];
  swift_retain();
  v14 = sub_242AC4964();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 48) = v15;
  swift_release();
  swift_release();
  return v12;
}

uint64_t Tensor.transposed()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_242B06028(0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 16) + 152) + 16));
  Tensor.transposed(permutation:)(v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t Tensor.gramMatrix(scale:)(float a1)
{
  const char **v1;
  const char *v2;
  unint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v12;
  const char *v13;
  const char *v14[7];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int v18;
  char v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v2 = *v1;
  v3 = *(unint64_t **)(*((_QWORD *)*v1 + 2) + 152);
  if (v3[2] != 4)
  {
    v15 = v3[2];
    *(_QWORD *)&v16 = 0;
    BYTE8(v16) = 6;
    v17 = xmmword_242C4CD80;
    LOBYTE(v18) = 0;
    v19 = 7;
    OUTLINED_FUNCTION_103_0();
    sub_242A59264();
  }
  v5 = v3[4];
  v6 = v3[5];
  v7 = v3[6];
  v8 = v3[7];
  v14[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v9 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v6;
  if ((unsigned __int128)(v7 * (__int128)v8) >> 64 != (v7 * v8) >> 63)
    __break(1u);
  *(_QWORD *)(v9 + 48) = v7 * v8;
  v13 = (const char *)v9;
  Tensor.reshaped(to:)((uint64_t *)&v13, (uint64_t *)&v15);
  OUTLINED_FUNCTION_34();
  v13 = (const char *)v15;
  v14[0] = (const char *)v15;
  matmul(_:transposed:_:transposed:)(v14, 0, &v13, 1, (uint64_t *)&v15);
  v13 = (const char *)v15;
  v18 = 0;
  v16 = 0u;
  v17 = 0u;
  v15 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(float *)(inited + 32) = a1;
  sub_242A62684((uint64_t)&v15, (uint64_t)v14, (uint64_t *)&unk_257228D70);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)&v15);
  *(_QWORD *)&v15 = v12;
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  return OUTLINED_FUNCTION_135();
}

uint64_t sub_242B0712C()
{
  return swift_deallocObject();
}

uint64_t sub_242B0713C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242B067E8(a1, a2, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17));
}

uint64_t sub_242B07148()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242B0716C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B06D00(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242B07174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = v0;
  return sub_242B5E498((_QWORD *)(v1 - 264), (uint64_t *)(v1 - 208));
}

void OUTLINED_FUNCTION_2_47()
{
  Tensor.cast(to:roundingRule:)();
}

uint64_t OUTLINED_FUNCTION_5_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1, v3, v0);
}

void OUTLINED_FUNCTION_6_39(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 - 168) = a1;
  *(_BYTE *)(v1 - 152) = 2;
  *(_BYTE *)(v1 - 92) = 7;
}

uint64_t OUTLINED_FUNCTION_7_29()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_9_32()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_26()
{
  return sub_242C48F5C();
}

void OUTLINED_FUNCTION_11_27()
{
  Tensor.scalarType.getter();
}

uint64_t static FeatureInputType.rgbImage(size:channelsFirst:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = 0x2000000000000000;
  if ((a3 & 1) != 0)
    v4 = 0x2000000000000100;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t static FeatureInputType.bgrImage(size:channelsFirst:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  return OUTLINED_FUNCTION_4_36(result, a2, a3, a4);
}

uint64_t static FeatureInputType.grayScaleImage(size:channelsFirst:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  return OUTLINED_FUNCTION_4_36(result, a2, a3, a4);
}

uint64_t static FeatureInputType.tensor(like:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return OUTLINED_FUNCTION_8_26(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 152), a2);
}

uint64_t static FeatureInputType.tensor(shape:scalarType:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return OUTLINED_FUNCTION_8_26(*a1, a2);
}

_QWORD *static FeatureInputType.tensor(shape:scalarType:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  _QWORD *(*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v7 = *a1;
  v8 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32);
  sub_242C480E0();
  result = v8(&v11, a2, a3);
  v10 = v11;
  *a4 = v7;
  a4[1] = v10;
  a4[2] = 0;
  return result;
}

uint64_t static FeatureInputType.tensor(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *a1;
  *(_OWORD *)(a2 + 8) = xmmword_242C53170;
  return swift_retain();
}

BOOL static FeatureInputType.ColorLayout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FeatureInputType.ColorLayout.hash(into:)()
{
  return sub_242C4934C();
}

void sub_242B07358(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(char *__return_ptr, uint64_t, unint64_t);
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  if ((v5 & 0x2000000000000000) != 0)
  {
    v7 = v1[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_242C4DE40;
    *(_QWORD *)(v8 + 32) = 1;
    if ((v5 & 0x100) != 0)
    {
      v10 = 3;
      if (v7 >= 2)
        v10 = 1;
      *(_QWORD *)(v8 + 40) = v10;
      *(_QWORD *)(v8 + 48) = v3;
      *(_QWORD *)(v8 + 56) = v4;
    }
    else
    {
      *(_QWORD *)(v8 + 40) = v3;
      *(_QWORD *)(v8 + 48) = v4;
      v9 = 3;
      if (v7 >= 2)
        v9 = 1;
      *(_QWORD *)(v8 + 56) = v9;
    }
    v18 = v8;
    v17 = 10;
    goto LABEL_13;
  }
  if (!(v5 >> 62))
  {
    v18 = *v1;
    v17 = v4;
    OUTLINED_FUNCTION_24_22();
    OUTLINED_FUNCTION_18_25();
    goto LABEL_15;
  }
  if (v5 >> 62 == 1)
  {
    v18 = *v1;
    v6 = *(void (**)(char *__return_ptr, uint64_t, unint64_t))(v5 + 32);
    OUTLINED_FUNCTION_18_25();
    v6(&v17, v4, v5 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_13:
    OUTLINED_FUNCTION_24_22();
LABEL_15:
    Tensor.init(zeros:scalarType:on:)(&v18, &v17, (uint64_t)&v16, v11, v12, v13, v14, v15, a1);
    return;
  }
  *a1 = v3;
  sub_242A62660(v3, v4, v5);
}

uint64_t sub_242B0749C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];

  v11[5] = a1;
  v11[2] = a2;
  v11[3] = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = sub_242C480F8();
  v6 = OUTLINED_FUNCTION_3_15();
  v7 = MEMORY[0x2494EDE24](MEMORY[0x24BEE04E8], v5);
  v9 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242B08C7C, (uint64_t)v11, v5, v6, MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v9, a2, a3);
}

void sub_242B075D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[6];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v7 = (char *)v12 - v6;
  v8 = (uint64_t *)(a2 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  v9 = a1 + *(int *)(TupleTypeMetadata2 + 48);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a1, AssociatedTypeWitness);
  *(_OWORD *)v12 = *(_OWORD *)v9;
  v11 = *(_QWORD *)(v9 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, AssociatedTypeWitness);
  *(_OWORD *)&v12[3] = *(_OWORD *)v12;
  v12[5] = v11;
  sub_242B07358(v8);
}

uint64_t sub_242B07710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];
  uint64_t v12;

  v12 = (*(uint64_t (**)(void))(a2 + 32))();
  v11[2] = a1;
  v11[3] = a2;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_3_15();
  v4 = sub_242C48650();
  v5 = OUTLINED_FUNCTION_3_15();
  v6 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v4);
  v8 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242B08C98, (uint64_t)v11, v4, v5, MEMORY[0x24BEE4078], v6, MEMORY[0x24BEE40A8], v7);
  swift_bridgeObjectRelease();
  v12 = v8;
  v9 = sub_242C48650();
  swift_getAssociatedConformanceWitness();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v9);
  return sub_242C480C8();
}

uint64_t sub_242B07884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v7 = (char *)&v13 - v6;
  v8 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v9 = *(int *)(TupleTypeMetadata2 + 48);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a1, AssociatedTypeWitness);
  v11 = *(_QWORD *)(a1 + v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, AssociatedTypeWitness);
  *(_QWORD *)v8 = v11;
  *(_OWORD *)(v8 + 8) = xmmword_242C53170;
  return swift_retain();
}

void sub_242B079AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572270A0);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_5_6();
  v46 = v5;
  v44 = OUTLINED_FUNCTION_25_19();
  v6 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_4_9();
  v9 = v8 - v7;
  v45 = sub_242C47C9C();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_5_6();
  v42 = v10;
  v11 = sub_242C47CA8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_4_9();
  v15 = v14 - v13;
  v16 = *v2;
  v17 = v2[2];
  if ((v17 & 0x2000000000000000) == 0)
  {
    if (v17 >> 62)
    {
      if (v17 >> 62 != 1)
      {
        v36 = v2[1];
        Tensor.scalarType.getter();
        v38 = v37;
        sub_242A62660(v16, v36, v17);
        sub_242B08130(v38, v15);
        sub_242C480E0();
        OUTLINED_FUNCTION_31_21();
        swift_bridgeObjectRelease();
        v34 = v16;
        v35 = v36;
        goto LABEL_30;
      }
      OUTLINED_FUNCTION_12_23();
      sub_242B08130(v17 & 0x3FFFFFFFFFFFFFFFLL, v15);
    }
    else
    {
      OUTLINED_FUNCTION_12_23();
      sub_242B07FDC(v15);
    }
    OUTLINED_FUNCTION_31_21();
    v34 = v16;
    v35 = v6;
LABEL_30:
    sub_242A69490(v34, v35, v17);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_31;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(a1 + 152) + 16);
  if ((unint64_t)(v18 - 5) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v39 = a1;
    v41 = v2[1];
    v19 = v18 - 2;
    v20 = v18 - 1;
    v21 = v18 == 4;
    if ((v17 & 0x100) == 0)
      v21 = v18 - 1;
    v40 = v21;
    if ((v17 & 0x100) != 0)
      v22 = v18 - 2;
    else
      v22 = v18 - 3;
    sub_242C480E0();
    if (TensorShape.subscript.getter(v22) != v16
      || ((v17 & 0x100) != 0 ? (v23 = v20) : (v23 = v19), TensorShape.subscript.getter(v23) != v41))
    {
      OUTLINED_FUNCTION_20_25();
      sub_242C48C38();
      OUTLINED_FUNCTION_8_8();
      sub_242C48314();
      sub_242C48314();
      OUTLINED_FUNCTION_15_23();
      sub_242C491CC();
      OUTLINED_FUNCTION_2_48();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_22();
      OUTLINED_FUNCTION_15_23();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_3_39();
      OUTLINED_FUNCTION_2_48();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_3_39();
      OUTLINED_FUNCTION_2_48();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_22();
      OUTLINED_FUNCTION_3_39();
      OUTLINED_FUNCTION_2_48();
      OUTLINED_FUNCTION_4_0();
      goto LABEL_26;
    }
    v24 = v17;
    v25 = TensorShape.subscript.getter(v40);
    if (v17 >= 2u)
      v26 = 1;
    else
      v26 = 3;
    if (v25 != v26)
    {
      OUTLINED_FUNCTION_20_25();
      sub_242C48C38();
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_16_21();
      OUTLINED_FUNCTION_2_48();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_26_21();
      OUTLINED_FUNCTION_9_33();
      TensorShape.subscript.getter(v40);
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_22_18();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_47();
    v27 = *MEMORY[0x24BE62420];
    OUTLINED_FUNCTION_21_21(v9, v27);
    sub_242C47C90();
    if (v24)
    {
      v28 = v46;
      if (v24 == 1)
      {
        OUTLINED_FUNCTION_21_21(v46, *MEMORY[0x24BE62418]);
        __swift_storeEnumTagSinglePayload(v46, 0, 1, v44);
        sub_242C47C84();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(a2, v42, v45);
        v29 = *MEMORY[0x24BE62568];
        OUTLINED_FUNCTION_28_21();
        OUTLINED_FUNCTION_17_21();
        v31 = a2;
LABEL_38:
        v30(v31, v29);
        goto LABEL_31;
      }
      OUTLINED_FUNCTION_21_21(v46, *MEMORY[0x24BE62430]);
      OUTLINED_FUNCTION_10_27();
      if (*(_BYTE *)(v39 + 160) != 8)
      {
LABEL_37:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(a2, v42, v45);
        v29 = *MEMORY[0x24BE62568];
        OUTLINED_FUNCTION_28_21();
        OUTLINED_FUNCTION_17_21();
        v31 = a2;
        goto LABEL_38;
      }
      v27 = *MEMORY[0x24BE62410];
    }
    else
    {
      v28 = v46;
    }
    OUTLINED_FUNCTION_21_21(v28, v27);
    OUTLINED_FUNCTION_10_27();
    goto LABEL_37;
  }
  OUTLINED_FUNCTION_20_25();
  sub_242C480E0();
  sub_242C48C38();
  OUTLINED_FUNCTION_11_28();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_47();
LABEL_7:
  sub_242C491CC();
  OUTLINED_FUNCTION_2_48();
  OUTLINED_FUNCTION_4_0();
  sub_242C48314();
  sub_242C48314();
LABEL_26:
  sub_242C48314();
  sub_242A66F3C();
  v32 = OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_32_18(v32, v33);
LABEL_31:
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B07FDC@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  switch(*v1)
  {
    case 2:
      v3 = (unsigned int *)MEMORY[0x24BE624C8];
      break;
    case 8:
      v3 = (unsigned int *)MEMORY[0x24BE624D8];
      break;
    case 9:
      sub_242A59170();
    case 0xA:
      v3 = (unsigned int *)MEMORY[0x24BE624E0];
      break;
    case 0xB:
      v3 = (unsigned int *)MEMORY[0x24BE624D0];
      break;
    default:
      sub_242C21A14();
      sub_242A59264();
  }
  v4 = *v3;
  v5 = sub_242C47CA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t sub_242B08130@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  (*(void (**)(uint64_t *__return_ptr))(a1 + 32))(&v4);
  return sub_242B07FDC(a2);
}

void _s14NeuralNetworks16FeatureInputTypeO11ColorLayoutO9hashValueSivg_0()
{
  sub_242C49340();
  OUTLINED_FUNCTION_32_2();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

void sub_242B081A4()
{
  sub_242C49340();
  OUTLINED_FUNCTION_32_2();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

unint64_t sub_242B081D8()
{
  unint64_t result;

  result = qword_257227090;
  if (!qword_257227090)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for FeatureInputType.ColorLayout, &type metadata for FeatureInputType.ColorLayout);
    atomic_store(result, (unint64_t *)&qword_257227090);
  }
  return result;
}

unint64_t sub_242B08218()
{
  unint64_t result;

  result = qword_257227098;
  if (!qword_257227098)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for FeatureOutputType.ColorLayout, &type metadata for FeatureOutputType.ColorLayout);
    atomic_store(result, (unint64_t *)&qword_257227098);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeatureInputType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_242B083B4(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_242A62654);
}

uint64_t destroy for FeatureInputType(uint64_t a1)
{
  return sub_242A69490(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t *assignWithCopy for FeatureInputType(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_242B08410(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_242A62654, (void (*)(uint64_t, uint64_t, uint64_t))sub_242A69490);
}

uint64_t *assignWithTake for FeatureInputType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_242B0847C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_242A69490);
}

uint64_t getEnumTagSinglePayload for FeatureInputType(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 7 && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 6;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 16) >> 59) >> 2) & 1 | (2
                                                                   * ((*(_QWORD *)(a1 + 16) >> 59) & 2 | (*(_QWORD *)(a1 + 16) >> 2) & 1))) ^ 7;
      if (v2 >= 6)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FeatureInputType(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 6)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 7;
    if (a3 >= 7)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 7)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 3 | (4 * (-a2 & 7));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = ((v3 << 59) | (4 * v3)) & 0x3000000000000004;
    }
  }
  return result;
}

uint64_t sub_242B08340(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 16) >> 61) & 1;
}

uint64_t sub_242B0834C(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~0x2000000000000000uLL;
  return result;
}

uint64_t sub_242B0835C(uint64_t result, char a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xCFFFFFFFFFFFFFFBLL | ((unint64_t)(a2 & 1) << 61);
  return result;
}

void type metadata accessor for FeatureInputType()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for FeatureInputType.ColorLayout()
{
  OUTLINED_FUNCTION_22_4();
}

_QWORD *initializeBufferWithCopyOfBuffer for FeatureInputType.TensorValueRepresentation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_242B083B4(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_242A62660);
}

uint64_t destroy for FeatureInputType.TensorValueRepresentation(uint64_t a1)
{
  return sub_242A6949C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *sub_242B083B4(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  a4(*a2, v6, v7);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return a1;
}

uint64_t *assignWithCopy for FeatureInputType.TensorValueRepresentation(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_242B08410(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_242A62660, (void (*)(uint64_t, uint64_t, uint64_t))sub_242A6949C);
}

uint64_t *sub_242B08410(uint64_t *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for FeatureInputType.TensorValueRepresentation(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_242B0847C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_242A6949C);
}

uint64_t *sub_242B0847C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *a1;
  v8 = a1[1];
  v7 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v5;
  a4(v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureInputType.TensorValueRepresentation(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7FE && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2045;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 16) >> 53) >> 9) | (4
                                                               * ((*(_QWORD *)(a1 + 8) >> 60) & 0x8F | (16 * (*(_QWORD *)(a1 + 16) & 7)) | (*(_QWORD *)(a1 + 16) >> 53) & 0x180))) ^ 0x7FF;
      if (v2 >= 0x7FD)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FeatureInputType.TensorValueRepresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x7FD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2046;
    if (a3 >= 0x7FE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1FF | ((-a2 & 0x7FF) << 9);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = v3 << 60;
      *(_QWORD *)(result + 16) = ((v3 >> 4) | (v3 << 53)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_242B08578(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 62;
}

uint64_t sub_242B08584(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_242B08594(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFFFFFFFuLL;
  *(_QWORD *)(result + 16) = v2;
  return result;
}

void type metadata accessor for FeatureInputType.TensorValueRepresentation()
{
  OUTLINED_FUNCTION_22_4();
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeatureOutputType(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *(unsigned __int8 *)(a1 + 1);
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_242B08614 + 4 * byte_242C5514A[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FeatureOutputType(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242B086D0 + 4 * byte_242C55154[v5]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_242B08704 + 4 * byte_242C5514F[v5]))();
}

uint64_t sub_242B08704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_242B0870C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x242B08714);
  return result;
}

uint64_t sub_242B08720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x242B08728);
  *(_BYTE *)(result + 1) = a2 + 2;
  return result;
}

uint64_t sub_242B0872C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_242B08734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_242B08740(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 1);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_242B0875C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

void type metadata accessor for FeatureOutputType()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t _s14NeuralNetworks16FeatureInputTypeO11ColorLayoutOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242B087D8 + 4 * byte_242C5515E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242B0880C + 4 * byte_242C55159[v4]))();
}

uint64_t sub_242B0880C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B08814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B0881CLL);
  return result;
}

uint64_t sub_242B08828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B08830);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242B08834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B0883C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for FeatureOutputType.ColorLayout()
{
  OUTLINED_FUNCTION_22_4();
}

void sub_242B08854(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int16 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = sub_242C47CA8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_9();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572270A0);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_5_6();
  v43 = v11;
  v42 = OUTLINED_FUNCTION_25_19();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_4_9();
  v14 = v13 - v12;
  v15 = sub_242C47C9C();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_9();
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(unsigned __int8 *)(a1 + 160);
  if ((*v2 & 0xFF00) != 0x200)
  {
    v20 = *(_QWORD *)(v18 + 16);
    if ((unint64_t)(v20 - 5) < 0xFFFFFFFFFFFFFFFELL)
    {
      OUTLINED_FUNCTION_20_25();
      sub_242C480E0();
      sub_242C48C38();
      OUTLINED_FUNCTION_11_28();
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_108();
LABEL_22:
      sub_242C491CC();
      OUTLINED_FUNCTION_2_48();
      OUTLINED_FUNCTION_4_0();
      sub_242C48314();
      sub_242C48314();
      sub_242C48314();
      sub_242A66F3C();
      v36 = OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_32_18(v36, v37);
      goto LABEL_29;
    }
    v41 = v16;
    v40 = v17;
    v21 = v20 - 1;
    if ((*v2 & 0x100) != 0)
      v22 = v20 == 4;
    else
      v22 = v20 - 1;
    v23 = *v2;
    sub_242C480E0();
    v24 = TensorShape.subscript.getter(v22);
    v25 = v23;
    if ((v23 & 0xFE) != 0)
      v26 = 1;
    else
      v26 = 3;
    if (v24 != v26)
    {
      OUTLINED_FUNCTION_20_25();
      sub_242C48C38();
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_16_21();
      OUTLINED_FUNCTION_2_48();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_26_21();
      OUTLINED_FUNCTION_9_33();
      TensorShape.subscript.getter(v22);
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_22_18();
      goto LABEL_22;
    }
    v27 = v20 - 2;
    if ((v25 & 0x100) != 0)
      v28 = v20 - 2;
    else
      v28 = v20 - 3;
    if ((v25 & 0x100) != 0)
      v29 = v21;
    else
      v29 = v27;
    v30 = v25;
    TensorShape.subscript.getter(v29);
    v31 = TensorShape.subscript.getter(v28);
    OUTLINED_FUNCTION_108();
    v32 = *MEMORY[0x24BE62420];
    OUTLINED_FUNCTION_30_19(v14, v32);
    sub_242C47C90();
    if (v30)
    {
      v33 = v43;
      if (v30 == 1)
      {
        v34 = *MEMORY[0x24BE62418];
        v35 = v43;
LABEL_27:
        OUTLINED_FUNCTION_30_19(v35, v34);
        OUTLINED_FUNCTION_5_41();
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_30_19(v43, *MEMORY[0x24BE62430]);
      OUTLINED_FUNCTION_5_41();
      if (v19 != 8)
      {
LABEL_28:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(a2, v31, v41);
        v38 = *MEMORY[0x24BE62568];
        OUTLINED_FUNCTION_28_21();
        OUTLINED_FUNCTION_17_21();
        v39(a2, v38);
        goto LABEL_29;
      }
      v32 = *MEMORY[0x24BE62410];
    }
    else
    {
      v33 = v43;
    }
    v35 = v33;
    v34 = v32;
    goto LABEL_27;
  }
  sub_242C480E0();
  sub_242B07FDC(v9);
  OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_108();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
LABEL_29:
  OUTLINED_FUNCTION_0_9();
}

void sub_242B08C7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242B075D8(a1, a2);
}

uint64_t sub_242B08C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_242B07884(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_48()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_3_39()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_4_36@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v5 = v4 & 0xFFFFFFFFFFFFLL | 0x2000000000000000;
  if ((a3 & 1) != 0)
    v5 |= 0x100uLL;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_41()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return sub_242C47C84();
}

uint64_t OUTLINED_FUNCTION_8_26@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = a1;
  a2[1] = v2;
  a2[2] = 0;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_9_33()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_10_27()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return sub_242C47C84();
}

unint64_t OUTLINED_FUNCTION_11_28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 88);
  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 96);
  *(_QWORD *)(v0 - 88) = v1;
  return 0xD000000000000039;
}

uint64_t OUTLINED_FUNCTION_12_23()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_242A62660(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_15_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = v1;
  return TensorShape.subscript.getter(v0);
}

uint64_t OUTLINED_FUNCTION_16_21()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_18_25()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_242A62660(v0, v2, v1);
}

void OUTLINED_FUNCTION_20_25()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_21_21(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_22_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_22()
{
  return sub_242C48314();
}

double OUTLINED_FUNCTION_24_22()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_25_19()
{
  return sub_242C47C78();
}

uint64_t OUTLINED_FUNCTION_26_21()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_28_21()
{
  return sub_242C47CB4();
}

uint64_t OUTLINED_FUNCTION_30_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_31_21()
{
  return sub_242C47C6C();
}

uint64_t OUTLINED_FUNCTION_32_18(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v3;
  a2[1] = v2;
  return swift_willThrow();
}

void sub_242B08E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_3_40();
  OUTLINED_FUNCTION_0_55((uint64_t)sub_242B08F90, v0, v1, v2, v3, v4, v5, v6, v15);
  OUTLINED_FUNCTION_40_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  OUTLINED_FUNCTION_4_37();
  v7 = OUTLINED_FUNCTION_6_40();
  OUTLINED_FUNCTION_5_42(v7, v8, v9, v10, v11, v12, v13, v14, v16, v17, v18, v19, v20, v21);
  OUTLINED_FUNCTION_1_43();
}

void sub_242B08EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_3_40();
  OUTLINED_FUNCTION_0_55((uint64_t)sub_242B08FAC, v0, v1, v2, v3, v4, v5, v6, v15);
  OUTLINED_FUNCTION_40_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  OUTLINED_FUNCTION_4_37();
  v7 = OUTLINED_FUNCTION_6_40();
  OUTLINED_FUNCTION_5_42(v7, v8, v9, v10, v11, v12, v13, v14, v16, v17, v18, v19, v20, v21);
  OUTLINED_FUNCTION_1_43();
}

uint64_t sub_242B08F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 152);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 160);
  sub_242C480E0();
  result = sub_242BAC6E4();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return result;
}

uint64_t sub_242B08F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_242B08F30(a1, a2);
}

uint64_t sub_242B08FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_242B08F90(a1, a2);
}

void OUTLINED_FUNCTION_0_55(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v9;

  sub_242B5C1D4(a1, (uint64_t)&a9, v9);
}

uint64_t OUTLINED_FUNCTION_3_40()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_4_37()
{
  uint64_t v0;

  return sub_242A5A760(v0);
}

void OUTLINED_FUNCTION_5_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  sub_242A5D034(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v14, a14);
}

uint64_t OUTLINED_FUNCTION_6_40()
{
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for ComputePrecision(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242B09060 + 4 * byte_242C55305[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242B09094 + 4 * asc_242C55300[v4]))();
}

uint64_t sub_242B09094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B0909C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B090A4);
  return result;
}

uint64_t sub_242B090B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B090B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242B090BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B090C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ComputePrecision()
{
  return &type metadata for ComputePrecision;
}

uint64_t sub_242B090E0(uint64_t a1, uint64_t a2)
{
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 32))(&var1);
  if (var1 - 8 >= 3)
    return 2;
  else
    return 0x10000u >> (8 * (var1 - 8));
}

BOOL sub_242B09128(char a1, char a2)
{
  return (a2 & 1u) < (a1 & 1u);
}

BOOL sub_242B0913C(unsigned __int16 a1, unsigned __int16 a2)
{
  return a2 < a1;
}

BOOL sub_242B0914C(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

uint64_t sub_242B0915C(int a1)
{
  unsigned int v1;

  if (a1 == 2)
    v1 = 1;
  else
    v1 = 2;
  if (a1 == 1)
    return 0;
  else
    return v1;
}

uint64_t sub_242B09174(char a1)
{
  return (a1 & 1u) + 1;
}

void sub_242B09180()
{
  sub_242C449D8();
}

void sub_242B09188()
{
  sub_242A5CB0C();
}

void sub_242B09190()
{
  sub_242BA9270();
}

uint64_t sub_242B09198@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_242B0915C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_242B091C0@<X0>(_DWORD *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_242B09174(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_242B091EC()
{
  unint64_t result;

  result = qword_2572270A8;
  if (!qword_2572270A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5539C, &type metadata for ComputePrecision);
    atomic_store(result, (unint64_t *)&qword_2572270A8);
  }
  return result;
}

BOOL sub_242B09228(char a1, char a2)
{
  return (a1 & 1u) < (a2 & 1u);
}

BOOL sub_242B0923C(char *a1, char *a2)
{
  return sub_242B09228(*a1, *a2);
}

BOOL sub_242B09248(char *a1, char *a2)
{
  return sub_242B09254(*a1, *a2);
}

BOOL sub_242B09254(char a1, char a2)
{
  return (a2 & 1u) >= (a1 & 1u);
}

BOOL sub_242B09268(unsigned __int16 a1, unsigned __int16 a2)
{
  return a2 >= a1;
}

BOOL sub_242B09278(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_242B09288(char *a1, char *a2)
{
  return sub_242B09294(*a1, *a2);
}

BOOL sub_242B09294(char a1, char a2)
{
  return (a1 & 1u) >= (a2 & 1u);
}

BOOL sub_242B092A8(unsigned __int16 a1, unsigned __int16 a2)
{
  return a1 >= a2;
}

BOOL sub_242B092B8(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_242B092C8(char *a1, char *a2)
{
  return sub_242B09128(*a1, *a2);
}

uint64_t sub_242B092D4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C676E6973;
  else
    return 1718378856;
}

uint64_t sub_242B09300()
{
  char *v0;

  return sub_242B092D4(*v0);
}

uint64_t sub_242B09308()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 144);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 136);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

uint64_t sub_242B09360()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B0939C()
{
  sub_242B09360();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OneHotOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B093DC()
{
  return 0x746F685F656E6FLL;
}

__n128 sub_242B093F8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 200);
  v3 = *(_BYTE *)(v1 + 208);
  v4 = *(_BYTE *)(v1 + 209);
  v5 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 184);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242B09428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;

  sub_242C4817C();
  sub_242C4934C();
  sub_242A587A8(v0 + 56, (uint64_t)&v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257227190);
  v1 = OUTLINED_FUNCTION_0_56();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_49(v1, v2, v3, v4, v5, v6, v7, v8, v18, v20, *((uint64_t *)&v20 + 1), v22, v24, v25, v26, v27, v28, v29, v30[0]);
    __swift_project_boxed_opaque_existential_1(v30, v31);
    sub_242C48170();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  else
  {
    OUTLINED_FUNCTION_1_44(v1, v2, v3, v4, v5, v6, v7, v8, v18, v20, v22);
  }
  sub_242A587A8(v0 + 96, (uint64_t)&v25);
  v9 = OUTLINED_FUNCTION_0_56();
  if ((v9 & 1) == 0)
    return OUTLINED_FUNCTION_1_44(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, v23);
  OUTLINED_FUNCTION_2_49(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, *((uint64_t *)&v21 + 1), v23, v24, v25, v26, v27, v28, v29, v30[0]);
  __swift_project_boxed_opaque_existential_1(v30, v31);
  sub_242C48170();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_242B09544()
{
  return sub_242B09428();
}

uint64_t sub_242B09564(uint64_t a1)
{
  uint64_t result;

  result = sub_242B095CC((unint64_t *)&qword_257222B10, (uint64_t)&unk_242C554DC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B09598(uint64_t a1)
{
  uint64_t result;

  result = sub_242B095CC(&qword_257227188, (uint64_t)&unk_242C55498);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B095CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for OneHotOperation();
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242B09608(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_257227198);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_56()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11)
{
  a11 = 0;
  a9 = 0u;
  a10 = 0u;
  return sub_242B09608((uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_2_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  return sub_242A64518(&a9, (uint64_t)&a19);
}

uint64_t destroy for GradientStore()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14NeuralNetworks13GradientStoreVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_242C480E0();
  OUTLINED_FUNCTION_0_2();
  return a1;
}

_QWORD *assignWithCopy for GradientStore(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for GradientStore(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for KeyValuePairsCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyValuePairsCollection);
}

uint64_t sub_242B09780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_242AC3D20();
    v2 = v12;
    v4 = (_OWORD *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v11 = *v4;
      v8 = *(_QWORD *)(v12 + 16);
      v7 = *(_QWORD *)(v12 + 24);
      sub_242C480E0();
      swift_unknownObjectRetain();
      if (v8 >= v7 >> 1)
        sub_242AC3D20();
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v9 = v12 + 32 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      *(_OWORD *)(v9 + 48) = v11;
      v4 = (_OWORD *)((char *)v4 + 40);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242B09870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v11 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_6_26();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - v13;
  sub_242C48680();
  v15 = (uint64_t)&v14[*(int *)(v11 + 48)];
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a1, v14, a6);
  return OUTLINED_FUNCTION_26_22(a2, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32));
}

void sub_242B0993C()
{
  sub_242C48008();
  sub_242C480E0();
  OUTLINED_FUNCTION_3_15();
  sub_242C48650();
  OUTLINED_FUNCTION_13_29();
}

void sub_242B099BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_242C4841C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 - 48) = v1;
  OUTLINED_FUNCTION_22_19();
  sub_242C48650();
  OUTLINED_FUNCTION_201();
}

uint64_t sub_242B09A04()
{
  uint64_t v0;

  v0 = sub_242C48C08();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B09A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_242C480E0();
  v2 = sub_242B09780(v1);
  result = swift_bridgeObjectRelease();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    sub_242C480BC();
    v4 = sub_242A5AEC0(v2);
    v5 = swift_bridgeObjectRelease();
    sub_242A5D36C(v5);
    return v4;
  }
  return result;
}

uint64_t sub_242B09AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[9];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_17_17();
  v22 = v0;
  v23 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v15 = MEMORY[0x2494EBCA0](&v21, v13, v9, v7, v14, v3);
  if (!v21)
    goto LABEL_5;
  if (!*(_QWORD *)(v21 + 16))
  {
    OUTLINED_FUNCTION_3_6();
LABEL_5:
    OUTLINED_FUNCTION_22_19();
    return sub_242C485C0();
  }
  MEMORY[0x24BDAC7A8](v15);
  v20[2] = v7;
  v20[3] = v5;
  v20[4] = v3;
  v20[5] = v11;
  v20[6] = v9;
  v16 = sub_242B0BED8();
  v18 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242B0BEB4, (uint64_t)v20, v14, v5, MEMORY[0x24BEE4078], v16, MEMORY[0x24BEE40A8], v17);
  OUTLINED_FUNCTION_3_6();
  return v18;
}

void sub_242B09BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_50();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257220EA0);
  OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_13_21();
  OUTLINED_FUNCTION_7_30();
  OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_3_15();
  sub_242C48E6C();
  OUTLINED_FUNCTION_3_6();
  v3 = type metadata accessor for KeyValuePairsCollection(0, v2, v1, v0);
  sub_242B09F10(v3);
  OUTLINED_FUNCTION_8();
}

void sub_242B09CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_50();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257220EA0);
  OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_13_21();
  OUTLINED_FUNCTION_7_30();
  v3 = type metadata accessor for KeyValuePairsCollection(0, v2, v1, v0);
  sub_242B09F10(v3);
  OUTLINED_FUNCTION_8();
}

uint64_t sub_242B09D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a5;
  v34 = a2;
  v35 = a6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v11 = (char *)&v28 - v10;
  v12 = *(_QWORD *)(a3 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(int *)(v17 + 48);
  v19 = &v11[v18];
  v20 = a1 + v18;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v32 = a1;
  v30 = v21;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v21)(v11, a1, a3, v14);
  v22 = *(_QWORD *)(a4 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v31 = v20;
  v29 = v23;
  v23(v19, v20, a4);
  sub_242C48764();
  LOBYTE(v20) = sub_242C48740();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, a3);
  v24 = *(void (**)(char *, uint64_t))(v22 + 8);
  v24(v19, a4);
  if ((v20 & 1) == 0)
    return __swift_storeEnumTagSinglePayload(v35, 1, 1, a3);
  v25 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
  v30(v11, v32, a3);
  v29(v25, v31, a4);
  v26 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v35, v11, a3);
  __swift_storeEnumTagSinglePayload(v26, 0, 1, a3);
  return ((uint64_t (*)(char *, uint64_t))v24)(v25, a4);
}

uint64_t sub_242B09F10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t *v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD v70[5];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v60 = a1;
  v61 = v2;
  v55 = v3;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v58 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v59 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v49 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v49 - v13;
  v15 = swift_getTupleTypeMetadata2();
  v62 = sub_242C48A64();
  v66 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v49 - v19);
  v64 = v1;
  v70[1] = *v1;
  v21 = TupleTypeMetadata2;
  v22 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v22);
  sub_242C48428();
  v69 = v70[0];
  sub_242C48FBC();
  sub_242C48F98();
  v23 = v14;
  v24 = v20;
  v57 = sub_242C48FB0();
  sub_242C48FA4();
  v25 = v15;
  v56 = *(void (**)(uint64_t *, char *, uint64_t))(v66 + 32);
  v56(v24, v17, v62);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v15) != 1)
  {
    v66 = *(_QWORD *)(v61 - 8);
    v50 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v49 = v64 + 1;
    v53 = v15;
    v54 = v8;
    v67 = v11;
    v52 = v17;
    v51 = v24;
    v65 = v21;
    v68 = v14;
    do
    {
      v26 = *(int *)(v21 + 48);
      v27 = &v23[v26];
      v64 = (_QWORD *)*v24;
      v28 = (char *)v24 + *(int *)(v25 + 48) + v26;
      v29 = &v11[v26];
      v30 = v61;
      v31 = v50;
      ((void (*)(char *))v50)(v11);
      v32 = v55;
      v33 = *(_QWORD **)(v55 - 8);
      v34 = (void (*)(char *, char *, uint64_t))v33[4];
      v34(v29, v28, v55);
      v31(v68, v67, v30);
      v34(v27, v29, v32);
      v63 = &v8[*(int *)(v21 + 48)];
      v35 = v63;
      v36 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
      v36(v8, v68, v30);
      v37 = (void (*)(char *, char *, uint64_t))v33[2];
      v37(v35, v27, v32);
      v38 = v59;
      v39 = &v59[*(int *)(v65 + 48)];
      v36(v59, v68, v30);
      v37(v39, v27, v32);
      v40 = *v49;
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
      MEMORY[0x2494EBCA0](v70, v38, v40, v30, v41, *(_QWORD *)(v60 + 32));
      if (v70[0])
        v42 = v70[0];
      else
        v42 = MEMORY[0x24BEE4AF8];
      v43 = (void (*)(char *, uint64_t))v33[1];
      v44 = v39;
      v23 = v68;
      v43(v44, v32);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v30);
      v70[0] = v42;
      sub_242B64CF8((uint64_t)v64);
      v24 = v51;
      v45 = v65;
      v25 = v53;
      v46 = v54;
      v47 = v52;
      sub_242C480F8();
      v8 = v46;
      sub_242C48110();
      v21 = v45;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v45);
      v43(v63, v32);
      v11 = v67;
      sub_242C48FA4();
      v56(v24, v47, v62);
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25) != 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B0A3A8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v8 = (char *)&v10 - v7;
  sub_242C48680();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, &v8[*(int *)(TupleTypeMetadata2 + 48)], a2);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v8, a1);
}

uint64_t sub_242B0A484@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_242B0A49C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_242B09BF8, a3);
}

uint64_t sub_242B0A490@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_242B0A49C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_242B09CB8, a3);
}

uint64_t sub_242B0A49C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v6;

  result = a3(a1, a2[2], a2[3], a2[4]);
  *a4 = result;
  a4[1] = v6;
  return result;
}

uint64_t sub_242B0A4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_3_15();
  return a6(a1, v7);
}

uint64_t sub_242B0A520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = OUTLINED_FUNCTION_3_15();
  return a8(a1, a2, a3, v11);
}

uint64_t sub_242B0A584()
{
  OUTLINED_FUNCTION_2_50();
  OUTLINED_FUNCTION_3_15();
  return sub_242C48608();
}

uint64_t sub_242B0A5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_242B0A4D0(*v4, a2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1118]);
  *a4 = result;
  return result;
}

uint64_t sub_242B0A614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_242B0A4D0(*v4, a2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1220]);
  *a4 = result;
  return result;
}

void (*sub_242B0A64C(uint64_t **a1, uint64_t *a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  char *v12;
  void (*v13)(_QWORD *);
  uint64_t v14;
  uint64_t v15;

  v7 = (uint64_t *)malloc(0x40uLL);
  *a1 = v7;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[4] = TupleTypeMetadata2;
  v11 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v7[5] = v11;
  v12 = (char *)malloc(*(_QWORD *)(v11 + 64));
  v7[6] = (uint64_t)v12;
  v13 = sub_242B0A78C(v7, *a2, *v3, v3[1], v8, v9);
  v15 = v14;
  v7[7] = (uint64_t)v13;
  (*(void (**)(char *))(*(_QWORD *)(v8 - 8) + 16))(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(&v12[*(int *)(TupleTypeMetadata2 + 48)], v15, v9);
  return sub_242B0A738;
}

void sub_242B0A738(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_242B0A78C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(_QWORD *a1)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v12 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v12;
  v13 = malloc(*(_QWORD *)(v12 + 64));
  a1[2] = (uint64_t)v13;
  sub_242B09870((uint64_t)v13, (uint64_t)v13 + *(int *)(TupleTypeMetadata2 + 48), a2, a3, v14, a5, a6);
  return sub_242B0A83C;
}

void sub_242B0A83C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_242B0A870(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C55658, a1);
  return sub_242C487A0();
}

uint64_t sub_242B0A8D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t *v5;
  uint64_t result;

  result = sub_242B0AA2C(*a1, *v5, a3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4, MEMORY[0x24BEE11D0]);
  *a5 = result;
  return result;
}

uint64_t sub_242B0A910(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t result;

  result = sub_242B0AA2C(*a1, *v6, a3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a6, MEMORY[0x24BEE11D0]);
  *a1 = result;
  return result;
}

uint64_t sub_242B0A94C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = *v2;
  v4 = v2[1];
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  sub_242C480E0();
  sub_242C480E0();
  v10 = sub_242B0A4D0(v5, v8, v6, v7, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1118]);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v10;
  return result;
}

uint64_t sub_242B0A9C4(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C55710, a1);
  return sub_242C487E8();
}

uint64_t sub_242B0A9F8(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C55710, a1);
  return sub_242C48818();
}

uint64_t sub_242B0AA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = OUTLINED_FUNCTION_3_15();
  return a7(a1, a2, v9);
}

uint64_t sub_242B0AA84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t *v5;
  uint64_t result;

  result = sub_242B0AA2C(*a1, *v5, a3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4, MEMORY[0x24BEE11D8]);
  *a5 = result;
  return result;
}

uint64_t sub_242B0AAC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t result;

  result = sub_242B0AA2C(*a1, *v6, a3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a6, MEMORY[0x24BEE11D8]);
  *a1 = result;
  return result;
}

uint64_t sub_242B0AAFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t *v6;
  uint64_t result;

  result = sub_242B0A520(*a1, a2, *v6, a4, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a5, MEMORY[0x24BEE11E8]);
  *a6 = result;
  return result;
}

uint64_t sub_242B0AB38@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_242B0A584();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_242B0AB78(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;

  return sub_242B0A520(*a1, *a2, *v7, a4, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a7, MEMORY[0x24BEE1218]);
}

void sub_242B0ABA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[34];

  OUTLINED_FUNCTION_17_17();
  v15[10] = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v15[18] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v15[14] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C48A64();
  OUTLINED_FUNCTION_6_26();
  MEMORY[0x24BDAC7A8](v11);
  v15[15] = (char *)v15 - v12;
  v15[28] = v8;
  v15[29] = v6;
  v15[12] = v6;
  v13 = OUTLINED_FUNCTION_22_19();
  type metadata accessor for KeyValuePairsCollection(v13, v14, v4, v2);
  OUTLINED_FUNCTION_13_29();
}

uint64_t sub_242B0B1A4()
{
  swift_getTupleTypeMetadata2();
  return sub_242C48200() & 1;
}

void sub_242B0B208()
{
  sub_242B0ABA8();
}

void sub_242B0B22C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  v0 = OUTLINED_FUNCTION_3_15();
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  sub_242C48650();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_13_29();
}

void sub_242B0B300()
{
  uint64_t v0;
  uint64_t v1;

  sub_242C48488();
  swift_bridgeObjectRelease();
  sub_242C480E0();
  v1 = sub_242C48554();
  OUTLINED_FUNCTION_34();
  *(_QWORD *)(v0 - 88) = v1;
  OUTLINED_FUNCTION_18_26();
}

void sub_242B0B498()
{
  sub_242C49340();
  sub_242B0B22C();
}

uint64_t sub_242B0B4F4()
{
  return sub_242C49394();
}

void sub_242B0B514()
{
  sub_242B0B498();
}

void sub_242B0B52C()
{
  sub_242B0B22C();
}

void sub_242B0B544()
{
  sub_242C49340();
  sub_242B0B22C();
}

uint64_t sub_242B0B584()
{
  return sub_242C49394();
}

void sub_242B0B5A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(_QWORD, _QWORD, _QWORD);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_17_17();
  v44 = v1;
  v3 = *(_QWORD *)(v2 + 16);
  v4 = OUTLINED_FUNCTION_3_15();
  v41 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v29 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - v10;
  v12 = OUTLINED_FUNCTION_3_15();
  v43 = sub_242C48A64();
  v45 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - v16;
  v42 = v0;
  v48 = *v0;
  v18 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v18);
  sub_242C48428();
  v46 = v47;
  sub_242C48FBC();
  sub_242C48F98();
  v38 = v18;
  v37 = sub_242C48FB0();
  sub_242C48FA4();
  v19 = v17;
  v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v45 + 32);
  v39 = v14;
  v36 = v20;
  v20(v17, v14, v43);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v12) != 1)
  {
    v21 = *(_QWORD *)(v3 - 8);
    v30 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v35 = v12;
    v34 = v11;
    v33 = v3;
    v32 = v4;
    v31 = v19;
    v45 = *v19;
    v22 = (char *)v19 + *(int *)(v12 + 48);
    v23 = *(int *)(v4 + 48);
    v24 = *(_QWORD *)&v22[v23];
    v25 = v40;
    v26 = v30;
    ((void (*)(char *))v30)(v40);
    *(_QWORD *)&v25[v23] = v24;
    v27 = *(int *)(v4 + 48);
    v26(v11, v25, v3);
    *(_QWORD *)&v11[v27] = v24;
    v28 = *(int *)(v4 + 48);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v6, v11, v3);
    *(_QWORD *)&v6[v28] = v24;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B0BC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for KeyValuePairsCollection(0, a4, (uint64_t)&type metadata for Tensor, a5);
  OUTLINED_FUNCTION_0_2();
  sub_242C480E0();
  sub_242B0B5A0();
  return a2;
}

uint64_t sub_242B0BCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v6;

  result = sub_242B0BC6C(a1, *v3, v3[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 32));
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_242B0BD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 16) + 8);
  return MEMORY[0x2494EDE24](&unk_242C555C4, a1, &v4);
}

void sub_242B0BD50()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B0BD60()
{
  sub_242B0BE34();
}

uint64_t sub_242B0BD6C(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2494EDE24](&unk_242C555F8);
  return MEMORY[0x2494EDE24](MEMORY[0x24BEE4218], a1, &v3);
}

void sub_242B0BDB4()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B0BDC4()
{
  sub_242B0BE34();
}

uint64_t sub_242B0BDD0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2494EDE24](&unk_242C55658);
  return MEMORY[0x2494EDE24](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_242B0BE18()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B0BE28()
{
  sub_242B0BE34();
}

void sub_242B0BE34()
{
  sub_242AA1C80();
  OUTLINED_FUNCTION_201();
}

uint64_t sub_242B0BE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_242B09D2C(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_242B0BE94()
{
  return sub_242B0B1A4() & 1;
}

uint64_t sub_242B0BEB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242B0A3A8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_242B0BED8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257227220;
  if (!qword_257227220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257220EA0);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257227220);
  }
  return result;
}

uint64_t sub_242B0BF1C()
{
  return sub_242C481AC() & 1;
}

uint64_t OUTLINED_FUNCTION_3_41()
{
  return sub_242C48770();
}

uint64_t OUTLINED_FUNCTION_7_30()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_9_34()
{
  return sub_242B09AE0();
}

void OUTLINED_FUNCTION_11_29()
{
  sub_242B0993C();
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 264);
}

void OUTLINED_FUNCTION_13_29()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_15_24@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_16_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_17_22()
{
  return sub_242C48824();
}

void OUTLINED_FUNCTION_18_26()
{
  JUMPOUT(0x2494EC1C8);
}

uint64_t OUTLINED_FUNCTION_22_19()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_22@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t identity(_:)()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  unint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0C174);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v0 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v0, v1, v2, 13, v3, v4);
  v5 = OUTLINED_FUNCTION_20_27();
  v6 = OUTLINED_FUNCTION_8_27(v5);
  return OUTLINED_FUNCTION_1_45(v6);
}

void sqrt(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0E318);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 21, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0C174(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v3 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v3 + 16) = xmmword_242C4B7D0;
      swift_retain_n();
      swift_retain();
      swift_retain();
      v4 = sub_242AC4964();
      *(_QWORD *)(v3 + 32) = v2;
      *(_QWORD *)(v3 + 40) = v4;
      *(_QWORD *)(v3 + 48) = v5;
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_135();
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void acos(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0C2DC);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 1, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0C2DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[7];
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[3];
  int v13;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v13 = 0;
      memset(v12, 0, sizeof(v12));
      v10 = MEMORY[0x24BEE4AF8];
      sub_242A66290((uint64_t)v12, (uint64_t)v9);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)v12);
      v4 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)&v12[0] = v2;
      static Tensor.- prefix(_:)((uint64_t *)v12);
      v10 = v4;
      v11 = v9[0];
      *(_QWORD *)&v12[0] = v3;
      Tensor.squared()();
      static Tensor.- infix(_:_:)();
      swift_release();
      rsqrt(_:)();
      swift_release();
      static Tensor.* infix(_:_:)();
      swift_release();
      swift_release();
      v6 = *(_QWORD *)&v12[0];
      swift_retain();
      v7 = sub_242AC4964();
      *(_QWORD *)(v5 + 32) = v6;
      *(_QWORD *)(v5 + 40) = v7;
      *(_QWORD *)(v5 + 48) = v8;
      swift_release();
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void rsqrt(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0E098);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 17, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void acosh(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0C618);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 2, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0C618(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[7];
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[3];
  int v12;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v12 = 0;
      memset(v11, 0, sizeof(v11));
      v9 = MEMORY[0x24BEE4AF8];
      sub_242A66290((uint64_t)v11, (uint64_t)v8);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
      v8[0] = v2;
      *(_QWORD *)&v11[0] = v3;
      Tensor.squared()();
      v9 = v10;
      static Tensor.- infix(_:_:)();
      swift_release();
      v9 = *(_QWORD *)&v11[0];
      rsqrt(_:)();
      swift_release();
      v9 = v10;
      static Tensor.* infix(_:_:)();
      swift_release();
      v5 = *(_QWORD *)&v11[0];
      swift_retain();
      v6 = sub_242AC4964();
      *(_QWORD *)(v4 + 32) = v5;
      *(_QWORD *)(v4 + 40) = v6;
      *(_QWORD *)(v4 + 48) = v7;
      swift_release();
      swift_release();
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void asin(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0C870);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 3, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void sub_242B0C870(uint64_t a1, uint64_t a2)
{
  sub_242B0C964(a1, a2, (uint64_t)&unk_25137CE50, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))static Tensor.- infix(_:_:));
}

void asinh(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0C950);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 4, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void sub_242B0C950(uint64_t a1, uint64_t a2)
{
  sub_242B0C964(a1, a2, (uint64_t)&unk_25137CE78, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))static Tensor.+ infix(_:_:));
}

void sub_242B0C964(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[8];

  if (*(_QWORD *)(a1 + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a2 + 32);
      v7 = OUTLINED_FUNCTION_19_22();
      v25 = MEMORY[0x24BEE4AF8];
      LOBYTE(v23) = v8;
      OUTLINED_FUNCTION_16_23((uint64_t)v27, v9, v7, v23);
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_33_14();
      OUTLINED_FUNCTION_31_22(v10, v11, v12, v13, v14, v15, v16, v17, v23, v24);
      v18 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v19 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v19 + 16) = xmmword_242C4B7D0;
      v24 = v5;
      v26 = v18;
      v27[0] = v6;
      Tensor.squared()();
      v23 = v25;
      a4(v27, &v26, &v23);
      OUTLINED_FUNCTION_135();
      v25 = v27[0];
      rsqrt(_:)();
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_43_14();
      static Tensor.* infix(_:_:)();
      OUTLINED_FUNCTION_135();
      v20 = v27[0];
      OUTLINED_FUNCTION_40_13();
      v21 = sub_242AC4964();
      *(_QWORD *)(v19 + 32) = v20;
      *(_QWORD *)(v19 + 40) = v21;
      *(_QWORD *)(v19 + 48) = v22;
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_39_13();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void atan(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0CB48);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 5, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void sub_242B0CB48(uint64_t a1, uint64_t a2)
{
  sub_242B0CC3C(a1, a2, (uint64_t)&unk_25137CEA0, (void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))static Tensor.+ infix(_:_:));
}

void atanh(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0CC28);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 6, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void sub_242B0CC28(uint64_t a1, uint64_t a2)
{
  sub_242B0CC3C(a1, a2, (uint64_t)&unk_25137CEC8, (void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))static Tensor.- infix(_:_:));
}

void sub_242B0CC3C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[8];

  if (*(_QWORD *)(a1 + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a2 + 32);
      v7 = OUTLINED_FUNCTION_19_22();
      v25 = MEMORY[0x24BEE4AF8];
      LOBYTE(v23) = v8;
      OUTLINED_FUNCTION_16_23((uint64_t)v27, v9, v7, v23);
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_33_14();
      OUTLINED_FUNCTION_31_22(v10, v11, v12, v13, v14, v15, v16, v17, v23, v24);
      v18 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v19 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v19 + 16) = xmmword_242C4B7D0;
      v24 = v5;
      v26 = v6;
      v27[0] = v18;
      Tensor.squared()();
      v23 = v25;
      a4(&v26, v27, &v23);
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_43_14();
      static Tensor./ infix(_:_:)();
      OUTLINED_FUNCTION_135();
      v20 = v27[0];
      OUTLINED_FUNCTION_40_13();
      v21 = sub_242AC4964();
      *(_QWORD *)(v19 + 32) = v20;
      *(_QWORD *)(v19 + 40) = v21;
      *(_QWORD *)(v19 + 48) = v22;
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_39_13();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void ceil(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0CE08);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 7, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void cos(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0CED8);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 8, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0CED8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
      v8 = v2;
      swift_retain();
      swift_retain();
      static Tensor.- prefix(_:)(&v8);
      v8 = v3;
      sin(_:)();
      static Tensor.* infix(_:_:)();
      swift_release();
      swift_release();
      v5 = v8;
      swift_retain();
      v6 = sub_242AC4964();
      *(_QWORD *)(v4 + 32) = v5;
      *(_QWORD *)(v4 + 40) = v6;
      *(_QWORD *)(v4 + 48) = v7;
      swift_release();
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sin(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0E300);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 19, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void cosh(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0D174);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 9, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0D174(uint64_t a1, uint64_t a2)
{
  return sub_242B0E88C(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))sinh(_:));
}

void sinh(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0E30C);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 20, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void exp(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0D318);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 10, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0D318(uint64_t a1, uint64_t a2)
{
  return sub_242B0E88C(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))exp(_:));
}

void exp2(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0D3F0);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 11, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0D3F0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];
  char v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[3];
  int v15;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v4 = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160);
      v15 = 0;
      memset(v14, 0, sizeof(v14));
      v12 = MEMORY[0x24BEE4AF8];
      v11 = v4;
      sub_242A66290((uint64_t)v14, (uint64_t)v10);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)v14);
      v5 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)&v14[0] = v2;
      v10[0] = v3;
      exp2(_:)(&v13, v10);
      v12 = v13;
      static Tensor.* infix(_:_:)();
      swift_release();
      v12 = v5;
      v13 = v10[0];
      static Tensor.* infix(_:_:)();
      swift_release();
      v7 = *(_QWORD *)&v14[0];
      swift_retain();
      v8 = sub_242AC4964();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void exp10(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[14];

  v3 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v3);
  OUTLINED_FUNCTION_10_28();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v17[0] = v0;
    v17[1] = v1;
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  v4 = OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_16_23((uint64_t)v17, v5, v4);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_31_22(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  v17[0] = v16;
  pow(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_26_23();
}

void expMinusOne(_:)()
{
  char v0;
  char v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v2);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  exp(_:)();
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_29_15(v3, v12, v14, v16, v17, v18, v19, v20, SWORD2(v20), SBYTE6(v20), SHIBYTE(v20), v21, v22, v23, v1);
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_31_22(v4, v5, v6, v7, v8, v9, v10, v11, v13, v15);
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_48_14();
  OUTLINED_FUNCTION_26_23();
}

void floor(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0CE08);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 12, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

void log(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0D890);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 14, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0D890(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
      v8 = v3;
      v9 = v2;
      swift_retain();
      swift_retain();
      static Tensor./ infix(_:_:)(&v10, &v9, &v8);
      v5 = v10;
      swift_retain();
      v6 = sub_242AC4964();
      *(_QWORD *)(v4 + 32) = v5;
      *(_QWORD *)(v4 + 40) = v6;
      *(_QWORD *)(v4 + 48) = v7;
      swift_release();
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void log2(_:)()
{
  char v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_42_13();
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_29_15(v2, v11, v13, v15, v16, v17, v18, v19, SWORD2(v19), SBYTE6(v19), SHIBYTE(v19), v20, v21, v22, v23);
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_31_22(v3, v4, v5, v6, v7, v8, v9, v10, v12, v14);
  OUTLINED_FUNCTION_36_16();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_34_15();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_48_14();
  OUTLINED_FUNCTION_26_23();
}

void log10(_:)()
{
  char v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_42_13();
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_29_15(v2, v11, v13, v15, v16, v17, v18, v19, SWORD2(v19), SBYTE6(v19), SHIBYTE(v19), v20, v21, v22, v23);
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_31_22(v3, v4, v5, v6, v7, v8, v9, v10, v12, v14);
  OUTLINED_FUNCTION_36_16();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_34_15();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_48_14();
  OUTLINED_FUNCTION_26_23();
}

void log(onePlus:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[14];

  v3 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v3);
  OUTLINED_FUNCTION_10_28();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v16[0] = v0;
    v16[1] = v1;
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  v4 = OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_16_23((uint64_t)v16, v5, v4);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_31_22(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_135();
  log(_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_26_23();
}

uint64_t log(oneMinusExp:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  double v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[6];
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[7];
  uint64_t v40;

  v39[0] = *a1;
  v10 = v39[0];
  OUTLINED_FUNCTION_46_12((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v32, v35[0]);
  v11 = OUTLINED_FUNCTION_19_22();
  v37 = MEMORY[0x24BEE4AF8];
  v36 = v12;
  OUTLINED_FUNCTION_16_23((uint64_t)v39, v13, v11);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_31_22(v14, v15, v16, v17, v18, v19, v20, v21, v33, v35[0]);
  v39[0] = v38;
  log(_:)();
  OUTLINED_FUNCTION_135();
  v38 = v35[0];
  static Tensor..< infix(_:_:)();
  OUTLINED_FUNCTION_135();
  swift_release();
  v22 = v39[0];
  v35[0] = v10;
  OUTLINED_FUNCTION_5();
  Tensor.init(onesLike:)(v35, v39);
  OUTLINED_FUNCTION_46_12(v23, v24, v25, v26, v27, v28, v29, v30, v34, v10);
  v37 = v22;
  v38 = v40;
  Tensor.replacing(with:where:)(&v38, &v37, (uint64_t)v39);
  swift_release();
  v35[0] = v39[0];
  exp(_:)();
  v40 = v39[0];
  static Tensor.- prefix(_:)(&v40);
  OUTLINED_FUNCTION_135();
  v40 = v35[0];
  log(onePlus:)();
  OUTLINED_FUNCTION_135();
  v35[0] = v39[0];
  v38 = v10;
  expMinusOne(_:)();
  v37 = v40;
  static Tensor.- prefix(_:)(&v37);
  OUTLINED_FUNCTION_135();
  v37 = v38;
  log(_:)();
  OUTLINED_FUNCTION_135();
  v37 = v22;
  v38 = v40;
  Tensor.replacing(with:where:)(&v38, &v37, a9);
  OUTLINED_FUNCTION_17_1();
  swift_release();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_5();
  return swift_release();
}

void reciprocal(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0DE34);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 15, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0DE34(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[7];
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[3];
  int v12;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v12 = 0;
      memset(v11, 0, sizeof(v11));
      v9 = MEMORY[0x24BEE4AF8];
      sub_242A66290((uint64_t)v11, (uint64_t)v8);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)v11);
      *(_QWORD *)&v11[0] = v10;
      static Tensor.- prefix(_:)((uint64_t *)v11);
      swift_release();
      v10 = v8[0];
      *(_QWORD *)&v11[0] = v3;
      Tensor.squared()();
      static Tensor./ infix(_:_:)();
      swift_release();
      swift_release();
      v9 = *(_QWORD *)&v11[0];
      v10 = v2;
      static Tensor.* infix(_:_:)();
      swift_release();
      v4 = v8[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v6 = sub_242AC4964();
      *(_QWORD *)(v5 + 32) = v4;
      *(_QWORD *)(v5 + 40) = v6;
      *(_QWORD *)(v5 + 48) = v7;
      swift_release();
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void round(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0CE08);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 16, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0E098(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[7];
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int v17;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      v14 = 0u;
      v4 = MEMORY[0x24BEE4AF8];
      v12 = MEMORY[0x24BEE4AF8];
      sub_242A66290((uint64_t)&v14, (uint64_t)v11);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)&v14);
      v5 = v13;
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      v14 = 0u;
      v12 = v4;
      sub_242A66290((uint64_t)&v14, (uint64_t)v11);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)&v14);
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      v14 = 0u;
      v12 = v4;
      sub_242A66290((uint64_t)&v14, (uint64_t)v11);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)&v14);
      v6 = v13;
      v13 = v5;
      *(_QWORD *)&v14 = v2;
      static Tensor.* infix(_:_:)();
      v13 = v11[0];
      *(_QWORD *)&v14 = v6;
      v12 = v3;
      pow(_:_:)();
      static Tensor.* infix(_:_:)();
      swift_release();
      static Tensor./ infix(_:_:)();
      swift_release();
      swift_release();
      v7 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v9 = sub_242AC4964();
      *(_QWORD *)(v8 + 32) = v7;
      *(_QWORD *)(v8 + 40) = v9;
      *(_QWORD *)(v8 + 48) = v10;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242B0E300(uint64_t a1, uint64_t a2)
{
  return sub_242B0E88C(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))cos(_:));
}

uint64_t sub_242B0E30C(uint64_t a1, uint64_t a2)
{
  return sub_242B0E88C(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))cosh(_:));
}

uint64_t sub_242B0E318(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[6];
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int v19;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v12[0] = *(_QWORD *)(a2 + 32);
      swift_retain();
      swift_retain();
      sqrt(_:)(&v16, v12);
      v3 = v16;
      v4 = *(_BYTE *)(*(_QWORD *)(v16 + 16) + 160);
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
      v16 = 0u;
      v5 = MEMORY[0x24BEE4AF8];
      v14 = MEMORY[0x24BEE4AF8];
      v13 = v4;
      sub_242A66290((uint64_t)&v16, (uint64_t)v12);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)&v16);
      v6 = v15;
      v7 = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160);
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
      v16 = 0u;
      v14 = v5;
      v13 = v7;
      sub_242A66290((uint64_t)&v16, (uint64_t)v12);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)&v16);
      v12[0] = v6;
      *(_QWORD *)&v16 = v15;
      v14 = v3;
      static Tensor.* infix(_:_:)();
      v14 = v15;
      static Tensor./ infix(_:_:)();
      swift_release();
      v14 = v16;
      v15 = v2;
      static Tensor.* infix(_:_:)();
      swift_release();
      v8 = v12[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v10 = sub_242AC4964();
      *(_QWORD *)(v9 + 32) = v8;
      *(_QWORD *)(v9 + 40) = v10;
      *(_QWORD *)(v9 + 48) = v11;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void tan(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0E5EC);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 23, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0E5EC(uint64_t a1, uint64_t a2)
{
  return sub_242B0E6D0(a1, a2, (void (*)(uint64_t *__return_ptr, _QWORD *))cos(_:));
}

void tanh(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0E6C4);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 24, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0E6C4(uint64_t a1, uint64_t a2)
{
  return sub_242B0E6D0(a1, a2, (void (*)(uint64_t *__return_ptr, _QWORD *))cosh(_:));
}

uint64_t sub_242B0E6D0(uint64_t result, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  uint64_t v11;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v4 = *(_QWORD *)(result + 32);
      v5 = *(_QWORD *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v6 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
      v10[0] = v5;
      v10[1] = v4;
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_6();
      a3(&v11, v10);
      Tensor.squared()();
      OUTLINED_FUNCTION_17_5();
      static Tensor./ infix(_:_:)();
      OUTLINED_FUNCTION_135();
      v7 = v11;
      OUTLINED_FUNCTION_40_13();
      v8 = sub_242AC4964();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_8_1();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void abs(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0E880);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 0, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0E880(uint64_t a1, uint64_t a2)
{
  return sub_242B0E88C(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))sign(_:));
}

uint64_t sub_242B0E88C(uint64_t result, uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  uint64_t v11;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v4 = *(_QWORD *)(result + 32);
      v5 = *(_QWORD *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v6 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
      v10[1] = v4;
      v11 = v5;
      swift_retain();
      OUTLINED_FUNCTION_6();
      a3(v10, &v11);
      static Tensor.* infix(_:_:)();
      OUTLINED_FUNCTION_17_1();
      v7 = v11;
      OUTLINED_FUNCTION_40_13();
      v8 = sub_242AC4964();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_8_1();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sign(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0CE08);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 18, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0EA20(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v3 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v3 + 16) = xmmword_242C4B7D0;
      v7 = v2;
      swift_retain_n();
      OUTLINED_FUNCTION_6();
      Tensor.init(zerosLike:)(&v7, &v8);
      v4 = v8;
      OUTLINED_FUNCTION_40_13();
      v5 = sub_242AC4964();
      *(_QWORD *)(v3 + 32) = v4;
      *(_QWORD *)(v3 + 40) = v5;
      *(_QWORD *)(v3 + 48) = v6;
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_8_1();
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void square(_:)()
{
  char v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_20();
  v1 = OUTLINED_FUNCTION_2_51();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B0EB98);
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_4_38();
  OUTLINED_FUNCTION_12_25();
  v2 = OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_3_42(v2, v3, v4, 22, v5, v6);
  v7 = OUTLINED_FUNCTION_20_27();
  v8 = OUTLINED_FUNCTION_8_27(v7);
  OUTLINED_FUNCTION_1_45(v8);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242B0EB98(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];
  char v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[3];
  int v15;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v4 = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160);
      v15 = 0;
      memset(v14, 0, sizeof(v14));
      v12 = MEMORY[0x24BEE4AF8];
      v11 = v4;
      sub_242A66290((uint64_t)v14, (uint64_t)v10);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)v14);
      v5 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
      v10[0] = v2;
      *(_QWORD *)&v14[0] = v5;
      v12 = v3;
      static Tensor.* infix(_:_:)();
      v12 = v13;
      static Tensor.* infix(_:_:)();
      swift_release();
      v7 = *(_QWORD *)&v14[0];
      swift_retain();
      v8 = sub_242AC4964();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Tensor.clamped(to:)@<X0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  char v3;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[4];
  char v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;

  v95 = *MEMORY[0x24BDAC8D0];
  v7 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_7_31((uint64_t)v7);
  OUTLINED_FUNCTION_10_28();
  if ((v3 & 1) == 0)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    v90[0] = a1;
    v90[1] = v90;
    v90[2] = 0;
    v90[3] = 0;
    v91 = 6;
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v93 = 2;
    v94 = 3;
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_37_16();
  v8 = MEMORY[0x24BEE4AF8];
  v51 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(float *)(inited + 32) = a2;
  v17 = OUTLINED_FUNCTION_41_16(inited, v10, v11, v12, v13, v14, v15, v16, 1, 2, v47, v51, v54, v56, v58, v60, v62, v64, v66,
          v68,
          v70,
          v72,
          v74,
          v76,
          v78,
          v80,
          v82,
          v84,
          v86,
          v88,
          v90[0]);
  OUTLINED_FUNCTION_45_9(v17, v18, v19, v20, v21, v22, v23, v24, v42, v45, v48, v52);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v90);
  OUTLINED_FUNCTION_37_16();
  v25 = swift_initStackObject();
  *(_OWORD *)(v25 + 16) = v43;
  *(float *)(v25 + 32) = a3;
  v33 = OUTLINED_FUNCTION_41_16(v25, v26, v27, v28, v29, v30, v31, v32, v43, *((uint64_t *)&v43 + 1), v49, v8, v55, v57, v59, v61, v63, v65, v67,
          v69,
          v71,
          v73,
          v75,
          v77,
          v79,
          v81,
          v83,
          v85,
          v87,
          v89,
          v90[0]);
  OUTLINED_FUNCTION_45_9(v33, v34, v35, v36, v37, v38, v39, v40, v44, v46, v50, v53);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v90);
  min(_:_:)();
  max(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_28_5();
}

uint64_t OUTLINED_FUNCTION_1_45(uint64_t a1, ...)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t (**v3)(_QWORD, _QWORD);
  va_list va;

  va_start(va, a1);
  return sub_242BC9830(v2, v3, 0, (uint64_t)va, v1);
}

void *OUTLINED_FUNCTION_2_51()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_3_42(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return sub_242ABCF44(a1, a2, a3, a4, v7, a6, v6, v8);
}

uint64_t OUTLINED_FUNCTION_4_38()
{
  return type metadata accessor for UnaryArithmeticOperation();
}

uint64_t OUTLINED_FUNCTION_5_43()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_7_31(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

uint64_t OUTLINED_FUNCTION_8_27(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_242A66290(v1 + 168, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_10_28()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_13_30()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_14_20()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_16_23(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_242A66290(a1, (uint64_t)va);
}

double OUTLINED_FUNCTION_19_22()
{
  return 0.0;
}

unint64_t OUTLINED_FUNCTION_20_27()
{
  return sub_242A70094();
}

uint64_t OUTLINED_FUNCTION_21_22(uint64_t a1)
{
  return sub_242BD0D40(a1);
}

void OUTLINED_FUNCTION_27_19()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_28_22()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_29_15@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, __int16 a9, char a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v15;

  a12 = v15;
  a11 = a1;
  return sub_242A66290((uint64_t)&a15, (uint64_t)&a2);
}

void OUTLINED_FUNCTION_30_20()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_31_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return sub_242A662D8((uint64_t)va);
}

void OUTLINED_FUNCTION_33_14()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_34_15()
{
  static Tensor./ infix(_:_:)();
}

void OUTLINED_FUNCTION_36_16()
{
  log(_:)();
}

double OUTLINED_FUNCTION_37_16()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)v0 = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_40_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_41_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  return sub_242A66290((uint64_t)&a31, (uint64_t)&a19);
}

void OUTLINED_FUNCTION_42_13()
{
  log(_:)();
}

char *OUTLINED_FUNCTION_45_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t OUTLINED_FUNCTION_46_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return static Tensor.- prefix(_:)((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_48_14()
{
  return swift_release();
}

uint64_t sub_242B0F168()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_242B0F1B0(char a1)
{
  if (!a1)
    return 6713957;
  if (a1 == 1)
    return 0x64696F6D676973;
  return 0x4C6552796B61656CLL;
}

void sub_242B0F204(unsigned __int8 *a1, char *a2)
{
  sub_242B3F34C(*a1, *a2);
}

void sub_242B0F210()
{
  sub_242C44A08();
}

uint64_t sub_242B0F218()
{
  return sub_242A5C910();
}

void sub_242B0F220()
{
  sub_242BA9170();
}

uint64_t sub_242B0F228@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242B0F168();
  *a1 = result;
  return result;
}

uint64_t sub_242B0F254@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242B0F1B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_242B0F27C(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137D188;
}

uint64_t sub_242B0F28C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0x64696F6D676973;
  if (*(_BYTE *)(v0 + 128) != 1)
    v1 = 0x4C6552796B61656CLL;
  if (*(_BYTE *)(v0 + 128))
    return v1;
  else
    return 6713957;
}

void sub_242B0F2E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _OWORD *a8, double a9, double a10, double a11, __n128 a12, __n128 a13, __n128 a14)
{
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  __int16 v22;

  v15 = *(__n128 *)a8;
  v16 = *(__n128 *)((char *)a8 + 24);
  v17 = *(__n128 *)((char *)a8 + 40);
  *(_BYTE *)(v14 + 128) = a4;
  *(_DWORD *)(v14 + 132) = a6;
  *(_BYTE *)(v14 + 136) = BYTE4(a6) & 1;
  *(_DWORD *)(v14 + 140) = a7;
  *(_BYTE *)(v14 + 144) = BYTE4(a7) & 1;
  if (!a3)
  {
    v19 = v16;
    v20 = v15;
    v18 = v17;
    sub_242C0E1AC();
    v17 = v18;
    v16 = v19;
    v15 = v20;
  }
  OUTLINED_FUNCTION_0_58(a1, a2, a3, v15, v16, v17, a4, a5, a6, a7, (uint64_t)a8, v18.n128_i64[0], v18.n128_i64[1], v19.n128_i64[0], v19.n128_i64[1], v20.n128_i64[0], v20.n128_i64[1], a12, v21,
    a13,
    a14,
    v22,
    SHIBYTE(v22));
  OUTLINED_FUNCTION_1_46();
}

uint64_t sub_242B0F35C()
{
  return sub_242B0F6EC();
}

uint64_t type metadata accessor for ActivationOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B0F384()
{
  uint64_t v0;

  sub_242B0F28C();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + 136) == 1)
  {
    OUTLINED_FUNCTION_3_43();
  }
  else
  {
    OUTLINED_FUNCTION_3_43();
    sub_242C49370();
  }
  if (*(_BYTE *)(v0 + 144) == 1)
    return OUTLINED_FUNCTION_3_43();
  OUTLINED_FUNCTION_3_43();
  return sub_242C49370();
}

uint64_t sub_242B0F430()
{
  return sub_242B0F384();
}

uint64_t sub_242B0F450()
{
  return 1970038130;
}

uint64_t sub_242B0F460(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  if (!a3)
    a1 = sub_242BD0204(1970038130, 0xE400000000000000);
  *(_QWORD *)(v7 + 112) = a6;
  *(_QWORD *)(v7 + 120) = a7;
  return sub_242B056CC(a1, a2, a3, a4, a5);
}

uint64_t sub_242B0F4B8()
{
  return sub_242B0F6EC();
}

uint64_t type metadata accessor for ReLUOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B0F4E0()
{
  return sub_242C4817C();
}

uint64_t sub_242B0F4F0()
{
  return sub_242B0F4E0();
}

uint64_t sub_242B0F504()
{
  return OUTLINED_FUNCTION_4_39();
}

uint64_t sub_242B0F514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v1 + 40) = v2;
  v4 = v1;
  sub_242C4856C();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_242B0F590(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 112) = a4;
  if (!a3)
  {
    v9 = OUTLINED_FUNCTION_4_39();
    a1 = sub_242BD0204(v9, v10);
  }
  return sub_242B056CC(a1, a2, a3, a5, a6);
}

uint64_t sub_242B0F5D0()
{
  return swift_release();
}

uint64_t sub_242B0F5D8()
{
  sub_242B056F8();
  swift_release();
  return OUTLINED_FUNCTION_6_35();
}

uint64_t type metadata accessor for ReLUGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B0F628()
{
  return sub_242C4817C();
}

uint64_t sub_242B0F644()
{
  return sub_242B0F628();
}

uint64_t sub_242B0F658()
{
  return 0x78616D74666F73;
}

void sub_242B0F670(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, __n128 a12, __n128 a13, __n128 a14)
{
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  __int16 v22;

  v15 = *(__n128 *)a6;
  v16 = *(__n128 *)((char *)a6 + 24);
  v17 = *(__n128 *)((char *)a6 + 40);
  *(_QWORD *)(v14 + 128) = a5;
  if (!a3)
  {
    v19 = v16;
    v20 = v15;
    v18 = v17;
    a1 = sub_242BD0204(0x78616D74666F73, 0xE700000000000000);
    v17 = v18;
    v16 = v19;
    v15 = v20;
  }
  OUTLINED_FUNCTION_0_58(a1, a2, a3, v15, v16, v17, a4, a5, (uint64_t)a6, a7, a8, v18.n128_i64[0], v18.n128_i64[1], v19.n128_i64[0], v19.n128_i64[1], v20.n128_i64[0], v20.n128_i64[1], a12, v21,
    a13,
    a14,
    v22,
    SHIBYTE(v22));
  OUTLINED_FUNCTION_1_46();
}

uint64_t sub_242B0F6E4()
{
  return sub_242B0F6EC();
}

uint64_t sub_242B0F6EC()
{
  uint64_t v0;

  v0 = sub_242B056F8();
  sub_242A6549C(*(_QWORD *)(v0 + 112));
  return OUTLINED_FUNCTION_6_35();
}

uint64_t type metadata accessor for SoftmaxOperation()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ActivationOperation.Operator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242B0F790 + 4 * byte_242C55875[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242B0F7C4 + 4 * byte_242C55870[v4]))();
}

uint64_t sub_242B0F7C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B0F7CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B0F7D4);
  return result;
}

uint64_t sub_242B0F7E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B0F7E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242B0F7EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B0F7F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivationOperation.Operator()
{
  return &type metadata for ActivationOperation.Operator;
}

unint64_t sub_242B0F814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2572275E0;
  if (!qword_2572275E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2572275E8);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2572275E0);
  }
  return result;
}

unint64_t sub_242B0F85C()
{
  unint64_t result;

  result = qword_2572275F0;
  if (!qword_2572275F0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C559BC, &type metadata for ActivationOperation.Operator);
    atomic_store(result, (unint64_t *)&qword_2572275F0);
  }
  return result;
}

uint64_t sub_242B0F898()
{
  sub_242C4817C();
  return sub_242C4934C();
}

uint64_t sub_242B0F8D8()
{
  return sub_242B0F898();
}

uint64_t sub_242B0F8F8(uint64_t a1)
{
  uint64_t result;

  result = sub_242B0F960(&qword_257221320, type metadata accessor for SoftmaxOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B0F92C(uint64_t a1)
{
  uint64_t result;

  result = sub_242B0F960(&qword_257221338, type metadata accessor for ActivationOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B0F960(unint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2();
    result = MEMORY[0x2494EDE24](&unk_242C54FA0, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_58(int a1, uint64_t a2, uint64_t a3, __n128 a4, __n128 a5, __n128 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __n128 a18, uint64_t a19, __n128 a20,__n128 a21,char a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  a18 = a4;
  a19 = v27;
  a20 = a5;
  a21 = a6;
  a22 = v28;
  a23 = 0;
  *(_QWORD *)(v24 + 112) = v26;
  *(_QWORD *)(v24 + 120) = v25;
  return sub_242B056CC(a1, a2, a3, v23, (uint64_t)&a18);
}

uint64_t OUTLINED_FUNCTION_3_43()
{
  return sub_242C49358();
}

uint64_t OUTLINED_FUNCTION_4_39()
{
  return 0x6172675F756C6572;
}

uint64_t sub_242B0F9FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      sub_242C480E0();
      if (v8 >= v7 >> 1)
        sub_242AC315C();
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242B0FAD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_242AC3D58();
    v3 = v9;
    v4 = a1 + 48;
    do
    {
      sub_242C480E0();
      swift_unknownObjectRetain();
      swift_getAtKeyPath();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v8;
      v6 = *(_QWORD *)(v9 + 16);
      if (v6 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242AC3D58();
        v5 = v8;
      }
      *(_QWORD *)(v9 + 16) = v6 + 1;
      *(_OWORD *)(v9 + 16 * v6 + 32) = v5;
      v4 += 32;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_242B0FC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  if (qword_257220520 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  v2 = qword_257220DF8;
  type metadata accessor for LazyTensorFunctionExecutorCache();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_242B26D48(v2);
  return v1;
}

_QWORD *sub_242B0FCA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[19];
  unint64_t v13;

  sub_242A670D8(a1, (uint64_t)v12);
  v2 = sub_242B0FECC(v12);
  if (!v1)
  {
    sub_242B1060C((uint64_t)v12, v2, v3);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_6();
    sub_242B1068C((uint64_t)v12);
    OUTLINED_FUNCTION_35();
    swift_bridgeObjectRelease();
    v5 = v13;
    if (v13 >> 62)
      goto LABEL_15;
    v6 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_13_31();
    for (; v6; v6 = sub_242C48FC8())
    {
      v7 = 4;
      while (1)
      {
        if ((v5 & 0xC000000000000001) != 0)
          MEMORY[0x2494EC84C](v7 - 4, v5);
        else
          swift_retain();
        v8 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        v9 = sub_242BC9B20();
        swift_release();
        swift_unknownObjectRelease();
        if (!v9)
        {
          OUTLINED_FUNCTION_14_21();
          sub_242B11520();
          swift_allocError();
          v11 = v10;
          sub_242C48C38();
          sub_242C48314();
          sub_242C48E78();
          *(_QWORD *)v11 = 0;
          *(_QWORD *)(v11 + 8) = 0xE000000000000000;
          *(_BYTE *)(v11 + 84) = 5;
          swift_willThrow();
          return sub_242A6945C(v12);
        }
        ++v7;
        if (v8 == v6)
          goto LABEL_12;
      }
      __break(1u);
LABEL_15:
      OUTLINED_FUNCTION_13_31();
    }
LABEL_12:
    OUTLINED_FUNCTION_14_21();
  }
  return sub_242A6945C(v12);
}

uint64_t sub_242B0FECC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[16];
  uint64_t *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;

  v2 = v1;
  v4 = a1[11];
  if (v4 >> 62)
    goto LABEL_35;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  for (; v5; v5 = sub_242C48FC8())
  {
    v57 = v2;
    v61 = v4 & 0xC000000000000001;
    v58 = &v66;
    v6 = MEMORY[0x24BEE4AF8];
    v2 = 4;
    v60 = v4;
    v59 = v5;
    while (1)
    {
      if (v61)
      {
        v7 = MEMORY[0x2494EC84C](v2 - 4, v4);
      }
      else
      {
        v7 = *(_QWORD *)(v4 + 8 * v2);
        swift_retain();
      }
      v8 = v2 - 3;
      if (__OFADD__(v2 - 4, 1))
        break;
      v10 = a1[13];
      v9 = a1[14];
      sub_242BC9724();
      v4 = v12;
      if (*(_QWORD *)(v9 + 16))
      {
        v13 = sub_242A61310(v11, v12);
        if ((v14 & 1) != 0)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v13);
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_31;
          if (v15 >= *(_QWORD *)(v10 + 16))
            goto LABEL_32;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      v10 = a1[17];
      v16 = a1[18];
      sub_242BC9724();
      v4 = v18;
      if (*(_QWORD *)(v16 + 16))
      {
        v19 = sub_242A61310(v17, v18);
        if ((v20 & 1) != 0)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v19);
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_33;
          if (v15 >= *(_QWORD *)(v10 + 16))
            goto LABEL_34;
LABEL_17:
          v21 = v10 + 16 * v15;
          v23 = *(_QWORD *)(v21 + 32);
          v22 = *(_QWORD *)(v21 + 40);
          sub_242C480E0();
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      sub_242BC9724();
      v23 = v24;
      v22 = v25;
LABEL_19:
      swift_retain();
      v26 = sub_242BCA40C();
      objc_msgSend(v26, sel_lock);

      swift_beginAccess();
      sub_242A6FF34(v7 + 40, (uint64_t)&v64);
      if (v67 == 1)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_242A6FFE8((uint64_t)v58);
      }
      else
      {
        if (v67 != 2)
        {
          sub_242A6FF70((uint64_t)&v64);
          v32 = sub_242BCA40C();
          objc_msgSend(v32, sel_unlock);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();

          sub_242B11520();
          swift_allocError();
          v34 = v33;
          v64 = 0;
          v65 = 0xE000000000000000;
          sub_242C48C38();
          swift_bridgeObjectRelease();
          v64 = 0xD00000000000001FLL;
          v65 = 0x8000000242C6B290;
          sub_242C48314();
          swift_bridgeObjectRelease();
          sub_242C48314();
          v35 = v65;
          *(_QWORD *)v34 = v64;
          *(_QWORD *)(v34 + 8) = v35;
          *(_BYTE *)(v34 + 84) = 5;
          swift_willThrow();
          return swift_release();
        }
        sub_242A6FF70((uint64_t)&v64);
      }
      v27 = sub_242BCA40C();
      objc_msgSend(v27, sel_unlock);
      swift_release();

      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242A5E290();
        v6 = v30;
      }
      v28 = *(_QWORD *)(v6 + 16);
      if (v28 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_242A5E290();
        v6 = v31;
      }
      *(_QWORD *)(v6 + 16) = v28 + 1;
      v29 = (_QWORD *)(v6 + 24 * v28);
      v29[4] = v23;
      v29[5] = v22;
      v29[6] = v7;
      swift_release();
      ++v2;
      v4 = v60;
      if (v8 == v59)
      {
        swift_bridgeObjectRelease();
        v4 = a1[11];
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    sub_242C480E0();
  }
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x24BEE4AF8];
LABEL_37:
  v37 = *(_QWORD *)(v6 + 16);
  if (v4 >> 62)
  {
    sub_242C480E0();
    v38 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v37 == v38)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v65 = sub_242C480BC();
    v39 = sub_242A5A5CC(v6);
    v40 = swift_bridgeObjectRelease();
    v64 = v39;
    sub_242A5CDDC(v40);
    return v64;
  }
  else
  {
    v41 = sub_242C480E0();
    v42 = sub_242B0F9FC(v41);
    v43 = swift_bridgeObjectRelease();
    v44 = a1[11];
    MEMORY[0x24BDAC7A8](v43);
    v56 = a1;
    sub_242C480E0();
    sub_242B5CB88((uint64_t)sub_242B1155C, (uint64_t)v55, v44);
    v46 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242B11520();
    swift_allocError();
    v48 = v47;
    v64 = 0;
    v65 = 0xE000000000000000;
    sub_242C48C38();
    v49 = swift_bridgeObjectRelease();
    v64 = 0xD00000000000001FLL;
    v65 = 0x8000000242C6B2D0;
    v62 = 8236;
    v63 = 0xE200000000000000;
    MEMORY[0x24BDAC7A8](v49);
    v56 = &v62;
    sub_242C480E0();
    v50 = sub_242B10EB8(0x7FFFFFFFFFFFFFFFLL, 1, sub_242A92A34, (uint64_t)v55, v46);
    swift_bridgeObjectRelease();
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220F50);
    MEMORY[0x2494EC0FC](v50, v51);
    sub_242C48314();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 = sub_242C48314();
    v62 = 8236;
    v63 = 0xE200000000000000;
    MEMORY[0x24BDAC7A8](v52);
    v56 = &v62;
    sub_242C480E0();
    v53 = sub_242B10EB8(0x7FFFFFFFFFFFFFFFLL, 1, sub_242B115CC, (uint64_t)v55, v42);
    swift_bridgeObjectRelease();
    MEMORY[0x2494EC0FC](v53, v51);
    sub_242C48314();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v54 = v65;
    *(_QWORD *)v48 = v64;
    *(_QWORD *)(v48 + 8) = v54;
    *(_BYTE *)(v48 + 84) = 5;
    return swift_willThrow();
  }
}

uint64_t sub_242B1060C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;

  sub_242B109F0(a1);
  v6 = v5;
  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a2, a3, ObjectType, v6);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_242B1068C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __objc2_class_ro *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  char v109;

  v70 = MEMORY[0x24BEE0D00];
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220F60);
  v76 = MEMORY[0x24BEE0D10];
  swift_getKeyPath();
  swift_retain();
  v2 = sub_242C480E0();
  v3 = sub_242B0FAD0(v2);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572276A0);
  *(_QWORD *)(swift_initStackObject() + 16) = v3;
  v4 = *(_QWORD *)(a1 + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572276A8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = 0;
  sub_242C480E0();
  sub_242C480E0();
  swift_release();
  v67 = inited;
  result = sub_242B11488();
  if (!result)
  {
LABEL_25:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v8 = result;
  v9 = v7;
  v10 = 0;
  if (v4 < 0)
    v11 = v4;
  else
    v11 = v4 & 0xFFFFFFFFFFFFFF8;
  v55 = v11;
  v58 = &v108;
  v61 = v4 & 0xC000000000000001;
  v64 = (unint64_t)v4 >> 62;
  v12 = &SliceOperation;
  while (1)
  {
    if (v64)
    {
      sub_242C480E0();
      v13 = sub_242C48FC8();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v10 == v13)
    {
      swift_release();
      OUTLINED_FUNCTION_17_2();
      return swift_bridgeObjectRelease();
    }
    if (!v61)
      break;
    result = MEMORY[0x2494EC84C](v10, v4);
    v14 = result;
LABEL_12:
    if (__OFADD__(v10, 1))
      goto LABEL_29;
    OUTLINED_FUNCTION_123_0();
    v15 = (uint64_t *)OUTLINED_FUNCTION_0_59();
    objc_msgSend(v15, (SEL)v12[32].ivars);

    v16 = OUTLINED_FUNCTION_0_3();
    v24 = OUTLINED_FUNCTION_6_41(v16, v17, v18, v19, v20, v21, v22, v23, v52, v55, (uint64_t)v58, v61, v64, v67, v70, v73, v76, v79, v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88,
            v89,
            v90,
            v91,
            v92,
            v93,
            v94,
            v95,
            v96,
            v97,
            v98,
            v99,
            v100,
            v101,
            v102,
            v103,
            v104,
            v105,
            v106,
            (char)v107);
    if (v109)
    {
      if (v109 == 1)
      {
        v15 = v107;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_242A6FFE8((uint64_t)v58);
      }
      else
      {
        OUTLINED_FUNCTION_12_26(v24, v25, v26, v27, v28, v29, v30, v31, v52, v55, (uint64_t)v58, v61, v64, v67, v70, v73, v76, v79, v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          (char)v107);
      }
      v12 = &SliceOperation;
      v50 = OUTLINED_FUNCTION_0_59();
      OUTLINED_FUNCTION_2_52(v50);
    }
    else
    {
      OUTLINED_FUNCTION_12_26(v24, v25, v26, v27, v28, v29, v30, v31, v52, v55, (uint64_t)v58, v61, v64, v67, v70, v73, v76, v79, v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        (char)v107);
      v32 = OUTLINED_FUNCTION_0_59();
      OUTLINED_FUNCTION_2_52(v32);
      swift_release();

      OUTLINED_FUNCTION_123_0();
      swift_unknownObjectRetain();
      v15 = (uint64_t *)OUTLINED_FUNCTION_0_59();
      objc_msgSend(v15, (SEL)&v12[38].name);

      v41 = OUTLINED_FUNCTION_6_41(v33, v34, v35, v36, v37, v38, v39, v40, v53, v56, v59, v62, v65, v68, v71, v74, v77, v79, v80,
              v81,
              v82,
              v83,
              v84,
              v85,
              v86,
              v87,
              v88,
              v89,
              v90,
              v91,
              v92,
              v93,
              v94,
              v95,
              v96,
              v97,
              v98,
              v99,
              v100,
              v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              (char)v107);
      if (!v109)
      {
        sub_242A6FF34(v14 + 40, (uint64_t)&v79);
        v15 = &v79;
        sub_242BCA82C(v8, v9, (uint64_t)&v93);
        sub_242A6FF70((uint64_t)&v79);
        OUTLINED_FUNCTION_0_3();
        sub_242A8D65C((uint64_t)&v93, v14 + 40);
        v41 = swift_endAccess();
      }
      OUTLINED_FUNCTION_12_26(v41, v42, v43, v44, v45, v46, v47, v48, v54, v57, v60, v63, v66, v69, v72, v75, v78, v79, v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        (char)v107);
      v49 = OUTLINED_FUNCTION_0_59();
      OUTLINED_FUNCTION_2_52(v49);
      OUTLINED_FUNCTION_17_2();
      v12 = &SliceOperation;
    }
    OUTLINED_FUNCTION_17_2();
    swift_release_n();

    result = sub_242B11488();
    v8 = result;
    v9 = v51;
    ++v10;
    if (!result)
      goto LABEL_25;
  }
  if (v10 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(v4 + 8 * v10 + 32);
    result = OUTLINED_FUNCTION_123_0();
    goto LABEL_12;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MILEspressoBackend()
{
  return objc_opt_self();
}

_QWORD *sub_242B109DC(uint64_t a1)
{
  return sub_242B0FCA4(a1);
}

uint64_t sub_242B109F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD v4[5];
  _BYTE v5[248];

  v4[2] = *(_QWORD *)(v1 + 16);
  v4[3] = a1;
  result = sub_242B05354((void (*)(uint64_t *__return_ptr))sub_242B05494, (uint64_t)v4);
  if (!result)
  {
    type metadata accessor for EspressoV1Executor();
    sub_242A670D8(a1, (uint64_t)v5);
    sub_242ACCBEC();
  }
  return result;
}

uint64_t sub_242B10AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_242C4925C() & 1;
}

uint64_t sub_242B10AE8(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    goto LABEL_40;
  }
  v10 = OUTLINED_FUNCTION_4_6();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v42 = v10 + 16;
  v47 = OUTLINED_FUNCTION_4_6();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_242B11278(v30 | (v11 << 16), v47, a2 & 1, v10);
    OUTLINED_FUNCTION_35();
    v13 = *(_QWORD *)(v10 + 16);
    sub_242C480E0();
    swift_release();
LABEL_36:
    swift_release();
    return v13;
  }
  v41 = a1;
  v48 = 4 * v12;
  v13 = MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_242C483B0();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_35();
      return v13;
    }
    v19 = v18;
    OUTLINED_FUNCTION_3_6();
    if ((v19 & 1) == 0)
    {
      v14 = OUTLINED_FUNCTION_3_44();
      goto LABEL_21;
    }
    v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14)
        goto LABEL_38;
      v21 = OUTLINED_FUNCTION_11_30();
      v43 = v23;
      v44 = v22;
      v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_10_29();
        v13 = v28;
      }
      v25 = *(_QWORD *)(v13 + 16);
      if (v25 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        OUTLINED_FUNCTION_10_29();
        v13 = v29;
      }
      *(_QWORD *)(v13 + 16) = v25 + 1;
      v26 = (_QWORD *)(v13 + 32 * v25);
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(_QWORD *)v42 = v13;
    }
    v27 = OUTLINED_FUNCTION_3_44();
    v14 = v27;
    *(_QWORD *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && *(_QWORD *)(v13 + 16) == v41)
      break;
    v15 = v27;
    v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14)
      goto LABEL_30;
  }
  v16 = v27;
  v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_35();
LABEL_35:
    sub_242C480E0();
    swift_release();
    goto LABEL_36;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = OUTLINED_FUNCTION_11_30();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    OUTLINED_FUNCTION_35();
    sub_242A5DA4C();
    v38 = *(_QWORD *)(*(_QWORD *)v42 + 16);
    sub_242A5DDB4();
    v13 = *(_QWORD *)v42;
    *(_QWORD *)(v13 + 16) = v38 + 1;
    v39 = (_QWORD *)(v13 + 32 * v38);
    v39[4] = v31;
    v39[5] = v33;
    v39[6] = v35;
    v39[7] = v37;
    *(_QWORD *)v42 = v13;
    goto LABEL_35;
  }
LABEL_38:
  OUTLINED_FUNCTION_1_3();
LABEL_40:
  result = sub_242C48F50();
  __break(1u);
  return result;
}

uint64_t sub_242B10EB8(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  char v16;
  unint64_t v18;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;

  if (a1 < 0)
    goto LABEL_54;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = MEMORY[0x24BEE4AF8];
  v32 = v8 + 16;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0;
  v9 = *(_QWORD *)(a5 + 16);
  if (!a1 || !v9)
  {
    sub_242B1137C(*(_QWORD *)(a5 + 16), v34, a2 & 1, v8, a5);
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v8 + 16);
    sub_242C480E0();
    swift_release();
LABEL_45:
    swift_release();
    return v12;
  }
  v31 = a1;
  v10 = 0;
  v11 = 0;
  v37 = a5 + 32;
  v12 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v10 >= *(_QWORD *)(a5 + 16))
      goto LABEL_48;
    v13 = (_QWORD *)(v37 + 16 * v10);
    v14 = v13[1];
    v36[0] = *v13;
    v36[1] = v14;
    sub_242C480E0();
    v15 = a3(v36);
    if (v5)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    v16 = v15;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      if (__OFADD__(v10++, 1))
        goto LABEL_49;
      goto LABEL_28;
    }
    if (v11 != v10 || (a2 & 1) == 0)
      break;
    *(_QWORD *)(v34 + 16) = ++v10;
LABEL_27:
    v11 = v10;
LABEL_28:
    if (v10 == v9)
      goto LABEL_33;
  }
  if ((uint64_t)v10 < (uint64_t)v11)
    goto LABEL_54;
  if ((v11 & 0x8000000000000000) != 0)
    goto LABEL_50;
  v18 = *(_QWORD *)(a5 + 16);
  if (v18 < v11 || v18 < v10)
    goto LABEL_51;
  sub_242C480E0();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242A5ECD0();
    v12 = v23;
  }
  v20 = *(_QWORD *)(v12 + 16);
  if (v20 >= *(_QWORD *)(v12 + 24) >> 1)
  {
    sub_242A5ECD0();
    v12 = v24;
  }
  *(_QWORD *)(v12 + 16) = v20 + 1;
  v21 = (_QWORD *)(v12 + 32 * v20);
  v22 = v37;
  v21[4] = a5;
  v21[5] = v22;
  v21[6] = v11;
  v21[7] = (2 * v10) | 1;
  *(_QWORD *)v32 = v12;
  *(_QWORD *)(v34 + 16) = ++v10;
  if (*(_QWORD *)(v12 + 16) != v31)
    goto LABEL_27;
  v11 = v10;
LABEL_33:
  if (v11 == v9 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_44:
    sub_242C480E0();
    swift_release();
    goto LABEL_45;
  }
  if ((uint64_t)v9 < (uint64_t)v11)
    goto LABEL_54;
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v25 = *(_QWORD *)(a5 + 16);
  if (v25 >= v11 && v25 >= v9)
  {
    sub_242A5DAA0();
    v27 = *(_QWORD *)(*(_QWORD *)v32 + 16);
    sub_242A5DDFC();
    v12 = *(_QWORD *)v32;
    *(_QWORD *)(v12 + 16) = v27 + 1;
    v28 = (_QWORD *)(v12 + 32 * v27);
    v29 = v37;
    v28[4] = a5;
    v28[5] = v29;
    v28[6] = v11;
    v28[7] = (2 * v9) | 1;
    *(_QWORD *)v32 = v12;
    goto LABEL_44;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  result = sub_242C48F50();
  __break(1u);
  return result;
}

uint64_t sub_242B11278(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_242C483C8();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    sub_242A5DA4C();
    v14 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
    sub_242A5DDB4();
    v15 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(v15 + 16) = v14 + 1;
    v16 = (_QWORD *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_242C48F50();
  __break(1u);
  return result;
}

uint64_t sub_242B1137C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  int v6;
  unint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = (v5 == a1) & a3;
  if (v6 == 1)
    return v6 ^ 1u;
  if ((uint64_t)v5 <= a1)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v8 = *(_QWORD *)(a5 + 16);
      if (v8 >= v5 && (uint64_t)v8 >= a1)
      {
        v10 = (uint64_t *)(a4 + 16);
        v11 = (2 * a1) | 1;
        sub_242C480E0();
        sub_242A5DAA0();
        v12 = *(_QWORD *)(*v10 + 16);
        sub_242A5DDFC();
        v13 = *v10;
        *(_QWORD *)(v13 + 16) = v12 + 1;
        v14 = (_QWORD *)(v13 + 32 * v12);
        v14[4] = a5;
        v14[5] = a5 + 32;
        v14[6] = v5;
        v14[7] = v11;
        *v10 = v13;
        return v6 ^ 1u;
      }
    }
    __break(1u);
  }
  result = sub_242C48F50();
  __break(1u);
  return result;
}

uint64_t sub_242B11488()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  if (v1 == v2)
    return 0;
  if (v1 >= v2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 24) = v1 + 1;
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_242B114DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v3 + 16);
  if (v2 == v4)
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 0;
  }
  else if (v2 >= v4)
  {
    __break(1u);
  }
  else
  {
    v5 = v3 + 16 * v2;
    v6 = *(_QWORD *)(v5 + 32);
    LOBYTE(v5) = *(_BYTE *)(v5 + 40);
    *(_QWORD *)a1 = v6;
    *(_BYTE *)(a1 + 8) = v5;
    *(_QWORD *)(v1 + 24) = v2 + 1;
    return sub_242C480E0();
  }
  return result;
}

unint64_t sub_242B11520()
{
  unint64_t result;

  result = qword_257227698;
  if (!qword_257227698)
  {
    result = MEMORY[0x2494EDE24](&unk_242C57F68, &unk_2513889D0);
    atomic_store(result, (unint64_t *)&qword_257227698);
  }
  return result;
}

uint64_t sub_242B1155C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_242BAC6E4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_242B11598()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242B115BC()
{
  return swift_deallocObject();
}

uint64_t sub_242B115CC(uint64_t *a1)
{
  return sub_242A92A34(a1) & 1;
}

id OUTLINED_FUNCTION_0_59()
{
  return sub_242BCA40C();
}

id OUTLINED_FUNCTION_2_52(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1041));
}

uint64_t OUTLINED_FUNCTION_3_44()
{
  return sub_242C482E4();
}

uint64_t OUTLINED_FUNCTION_6_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;

  return sub_242A6FF34(v46, (uint64_t)&a46);
}

void OUTLINED_FUNCTION_10_29()
{
  sub_242A5EAD8();
}

uint64_t OUTLINED_FUNCTION_11_30()
{
  return sub_242C483C8();
}

uint64_t OUTLINED_FUNCTION_12_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  return sub_242A6FF70((uint64_t)&a46);
}

uint64_t OUTLINED_FUNCTION_13_31()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_14_21()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_242B11650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  _BYTE v21[15];
  char v22;
  uint64_t v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v21[-v9];
  v11 = sub_242A64F74();
  sub_242B4B240(0, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0)
    MEMORY[0x2494EC84C](0, v11);
  else
    swift_retain();
  swift_bridgeObjectRelease();
  v12 = sub_242B89308();
  swift_release();
  sub_242A9E618(v12, a1);
  if (!v13)
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_242C4CD60;
    *(_BYTE *)(v20 + 16) = 2;
    swift_willThrow();
    return (uint64_t)v10;
  }
  type metadata accessor for NativeTensorStorage();
  result = sub_242A64FCC();
  if (*(_QWORD *)(result + 16))
  {
    v15 = *(_QWORD *)(result + 32);
    sub_242C480E0();
    swift_bridgeObjectRelease();
    v23 = v15;
    result = sub_242A64FCC();
    if (*(_QWORD *)(result + 16))
    {
      v16 = *(_BYTE *)(result + 40);
      swift_bridgeObjectRelease();
      v22 = v16;
      sub_242B1D8D0(&v23, (uint64_t)&v22, 0);
      v18 = v17;
      v23 = *(_QWORD *)(*(_QWORD *)(v3 + 40) + 152);
      sub_242C480E0();
      OUTLINED_FUNCTION_1_10((uint64_t)&v23, (uint64_t)v10);
      sub_242C47930();
      OUTLINED_FUNCTION_0_60((uint64_t)v10);
      v23 = *(_QWORD *)(v18 + 16);
      sub_242C480E0();
      OUTLINED_FUNCTION_1_10((uint64_t)&v23, (uint64_t)v7);
      OUTLINED_FUNCTION_0_60((uint64_t)v7);
      ObjectType = swift_getObjectType();
      MEMORY[0x24BDAC7A8](ObjectType);
      *(_QWORD *)&v21[-48] = v18;
      *(_QWORD *)&v21[-40] = &off_251387678;
      *(_QWORD *)&v21[-32] = v7;
      *(_QWORD *)&v21[-24] = sub_242B11954;
      *(_QWORD *)&v21[-16] = 0;
      sub_242BF6310((uint64_t)sub_242A6AB40, (uint64_t)&v21[-64], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
      if (v2)
      {
        swift_release();
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_1_47();
        sub_242A6AB60((uint64_t)v10);
      }
      else
      {
        OUTLINED_FUNCTION_1_47();
        sub_242A6AB60((uint64_t)v10);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
        v10 = (_BYTE *)swift_allocObject();
        *((_OWORD *)v10 + 1) = xmmword_242C4B7D0;
        *((_QWORD *)v10 + 4) = v18;
        *((_QWORD *)v10 + 5) = &off_251387678;
        swift_unknownObjectRelease();
      }
      return (uint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242B11954()
{
  return sub_242C478D0();
}

uint64_t sub_242B11978(uint64_t a1)
{
  return sub_242B11650(a1);
}

unint64_t sub_242B1198C(uint64_t a1)
{
  unint64_t result;

  result = sub_242B119B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242B119B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257221600;
  if (!qword_257221600)
  {
    v1 = type metadata accessor for TileOperation();
    result = MEMORY[0x2494EDE24](&unk_242C4C3C4, v1);
    atomic_store(result, (unint64_t *)&qword_257221600);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_60(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_1_47()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t sub_242B11A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_242C48D7C();
    v4 = (void **)(a1 + 48);
    do
    {
      v5 = *v4;
      v4 += 3;
      v6 = v5;
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void sub_242B11ABC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  if (a1 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v19 = MEMORY[0x24BEE4AF8];
      sub_242AC3204();
      if (v4 < 0)
        break;
      v5 = a1 & 0xC000000000000001;
      v6 = a2 + 40;
      swift_beginAccess();
      v7 = 0;
      while (v7 != v4)
      {
        if (v5)
          v8 = (id)MEMORY[0x2494EC84C](v7, a1);
        else
          v8 = *(id *)(a1 + 32 + 8 * v7);
        v9 = v8;
        v10 = *(_QWORD *)(*(_QWORD *)v6 + 16);
        if (!v10)
        {
LABEL_18:
          sub_242B18BF8();
          swift_allocError();
          *v16 = 1;
          swift_willThrow();
          swift_release();
          swift_release();

          return;
        }
        ++v7;
        v11 = (id *)(*(_QWORD *)v6 + 48);
        while (*v11 != v8)
        {
          v11 += 3;
          if (!--v10)
            goto LABEL_18;
        }
        v17 = v6;
        v18 = v5;
        v12 = (uint64_t)*(v11 - 2);
        v13 = (uint64_t)*(v11 - 1);
        sub_242C480E0();
        v14 = *(_QWORD *)(v19 + 16);
        if (v14 >= *(_QWORD *)(v19 + 24) >> 1)
          sub_242AC3204();
        *(_QWORD *)(v19 + 16) = v14 + 1;
        v15 = (_QWORD *)(v19 + 24 * v14);
        v15[4] = v12;
        v15[5] = v13;
        v15[6] = v9;
        v5 = v18;
        v6 = v17;
        if (v7 == v4)
          goto LABEL_17;
      }
      __break(1u);
LABEL_20:
      sub_242C480E0();
      v4 = sub_242C48FC8();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_release();
  }
}

uint64_t sub_242B11CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_242AC3140();
    v3 = v10;
    v4 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v5 = *(_QWORD *)(v10 + 16);
      if (v5 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_242AC3140();
      v4 += 32;
      *(_QWORD *)(v10 + 16) = v5 + 1;
      v6 = v10 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_BYTE *)(v6 + 40) = v9;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_242B11E34(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = sub_242C48E48();
  v24 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_44;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = v4 >= v3 ? v3 : v4;
    v27 = MEMORY[0x24BEE4AF8];
    sub_242AC323C();
    sub_242C480E0();
    swift_retain();
    sub_242C48E3C();
    swift_release();
    if ((v5 & 0x8000000000000000) != 0)
      break;
    v23 = a2;
    if (!v5)
    {
LABEL_23:
      sub_242C49034();
      v12 = v26;
      if (v26)
      {
        v13 = v25;
        v22 = a2 & 0xFFFFFFFFFFFFFF8;
        v20 = a2 & 0xC000000000000001;
        while (1)
        {
          if (v24)
          {
            sub_242C480E0();
            v3 = sub_242C48FC8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v3 = *(_QWORD *)(v22 + 16);
          }
          if (v5 == v3)
            break;
          if (v20)
          {
            v14 = MEMORY[0x2494EC84C](v5, a2);
          }
          else
          {
            if (v5 >= *(_QWORD *)(v22 + 16))
              goto LABEL_42;
            v14 = *(_QWORD *)(a2 + 8 * v5 + 32);
            swift_retain();
          }
          if (__OFADD__(v5, 1))
            goto LABEL_43;
          v15 = *(_QWORD *)(v14 + 152);
          v16 = *(_BYTE *)(v14 + 160);
          sub_242C480E0();
          swift_release();
          v17 = *(_QWORD *)(v27 + 16);
          if (v17 >= *(_QWORD *)(v27 + 24) >> 1)
            sub_242AC323C();
          *(_QWORD *)(v27 + 16) = v17 + 1;
          v18 = v27 + 32 * v17;
          *(_QWORD *)(v18 + 32) = v13;
          *(_QWORD *)(v18 + 40) = v12;
          *(_QWORD *)(v18 + 48) = v15;
          *(_BYTE *)(v18 + 56) = v16;
          sub_242C49034();
          v13 = v25;
          v12 = v26;
          ++v5;
          a2 = v23;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      return v27;
    }
    v6 = 0;
    v21 = a2 & 0xFFFFFFFFFFFFFF8;
    v19 = a2 & 0xC000000000000001;
    while (v5 != v6)
    {
      result = sub_242C49034();
      if (!v26)
        goto LABEL_47;
      if (v24)
      {
        sub_242C480E0();
        v3 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v3 = *(_QWORD *)(v21 + 16);
      }
      if (v6 == v3)
        goto LABEL_46;
      if (v19)
      {
        v8 = MEMORY[0x2494EC84C](v6, a2);
      }
      else
      {
        if (v6 >= *(_QWORD *)(v21 + 16))
          goto LABEL_41;
        v8 = *(_QWORD *)(a2 + 8 * v6 + 32);
        swift_retain();
      }
      v3 = *(_QWORD *)(v8 + 152);
      v9 = *(_BYTE *)(v8 + 160);
      sub_242C480E0();
      swift_release();
      v10 = *(_QWORD *)(v27 + 16);
      if (v10 >= *(_QWORD *)(v27 + 24) >> 1)
        sub_242AC323C();
      ++v6;
      *(_QWORD *)(v27 + 16) = v10 + 1;
      v11 = v27 + 32 * v10;
      *(_QWORD *)(v11 + 32) = v25;
      *(_QWORD *)(v11 + 40) = v26;
      *(_QWORD *)(v11 + 48) = v3;
      *(_BYTE *)(v11 + 56) = v9;
      a2 = v23;
      if (v5 == v6)
        goto LABEL_23;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    sub_242C480E0();
    v4 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_46:
  result = swift_bridgeObjectRelease();
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_242B121D4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  for (; v4; v4 = sub_242C48FC8())
  {
    v5 = a2 + 32;
    a2 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](a2 - 4, a1);
      else
        swift_retain();
      v6 = a2 - 3;
      if (__OFADD__(a2 - 4, 1))
        break;
      v7 = v4;
      sub_242BC9724();
      v9 = v8;
      v11 = v10;
      swift_beginAccess();
      v12 = *(_QWORD *)v5;
      if (*(_QWORD *)(*(_QWORD *)v5 + 16) && (v13 = sub_242A61310(v9, v11), (v14 & 1) != 0))
      {
        v15 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v13);
        swift_endAccess();
        v16 = v15;
        swift_release();
        v17 = swift_bridgeObjectRelease();
        MEMORY[0x2494EC0CC](v17);
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_242C485A8();
        sub_242C485F0();
        sub_242C4856C();
      }
      else
      {
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();
      }
      v4 = v7;
      ++a2;
      if (v6 == v7)
      {
        swift_bridgeObjectRelease();
        v18 = v20;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    sub_242C480E0();
  }
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_release();
  return v18;
}

uint64_t sub_242B123D8(uint64_t a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = (void **)(sub_242C480E0() + 48);
  v3 = MEMORY[0x24BEE4AF8];
  do
  {
    v5 = (uint64_t)*(v2 - 2);
    v4 = (uint64_t)*(v2 - 1);
    v6 = *v2;
    swift_bridgeObjectRetain_n();
    v7 = v6;
    sub_242BA2E04(&v15, v5, v4);
    v9 = v8;
    swift_bridgeObjectRelease();

    if ((v9 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242A5E0B4();
        v3 = v12;
      }
      v10 = *(_QWORD *)(v3 + 16);
      if (v10 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_242A5E0B4();
        v3 = v13;
      }
      *(_QWORD *)(v3 + 16) = v10 + 1;
      v11 = v3 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v5;
      *(_QWORD *)(v11 + 40) = v4;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2 += 3;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_242B1251C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = sub_242C480E0() + 48;
  v3 = MEMORY[0x24BEE4AF8];
  do
  {
    v5 = *(_QWORD *)(v2 - 16);
    v4 = *(_QWORD *)(v2 - 8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_242BA2E04(&v13, v5, v4);
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242A5E0B4();
        v3 = v10;
      }
      v8 = *(_QWORD *)(v3 + 16);
      if (v8 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_242A5E0B4();
        v3 = v11;
      }
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v4;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2 += 32;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_242B12674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = sub_242C480E0() + 56;
  v3 = MEMORY[0x24BEE4AF8];
  do
  {
    v5 = *(_QWORD *)(v2 - 24);
    v4 = *(_QWORD *)(v2 - 16);
    swift_bridgeObjectRetain_n();
    sub_242C480E0();
    sub_242BA2E04(&v13, v5, v4);
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242A5E0B4();
        v3 = v10;
      }
      v8 = *(_QWORD *)(v3 + 16);
      if (v8 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_242A5E0B4();
        v3 = v11;
      }
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v4;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2 += 32;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_242B127BC(uint64_t a1, uint64_t a2)
{
  return sub_242B127D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_242B1251C);
}

uint64_t sub_242B127C8(uint64_t a1, uint64_t a2)
{
  return sub_242B127D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_242B12674);
}

uint64_t sub_242B127D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4B08];
  v4 = sub_242C480E0();
  v5 = a3(v4, &v8);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257227890);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_242B12858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  char v4;
  uint64_t v7;
  _BYTE *v9;
  unint64_t v10;
  BOOL v11;
  _QWORD v13[2];

  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    v9 = (_BYTE *)(a3 + 56);
    while (1)
    {
      v10 = *((_QWORD *)v9 - 1);
      v4 = *v9;
      v11 = *((_QWORD *)v9 - 3) == a1 && *((_QWORD *)v9 - 2) == a2;
      if (v11 || (sub_242C4925C() & 1) != 0)
        break;
      v9 += 32;
      if (!--v7)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_242C480E0();
    sub_242C48C38();
    v10 = 0xD000000000000012;
    sub_242C48314();
    sub_242C48E78();
    a4 = v13;
    sub_242C48314();
    sub_242C48F5C();
    __break(1u);
  }
  *a4 = v10;
  *((_BYTE *)a4 + 8) = v4;
  return sub_242C480E0();
}

uint64_t sub_242B129B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_242B129EC + 4 * byte_242C55AF0[a1]))(0xD000000000000016, 0x8000000242C6B880);
}

uint64_t sub_242B129EC()
{
  return 0x696D207475706E49;
}

uint64_t sub_242B12A10(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_242B12A28()
{
  return 0x6D2074757074754FLL;
}

uint64_t sub_242B12A4C()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242B12A90()
{
  return sub_242B12A4C();
}

uint64_t sub_242B12A98()
{
  unsigned __int8 *v0;

  return sub_242B129B4(*v0);
}

uint64_t sub_242B12AA0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v32 = *(_QWORD *)v2;
  v5 = sub_242C48944();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_9();
  v6 = sub_242C4895C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_9();
  v10 = v9 - v8;
  v11 = sub_242C47FF0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_4_9();
  sub_242A8AA58(0, (unint64_t *)&qword_257223398);
  sub_242C47FD8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE5758], v6);
  sub_242AD253C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224158);
  sub_242B16BD0();
  sub_242C48B9C();
  v12 = a1;
  *(_QWORD *)(v2 + 96) = sub_242C48980();
  *(_QWORD *)(v2 + 16) = a2;
  swift_unownedRetain();
  sub_242B12DD4(a1, a2, &v38);
  if (v34)
  {
    sub_242A6945C(a1);
    swift_release();
    swift_unownedRelease();

    swift_deallocPartialClassInstance();
  }
  else
  {
    v13 = v38;
    v47 = *((_QWORD *)&v38 + 1);
    v14 = v39;
    v15 = v40;
    v46 = v39;
    *(_OWORD *)(v3 + 24) = v38;
    v16 = v41;
    *(_QWORD *)(v3 + 40) = v14;
    *(_QWORD *)(v3 + 48) = v15;
    *(_QWORD *)(v3 + 56) = v16;
    v17 = (id)v13;
    sub_242AEF670((uint64_t)&v47);
    sub_242AEF670((uint64_t)&v46);
    sub_242C480E0();
    sub_242C480E0();
    v18 = sub_242B127D4(v15, v16, (uint64_t (*)(uint64_t, uint64_t *))sub_242B123D8);
    v19 = a1[19];
    sub_242C480E0();
    v20 = sub_242B11E34(v18, v19);
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v37 = sub_242C480BC();
    v21 = sub_242A5A760(v20);
    v22 = swift_bridgeObjectRelease();
    sub_242A5D034(v22, v23, v24, v25, v26, v27, v28, v29, v32, (uint64_t)a1, 0, v35, v21, v37);
    sub_242A6945C(v12);
    swift_release();
    *(_OWORD *)(v3 + 64) = v36;
    v30 = v43;
    v44 = v43;
    v45 = v42;
    *(_QWORD *)(v3 + 80) = v42;
    *(_QWORD *)(v3 + 88) = v30;
    sub_242AEF670((uint64_t)&v45);
    sub_242AEF670((uint64_t)&v44);
    sub_242B16C14((void **)&v38);
  }
  return v3;
}

double sub_242B12DD4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_signpost_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  uint8_t *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  NSObject *v40;
  char *v41;
  os_signpost_type_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint8_t *v47;
  os_signpost_id_t v48;
  NSObject *v49;
  os_signpost_type_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  const char *v56;
  uint64_t v57;
  double result;
  char *v59;
  uint8_t *v60;
  _QWORD *v61;
  os_signpost_id_t v62;
  const char *v63;
  __int128 v64;
  _OWORD *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  _OWORD *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _OWORD v80[2];
  __int128 v81;
  uint64_t v82;
  uint64_t v83;

  v77 = a2;
  v69 = a3;
  v74 = sub_242C47F3C();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v68 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)&v66 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v66 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v67 = (char *)&v66 - v10;
  v83 = sub_242C47F0C();
  v11 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v71 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v75 = (char *)&v66 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v66 - v17);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v66 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v66 - v23;
  if (qword_257220560 != -1)
    swift_once();
  v79 = a1;
  v25 = sub_242C47F30();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_257223378);
  sub_242C47F00();
  v76 = v26;
  v27 = sub_242C47F24();
  v28 = sub_242C489A4();
  if ((sub_242C48A34() & 1) != 0)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v66 = v11;
    v30 = v18;
    v31 = v29;
    *(_WORD *)v29 = 0;
    v32 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v27, v28, v32, "Build MPSGraph", "", v31, 2u);
    v33 = v31;
    v18 = v30;
    v11 = v66;
    MEMORY[0x2494EDF68](v33, -1, -1);
  }

  v34 = v83;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v24, v83);
  sub_242C47F60();
  swift_allocObject();
  sub_242C47F54();
  v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v24, v34);
  type metadata accessor for MPSGraphExecutor.MPSGraphExecutorComponentsBuilder();
  swift_initStackObject();
  v36 = swift_retain();
  v37 = sub_242B16AB0(v36);
  v38 = v79;
  sub_242B148A8(v79);
  v39 = v78;
  sub_242B150BC(v38, (uint64_t)v37);
  if (v39)
  {
    swift_release();
    v40 = sub_242C47F24();
    v41 = v75;
    sub_242C47F48();
    v42 = sub_242C48998();
    if ((sub_242C48A34() & 1) != 0)
    {
      swift_retain();
      v43 = v72;
      sub_242C47F6C();
      swift_release();
      v44 = v73;
      v45 = v74;
      if ((*(unsigned int (**)(char *, uint64_t))(v73 + 88))(v43, v74) == *MEMORY[0x24BEE7810])
      {
        v46 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
        v46 = "";
      }
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      v48 = sub_242C47EF4();
      _os_signpost_emit_with_name_impl(&dword_242A44000, v40, v42, v48, "Build MPSGraph", v46, v47, 2u);
      v57 = v83;
      MEMORY[0x2494EDF68](v47, -1, -1);
    }
    else
    {
      v57 = v83;
    }

    v35(v41, v57);
    swift_release();
  }
  else
  {
    sub_242B15B8C(v38, v37);
    sub_242B163A8((uint64_t)v80);
    swift_release();
    v49 = sub_242C47F24();
    sub_242C47F48();
    v50 = sub_242C48998();
    v51 = sub_242C48A34();
    if ((v51 & 1) != 0)
    {
      v79 = v18;
      swift_retain();
      v52 = v67;
      sub_242C47F6C();
      swift_release();
      v53 = v73;
      v54 = v74;
      if ((*(unsigned int (**)(char *, uint64_t))(v73 + 88))(v52, v74) == *MEMORY[0x24BEE7810])
      {
        v55 = v35;
        v56 = "[Error] Interval already ended";
      }
      else
      {
        v59 = v52;
        v55 = v35;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v59, v54);
        v56 = "";
      }
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      v61 = v79;
      v62 = sub_242C47EF4();
      v63 = v56;
      v18 = v61;
      _os_signpost_emit_with_name_impl(&dword_242A44000, v49, v50, v62, "Build MPSGraph", v63, v60, 2u);
      MEMORY[0x2494EDF68](v60, -1, -1);
      v35 = v55;
    }

    v35((char *)v18, v83);
    swift_release();
    v64 = v80[1];
    v65 = v69;
    *v69 = v80[0];
    v65[1] = v64;
    result = *(double *)&v81;
    v65[2] = v81;
    *((_QWORD *)v65 + 6) = v82;
  }
  return result;
}

uint64_t sub_242B13644()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2572246E8);
  result = sub_242C48968();
  if (!v0)
    return v2;
  return result;
}

void sub_242B136B4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_signpost_type_t v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  NSObject *v55;
  char *v56;
  os_signpost_type_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  _BYTE *v62;
  NSObject *v63;
  char *v64;
  os_signpost_type_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  uint8_t *v70;
  char *v71;
  os_signpost_id_t v72;
  uint8_t *v73;
  uint8_t *v74;
  os_signpost_id_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  _QWORD v88[2];
  _QWORD *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  _OWORD *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  void *v112[3];
  uint64_t v113;
  char *v114;

  v108 = a3;
  v92 = a2;
  v93 = a4;
  v5 = (_QWORD *)sub_242C47F30();
  v6 = *(v5 - 1);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C47F3C();
  v100 = *(_QWORD *)(v9 - 8);
  v101 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v95 = (char *)v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v94 = (char *)v88 - v12;
  v13 = (_QWORD *)sub_242C47F0C();
  v14 = (void **)*(v13 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v103 = (char *)v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v88 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v96 = (char *)v88 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v88 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v88 - v25;
  v109 = a1;
  swift_unownedRetainStrong();
  sub_242B278DC();
  v97 = v27;
  swift_release();
  if (qword_257220560 != -1)
LABEL_42:
    swift_once();
  v98 = v18;
  v99 = v8;
  v102 = v6;
  v105 = v5;
  v28 = __swift_project_value_buffer((uint64_t)v5, (uint64_t)qword_257223378);
  sub_242C47F00();
  v107 = v28;
  v29 = sub_242C47F24();
  v30 = sub_242C489A4();
  if ((sub_242C48A34() & 1) != 0)
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    v32 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v29, v30, v32, "Prepare MPSGraph Inputs", "", v31, 2u);
    MEMORY[0x2494EDF68](v31, -1, -1);
  }

  v33 = v13;
  ((void (*)(char *, char *, _QWORD *))v14[2])(v23, v26, v13);
  sub_242C47F60();
  swift_allocObject();
  v34 = sub_242C47F54();
  v13 = v14[1];
  ((void (*)(char *, _QWORD *))v13)(v26, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572278E0);
  v35 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v111 = sub_242C480BC();
  v114 = (char *)v35;
  v113 = v35;
  v5 = *(_QWORD **)(v109 + 32);
  v8 = (char *)v5[2];
  v106 = v13;
  if (!v8)
  {
    v53 = v105;
LABEL_20:
    swift_beginAccess();
    sub_242C480E0();
    sub_242C37D2C();
    v108 = v54;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v103 = v114;
    swift_bridgeObjectRelease();
    v55 = sub_242C47F24();
    v56 = v96;
    sub_242C47F48();
    v57 = sub_242C48998();
    if ((sub_242C48A34() & 1) != 0)
    {
      swift_retain();
      v58 = v94;
      sub_242C47F6C();
      v104 = v34;
      swift_release();
      v60 = v100;
      v59 = v101;
      if ((*(unsigned int (**)(char *, uint64_t))(v100 + 88))(v58, v101) == *MEMORY[0x24BEE7810])
      {
        v61 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
        v61 = "";
      }
      v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v74 = 0;
      v75 = sub_242C47EF4();
      _os_signpost_emit_with_name_impl(&dword_242A44000, v55, v57, v75, "Prepare MPSGraph Inputs", v61, v74, 2u);
      MEMORY[0x2494EDF68](v74, -1, -1);
      v53 = v105;
      v13 = v106;
    }

    ((void (*)(char *, _QWORD *))v13)(v56, v33);
    swift_release();
    v76 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, _QWORD *))(v102 + 16))(v99, v107, v53);
    v77 = v109;
    swift_retain();
    sub_242C480E0();
    v78 = v108;
    swift_retain();
    v79 = (uint64_t)v103;
    sub_242C480E0();
    v89 = v33;
    v80 = (uint64_t)v98;
    sub_242C47F00();
    v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v81 = 0;
    v82 = v110;
    v83 = sub_242B16E6C(v81, 2u, v76, v80, "Run MPSGraph", "", v77, v35, v78, v79, v97);
    if (v82)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, _QWORD *))v13)(v80, v89);
      (*(void (**)(uint64_t, _QWORD *))(v102 + 8))(v76, v105);
    }
    else
    {
      v84 = v83;
      MEMORY[0x2494EDF68](v81, -1, -1);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, _QWORD *))v13)(v80, v89);
      (*(void (**)(uint64_t, _QWORD *))(v102 + 8))(v76, v105);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
      *((_QWORD *)&v111 + 1) = sub_242C480BC();
      v85 = sub_242A5AEC0(v84);
      v86 = swift_bridgeObjectRelease();
      *(_QWORD *)&v111 = v85;
      sub_242A5D36C(v86);
      *v93 = v111;
    }
    return;
  }
  v104 = v34;
  v36 = *(_QWORD *)(v109 + 40);
  v6 = v5[5];
  v37 = (void *)v5[6];
  v38 = v108;
  if (!*(_QWORD *)(v108 + 16))
  {
    sub_242C480E0();
    sub_242C480E0();
LABEL_25:
    v23 = v37;
    sub_242C480E0();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v26 = (char *)v5[4];
  swift_bridgeObjectRetain_n();
  v39 = v37;
  sub_242C480E0();
  sub_242C480E0();
  v23 = (char *)v39;
  v40 = sub_242A61310((uint64_t)v26, v6);
  if ((v41 & 1) == 0 || (v42 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * v40), !*(_QWORD *)(v42 + 16)))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242B18BF8();
    swift_allocError();
    *v62 = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v63 = sub_242C47F24();
    v64 = v103;
    sub_242C47F48();
    v65 = sub_242C48998();
    if ((sub_242C48A34() & 1) != 0)
    {
      swift_retain();
      v66 = v95;
      sub_242C47F6C();
      swift_release();
      v68 = v100;
      v67 = v101;
      if ((*(unsigned int (**)(char *, uint64_t))(v100 + 88))(v66, v101) == *MEMORY[0x24BEE7810])
      {
        v69 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
        v69 = "";
      }
      v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v70 = 0;
      v71 = v103;
      v72 = sub_242C47EF4();
      _os_signpost_emit_with_name_impl(&dword_242A44000, v63, v65, v72, "Prepare MPSGraph Inputs", v69, v70, 2u);
      v73 = v70;
      v64 = v71;
      MEMORY[0x2494EDF68](v73, -1, -1);
    }

    ((void (*)(char *, _QWORD *))v13)(v64, v33);
    swift_release();
    return;
  }
  v88[1] = v36;
  v89 = v33;
  v18 = 0;
  v91 = v92 + 32;
  v92 = *(_QWORD *)(v92 + 16);
  v14 = (void **)(v5 + 9);
  v90 = v8 - 1;
  while (1)
  {
    v43 = *(_QWORD *)(v42 + 32);
    if (v43 >= v92)
    {
      __break(1u);
      goto LABEL_42;
    }
    v44 = *(_QWORD *)(v91 + 24 * v43 + 16);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_retain();
    v45 = sub_242BCA40C();
    objc_msgSend(v45, sel_lock);

    v46 = v110;
    sub_242BCB5B4(v44, 0, 0, (uint64_t)v112);
    v110 = v46;
    if (v46)
      break;
    v47 = sub_242BCA40C();
    objc_msgSend(v47, sel_unlock);
    swift_release();

    v48 = (void *)sub_242B142C8(v112[0], (uint64_t)v112[1], v23, v109, (uint64_t *)&v111, (uint64_t)&v114);
    swift_unknownObjectRelease();
    v49 = v48;
    MEMORY[0x2494EC0CC]();
    v8 = *(char **)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v8 >= *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_242C485A8();
    sub_242C485F0();
    sub_242C4856C();
    swift_release();

    swift_bridgeObjectRelease();
    if (v90 == v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = v113;
      v33 = v89;
      v53 = v105;
      v13 = v106;
      v34 = v104;
      goto LABEL_20;
    }
    ++v18;
    v13 = v106;
    if ((unint64_t)v18 >= v5[2])
    {
      __break(1u);
      break;
    }
    v6 = (uint64_t)*(v14 - 1);
    v37 = *v14;
    v50 = v108;
    if (!*(_QWORD *)(v108 + 16))
    {
      v33 = v89;
      goto LABEL_25;
    }
    v26 = (char *)*(v14 - 2);
    swift_bridgeObjectRetain_n();
    v23 = v37;
    v51 = sub_242A61310((uint64_t)v26, v6);
    if ((v52 & 1) != 0)
    {
      v14 += 3;
      v42 = *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8 * v51);
      if (*(_QWORD *)(v42 + 16))
        continue;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v89;
    goto LABEL_27;
  }
  v87 = sub_242BCA40C();
  objc_msgSend(v87, sel_unlock);
  swift_release();

  __break(1u);
}

uint64_t sub_242B141C8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_242B14210()
{
  uint64_t v0;

  swift_unownedRelease();

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();

  return v0;
}

uint64_t sub_242B14274()
{
  sub_242B14210();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSGraphExecutor()
{
  return objc_opt_self();
}

uint64_t sub_242B142B4()
{
  return sub_242B13644();
}

uint64_t sub_242B142C8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  _QWORD v48[9];
  uint64_t v49;
  uint64_t v50[4];

  if (object_getClass(a1) != (Class)_TtC14NeuralNetworks21MPSGraphTensorStorage || a1 == 0)
    goto LABEL_11;
  swift_unknownObjectRetain();
  sub_242B8586C();
  if (!v13)
  {
    swift_unknownObjectRelease();
LABEL_11:
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v48[2] = a4;
    v48[3] = a3;
    v48[4] = a1;
    v48[5] = a2;
    v48[6] = a6;
    v26 = *(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(a2 + 64);
    v27 = sub_242A8AA58(0, &qword_2572278F8);
    v26(v50, sub_242B18C8C, v48, v27, ObjectType, a2);
    return v50[0];
  }
  v14 = v13;
  v15 = *(_QWORD *)(a4 + 16);
  swift_unownedRetainStrong();
  v16 = sub_242B858D0();
  v19 = v16;
  v20 = v17;
  v21 = v18;
  if (v18 >> 62)
  {
    sub_242B18CAC(v16, v17, v18);
    swift_release();
  }
  else
  {
    v49 = v14;
    v22 = *(void **)(v15 + 16);
    swift_retain();
    v23 = objc_msgSend(v22, sel_registryID);
    if (v23 != objc_msgSend(*(id *)(v21 + 16), sel_registryID))
    {
      swift_retain();
      sub_242B27934();
      goto LABEL_14;
    }
    if (v15 != v21)
    {
      swift_retain();
      sub_242B27988();
LABEL_14:
      v29 = v24;
      sub_242B18CAC(v19, v20, v21);
      swift_release();
      swift_release_n();
      swift_beginAccess();
      sub_242A9E618(v29, *a5);
      if (v31)
      {
        v32 = v30;
        swift_endAccess();
        swift_unknownObjectRelease();
        if (v32 > v20)
          v20 = v32;
      }
      else
      {
        swift_endAccess();
      }
      v14 = v49;
      swift_beginAccess();
      v33 = swift_unknownObjectRetain();
      sub_242B8C94C(v33, v20, v29, v34, v35, v36, v37, v38, v48[8], v49);
      swift_endAccess();
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    swift_release();
    sub_242B18CAC(v19, v20, v21);
    swift_release();
    v14 = v49;
  }
LABEL_20:
  v39 = sub_242B18B38(a3, (SEL *)&selRef_shape, (unint64_t *)&qword_257221F28);
  if (v39)
  {
    v40 = v39;
  }
  else
  {
    v41 = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v50, v41, a2);
    sub_242A5A5E8(v50[0]);
    v40 = v42;
    swift_bridgeObjectRelease();
  }
  v43 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(v50, v43, a2);
  sub_242BF51CC();
  v45 = v44;
  v46 = objc_allocWithZone(MEMORY[0x24BDDE580]);
  v28 = sub_242B16C8C(v14, v40, v45);
  swift_unknownObjectRelease();
  return (uint64_t)v28;
}

uint64_t sub_242B1461C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X6>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36[3];
  _QWORD *v37;

  v35 = a3;
  v37 = a7;
  v12 = sub_242C47BA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  sub_242B2786C();
  v34 = v16;
  result = swift_release();
  if (a1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BDCDB98], v12);
    v18 = MEMORY[0x2494EB754](a1, a2 - a1, v15);
    v20 = v19;
    v21 = sub_242B18B38(v35, (SEL *)&selRef_shape, (unint64_t *)&qword_257221F28);
    if (v21)
    {
      v22 = v21;
    }
    else
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16))(v36, ObjectType, a5);
      sub_242A5A5E8(v36[0]);
      v22 = v24;
      swift_bridgeObjectRelease();
    }
    v25 = v34;
    v26 = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 8))(v36, v26, a5);
    sub_242BF51CC();
    v28 = v27;
    v29 = objc_allocWithZone(MEMORY[0x24BDDE580]);
    v30 = sub_242B16D20(v25, v18, v20, v22, v28);
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_242A5D9EC();
    v31 = *(_QWORD *)(*a6 + 16);
    sub_242A5DD50();
    v32 = *a6;
    *(_QWORD *)(v32 + 16) = v31 + 1;
    v33 = v32 + 16 * v31;
    *(_QWORD *)(v33 + 32) = a4;
    *(_QWORD *)(v33 + 40) = a5;
    result = swift_endAccess();
    *v37 = v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242B14828(unint64_t a1)
{
  uint64_t v2;

  if (a1 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257227900);
    v2 = sub_242C48F74();
  }
  else
  {
    sub_242C480E0();
    sub_242C49280();
    v2 = a1;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_242B148A8(_QWORD *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;

  v1 = a1[11];
  if (v1 >> 62)
    goto LABEL_24;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  while (v2)
  {
    swift_beginAccess();
    if ((v1 & 0xC000000000000001) != 0)
    {
      v3 = MEMORY[0x2494EC84C](0, v1);
    }
    else
    {
      v3 = *(_QWORD *)(v1 + 32);
      swift_retain();
    }
    v5 = a1[13];
    v4 = a1[14];
    sub_242BC9724();
    if (*(_QWORD *)(v4 + 16))
    {
      v1 = v4;
      v8 = sub_242A61310(v6, v7);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v8);
        if ((v10 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v10 < *(_QWORD *)(v5 + 16))
        {
          goto LABEL_16;
        }
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
    v12 = a1[17];
    v11 = a1[18];
    sub_242BC9724();
    if (!*(_QWORD *)(v11 + 16) || (v1 = v11, v15 = sub_242A61310(v13, v14), (v16 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_242BC9724();
LABEL_18:
      sub_242A5A5E8(*(_QWORD *)(v3 + 152));
      sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
      sub_242C4853C();
      swift_bridgeObjectRelease();
      __asm { BR              X9 }
    }
    v17 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v15);
    if ((v17 & 0x8000000000000000) != 0)
      goto LABEL_22;
    if (v17 < *(_QWORD *)(v12 + 16))
    {
LABEL_16:
      sub_242C480E0();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain_n();
    v2 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_242B14F90()
{
  sub_242C48F5C();
  __break(1u);
  JUMPOUT(0x242B14FE0);
}

uint64_t sub_242B150BC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, _QWORD *);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  BOOL v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  _QWORD *v77;
  uint64_t v78;
  BOOL v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  id v85;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  char *v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(unint64_t, uint64_t, _QWORD *);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  _QWORD *v120;

  result = a1[15];
  v95 = *(_QWORD *)(result + 16);
  if (!v95)
    return result;
  v104 = v2;
  v119 = (_QWORD *)(a2 + 32);
  v107 = a2 + 88;
  v100 = a2 + 64;
  v97 = result + 32;
  v4 = sub_242C480E0();
  v5 = 0;
  v96 = v4;
  while (1)
  {
    if (v5 >= *(_QWORD *)(v4 + 16))
      goto LABEL_123;
    v103 = v5;
    v6 = (uint64_t *)(v97 + 16 * v5);
    v7 = *v6;
    v8 = (_QWORD *)v6[1];
    swift_getObjectType();
    if (!dynamic_cast_existential_1_conditional(v7))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_242B18BF8();
      swift_allocError();
      *v92 = 0;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
    v10 = v9;
    ObjectType = swift_getObjectType();
    v12 = (uint64_t (*)(uint64_t, _QWORD *))v8[4];
    swift_unknownObjectRetain_n();
    v13 = v12(ObjectType, v8);
    swift_retain();
    v14 = sub_242B121D4(v13, a2);
    swift_bridgeObjectRelease();
    if (v14 >> 62)
    {
      sub_242C480E0();
      v15 = sub_242C48FC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v116 = ObjectType;
    v16 = v12(ObjectType, v8);
    if (v16 >> 62)
      v17 = sub_242C48FC8();
    else
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (v15 != v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242B18BF8();
      swift_allocError();
      v94 = 1;
LABEL_115:
      *v93 = v94;
      swift_willThrow();
      return swift_unknownObjectRelease_n();
    }
    v18 = swift_getObjectType();
    v19 = (*(uint64_t (**)(_QWORD, unint64_t, uint64_t, uint64_t))(v10 + 24))(*(_QWORD *)(a2 + 16), v14, v18, v10);
    if (v104)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    v104 = 0;
    v117 = v19;
    v102 = v18;
    if (v19 >> 62)
    {
      sub_242C480E0();
      v20 = sub_242C48FC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v21 = v116;
    v22 = (uint64_t (*)(uint64_t, _QWORD *))v8[5];
    v23 = *(_QWORD *)(v22(v116, v8) + 16);
    swift_bridgeObjectRelease();
    if (v20 != v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242B18BF8();
      swift_allocError();
      v94 = 3;
      goto LABEL_115;
    }
    v101 = v10;
    v108 = v14;
    v24 = *(_QWORD *)(v22(v116, v8) + 16);
    swift_bridgeObjectRelease();
    v114 = v24;
    if (v24)
    {
      v25 = 0;
      v112 = (uint64_t (*)(unint64_t, uint64_t, _QWORD *))v8[9];
      v109 = v8;
      do
      {
        v26 = v112(v25, v21, v8);
        v28 = v27;
        if ((v117 & 0xC000000000000001) != 0)
        {
          v29 = (id)MEMORY[0x2494EC84C](v25, v117);
        }
        else
        {
          if (v25 >= *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_119;
          v29 = *(id *)(v117 + 8 * v25 + 32);
        }
        v30 = v29;
        swift_beginAccess();
        swift_isUniquelyReferenced_nonNull_native();
        v120 = (_QWORD *)*v119;
        *v119 = 0x8000000000000000;
        v31 = sub_242A61310(v26, v28);
        if (__OFADD__(v120[2], (v32 & 1) == 0))
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
          goto LABEL_121;
        }
        v33 = v31;
        v34 = v32;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2572278D0);
        if ((sub_242C48EF0() & 1) != 0)
        {
          v35 = sub_242A61310(v26, v28);
          if ((v34 & 1) != (v36 & 1))
            goto LABEL_131;
          v33 = v35;
        }
        if ((v34 & 1) != 0)
        {
          v37 = v120[7];

          *(_QWORD *)(v37 + 8 * v33) = v30;
        }
        else
        {
          v120[(v33 >> 6) + 8] |= 1 << v33;
          v38 = (uint64_t *)(v120[6] + 16 * v33);
          *v38 = v26;
          v38[1] = v28;
          *(_QWORD *)(v120[7] + 8 * v33) = v30;
          v39 = v120[2];
          v40 = __OFADD__(v39, 1);
          v41 = v39 + 1;
          if (v40)
            goto LABEL_118;
          v120[2] = v41;
          sub_242C480E0();
        }
        ++v25;
        *v119 = v120;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        v8 = v109;
        v21 = v116;
      }
      while (v114 != v25);
    }
    swift_bridgeObjectRelease();
    if (((*(uint64_t (**)(uint64_t))(v101 + 16))(v102) & 1) != 0)
      break;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_108:
    v5 = v103 + 1;
    swift_unknownObjectRelease();
    v4 = v96;
    if (v103 + 1 == v95)
      return swift_bridgeObjectRelease();
  }
  v42 = v12(v21, v8);
  v43 = v14;
  v110 = v42;
  if (v42 >> 62)
  {
    v44 = sub_242C48FC8();
    v42 = v110;
    if (v44)
      goto LABEL_32;
LABEL_106:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
  v44 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v44)
    goto LABEL_106;
LABEL_32:
  v118 = v42 & 0xC000000000000001;
  if ((v42 & 0xC000000000000001) != 0)
  {
    MEMORY[0x2494EC84C](0, v42);
  }
  else
  {
    if (!*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_130;
    swift_retain();
  }
  if (!(v14 >> 62))
  {
    v45 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v45)
      goto LABEL_37;
    goto LABEL_100;
  }
  sub_242C480E0();
  v45 = sub_242C48FC8();
  swift_bridgeObjectRelease();
  if (!v45)
  {
LABEL_100:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_107:
    swift_unknownObjectRelease();
    goto LABEL_108;
  }
LABEL_37:
  v46 = a1[13];
  v47 = a1[14];
  swift_beginAccess();
  swift_beginAccess();
  v48 = 0;
  v98 = v46 + 32;
  v99 = v46;
  v49 = 1;
  v113 = v45;
  v115 = v44;
  v111 = v47;
  while (1)
  {
    if ((v108 & 0xC000000000000001) != 0)
    {
      v50 = (id)MEMORY[0x2494EC84C](v48, v43);
    }
    else
    {
      if (v48 >= *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_124;
      v50 = *(id *)(v108 + 32 + 8 * v48);
    }
    v51 = v50;
    sub_242BC9724();
    if (*(_QWORD *)(v47 + 16) && (v54 = sub_242A61310(v52, v53), (v55 & 1) != 0))
    {
      v56 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v54);
      if ((v56 & 0x8000000000000000) != 0)
        goto LABEL_126;
      if (v56 >= *(_QWORD *)(v99 + 16))
        goto LABEL_127;
      v57 = (uint64_t *)(v98 + 16 * v56);
      v59 = *v57;
      v58 = v57[1];
    }
    else
    {
      swift_bridgeObjectRelease();
      v61 = a1[17];
      v60 = a1[18];
      sub_242BC9724();
      if (!*(_QWORD *)(v60 + 16) || (v64 = sub_242A61310(v62, v63), (v65 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        sub_242BC9724();
        v59 = v68;
        v58 = v69;
        goto LABEL_54;
      }
      v66 = *(_QWORD *)(*(_QWORD *)(v60 + 56) + 8 * v64);
      if ((v66 & 0x8000000000000000) != 0)
        goto LABEL_128;
      if (v66 >= *(_QWORD *)(v61 + 16))
        goto LABEL_129;
      v67 = v61 + 16 * v66;
      v59 = *(_QWORD *)(v67 + 32);
      v58 = *(_QWORD *)(v67 + 40);
    }
    sub_242C480E0();
    swift_bridgeObjectRelease();
LABEL_54:
    v70 = *(_QWORD **)v107;
    v71 = *(_QWORD *)(*(_QWORD *)v107 + 16);
    if (v71)
    {
      v72 = v70[4] == v59 && v70[5] == v58;
      if (v72 || (sub_242C4925C() & 1) != 0)
        goto LABEL_89;
      if (v71 != 1)
        break;
    }
LABEL_69:
    v77 = *(_QWORD **)v100;
    v78 = *(_QWORD *)(*(_QWORD *)v100 + 16);
    if (v78)
    {
      v79 = v77[4] == v59 && v77[5] == v58;
      if (v79 || (sub_242C4925C() & 1) != 0)
        goto LABEL_89;
      if (v78 != 1)
      {
        v80 = v77 + 8;
        v81 = 1;
        do
        {
          v82 = v81 + 1;
          if (__OFADD__(v81, 1))
            goto LABEL_122;
          v83 = *(v80 - 1) == v59 && *v80 == v58;
          if (v83 || (sub_242C4925C() & 1) != 0)
            goto LABEL_89;
          v80 += 3;
          ++v81;
        }
        while (v82 != v78);
      }
    }
    swift_beginAccess();
    v84 = *(_QWORD *)v107;
    sub_242C480E0();
    v85 = v51;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v107 = v84;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_242A5E358();
      v84 = v90;
      *(_QWORD *)v107 = v90;
    }
    v87 = *(_QWORD *)(v84 + 16);
    if (v87 >= *(_QWORD *)(v84 + 24) >> 1)
    {
      sub_242A5E358();
      v84 = v91;
      *(_QWORD *)v107 = v91;
    }
    *(_QWORD *)(v84 + 16) = v87 + 1;
    v88 = (_QWORD *)(v84 + 24 * v87);
    v88[4] = v59;
    v88[5] = v58;
    v88[6] = v85;
    swift_endAccess();
LABEL_89:

    swift_bridgeObjectRelease();
    swift_release();
    if (v49 == v115)
      goto LABEL_106;
    v43 = v108;
    if (v118)
    {
      MEMORY[0x2494EC84C](v49, v110);
      v47 = v111;
      v89 = v113;
    }
    else
    {
      v47 = v111;
      v89 = v113;
      if (v49 >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_125;
      swift_retain();
    }
    if (__OFADD__(v49, 1))
      goto LABEL_120;
    v48 = v49;
    v72 = v49++ == v89;
    if (v72)
      goto LABEL_100;
  }
  v73 = v70 + 8;
  v74 = 1;
  while (1)
  {
    v75 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
    v76 = *(v73 - 1) == v59 && *v73 == v58;
    if (v76 || (sub_242C4925C() & 1) != 0)
      goto LABEL_89;
    v73 += 3;
    ++v74;
    if (v75 == v71)
      goto LABEL_69;
  }
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  result = sub_242C492EC();
  __break(1u);
  return result;
}

uint64_t sub_242B15B8C(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  void **v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  id v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  BOOL v74;
  void *v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _BYTE *v79;
  uint64_t result;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v86;
  unint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  int v93;
  unint64_t *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;

  v2 = a1[19];
  if (v2 >> 62)
  {
LABEL_100:
    swift_bridgeObjectRetain_n();
    v3 = a2;
    v4 = sub_242C48FC8();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v3 = a2;
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  if (!v4)
    return swift_bridgeObjectRelease();
LABEL_3:
  v5 = a1[13];
  v6 = a1[14];
  v91 = v3 + 4;
  v92 = v2 & 0xC000000000000001;
  v94 = v3 + 8;
  swift_beginAccess();
  v88 = v3 + 11;
  swift_beginAccess();
  v7 = 0;
  v86 = v2;
  v83 = (char *)(v2 + 32);
  v84 = v2 & 0xFFFFFFFFFFFFFF8;
  v81 = v5 + 32;
  v82 = v5;
  v89 = v6;
  v90 = v4;
  while (1)
  {
    if (v92)
    {
      v8 = MEMORY[0x2494EC84C](v7, v86);
    }
    else
    {
      if (v7 >= *(_QWORD *)(v84 + 16))
        goto LABEL_93;
      v8 = *(_QWORD *)&v83[8 * v7];
      swift_retain();
    }
    v9 = __OFADD__(v7++, 1);
    if (v9)
      goto LABEL_86;
    sub_242BC9724();
    v2 = v11;
    if (*(_QWORD *)(v6 + 16) && (v12 = sub_242A61310(v10, v11), (v13 & 1) != 0))
    {
      v14 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v12);
      if ((v14 & 0x8000000000000000) != 0)
        goto LABEL_95;
      if (v14 >= *(_QWORD *)(v82 + 16))
        goto LABEL_96;
      v15 = (void **)(v81 + 16 * v14);
      v16 = *v15;
      v17 = v15[1];
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = a1[17];
      v19 = a1[18];
      sub_242BC9724();
      v2 = v21;
      if (!*(_QWORD *)(v19 + 16) || (v22 = sub_242A61310(v20, v21), (v23 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        sub_242BC9724();
        v16 = v26;
        v17 = v27;
        goto LABEL_21;
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v22);
      if ((v24 & 0x8000000000000000) != 0)
        goto LABEL_98;
      if (v24 >= *(_QWORD *)(v18 + 16))
        goto LABEL_99;
      v25 = v18 + 16 * v24;
      v16 = *(void **)(v25 + 32);
      v17 = *(void **)(v25 + 40);
    }
    sub_242C480E0();
    swift_bridgeObjectRelease();
LABEL_21:
    v97 = v8;
    sub_242BC9724();
    v29 = v28;
    v31 = v30;
    swift_beginAccess();
    v32 = *v91;
    if (!*(_QWORD *)(*v91 + 16) || (v33 = sub_242A61310(v29, v31), (v34 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242B18BF8();
      swift_allocError();
      *v79 = 3;
      swift_willThrow();
      return swift_release();
    }
    v35 = *(void **)(*(_QWORD *)(v32 + 56) + 8 * v33);
    swift_endAccess();
    v95 = v35;
    swift_bridgeObjectRelease();
    v96 = *(_QWORD *)(v97 + 152);
    v93 = *(unsigned __int8 *)(v97 + 160);
    v36 = (_QWORD *)*v94;
    v37 = *(_QWORD *)(*v94 + 16);
    if (v37)
    {
      v2 = v36[5];
      v38 = (void *)v36[6];
      if ((void *)v36[4] == v16 && v2 == (_QWORD)v17)
      {
LABEL_59:
        v2 = (unint64_t)v17;
LABEL_60:
        sub_242C480E0();
        sub_242C480E0();
        if (v38 != v95)
        {
          sub_242C48C38();
          swift_bridgeObjectRelease();
          sub_242C48314();
          sub_242C48314();
          sub_242A59170();
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_72;
      }
      if ((sub_242C4925C() & 1) != 0)
        goto LABEL_60;
      if (v37 != 1)
      {
        v40 = (void **)(v36 + 9);
        v41 = 1;
        do
        {
          v42 = v41 + 1;
          if (__OFADD__(v41, 1))
            goto LABEL_87;
          v2 = (unint64_t)*(v40 - 1);
          v38 = *v40;
          if (*(v40 - 2) == v16 && v2 == (_QWORD)v17)
            goto LABEL_59;
          if ((sub_242C4925C() & 1) != 0)
            goto LABEL_60;
          v40 += 3;
          ++v41;
        }
        while (v42 != v37);
      }
    }
    sub_242C480E0();
    v44 = (_QWORD *)*v88;
    v2 = *(_QWORD *)(*v88 + 16);
    if (v2)
      break;
LABEL_50:
    swift_beginAccess();
    v2 = *v94;
    v52 = v95;
    sub_242C480E0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v94 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_242A5E358();
      v2 = v76;
      *v94 = v76;
    }
    v54 = *(_QWORD *)(v2 + 16);
    if (v54 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      sub_242A5E358();
      v2 = v77;
      *v94 = v77;
    }
    *(_QWORD *)(v2 + 16) = v54 + 1;
    v55 = (_QWORD *)(v2 + 24 * v54);
    v55[4] = v16;
    v55[5] = v17;
    v55[6] = v52;
    swift_endAccess();
    v56 = *(_QWORD *)(v96 + 16);
    if (v56)
    {
      v57 = (uint64_t *)(v96 + 32);
      v58 = 1;
      v59 = a2;
      while (1)
      {
        v60 = *v57++;
        v61 = v58 * v60;
        if ((unsigned __int128)(v58 * (__int128)v60) >> 64 != (v58 * v60) >> 63)
          break;
        v58 = v61;
        if (!--v56)
          goto LABEL_63;
      }
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    v61 = 1;
    v59 = a2;
LABEL_63:
    if ((v93 - 1) > 0xA)
      v62 = 1;
    else
      v62 = qword_242C55D48[(char)(v93 - 1)];
    v2 = v61 * v62;
    if ((unsigned __int128)(v61 * (__int128)v62) >> 64 != (v61 * v62) >> 63)
      goto LABEL_88;
    v63 = v59[9];
    v9 = __OFADD__(v63, v2);
    v64 = (char *)(v63 + v2);
    if (v9)
      goto LABEL_89;
    v59[9] = v64;
    v65 = v59[3];
    swift_unownedRetainStrong();
    v66 = *(void **)(v65 + 16);
    swift_unknownObjectRetain();
    swift_release();
    v2 = (unint64_t)objc_msgSend(v66, sel_heapBufferSizeAndAlignWithLength_options_, v2, 0);
    v68 = v67;
    swift_unknownObjectRelease();
    v69 = v68 - 1;
    if (__OFSUB__(v68, 1))
      goto LABEL_90;
    if (__OFADD__(v2, v69))
      goto LABEL_91;
    v70 = (v2 + v69) & ~v69;
    v71 = v59[10];
    v9 = __OFADD__(v71, v70);
    v72 = v71 + v70;
    if (v9)
      goto LABEL_92;
    v59[10] = v72;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

LABEL_72:
    v6 = v89;
    if (v7 == v90)
      return swift_bridgeObjectRelease();
  }
  v45 = (void *)v44[4] == v16 && v44[5] == (_QWORD)v17;
  if (v45 || (sub_242C4925C() & 1) != 0)
  {
    v46 = 0;
  }
  else
  {
    if (v2 == 1)
      goto LABEL_50;
    v73 = v44 + 8;
    v46 = 1;
    while (1)
    {
      v74 = (void *)*(v73 - 1) == v16 && *v73 == (_QWORD)v17;
      if (v74 || (sub_242C4925C() & 1) != 0)
        break;
      v75 = (void *)(v46 + 1);
      if (__OFADD__(v46, 1))
        goto LABEL_94;
      v73 += 3;
      ++v46;
      if (v75 == (void *)v2)
        goto LABEL_50;
    }
  }
  swift_beginAccess();
  v2 = *v88;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242B4B45C();
    v2 = v78;
  }
  v47 = *(_QWORD *)(v2 + 16);
  if (v46 >= v47)
    goto LABEL_97;
  v48 = v47 - 1;
  v49 = v47 - 1 - v46;
  if (v49 >= 0)
  {
    v50 = (_QWORD *)(v2 + 24 * v46);
    v51 = (void *)v50[6];
    memmove(v50 + 4, v50 + 7, 24 * v49);
    *(_QWORD *)(v2 + 16) = v48;
    *v88 = v2;
    swift_endAccess();

    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242B163A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  void *v24;
  id v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  id v36;
  id v37;
  unint64_t v38;
  char v39;
  char v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;

  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDE520]), sel_init);
  objc_msgSend(v3, sel_setCompilerOptions_, 6);
  objc_msgSend(v3, sel_setOptimizationLevel_, 0);
  v99 = v3;
  objc_msgSend(v3, sel_setWaitForCompilationCompletion_, 0);
  sub_242A8AA58(0, (unint64_t *)&qword_257220F18);
  sub_242A8AA58(0, &qword_2572278A0);
  sub_242B18BA8();
  v4 = sub_242C480BC();
  v89 = (uint64_t *)(v1 + 40);
  swift_beginAccess();
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16);
  if (v5)
  {
    v86 = v1;
    v6 = 48;
    v7 = sub_242C480E0();
    v102 = v7;
    while (1)
    {
      v8 = *(id *)(v7 + v6);
      v9 = sub_242B18B38(v8, (SEL *)&selRef_shape, (unint64_t *)&qword_257221F28);
      v10 = objc_msgSend(v8, sel_dataType);
      v11 = objc_allocWithZone(MEMORY[0x24BDDE570]);
      v12 = sub_242B16DE4(v9, (uint64_t)v10);
      v13 = v4 & 0xC000000000000001;
      if (v12)
      {
        v14 = v12;
        if (v13)
        {
          if (v4 >= 0)
            v4 &= 0xFFFFFFFFFFFFFF8uLL;
          v15 = v8;
          v16 = sub_242C48F2C();
          if (__OFADD__(v16, 1))
            goto LABEL_40;
          v4 = sub_242B18890(v4, v16 + 1);
        }
        else
        {
          v25 = v8;
        }
        swift_isUniquelyReferenced_nonNull_native();
        v26 = sub_242A6135C((uint64_t)v8);
        if (__OFADD__(*(_QWORD *)(v4 + 16), (v27 & 1) == 0))
        {
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          sub_242C492EC();
          __break(1u);
          return;
        }
        v28 = v26;
        v29 = v27;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2572278B0);
        if ((sub_242C48EF0() & 1) != 0)
        {
          v30 = sub_242A6135C((uint64_t)v8);
          if ((v29 & 1) != (v31 & 1))
            goto LABEL_43;
          v28 = v30;
        }
        if ((v29 & 1) != 0)
        {
          v32 = *(_QWORD *)(v4 + 56);

          *(_QWORD *)(v32 + 8 * v28) = v14;
        }
        else
        {
          *(_QWORD *)(v4 + 8 * (v28 >> 6) + 64) |= 1 << v28;
          *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v28) = v8;
          *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v28) = v14;
          v33 = *(_QWORD *)(v4 + 16);
          v34 = __OFADD__(v33, 1);
          v35 = v33 + 1;
          if (v34)
            goto LABEL_41;
          *(_QWORD *)(v4 + 16) = v35;
          v36 = v8;
        }

        swift_bridgeObjectRelease();
        v7 = v102;
      }
      else
      {
        if (!v13)
        {
          v37 = v8;
          sub_242C480E0();
          v38 = sub_242A6135C((uint64_t)v37);
          v40 = v39;
          swift_bridgeObjectRelease();
          if ((v40 & 1) == 0)
          {

            goto LABEL_31;
          }
          swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572278B0);
          sub_242C48EF0();

          v41 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v38);
          sub_242C48F14();

          goto LABEL_29;
        }
        if (v4 < 0)
          v17 = v4;
        else
          v17 = v4 & 0xFFFFFFFFFFFFFF8;
        v18 = v8;
        sub_242C480E0();
        if (!sub_242C48F38())
        {

LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        swift_unknownObjectRelease();
        v19 = sub_242C48F2C();
        v20 = sub_242B18890(v17, v19);
        swift_retain();
        v21 = sub_242A6135C((uint64_t)v18);
        v23 = v22;
        swift_release();
        if ((v23 & 1) == 0)
          goto LABEL_42;

        v24 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v21);
        sub_242C48F14();

        swift_bridgeObjectRelease();
        v4 = v20;
      }
LABEL_31:
      v6 += 24;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        v2 = v86;
        break;
      }
    }
  }
  v42 = *(void **)(v2 + 16);
  swift_unownedRetainStrong();
  sub_242B2786C();
  v44 = v43;
  swift_release();
  sub_242C480E0();
  v45 = (void *)sub_242C48080();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v46 = sub_242C480E0();
  sub_242B11A10(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v42, sel_compileWithDevice_feeds_targetTensors_targetOperations_compilationDescriptor_, v44, v45, v47, 0, v99);

  v49 = sub_242B18B38(v48, (SEL *)&selRef_feedTensors, (unint64_t *)&qword_257220F18);
  if (v49)
  {
    v50 = v49;
    swift_retain();
    sub_242B11ABC(v50, v2);
    v52 = v51;
    swift_bridgeObjectRelease();
    if (v96)
    {

      return;
    }
  }
  else
  {
    v52 = *v89;
    sub_242C480E0();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  *((_QWORD *)&v105 + 1) = sub_242C480BC();
  v53 = sub_242A5A64C(v52);
  v54 = swift_bridgeObjectRelease();
  *(_QWORD *)&v105 = v53;
  sub_242A5CEF8(v54, v55, v56, v57, v58, v59, v60, v61, v83, v86, (uint64_t)v89, a1, v96, (uint64_t)v99);
  v103 = v105;
  v62 = *(_QWORD *)(v2 + 64);
  sub_242C480E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v63 = v2;
  *((_QWORD *)&v105 + 1) = sub_242C480BC();
  v64 = sub_242A5A64C(v62);
  v65 = swift_bridgeObjectRelease();
  *(_QWORD *)&v105 = v64;
  sub_242A5CEF8(v65, v66, v67, v68, v69, v70, v71, v72, v84, v87, v90, v93, v97, v100);
  swift_beginAccess();
  v73 = *(_QWORD *)(v63 + 88);
  sub_242C480E0();
  *((_QWORD *)&v104 + 1) = sub_242C480BC();
  v74 = sub_242A5A64C(v73);
  v75 = swift_bridgeObjectRelease();
  *(_QWORD *)&v104 = v74;
  sub_242A5CEF8(v75, v76, v77, v78, v79, v80, v81, v82, v85, v88, v91, v94, v98, v101);
  *(_QWORD *)v95 = v48;
  *(_OWORD *)(v95 + 8) = v103;
  *(_OWORD *)(v95 + 24) = v105;
  *(_OWORD *)(v95 + 40) = v104;
}

_QWORD *sub_242B16AB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v1[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDE518]), sel_init);
  sub_242A8AA58(0, (unint64_t *)&qword_257220F18);
  v3 = MEMORY[0x24BEE4AF8];
  v4 = sub_242C480BC();
  v1[5] = v3;
  v1[6] = 0;
  v1[7] = 0;
  v1[8] = v3;
  v1[9] = 0;
  v1[10] = 0;
  v1[11] = v3;
  v1[3] = a1;
  v1[4] = v4;
  swift_unownedRetain();
  swift_release();
  return v1;
}

uint64_t sub_242B16B50()
{
  uint64_t v0;

  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B16B94()
{
  sub_242B16B50();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSGraphExecutor.MPSGraphExecutorComponentsBuilder()
{
  return objc_opt_self();
}

unint64_t sub_242B16BD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257227880;
  if (!qword_257227880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257224158);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257227880);
  }
  return result;
}

void **sub_242B16C14(void **a1)
{
  void *v2;

  v2 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

id sub_242B16C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v6;
  id v7;

  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v6 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithMTLBuffer_shape_dataType_, a1, v6, a3);

  swift_unknownObjectRelease();
  return v7;
}

id sub_242B16D20(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v10;
  void *v11;
  id v12;

  v10 = (void *)sub_242C47BD0();
  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v11 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v5, sel_initWithDevice_data_shape_dataType_, a1, v10, v11, a5);
  sub_242A69418(a2, a3);

  return v12;
}

id sub_242B16DE4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;

  if (a1)
  {
    sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
    v4 = (void *)sub_242C4853C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_, v4, a2);

  return v5;
}

uint64_t sub_242B16E6C(uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_signpost_type_t v24;
  uint64_t v25;
  os_signpost_id_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t inited;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSUInteger v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  os_signpost_type_t v67;
  uint8_t *v68;
  os_signpost_id_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unsigned int v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  NSObject *v99;
  char *v100;
  os_signpost_type_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint8_t *v106;
  os_signpost_id_t v107;
  os_signpost_type_t v108;
  os_signpost_id_t v109;
  os_signpost_type_t v110;
  NSObject *v111;
  uint64_t v113;
  int v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint8_t *v122;
  const char *v123;
  uint32_t v124;
  const char *v125;
  char *v126;
  NSObject *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t aBlock;
  unint64_t v150;
  uint64_t (*v151)(uint64_t);
  void *v152;
  uint64_t (*v153)(_QWORD, _QWORD, _QWORD);
  uint64_t v154;
  char v155;
  uint64_t v156;
  unint64_t v157;

  v131 = a8;
  v132 = a9;
  v120 = sub_242C47F3C();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v118 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_242C47F0C();
  v143 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v126 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v141 = (char *)&v115 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v142 = (char *)&v115 - v22;
  v23 = sub_242C47F24();
  v24 = sub_242C489A4();
  v121 = a4;
  v25 = v132;
  v26 = sub_242C47EF4();
  v127 = v23;
  v123 = a5;
  v125 = a6;
  v122 = a1;
  v124 = a2;
  _os_signpost_emit_with_name_impl(&dword_242A44000, v23, v24, v26, a5, a6, a1, a2);
  v146 = a7;
  v27 = *(_QWORD *)(a7 + 16);
  swift_unownedRetainStrong();
  v28 = *(_QWORD *)(v27 + 24);
  swift_unknownObjectRetain();
  v147 = v27;
  swift_release();
  v29 = objc_msgSend((id)objc_opt_self(), sel_commandBufferFromCommandQueue_, v28);
  swift_unknownObjectRelease();
  v30 = *(_QWORD *)(v25 + 16);
  if (v30)
  {
    sub_242C480E0();
    v31 = (_QWORD *)(v25 + 40);
    do
    {
      objc_msgSend(v29, sel_encodeWaitForEvent_value_, *(v31 - 1), *v31);
      v31 += 2;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
  }
  v130 = v29;
  v129 = a10;
  v32 = MEMORY[0x24BEE4AF8];
  v157 = MEMORY[0x24BEE4AF8];
  v33 = v146;
  v34 = *(_QWORD *)(v146 + 48);
  sub_242AD5DD0(*(_QWORD *)(v34 + 16), 0);
  sub_242C4856C();
  v156 = v32;
  sub_242AD5DD0(*(_QWORD *)(v34 + 16), 0);
  v35 = sub_242C4856C();
  v36 = *(_QWORD *)(v33 + 64);
  MEMORY[0x24BDAC7A8](v35);
  *(&v115 - 4) = MEMORY[0x24BEE0D00];
  *(&v115 - 3) = (uint64_t)&type metadata for TensorDescriptor;
  v113 = MEMORY[0x24BEE0D10];
  swift_getKeyPath();
  swift_retain();
  v37 = sub_242C480E0();
  v38 = v148;
  v39 = sub_242B11CE0(v37);
  v148 = v38;
  swift_release();
  v145 = v36;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572278E8);
  *(_QWORD *)(swift_initStackObject() + 16) = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572278F0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v39;
  *(_QWORD *)(inited + 24) = 0;
  sub_242C480E0();
  swift_release();
  swift_retain();
  sub_242B114DC((uint64_t)&aBlock);
  if (aBlock)
  {
    v41 = v150;
    v42 = *(_QWORD *)(aBlock + 16);
    if (v42)
    {
      v43 = (uint64_t *)(aBlock + 32);
      v44 = 1;
      while (1)
      {
        v45 = *v43++;
        v46 = v44 * v45;
        if ((unsigned __int128)(v44 * (__int128)v45) >> 64 != (v44 * v45) >> 63)
          break;
        v44 = v46;
        if (!--v42)
          goto LABEL_12;
      }
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
    }
    else
    {
      v46 = 1;
LABEL_12:
      if ((v150 - 1) > 0xAu)
        v47 = 1;
      else
        v47 = qword_242C55D48[(char)(v150 - 1)];
      v48 = v46 * v47;
      if ((unsigned __int128)(v46 * (__int128)v47) >> 64 == (v46 * v47) >> 63)
      {
        swift_unownedRetainStrong();
        v49 = sub_242B279DC(v48, 0);
        swift_release();
        if (v49)
        {
          swift_unknownObjectRetain();
          v50 = sub_242C480E0();
          sub_242A5A5E8(v50);
          swift_bridgeObjectRelease();
          __asm { BR              X9 }
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_242B18BF8();
        swift_allocError();
        *v98 = 2;
        swift_willThrow();
        swift_setDeallocating();
        swift_bridgeObjectRelease();
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return inited;
      }
    }
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  swift_release();
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  v138 = sub_242B14828(v157);
  v52 = v51;
  v53 = *(void **)(v146 + 24);
  sub_242A8AA58(0, &qword_2572278F8);
  v54 = (void *)sub_242C4853C();
  v137 = v52;
  v55 = (void *)sub_242C4853C();
  v56 = v130;

  swift_unownedRetainStrong();
  sub_242B27934();
  v58 = v57;
  swift_release();
  objc_msgSend(v56, sel_encodeSignalEvent_value_, v58, a11);
  swift_unknownObjectRelease();
  swift_unownedRetainStrong();
  sub_242B27988();
  v60 = v59;
  swift_release();
  v144 = a11;
  objc_msgSend(v56, sel_encodeSignalEvent_value_, v60, a11);
  swift_unknownObjectRelease();
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v129;
  v153 = nullsub_1;
  v154 = v61;
  aBlock = MEMORY[0x24BDAC760];
  v150 = 1107296256;
  v151 = sub_242B141C8;
  v152 = &block_descriptor_0;
  v62 = _Block_copy(&aBlock);
  sub_242C480E0();
  swift_release();
  objc_msgSend(v56, sel_addCompletedHandler_, v62);
  _Block_release(v62);
  objc_msgSend(v56, sel_commit);
  if (qword_257220560 != -1)
LABEL_83:
    swift_once();
  v63 = sub_242C47F30();
  v64 = __swift_project_value_buffer(v63, (uint64_t)qword_257223378);
  v65 = v142;
  sub_242C47F00();
  v115 = v64;
  v66 = sub_242C47F24();
  v67 = sub_242C489A4();
  if ((sub_242C48A34() & 1) != 0)
  {
    v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v68 = 0;
    v69 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v66, v67, v69, "Prepare MPSGraph Outputs", "", v68, 2u);
    MEMORY[0x2494EDF68](v68, -1, -1);
  }

  v70 = v143;
  v71 = v128;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v141, v65, v128);
  sub_242C47F60();
  swift_allocObject();
  v117 = sub_242C47F54();
  v116 = *(void (**)(char *, uint64_t))(v70 + 8);
  v116(v65, v71);
  v143 = *(_QWORD *)(v34 + 16);
  if (v143)
  {
    v72 = 0;
    v142 = (char *)(v34 + 32);
    v141 = (char *)(v138 & 0xC000000000000001);
    v140 = v137 & 0xC000000000000001;
    v136 = v138 & 0xFFFFFFFFFFFFFF8;
    v134 = v138 + 32;
    v135 = v137 & 0xFFFFFFFFFFFFFF8;
    v133 = v137 + 32;
    inited = MEMORY[0x24BEE4AF8];
    v139 = v34;
    while (1)
    {
      if (v72 >= *(_QWORD *)(v34 + 16))
        goto LABEL_79;
      v73 = (uint64_t *)&v142[24 * v72];
      v74 = *v73;
      v75 = v73[1];
      if (v141)
      {
        sub_242C480E0();
        v76 = MEMORY[0x2494EC84C](v72, v138);
      }
      else
      {
        if (v72 >= *(_QWORD *)(v136 + 16))
          goto LABEL_81;
        v76 = *(_QWORD *)(v134 + 8 * v72);
        sub_242C480E0();
        swift_unknownObjectRetain();
      }
      if (v140)
      {
        v77 = (id)MEMORY[0x2494EC84C](v72, v137);
      }
      else
      {
        if (v72 >= *(_QWORD *)(v135 + 16))
          goto LABEL_82;
        v77 = *(id *)(v133 + 8 * v72);
      }
      v78 = v77;
      sub_242C480E0();
      sub_242B12858(v74, v75, v145, &aBlock);
      swift_bridgeObjectRelease();
      v79 = aBlock;
      v80 = *(_QWORD *)(aBlock + 16);
      if (v80)
      {
        v81 = (uint64_t *)(aBlock + 32);
        v82 = 1;
        while (1)
        {
          v83 = *v81++;
          v34 = v82 * v83;
          if ((unsigned __int128)(v82 * (__int128)v83) >> 64 != (v82 * v83) >> 63)
            break;
          v82 = v34;
          if (!--v80)
            goto LABEL_38;
        }
        __break(1u);
        goto LABEL_78;
      }
      v34 = 1;
LABEL_38:
      sub_242AD2750();
      if (v34 != v84)
      {
        aBlock = 0;
        v150 = 0xE000000000000000;
        sub_242C48C38();
        swift_bridgeObjectRelease();
        aBlock = 0xD00000000000002BLL;
        v150 = 0x8000000242C6B760;
        sub_242C48314();
        sub_242C48314();
        v155 = 4;
        sub_242A59170();
      }
      sub_242A5A5E8(v79);
      v86 = v85;
      swift_bridgeObjectRelease();
      v87 = v148;
      sub_242C004C0(v86);
      v89 = v88;
      v148 = v87;
      swift_bridgeObjectRelease();
      aBlock = v89;
      v90 = objc_msgSend(v78, sel_dataType);
      switch(v90)
      {
        case 0x80000008:
          v91 = 12;
          break;
        case 0x90000010:
          v91 = 9;
          break;
        case 8u:
          v91 = 4;
          break;
        case 0x10u:
          v91 = 5;
          break;
        case 0x20u:
          v91 = 6;
          break;
        case 0x40u:
          goto LABEL_61;
        case 0x10000010u:
          v91 = 8;
          break;
        case 0x10000020u:
          v91 = 10;
          break;
        case 0x20000008u:
          v91 = 0;
          break;
        case 0x20000010u:
          v91 = 1;
          break;
        case 0x20000020u:
          v91 = 2;
          break;
        case 0x20000040u:
LABEL_61:
          v91 = 3;
          break;
        default:
          while (1)
          {
            v114 = 0;
            v113 = 35;
            sub_242C48F5C();
            __break(1u);
          }
      }
      LOBYTE(v157) = v91;
      v92 = v147;
      swift_unownedRetainStrong();
      type metadata accessor for MPSGraphTensorStorage();
      swift_allocObject();
      swift_unknownObjectRetain();
      v93 = sub_242B859C0(&aBlock, (char *)&v157, v76, v144, v92);
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242A5ECEC();
        inited = v96;
      }
      v94 = *(_QWORD *)(inited + 16);
      if (v94 >= *(_QWORD *)(inited + 24) >> 1)
      {
        sub_242A5ECEC();
        inited = v97;
      }
      ++v72;
      *(_QWORD *)(inited + 16) = v94 + 1;
      v95 = (_QWORD *)(inited + 32 * v94);
      v95[4] = v74;
      v95[5] = v75;
      v95[6] = v93;
      v95[7] = &off_25138A690;

      swift_release();
      swift_unknownObjectRelease();
      v34 = v139;
      if (v72 == v143)
        goto LABEL_70;
    }
  }
  inited = MEMORY[0x24BEE4AF8];
LABEL_70:
  v99 = sub_242C47F24();
  v100 = v126;
  sub_242C47F48();
  v101 = sub_242C48998();
  if ((sub_242C48A34() & 1) != 0)
  {
    swift_retain();
    v102 = v118;
    sub_242C47F6C();
    swift_release();
    v103 = v119;
    v104 = v120;
    if ((*(unsigned int (**)(char *, uint64_t))(v119 + 88))(v102, v120) == *MEMORY[0x24BEE7810])
    {
      v105 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
      v105 = "";
    }
    v100 = v126;
    v106 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v106 = 0;
    v107 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v99, v101, v107, "Prepare MPSGraph Outputs", v105, v106, 2u);
    MEMORY[0x2494EDF68](v106, -1, -1);
  }

  v116(v100, v128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v108 = sub_242C48998();
  v109 = sub_242C47EF4();
  v110 = v108;
  v111 = v127;
  _os_signpost_emit_with_name_impl(&dword_242A44000, v127, v110, v109, v123, v125, v122, v124);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return inited;
}

uint64_t sub_242B17FEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572278B8);
  v6 = sub_242C48FF8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = v2;
    v35 = v5 + 64;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 64;
    result = swift_retain();
    v14 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
    {
      v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * i);
      v22 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0)
      {
        v23 = v21;
        v24 = v22;
      }
      result = sub_242C48A10();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) == 0)
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v25) >> 6;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          v31 = v27 == v30;
          if (v27 == v30)
            v27 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v27);
          if (v32 != -1)
          {
            v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v28) = v21;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v28) = v22;
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_41;
      if (v17 >= v11)
        break;
      v18 = (_QWORD *)(v5 + 64);
      v19 = *(_QWORD *)(v35 + 8 * v17);
      ++v14;
      if (!v19)
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v11)
          goto LABEL_32;
        v19 = *(_QWORD *)(v35 + 8 * v14);
        if (!v19)
        {
          v20 = v17 + 2;
          if (v20 >= v11)
          {
LABEL_32:
            swift_release();
            v3 = v34;
            if ((a2 & 1) == 0)
              goto LABEL_39;
            goto LABEL_35;
          }
          v19 = *(_QWORD *)(v35 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              v14 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_42;
              if (v14 >= v11)
                goto LABEL_32;
              v19 = *(_QWORD *)(v35 + 8 * v14);
              ++v20;
              if (v19)
                goto LABEL_18;
            }
          }
          v14 = v20;
        }
      }
LABEL_18:
      v10 = (v19 - 1) & v19;
    }
    swift_release();
    v3 = v34;
    v18 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_39;
LABEL_35:
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_242BA2DE8(0, (unint64_t)(v33 + 63) >> 6, v18);
    else
      *v18 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_242B182AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  _QWORD *v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257227910);
  v35 = a2;
  v6 = OUTLINED_FUNCTION_6_42();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  swift_retain();
  v12 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v17)) + (v12 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v35 & 1) == 0)
    {
      sub_242C480E0();
      swift_retain();
    }
    sub_242C49340();
    sub_242C4817C();
    v23 = sub_242C49394() & ~(-1 << *(_BYTE *)(v7 + 32));
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_4_40();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        v27 = v25 == v26;
        if (v25 == v26)
          v25 = 0;
        v24 |= v27;
        if (*(_QWORD *)(v11 + 8 * v25) != -1)
        {
          OUTLINED_FUNCTION_3_45();
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_5_44();
LABEL_30:
    OUTLINED_FUNCTION_2_53();
    *(_QWORD *)(v11 + v28) |= v29;
    v31 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v30);
    *v31 = v21;
    v31[1] = v20;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v30) = v22;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_41;
    if (v15 >= v33)
    {
      OUTLINED_FUNCTION_28_5();
      v16 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v16 = (_QWORD *)(v5 + 64);
    v17 = *(_QWORD *)(v34 + 8 * v15);
    ++v12;
    if (!v17)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v33)
        goto LABEL_32;
      v17 = *(_QWORD *)(v34 + 8 * v12);
      if (!v17)
        break;
    }
LABEL_18:
    v10 = (v17 - 1) & v17;
  }
  v18 = v15 + 2;
  if (v18 < v33)
  {
    v17 = *(_QWORD *)(v34 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v12 = v18 + 1;
        if (__OFADD__(v18, 1))
          goto LABEL_42;
        if (v12 >= v33)
          goto LABEL_32;
        v17 = *(_QWORD *)(v34 + 8 * v12);
        ++v18;
        if (v17)
          goto LABEL_18;
      }
    }
    v12 = v18;
    goto LABEL_18;
  }
LABEL_32:
  OUTLINED_FUNCTION_28_5();
LABEL_34:
  if ((v35 & 1) != 0)
  {
    v32 = 1 << *(_BYTE *)(v5 + 32);
    if (v32 >= 64)
      sub_242BA2DE8(0, (unint64_t)(v32 + 63) >> 6, v16);
    else
      *v16 = -1 << v32;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  OUTLINED_FUNCTION_28_5();
  *v3 = v7;
}

void sub_242B1856C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v42 = sub_242C47DA4();
  v5 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_4_9();
  v41 = v7 - v6;
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572225F8);
  v40 = a2;
  v9 = OUTLINED_FUNCTION_6_42();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v39 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v8 + 64);
    v38 = (unint64_t)(v11 + 63) >> 6;
    v14 = v9 + 64;
    swift_retain();
    v15 = 0;
    if (!v13)
      goto LABEL_7;
LABEL_6:
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
    {
      v21 = *(_QWORD *)(v8 + 56);
      v22 = v8;
      v23 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * i);
      v25 = *v23;
      v24 = v23[1];
      v26 = *(_QWORD *)(v5 + 72);
      v27 = v21 + v26 * i;
      if ((v40 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v41, v27, v42);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v41, v27, v42);
        sub_242C480E0();
      }
      sub_242C49340();
      sub_242C4817C();
      v28 = sub_242C49394() & ~(-1 << *(_BYTE *)(v10 + 32));
      if (((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_4_40();
        while (++v30 != v31 || (v29 & 1) == 0)
        {
          v32 = v30 == v31;
          if (v30 == v31)
            v30 = 0;
          v29 |= v32;
          if (*(_QWORD *)(v14 + 8 * v30) != -1)
          {
            OUTLINED_FUNCTION_3_45();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_44();
LABEL_31:
      OUTLINED_FUNCTION_2_53();
      *(_QWORD *)(v14 + v33) |= v34;
      v36 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v35);
      *v36 = v25;
      v36[1] = v24;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v26 * v35, v41, v42);
      ++*(_QWORD *)(v10 + 16);
      v8 = v22;
      if (v13)
        goto LABEL_6;
LABEL_7:
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v18 >= v38)
        goto LABEL_33;
      v19 = v39[v18];
      ++v15;
      if (!v19)
      {
        v15 = v18 + 1;
        if (v18 + 1 >= v38)
          goto LABEL_33;
        v19 = v39[v15];
        if (!v19)
        {
          v20 = v18 + 2;
          if (v20 >= v38)
          {
LABEL_33:
            swift_release();
            v3 = v2;
            if ((v40 & 1) != 0)
            {
              v37 = 1 << *(_BYTE *)(v8 + 32);
              if (v37 >= 64)
                sub_242BA2DE8(0, (unint64_t)(v37 + 63) >> 6, v39);
              else
                *v39 = -1 << v37;
              *(_QWORD *)(v8 + 16) = 0;
            }
            break;
          }
          v19 = v39[v20];
          if (!v19)
          {
            while (1)
            {
              v15 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_41;
              if (v15 >= v38)
                goto LABEL_33;
              v19 = v39[v15];
              ++v20;
              if (v19)
                goto LABEL_18;
            }
          }
          v15 = v20;
        }
      }
LABEL_18:
      v13 = (v19 - 1) & v19;
    }
  }
  swift_release();
  *v3 = v10;
}

uint64_t sub_242B18890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572278B8);
  v2 = sub_242C49004();
  v17 = v2;
  sub_242C48F20();
  v3 = sub_242C48F44();
  if (!v3)
  {
LABEL_16:
    swift_release();
    return v2;
  }
  v4 = v3;
  sub_242A8AA58(0, (unint64_t *)&qword_257220F18);
  while (1)
  {
    swift_dynamicCast();
    sub_242A8AA58(0, &qword_2572278A0);
    swift_dynamicCast();
    v2 = v17;
    v5 = *(_QWORD *)(v17 + 16);
    if (*(_QWORD *)(v17 + 24) <= v5)
    {
      sub_242B17FEC(v5 + 1, 1);
      v2 = v17;
    }
    result = sub_242C48A10();
    v7 = v2 + 64;
    v8 = -1 << *(_BYTE *)(v2 + 32);
    v9 = result & ~v8;
    v10 = v9 >> 6;
    if (((-1 << v9) & ~*(_QWORD *)(v2 + 64 + 8 * (v9 >> 6))) == 0)
      break;
    v11 = __clz(__rbit64((-1 << v9) & ~*(_QWORD *)(v2 + 64 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11) = v16;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v11) = v4;
    ++*(_QWORD *)(v2 + 16);
    v4 = sub_242C48F44();
    if (!v4)
      goto LABEL_16;
  }
  v12 = 0;
  v13 = (unint64_t)(63 - v8) >> 6;
  while (++v10 != v13 || (v12 & 1) == 0)
  {
    v14 = v10 == v13;
    if (v10 == v13)
      v10 = 0;
    v12 |= v14;
    v15 = *(_QWORD *)(v7 + 8 * v10);
    if (v15 != -1)
    {
      v11 = __clz(__rbit64(~v15)) + (v10 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

id sub_242B18ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_242C48224();
  v9 = objc_msgSend(a5, sel_placeholderWithShape_dataType_name_, a1, a2, v8);

  return v9;
}

uint64_t sub_242B18B38(void *a1, SEL *a2, unint64_t *a3)
{
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(a1, *a2);
  if (!v4)
    return 0;
  v5 = v4;
  sub_242A8AA58(0, a3);
  v6 = sub_242C48548();

  return v6;
}

unint64_t sub_242B18BA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2572278A8;
  if (!qword_2572278A8)
  {
    v1 = sub_242A8AA58(255, (unint64_t *)&qword_257220F18);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2572278A8);
  }
  return result;
}

unint64_t sub_242B18BF8()
{
  unint64_t result;

  result = qword_2572278C0;
  if (!qword_2572278C0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C55D00, &type metadata for MPSGraphExecutor.ExecutionError);
    atomic_store(result, (unint64_t *)&qword_2572278C0);
  }
  return result;
}

void sub_242B18C34(_OWORD *a1@<X8>)
{
  uint64_t v1;

  sub_242B136B4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_242B18C50()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_242B18C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_242B1461C(a1, a2, *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(uint64_t **)(v3 + 48), a3);
}

uint64_t sub_242B18CAC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t result;

  v3 = a3 >> 62;
  if (a3 >> 62 == 2)
    return swift_release();
  if ((_DWORD)v3 != 1)
  {
    if ((_DWORD)v3)
      return result;
    swift_unknownObjectRelease();
    return swift_release();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_242B18CF0(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a3;
  *(_QWORD *)(v5 + 16) = result + 1;
  v6 = v5 + 16 * result;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a5;
  return result;
}

uint64_t storeEnumTagSinglePayload for MPSGraphExecutor.ExecutionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242B18D54 + 4 * byte_242C55AF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242B18D88 + 4 * byte_242C55AF4[v4]))();
}

uint64_t sub_242B18D88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B18D90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B18D98);
  return result;
}

uint64_t sub_242B18DA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B18DACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242B18DB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B18DB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPSGraphExecutor.ExecutionError()
{
  return &type metadata for MPSGraphExecutor.ExecutionError;
}

unint64_t sub_242B18DDC()
{
  unint64_t result;

  result = qword_257227918;
  if (!qword_257227918)
  {
    result = MEMORY[0x2494EDE24](&unk_242C55CD8, &type metadata for MPSGraphExecutor.ExecutionError);
    atomic_store(result, (unint64_t *)&qword_257227918);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_42()
{
  return sub_242C48FF8();
}

uint64_t Sequential.isEveryParameterInitialized.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_48_15();
  v6 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v5 + 32) + 48))(*(_QWORD *)(v5 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, a1);
  if ((v6 & 1) != 0)
    v7 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 40) + 48))(*(_QWORD *)(a1 + 24));
  else
    v7 = 0;
  OUTLINED_FUNCTION_51_8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return v7 & 1;
}

void Sequential.init(_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_23_24();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v0);
  type metadata accessor for Sequential();
}

uint64_t sub_242B18F60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_2_33(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void type metadata accessor for Sequential()
{
  JUMPOUT(0x2494EDD88);
}

uint64_t Sequential.init(layers:)(uint64_t (*a1)(void))
{
  return a1();
}

void Sequential.initializeParameters(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v11 = *(_QWORD *)(v1 + 32);
  v12 = v3;
  v4 = *(_QWORD *)(v1 + 16);
  v13 = OUTLINED_FUNCTION_62_8();
  v5 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_26_24();
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_QWORD *)(v2 + 24);
  v9 = *(_QWORD *)(OUTLINED_FUNCTION_62_8() - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_27_20();
  Layer.callAsFunction(_:)(v12, v4, v11);
  Layer.callAsFunction(_:)(v0, v8, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v13);
  OUTLINED_FUNCTION_38_13((uint64_t)&associated type descriptor for Layer.Output, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  OUTLINED_FUNCTION_13_11();
}

void Sequential.forward(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_28_23();
  Layer.callAsFunction(_:)(v4, v6, v5);
  Layer.callAsFunction(_:)(v0, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40));
  OUTLINED_FUNCTION_63_9(v0, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B19164(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x31726579616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x32726579616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242B19248(char a1)
{
  if ((a1 & 1) != 0)
    return 0x32726579616CLL;
  else
    return 0x31726579616CLL;
}

BOOL sub_242B19270(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242A65680(*a1, *a2);
}

uint64_t sub_242B19288()
{
  return sub_242A657BC();
}

uint64_t sub_242B1929C()
{
  return sub_242A65690();
}

uint64_t sub_242B192B0()
{
  sub_242C49340();
  sub_242A65690();
  return sub_242C49394();
}

uint64_t sub_242B192F8()
{
  char *v0;

  return sub_242B19248(*v0);
}

uint64_t sub_242B1930C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B19164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242B1933C()
{
  return sub_242A65800();
}

uint64_t sub_242B19364@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A63ECC();
  *a1 = result;
  return result;
}

uint64_t sub_242B19394(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C55FD8, a1);
  return sub_242C494D8();
}

uint64_t sub_242B193C8(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C55FD8, a1);
  return sub_242C494E4();
}

uint64_t Sequential.count.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v6 = *(_QWORD *)(sub_242C48A64() - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_51_13();
  v8 = *(_QWORD *)(v5 + 24);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_47_13();
  v10 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_43_15();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v3, v0 + *(int *)(v5 + 52), v8);
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_16_22(v2, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v1, v2, v5);
    v13 = ((uint64_t (*)(uint64_t))Sequential.count.getter)(v5);
    OUTLINED_FUNCTION_51_8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v14 = v13 + 1;
    if (!__OFADD__(v13, 1))
      return v14;
    __break(1u);
  }
  v14 = 1;
  OUTLINED_FUNCTION_16_22(v2, 1);
  OUTLINED_FUNCTION_7_24(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  return v14;
}

uint64_t Sequential.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_242B1955C(a1, 0, a2, a3);
}

uint64_t sub_242B1955C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_0;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v9 = sub_242C48A64();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - v10;
  v12 = *(_QWORD *)(a3 + 24);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v21 = MEMORY[0x24BDAC7A8](v17);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1;
  if (a1 == a2)
  {
    v24 = *(_QWORD *)(a3 + 16);
    v25 = *(_QWORD *)(a3 + 32);
    a4[3] = v24;
    a4[4] = v25;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(boxed_opaque_existential_0, v4, v24);
  }
  v28 = v20;
  v30 = v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))(v15, v4 + *(int *)(a3 + 52), v12, v21);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v11, a3);
    if (!__OFADD__(a2, 1))
    {
      sub_242B1955C(v31, a2 + 1, a3);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v23, a3);
    }
    __break(1u);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, a3);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v30);
  v33 = 0;
  v34 = 0xE000000000000000;
  sub_242C48C38();
  swift_bridgeObjectRelease();
  v33 = 0x60207865646E49;
  v34 = 0xE700000000000000;
  v32 = v31;
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t Sequential.removingLast()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

void Layer.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_17_17();
  v3 = v2;
  v5 = v4;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_49_11();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_4_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10 - v9, v0, v3);
  OUTLINED_FUNCTION_45_10(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  Sequential.init(_:_:)();
}

void sub_242B198D0()
{
  OUTLINED_FUNCTION_13_11();
}

void Sequential<>.encode(to:)()
{
  OUTLINED_FUNCTION_59_8();
}

void sub_242B19930(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x2494EDE24](&unk_242C55FD8, a1);
  v4 = sub_242C491A8();
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_26_24();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_242C49478();
  *(_BYTE *)(v3 - 112) = 0;
  v7 = *(_QWORD *)(v3 - 72);
  sub_242C49184();
  if (!v7)
  {
    *(_BYTE *)(v3 - 112) = 1;
    sub_242C49184();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_0_9();
}

void type metadata accessor for Sequential.CodingKeys()
{
  JUMPOUT(0x2494EDD88);
}

void Sequential<>.init(from:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_59_8();
}

void sub_242B19AC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x2494EDE24](&unk_242C55FD8, a1);
  v6 = sub_242C4910C();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_43_15();
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for Sequential();
}

void sub_242B19B2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v4 - 216) = a1;
  v5 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_51_13();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  *(_QWORD *)(v4 - 128) = v1;
  v7 = *(_QWORD *)(v4 - 72);
  sub_242C49448();
  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    *(_QWORD *)(v4 - 72) = v5;
    v8 = *(_QWORD *)(v4 - 176);
    v9 = (uint64_t)v3;
    v11 = *(_QWORD *)(v4 - 168);
    v10 = *(_QWORD *)(v4 - 160);
    v12 = v2;
    *(_BYTE *)(v4 - 112) = 0;
    v13 = *(_QWORD *)(v4 - 152);
    sub_242C490D0();
    v14 = *(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32);
    *(_QWORD *)(v4 - 144) = v12;
    v14(v12, *(_QWORD *)(v4 - 136), v13);
    *(_BYTE *)(v4 - 112) = 1;
    sub_242C490D0();
    OUTLINED_FUNCTION_35_14();
    v15 = *(_QWORD *)(v4 - 216);
    v16 = *(_QWORD *)(v4 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 32))(v16 + *(int *)(v15 + 52), v11, v10);
    v17 = *(_QWORD *)(v4 - 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 16))(*(_QWORD *)(v4 - 200), v16, v15);
    __swift_destroy_boxed_opaque_existential_1(v9);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v15);
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242B19CAC()
{
  Sequential<>.init(from:)();
}

void sub_242B19CDC()
{
  Sequential<>.encode(to:)();
}

uint64_t static SequentialBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

void static SequentialBuilder.buildBlock<A, B>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_23_24();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_47_13();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_49_11();
  (*(void (**)(uint64_t))(v7 + 16))(v2);
  OUTLINED_FUNCTION_2_33(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  Sequential.init(_:_:)();
}

void sub_242B19D9C()
{
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C>(_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_43_15();
  type metadata accessor for Sequential();
}

void sub_242B19E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_52_7();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v1, *(_QWORD *)(v6 - 160), v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v0, *(_QWORD *)(v6 - 152), v2);
  Sequential.init(_:_:)();
}

void sub_242B19EA8()
{
  OUTLINED_FUNCTION_13_29();
}

void sub_242B19EB4()
{
  Layer.appending<A>(_:)();
}

void sub_242B19EC8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_24(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C, D>(_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_48_15();
  OUTLINED_FUNCTION_11_31();
}

void sub_242B19F70(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 192) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_145_0();
}

void sub_242B19F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 120) = v2;
  *(_QWORD *)(v3 - 112) = v1;
  OUTLINED_FUNCTION_20_28(a1);
}

void sub_242B19FA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 216) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_27_20();
  OUTLINED_FUNCTION_61_8(v2, *(_QWORD *)(v5 - 176), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 184) + 16))(v3, *(_QWORD *)(v5 - 168), v4);
  Sequential.init(_:_:)();
}

void sub_242B1A004()
{
  Layer.appending<A>(_:)();
}

void sub_242B1A01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_38_13(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8));
  MEMORY[0x2494EDE24](&protocol conformance descriptor for Sequential<A, B>, v1);
  OUTLINED_FUNCTION_57_11();
}

void sub_242B1A050()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 216) + 8));
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E>(_:_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_11_31();
}

void sub_242B1A128(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 200) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_145_0();
}

void sub_242B1A150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 272) = a1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  type metadata accessor for Sequential();
}

void sub_242B1A16C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 - 240) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_43_15();
  v7 = MEMORY[0x2494EDE24](v3, a1);
  *(_QWORD *)(v4 - 296) = v7;
  *(_QWORD *)(v4 - 120) = a1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v7;
  *(_QWORD *)(v4 - 96) = v1;
  OUTLINED_FUNCTION_6_43();
}

void sub_242B1A1B0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 248) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_51_13();
  OUTLINED_FUNCTION_2_33(v1, *(_QWORD *)(v3 - 184), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 16));
  OUTLINED_FUNCTION_2_33(*(_QWORD *)(v3 - 192), *(_QWORD *)(v3 - 176), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  Sequential.init(_:_:)();
}

void sub_242B1A218()
{
  OUTLINED_FUNCTION_42_14();
}

void sub_242B1A238()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_13(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 200) + 8));
  OUTLINED_FUNCTION_33_15();
}

void sub_242B1A26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v0, v1);
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1A28C()
{
  Layer.appending<A>(_:)();
}

void sub_242B1A2A4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 248) + 8));
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F>(_:_:_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_44_11();
}

void sub_242B1A394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v1 - 288) = a1;
  *(_QWORD *)(v1 - 216) = v2;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_18_27(v4);
  OUTLINED_FUNCTION_13_29();
}

void sub_242B1A3D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 280) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v2;
  OUTLINED_FUNCTION_12_27();
}

void sub_242B1A3E8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 256) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_18_27(v3);
  OUTLINED_FUNCTION_37_17();
}

void sub_242B1A414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 336) = a1;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v1;
  OUTLINED_FUNCTION_6_43();
}

void sub_242B1A428(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 296) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_28_23();
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1A44C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 368) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  type metadata accessor for Sequential();
}

void sub_242B1A468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 312) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_61_8(v1, *(_QWORD *)(v2 - 192), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 16));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 - 200) + 16))(*(_QWORD *)(v2 - 208), *(_QWORD *)(v2 - 184), *(_QWORD *)(v2 - 248));
  Sequential.init(_:_:)();
}

void sub_242B1A4F0()
{
  OUTLINED_FUNCTION_41_17();
  OUTLINED_FUNCTION_31_23();
}

void sub_242B1A520()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 216) + 8));
  OUTLINED_FUNCTION_34_16();
}

void sub_242B1A554()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_84_2(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 256) + 8));
  OUTLINED_FUNCTION_32_19();
}

void sub_242B1A588()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_45(v1 - 40);
  MEMORY[0x2494EDE24](&protocol conformance descriptor for Sequential<A, B>, v0);
  OUTLINED_FUNCTION_39_14();
}

void sub_242B1A5B4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);

  v0 = OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_63_9(v0, v1);
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G>(_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[44];

  OUTLINED_FUNCTION_17_17();
  v48[20] = v33;
  v48[32] = v34;
  v48[33] = v35;
  v48[30] = v36;
  v48[31] = v37;
  v48[28] = v38;
  v48[29] = v39;
  v48[34] = v40;
  v48[36] = a33;
  v48[37] = v41;
  v48[35] = a26;
  v48[0] = a25;
  v48[38] = a32;
  v48[5] = a31;
  v48[4] = a24;
  v48[11] = a23;
  v48[12] = a30;
  v48[18] = a29;
  v48[24] = a27;
  v48[25] = a28;
  v48[17] = a22;
  v48[22] = a21;
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_5_6();
  v48[27] = v42;
  v48[23] = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_18_27((uint64_t)v48 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48[39] = v46;
  v48[40] = v47;
  OUTLINED_FUNCTION_44_11();
}

void sub_242B1A6D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v3 - 312) = a1;
  *(_QWORD *)(v3 - 224) = v5;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_18_27(v7);
  v8 = MEMORY[0x2494EDE24](&protocol conformance descriptor for Sequential<A, B>, a1);
  *(_QWORD *)(v3 - 304) = v8;
  *(_QWORD *)(v3 - 120) = a1;
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v8;
  *(_QWORD *)(v3 - 96) = v1;
  type metadata accessor for Sequential();
}

void sub_242B1A730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_21_23(a1, v1 - 104);
  *(_QWORD *)(v1 - 264) = v2;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_36();
  *(_QWORD *)(v1 - 384) = v4;
  OUTLINED_FUNCTION_13_29();
}

void sub_242B1A76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 352) = a1;
  *(_QWORD *)(v3 - 120) = v1;
  *(_QWORD *)(v3 - 112) = v2;
  OUTLINED_FUNCTION_20_28(a1);
}

void sub_242B1A77C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 - 320) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_36();
  *(_QWORD *)(v4 - 416) = v7;
  v8 = MEMORY[0x2494EDE24](v2, a1);
  *(_QWORD *)(v4 - 408) = v8;
  *(_QWORD *)(v4 - 120) = a1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v8;
  *(_QWORD *)(v4 - 96) = v1;
  OUTLINED_FUNCTION_6_43();
}

void sub_242B1A7CC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 368) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_26_24();
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1A7F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 424) = a1;
  *(_QWORD *)(v3 - 120) = v1;
  *(_QWORD *)(v3 - 112) = v2;
  OUTLINED_FUNCTION_7_32(a1);
}

void sub_242B1A800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  *(_QWORD *)(v2 - 376) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  v4 = MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(_QWORD, _QWORD, _QWORD, __n128))(*(_QWORD *)(v2 - 248) + 16))(*(_QWORD *)(v2 - 280), *(_QWORD *)(v2 - 208), *(_QWORD *)(v2 - 272), v4);
  OUTLINED_FUNCTION_45_10(*(_QWORD *)(v2 - 216), *(_QWORD *)(v2 - 200), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_64_8();
  Sequential.init(_:_:)();
}

void sub_242B1A88C()
{
  OUTLINED_FUNCTION_41_17();
  OUTLINED_FUNCTION_39_14();
}

void sub_242B1A8C0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 224) + 8));
  OUTLINED_FUNCTION_34_16();
}

void sub_242B1A904()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_24(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8));
  OUTLINED_FUNCTION_33_15();
}

void sub_242B1A93C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_63_9(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 320) + 8));
  Layer.appending<A>(_:)();
}

void sub_242B1A978()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 368) + 8));
  OUTLINED_FUNCTION_37_17();
}

void sub_242B1A998()
{
  Layer.appending<A>(_:)();
}

void sub_242B1A9B0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_84_2(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 376) + 8));
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G, H>(_:_:_:_:_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_10_30();
}

void sub_242B1AAF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 248) = a2;
  *(_QWORD *)(v2 - 336) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_18_27(v4);
  OUTLINED_FUNCTION_201();
}

void sub_242B1AB28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 328) = a1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  OUTLINED_FUNCTION_13_32();
}

void sub_242B1AB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_21_23(a1, v9 - 128);
  *(_QWORD *)(v9 - 288) = v10;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_18_27((uint64_t)&a9 - v12);
  OUTLINED_FUNCTION_201();
}

void sub_242B1AB78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 376) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v2;
  type metadata accessor for Sequential();
}

void sub_242B1AB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v12 - 344) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v12 - 448) = (char *)&a9 - v16;
  v17 = MEMORY[0x2494EDE24](v9, a1, v15);
  *(_QWORD *)(v12 - 424) = v17;
  *(_QWORD *)(v12 - 120) = a1;
  *(_QWORD *)(v12 - 112) = v11;
  *(_QWORD *)(v12 - 104) = v17;
  *(_QWORD *)(v12 - 96) = v10;
  OUTLINED_FUNCTION_12_27();
}

void sub_242B1ABEC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 392) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_36();
  *(_QWORD *)(v1 - 480) = v3;
  OUTLINED_FUNCTION_37_17();
}

void sub_242B1AC1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 456) = a1;
  *(_QWORD *)(v3 - 120) = v1;
  *(_QWORD *)(v3 - 112) = v2;
  v4 = *(_QWORD *)(v3 - 144);
  *(_QWORD *)(v3 - 104) = a1;
  *(_QWORD *)(v3 - 96) = v4;
  OUTLINED_FUNCTION_6_43();
}

void sub_242B1AC34(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 432) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_28_23();
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1AC58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 488) = a1;
  v3 = *(_QWORD *)(v2 - 136);
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v3;
  OUTLINED_FUNCTION_7_32(a1);
}

void sub_242B1AC6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);

  *(_QWORD *)(v2 - 472) = a1;
  *(_QWORD *)(v2 - 440) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_26_24();
  OUTLINED_FUNCTION_55_8();
  v4(*(_QWORD *)(v2 - 304), *(_QWORD *)(v2 - 232), *(_QWORD *)(v2 - 296));
  OUTLINED_FUNCTION_45_10(*(_QWORD *)(v2 - 240), *(_QWORD *)(v2 - 224), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  Sequential.init(_:_:)();
}

void sub_242B1AD04()
{
  OUTLINED_FUNCTION_42_14();
}

void sub_242B1AD38()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_24(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 248) + 8));
  OUTLINED_FUNCTION_17_23();
  Layer.appending<A>(_:)();
}

void sub_242B1AD64()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_24(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 288) + 8));
  OUTLINED_FUNCTION_64_8();
  OUTLINED_FUNCTION_33_15();
}

void sub_242B1ADA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_40_14(v0 - 88);
  OUTLINED_FUNCTION_39_14();
}

void sub_242B1ADCC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);

  v0 = OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_84_2(v0, v1);
  Layer.appending<A>(_:)();
}

void sub_242B1ADF8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_45(v0 - 176);
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1AE14()
{
  Layer.appending<A>(_:)();
}

void sub_242B1AE2C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 440) + 8));
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G, H, I>(_:_:_:_:_:_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_10_30();
}

void sub_242B1AF90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 264) = a2;
  *(_QWORD *)(v2 - 360) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_18_27(v4);
  OUTLINED_FUNCTION_201();
}

void sub_242B1AFCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 352) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  OUTLINED_FUNCTION_13_32();
}

void sub_242B1AFE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_21_23(a1, v1 - 152);
  *(_QWORD *)(v1 - 312) = v2;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_25_21(v4);
  OUTLINED_FUNCTION_201();
}

void sub_242B1B010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 400) = a1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  type metadata accessor for Sequential();
}

void sub_242B1B02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_21_23(a1, v1 - 200);
  *(_QWORD *)(v1 - 368) = v2;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_25_21(v4);
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1B060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 448) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v2;
  OUTLINED_FUNCTION_11_31();
}

void sub_242B1B074(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 416) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_25_21(v3);
  OUTLINED_FUNCTION_145_0();
}

void sub_242B1B09C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 496) = a1;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v1;
  type metadata accessor for Sequential();
}

void sub_242B1B0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v9 - 464) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_25_21((uint64_t)&a9 - v11);
  OUTLINED_FUNCTION_13_29();
}

void sub_242B1B0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 528) = a1;
  v3 = *(_QWORD *)(v2 - 152);
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v3;
  v4 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = v4;
  OUTLINED_FUNCTION_6_43();
}

void sub_242B1B108(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 504) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_27_20();
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1B12C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 552) = a1;
  v3 = *(_QWORD *)(v2 - 136);
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v3;
  OUTLINED_FUNCTION_7_32(a1);
}

void sub_242B1B140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_21_23(a1, v1 - 280);
  *(_QWORD *)(v1 - 512) = v2;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_28_23();
  OUTLINED_FUNCTION_55_8();
  v4(*(_QWORD *)(v1 - 328), *(_QWORD *)(v1 - 248), *(_QWORD *)(v1 - 320));
  OUTLINED_FUNCTION_55_8();
  OUTLINED_FUNCTION_45_10(*(_QWORD *)(v1 - 256), *(_QWORD *)(v1 - 240), v5);
  Sequential.init(_:_:)();
}

void sub_242B1B1DC()
{
  OUTLINED_FUNCTION_41_17();
  OUTLINED_FUNCTION_42_14();
}

void sub_242B1B20C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8));
  OUTLINED_FUNCTION_41_17();
  OUTLINED_FUNCTION_31_23();
}

void sub_242B1B250()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 312) + 8));
  OUTLINED_FUNCTION_41_17();
  Layer.appending<A>(_:)();
}

void sub_242B1B29C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 368) + 8));
  OUTLINED_FUNCTION_31_23();
}

void sub_242B1B2DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_13(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 416) + 8));
  OUTLINED_FUNCTION_60_7();
}

void sub_242B1B308()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_24(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 464) + 8));
  OUTLINED_FUNCTION_57_11();
}

void sub_242B1B338()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 504) + 8));
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1B360()
{
  Layer.appending<A>(_:)();
}

void sub_242B1B37C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_45(v0 - 256);
  OUTLINED_FUNCTION_13_11();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G, H, I, J>(_:_:_:_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[66];

  OUTLINED_FUNCTION_17_17();
  v55[48] = v42;
  v55[49] = v43;
  v55[46] = v44;
  v55[47] = v45;
  v55[44] = v46;
  v55[45] = v47;
  v55[43] = v48;
  v55[42] = v49;
  v55[53] = v50;
  v55[50] = a21;
  v55[51] = a32;
  v55[52] = a22;
  v55[59] = a31;
  v55[60] = a41;
  v55[56] = a39;
  v55[57] = a30;
  v55[58] = a40;
  v55[54] = a42;
  v55[55] = a29;
  v55[13] = a38;
  v55[19] = a37;
  v55[12] = a28;
  v55[18] = a27;
  v55[25] = a36;
  v55[31] = a35;
  v55[24] = a26;
  v55[30] = a25;
  v55[39] = a34;
  v55[38] = a33;
  v55[33] = a23;
  v55[37] = *(_QWORD *)(a24 - 8);
  v55[35] = a24;
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_18_27((uint64_t)v55 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55[36] = *(_QWORD *)(v52 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_5_6();
  v55[32] = v54;
  OUTLINED_FUNCTION_10_30();
}

void sub_242B1B500(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 288) = a2;
  *(_QWORD *)(v3 - 384) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18_27((uint64_t)&a3 - v5);
  OUTLINED_FUNCTION_201();
}

void sub_242B1B540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 376) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v2;
  OUTLINED_FUNCTION_13_32();
}

void sub_242B1B554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_21_23(a1, v9 - 176);
  *(_QWORD *)(v9 - 336) = v10;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_16_24((uint64_t)&a9 - v12);
}

void sub_242B1B584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 424) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v2;
  OUTLINED_FUNCTION_13_32();
}

void sub_242B1B598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_21_23(a1, v1 - 224);
  *(_QWORD *)(v1 - 392) = v2;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_36();
  OUTLINED_FUNCTION_16_24(v4);
}

void sub_242B1B5C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 472) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  OUTLINED_FUNCTION_13_32();
}

void sub_242B1B5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v9 - 528) = a1;
  *(_QWORD *)(v9 - 440) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_16_24((uint64_t)&a9 - v11);
}

void sub_242B1B60C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 520) = a1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  OUTLINED_FUNCTION_11_31();
}

void sub_242B1B620(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 488) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_36();
  *(_QWORD *)(v1 - 576) = v3;
  OUTLINED_FUNCTION_145_0();
}

void sub_242B1B650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 552) = a1;
  v3 = *(_QWORD *)(v2 - 168);
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v3;
  v4 = *(_QWORD *)(v2 - 160);
  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = v4;
  OUTLINED_FUNCTION_12_27();
}

void sub_242B1B66C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 536) = a1;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_36();
  *(_QWORD *)(v1 - 600) = v3;
  OUTLINED_FUNCTION_37_17();
}

void sub_242B1B69C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 584) = a1;
  v3 = *(_QWORD *)(v2 - 152);
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v3;
  v4 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = v4;
  type metadata accessor for Sequential();
}

void sub_242B1B6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 - 560) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_43_15();
  v5 = MEMORY[0x2494EDE24](v1, a1);
  *(_QWORD *)(v2 - 608) = v5;
  v6 = *(_QWORD *)(v2 - 136);
  *(_QWORD *)(v2 - 120) = a1;
  *(_QWORD *)(v2 - 112) = v6;
  OUTLINED_FUNCTION_7_32(v5);
}

void sub_242B1B708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_21_23(a1, v1 - 336);
  *(_QWORD *)(v1 - 568) = v2;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_27_20();
  OUTLINED_FUNCTION_55_8();
  OUTLINED_FUNCTION_61_8(*(_QWORD *)(v1 - 352), *(_QWORD *)(v1 - 272), v4);
  OUTLINED_FUNCTION_55_8();
  OUTLINED_FUNCTION_2_33(*(_QWORD *)(v1 - 280), *(_QWORD *)(v1 - 264), v5);
  Sequential.init(_:_:)();
}

void sub_242B1B7AC()
{
  OUTLINED_FUNCTION_17_23();
  Layer.appending<A>(_:)();
}

void sub_242B1B7C4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_24(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 288) + 8));
  OUTLINED_FUNCTION_64_8();
  OUTLINED_FUNCTION_32_19();
}

void sub_242B1B808()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_45(v0 - 80);
  OUTLINED_FUNCTION_39_14();
}

void sub_242B1B848()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);

  v0 = OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_51_8(v0, v1);
  OUTLINED_FUNCTION_64_8();
  OUTLINED_FUNCTION_32_19();
}

void sub_242B1B884()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_45(v0 - 184);
  OUTLINED_FUNCTION_39_14();
}

void sub_242B1B8B0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);

  v0 = OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_38_13(v0, v1);
  Layer.appending<A>(_:)();
}

void sub_242B1B8DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_84_2(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 536) + 8));
  OUTLINED_FUNCTION_60_7();
}

void sub_242B1B908()
{
  uint64_t v0;

  OUTLINED_FUNCTION_40_14(v0 - 304);
  OUTLINED_FUNCTION_28_0();
}

void sub_242B1B924()
{
  OUTLINED_FUNCTION_57_11();
}

void sub_242B1B93C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 568) + 8));
  OUTLINED_FUNCTION_13_11();
}

void Array<A>.callAsFunction(_:)()
{
  sub_242C48650();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_37_17();
}

uint64_t sub_242B1B9CC()
{
  return sub_242C4847C();
}

uint64_t sub_242B1BA10(uint64_t a1)
{
  uint64_t v1;

  return Layer.callAsFunction(_:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_242B1BA40(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Sequential<A, B>);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_242B1BA6C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_242B1BAF8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_242B1BBD4 + 4 * byte_242C55DA0[v21 - 1]))();
}

void sub_242B1BC48(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

ValueMetadata *type metadata accessor for SequentialBuilder()
{
  return &type metadata for SequentialBuilder;
}

uint64_t sub_242B1BE4C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242B1BE98 + 4 * byte_242C55DB3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242B1BECC + 4 * byte_242C55DAE[v4]))();
}

uint64_t sub_242B1BECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B1BED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B1BEDCLL);
  return result;
}

uint64_t sub_242B1BEE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B1BEF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242B1BEF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B1BEFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_242B1BF08()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B1BF18()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B1BF28()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_5_45@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

void OUTLINED_FUNCTION_6_43()
{
  type metadata accessor for Sequential();
}

void OUTLINED_FUNCTION_7_32(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 128);
  *(_QWORD *)(v1 - 104) = a1;
  *(_QWORD *)(v1 - 96) = v2;
  type metadata accessor for Sequential();
}

void OUTLINED_FUNCTION_10_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v0;
  type metadata accessor for Sequential();
}

void OUTLINED_FUNCTION_11_31()
{
  type metadata accessor for Sequential();
}

void OUTLINED_FUNCTION_12_27()
{
  type metadata accessor for Sequential();
}

void OUTLINED_FUNCTION_13_32()
{
  type metadata accessor for Sequential();
}

void OUTLINED_FUNCTION_16_24(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  JUMPOUT(0x2494EDE24);
}

void OUTLINED_FUNCTION_18_27(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

void OUTLINED_FUNCTION_20_28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = v1;
  type metadata accessor for Sequential();
}

uint64_t OUTLINED_FUNCTION_21_23@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_21@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 256) = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_30_21()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_31_23()
{
  Layer.appending<A>(_:)();
}

void OUTLINED_FUNCTION_32_19()
{
  Layer.appending<A>(_:)();
}

void OUTLINED_FUNCTION_33_15()
{
  Layer.appending<A>(_:)();
}

void OUTLINED_FUNCTION_34_16()
{
  Layer.appending<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_35_14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 128), *(_QWORD *)(v1 - 120));
}

void OUTLINED_FUNCTION_37_17()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_38_13@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_39_14()
{
  Layer.appending<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_40_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v1, v2);
}

void OUTLINED_FUNCTION_42_14()
{
  Layer.appending<A>(_:)();
}

void OUTLINED_FUNCTION_44_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v1;
  *(_QWORD *)(v2 - 96) = v0;
  type metadata accessor for Sequential();
}

uint64_t OUTLINED_FUNCTION_45_10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_57_11()
{
  Layer.appending<A>(_:)();
}

void OUTLINED_FUNCTION_59_8()
{
  type metadata accessor for Sequential.CodingKeys();
}

void OUTLINED_FUNCTION_60_7()
{
  Layer.appending<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_61_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_62_8()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_63_9@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t ResolutionDescriptor.init(traverseCapturedDependencies:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)a2 = result;
  *(_QWORD *)(a2 + 8) = MEMORY[0x24BEE4B08];
  return result;
}

uint64_t ResolutionDescriptor.isTraversingCapturedDependencies.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ValueMetadata *type metadata accessor for ResolutionDescriptor()
{
  return &type metadata for ResolutionDescriptor;
}

uint64_t sub_242B1C290@<X0>(float *a1@<X8>)
{
  uint64_t v1;
  int v3;
  unsigned int *v4;
  float v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(v1 + 128);
  if (v3 == 1)
  {
    v4 = (unsigned int *)MEMORY[0x24BEDF7D0];
  }
  else
  {
    if (v3 != 2)
    {
      sub_242B0F28C();
      sub_242B76F10(1);
      sub_242A59170();
    }
    v5 = *(float *)(v1 + 132);
    if (*(_BYTE *)(v1 + 136))
      v5 = 0.0;
    *a1 = v5;
    v4 = (unsigned int *)MEMORY[0x24BEDF7C8];
  }
  v6 = *v4;
  v7 = sub_242C477C8();
  return (*(uint64_t (**)(float *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a1, v6, v7);
}

void sub_242B1C37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[13];
  char v77;
  uint64_t v78;

  OUTLINED_FUNCTION_18_1();
  a19 = v24;
  a20 = v25;
  v72 = v21;
  v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_12_28();
  MEMORY[0x24BDAC7A8](v29);
  v30 = OUTLINED_FUNCTION_18_28();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_13_1();
  v74 = v32;
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_43_16(v34, v35, v36, v37, v38, v39, v40, v41, v67[0]);
  v42 = OUTLINED_FUNCTION_36_17();
  sub_242A9E618(v42, v27);
  if (v43)
  {
    v45 = v43;
    v46 = v44;
    v70 = v22;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v46 + 16))(v76, ObjectType, v46);
    OUTLINED_FUNCTION_41_18();
    v73 = v31;
    v71 = ObjectType;
    v69 = v23;
    if (v45 < 2)
    {
      v68 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_39_15();
      if (!*(_QWORD *)(v78 + 16))
      {
        OUTLINED_FUNCTION_0_61();
        OUTLINED_FUNCTION_3_46();
      }
      OUTLINED_FUNCTION_38_14(*(_QWORD *)(v78 + 32));
    }
    OUTLINED_FUNCTION_64_3();
    sub_242B0560C((uint64_t)v76);
    OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_14_22();
    v77 = v20;
    v53 = v72;
    sub_242B1D8D0(&a10, (uint64_t)&v77, 0);
    v55 = v54;
    OUTLINED_FUNCTION_37_18(v54);
    OUTLINED_FUNCTION_1_7((uint64_t)v76, v75);
    OUTLINED_FUNCTION_39_15();
    v67[2] = v46;
    OUTLINED_FUNCTION_1_7((uint64_t)v76, v74);
    v56 = v70;
    OUTLINED_FUNCTION_5_7(v70, v74);
    OUTLINED_FUNCTION_0_10(v70);
    v57 = v69;
    OUTLINED_FUNCTION_5_7(v69, v75);
    v58 = OUTLINED_FUNCTION_0_10(v69);
    v67[1] = (uint64_t)v67;
    MEMORY[0x24BDAC7A8](v58);
    OUTLINED_FUNCTION_30_22();
    v59 = v68;
    *(_QWORD *)(v60 - 16) = v20;
    *(_QWORD *)(v60 - 8) = v59;
    MEMORY[0x24BDAC7A8](v61);
    OUTLINED_FUNCTION_57_5();
    *(_QWORD *)(v62 - 48) = v55;
    *(_QWORD *)(v62 - 40) = &off_251387678;
    *(_QWORD *)(v62 - 32) = v57;
    *(_QWORD *)(v62 - 24) = sub_242B1D6B0;
    *(_QWORD *)(v62 - 16) = v63;
    swift_retain();
    v64 = v53;
    v65 = v72;
    sub_242BF6310((uint64_t)sub_242AA785C, v64, MEMORY[0x24BEE4AE0] + 8, (uint64_t)&a15);
    if (v65)
    {
      OUTLINED_FUNCTION_21_12();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_13_33();
      sub_242A6AB60(v56);
      OUTLINED_FUNCTION_15_1(v74);
      OUTLINED_FUNCTION_15_1(v75);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_13_33();
      sub_242A6AB60(v56);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v66 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v66 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v66 + 32) = v55;
      *(_QWORD *)(v66 + 40) = &off_251387678;
      OUTLINED_FUNCTION_21_12();
      OUTLINED_FUNCTION_6_6(v74);
      OUTLINED_FUNCTION_6_6(v75);
    }
  }
  else
  {
    v48 = sub_242B0F28C();
    v50 = v49;
    sub_242A6A5B0();
    v51 = OUTLINED_FUNCTION_24_1();
    *v52 = v48;
    v52[1] = v50;
    OUTLINED_FUNCTION_4_41(v51, (uint64_t)v52);
  }
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B1C6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  float *v3;
  uint64_t v5;

  v0 = sub_242C477C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (float *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_242B1C290(v3);
  sub_242C48A28();
  sub_242C489B0();
  sub_242C47768();
  return (*(uint64_t (**)(float *, uint64_t))(v1 + 8))(v3, v0);
}

#error "242B1C7C4: call analysis failed (funcsize=5)"

void sub_242B1C7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51[3];

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_43_16(v7, v8, v9, v10, v11, v12, v13, v14, v43);
  v15 = sub_242C47930();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OUTLINED_FUNCTION_36_17();
  sub_242A9E618(v19, v2);
  if (v20)
  {
    v22 = v20;
    v23 = v21;
    v45 = v0;
    v48 = v16;
    ObjectType = swift_getObjectType();
    v25 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v23 + 16);
    v25(v50, ObjectType, v23);
    OUTLINED_FUNCTION_41_18();
    v46 = v23;
    v47 = ObjectType;
    if (v22 < 2)
    {
      v44 = 1;
    }
    else
    {
      v25(v51, ObjectType, v23);
      if (!*(_QWORD *)(v51[0] + 16))
      {
        OUTLINED_FUNCTION_0_61();
        OUTLINED_FUNCTION_3_46();
      }
      OUTLINED_FUNCTION_38_14(*(_QWORD *)(v51[0] + 32));
    }
    v28 = v49;
    OUTLINED_FUNCTION_64_3();
    OUTLINED_FUNCTION_19_23();
    OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_14_22();
    v29 = (uint64_t *)OUTLINED_FUNCTION_15_25();
    v30 = v45;
    sub_242B1D8D0(v29, v31, v32);
    v34 = v33;
    v35 = *(_QWORD *)(v33 + 16);
    v49 = v30;
    v50[0] = v35;
    sub_242C480E0();
    OUTLINED_FUNCTION_1_7((uint64_t)v50, (uint64_t)v18);
    OUTLINED_FUNCTION_5_7(v28, (uint64_t)v18);
    OUTLINED_FUNCTION_0_10(v28);
    OUTLINED_FUNCTION_5_7((uint64_t)v5, (uint64_t)v18);
    v36 = OUTLINED_FUNCTION_0_10((uint64_t)v5);
    MEMORY[0x24BDAC7A8](v36);
    OUTLINED_FUNCTION_30_22();
    *(_QWORD *)(v37 - 16) = v44;
    MEMORY[0x24BDAC7A8](v38);
    OUTLINED_FUNCTION_57_5();
    *(_QWORD *)(v39 - 48) = v34;
    *(_QWORD *)(v39 - 40) = &off_251387678;
    *(_QWORD *)(v39 - 32) = v5;
    *(_QWORD *)(v39 - 24) = sub_242B1D6C8;
    OUTLINED_FUNCTION_42_15(v39);
    v40 = v30;
    v41 = v49;
    sub_242BF6310((uint64_t)sub_242AA785C, v40, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
    if (v41)
    {
      OUTLINED_FUNCTION_23_13();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_15_11();
      sub_242A6AB60(v28);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_15_11();
      sub_242A6AB60(v28);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v42 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v42 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v42 + 32) = v34;
      *(_QWORD *)(v42 + 40) = &off_251387678;
      OUTLINED_FUNCTION_23_13();
    }
    OUTLINED_FUNCTION_25_22();
  }
  else
  {
    sub_242A6A5B0();
    v26 = OUTLINED_FUNCTION_24_1();
    *v27 = xmmword_242C56060;
    OUTLINED_FUNCTION_4_41(v26, (uint64_t)v27);
  }
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B1CABC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_242C477C8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, *MEMORY[0x24BEDF7C0], v0, v2);
  sub_242C48A28();
  sub_242C489B0();
  sub_242C47768();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_242B1CBA8()
{
  sub_242B1C7D0();
}

void sub_242B1CBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[14];
  uint64_t v66[3];

  OUTLINED_FUNCTION_18_1();
  v62 = v1;
  v2 = v0;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)&v52 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v52 - v11;
  v13 = sub_242C47930();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_242B89308();
  sub_242A9E618(v17, v4);
  v64 = v18;
  if (!v19)
    goto LABEL_9;
  v20 = sub_242B89308();
  sub_242A9E618(v20, v4);
  if (!v21)
  {
    OUTLINED_FUNCTION_17_2();
LABEL_9:
    sub_242A6A5B0();
    v33 = OUTLINED_FUNCTION_24_1();
    *v34 = xmmword_242C56070;
    OUTLINED_FUNCTION_4_41(v33, (uint64_t)v34);
    goto LABEL_14;
  }
  v23 = v21;
  v61 = v22;
  ObjectType = swift_getObjectType();
  v25 = *(uint64_t **)(v64 + 8);
  v58 = ObjectType;
  v57 = v25;
  ((void (*)(_QWORD *__return_ptr))v25)(v65);
  if (LOBYTE(v65[0]) <= 0xCu && ((1 << SLOBYTE(v65[0])) & 0x1777) != 0)
  {
    v60 = v16;
    v26 = (uint64_t)v7;
    v56 = v12;
    v59 = v14;
    v27 = v23;
    v28 = swift_getObjectType();
    v29 = v61;
    v30 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v61 + 16);
    v30(v65, v28, v61);
    v31 = *(_QWORD *)(v65[0] + 16);
    swift_bridgeObjectRelease();
    v55 = v27;
    if (v31 < 2)
    {
      v32 = v13;
      v54 = 1;
    }
    else
    {
      v30(v66, v28, v29);
      if (!*(_QWORD *)(v66[0] + 16))
      {
        OUTLINED_FUNCTION_0_61();
        OUTLINED_FUNCTION_3_46();
      }
      v32 = v13;
      OUTLINED_FUNCTION_38_14(*(_QWORD *)(v66[0] + 32));
    }
    OUTLINED_FUNCTION_64_3();
    OUTLINED_FUNCTION_19_23();
    OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_14_22();
    v35 = (uint64_t *)OUTLINED_FUNCTION_15_25();
    v36 = v62;
    sub_242B1D8D0(v35, v37, v38);
    v53 = v2;
    v40 = v39;
    v62 = v36;
    OUTLINED_FUNCTION_37_18(v39);
    v41 = (uint64_t)v60;
    OUTLINED_FUNCTION_1_7((uint64_t)v65, (uint64_t)v60);
    v42 = (uint64_t)v56;
    OUTLINED_FUNCTION_16_25((uint64_t)v56);
    OUTLINED_FUNCTION_26_25(v42);
    v43 = v63;
    OUTLINED_FUNCTION_16_25(v63);
    OUTLINED_FUNCTION_26_25(v43);
    OUTLINED_FUNCTION_16_25(v26);
    v52 = v32;
    __swift_storeEnumTagSinglePayload(v26, 0, 1, v32);
    swift_retain();
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v57)(v65, v58, v64);
    sub_242B526F4();
    v57 = &v52;
    MEMORY[0x24BDAC7A8](v44);
    *((_DWORD *)&v52 - 8) = v45;
    *(&v52 - 3) = v41;
    v46 = v54;
    *(&v52 - 2) = v53;
    *(&v52 - 1) = v46;
    MEMORY[0x24BDAC7A8](v45);
    v47 = v61;
    *(&v52 - 8) = v55;
    *(&v52 - 7) = v47;
    *(&v52 - 6) = v43;
    *(&v52 - 5) = v40;
    *(&v52 - 4) = (uint64_t)&off_251387678;
    *(&v52 - 3) = v26;
    *(&v52 - 2) = (uint64_t)sub_242B1D6E0;
    *(&v52 - 1) = v48;
    v49 = v62;
    sub_242BF6310((uint64_t)sub_242A6AD88, (uint64_t)(&v52 - 10), MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
    if (v49)
    {
      OUTLINED_FUNCTION_23_13();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_17_24();
      sub_242A6AB60(v63);
      sub_242A6AB60(v42);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_17_24();
      sub_242A6AB60(v63);
      sub_242A6AB60(v42);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v50 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v50 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v50 + 32) = v40;
      *(_QWORD *)(v50 + 40) = &off_251387678;
      OUTLINED_FUNCTION_23_13();
      OUTLINED_FUNCTION_17_2();
    }
    OUTLINED_FUNCTION_7_33();
  }
  else
  {
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *(_OWORD *)v51 = xmmword_242C56070;
    *(_BYTE *)(v51 + 16) = 3;
    swift_willThrow();
    OUTLINED_FUNCTION_17_2();
    swift_unknownObjectRelease();
  }
LABEL_14:
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B1D068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a7;
  v8 = sub_242C477C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_242C47930();
  v13 = MEMORY[0x24BDAC7A8](v12);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v13);
  sub_242C489C8();
  sub_242C47750();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEDF7C0], v8);
  sub_242C48A28();
  sub_242C489B0();
  if (sub_242C47744())
  {
    sub_242C4760C();
    return swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v17 = xmmword_242C56070;
    *(_BYTE *)(v17 + 16) = 4;
    return swift_willThrow();
  }
}

void sub_242B1D230()
{
  sub_242B1CBBC();
}

void sub_242B1D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t ObjectType;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _BYTE v60[16];
  uint64_t v61;

  OUTLINED_FUNCTION_18_1();
  a19 = v24;
  a20 = v25;
  v26 = v20;
  v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_12_28();
  MEMORY[0x24BDAC7A8](v30);
  v31 = OUTLINED_FUNCTION_18_28();
  v58 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_13_1();
  v56 = v32;
  MEMORY[0x24BDAC7A8](v33);
  v57 = (uint64_t)v53 - v34;
  v35 = OUTLINED_FUNCTION_36_17();
  sub_242A9E618(v35, v28);
  if (v37)
  {
    v38 = v36;
    OUTLINED_FUNCTION_64_3();
    sub_242B0560C((uint64_t)&v61);
    a10 = v61;
    sub_242B0560C((uint64_t)v60);
    v39 = v60[8];
    swift_bridgeObjectRelease();
    v59 = v39;
    sub_242B1D8D0(&a10, (uint64_t)&v59, 0);
    v41 = v40;
    v55 = v21;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 16))(&v61, ObjectType, v38);
    v42 = v57;
    OUTLINED_FUNCTION_35_15((uint64_t)&v61, v57);
    v61 = *(_QWORD *)(v41 + 16);
    sub_242C480E0();
    v53[1] = v38;
    v43 = v56;
    OUTLINED_FUNCTION_35_15((uint64_t)&v61, v56);
    OUTLINED_FUNCTION_5_7(v22, v42);
    OUTLINED_FUNCTION_0_10(v22);
    OUTLINED_FUNCTION_5_7(v23, v43);
    v44 = OUTLINED_FUNCTION_0_10(v23);
    MEMORY[0x24BDAC7A8](v44);
    OUTLINED_FUNCTION_30_22();
    *(_QWORD *)(v45 - 16) = v26;
    *(_QWORD *)(v45 - 8) = 1;
    MEMORY[0x24BDAC7A8](v46);
    OUTLINED_FUNCTION_57_5();
    *(_QWORD *)(v47 - 48) = v41;
    *(_QWORD *)(v47 - 40) = &off_251387678;
    *(_QWORD *)(v47 - 32) = v23;
    *(_QWORD *)(v47 - 24) = sub_242B1D700;
    OUTLINED_FUNCTION_42_15(v47);
    v48 = v21;
    v49 = v55;
    sub_242BF6310((uint64_t)sub_242AA785C, v48, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
    if (v49)
    {
      OUTLINED_FUNCTION_21_12();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_34_17();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_1(v56);
      OUTLINED_FUNCTION_15_1(v57);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_34_17();
      OUTLINED_FUNCTION_15_11();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v52 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v52 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v52 + 32) = v41;
      *(_QWORD *)(v52 + 40) = &off_251387678;
      OUTLINED_FUNCTION_21_12();
      OUTLINED_FUNCTION_6_6(v56);
      OUTLINED_FUNCTION_6_6(v57);
    }
  }
  else
  {
    sub_242A6A5B0();
    v50 = OUTLINED_FUNCTION_24_1();
    *v51 = xmmword_242C56080;
    OUTLINED_FUNCTION_4_41(v50, (uint64_t)v51);
  }
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B1D514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_242C477C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C47750();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEDF7D8], v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(a3 + 128);
  sub_242C48A28();
  sub_242C489B0();
  if (sub_242C47738())
  {
    sub_242C47618();
    return swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v10 = xmmword_242C56080;
    *(_BYTE *)(v10 + 16) = 4;
    return swift_willThrow();
  }
}

#error "242B1D6A4: call analysis failed (funcsize=5)"

uint64_t sub_242B1D6B0()
{
  return sub_242B1C6E0();
}

uint64_t sub_242B1D6C8()
{
  return sub_242B1CABC();
}

uint64_t sub_242B1D6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_242B1D068(a1, a2, a3, *(unsigned int *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_242B1D700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B1D514(a1, a2, *(_QWORD *)(v2 + 16));
}

void OUTLINED_FUNCTION_0_61()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 216) = 0;
  *(_QWORD *)(v0 - 208) = 0;
  *(_QWORD *)(v0 - 200) = 0;
  *(_BYTE *)(v0 - 192) = -1;
  *(_QWORD *)(v0 - 176) = 0;
  *(_QWORD *)(v0 - 168) = 0;
  *(_QWORD *)(v0 - 184) = 0;
  *(_BYTE *)(v0 - 160) = -1;
  *(_BYTE *)(v0 - 108) = 4;
}

void OUTLINED_FUNCTION_3_46()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_4_41(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_7_33()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 264) + 8))(*(_QWORD *)(v0 - 256), *(_QWORD *)(v0 - 320));
}

uint64_t OUTLINED_FUNCTION_9_37()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 72) = *(_QWORD *)(v0 - 216);
  return sub_242B0560C(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_13_33()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_14_22()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_25()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 105) = v0;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_16_25(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_17_24()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_18_28()
{
  return sub_242C47930();
}

uint64_t OUTLINED_FUNCTION_19_23()
{
  uint64_t v0;

  return sub_242B0560C(v0 - 216);
}

uint64_t OUTLINED_FUNCTION_25_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_25(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_34_17()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

void OUTLINED_FUNCTION_35_15(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242B51AEC(a1, 0, 3, a2);
}

uint64_t OUTLINED_FUNCTION_36_17()
{
  return sub_242B89308();
}

uint64_t OUTLINED_FUNCTION_37_18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = *(_QWORD *)(a1 + 16);
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_38_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_39_15()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_41_18()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_42_15@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 16) = v1;
  return swift_retain();
}

void OUTLINED_FUNCTION_43_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 224) = (char *)&a9 - v9;
}

void sub_242B1D8D0(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v8 = *a1;
  OUTLINED_FUNCTION_36_18();
  if (!v11 & v10)
    v12 = 1;
  else
    v12 = qword_242C561C0[v9];
  v13 = *(_QWORD *)(v8 + 16);
  if (v13)
  {
    v14 = (uint64_t *)(v8 + 32);
    v15 = 1;
    while (1)
    {
      v16 = *v14++;
      v17 = v15 * v16;
      if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63)
        break;
      v15 = v17;
      if (!--v13)
        goto LABEL_10;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  v17 = 1;
LABEL_10:
  if ((unsigned __int128)(v17 * (__int128)v12) >> 64 != (v17 * v12) >> 63)
    goto LABEL_16;
  sub_242C48AC4();
  OUTLINED_FUNCTION_43_17();
  if (a3 && (swift_retain(), a3(v4, v5), OUTLINED_FUNCTION_54_8(), OUTLINED_FUNCTION_54_8(), v3))
  {
    OUTLINED_FUNCTION_81();
  }
  else
  {
    v19 = v8;
    v18 = v6;
    sub_242B1DCA4(&v19, &v18, v4, v5, v12);
  }
}

void sub_242B1DA00()
{
  __asm { BR              X10 }
}

void sub_242B1DA2C()
{
  OUTLINED_FUNCTION_1();
}

void sub_242B1DA80()
{
  OUTLINED_FUNCTION_45_11();
  OUTLINED_FUNCTION_15_26();
  __break(1u);
}

void sub_242B1DAB0()
{
  __asm { BR              X10 }
}

void sub_242B1DADC()
{
  OUTLINED_FUNCTION_1();
}

void sub_242B1DB30()
{
  OUTLINED_FUNCTION_45_11();
  OUTLINED_FUNCTION_15_26();
  __break(1u);
}

void sub_242B1DB5C()
{
  __asm { BR              X10 }
}

void sub_242B1DB94()
{
  OUTLINED_FUNCTION_1();
}

void sub_242B1DBE8()
{
  OUTLINED_FUNCTION_45_11();
  OUTLINED_FUNCTION_15_26();
  __break(1u);
}

void sub_242B1DC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;

  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v6 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_initWithShape_bytes_dataType_, v6, a2, a3);

  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B1DCA4(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v10 = OUTLINED_FUNCTION_61_9();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v18 = *a1;
  HIBYTE(v17) = v13;
  (*(void (**)(char *, _QWORD))(v14 + 104))(v12, *MEMORY[0x24BDCDB90]);
  v15 = swift_allocObject();
  sub_242B1DE4C(&v18, (char *)&v17 + 7, a3, a4, a5, (uint64_t)v12);
  return v15;
}

uint64_t sub_242B1DD80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = sub_242C480E0();
  sub_242A5A5E8(v2);
  v4 = v3;
  result = swift_bridgeObjectRelease();
  if (v1)
  {
    sub_242A8AA58(0, &qword_257222990);
    sub_242B1DA00();
    sub_242B1DC14(v4, v1, v6);
    v8 = v7;
    OUTLINED_FUNCTION_17_1();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242B1DE20(uint64_t (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_242B1DE4C(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *a2;
  *(_QWORD *)(v6 + 16) = *a1;
  *(_BYTE *)(v6 + 24) = v8;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 48) = a4;
  v9 = v6 + OBJC_IVAR____TtC14NeuralNetworks19NativeTensorStorage_deallocator;
  v10 = OUTLINED_FUNCTION_61_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a6, v10);
  return v6;
}

void sub_242B1DEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  size_t v12;
  uint64_t v13;
  _QWORD v14[4];

  v1 = v0;
  v2 = OUTLINED_FUNCTION_61_9();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC14NeuralNetworks19NativeTensorStorage_deallocator;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1 + OBJC_IVAR____TtC14NeuralNetworks19NativeTensorStorage_deallocator, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v8 != *MEMORY[0x24BDCDBA8])
  {
    if (v8 == *MEMORY[0x24BDCDB88])
    {
      v10 = *(_QWORD *)(v1 + 40);
      if (v10)
      {
        MEMORY[0x2494EE1C0](*MEMORY[0x24BDAEC58], v10, *(_QWORD *)(v1 + 48) - v10);
        goto LABEL_17;
      }
      goto LABEL_19;
    }
    if (v8 == *MEMORY[0x24BDCDBA0])
    {
      v11 = *(void **)(v1 + 40);
      if (v11)
      {
        v12 = *(_QWORD *)(v1 + 48) - (_QWORD)v11;
LABEL_16:
        munmap(v11, v12);
        goto LABEL_17;
      }
    }
    else
    {
      if (v8 == *MEMORY[0x24BDCDB90])
      {
        v13 = *(_QWORD *)(v1 + 40);
        if (v13)
          MEMORY[0x2494EDF68](v13, -1, -1);
        goto LABEL_17;
      }
      if (v8 == *MEMORY[0x24BDCDB98])
      {
LABEL_17:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
        OUTLINED_FUNCTION_7_0();
        return;
      }
      v14[2] = 0;
      v14[3] = 0xE000000000000000;
      sub_242C48C38();
      sub_242C48314();
      v14[1] = v1;
      sub_242C48E78();
      sub_242C48314();
      v11 = (void *)sub_242C48F5C();
      __break(1u);
    }
    v12 = 0;
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
  v9 = *(_QWORD *)(v1 + 40);
  if (v9)
  {
    (*(void (**)(uint64_t, uint64_t))v6)(v9, *(_QWORD *)(v1 + 48) - v9);
    swift_release();
    goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_242B1E104()
{
  sub_242B1DEB4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NativeTensorStorage()
{
  uint64_t result;

  result = qword_257227AA0;
  if (!qword_257227AA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_242B1E160()
{
  uint64_t result;
  unint64_t v1;

  result = sub_242C47BA0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_242B1E1FC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[14];
  char v14;

  v5 = *a2;
  if ((v5 - 1) > 0xA)
    v6 = 1;
  else
    v6 = qword_242C561C0[(char)(v5 - 1)];
  if (v6 > a3)
  {
LABEL_15:
    v13[1] = 0;
    v13[2] = 0;
    v13[0] = a3;
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_63_10();
  if (v8)
  {
    OUTLINED_FUNCTION_62_9();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v9)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v9)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v7);
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = OUTLINED_FUNCTION_31_24();
  v13[0] = v3;
  v14 = v5;
  return OUTLINED_FUNCTION_59_9(v13, &v14, v10, v11);
}

void sub_242B1E2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_23_25();
  if (!v10 & v9)
    v11 = 1;
  else
    v11 = qword_242C561C0[v8];
  if (v11 > v5)
  {
LABEL_18:
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_63_10();
  if (v13)
  {
    OUTLINED_FUNCTION_62_9();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v10)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v10)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v12);
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_33_16();
  OUTLINED_FUNCTION_65_7();
  sub_242B2E1C4(v14, v15, a5);
  if (v6)
    OUTLINED_FUNCTION_35();
  else
    OUTLINED_FUNCTION_13_34(v16, v17, v18, v19, v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_17_25();
}

void sub_242B1E3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_12_29(v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_14_23();
  if (!v11 & v10)
    v12 = 1;
  else
    v12 = qword_242C561C0[v9];
  if (v12 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_5_46(v12);
    OUTLINED_FUNCTION_0_62();
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    OUTLINED_FUNCTION_58_7();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v11)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v11)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v12);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_34_18();
  OUTLINED_FUNCTION_26_26(v13, *MEMORY[0x24BEE38B8]);
  OUTLINED_FUNCTION_21_24();
  sub_242AB0F20();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_10_31();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_0_9();
}

#error "242B1E534: call analysis failed (funcsize=46)"

void sub_242B1E574()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_24_24();
  if (!v4 & v3)
    v5 = 1;
  else
    v5 = qword_242C561C0[v2];
  if (v5 > v0)
  {
LABEL_18:
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_37_19();
  if (v7)
  {
    OUTLINED_FUNCTION_32_20();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v4)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v4)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v6);
  if (!v4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = (void *)OUTLINED_FUNCTION_33_16();
  sub_242B68A70(v8, v9);
  if (v1)
    OUTLINED_FUNCTION_81();
  else
    OUTLINED_FUNCTION_20_29(v10, v11, v12, v13, v14, v15, v16, v17, v18);
  OUTLINED_FUNCTION_38_15();
}

void sub_242B1E65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_12_29(v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_14_23();
  if (!v11 & v10)
    v12 = 1;
  else
    v12 = qword_242C561C0[v9];
  if (v12 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_5_46(v12);
    OUTLINED_FUNCTION_0_62();
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    OUTLINED_FUNCTION_58_7();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v11)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v11)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v12);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_34_18();
  OUTLINED_FUNCTION_26_26(v13, *MEMORY[0x24BEE38B8]);
  OUTLINED_FUNCTION_21_24();
  sub_242AB38A0();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_10_31();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B1E744()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_50_11();
  if (!v4 & v3)
    v5 = 1;
  else
    v5 = qword_242C561C0[v2];
  if (v5 > v1)
  {
LABEL_14:
    OUTLINED_FUNCTION_9_38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_62();
  }
  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v4)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v4)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_10:
  OUTLINED_FUNCTION_3_47(v5);
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = v6;
  sub_242C48AC4();
  OUTLINED_FUNCTION_43_17();
  sub_242B43DB4();
  OUTLINED_FUNCTION_46_13();
  sub_242B1DCA4(v8, v9, v10, v11, v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_28();
}

void sub_242B1E858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  OUTLINED_FUNCTION_42_16();
  if (!v6 & v5)
    v7 = 1;
  else
    v7 = qword_242C561C0[v4];
  if (v7 > v3)
  {
LABEL_15:
    OUTLINED_FUNCTION_11_32(v3, v7);
    swift_release();
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_37_19();
  if (v9)
  {
    OUTLINED_FUNCTION_32_20();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v6)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v6)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v8);
  if (!v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = v3;
  v10 = sub_242C48AC4();
  v12 = v11;
  ObjectType = swift_getObjectType();
  MEMORY[0x24BDAC7A8](ObjectType);
  OUTLINED_FUNCTION_53_8();
  *(_QWORD *)(v14 - 32) = v10;
  *(_QWORD *)(v14 - 24) = v12;
  *(_QWORD *)(v14 - 16) = v2;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t)))(v0 + 56))(sub_242B1F730);
  v15 = (uint64_t *)OUTLINED_FUNCTION_57_12();
  sub_242B1DCA4(v15, v16, v10, v12, v17);
  OUTLINED_FUNCTION_145();
  swift_release();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B1E9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_1();
  v3 = v2;
  OUTLINED_FUNCTION_42_16();
  if (!v8 & v7)
    v9 = 1;
  else
    v9 = qword_242C561C0[v6];
  if (v9 > v5)
  {
LABEL_17:
    OUTLINED_FUNCTION_11_32(v5, v9);
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_0_62();
  }
  if (*(_QWORD *)(*(_QWORD *)v4 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v8)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v8)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_10:
  OUTLINED_FUNCTION_3_47(v9);
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17 = v5;
  v10 = sub_242C48AC4();
  v12 = v11;
  ObjectType = swift_getObjectType();
  MEMORY[0x24BDAC7A8](ObjectType);
  OUTLINED_FUNCTION_53_8();
  *(_QWORD *)(v14 - 32) = v3;
  *(_QWORD *)(v14 - 24) = v10;
  *(_QWORD *)(v14 - 16) = v12;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t)))(v1 + 56))(sub_242B1F764);
  if (v0)
  {
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_145();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = (uint64_t *)OUTLINED_FUNCTION_57_12();
    sub_242B1DCA4(v15, v16, v10, v12, v17);
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_157_0();
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242B1EB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t ObjectType;
  __n128 v39;
  uint64_t v40;

  OUTLINED_FUNCTION_18_1();
  a22 = v26;
  a23 = v28;
  v30 = v29;
  v32 = *v31;
  if ((v32 - 1) > 0xA)
    v33 = 1;
  else
    v33 = qword_242C561C0[(char)(v32 - 1)];
  if (v33 > v27)
  {
LABEL_15:
    OUTLINED_FUNCTION_11_32(v27, v33);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_37_19();
  if (v35)
  {
    OUTLINED_FUNCTION_32_20();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v36)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v36)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v34);
  if (!v36)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v37 = v27;
  sub_242C48AC4();
  OUTLINED_FUNCTION_43_17();
  ObjectType = swift_getObjectType();
  v39 = MEMORY[0x24BDAC7A8](ObjectType);
  (*(void (**)(uint64_t (*)(), __n128))(v30 + 56))(sub_242B1F74C, v39);
  v40 = v23;
  a13 = v32;
  sub_242B1DCA4(&v40, &a13, v24, v25, v37);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_56_7();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B1EC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  int v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_66_8();
  if (!v32 & v31)
    v33 = 1;
  else
    v33 = qword_242C561C0[v30];
  if (v33 > v28)
  {
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_29_16();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_37_19();
  if (v35)
  {
    OUTLINED_FUNCTION_32_20();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v32)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v32)
        goto LABEL_11;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    JUMPOUT(0x242B1EE30);
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v34);
  if (!v32)
    goto LABEL_14;
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_65_7();
  LODWORD(a26) = v29;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_242B1ED14 + *((int *)qword_242B1EE78 + v36)))(v37, v38, v39, v40, v41, v42, v43, v44, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

void sub_242B1EE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_23_25();
  if (!v10 & v9)
    v11 = 1;
  else
    v11 = qword_242C561C0[v8];
  if (v11 > v5)
  {
LABEL_18:
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_63_10();
  if (v13)
  {
    OUTLINED_FUNCTION_62_9();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v10)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v10)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v12);
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_33_16();
  OUTLINED_FUNCTION_65_7();
  v16 = sub_242B689C4(v14, v15, a5 & 1);
  if (v6)
    OUTLINED_FUNCTION_35();
  else
    OUTLINED_FUNCTION_13_34((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_17_25();
}

void sub_242B1EF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_30_23();
  a38 = v41;
  a39 = v42;
  v44 = v43;
  OUTLINED_FUNCTION_50_11();
  if (!v48 & v47)
    v49 = 1;
  else
    v49 = qword_242C561C0[v46];
  if (v49 > v44)
  {
LABEL_18:
    a12 = 0;
    a13 = 0;
    a11 = v44;
    OUTLINED_FUNCTION_9_38();
    swift_release();
    OUTLINED_FUNCTION_0_62();
  }
  v50 = *v45;
  if (*(_QWORD *)(*v45 + 16))
  {
    OUTLINED_FUNCTION_58_7();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v48)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v48)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v49);
  if (!v48)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v54 = v52;
  v55 = v53;
  v56 = v51;
  v57 = sub_242C48AC4();
  v59 = v58;
  sub_242B3C1DC(v57, v58, v56, v54, v55);
  if (v39)
  {
    OUTLINED_FUNCTION_17_1();
    swift_bridgeObjectRelease();
  }
  else
  {
    a11 = v50;
    a29 = v40;
    sub_242B1DCA4(&a11, &a29, v57, v59, v44);
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_8_28();
}

void sub_242B1F098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_12_29(v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_14_23();
  if (!v11 & v10)
    v12 = 1;
  else
    v12 = qword_242C561C0[v9];
  if (v12 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_5_46(v12);
    OUTLINED_FUNCTION_0_62();
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    OUTLINED_FUNCTION_58_7();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v11)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v11)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v12);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_34_18();
  OUTLINED_FUNCTION_26_26(v13, *MEMORY[0x24BEE38B8]);
  OUTLINED_FUNCTION_21_24();
  sub_242AB3964();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_10_31();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B1F180(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[13];
  char v16;

  OUTLINED_FUNCTION_24_24();
  if (!v8 & v7)
    v9 = 1;
  else
    v9 = qword_242C561C0[v6];
  if (v9 > v1)
  {
LABEL_18:
    v15[1] = 0;
    v15[2] = 0;
    v15[0] = v1;
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_37_19();
  if (v11)
  {
    OUTLINED_FUNCTION_32_20();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v8)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v8)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v10);
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = (float *)OUTLINED_FUNCTION_33_16();
  v14 = v13;
  sub_242B67EF0(v12, v13, a1);
  if (v2)
  {
    OUTLINED_FUNCTION_81();
  }
  else
  {
    v15[0] = v3;
    v16 = v4;
    sub_242B1DCA4(v15, &v16, (uint64_t)v12, v14, v1);
  }
  OUTLINED_FUNCTION_38_15();
}

void sub_242B1F294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_23_25();
  if (!v10 & v9)
    v11 = 1;
  else
    v11 = qword_242C561C0[v8];
  if (v11 > v5)
  {
LABEL_18:
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_63_10();
  if (v13)
  {
    OUTLINED_FUNCTION_62_9();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v10)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v10)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v12);
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_33_16();
  OUTLINED_FUNCTION_65_7();
  v16 = sub_242B6805C(v14, v15, a5);
  if (v6)
    OUTLINED_FUNCTION_35();
  else
    OUTLINED_FUNCTION_13_34((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_17_25();
}

void sub_242B1F370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t *v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;

  OUTLINED_FUNCTION_28_24();
  a36 = v39;
  a37 = v40;
  v42 = v41;
  OUTLINED_FUNCTION_66_8();
  if (!v46 & v45)
    v47 = 1;
  else
    v47 = qword_242C561C0[v44];
  if (v47 > v37)
  {
LABEL_16:
    a10 = 0;
    a11 = 0;
    a9 = v37;
    OUTLINED_FUNCTION_2_54();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_62();
  }
  v48 = *v43;
  if (*(_QWORD *)(*v43 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v46)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v46)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_10:
  OUTLINED_FUNCTION_3_47(v47);
  if (!v46)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v49 = OUTLINED_FUNCTION_31_24();
  if (!v49)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v51 = (void *)v49;
  v52 = v50;
  v53 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v42;
  memmove(v51, v53, v52 - (_QWORD)v51);
  a9 = v48;
  a27 = v38;
  OUTLINED_FUNCTION_59_9(&a9, &a27, (uint64_t)v51, v52);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_7_34();
}

void sub_242B1F4A4()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_30_23();
  OUTLINED_FUNCTION_50_11();
  if (!v3 & v2)
    v4 = 1;
  else
    v4 = qword_242C561C0[v1];
  if (v4 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_0_62();
  }
  OUTLINED_FUNCTION_37_19();
  if (v6)
  {
    OUTLINED_FUNCTION_32_20();
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v3)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v3)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_3_47(v5);
  if (!v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v7;
  sub_242C48AC4();
  OUTLINED_FUNCTION_43_17();
  sub_242AD05E8();
  OUTLINED_FUNCTION_46_13();
  sub_242B1DCA4(v9, v10, v11, v12, v8);
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_8_28();
}

void sub_242B1F5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_28_24();
  a36 = v41;
  a37 = v42;
  v44 = v43;
  v46 = v45;
  OUTLINED_FUNCTION_36_18();
  if (!v50 & v49)
    v51 = 1;
  else
    v51 = qword_242C561C0[v48];
  if (v51 > v46)
  {
LABEL_17:
    a10 = 0;
    a11 = 0;
    a9 = v46;
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_0_62();
  }
  v52 = *v47;
  if (*(_QWORD *)(*v47 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v50)
        break;
      OUTLINED_FUNCTION_6_44();
      if (v50)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_10:
  OUTLINED_FUNCTION_3_47(v51);
  if (!v50)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_242C48AC4();
  OUTLINED_FUNCTION_43_17();
  v44();
  if (v37)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    a9 = v52;
    a27 = v40;
    sub_242B1DCA4(&a9, &a27, v38, v39, v46);
  }
  OUTLINED_FUNCTION_7_34();
}

uint64_t sub_242B1F6B4(uint64_t (*a1)(void))
{
  return a1();
}

void sub_242B1F6F0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t sub_242B1F6FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return sub_242C480E0();
}

uint64_t sub_242B1F708(uint64_t (*a1)(void))
{
  return sub_242B1F6B4(a1);
}

uint64_t sub_242B1F71C(uint64_t (*a1)(_QWORD, _QWORD))
{
  return sub_242B1DE20(a1);
}

uint64_t sub_242B1F730(uint64_t a1, uint64_t a2)
{
  return sub_242B1F780(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_242C28880);
}

uint64_t sub_242B1F74C()
{
  return sub_242BC86FC();
}

uint64_t sub_242B1F764(uint64_t a1, uint64_t a2)
{
  return sub_242B1F780(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_242C29E20);
}

uint64_t sub_242B1F780(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

void OUTLINED_FUNCTION_0_62()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_3_47@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 * a1;
}

uint64_t OUTLINED_FUNCTION_5_46@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = 0;
  *(_QWORD *)(v2 - 176) = 0;
  *(_QWORD *)(v2 - 192) = v1;
  *(_BYTE *)(v2 - 168) = -1;
  *(_QWORD *)(v2 - 152) = 0;
  *(_QWORD *)(v2 - 144) = 0;
  *(_QWORD *)(v2 - 160) = a1;
  *(_BYTE *)(v2 - 136) = -1;
  *(_BYTE *)(v2 - 84) = 13;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_10_31()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 192) = v2;
  *(_BYTE *)(v5 - 65) = v1;
  return sub_242B1DCA4((uint64_t *)(v5 - 192), (char *)(v5 - 65), v3, v4, v0);
}

void OUTLINED_FUNCTION_11_32(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = 0;
  *(_QWORD *)(v2 - 176) = 0;
  *(_QWORD *)(v2 - 192) = a1;
  *(_BYTE *)(v2 - 168) = -1;
  *(_QWORD *)(v2 - 152) = 0;
  *(_QWORD *)(v2 - 144) = 0;
  *(_QWORD *)(v2 - 160) = a2;
  *(_BYTE *)(v2 - 136) = -1;
  *(_BYTE *)(v2 - 84) = 13;
}

uint64_t OUTLINED_FUNCTION_12_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 208) = a4;
  *(_QWORD *)(v7 - 200) = v6;
  *(_DWORD *)(v7 - 72) = a6;
  return sub_242C49208();
}

uint64_t OUTLINED_FUNCTION_13_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  a9 = v10;
  *(_BYTE *)(v14 - 65) = v13;
  return sub_242B1DCA4(&a9, (char *)(v14 - 65), v11, v12, v9);
}

uint64_t OUTLINED_FUNCTION_15_26()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_16_26()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  a9 = v9;
  *(_BYTE *)(v14 - 65) = v13;
  return sub_242B1DCA4(&a9, (char *)(v14 - 65), v11, v12, v10);
}

uint64_t OUTLINED_FUNCTION_20_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  a9 = v10;
  *(_BYTE *)(v14 - 49) = v13;
  return sub_242B1DCA4(&a9, (char *)(v14 - 49), v11, v12, v9);
}

uint64_t OUTLINED_FUNCTION_21_24()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_25_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_26_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v4, a2, v3);
}

uint64_t OUTLINED_FUNCTION_27_21(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, v3, a1, v1);
}

uint64_t OUTLINED_FUNCTION_29_16()
{
  uint64_t v0;
  unint64_t v1;

  return sub_242A69418(v0, v1);
}

uint64_t OUTLINED_FUNCTION_31_24()
{
  return sub_242C48AC4();
}

uint64_t OUTLINED_FUNCTION_33_16()
{
  return sub_242C48AC4();
}

void OUTLINED_FUNCTION_34_18()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 192) = *(_DWORD *)(v0 - 72);
}

uint64_t OUTLINED_FUNCTION_41_19()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_44_12()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_46_13()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = v0;
}

uint64_t OUTLINED_FUNCTION_49_12()
{
  return sub_242C48AC4();
}

uint64_t OUTLINED_FUNCTION_51_14(uint64_t a1, uint64_t a2)
{
  return sub_242B88D50(a1, a2);
}

uint64_t OUTLINED_FUNCTION_54_8()
{
  uint64_t v0;

  return sub_242A6549C(v0);
}

uint64_t OUTLINED_FUNCTION_56_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_57_12()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = *(_DWORD *)(v0 - 72);
  return v0 - 192;
}

uint64_t OUTLINED_FUNCTION_59_9(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_242B1DCA4(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_61_9()
{
  return sub_242C47BA0();
}

uint64_t RecurrentLayerInput.input.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_21_25(*v1, a1);
}

void RecurrentLayerInput.input.setter()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_73_8();
  *v1 = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RecurrentLayerInput.input.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RecurrentLayerInput.state.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_242C48A64();
  return OUTLINED_FUNCTION_40_15(a2, v4, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t RecurrentLayerInput.state.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_242C48A64();
  return OUTLINED_FUNCTION_40_15(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

uint64_t (*RecurrentLayerInput.state.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RecurrentLayerInput.init(input:state:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *a1;
  v9 = (uint64_t)a5 + *(int *)(type metadata accessor for RecurrentLayerInput(0, a3, a3, a4) + 28);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, a3);
  *a5 = v8;
  v10 = sub_242C48A64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v9, a2, v10);
}

uint64_t type metadata accessor for RecurrentLayerInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RecurrentLayerInput);
}

uint64_t sub_242B1FDA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242B1FE84(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574617473;
  else
    return 0x7475706E69;
}

BOOL sub_242B1FEAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242A65680(*a1, *a2);
}

uint64_t sub_242B1FEBC()
{
  return sub_242A657BC();
}

uint64_t sub_242B1FEDC()
{
  return sub_242A65690();
}

uint64_t sub_242B1FEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242B201A8(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD))sub_242A65690);
}

uint64_t sub_242B1FEF8()
{
  char *v0;

  return sub_242B1FE84(*v0);
}

uint64_t sub_242B1FF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B1FDA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242B1FF30(uint64_t a1, uint64_t a2)
{
  return sub_242B2023C(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_242A65800);
}

uint64_t sub_242B1FF3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A63ECC();
  *a1 = result;
  return result;
}

uint64_t sub_242B1FF64(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C56998, a1);
  return sub_242C494D8();
}

uint64_t sub_242B1FF98(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C56998, a1);
  return sub_242C494E4();
}

uint64_t (*RecurrentLayerOutput.output.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RecurrentLayerOutput.state.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t RecurrentLayerOutput.state.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*RecurrentLayerOutput.state.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RecurrentLayerOutput.init(output:state:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = *a1;
  v7 = (char *)a5 + *(int *)(type metadata accessor for RecurrentLayerOutput(0, a3, a3, a4) + 28);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
}

uint64_t type metadata accessor for RecurrentLayerOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RecurrentLayerOutput);
}

uint64_t sub_242B20090(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74757074756FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242B2016C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574617473;
  else
    return 0x74757074756FLL;
}

uint64_t sub_242B2019C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242B201A8(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD))sub_242B25AE0);
}

uint64_t sub_242B201A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_242C49340();
  a4(v8, *v4, *(_QWORD *)(a2 + 16));
  return sub_242C49394();
}

uint64_t sub_242B201F8()
{
  char *v0;

  return sub_242B2016C(*v0);
}

uint64_t sub_242B20208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B20090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242B20230(uint64_t a1, uint64_t a2)
{
  return sub_242B2023C(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_242A86C80);
}

uint64_t sub_242B2023C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, *(_QWORD *)(a1 + 16));
}

uint64_t sub_242B20260(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C56948, a1);
  return sub_242C494D8();
}

uint64_t sub_242B20294(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C56948, a1);
  return sub_242C494E4();
}

void RecurrentLayerInput<A>.encode(to:)()
{
  sub_242B205AC();
}

uint64_t type metadata accessor for RecurrentLayerInput.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RecurrentLayerInput.CodingKeys);
}

void RecurrentLayerInput<A>.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_18_1();
  v47 = v10;
  v41 = v11;
  v13 = v12;
  v15 = v14;
  v38 = v16;
  v17 = sub_242C48A64();
  v45 = *(_QWORD *)(v17 - 8);
  v46 = v17;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v18);
  v40 = (char *)&v37 - v19;
  v22 = type metadata accessor for RecurrentLayerInput.CodingKeys(255, v13, v20, v21);
  MEMORY[0x2494EDE24](&unk_242C56998, v22);
  v42 = sub_242C4910C();
  v39 = *(_QWORD *)(v42 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v23);
  v26 = type metadata accessor for RecurrentLayerInput(0, v13, v24, v25);
  v37 = *(_QWORD *)(v26 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (uint64_t *)((char *)&v37 - v28);
  v44 = (uint64_t)&v37 + *(int *)(v30 + 28) - v28;
  __swift_storeEnumTagSinglePayload(v44, 1, 1, v13);
  v43 = v15;
  OUTLINED_FUNCTION_64_9();
  v31 = v47;
  sub_242C49448();
  if (v31)
  {
    v34 = v45;
    v33 = v46;
    v35 = v44;
    __swift_destroy_boxed_opaque_existential_1(v43);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v33);
  }
  else
  {
    v32 = v40;
    OUTLINED_FUNCTION_61_10();
    sub_242C490D0();
    *v29 = a10;
    OUTLINED_FUNCTION_43_18();
    sub_242C49094();
    OUTLINED_FUNCTION_25_24();
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 40))(v44, v32, v46);
    v36 = v37;
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v37 + 16))(v38, v29, v26);
    __swift_destroy_boxed_opaque_existential_1(v43);
    (*(void (**)(_QWORD *, uint64_t))(v36 + 8))(v29, v26);
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242B2054C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  RecurrentLayerInput<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_242B20568()
{
  RecurrentLayerInput<A>.encode(to:)();
}

void RecurrentLayerOutput<A>.encode(to:)()
{
  sub_242B205AC();
}

void sub_242B205AC()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v15[3];
  void (*v16)(void);
  uint64_t v17;
  char v18;

  OUTLINED_FUNCTION_18_1();
  v16 = v1;
  v17 = v0;
  v3 = v2;
  v5 = v4;
  v15[0] = v6;
  v15[1] = *(_QWORD *)(v6 + 16);
  v15[2] = v7;
  v9 = v8(255);
  MEMORY[0x2494EDE24](v3, v9);
  v10 = sub_242C491A8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 - v12;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_242C49478();
  v18 = 0;
  sub_242A792CC();
  v14 = v17;
  sub_242C49184();
  if (!v14)
  {
    OUTLINED_FUNCTION_43_18();
    v16();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  OUTLINED_FUNCTION_0_9();
}

uint64_t type metadata accessor for RecurrentLayerOutput.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RecurrentLayerOutput.CodingKeys);
}

void RecurrentLayerOutput<A>.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;

  OUTLINED_FUNCTION_18_1();
  v47 = (_QWORD *)v10;
  v44 = v11;
  v13 = v12;
  v15 = v14;
  v40 = v16;
  v39 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_4_9();
  v42 = v18 - v17;
  v22 = type metadata accessor for RecurrentLayerOutput.CodingKeys(255, v19, v20, v21);
  MEMORY[0x2494EDE24](&unk_242C56948, v22);
  v46 = sub_242C4910C();
  v41 = *(_QWORD *)(v46 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v37 - v24;
  v43 = v13;
  v28 = type metadata accessor for RecurrentLayerOutput(0, v13, v26, v27);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v37 - v30;
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  v45 = v25;
  v32 = (uint64_t)v47;
  sub_242C49448();
  if (v32)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    v38 = v29;
    v33 = v43;
    v47 = v15;
    v34 = v31;
    v35 = v42;
    OUTLINED_FUNCTION_61_10();
    sub_242C490D0();
    *(_QWORD *)v34 = a10;
    OUTLINED_FUNCTION_43_18();
    sub_242C490D0();
    OUTLINED_FUNCTION_38_16();
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(&v34[*(int *)(v28 + 28)], v35, v33);
    v36 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v40, v34, v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242B20924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  RecurrentLayerOutput<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_242B20940()
{
  RecurrentLayerOutput<A>.encode(to:)();
}

void LSTM.learningPhase.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *LSTM.learningPhase.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*LSTM.learningPhase.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LSTM.unitCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t LSTM.isBidirectional.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t LSTM.recurrentWeight.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      *v1 = v0 & 0x7FFFFFFFFFFFFFFFLL;
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

uint64_t sub_242B20A14@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LSTM.recurrentWeight.getter();
  *a1 = v3;
  return result;
}

void sub_242B20ABC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_retain();
  LSTM.recurrentWeight.setter((uint64_t)&v1);
}

void LSTM.recurrentWeight.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_30_5();
}

void LSTM.recurrentWeight.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 24));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void sub_242B20BB4(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t LSTM.$recurrentWeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 33);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  return swift_retain();
}

void LSTM.inputWeight.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 50) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        *v3 = v2 & 0x7FFFFFFFFFFFFFFFLL;
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    *a1 = 0;
  }
}

void LSTM.inputWeight.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  if (*(_BYTE *)(v3 + 50) == 1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_34_10(v4, a2, a3);
LABEL_5:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v4)
      goto LABEL_5;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void LSTM.inputWeight.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  a1[1] = v1;
  if (*(_BYTE *)(v1 + 50) != 1)
  {
    *a1 = 0;
    goto LABEL_6;
  }
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 40));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
LABEL_6:
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void sub_242B20E04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 50))
    {
      if (v3)
      {
        v4 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_34_10(v4, v5, v6);
LABEL_9:
        OUTLINED_FUNCTION_32_21();
        return;
      }
      goto LABEL_12;
    }
    if (!v3)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 50))
  {
    if (v3)
    {
      swift_release();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_34_10((uint64_t)a1, a2, a3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void LSTM.$inputWeight.getter(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  __int16 v3;
  __int16 v4;
  uint64_t v5;

  if (v1[50] == 1)
  {
    if (v1[49])
      v3 = 256;
    else
      v3 = 0;
    v4 = v3 | v1[48];
    v5 = swift_retain();
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  *(_QWORD *)a1 = v5;
  *(_WORD *)(a1 + 8) = v4;
  OUTLINED_FUNCTION_1_0();
}

void LSTM.bias.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 66) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        *v3 = v2 & 0x7FFFFFFFFFFFFFFFLL;
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    *a1 = 0;
  }
}

void sub_242B20FC8(void (*a1)(uint64_t *__return_ptr)@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  a1(&v3);
  *a2 = v3;
  OUTLINED_FUNCTION_36_2();
}

void sub_242B21068(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *))
{
  uint64_t v6;

  v6 = *a1;
  swift_retain();
  a5(&v6);
  OUTLINED_FUNCTION_30_5();
}

void LSTM.bias.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  if (*(_BYTE *)(v3 + 66) == 1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_34_10(v4, a2, a3);
LABEL_5:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v4)
      goto LABEL_5;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void LSTM.bias.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  a1[1] = v1;
  if (*(_BYTE *)(v1 + 66) != 1)
  {
    *a1 = 0;
    goto LABEL_6;
  }
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 56));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
LABEL_6:
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void sub_242B211E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 66))
    {
      if (v3)
      {
        v4 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_34_10(v4, v5, v6);
LABEL_9:
        OUTLINED_FUNCTION_32_21();
        return;
      }
      goto LABEL_12;
    }
    if (!v3)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 66))
  {
    if (v3)
    {
      swift_release();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_34_10((uint64_t)a1, a2, a3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void LSTM.$bias.getter(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  __int16 v3;
  __int16 v4;
  uint64_t v5;

  if (v1[66] == 1)
  {
    if (v1[65])
      v3 = 256;
    else
      v3 = 0;
    v4 = v3 | v1[64];
    v5 = swift_retain();
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  *(_QWORD *)a1 = v5;
  *(_WORD *)(a1 + 8) = v4;
  OUTLINED_FUNCTION_1_0();
}

uint64_t LSTM.init(unitCount:recurrentWeightInitializer:inputWeightInitializer:biasInitializer:isBidirectional:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_2_0();
  v8 = swift_retain();
  sub_242A78594(v8);
  v10 = v9;
  swift_allocObject();
  OUTLINED_FUNCTION_158_0();
  if (a2)
  {
    v11 = swift_retain();
    sub_242A78594(v11);
  }
  else
  {
    sub_242A785DC(0);
  }
  v13 = v12;
  swift_retain();
  swift_release();
  swift_allocObject();
  if (a3)
    sub_242A78594(a3);
  else
    OUTLINED_FUNCTION_12_9();
  v15 = v14;
  swift_release();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_17_1();
  swift_release();
  result = swift_release();
  *(_BYTE *)a5 = 0;
  *(_QWORD *)(a5 + 8) = a1;
  *(_BYTE *)(a5 + 16) = a4 & 1;
  *(_QWORD *)(a5 + 24) = v10;
  *(_WORD *)(a5 + 32) = 256;
  *(_QWORD *)(a5 + 40) = v13;
  *(_WORD *)(a5 + 48) = 256;
  *(_BYTE *)(a5 + 50) = a2 != 0;
  *(_QWORD *)(a5 + 56) = v15;
  *(_WORD *)(a5 + 64) = 256;
  *(_BYTE *)(a5 + 66) = a3 != 0;
  return result;
}

void LSTM.init(recurrentWeight:inputWeight:bias:isBidirectional:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v7 = *a1;
  v8 = *a2;
  v9 = *a3;
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  v10 = 2;
  if ((a4 & 1) != 0)
    v10 = 3;
  v11 = *(_QWORD **)(*(_QWORD *)(v7 + 16) + 152);
  if (v11[2] != v10)
    goto LABEL_35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  if ((a4 & 1) != 0)
  {
    v12 = v11[6];
    v13 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v13 + 16) = xmmword_242C4B810;
    *(_QWORD *)(v13 + 32) = 2;
    OUTLINED_FUNCTION_65_8();
    if (!v15)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      OUTLINED_FUNCTION_51_15();
      OUTLINED_FUNCTION_24_25();
      goto LABEL_40;
    }
    v16 = v14;
    *(_QWORD *)(v14 + 40) = 4 * v12;
    *(_QWORD *)(v14 + 48) = v12;
  }
  else
  {
    v12 = v11[5];
    *(_OWORD *)(OUTLINED_FUNCTION_2_0() + 16) = xmmword_242C4B7F0;
    OUTLINED_FUNCTION_65_8();
    if (!v15)
      goto LABEL_34;
    v16 = v17;
    *(_QWORD *)(v17 + 32) = 4 * v12;
    *(_QWORD *)(v17 + 40) = v12;
  }
  if ((sub_242C00B0C(v11, v16) & 1) == 0)
    goto LABEL_41;
  swift_bridgeObjectRelease();
  v18 = OUTLINED_FUNCTION_5_47();
  OUTLINED_FUNCTION_7_35(v18, v19, v20, v21, v22, v23, v24, v25, v54, v56, v58);
  v27 = v26;
  v28 = 8 * v12;
  if (!v8)
    goto LABEL_19;
  v29 = *(_QWORD *)(*(_QWORD *)(v8 + 16) + 152);
  if (*(_QWORD *)(v29 + 16) != 2)
  {
    OUTLINED_FUNCTION_51_15();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_24_25();
    goto LABEL_40;
  }
  if ((a4 & 1) != 0)
  {
    v30 = 8 * v12;
    if ((unint64_t)(v12 - 0x1000000000000000) >> 61 == 7)
      goto LABEL_18;
    __break(1u);
  }
  v30 = 4 * v12;
LABEL_18:
  if (*(_QWORD *)(v29 + 32) != v30)
    goto LABEL_41;
LABEL_19:
  if (v9)
  {
    v59 = v9;
    v31 = *(_QWORD *)(*(_QWORD *)(v9 + 16) + 152);
    if (*(_QWORD *)(v31 + 16) == 1)
    {
      v32 = v8;
      v33 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
      if ((a4 & 1) != 0)
      {
        if ((unint64_t)(v12 - 0x1000000000000000) >> 61 == 7)
          goto LABEL_25;
        __break(1u);
      }
      v28 = 4 * v12;
LABEL_25:
      *(_QWORD *)(inited + 32) = v28;
      if ((sub_242C00B0C(v31, inited) & 1) != 0)
      {
        swift_setDeallocating();
        v27 = v33;
        v8 = v32;
        v9 = v59;
        goto LABEL_27;
      }
LABEL_41:
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
      OUTLINED_FUNCTION_78_0();
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_51_15();
    swift_retain();
    OUTLINED_FUNCTION_24_25();
LABEL_40:
    sub_242A59264();
  }
LABEL_27:
  swift_release();
  if (v8)
  {
    v35 = OUTLINED_FUNCTION_5_47();
    OUTLINED_FUNCTION_7_35(v35, v36, v37, v38, v39, v40, v41, v42, v55, v57, v59);
  }
  else
  {
    OUTLINED_FUNCTION_5_47();
    OUTLINED_FUNCTION_12_9();
  }
  v44 = v43;
  swift_release();
  if (v9)
  {
    v45 = OUTLINED_FUNCTION_5_47();
    OUTLINED_FUNCTION_7_35(v45, v46, v47, v48, v49, v50, v51, v52, v55, v57, v59);
  }
  else
  {
    OUTLINED_FUNCTION_5_47();
    OUTLINED_FUNCTION_12_9();
  }
  *(_BYTE *)a5 = 0;
  *(_QWORD *)(a5 + 8) = v12;
  *(_BYTE *)(a5 + 16) = a4 & 1;
  *(_QWORD *)(a5 + 24) = v27;
  *(_WORD *)(a5 + 32) = 256;
  *(_QWORD *)(a5 + 40) = v44;
  *(_WORD *)(a5 + 48) = 256;
  *(_BYTE *)(a5 + 50) = v8 != 0;
  *(_QWORD *)(a5 + 56) = v53;
  *(_WORD *)(a5 + 64) = 256;
  *(_BYTE *)(a5 + 66) = v9 != 0;
}

uint64_t sub_242B218C8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v2 = (_QWORD *)*a1;
  if (v2[2] < 2uLL)
  {
LABEL_12:
    sub_242C480E0();
    sub_242A59264();
  }
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  v6 = v2[4];
  v5 = v2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = swift_allocObject();
  v8 = v7;
  *(_OWORD *)(v7 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  if (!v4)
  {
    *(_QWORD *)(v7 + 48) = v3;
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_242C4B810;
    *(_QWORD *)(v12 + 32) = v6;
    *(_QWORD *)(v12 + 40) = v5;
    if ((unint64_t)(v3 - 0x2000000000000000) >> 62 == 3)
    {
      v10 = v12;
      v11 = 2;
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  if (v3 + 0x4000000000000000 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)(v7 + 48) = 2 * v3;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v5;
  if ((unint64_t)(v3 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v9;
  v11 = 3;
LABEL_8:
  *(_QWORD *)(v10 + 48) = v3 << v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v13 + 32) = v8;
  *(_BYTE *)(v13 + 40) = 10;
  *(_QWORD *)(v13 + 48) = v8;
  *(_BYTE *)(v13 + 56) = 10;
  *(_QWORD *)(v13 + 64) = v10;
  *(_BYTE *)(v13 + 72) = 10;
  sub_242C480E0();
  return v13;
}

uint64_t sub_242B21AB4(uint64_t a1, _QWORD *a2, uint64_t a3, char a4, char a5, char a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t result;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[72];
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[56];
  _BYTE v98[56];
  _BYTE v99[56];
  const char *v100;
  __int128 v101;
  __int128 v102;
  const char *v103;
  uint64_t v104;
  __int16 v105;

  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_34;
  }
  v6 = a2[2];
  if (!v6)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v6 == 1)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v6 < 3)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    sub_242A5EBB0();
    v49 = v84;
    goto LABEL_23;
  }
  v13 = *(_QWORD *)(a1 + 32);
  v14 = a2 + 4;
  v15 = a2[4];
  v16 = a2[5];
  v17 = a2[6];
  if ((a5 & 1) != 0)
  {
    if (v6 < 4)
    {
      __break(1u);
      goto LABEL_39;
    }
    if ((a6 & 1) == 0)
    {
      v26 = *(_QWORD *)(v15 + 16);
      v22 = *(_QWORD *)(v16 + 16);
      v25 = *(_QWORD *)(v17 + 16);
      v89 = 0;
      v90 = 0;
      v88 = 0;
      v24 = swift_retain();
      goto LABEL_17;
    }
    v92 = a2[7];
    swift_retain();
    v18 = 4;
  }
  else
  {
    if ((a6 & 1) == 0)
    {
      v27 = 0;
      v89 = 0;
      v90 = 0;
      v88 = 0;
      v26 = *(_QWORD *)(v15 + 16);
      v22 = *(_QWORD *)(v16 + 16);
      v24 = 0;
      v25 = *(_QWORD *)(v17 + 16);
      goto LABEL_19;
    }
    v92 = 0;
    v18 = 3;
  }
  if (v18 >= v6)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v18 + 1 >= v6)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v91 = a3;
  v19 = *(_QWORD *)(v14[v18] + 16);
  v20 = *(_QWORD *)(v14[v18 + 1] + 16);
  v21 = *(_QWORD *)(v15 + 16);
  v22 = *(_QWORD *)(v16 + 16);
  v23 = *(_QWORD *)(v17 + 16);
  v88 = v14[v18];
  swift_retain();
  swift_retain();
  v89 = v19;
  swift_retain();
  v90 = v20;
  swift_retain();
  v24 = v92;
  if (v92)
  {
    v25 = v23;
    v26 = v21;
    a3 = v91;
LABEL_17:
    v27 = *(_QWORD *)(v24 + 16);
    swift_retain();
    goto LABEL_19;
  }
  v27 = 0;
  v25 = v23;
  v26 = v21;
  a3 = v91;
LABEL_19:
  v28 = *(_QWORD *)(v13 + 16);
  v29 = *(_QWORD *)(a3 + 16);
  if (!v29)
  {
LABEL_41:
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_242AA5A34(v88);
    sub_242AA5A34(v89);
    __break(1u);
    goto LABEL_42;
  }
  v93 = v24;
  v30 = *(_QWORD *)(v29 + 16);
  v31 = *(_QWORD *)(a3 + 24);
  if (!v31)
  {
LABEL_42:
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_242AA5A34(v88);
    result = sub_242AA5A34(v89);
    __break(1u);
    return result;
  }
  v32 = *(_QWORD *)(v31 + 16);
  v101 = xmmword_242C4D6C0;
  v102 = xmmword_242C56270;
  v100 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/LSTMLayerOps.swift";
  v103 = "init(id:input:recurrentWeight:inputWeight:bias:state:isBidirectional:gradient:zState:cellOutputForward:creationSite:)";
  v104 = 117;
  v105 = 2;
  type metadata accessor for LSTMLayerGradientOperation();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242B25A74(v89);
  sub_242AA553C(0, 0, 0, v26, v22, v25, v27, v89, v90, a4 & 1, v28, v30, v32, (uint64_t)&v100);
  v10 = v33;
  sub_242A66290(v28 + 168, (uint64_t)v99);
  sub_242A66290((uint64_t)v99, (uint64_t)v98);
  sub_242A66290((uint64_t)v98, (uint64_t)v97);
  type metadata accessor for ContextManager();
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v34 = v96;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v35 = v95;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  type metadata accessor for TensorRepresentation();
  v36 = swift_allocObject();
  v94[0] = 1;
  v37 = sub_242B4CACC(v10, 0, v97, 0x100000000, v34, v35, v36);
  type metadata accessor for TensorHandle();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v37;
  swift_retain();
  sub_242BC995C();
  swift_release();
  sub_242A662D8((uint64_t)v98);
  sub_242A66290((uint64_t)v99, (uint64_t)v98);
  sub_242A66290((uint64_t)v98, (uint64_t)v97);
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v39 = v96;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v40 = v95;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  v41 = swift_allocObject();
  v94[0] = 1;
  v42 = sub_242B4CACC(v10, 1, v97, 0x100000000, v39, v40, v41);
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v42;
  swift_retain();
  sub_242BC995C();
  swift_release();
  sub_242A662D8((uint64_t)v98);
  sub_242B25AA0();
  sub_242A66290((uint64_t)v99, (uint64_t)v98);
  sub_242A66290((uint64_t)v98, (uint64_t)v97);
  swift_retain_n();
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v44 = v96;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v45 = v95;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  v46 = swift_allocObject();
  v94[0] = 1;
  v47 = sub_242B4CACC(v10, 2, v97, 0x100000000, v44, v45, v46);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v47;
  swift_retain();
  sub_242BC995C();
  swift_release();
  swift_release();
  sub_242A662D8((uint64_t)v98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_242C4B810;
  swift_retain();
  swift_retain();
  v50 = sub_242AC4964();
  *(_QWORD *)(v49 + 32) = v38;
  *(_QWORD *)(v49 + 40) = v50;
  *(_QWORD *)(v49 + 48) = v51;
  swift_retain();
  swift_retain();
  v52 = sub_242AC4964();
  *(_QWORD *)(v49 + 56) = v43;
  *(_QWORD *)(v49 + 64) = v52;
  *(_QWORD *)(v49 + 72) = v53;
  swift_retain();
  swift_retain();
  v54 = sub_242AC4964();
  *(_QWORD *)(v49 + 80) = v48;
  *(_QWORD *)(v49 + 88) = v54;
  *(_QWORD *)(v49 + 96) = v55;
  if (!v93)
  {
    v62 = 3;
    goto LABEL_25;
  }
  sub_242A66290((uint64_t)v99, (uint64_t)v98);
  sub_242A66290((uint64_t)v98, (uint64_t)v97);
  swift_retain_n();
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v56 = v96;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  sub_242B93328();
  sub_242B933C0((uint64_t)v94);
  swift_release();
  v57 = v95;
  swift_retain();
  sub_242A5DC30((uint64_t)v94);
  v58 = swift_allocObject();
  v94[0] = 1;
  v59 = sub_242B4CACC(v10, 3, v97, 0x100000000, v56, v57, v58);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v59;
  swift_retain();
  sub_242BC995C();
  swift_release();
  swift_release();
  sub_242A662D8((uint64_t)v98);
  swift_retain();
  v7 = sub_242AC4964();
  v8 = v60;
  v11 = *(_QWORD *)(v49 + 16);
  v9 = v11 + 1;
  if (v11 >= *(_QWORD *)(v49 + 24) >> 1)
    goto LABEL_37;
LABEL_23:
  *(_QWORD *)(v49 + 16) = v9;
  v61 = (_QWORD *)(v49 + 24 * v11);
  v61[4] = v6;
  v61[5] = v7;
  v61[6] = v8;
  swift_release();
  v62 = 4;
LABEL_25:
  if (v88)
  {
    sub_242A66290((uint64_t)v99, (uint64_t)v98);
    sub_242A66290((uint64_t)v98, (uint64_t)v97);
    swift_retain();
    sub_242B25A74(v88);
    sub_242B93328();
    sub_242B933C0((uint64_t)v94);
    swift_release();
    v63 = v96;
    swift_retain();
    sub_242A5DC30((uint64_t)v94);
    sub_242B93328();
    sub_242B933C0((uint64_t)v94);
    swift_release();
    v64 = v95;
    swift_retain();
    sub_242A5DC30((uint64_t)v94);
    v65 = swift_allocObject();
    v94[0] = 1;
    v66 = sub_242B4CACC(v10, v62, v97, 0x100000000, v63, v64, v65);
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = v66;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242A662D8((uint64_t)v98);
    swift_retain();
    v68 = sub_242AC4964();
    v70 = v69;
    v71 = *(_QWORD *)(v49 + 16);
    if (v71 >= *(_QWORD *)(v49 + 24) >> 1)
    {
      sub_242A5EBB0();
      v49 = v85;
    }
    *(_QWORD *)(v49 + 16) = v71 + 1;
    v72 = (_QWORD *)(v49 + 24 * v71);
    v72[4] = v67;
    v72[5] = v68;
    v72[6] = v70;
    sub_242A66290((uint64_t)v99, (uint64_t)v98);
    sub_242A66290((uint64_t)v98, (uint64_t)v97);
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)v94);
    swift_release();
    v73 = v96;
    swift_retain();
    sub_242A5DC30((uint64_t)v94);
    sub_242B93328();
    sub_242B933C0((uint64_t)v94);
    swift_release();
    v74 = v95;
    swift_retain();
    sub_242A5DC30((uint64_t)v94);
    v75 = swift_allocObject();
    v94[0] = 1;
    v76 = sub_242B4CACC(v10, v62 + 1, v97, 0x100000000, v73, v74, v75);
    v77 = swift_allocObject();
    *(_QWORD *)(v77 + 16) = v76;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242A662D8((uint64_t)v98);
    swift_retain();
    v78 = sub_242AC4964();
    v80 = v79;
    v81 = *(_QWORD *)(v49 + 16);
    if (v81 >= *(_QWORD *)(v49 + 24) >> 1)
    {
      sub_242A5EBB0();
      v49 = v86;
    }
    *(_QWORD *)(v49 + 16) = v81 + 1;
    v82 = (_QWORD *)(v49 + 24 * v81);
    v82[4] = v77;
    v82[5] = v78;
    v82[6] = v80;
    sub_242AA5A34(v88);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242AA5A34(v88);
    sub_242AA5A34(v89);
    sub_242A662D8((uint64_t)v99);
  }
  else
  {
    sub_242A662D8((uint64_t)v99);
    sub_242AA5A34(v89);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  return v49;
}

_QWORD *LSTM.State.init(hidden:cell:)@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

__n128 LSTM.forward(_:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  const void *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  __n128 result;
  __n128 v9;
  _QWORD v10[18];
  _OWORD __src[9];
  _BYTE __dst[72];

  v4 = *(_QWORD *)(a1 + 8);
  memcpy(__dst, v2, 0x43uLL);
  type metadata accessor for LSTMLayerOperationBackwardContext();
  v5 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  swift_retain();
  OUTLINED_FUNCTION_91();
  sub_242B25A74(v4);
  sub_242AEF778((uint64_t)__dst);
  sub_242B92E3C();
  v9 = (__n128)__src[0];
  v6 = *(_QWORD *)&__src[1];
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)__src);
  OUTLINED_FUNCTION_135();
  memcpy(v10, __src, 0x88uLL);
  if (!v10[10])
  {
    sub_242A5DC30((uint64_t)v10);
LABEL_8:
    OUTLINED_FUNCTION_17_1();
    goto LABEL_9;
  }
  v7 = *(unsigned __int8 *)(v10[10] + 24);
  sub_242A5DC30((uint64_t)v10);
  if (v7 != 1)
    goto LABEL_8;
  if (*(_QWORD *)(v5 + 24))
  {
    OUTLINED_FUNCTION_45_12();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_35_17();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_17_5();
    swift_unknownObjectRelease();
  }
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_8;
  OUTLINED_FUNCTION_45_12();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_35_17();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  swift_unknownObjectRelease();
LABEL_9:
  result = v9;
  *a2 = v9;
  a2[1].n128_u64[0] = v6;
  return result;
}

void sub_242B22890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  const void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  char v463;
  uint64_t v464;
  const char *v465;
  __int128 v466;
  __int128 v467;
  const char *v468;
  uint64_t v469;
  __int16 v470;

  OUTLINED_FUNCTION_18_1();
  v3 = v0;
  v415 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  if (v1)
  {
    v13 = *(_QWORD *)(v1 + 16);
    v14 = *(_QWORD *)(v2 + 16);
    OUTLINED_FUNCTION_205();
    OUTLINED_FUNCTION_158_0();
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  OUTLINED_FUNCTION_70_8(&v446);
  v15 = *(_QWORD *)(v8 + 16);
  v465 = *(const char **)(v15 + 152);
  OUTLINED_FUNCTION_123_0();
  v401 = sub_242B218C8(&v465);
  v16 = *(_QWORD *)(*(_QWORD *)(v6 + 24) + 32);
  if ((~v16 & 0xF000000000000007) == 0)
    goto LABEL_17;
  v340 = v10;
  if ((v16 & 0x8000000000000000) == 0)
    goto LABEL_18;
  v17 = v15;
  v18 = *(_QWORD *)(v16 + 16);
  if ((*(_BYTE *)(v6 + 50) & 1) == 0)
  {
    v19 = 0;
    goto LABEL_11;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v6 + 40) + 32);
  if ((~v20 & 0xF000000000000007) == 0)
    goto LABEL_17;
  if ((v20 & 0x8000000000000000) == 0)
  {
LABEL_18:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_19;
  }
  v19 = swift_retain();
LABEL_11:
  v21 = *(_BYTE *)(v6 + 66);
  v370 = v12;
  v386 = v3;
  v355 = v8;
  v310 = v19;
  if ((v21 & 1) == 0)
  {
    v295 = 0;
LABEL_16:
    v23 = *(_BYTE *)(v6 + 16);
    HIDWORD(v280) = v23;
    v24 = v13 != 0;
    v25 = v13;
    v26 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_70_8((void *)(v26 + 16));
    *(_QWORD *)(v26 + 88) = v415;
    *(_BYTE *)(v26 + 96) = v23;
    *(_BYTE *)(v26 + 97) = v21 & 1;
    *(_BYTE *)(v26 + 98) = v24;
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_6();
    sub_242AEF778(v6);
    OUTLINED_FUNCTION_158_0();
    v27 = sub_242BD0D40((uint64_t)sub_242B25A5C);
    v29 = v28;
    OUTLINED_FUNCTION_72_1();
    v466 = xmmword_242C4D6C0;
    v467 = xmmword_242C4D6D0;
    v465 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/LSTMLayerOps.swift";
    v468 = "init(id:input:recurrentWeight:inputWeight:bias:hiddenWeight:state:isBidirectional:resultDescriptors:creationSite:backward:)";
    v469 = 123;
    v470 = 2;
    type metadata accessor for LSTMLayerOperation();
    OUTLINED_FUNCTION_2_0();
    sub_242B25A74(v25);
    sub_242AA5248(0, 0, 0, v17, v18, v310, v295, 0, v25, v14, v23, v401, (uint64_t)&v465, v27, v29);
    v31 = v30;
    OUTLINED_FUNCTION_6_45(v30, v32, v33, v34, v35, v36, v37, v38, v175, v190, v205, v220, v235, v250, v265, v280, v295, v310, v25,
      v340,
      v355,
      v370,
      v386,
      v401,
      v415,
      v431,
      v446,
      v447,
      v448,
      v449,
      v450,
      v451,
      v452,
      v453,
      v454,
      v455,
      v456,
      v457,
      v458,
      v459,
      v460,
      v461,
      v462,
      v463);
    type metadata accessor for ContextManager();
    OUTLINED_FUNCTION_205();
    v39 = OUTLINED_FUNCTION_31_25();
    OUTLINED_FUNCTION_14_24((uint64_t)v39, v40, v41, v42, v43, v44, v45, v46, v176, v191, v206, v221, v236, v251, v266, v281, v296, v311, v325,
      v341,
      v356,
      v371,
      v387,
      v402,
      v416,
      v432,
      v446);
    OUTLINED_FUNCTION_135();
    v47 = v456;
    v48 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_29_17(v48, v49, v50, v51, v52, v53, v54, v55, v177, v192, v207, v222, v237, v252, v267, v282, v297, v312, v326,
      v342,
      v357,
      v372,
      v388,
      v403,
      v417,
      v433,
      v446);
    v56 = OUTLINED_FUNCTION_31_25();
    OUTLINED_FUNCTION_14_24((uint64_t)v56, v57, v58, v59, v60, v61, v62, v63, v178, v193, v208, v223, v238, v253, v268, v283, v298, v313, v327,
      v343,
      v358,
      v373,
      v389,
      v404,
      v418,
      v434,
      v446);
    OUTLINED_FUNCTION_135();
    v64 = OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_29_17(v64, v65, v66, v67, v68, v69, v70, v71, v179, v194, v209, v224, v239, v254, v269, v284, v299, v314, v328,
      v344,
      v359,
      v374,
      v390,
      v405,
      v419,
      v435,
      v446);
    type metadata accessor for TensorRepresentation();
    OUTLINED_FUNCTION_2_0();
    LOBYTE(v446) = 1;
    v72 = OUTLINED_FUNCTION_44_13();
    v75 = OUTLINED_FUNCTION_59_10(v72, 0, v73, v74, v47);
    type metadata accessor for TensorHandle();
    v76 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v76 + 16) = v75;
    OUTLINED_FUNCTION_91();
    sub_242BC995C();
    OUTLINED_FUNCTION_135();
    v77 = OUTLINED_FUNCTION_62_10();
    OUTLINED_FUNCTION_6_45(v77, v78, v79, v80, v81, v82, v83, v84, v180, v195, v210, v225, v240, v255, v270, v285, v300, v315, v329,
      v345,
      v360,
      v375,
      v391,
      v406,
      v420,
      v436,
      v446,
      v447,
      v448,
      v449,
      v450,
      v451,
      v452,
      v453,
      v454,
      v455,
      v456,
      v457,
      v458,
      v459,
      v460,
      v461,
      v462,
      v463);
    OUTLINED_FUNCTION_205();
    v85 = OUTLINED_FUNCTION_31_25();
    OUTLINED_FUNCTION_14_24((uint64_t)v85, v86, v87, v88, v89, v90, v91, v92, v181, v196, v211, v226, v241, v256, v271, v286, v301, v316, v330,
      v346,
      v361,
      v376,
      v392,
      v407,
      v421,
      v437,
      v446);
    OUTLINED_FUNCTION_135();
    v93 = v456;
    v94 = OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_29_17(v94, v95, v96, v97, v98, v99, v100, v101, v182, v197, v212, v227, v242, v257, v272, v287, v302, v317, v331,
      v347,
      v362,
      v377,
      v393,
      v408,
      v422,
      v438,
      v446);
    v102 = OUTLINED_FUNCTION_31_25();
    OUTLINED_FUNCTION_14_24((uint64_t)v102, v103, v104, v105, v106, v107, v108, v109, v183, v198, v213, v228, v243, v258, v273, v288, v303, v318, v332,
      v348,
      v363,
      v378,
      v394,
      v409,
      v423,
      v439,
      v446);
    OUTLINED_FUNCTION_135();
    v110 = OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_29_17(v110, v111, v112, v113, v114, v115, v116, v117, v184, v199, v214, v229, v244, v259, v274, v289, v304, v319, v333,
      v349,
      v364,
      v379,
      v395,
      v410,
      v424,
      v440,
      v446);
    OUTLINED_FUNCTION_2_0();
    LOBYTE(v446) = 1;
    v118 = OUTLINED_FUNCTION_44_13();
    v121 = OUTLINED_FUNCTION_59_10(v118, 1, v119, v120, v93);
    v122 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v122 + 16) = v121;
    OUTLINED_FUNCTION_91();
    sub_242BC995C();
    OUTLINED_FUNCTION_135();
    v123 = OUTLINED_FUNCTION_62_10();
    OUTLINED_FUNCTION_6_45(v123, v124, v125, v126, v127, v128, v129, v130, v185, v200, v215, v230, v245, v260, v275, v290, v305, v320, v334,
      v350,
      v365,
      v380,
      v396,
      v411,
      v425,
      v441,
      v446,
      v447,
      v448,
      v449,
      v450,
      v451,
      v452,
      v453,
      v454,
      v455,
      v456,
      v457,
      v458,
      v459,
      v460,
      v461,
      v462,
      v463);
    swift_retain();
    v131 = OUTLINED_FUNCTION_31_25();
    OUTLINED_FUNCTION_14_24((uint64_t)v131, v132, v133, v134, v135, v136, v137, v138, v186, v201, v216, v231, v246, v261, v276, v291, v306, v321, v335,
      v351,
      v366,
      v381,
      v397,
      v31,
      v426,
      v442,
      v446);
    OUTLINED_FUNCTION_135();
    v139 = v456;
    v140 = swift_retain();
    OUTLINED_FUNCTION_29_17(v140, v141, v142, v143, v144, v145, v146, v147, v187, v202, v217, v232, v247, v262, v277, v292, v307, v322, v336,
      v352,
      v367,
      v382,
      v398,
      v412,
      v427,
      v443,
      v446);
    v148 = OUTLINED_FUNCTION_31_25();
    OUTLINED_FUNCTION_14_24((uint64_t)v148, v149, v150, v151, v152, v153, v154, v155, v188, v203, v218, v233, v248, v263, v278, v293, v308, v323, v337,
      v353,
      v368,
      v383,
      v399,
      v413,
      v428,
      v444,
      v446);
    OUTLINED_FUNCTION_135();
    v156 = OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_29_17(v156, v157, v158, v159, v160, v161, v162, v163, v189, v204, v219, v234, v249, v264, v279, v294, v309, v324, v338,
      v354,
      v369,
      v384,
      v400,
      v414,
      v429,
      v445,
      v446);
    OUTLINED_FUNCTION_2_0();
    LOBYTE(v446) = 1;
    v164 = OUTLINED_FUNCTION_44_13();
    v167 = OUTLINED_FUNCTION_59_10(v164, 2, v165, v166, v139);
    v168 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v168 + 16) = v167;
    OUTLINED_FUNCTION_91();
    sub_242BC995C();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_62_10();
    *(_QWORD *)(v430 + 24) = v122;
    OUTLINED_FUNCTION_11();
    swift_release();
    *(_QWORD *)(v430 + 16) = v168;
    swift_retain();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257227EC8);
    v169 = OUTLINED_FUNCTION_2_0();
    v170 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v169 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v169 + 56) = v170;
    *(_QWORD *)(v169 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v169 + 32) = -1;
    v464 = v76;
    OUTLINED_FUNCTION_6();
    Tensor.subscript.getter();
    swift_release();
    swift_bridgeObjectRelease();
    v171 = v446;
    v172 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v172 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v172 + 56) = v170;
    *(_QWORD *)(v172 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v172 + 32) = -1;
    v464 = v122;
    OUTLINED_FUNCTION_11();
    Tensor.subscript.getter();
    swift_release();
    swift_bridgeObjectRelease();
    v173 = v446;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v174 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v174 + 16) = xmmword_242C533B0;
    *(_QWORD *)(v174 + 32) = v173;
    *(_QWORD *)(v174 + 40) = v171;
    *(_QWORD *)(v174 + 48) = v76;
    *(_QWORD *)(v174 + 56) = v122;
    *(_QWORD *)(v174 + 64) = v168;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_123_0();
    swift_retain();
    sub_242B89200(v174);
    swift_release();
    swift_release();
    sub_242AA5A34(v339);
    swift_setDeallocating();
    sub_242B71334();
    v385[1] = v171;
    v385[2] = v173;
    *v385 = v76;
    OUTLINED_FUNCTION_0_9();
    return;
  }
  v22 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 32);
  if ((~v22 & 0xF000000000000007) != 0)
  {
    if (v22 < 0)
    {
      v295 = *(_QWORD *)(v22 + 16);
      swift_retain();
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_17:
  OUTLINED_FUNCTION_5_18();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_105_0();
LABEL_19:
  sub_242C48F5C();
  __break(1u);
}

uint64_t sub_242B22E68(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  return sub_242B21AB4(a1, a2, a4, a5, a6, a7);
}

uint64_t sub_242B22EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16) != 3)
LABEL_21:
    sub_242A59264();
  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(unsigned __int8 *)(v1 + 50);
  v4 = *(unsigned __int8 *)(v1 + 66);
  v5 = *(unsigned __int8 *)(v1 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  if (v5 == 1)
  {
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_242C4B810;
    *(_QWORD *)(v7 + 32) = 2;
    if ((unint64_t)(v2 - 0x2000000000000000) >> 62 == 3)
    {
      *(_QWORD *)(v7 + 40) = 4 * v2;
      *(_QWORD *)(v7 + 48) = v2;
      swift_retain();
      sub_242A78630();
      swift_release();
      result = swift_bridgeObjectRelease();
      v9 = 8 * v2;
      if (!v3)
        goto LABEL_7;
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_242C4B7F0;
      if ((unint64_t)(v2 - 0x1000000000000000) >> 61 == 7)
      {
        *(_QWORD *)(v10 + 32) = v9;
        *(_QWORD *)(v10 + 40) = v6;
        swift_retain();
        sub_242A78630();
        swift_release();
        result = swift_bridgeObjectRelease();
LABEL_7:
        if (!v4)
          return result;
        v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_242C4B7D0;
        if ((unint64_t)(v2 - 0x1000000000000000) >> 61 == 7)
        {
          *(_QWORD *)(v11 + 32) = v9;
LABEL_15:
          swift_retain();
          sub_242A78630();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_20;
      }
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7F0;
  if ((unint64_t)(v2 - 0x2000000000000000) >> 62 != 3)
    goto LABEL_18;
  v16 = v6;
  v13 = 4 * v2;
  *(_QWORD *)(v12 + 32) = 4 * v2;
  *(_QWORD *)(v12 + 40) = v2;
  swift_retain();
  sub_242A78630();
  swift_release();
  result = swift_bridgeObjectRelease();
  if (v3)
  {
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(v14 + 32) = v13;
    *(_QWORD *)(v14 + 40) = v16;
    swift_retain();
    sub_242A78630();
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  if (v4)
  {
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v15 + 32) = v13;
    goto LABEL_15;
  }
  return result;
}

void LSTM.initializeParameters(for:)(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v2 = *a1;
  v3 = *((_QWORD *)v1 + 1);
  v4 = v1[16];
  v5 = *((_QWORD *)v1 + 3);
  v6 = v1[32];
  v7 = v1[33];
  v8 = *((_QWORD *)v1 + 5);
  v9 = v1[48];
  v10 = v1[49];
  v11 = v1[50];
  v12 = *((_QWORD *)v1 + 7);
  v13 = v1[64];
  v14 = v1[65];
  v15 = v1[66];
  v17 = *v1;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v9;
  v25 = v10;
  v26 = v11;
  v27 = v12;
  v28 = v13;
  v29 = v14;
  v30 = v15;
  v16 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 152);
  sub_242B22EA0((uint64_t)&v16);
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242B2324C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x676E696E7261656CLL && a2 == 0xED00006573616850;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E756F4374696E75 && a2 == 0xE900000000000074;
    if (v6 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6572696469427369 && a2 == 0xEF6C616E6F697463;
      if (v7 || (sub_242C4925C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E65727275636572 && a2 == 0xEF74686769655774;
        if (v8 || (sub_242C4925C() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6965577475706E69 && a2 == 0xEB00000000746867;
          if (v9 || (sub_242C4925C() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 1935763810 && a2 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_242C4925C();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_242B23538(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B23578 + 4 * byte_242C56280[a1]))(0x676E696E7261656CLL, 0xED00006573616850);
}

uint64_t sub_242B23578()
{
  return 0x6E756F4374696E75;
}

uint64_t sub_242B23594()
{
  return 0x6572696469427369;
}

uint64_t sub_242B235B8()
{
  return 0x6E65727275636572;
}

uint64_t sub_242B235DC()
{
  return 0x6965577475706E69;
}

uint64_t sub_242B235FC()
{
  return 1935763810;
}

uint64_t sub_242B2360C()
{
  unsigned __int8 *v0;

  return sub_242B23538(*v0);
}

uint64_t sub_242B23614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B2324C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242B23638()
{
  sub_242B24114();
  return sub_242C494D8();
}

uint64_t sub_242B23660()
{
  sub_242B24114();
  return sub_242C494E4();
}

void LSTM.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_1();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257227B48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_64_9();
  sub_242B24114();
  sub_242C49478();
  sub_242B24150();
  OUTLINED_FUNCTION_13_35();
  if (!v0)
  {
    sub_242C49178();
    sub_242C49160();
    sub_242A97EC4();
    OUTLINED_FUNCTION_13_35();
    sub_242B2418C();
    OUTLINED_FUNCTION_13_35();
    OUTLINED_FUNCTION_13_35();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  OUTLINED_FUNCTION_0_9();
}

void LSTM.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  v4 = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257227B68);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_4_9();
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242B24114();
  sub_242C49448();
  if (v0)
  {
    v5 = 0;
  }
  else
  {
    sub_242B241C8();
    OUTLINED_FUNCTION_56_8();
    OUTLINED_FUNCTION_28_25();
    OUTLINED_FUNCTION_53_9(1);
    v8 = sub_242C490C4();
    OUTLINED_FUNCTION_53_9(2);
    v7 = sub_242C490AC();
    sub_242A97E88();
    OUTLINED_FUNCTION_56_8();
    OUTLINED_FUNCTION_28_25();
    v6 = sub_242B24204();
    OUTLINED_FUNCTION_205();
    OUTLINED_FUNCTION_56_8();
    OUTLINED_FUNCTION_28_25();
    if (!v6)
    {
      OUTLINED_FUNCTION_123_0();
      swift_release();
      OUTLINED_FUNCTION_56_8();
      OUTLINED_FUNCTION_28_25();
      OUTLINED_FUNCTION_27_22();
      OUTLINED_FUNCTION_91();
      swift_release();
      *(_BYTE *)v4 = v10;
      *(_QWORD *)(v4 + 8) = v8;
      *(_BYTE *)(v4 + 16) = v7 & 1;
      *(_QWORD *)(v4 + 24) = v10;
      *(_BYTE *)(v4 + 32) = v11;
      *(_BYTE *)(v4 + 33) = v12;
      *(_QWORD *)(v4 + 40) = v10;
      *(_BYTE *)(v4 + 48) = v11;
      *(_BYTE *)(v4 + 49) = v12;
      *(_BYTE *)(v4 + 50) = v13;
      *(_QWORD *)(v4 + 56) = v10;
      *(_BYTE *)(v4 + 64) = v11;
      *(_BYTE *)(v4 + 65) = v12;
      *(_BYTE *)(v4 + 66) = v13;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
      OUTLINED_FUNCTION_135();
      swift_release();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_27_22();
    OUTLINED_FUNCTION_72_1();
    v5 = 1;
  }
  OUTLINED_FUNCTION_23_15();
  if (v5)
    OUTLINED_FUNCTION_72_1();
  swift_release();
LABEL_7:
  swift_release();
  OUTLINED_FUNCTION_0_9();
}

_BYTE *sub_242B23C20(char *a1)
{
  char v2;

  v2 = *a1;
  return LSTM.learningPhase.setter(&v2);
}

void sub_242B23C48()
{
  LSTM.init(from:)();
}

void sub_242B23C5C()
{
  LSTM.encode(to:)();
}

uint64_t LSTM.State.hidden.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_21_25(*v1, a1);
}

void LSTM.State.hidden.setter()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_73_8();
  *v1 = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*LSTM.State.hidden.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LSTM.State.cell.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_21_25(*(_QWORD *)(v1 + 8), a1);
}

void LSTM.State.cell.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_release();
  *(_QWORD *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*LSTM.State.cell.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_242B23CE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E6564646968 && a2 == 0xE600000000000000;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1819043171 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242B23DB4(char a1)
{
  if ((a1 & 1) != 0)
    return 1819043171;
  else
    return 0x6E6564646968;
}

uint64_t sub_242B23DE0()
{
  char *v0;

  return sub_242B23DB4(*v0);
}

uint64_t sub_242B23DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B23CE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242B23E0C()
{
  sub_242B24240();
  return sub_242C494D8();
}

uint64_t sub_242B23E34()
{
  sub_242B24240();
  return sub_242C494E4();
}

void LSTM.State.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257227B80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_11();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242B24240();
  sub_242C49478();
  sub_242A792CC();
  OUTLINED_FUNCTION_13_35();
  if (!v0)
    OUTLINED_FUNCTION_13_35();
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_0_9();
}

void LSTM.State.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_18_1();
  v12 = v11;
  v14 = v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257227B90);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_9();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_242B24240();
  sub_242C49448();
  if (v10)
  {
    OUTLINED_FUNCTION_23_15();
  }
  else
  {
    OUTLINED_FUNCTION_61_10();
    OUTLINED_FUNCTION_22_20();
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_22_20();
    OUTLINED_FUNCTION_1_12();
    *v14 = a10;
    v14[1] = a10;
    OUTLINED_FUNCTION_91();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_157_0();
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242B24088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  LSTM.State.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_242B2409C()
{
  LSTM.State.encode(to:)();
}

uint64_t LSTMLayerOperationBackwardContext.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t LSTMLayerOperationBackwardContext.__deallocating_deinit()
{
  LSTMLayerOperationBackwardContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LSTMLayerOperationBackwardContext()
{
  return objc_opt_self();
}

unint64_t sub_242B24114()
{
  unint64_t result;

  result = qword_257227B50;
  if (!qword_257227B50)
  {
    result = MEMORY[0x2494EDE24](&unk_242C568F8, &type metadata for LSTM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227B50);
  }
  return result;
}

unint64_t sub_242B24150()
{
  unint64_t result;

  result = qword_257227B58;
  if (!qword_257227B58)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LearningPhase, &type metadata for LearningPhase);
    atomic_store(result, (unint64_t *)&qword_257227B58);
  }
  return result;
}

unint64_t sub_242B2418C()
{
  unint64_t result;

  result = qword_257227B60;
  if (!qword_257227B60)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for OptionalParameter, &type metadata for OptionalParameter);
    atomic_store(result, (unint64_t *)&qword_257227B60);
  }
  return result;
}

unint64_t sub_242B241C8()
{
  unint64_t result;

  result = qword_257227B70;
  if (!qword_257227B70)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LearningPhase, &type metadata for LearningPhase);
    atomic_store(result, (unint64_t *)&qword_257227B70);
  }
  return result;
}

unint64_t sub_242B24204()
{
  unint64_t result;

  result = qword_257227B78;
  if (!qword_257227B78)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for OptionalParameter, &type metadata for OptionalParameter);
    atomic_store(result, (unint64_t *)&qword_257227B78);
  }
  return result;
}

unint64_t sub_242B24240()
{
  unint64_t result;

  result = qword_257227B88;
  if (!qword_257227B88)
  {
    result = MEMORY[0x2494EDE24](&unk_242C568A8, &type metadata for LSTM.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227B88);
  }
  return result;
}

void sub_242B24284(_QWORD *a1@<X8>)
{
  sub_242B20FC8((void (*)(uint64_t *__return_ptr))LSTM.inputWeight.getter, a1);
}

void sub_242B242A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_242B21068(a1, a2, a3, a4, (void (*)(uint64_t *))LSTM.inputWeight.setter);
}

void sub_242B242BC(_QWORD *a1@<X8>)
{
  sub_242B20FC8((void (*)(uint64_t *__return_ptr))LSTM.bias.getter, a1);
}

void sub_242B242D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_242B21068(a1, a2, a3, a4, (void (*)(uint64_t *))LSTM.bias.setter);
}

uint64_t sub_242B242F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_242C48A64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_242B24370(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  void *v13;
  const void *v14;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  v10 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 8) & ~v7) + v8 > 0x18)
  {
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = (void *)(((unint64_t)a1 + v7 + 8) & ~v7);
    v14 = (const void *)(((unint64_t)a2 + v7 + 8) & ~v7);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v4))
    {
      memcpy(v13, v14, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v13, v14, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_242B24470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = __swift_getEnumTagSinglePayload(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_242B244E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_242B245A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int EnumTagSinglePayload;
  int v12;
  size_t v13;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(v9, v10, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v13);
  return a1;
}

_QWORD *sub_242B246B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_242B24764(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int EnumTagSinglePayload;
  int v12;
  size_t v13;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(v9, v10, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v13);
  return a1;
}

uint64_t sub_242B2486C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_27;
  v12 = v9 + ((v10 + 8) & ~v10);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(_WORD *)((char *)a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_27:
      if ((v7 & 0x80000000) != 0)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)a1 + v10 + 8) & ~v10, v6, v4);
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      else
      {
        v18 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((_BYTE *)a1 + v12))
    goto LABEL_27;
LABEL_20:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_242B249D8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_242B24C14()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_242B24C1C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_242B24C3C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_242B24C44()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_242B24C54()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_242B24C60()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_242B24CDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_242B24D98(uint64_t a1, uint64_t a2)
{
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_242B24DDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, v4);
  return a1;
}

_QWORD *sub_242B24E4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_242B24EBC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_242B24F0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_242B24F74(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 8) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(_WORD *)((char *)a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v8 + 8) & ~v8, v6, v4);
      v16 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((_BYTE *)a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_242B25048 + 4 * byte_242C56298[(v10 - 1)]))();
}

void sub_242B250B4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t destroy for LSTM()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LSTM(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LSTM(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  return a1;
}

void *__swift_memcpy67_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x43uLL);
}

uint64_t assignWithTake for LSTM(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  return a1;
}

uint64_t getEnumTagSinglePayload for LSTM(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 67))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LSTM(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 67) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 67) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LSTM()
{
  return &type metadata for LSTM;
}

uint64_t destroy for LSTM.State()
{
  swift_release();
  return swift_release();
}

_QWORD *_s14NeuralNetworks4LSTMV5StateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  OUTLINED_FUNCTION_91();
  return a1;
}

_QWORD *assignWithCopy for LSTM.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LSTM.State(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LSTM.State()
{
  return &type metadata for LSTM.State;
}

uint64_t method lookup function for LSTMLayerOperationBackwardContext()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for LSTM.State.CodingKeys()
{
  return &type metadata for LSTM.State.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LSTM.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_242B256FC + 4 * byte_242C562AB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_242B25730 + 4 * byte_242C562A6[v4]))();
}

uint64_t sub_242B25730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B25738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B25740);
  return result;
}

uint64_t sub_242B2574C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B25754);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_242B25758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B25760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LSTM.CodingKeys()
{
  return &type metadata for LSTM.CodingKeys;
}

uint64_t sub_242B2577C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t _s14NeuralNetworks4LSTMV5StateV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242B257D0 + 4 * byte_242C562B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242B25804 + 4 * byte_242C562B0[v4]))();
}

uint64_t sub_242B25804(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B2580C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B25814);
  return result;
}

uint64_t sub_242B25820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B25828);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242B2582C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B25834(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_242B25840()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B25850()
{
  JUMPOUT(0x2494EDE24);
}

unint64_t sub_242B25864()
{
  unint64_t result;

  result = qword_257227E98;
  if (!qword_257227E98)
  {
    result = MEMORY[0x2494EDE24](&unk_242C567C8, &type metadata for LSTM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227E98);
  }
  return result;
}

unint64_t sub_242B258A4()
{
  unint64_t result;

  result = qword_257227EA0;
  if (!qword_257227EA0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C56880, &type metadata for LSTM.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227EA0);
  }
  return result;
}

unint64_t sub_242B258E4()
{
  unint64_t result;

  result = qword_257227EA8;
  if (!qword_257227EA8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C567F0, &type metadata for LSTM.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227EA8);
  }
  return result;
}

unint64_t sub_242B25924()
{
  unint64_t result;

  result = qword_257227EB0;
  if (!qword_257227EB0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C56818, &type metadata for LSTM.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227EB0);
  }
  return result;
}

unint64_t sub_242B25964()
{
  unint64_t result;

  result = qword_257227EB8;
  if (!qword_257227EB8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C56738, &type metadata for LSTM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227EB8);
  }
  return result;
}

unint64_t sub_242B259A4()
{
  unint64_t result;

  result = qword_257227EC0;
  if (!qword_257227EC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C56760, &type metadata for LSTM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257227EC0);
  }
  return result;
}

void sub_242B259E0()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B259F0()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B25A00()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242B25A10()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242B25A20()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242B25A5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242B22E68(a1, a2, v2 + 16, *(_QWORD *)(v2 + 88), *(_BYTE *)(v2 + 96), *(_BYTE *)(v2 + 97), *(_BYTE *)(v2 + 98));
}

uint64_t sub_242B25A74(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_242B25AA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2572230F0;
  if (!qword_2572230F0)
  {
    v1 = type metadata accessor for LSTMLayerGradientOperation();
    result = MEMORY[0x2494EDE24](&unk_242C4F858, v1);
    atomic_store(result, (unint64_t *)&qword_2572230F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_47()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_6_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  uint64_t v44;

  *(_DWORD *)(v44 - 176) = 0;
  *(_OWORD *)(v44 - 208) = 0u;
  *(_OWORD *)(v44 - 192) = 0u;
  *(_OWORD *)(v44 - 224) = 0u;
  return sub_242A66290(v44 - 224, (uint64_t)&a44);
}

void OUTLINED_FUNCTION_7_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_242A78538((uint64_t *)va, 0x100000000);
}

uint64_t OUTLINED_FUNCTION_13_35()
{
  return sub_242C49184();
}

void OUTLINED_FUNCTION_14_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_242B933C0((uint64_t)&a27);
}

uint64_t OUTLINED_FUNCTION_21_25@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_22_20()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_25_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_27_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 200));
}

uint64_t OUTLINED_FUNCTION_28_25()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_29_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  return sub_242A5DC30((uint64_t)&a27);
}

const void *OUTLINED_FUNCTION_31_25()
{
  return sub_242B93328();
}

uint64_t OUTLINED_FUNCTION_32_21()
{
  return swift_release();
}

id OUTLINED_FUNCTION_35_17()
{
  uint64_t v0;

  return sub_242BC9F84(v0, v0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_38_16()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_40_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_43_18()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 82) = 1;
}

uint64_t OUTLINED_FUNCTION_44_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_45_12()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_53_9@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 184) = a1;
  return v1 - 184;
}

uint64_t OUTLINED_FUNCTION_59_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_242B4CC60(a1, a2, a3, a4, a5, v5);
}

unint64_t OUTLINED_FUNCTION_61_10()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 81) = 0;
  return sub_242A79308();
}

uint64_t OUTLINED_FUNCTION_62_10()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 224);
}

_QWORD *OUTLINED_FUNCTION_64_9()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

void *OUTLINED_FUNCTION_70_8(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x43uLL);
}

uint64_t OUTLINED_FUNCTION_73_8()
{
  return swift_release();
}

void sub_242B25CC0()
{
  __asm { BR              X10 }
}

uint64_t sub_242B25CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x24BEDF990];
  v2 = sub_242C47894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

_QWORD *sub_242B25D74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;

  v3 = v2;
  v5 = sub_242C47894();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_242B89308();
  sub_242A9E618(v8, a1);
  if (!v9)
    goto LABEL_6;
  v11 = v9;
  v29 = v10;
  v12 = sub_242B89308();
  sub_242A9E618(v12, a1);
  if (!v13)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_6:
    v20 = sub_242C0E650();
    v22 = v21;
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v23 = v20;
    v23[1] = v22;
    OUTLINED_FUNCTION_5_21((uint64_t)v23, 2);
    return v3;
  }
  v15 = v13;
  v28 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
  v16 = swift_allocObject();
  v27 = v2;
  v3 = (_QWORD *)v16;
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  sub_242B25CC0();
  v31 = *(_QWORD *)(v1 + 56);
  v30 = *(_BYTE *)(v1 + 64);
  sub_242C480E0();
  v17 = v27;
  v18 = sub_242B25F38((uint64_t)v7, v11, v29, v15, v28, &v31, &v30);
  if (v17)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_48();
    v3[2] = 0;
    OUTLINED_FUNCTION_3_19();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    v25 = v18;
    v26 = v19;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_48();
    v3[4] = v25;
    v3[5] = v26;
    OUTLINED_FUNCTION_3_19();
    swift_unknownObjectRelease();
  }
  return v3;
}

char *sub_242B25F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, unsigned __int8 *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  void (*v39)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *__return_ptr);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD v74[2];
  void (*v75)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v93 = a3;
  v94 = a5;
  v92 = a4;
  v83 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_36_11();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v74 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)v74 - v18;
  v19 = sub_242C47714();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_36_11();
  v23 = v21 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v91 = (uint64_t)v74 - v25;
  v26 = sub_242C47930();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_36_11();
  MEMORY[0x24BDAC7A8](v27);
  MEMORY[0x24BDAC7A8](v28);
  v33 = *a7;
  if (v33 <= 0xC && ((1 << v33) & 0x1777) != 0)
  {
    v74[0] = v20;
    v74[1] = v19;
    v80 = v16;
    v76 = *a6;
    v34 = a2;
    v35 = (char *)v74 - v29;
    v88 = v31;
    v89 = (uint64_t)v74 - v29;
    v86 = v30;
    v87 = v32;
    v36 = v31;
    v85 = v26;
    v77 = v33;
    ObjectType = swift_getObjectType();
    v38 = v93;
    v39 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v93 + 16);
    v84 = v34;
    v40 = ObjectType;
    v39(&v97, ObjectType, v93);
    v75 = v39;
    OUTLINED_FUNCTION_1_7((uint64_t)&v97, (uint64_t)v35);
    v41 = swift_getObjectType();
    v79 = v13;
    v42 = v41;
    v90 = v23;
    v43 = *(void (**)(uint64_t *__return_ptr))(v94 + 16);
    v43(&v97);
    OUTLINED_FUNCTION_1_7((uint64_t)&v97, v36);
    v78 = v40;
    v39(&v97, v40, v38);
    v96 = v97;
    v44 = v94;
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v43)(&v95, v42, v94);
    v45 = OUTLINED_FUNCTION_7_36();
    v46 = v91;
    sub_242B26518(v45, v47, v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v43)(&v97, v42, v44);
    v48 = v90;
    v49 = (uint64_t)v82;
    v96 = v97;
    v75(&v95, v40, v38);
    v50 = OUTLINED_FUNCTION_7_36();
    sub_242B26518(v50, v51, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 = v76;
    v97 = v76;
    sub_242C480E0();
    v53 = v87;
    OUTLINED_FUNCTION_1_7((uint64_t)&v97, v87);
    type metadata accessor for NativeTensorStorage();
    v97 = v52;
    LOBYTE(v96) = v77;
    sub_242C480E0();
    v54 = v81;
    sub_242B1D8D0(&v97, (uint64_t)&v96, 0);
    v16 = v55;
    v81 = v54;
    v56 = v85;
    OUTLINED_FUNCTION_6_46(v49, v89);
    OUTLINED_FUNCTION_26_25(v49);
    v57 = (uint64_t)v80;
    OUTLINED_FUNCTION_6_46((uint64_t)v80, v88);
    OUTLINED_FUNCTION_26_25(v57);
    v58 = v79;
    OUTLINED_FUNCTION_6_46(v79, v53);
    v59 = v56;
    v60 = v57;
    v61 = __swift_storeEnumTagSinglePayload(v58, 0, 1, v59);
    MEMORY[0x24BDAC7A8](v61);
    v74[-8] = v46;
    v74[-7] = v48;
    v62 = v84;
    v74[-6] = v83;
    v74[-5] = v62;
    v63 = v92;
    v74[-4] = v93;
    v74[-3] = v63;
    v74[-2] = v94;
    v74[-1] = v16;
    MEMORY[0x24BDAC7A8](v64);
    v74[-8] = v65;
    v74[-7] = v66;
    v74[-6] = v60;
    v74[-5] = v16;
    v74[-4] = &off_251387678;
    v74[-3] = v58;
    v74[-2] = sub_242B26BCC;
    v74[-1] = v67;
    swift_retain();
    v68 = v81;
    sub_242BF6310((uint64_t)sub_242A6AD88, (uint64_t)&v74[-10], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
    if (v68)
      swift_release_n();
    else
      swift_release();
    OUTLINED_FUNCTION_9_39();
    sub_242A6AB60(v60);
    sub_242A6AB60(v49);
    OUTLINED_FUNCTION_11_14(v87);
    OUTLINED_FUNCTION_11_14(v88);
    OUTLINED_FUNCTION_11_14(v89);
    OUTLINED_FUNCTION_11_14(v90);
    OUTLINED_FUNCTION_11_14(v91);
  }
  else
  {
    v70 = sub_242B52CB8();
    v72 = v71;
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v73 = v70;
    v73[1] = v72;
    OUTLINED_FUNCTION_5_21((uint64_t)v73, 3);
  }
  return v16;
}

_QWORD *sub_242B264C8(uint64_t a1)
{
  return sub_242B25D74(a1);
}

uint64_t sub_242B264DC(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257226088, (uint64_t (*)(uint64_t))type metadata accessor for BinaryArithmeticOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B26518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (!v4 || v4 != v5)
  {
    if (v5 >= v4)
      goto LABEL_4;
LABEL_6:
    v6 = (unsigned int *)MEMORY[0x24BEDF680];
    goto LABEL_7;
  }
  if (*(uint64_t *)(*(_QWORD *)a1 + 32) > 1)
    goto LABEL_6;
LABEL_4:
  v6 = (unsigned int *)MEMORY[0x24BEDF688];
LABEL_7:
  v7 = *v6;
  v8 = sub_242C47714();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, v7, v8);
}

uint64_t sub_242B26598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  size_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t inited;
  const void **v47;
  void *v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  size_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  size_t v70[2];
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[8];
  _BYTE v74[8];
  _BYTE v75[8];
  uint64_t v76;
  uint64_t v77;
  void *v78;

  v58 = a8;
  v57[1] = a7;
  v68 = a6;
  v61 = a5;
  v60 = a4;
  v66 = a3;
  v65 = a2;
  v67 = a1;
  v64 = sub_242C477C8();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_242C47894();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_242C47714();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v57 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v57 - v24;
  v59 = sub_242C4787C();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v26(v25, v60, v16);
  v26(v22, v61, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEDF680], v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v68, v12);
  sub_242C48A28();
  sub_242C489B0();
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, *MEMORY[0x24BEDF7E0], v64);
  v27 = v65;
  v28 = v67;
  v29 = v66;
  v30 = sub_242C47870();
  if (!v30)
  {
    v37 = sub_242B52CB8();
    v39 = v38;
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v40 = v37;
    *(_QWORD *)(v40 + 8) = v39;
    *(_BYTE *)(v40 + 16) = 4;
    return swift_willThrow();
  }
  v31 = v30;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v58 + 16))(&v72, ObjectType);
  v68 = v72;
  v33 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 16))(&v71, v33, a10);
  v34 = v71;
  v35 = *(_QWORD *)(a11 + 16);
  v36 = *(_QWORD *)(v35 + 16);
  v64 = v31;
  if (v36 > 1)
    v42 = *(_QWORD *)(v35 + 32);
  else
    v42 = 1;
  v63 = v42;
  sub_242B26C04(v28 + 136, (uint64_t)v75);
  sub_242B26C04((uint64_t)v75, (uint64_t)&v76);
  v43 = v76;
  if (!v76
    || (sub_242B26C04(v27 + 136, (uint64_t)v74), sub_242B26C04((uint64_t)v74, (uint64_t)&v77), (v44 = v77) == 0)
    || (sub_242B26C04(v29 + 136, (uint64_t)v73), sub_242B26C04((uint64_t)v73, (uint64_t)&v78), (v45 = v78) == 0))
  {
    v50 = sub_242C478DC();
    sub_242A8A510((unint64_t *)&qword_257222B60, (uint64_t (*)(uint64_t))MEMORY[0x24BEDFA10], MEMORY[0x24BEDFA18]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v51, *MEMORY[0x24BEDFA08], v50);
    sub_242C480E0();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(inited + 32) = v43;
  v47 = (const void **)(inited + 32);
  *(_QWORD *)(inited + 40) = v44;
  sub_242C480E0();
  v48 = (void *)sub_242C478E8();
  if (*(_QWORD *)(v68 + 16))
  {
    v69 = v68;
    result = sub_242C00DB8();
    if (!*(_QWORD *)(result + 16))
    {
      __break(1u);
      goto LABEL_27;
    }
    v49 = *(_QWORD *)(result + 32);
    swift_bridgeObjectRelease();
  }
  else
  {
    v49 = 0;
  }
  v70[0] = v49;
  if (*(_QWORD *)(v34 + 16))
  {
    v69 = v34;
    result = sub_242C00DB8();
    if (*(_QWORD *)(result + 16))
    {
      v52 = *(_QWORD *)(result + 32);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v52 = 0;
LABEL_18:
  v70[1] = v52;
  if (!*(_QWORD *)(v35 + 16))
  {
    v53 = 0;
    goto LABEL_22;
  }
  v69 = v35;
  result = sub_242C00DB8();
  if (!*(_QWORD *)(result + 16))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v53 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRelease();
LABEL_22:
  v54 = BNNSArithmeticFilterApplyBatch(v48, v63, 2uLL, v47, v70, v45, v53);
  swift_bridgeObjectRelease();
  if (v54)
  {
    v55 = sub_242C478DC();
    sub_242A8A510((unint64_t *)&qword_257222B60, (uint64_t (*)(uint64_t))MEMORY[0x24BEDFA10], MEMORY[0x24BEDFA18]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v56, *MEMORY[0x24BEDF9F8], v55);
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B26BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_242B26598(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9]);
}

uint64_t sub_242B26C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_46(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_7_36()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = *(_QWORD *)(v0 - 104);
  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_9_39()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t sub_242B26C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  uint64_t v9;
  uint64_t v10;

  if (a1)
  {
    MEMORY[0x24BDAC7A8](a1);
    v8[0] = v3;
    v8[1] = a3;
    v9 = v5;
    v10 = v6;
    sub_242B053D8((void (*)(void))sub_242B2764C);
  }
  else
  {
    MEMORY[0x24BDAC7A8](0);
    v9 = v3;
    v10 = a3;
    sub_242B05354((void (*)(uint64_t *__return_ptr))sub_242B27634, (uint64_t)v8);
  }
  swift_unknownObjectRelease();
  return sub_242A62524(a3);
}

_QWORD *sub_242B26D48(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2 = v1;
  v2[2] = MEMORY[0x24BEE4B00];
  swift_weakInit();
  swift_weakInit();
  v2[6] = a1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  v2[5] = sub_242B5AF3C();
  return v2;
}

uint64_t sub_242B26DB4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v9;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[10];
  char v15;
  uint64_t v16;

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16))
  {
    sub_242A61604(a2);
    if ((v9 & 1) != 0)
      return swift_endAccess();
  }
  swift_endAccess();
  if (*(_QWORD *)(a1 + 48) <= *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16))
  {
    v16 = v4;
    Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      v14[0] = 0xD000000000000036;
      v14[1] = 0x8000000242C6BF60;
      v15 = 9;
      sub_242A59170();
    }
    v12 = Strong;
    if (swift_weakLoadStrong())
    {
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      swift_release();
    }
    swift_weakLoadStrong();
    swift_weakAssign();
    swift_release();
    if (swift_weakLoadStrong())
    {
      swift_weakAssign();
      swift_release();
    }
    swift_beginAccess();
    sub_242B27668((uint64_t *)(v12 + 16));
    swift_endAccess();
    swift_release();
    swift_release();
  }
  sub_242A624E8((uint64_t)a2, (uint64_t)v14);
  swift_weakLoadStrong();
  type metadata accessor for LazyTensorFunctionExecutorCache.CacheValue();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_242B27520(v14, a3, a4);
  if (swift_weakLoadStrong())
  {
    swift_weakAssign();
    swift_release();
  }
  swift_weakAssign();
  v13 = swift_weakLoadStrong();
  swift_release();
  if (!v13)
    swift_weakAssign();
  swift_beginAccess();
  swift_retain();
  sub_242B8C958();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_242B27088@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_242A61604(a2), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_endAccess();
    v10 = OUTLINED_FUNCTION_1_49();
    swift_retain();
    if (!v10 || (swift_release(), v10 != v9))
    {
      v11 = OUTLINED_FUNCTION_0_63();
      if (v11)
      {
        v12 = v11;
        swift_release();
        if (v9 == v12)
        {
          swift_weakLoadStrong();
          swift_weakAssign();
          OUTLINED_FUNCTION_28_5();
        }
      }
      if (OUTLINED_FUNCTION_0_63())
      {
        swift_weakLoadStrong();
        swift_weakAssign();
        swift_release();
        swift_release();
      }
      if (swift_weakLoadStrong())
      {
        OUTLINED_FUNCTION_0_63();
        swift_weakAssign();
        swift_release();
        swift_release();
      }
      swift_weakAssign();
      OUTLINED_FUNCTION_1_49();
      swift_weakAssign();
      OUTLINED_FUNCTION_28_5();
      if (OUTLINED_FUNCTION_1_49())
      {
        swift_weakAssign();
        OUTLINED_FUNCTION_28_5();
      }
      swift_weakAssign();
    }
    v14 = *(_OWORD *)(v9 + 104);
    swift_unknownObjectRetain();
    result = swift_release();
    *(_OWORD *)a3 = v14;
  }
  else
  {
    result = swift_endAccess();
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
  }
  return result;
}

uint64_t sub_242B2725C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_242A61604(a2), (v8 & 1) == 0))
  {
    result = swift_endAccess();
LABEL_6:
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_endAccess();
  if (swift_weakLoadStrong())
  {
    swift_weakLoadStrong();
    swift_weakAssign();
    swift_retain();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  if (swift_weakLoadStrong())
  {
    swift_weakLoadStrong();
    swift_weakAssign();
    swift_release();
    swift_release();
  }
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v12 = Strong;
    swift_release();
    if (v12 == v9)
    {
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (swift_weakLoadStrong())
      {
        swift_weakAssign();
        swift_release();
      }
    }
  }
  v13 = swift_weakLoadStrong();
  if (v13)
  {
    v14 = v13;
    swift_release();
    if (v14 == v9)
    {
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (swift_weakLoadStrong())
      {
        swift_weakAssign();
        swift_release();
      }
    }
  }
  swift_beginAccess();
  v15 = sub_242B27668(a2);
  swift_endAccess();
  result = swift_release();
  if (!v15)
    goto LABEL_6;
  v16 = *(_OWORD *)(v15 + 104);
  swift_unknownObjectRetain();
  result = swift_release();
  *(_OWORD *)a3 = v16;
  return result;
}

uint64_t sub_242B274AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_weakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_242B274E0()
{
  sub_242B274AC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LazyTensorFunctionExecutorCache()
{
  return objc_opt_self();
}

_QWORD *sub_242B27520(const void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_weakInit();
  swift_weakInit();
  memcpy(v3 + 2, a1, 0x58uLL);
  v3[13] = a2;
  v3[14] = a3;
  swift_weakAssign();
  swift_release();
  swift_weakAssign();
  swift_release();
  return v3;
}

uint64_t sub_242B275C4()
{
  uint64_t v0;

  sub_242A62524(v0 + 16);
  swift_unknownObjectRelease();
  swift_weakDestroy();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_242B275F8()
{
  sub_242B275C4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LazyTensorFunctionExecutorCache.CacheValue()
{
  return objc_opt_self();
}

uint64_t sub_242B27634@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_242B2725C(*(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_242B2764C()
{
  uint64_t v0;

  return sub_242B26DB4(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_242B27668(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;

  v2 = v1;
  sub_242C480E0();
  v4 = sub_242A61604(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v2;
  *v2 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257229380);
  sub_242C48EF0();
  sub_242A62524(*(_QWORD *)(v8 + 48) + 88 * v4);
  v6 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v4);
  type metadata accessor for LazyTensorFunctionExecutorCache.CacheValue();
  sub_242B2776C();
  sub_242C48F14();
  *v2 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_242B2776C()
{
  unint64_t result;

  result = qword_257228048;
  if (!qword_257228048)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B094, &type metadata for LazyTensorFunction.Key);
    atomic_store(result, (unint64_t *)&qword_257228048);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_63()
{
  return swift_weakLoadStrong();
}

uint64_t OUTLINED_FUNCTION_1_49()
{
  return swift_weakLoadStrong();
}

void *sub_242B277B8(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  os_unfair_lock_s *v4;
  void *v6;

  if (qword_257220578 != -1)
    swift_once();
  v3 = (uint64_t *)(qword_257228050 + 16);
  v4 = (os_unfair_lock_s *)(qword_257228050 + 24);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_242B28078(a1, v3, (uint64_t *)&v6);
  os_unfair_lock_unlock(v4);
  if (!v1)
    a1 = v6;
  swift_release();
  return a1;
}

void sub_242B2786C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 40);
  if (!v1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_deviceWithMTLDevice_, *(_QWORD *)(v0 + 16));
    v3 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = v2;
    v4 = v2;

    v1 = 0;
  }
  v5 = v1;
  OUTLINED_FUNCTION_9();
}

void sub_242B278DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = *(_QWORD *)(v1 + 16);
  if (v2 == -1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 16) = v2 + 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
    swift_release();
    OUTLINED_FUNCTION_9();
  }
}

void sub_242B27934()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 56))
  {
    *(_QWORD *)(v0 + 56) = sub_242B27B54(v0);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_9();
}

void sub_242B27988()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 64))
  {
    *(_QWORD *)(v0 + 64) = sub_242B27C38(v0);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_9();
}

id sub_242B279DC(NSUInteger a1, int a2)
{
  uint64_t v4;
  void *v5;
  id v6;

  v4 = OUTLINED_FUNCTION_91();
  v5 = (void *)MEMORY[0x2494ED6EC](v4);
  sub_242B27E58();
  sub_242B5AFB4();
  sub_242B27ADC();
  v6 = sub_242A9A028(a1, a2);
  swift_release();
  sub_242B5AFD4();
  swift_release();
  swift_release();
  objc_autoreleasePoolPop(v5);
  return v6;
}

uint64_t sub_242B27A74()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for SharedMetalDevice();
  v0 = sub_242C480BC();
  __swift_instantiateConcreteTypeFromMangledName(qword_257228148);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v0;
  qword_257228050 = result;
  return result;
}

void sub_242B27ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + 48))
  {
    type metadata accessor for MPSAllocator();
    swift_allocObject();
    v1 = swift_unknownObjectRetain();
    sub_242A99F60(v1);
    *(_QWORD *)(v0 + 48) = v2;
    OUTLINED_FUNCTION_91();
    swift_release();
  }
  swift_retain();
  OUTLINED_FUNCTION_9();
}

id sub_242B27B54(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 16), sel_newSharedEvent);
  if (!result)
  {
    sub_242C48C38();
    sub_242C48314();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228140);
    sub_242C48E78();
    sub_242A59170();
  }
  return result;
}

id sub_242B27C38(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 16), sel_newEvent);
  if (!result)
  {
    sub_242C48C38();
    sub_242C48314();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228140);
    sub_242C48E78();
    sub_242A59170();
  }
  return result;
}

uint64_t sub_242B27D1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257228138);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 16) = a1;
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_newCommandQueue);
  if (!v4)
  {
    sub_242C48C38();
    sub_242C48314();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228140);
    sub_242C48E78();
    sub_242A59170();
  }
  v5 = v4;
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + 24) = v5;
  return v1;
}

uint64_t sub_242B27E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 72))
  {
    v1 = *(_QWORD *)(v0 + 72);
  }
  else
  {
    v2 = v0;
    type metadata accessor for UnfairLock();
    swift_allocObject();
    v1 = sub_242B5AF3C();
    *(_QWORD *)(v2 + 72) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_242B27EC8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_242B27F1C()
{
  sub_242B27EC8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedMetalDevice()
{
  return objc_opt_self();
}

id sub_242B27F5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;

  OUTLINED_FUNCTION_91();
  v11 = sub_242A6548C(a4);
  v12 = (void *)MEMORY[0x2494ED6EC](v11);
  v13 = sub_242B27E58();
  v14 = sub_242B5AB9C(v13, v5, a1, a2, a3, a4, a5);
  swift_release();
  objc_autoreleasePoolPop(v12);
  return v14;
}

id sub_242B28000(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v5 = OUTLINED_FUNCTION_91();
  v6 = (void *)MEMORY[0x2494ED6EC](v5);
  v7 = sub_242B27E58();
  v8 = sub_242B5ACA4(v7, v2, a1, a2);
  swift_release();
  objc_autoreleasePoolPop(v6);
  return v8;
}

void sub_242B28078(id a1@<X1>, uint64_t *a2@<X0>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  void *v12;
  _UNKNOWN **v13;
  id v14;
  int v15;

  sub_242A9E854((uint64_t)objc_msgSend(a1, sel_registryID), *a2);
  if (v5)
  {
    *a3 = v5;
  }
  else if (MPSSupportsMTLDevice(a1))
  {
    type metadata accessor for SharedMetalDevice();
    swift_allocObject();
    v6 = swift_unknownObjectRetain();
    v7 = sub_242B27D1C(v6);
    objc_msgSend(a1, sel_registryID);
    swift_retain();
    sub_242B8C990();
    *a3 = v7;
  }
  else
  {
    v14 = a1;
    v12 = &unk_251389888;
    v13 = &off_251389908;
    v8 = swift_unknownObjectRetain_n();
    v15 = sub_242B76DF0(v8);
    sub_242B054C4();
    swift_allocError();
    v10 = v9;
    sub_242A6FE24((uint64_t)v11, v9);
    *(_BYTE *)(v10 + 108) = 19;
    swift_willThrow();
    sub_242A6FDE8((uint64_t)v11);
  }
}

void static Tensor..< infix(_:_:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  char v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_1_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_38_17(v6);
    OUTLINED_FUNCTION_22_21();
    *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_34_19(v20, v21, (__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_45_13(v22, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_16_27();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_49();
  if (!*v4)
  {
    *v4 = v2;
    OUTLINED_FUNCTION_29_18((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_25_25(v23, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_16_27();
LABEL_10:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_4_42();
  v8 = *v4;
  v9 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v3 + 16));
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_27_23((uint64_t (*)(_QWORD *))sub_242B292DC);
  OUTLINED_FUNCTION_26_27();
  if ((v1 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v8 + 16));
    MEMORY[0x24BDAC7A8](v10);
    OUTLINED_FUNCTION_14_25();
    OUTLINED_FUNCTION_41_20((uint64_t (*)(_QWORD *))sub_242B29338);
    OUTLINED_FUNCTION_15_27();
    if ((OUTLINED_FUNCTION_12_30() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_5_48();
    OUTLINED_FUNCTION_18_30();
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_30_24();
  }
  else
  {
    OUTLINED_FUNCTION_13_36();
    *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_242C56B00;
    OUTLINED_FUNCTION_7_37((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_242C56B10);
    OUTLINED_FUNCTION_40_16();
    OUTLINED_FUNCTION_39_16();
    OUTLINED_FUNCTION_5();
    v11 = OUTLINED_FUNCTION_19_24();
    OUTLINED_FUNCTION_24_26(v11, v12, v13, 3);
    OUTLINED_FUNCTION_57_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v14 = (__n128 *)OUTLINED_FUNCTION_56_9();
    OUTLINED_FUNCTION_23_26(v14, (__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_11_6();
    v15 = OUTLINED_FUNCTION_31_26();
    OUTLINED_FUNCTION_67_8(v15, v16, v17, v18, 23, v19);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_8_29();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..<= infix(_:_:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  char v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_1_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_38_17(v6);
    OUTLINED_FUNCTION_22_21();
    *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_34_19(v20, v21, (__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_45_13(v22, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_16_27();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_49();
  if (!*v4)
  {
    *v4 = v2;
    OUTLINED_FUNCTION_29_18((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_25_25(v23, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_16_27();
LABEL_10:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_4_42();
  v8 = *v4;
  v9 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v3 + 16));
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_27_23((uint64_t (*)(_QWORD *))sub_242B29338);
  OUTLINED_FUNCTION_26_27();
  if ((v1 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v8 + 16));
    MEMORY[0x24BDAC7A8](v10);
    OUTLINED_FUNCTION_14_25();
    OUTLINED_FUNCTION_41_20((uint64_t (*)(_QWORD *))sub_242B29338);
    OUTLINED_FUNCTION_15_27();
    if ((OUTLINED_FUNCTION_12_30() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_5_48();
    OUTLINED_FUNCTION_18_30();
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_30_24();
  }
  else
  {
    OUTLINED_FUNCTION_13_36();
    *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_242C56B00;
    OUTLINED_FUNCTION_7_37((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_242C56B10);
    OUTLINED_FUNCTION_40_16();
    OUTLINED_FUNCTION_39_16();
    OUTLINED_FUNCTION_5();
    v11 = OUTLINED_FUNCTION_19_24();
    OUTLINED_FUNCTION_24_26(v11, v12, v13, 4);
    OUTLINED_FUNCTION_57_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v14 = (__n128 *)OUTLINED_FUNCTION_56_9();
    OUTLINED_FUNCTION_23_26(v14, (__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_11_6();
    v15 = OUTLINED_FUNCTION_31_26();
    OUTLINED_FUNCTION_48_16(v15, v16, v17, v18, 43, v19);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_8_29();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..> infix(_:_:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  char v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_1_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_38_17(v6);
    OUTLINED_FUNCTION_22_21();
    *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_34_19(v20, v21, (__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_45_13(v22, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_16_27();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_49();
  if (!*v4)
  {
    *v4 = v2;
    OUTLINED_FUNCTION_29_18((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_25_25(v23, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_16_27();
LABEL_10:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_4_42();
  v8 = *v4;
  v9 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v3 + 16));
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_27_23((uint64_t (*)(_QWORD *))sub_242B29338);
  OUTLINED_FUNCTION_26_27();
  if ((v1 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v8 + 16));
    MEMORY[0x24BDAC7A8](v10);
    OUTLINED_FUNCTION_14_25();
    OUTLINED_FUNCTION_41_20((uint64_t (*)(_QWORD *))sub_242B29338);
    OUTLINED_FUNCTION_15_27();
    if ((OUTLINED_FUNCTION_12_30() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_5_48();
    OUTLINED_FUNCTION_18_30();
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_30_24();
  }
  else
  {
    OUTLINED_FUNCTION_13_36();
    *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_242C56B00;
    OUTLINED_FUNCTION_7_37((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_242C56B10);
    OUTLINED_FUNCTION_40_16();
    OUTLINED_FUNCTION_39_16();
    OUTLINED_FUNCTION_5();
    v11 = OUTLINED_FUNCTION_19_24();
    OUTLINED_FUNCTION_24_26(v11, v12, v13, 1);
    OUTLINED_FUNCTION_57_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v14 = (__n128 *)OUTLINED_FUNCTION_56_9();
    OUTLINED_FUNCTION_23_26(v14, (__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_11_6();
    v15 = OUTLINED_FUNCTION_31_26();
    OUTLINED_FUNCTION_67_8(v15, v16, v17, v18, 63, v19);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_8_29();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..>= infix(_:_:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  char v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_1_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_38_17(v6);
    OUTLINED_FUNCTION_22_21();
    *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_34_19(v20, v21, (__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_45_13(v22, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_16_27();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_49();
  if (!*v4)
  {
    *v4 = v2;
    OUTLINED_FUNCTION_29_18((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_25_25(v23, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_16_27();
LABEL_10:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_4_42();
  v8 = *v4;
  v9 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v3 + 16));
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_27_23((uint64_t (*)(_QWORD *))sub_242B29338);
  OUTLINED_FUNCTION_26_27();
  if ((v1 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v8 + 16));
    MEMORY[0x24BDAC7A8](v10);
    OUTLINED_FUNCTION_14_25();
    OUTLINED_FUNCTION_41_20((uint64_t (*)(_QWORD *))sub_242B29338);
    OUTLINED_FUNCTION_15_27();
    if ((OUTLINED_FUNCTION_12_30() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_5_48();
    OUTLINED_FUNCTION_18_30();
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_30_24();
  }
  else
  {
    OUTLINED_FUNCTION_13_36();
    *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_242C56B00;
    OUTLINED_FUNCTION_7_37((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_242C56B10);
    OUTLINED_FUNCTION_40_16();
    OUTLINED_FUNCTION_39_16();
    OUTLINED_FUNCTION_5();
    v11 = OUTLINED_FUNCTION_19_24();
    OUTLINED_FUNCTION_24_26(v11, v12, v13, 2);
    OUTLINED_FUNCTION_57_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v14 = (__n128 *)OUTLINED_FUNCTION_56_9();
    OUTLINED_FUNCTION_23_26(v14, (__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_11_6();
    v15 = OUTLINED_FUNCTION_31_26();
    OUTLINED_FUNCTION_48_16(v15, v16, v17, v18, 83, v19);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_8_29();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..< infix<A>(_:_:)()
{
  sub_242B28B3C();
}

{
  sub_242B28C24();
}

uint64_t static Tensor..<= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8[5];

  v8[3] = a3;
  v8[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  Tensor.scalarType.getter();
  Tensor.init(coercing:scalarType:on:)();
  static Tensor..<= infix(_:_:)();
  return swift_release();
}

void static Tensor..> infix<A>(_:_:)()
{
  sub_242B28B3C();
}

{
  sub_242B28C24();
}

void static Tensor..>= infix<A>(_:_:)()
{
  sub_242B28B3C();
}

{
  sub_242B28C24();
}

void sub_242B28B3C()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  BOOL v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_53_10();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_40(v7, v8, v9, v10);
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_44_14(v11, v12);
  v13 = OUTLINED_FUNCTION_47_14();
  OUTLINED_FUNCTION_42_17((uint64_t)v13);
  OUTLINED_FUNCTION_51_16();
  if ((v0 & 1) != 0
    && (v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_43_19((uint64_t)v14),
        OUTLINED_FUNCTION_50_12(),
        (v5 & 1) != 0)
    || (v1 == 12 ? (v15 = v4 == 12) : (v15 = 0), !v15 ? (v16 = v1 == 12) : (v16 = 0), v16))
  {
    v18 = OUTLINED_FUNCTION_33_17(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_21_26(v18, v19, v20);
    OUTLINED_FUNCTION_20_30();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_49_13();
    OUTLINED_FUNCTION_33_17((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_46_14();
    OUTLINED_FUNCTION_6_47();
  }
  OUTLINED_FUNCTION_66_9();
  OUTLINED_FUNCTION_65_9();
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..<= infix<A>(_:_:)()
{
  sub_242B28C24();
}

void sub_242B28C24()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  BOOL v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_53_10();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_40(v7, v8, v9, v10);
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_44_14(v11, v12);
  v13 = OUTLINED_FUNCTION_47_14();
  OUTLINED_FUNCTION_42_17((uint64_t)v13);
  OUTLINED_FUNCTION_51_16();
  if ((v0 & 1) != 0
    && (v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_43_19((uint64_t)v14),
        OUTLINED_FUNCTION_50_12(),
        (v5 & 1) != 0)
    || (v1 == 12 ? (v15 = v4 == 12) : (v15 = 0), !v15 ? (v16 = v1 == 12) : (v16 = 0), v16))
  {
    v18 = OUTLINED_FUNCTION_33_17(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_21_26(v18, v19, v20);
    OUTLINED_FUNCTION_20_30();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_49_13();
    OUTLINED_FUNCTION_33_17((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_46_14();
    OUTLINED_FUNCTION_6_47();
  }
  OUTLINED_FUNCTION_64_10();
  OUTLINED_FUNCTION_65_9();
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..== infix(_:_:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  char v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_1_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_38_17(v6);
    OUTLINED_FUNCTION_22_21();
    *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_34_19(v20, v21, (__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_45_13(v22, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_16_27();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_49();
  if (!*v4)
  {
    *v4 = v2;
    OUTLINED_FUNCTION_29_18((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_25_25(v23, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_16_27();
LABEL_10:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_4_42();
  v8 = *v4;
  v9 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v3 + 16));
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_27_23((uint64_t (*)(_QWORD *))sub_242B29338);
  OUTLINED_FUNCTION_26_27();
  if ((v1 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v8 + 16));
    MEMORY[0x24BDAC7A8](v10);
    OUTLINED_FUNCTION_14_25();
    OUTLINED_FUNCTION_41_20((uint64_t (*)(_QWORD *))sub_242B29338);
    OUTLINED_FUNCTION_15_27();
    if ((OUTLINED_FUNCTION_12_30() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_5_48();
    OUTLINED_FUNCTION_18_30();
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_30_24();
  }
  else
  {
    OUTLINED_FUNCTION_13_36();
    *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_242C56B00;
    OUTLINED_FUNCTION_7_37((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_242C56B10);
    OUTLINED_FUNCTION_40_16();
    OUTLINED_FUNCTION_39_16();
    OUTLINED_FUNCTION_5();
    v11 = OUTLINED_FUNCTION_19_24();
    OUTLINED_FUNCTION_24_26(v11, v12, v13, 0);
    OUTLINED_FUNCTION_57_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v14 = (__n128 *)OUTLINED_FUNCTION_56_9();
    OUTLINED_FUNCTION_23_26(v14, (__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_11_6();
    v15 = OUTLINED_FUNCTION_31_26();
    OUTLINED_FUNCTION_48_16(v15, v16, v17, v18, 200, v19);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_8_29();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..!= infix(_:_:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  char v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_1_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_38_17(v6);
    OUTLINED_FUNCTION_22_21();
    *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_34_19(v20, v21, (__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_45_13(v22, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_16_27();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_49();
  if (!*v4)
  {
    *v4 = v2;
    OUTLINED_FUNCTION_29_18((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_25_25(v23, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_16_27();
LABEL_10:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_10_32();
  OUTLINED_FUNCTION_4_42();
  v8 = *v4;
  v9 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v3 + 16));
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_27_23((uint64_t (*)(_QWORD *))sub_242B29338);
  OUTLINED_FUNCTION_26_27();
  if ((v1 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_2_55(*(_QWORD *)(v8 + 16));
    MEMORY[0x24BDAC7A8](v10);
    OUTLINED_FUNCTION_14_25();
    OUTLINED_FUNCTION_41_20((uint64_t (*)(_QWORD *))sub_242B29338);
    OUTLINED_FUNCTION_15_27();
    if ((OUTLINED_FUNCTION_12_30() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_5_48();
    OUTLINED_FUNCTION_18_30();
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_30_24();
  }
  else
  {
    OUTLINED_FUNCTION_13_36();
    *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_242C56B00;
    OUTLINED_FUNCTION_7_37((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_242C56B10);
    OUTLINED_FUNCTION_40_16();
    OUTLINED_FUNCTION_39_16();
    OUTLINED_FUNCTION_5();
    v11 = OUTLINED_FUNCTION_19_24();
    OUTLINED_FUNCTION_24_26(v11, v12, v13, 5);
    OUTLINED_FUNCTION_57_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v14 = (__n128 *)OUTLINED_FUNCTION_56_9();
    OUTLINED_FUNCTION_23_26(v14, (__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_11_6();
    v15 = OUTLINED_FUNCTION_31_26();
    OUTLINED_FUNCTION_48_16(v15, v16, v17, v18, 220, v19);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_8_29();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor..== infix<A>(_:_:)()
{
  sub_242B29154();
}

{
  sub_242B29224();
}

void static Tensor..!= infix<A>(_:_:)()
{
  sub_242B29154();
}

{
  sub_242B29224();
}

void sub_242B29154()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  BOOL v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_53_10();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_40(v7, v8, v9, v10);
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_44_14(v11, v12);
  v13 = OUTLINED_FUNCTION_47_14();
  OUTLINED_FUNCTION_42_17((uint64_t)v13);
  OUTLINED_FUNCTION_51_16();
  if ((v0 & 1) != 0
    && (v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_43_19((uint64_t)v14),
        OUTLINED_FUNCTION_50_12(),
        (v5 & 1) != 0)
    || (v1 == 12 ? (v15 = v4 == 12) : (v15 = 0), !v15 ? (v16 = v1 == 12) : (v16 = 0), v16))
  {
    v18 = OUTLINED_FUNCTION_33_17(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_21_26(v18, v19, v20);
    OUTLINED_FUNCTION_20_30();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_49_13();
    OUTLINED_FUNCTION_33_17((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_46_14();
    OUTLINED_FUNCTION_6_47();
  }
  OUTLINED_FUNCTION_66_9();
  OUTLINED_FUNCTION_65_9();
  OUTLINED_FUNCTION_13_11();
}

void sub_242B29224()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  BOOL v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_53_10();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_40(v7, v8, v9, v10);
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_44_14(v11, v12);
  v13 = OUTLINED_FUNCTION_47_14();
  OUTLINED_FUNCTION_42_17((uint64_t)v13);
  OUTLINED_FUNCTION_51_16();
  if ((v0 & 1) != 0
    && (v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_43_19((uint64_t)v14),
        OUTLINED_FUNCTION_50_12(),
        (v5 & 1) != 0)
    || (v1 == 12 ? (v15 = v4 == 12) : (v15 = 0), !v15 ? (v16 = v1 == 12) : (v16 = 0), v16))
  {
    v18 = OUTLINED_FUNCTION_33_17(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_21_26(v18, v19, v20);
    OUTLINED_FUNCTION_20_30();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_49_13();
    OUTLINED_FUNCTION_33_17((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_46_14();
    OUTLINED_FUNCTION_6_47();
  }
  OUTLINED_FUNCTION_64_10();
  OUTLINED_FUNCTION_65_9();
  OUTLINED_FUNCTION_13_11();
}

BOOL sub_242B292DC(uint64_t *a1)
{
  uint64_t v1;

  return sub_242B713B0(a1, *(uint64_t **)(v1 + 16));
}

unint64_t sub_242B292F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257222B68;
  if (!qword_257222B68)
  {
    v1 = type metadata accessor for BinaryComparisonOperation();
    result = MEMORY[0x2494EDE24](&unk_242C600A0, v1);
    atomic_store(result, (unint64_t *)&qword_257222B68);
  }
  return result;
}

BOOL sub_242B29338(uint64_t *a1)
{
  return sub_242B292DC(a1);
}

void OUTLINED_FUNCTION_1_50(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 352) = a1;
}

uint64_t OUTLINED_FUNCTION_2_55@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  result = *(_QWORD *)(a1 + 152);
  *v1 = result;
  *(_QWORD *)(v2 - 280) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_49()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 280) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v2 - 216) = *(_QWORD *)(v1 + 152);
  return static ShapeInference.broadcasting(_:_:)();
}

uint64_t OUTLINED_FUNCTION_4_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 280) = v0;
  *(_QWORD *)(v2 - 216) = v1;
  return sub_242B5E498((_QWORD *)(v2 - 216), (uint64_t *)(v2 - 208));
}

uint64_t OUTLINED_FUNCTION_5_48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 336) = v0;
  *(_BYTE *)(v1 - 337) = 12;
  return sub_242A66290(v1 - 208, v1 - 280);
}

void OUTLINED_FUNCTION_6_47()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 144) = 0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  Tensor.init(coercing:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_7_37@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = 73;
  *(_WORD *)(v2 + 56) = 2;
  return type metadata accessor for BinaryComparisonOperation();
}

uint64_t OUTLINED_FUNCTION_8_29()
{
  uint64_t v0;
  uint64_t (**v1)(_QWORD, _QWORD);
  uint64_t v2;

  return sub_242BC9830(v0, v1, 0, v2 - 280, *(uint64_t **)(v2 - 352));
}

uint64_t OUTLINED_FUNCTION_9_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_32()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 280) = v0;
  *(_QWORD *)(v2 - 216) = v1;
  return sub_242B5E498((_QWORD *)(v2 - 216), (uint64_t *)(v2 - 208));
}

uint64_t OUTLINED_FUNCTION_11_33()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_12_30()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)v1 = 0u;
  return sub_242B64764(0, v0);
}

void OUTLINED_FUNCTION_13_36()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = v0;
  *(_BYTE *)(v1 - 272) = 12;
}

uint64_t OUTLINED_FUNCTION_14_25()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_15_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_18_30()
{
  sub_242B65F7C();
}

uint64_t OUTLINED_FUNCTION_19_24()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_20_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return Tensor.init<A>(_:scalarType:on:)(v1, v2 - 192, v0, (_QWORD *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_21_26(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v5 - 144) = 0;
  *(_OWORD *)(v5 - 176) = 0u;
  *(_OWORD *)(v5 - 160) = 0u;
  *(_OWORD *)(v5 - 192) = 0u;
  return nullsub_1(v3, v4, a3);
}

void OUTLINED_FUNCTION_22_21()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 208) = v0;
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_23_26(__n128 *a1, __n128 a2)
{
  unint64_t v2;
  unint64_t v3;

  a1[1] = a2;
  a1[2].n128_u64[0] = v3;
  a1[2].n128_u64[1] = v2;
  return swift_retain();
}

void OUTLINED_FUNCTION_24_26(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_242C0EC44(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_25_25@<X0>(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + 40) = a2;
  *(_BYTE *)(v3 - 152) = a1;
  *(_BYTE *)(v3 - 100) = 8;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_26_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_27_23(uint64_t (*a1)(_QWORD *))
{
  return sub_242B6DE24(a1);
}

void OUTLINED_FUNCTION_29_18(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + 8) = a1;
  *(_BYTE *)(v3 - 184) = 6;
  *(_QWORD *)(v2 + 32) = v1;
}

void OUTLINED_FUNCTION_30_24()
{
  uint64_t v0;

  **(_QWORD **)(v0 - 352) = *(_QWORD *)(v0 - 216);
}

uint64_t OUTLINED_FUNCTION_31_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_33_17@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

unint64_t OUTLINED_FUNCTION_34_19(unint64_t result, unint64_t a2, __n128 a3)
{
  __n128 *v3;
  uint64_t v4;

  v3[1] = a3;
  *(_BYTE *)(v4 - 176) = 6;
  v3[2].n128_u64[1] = result;
  v3[3].n128_u64[0] = a2;
  return result;
}

void OUTLINED_FUNCTION_38_17(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 208) = a1;
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_39_16()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_40_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_41_20(uint64_t (*a1)(_QWORD *))
{
  return sub_242B6DE24(a1);
}

BOOL OUTLINED_FUNCTION_42_17(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

BOOL OUTLINED_FUNCTION_43_19(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

uint64_t OUTLINED_FUNCTION_44_14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void OUTLINED_FUNCTION_45_13(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + 56) = a2;
  *(_BYTE *)(v3 - 136) = a1;
  *(_BYTE *)(v3 - 100) = 0;
}

void OUTLINED_FUNCTION_46_14()
{
  Tensor.scalarType.getter();
}

void *OUTLINED_FUNCTION_47_14()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_48_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_242B76A50(a1, a2, a3, a4, a5, a6, 9, 2);
}

uint64_t *OUTLINED_FUNCTION_49_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 96) = v1;
  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_50_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_8()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_56_9()
{
  return swift_initStackObject();
}

unint64_t OUTLINED_FUNCTION_57_13()
{
  return sub_242B292F8();
}

uint64_t OUTLINED_FUNCTION_60_8()
{
  return swift_setDeallocating();
}

uint64_t OUTLINED_FUNCTION_64_10()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 - 200))(v0, v1 - 88);
}

uint64_t OUTLINED_FUNCTION_65_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_66_9()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 - 200))(v1 - 88, v0);
}

uint64_t OUTLINED_FUNCTION_67_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_242B76A50(a1, a2, a3, a4, a5, a6, 8, 2);
}

uint64_t sub_242B297A8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_242B297F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_242C48D7C();
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      swift_retain();
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

void sub_242B298A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_242AC3610();
    v3 = sub_242B3AAEC(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = a1 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v16 = v1;
          v17 = v4;
          v7 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
          v8 = *v7;
          v9 = v7[1];
          v10 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v5);
          v11 = v10[1];
          v18 = v8;
          v19 = *v10;
          v13 = *(_QWORD *)(v20 + 16);
          v12 = *(_QWORD *)(v20 + 24);
          sub_242C480E0();
          sub_242C480E0();
          if (v13 >= v12 >> 1)
            sub_242AC3610();
          *(_QWORD *)(v20 + 16) = v13 + 1;
          v14 = (_QWORD *)(v20 + 32 * v13);
          v14[4] = v18;
          v14[5] = v9;
          v14[6] = v19;
          v14[7] = v11;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v6 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v17 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v15 = sub_242C48BB4();
          --v1;
          if (v16 == 1)
            return;
          v5 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(a1 + 36);
            if (v15 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_242B29A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_242AC3648();
    v3 = sub_242B3AAEC(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = a1 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v14 = v1;
          v15 = v4;
          v7 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
          v8 = v7[1];
          v16 = *v7;
          v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
          v11 = *(_QWORD *)(v17 + 16);
          v10 = *(_QWORD *)(v17 + 24);
          sub_242C480E0();
          swift_retain();
          if (v11 >= v10 >> 1)
            sub_242AC3648();
          *(_QWORD *)(v17 + 16) = v11 + 1;
          v12 = (_QWORD *)(v17 + 24 * v11);
          v12[4] = v16;
          v12[5] = v8;
          v12[6] = v9;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v6 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v15 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v13 = sub_242C48BB4();
          --v1;
          if (v14 == 1)
            return;
          v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_242B29C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v18;

  v18 = MEMORY[0x24BEE4AF8];
  sub_242AC3220();
  v4 = *(_QWORD *)(a1 + 16);
  sub_242C480E0();
  if (v4)
  {
    v5 = 0;
    v6 = (_BYTE *)(a1 + 40);
    do
    {
      v7 = *((_QWORD *)v6 - 1);
      v8 = *v6;
      sub_242C480E0();
      sub_242B3AB94(a3, v5, a2, &qword_257228200, (uint64_t (*)(uint64_t))type metadata accessor for SplitOperation, (uint64_t)&unk_242C5A910, (uint64_t (*)(uint64_t))sub_242BCC59C);
      v10 = v9;
      v12 = v11;
      v13 = *(_QWORD *)(v18 + 16);
      if (v13 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_242AC3220();
      ++v5;
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = v18 + 32 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v12;
      *(_QWORD *)(v14 + 48) = v7;
      *(_BYTE *)(v14 + 56) = v8;
      v6 += 16;
    }
    while (v4 != v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v18;
}

uint64_t sub_242B29D9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;

  v2 = sub_242C49208();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = a1;
  Tensor.scalarType.getter();
  (*(void (**)(uint64_t *__return_ptr))(v6 + 32))(&v15);
  v7 = v15;
  v8 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_91();
  if (v7 == 2)
  {
    v9 = sub_242A9F570((uint64_t)sub_242B3AF98, a1);
  }
  else
  {
    v10 = OUTLINED_FUNCTION_91();
    sub_242BC9F84(v10, v8, 0, 0);
    OUTLINED_FUNCTION_135();
    swift_unknownObjectRelease();
    v14 = a1;
    v13[7] = 2;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE38B8], v2);
    Tensor.cast(to:roundingRule:)();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    v9 = sub_242B29D9C(v15);
  }
  v11 = v9;
  OUTLINED_FUNCTION_135();
  return v11;
}

void sub_242B29EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (!a1)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 152);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v3 + 32);
    v6 = 1;
    v7 = v5;
    v8 = v4;
    do
    {
      v9 = *v7++;
      v10 = v6 * v9;
      if ((unsigned __int128)(v6 * (__int128)v9) >> 64 != (v6 * v9) >> 63)
      {
        __break(1u);
        goto LABEL_14;
      }
      v6 = v10;
      --v8;
    }
    while (v8);
    if ((unint64_t)(v10 - 0x2000000000000000) >> 62 != 3)
      goto LABEL_15;
    v11 = 1;
    while (1)
    {
      v12 = *v5++;
      v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
        break;
      v11 = v13;
      if (!--v4)
        goto LABEL_12;
    }
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = 1;
LABEL_12:
  sub_242C37BCC(a1, v13);
}

uint64_t sub_242B29F94()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  OUTLINED_FUNCTION_18_1();
  v1 = v0;
  if (v0 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_37_0();
  for (; v2; v2 = sub_242C48FC8())
  {
    v3 = 4;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v3 - 4, v1);
      else
        OUTLINED_FUNCTION_39_0();
      v4 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v5 = sub_242B89308();
      if (v5 == sub_242B89308())
      {
        OUTLINED_FUNCTION_50_0();
      }
      else
      {
        sub_242BC97A8();
        if (!v6)
        {
          OUTLINED_FUNCTION_81();
          OUTLINED_FUNCTION_50_0();
LABEL_17:
          OUTLINED_FUNCTION_17_1();
          return 0;
        }
        if (object_getClass(v6) != (Class)_TtC14NeuralNetworks17ConstantOperation)
        {
          OUTLINED_FUNCTION_81();
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_49_4();
          goto LABEL_17;
        }
        OUTLINED_FUNCTION_50_0();
        OUTLINED_FUNCTION_49_4();
      }
      ++v3;
      if (v4 == v2)
        goto LABEL_20;
    }
    __break(1u);
LABEL_19:
    OUTLINED_FUNCTION_37_0();
  }
LABEL_20:
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_81();
  return 1;
}

uint64_t sub_242B2A0E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B2A114 + 4 * byte_242C56B20[a1]))(6579297, 0xE300000000000000);
}

uint64_t sub_242B2A114()
{
  return 6452595;
}

uint64_t sub_242B2A120()
{
  return 7107949;
}

uint64_t sub_242B2A12C()
{
  return 0x7669645F6C616572;
}

uint64_t sub_242B2A144()
{
  return 7827312;
}

uint64_t sub_242B2A150()
{
  return 0x6D756D6978616DLL;
}

uint64_t sub_242B2A178(uint64_t a1)
{
  return a1 + 2828;
}

uint64_t sub_242B2A180(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B2A1B0 + 4 * byte_242C56B28[a1]))(7235955, 0xE300000000000000);
}

uint64_t sub_242B2A1B0()
{
  return 7561825;
}

uint64_t sub_242B2A1BC()
{
  return 1936679777;
}

uint64_t sub_242B2A1CC()
{
  return 0x68736F6361;
}

uint64_t sub_242B2A220()
{
  return 1818846563;
}

uint64_t sub_242B2A230()
{
  return 7565155;
}

uint64_t sub_242B2A244()
{
  return 1752395619;
}

uint64_t sub_242B2A254()
{
  return 7370853;
}

uint64_t sub_242B2A260()
{
  return 846231653;
}

uint64_t sub_242B2A270()
{
  return 0x726F6F6C66;
}

uint64_t sub_242B2A284()
{
  return 0x797469746E656469;
}

uint64_t sub_242B2A29C()
{
  return 6778732;
}

uint64_t sub_242B2A2A8()
{
  return 0x636F727069636572;
}

uint64_t sub_242B2A2C4()
{
  return 0x646E756F72;
}

uint64_t sub_242B2A2D8()
{
  return 0x7472717372;
}

uint64_t sub_242B2A2EC()
{
  return 1852270963;
}

uint64_t sub_242B2A2FC()
{
  return 1752066419;
}

uint64_t sub_242B2A310()
{
  return 1953657203;
}

uint64_t sub_242B2A320()
{
  return 0x657261757173;
}

uint64_t sub_242B2A334()
{
  return 7233908;
}

uint64_t sub_242B2A340()
{
  return 1752064372;
}

uint64_t sub_242B2A350(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a2();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  v7 = a3(v6);
  v8 = OUTLINED_FUNCTION_34();
  a4(v8);
  return v7;
}

uint64_t sub_242B2A3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  char v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  OUTLINED_FUNCTION_266();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220F60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222998);
  if (swift_dynamicCast())
  {
    sub_242A64518(v35, (uint64_t)v31);
    v3 = v33;
    v4 = v34;
    v5 = __swift_project_boxed_opaque_existential_1(v31, v33);
    OUTLINED_FUNCTION_275((uint64_t)v5, v6, &qword_257221F80, (uint64_t (*)(uint64_t))type metadata accessor for ConstantOperation, (uint64_t)&unk_242C4C02C);
    v8 = v7;
    v10 = v9;
    OUTLINED_FUNCTION_202_0(v0 + 88, v9, v11, v12, v13, v14, v15, v16, v30);
    sub_242AFDFA8((uint64_t)v5, v8, v10, (uint64_t)v35, v3, v4);
    OUTLINED_FUNCTION_47();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_242A9E4C0((uint64_t)v35);
    v31[0] = v1;
    v31[1] = v2;
    v32 = 8;
    v18 = OUTLINED_FUNCTION_266();
    OUTLINED_FUNCTION_275(v18, v19, &qword_257221F80, (uint64_t (*)(uint64_t))type metadata accessor for ConstantOperation, (uint64_t)&unk_242C4C02C);
    v21 = v20;
    v23 = v22;
    OUTLINED_FUNCTION_202_0(v0 + 88, v22, v24, v25, v26, v27, v28, v29, v30);
    sub_242AFD064((uint64_t)v31, v21, v23);
    swift_unknownObjectRelease();
    return OUTLINED_FUNCTION_108();
  }
}

uint64_t sub_242B2A568()
{
  return sub_242B2A3F4();
}

uint64_t sub_242B2A57C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional(v3))
  {
    v6 = v5;
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_unknownObjectRetain();
    v8(a1, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  else
  {
    v10 = swift_getObjectType();
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v10, v4);
    v13 = v12;
    sub_242B00DA8();
    OUTLINED_FUNCTION_24_1();
    *(_QWORD *)v14 = v11;
    *(_QWORD *)(v14 + 8) = v13;
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    *(_BYTE *)(v14 + 32) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_242B2A66C(uint64_t a1)
{
  return sub_242B2A57C(a1);
}

uint64_t sub_242B2A680()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0x65725F796B61656CLL;
  if (*(_BYTE *)(v0 + 128) == 1)
    v1 = 0x64696F6D676973;
  if (*(_BYTE *)(v0 + 128))
    return v1;
  else
    return 6713957;
}

uint64_t sub_242B2A6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (*(_BYTE *)(v0 + 128) == 2)
  {
    if ((*(_BYTE *)(v0 + 136) & 1) != 0)
    {
      sub_242C48C38();
      swift_bridgeObjectRelease();
      sub_242B0F28C();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      sub_242A59170();
    }
    v1 = *(unsigned int *)(v0 + 132);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(inited + 32) = 0x6168706C61;
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    *(_QWORD *)(inited + 48) = v1;
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v3 = sub_242C480BC();
    sub_242A5AFE0(inited, v4, v5, v6, v7, v8, v9, v10, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v3);
    v12 = v11;
    swift_bridgeObjectRelease();
    v34 = v12;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v13 = MEMORY[0x24BEE4AF8];
    v14 = sub_242C480BC();
    sub_242A5AFE0(v13, v15, v16, v17, v18, v19, v20, v21, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v14);
    v34 = v22;
  }
  sub_242A5D5BC();
  return v34;
}

void sub_242B2A894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v3 = sub_242B2A680();
  v42 = v4;
  v45 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_2_56(inited, (__n128)xmmword_242C4B7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v6 = OUTLINED_FUNCTION_163_1();
  v7 = OUTLINED_FUNCTION_24_27(v6);
  v8 = OUTLINED_FUNCTION_4_0();
  v48 = v7;
  OUTLINED_FUNCTION_23_27(v8);
  v10 = v7;
  v9 = v49;
  v11 = sub_242B2A6D8();
  v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v14 = (__n128 *)OUTLINED_FUNCTION_228_0();
  OUTLINED_FUNCTION_105_2(v14, v15, v16, v17, v18, v19, v20, v21, v38, a1, v42, v45, v22);
  OUTLINED_FUNCTION_227_0(v2, 0, v23, &qword_257221338, (uint64_t (*)(uint64_t))type metadata accessor for ActivationOperation, (uint64_t)&unk_242C54FA0, sub_242BCC778);
  v14[2].n128_u64[0] = v24;
  v14[2].n128_u64[1] = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v26 = OUTLINED_FUNCTION_104_2();
  *(_OWORD *)(v26 + 16) = xmmword_242C4B7D0;
  sub_242B0560C(v26 + 32);
  v27 = *(_BYTE *)(v26 + 40);
  v14[3].n128_u64[0] = *(_QWORD *)(v26 + 32);
  v14[3].n128_u8[8] = v27;
  swift_setDeallocating();
  OUTLINED_FUNCTION_0_2();
  sub_242B7130C();
  v28 = sub_242C480BC();
  v29 = OUTLINED_FUNCTION_229_0(v28);
  v30 = OUTLINED_FUNCTION_3_6();
  v48 = v29;
  OUTLINED_FUNCTION_20_31(v30, v31, v32, v33, v34, v35, v36, v37, v39, v41, v43, v46, 1, 2);
  OUTLINED_FUNCTION_17_27(v2 + 48);
  sub_242AFE700(v47, v44, v10, v9, v11, v13, v29, v49, (uint64_t)&v48);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_112_2();
}

void sub_242B2AA70(uint64_t a1)
{
  sub_242B2A894(a1);
}

#error "242B2AB44: call analysis failed (funcsize=90)"

uint64_t sub_242B2AC10()
{
  return sub_242B2AA84();
}

void sub_242B2AC24(uint64_t a1)
{
  uint64_t v1;

  sub_242B2B53C(a1, v1);
}

void sub_242B2AC3C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(&v0);
  swift_release();
  sub_242BFC654();
}

uint64_t sub_242B2ACA8(void (*a1)(uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[9];

  swift_release();
  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(v5);
  swift_release();
  v2 = v5[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_242C4B7D0;
  v5[0] = v2;
  a1(v5);
  swift_release();
  swift_release();
  swift_release();
  return v3;
}

void sub_242B2AD68(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for TensorHandle();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  swift_retain();
  sub_242BC995C();
  *a1 = v3;
}

uint64_t sub_242B2ADB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t), unint64_t *a7, uint64_t (*a8)(uint64_t))
{
  uint64_t v8;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t (*v46)(uint64_t);
  _QWORD v47[30];

  __swift_instantiateConcreteTypeFromMangledName(a5);
  inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  OUTLINED_FUNCTION_39_0();
  v17 = sub_242C480BC();
  *(_QWORD *)(inited + 16) = a2;
  *(_QWORD *)(inited + 24) = v17;
  v18 = a6(inited, a3, a4);
  if (v8)
  {
    swift_setDeallocating();
    sub_242B395FC((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
    return swift_deallocClassInstance();
  }
  v20 = (_QWORD *)v18;
  v45 = a7;
  v21 = (_QWORD *)sub_242C480BC();
  v46 = (uint64_t (*)(uint64_t))v20[2];
  if (v46)
  {
    v42 = a8;
    v43 = a1;
    v44 = a2;
    OUTLINED_FUNCTION_0_2();
    a8 = 0;
    while (1)
    {
      v22 = v20;
      OUTLINED_FUNCTION_91();
      sub_242BC9724();
      a2 = v23;
      v25 = v24;
      OUTLINED_FUNCTION_135();
      swift_isUniquelyReferenced_nonNull_native();
      v47[0] = v21;
      v20 = v21;
      v26 = sub_242A61310(a2, v25);
      v28 = v21[2];
      v29 = (v27 & 1) == 0;
      v21 = (_QWORD *)(v28 + v29);
      if (__OFADD__(v28, v29))
        break;
      v30 = v26;
      a1 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A0);
      v20 = v47;
      if ((sub_242C48EF0() & 1) != 0)
      {
        v20 = (_QWORD *)v47[0];
        v31 = sub_242A61310(a2, v25);
        if ((a1 & 1) != (v32 & 1))
          goto LABEL_25;
        v30 = v31;
      }
      v21 = (_QWORD *)v47[0];
      if ((a1 & 1) != 0)
      {
        *(_QWORD *)(*(_QWORD *)(v47[0] + 56) + 8 * v30) = a8;
        v20 = v22;
      }
      else
      {
        *(_QWORD *)(v47[0] + 8 * (v30 >> 6) + 64) |= 1 << v30;
        v33 = (uint64_t *)(v21[6] + 16 * v30);
        *v33 = a2;
        v33[1] = v25;
        *(_QWORD *)(v21[7] + 8 * v30) = a8;
        v34 = v21[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_22;
        v20 = v22;
        v21[2] = v36;
        OUTLINED_FUNCTION_32_0();
      }
      OUTLINED_FUNCTION_35();
      swift_bridgeObjectRelease();
      a8 = (uint64_t (*)(uint64_t))((char *)a8 + 1);
      if (v46 == a8)
      {
        OUTLINED_FUNCTION_136();
        a2 = v44;
        a8 = v42;
        a1 = v43;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (qword_2572205A8 == -1)
      goto LABEL_16;
  }
  swift_once();
LABEL_16:
  sub_242B297F4((uint64_t)v20);
  OUTLINED_FUNCTION_136();
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v47[0]) = 0;
  v47[1] = MEMORY[0x24BEE4B08];
  v37 = OUTLINED_FUNCTION_44_0();
  if (sub_242BABFE0(v37, (char *)v47))
  {
    sub_242BAA030();
    v39 = v38;
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_135();
  }
  else
  {
    OUTLINED_FUNCTION_3_6();
    v39 = MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(v39 + 16))
  {
    sub_242A670D8(v39 + 32, (uint64_t)v47);
    OUTLINED_FUNCTION_4_0();
    v40 = sub_242A8A510(v45, a8, (uint64_t)&unk_242C62B2C);
    v41 = sub_242B3919C();
    OUTLINED_FUNCTION_33();
    sub_242B3851C((uint64_t)v47, a2, v40, v41, (uint64_t)v21, a1);
    sub_242A6945C(v47);
    swift_release();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_47();
    return OUTLINED_FUNCTION_47();
  }
  else
  {
    __break(1u);
LABEL_25:
    result = sub_242C492EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_242B2B15C(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _BOOL8 v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[30];

  __swift_instantiateConcreteTypeFromMangledName(&qword_257228260);
  inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  swift_retain();
  v8 = sub_242C480BC();
  *(_QWORD *)(inited + 16) = a2;
  *(_QWORD *)(inited + 24) = v8;
  v9 = sub_242B36038(a3);
  if (v3)
  {
    swift_setDeallocating();
    sub_242B395FC((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
    return swift_deallocClassInstance();
  }
  v11 = (_QWORD *)v9;
  v12 = (_QWORD *)sub_242C480BC();
  v36 = v11[2];
  if (v36)
  {
    v34 = a1;
    v35 = a2;
    sub_242C480E0();
    a2 = 0;
    while (1)
    {
      v13 = v11;
      swift_retain();
      sub_242BC9724();
      v15 = v14;
      a1 = v16;
      swift_release();
      swift_isUniquelyReferenced_nonNull_native();
      v37[0] = v12;
      v11 = v12;
      v17 = sub_242A61310(v15, a1);
      v19 = v12[2];
      v20 = (v18 & 1) == 0;
      v12 = (_QWORD *)(v19 + v20);
      if (__OFADD__(v19, v20))
        break;
      v21 = v17;
      v22 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A0);
      v11 = v37;
      if ((sub_242C48EF0() & 1) != 0)
      {
        v11 = (_QWORD *)v37[0];
        v23 = sub_242A61310(v15, a1);
        if ((v22 & 1) != (v24 & 1))
          goto LABEL_25;
        v21 = v23;
      }
      v12 = (_QWORD *)v37[0];
      if ((v22 & 1) != 0)
      {
        *(_QWORD *)(*(_QWORD *)(v37[0] + 56) + 8 * v21) = a2;
        v11 = v13;
      }
      else
      {
        *(_QWORD *)(v37[0] + 8 * (v21 >> 6) + 64) |= 1 << v21;
        v25 = (uint64_t *)(v12[6] + 16 * v21);
        *v25 = v15;
        v25[1] = a1;
        *(_QWORD *)(v12[7] + 8 * v21) = a2;
        v26 = v12[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_22;
        v11 = v13;
        v12[2] = v28;
        sub_242C480E0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v36 == ++a2)
      {
        swift_bridgeObjectRelease();
        a2 = v35;
        a1 = v34;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (qword_2572205A8 == -1)
      goto LABEL_16;
  }
  swift_once();
LABEL_16:
  sub_242B297F4((uint64_t)v11);
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v37[0]) = 0;
  v37[1] = MEMORY[0x24BEE4B08];
  v29 = sub_242C480E0();
  if (sub_242BABFE0(v29, (char *)v37))
  {
    sub_242BAA030();
    v31 = v30;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(v31 + 16))
  {
    sub_242A670D8(v31 + 32, (uint64_t)v37);
    swift_bridgeObjectRelease();
    v32 = sub_242A8A510(&qword_2572281D0, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormGradientOperation, (uint64_t)&unk_242C5E3B0);
    v33 = sub_242B3919C();
    sub_242C480E0();
    sub_242B3851C((uint64_t)v37, a2, v32, v33, (uint64_t)v12, a1);
    sub_242A6945C(v37);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
LABEL_25:
    result = sub_242C492EC();
    __break(1u);
  }
  return result;
}

void sub_242B2B53C(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257228248);
  inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  swift_retain();
  v4 = sub_242C480BC();
  *(_QWORD *)(inited + 16) = a2;
  *(_QWORD *)(inited + 24) = v4;
  sub_242B2AC3C();
}

uint64_t sub_242B2B8F0(uint64_t a1, uint64_t a2, char a3, float a4, float a5)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  _BOOL8 v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[30];

  __swift_instantiateConcreteTypeFromMangledName(&qword_257228258);
  inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  swift_retain();
  v12 = sub_242C480BC();
  *(_QWORD *)(inited + 16) = a2;
  *(_QWORD *)(inited + 24) = v12;
  v13 = sub_242B35B58(a4, a5, inited, a3);
  if (v5)
  {
    swift_setDeallocating();
    sub_242B395FC((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
    return swift_deallocClassInstance();
  }
  v15 = (_QWORD *)v13;
  v16 = (_QWORD *)sub_242C480BC();
  v40 = v15[2];
  if (v40)
  {
    v38 = a1;
    v39 = a2;
    sub_242C480E0();
    a2 = 0;
    while (1)
    {
      v17 = v15;
      swift_retain();
      sub_242BC9724();
      v19 = v18;
      a1 = v20;
      swift_release();
      swift_isUniquelyReferenced_nonNull_native();
      v41[0] = v16;
      v15 = v16;
      v21 = sub_242A61310(v19, a1);
      v23 = v16[2];
      v24 = (v22 & 1) == 0;
      v16 = (_QWORD *)(v23 + v24);
      if (__OFADD__(v23, v24))
        break;
      v25 = v21;
      v26 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A0);
      v15 = v41;
      if ((sub_242C48EF0() & 1) != 0)
      {
        v15 = (_QWORD *)v41[0];
        v27 = sub_242A61310(v19, a1);
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_25;
        v25 = v27;
      }
      v16 = (_QWORD *)v41[0];
      if ((v26 & 1) != 0)
      {
        *(_QWORD *)(*(_QWORD *)(v41[0] + 56) + 8 * v25) = a2;
        v15 = v17;
      }
      else
      {
        *(_QWORD *)(v41[0] + 8 * (v25 >> 6) + 64) |= 1 << v25;
        v29 = (uint64_t *)(v16[6] + 16 * v25);
        *v29 = v19;
        v29[1] = a1;
        *(_QWORD *)(v16[7] + 8 * v25) = a2;
        v30 = v16[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_22;
        v15 = v17;
        v16[2] = v32;
        sub_242C480E0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40 == ++a2)
      {
        swift_bridgeObjectRelease();
        a2 = v39;
        a1 = v38;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (qword_2572205A8 == -1)
      goto LABEL_16;
  }
  swift_once();
LABEL_16:
  sub_242B297F4((uint64_t)v15);
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v41[0]) = 0;
  v41[1] = MEMORY[0x24BEE4B08];
  v33 = sub_242C480E0();
  if (sub_242BABFE0(v33, (char *)v41))
  {
    sub_242BAA030();
    v35 = v34;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(v35 + 16))
  {
    sub_242A670D8(v35 + 32, (uint64_t)v41);
    swift_bridgeObjectRelease();
    v36 = sub_242A8A510(&qword_2572281D8, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormOperation, (uint64_t)&unk_242C5E3B0);
    v37 = sub_242B3919C();
    sub_242C480E0();
    sub_242B3851C((uint64_t)v41, a2, v36, v37, (uint64_t)v16, a1);
    sub_242A6945C(v41);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
LABEL_25:
    result = sub_242C492EC();
    __break(1u);
  }
  return result;
}

void sub_242B2BCE0(uint64_t a1)
{
  sub_242B2AC24(a1);
}

#error "242B2BDB8: call analysis failed (funcsize=115)"

uint64_t sub_242B2BEF0()
{
  return sub_242B2BCF4();
}

uint64_t sub_242B2BF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  __objc2_class *Class;
  uint64_t result;
  uint64_t v8;

  sub_242BC97A8();
  if (!v5
    || (Class = (__objc2_class *)object_getClass(v5),
        result = OUTLINED_FUNCTION_49_4(),
        Class != _TtC14NeuralNetworks17ConstantOperation))
  {
    sub_242B00DA8();
    OUTLINED_FUNCTION_24_1();
    *(_OWORD *)v8 = xmmword_242C57520;
    *(_QWORD *)(v8 + 16) = a2;
    *(_QWORD *)(v8 + 24) = a3;
    *(_BYTE *)(v8 + 32) = 4;
    OUTLINED_FUNCTION_28_1();
    return swift_willThrow();
  }
  return result;
}

void sub_242B2BFA4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *inited;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_254();
  if (!v1)
  {
    sub_242B00DA8();
    OUTLINED_FUNCTION_24_1();
    *(_OWORD *)v13 = xmmword_242C57520;
    *(_QWORD *)(v13 + 16) = 0xD000000000000034;
    *(_QWORD *)(v13 + 24) = 0x8000000242C6C590;
    v14 = 2;
LABEL_11:
    OUTLINED_FUNCTION_255(v13, v14);
    goto LABEL_14;
  }
  v2 = sub_242AA4D00();
  OUTLINED_FUNCTION_8_5(1, (v2 & 0xC000000000000001) == 0);
  if ((v2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_7_11();
  v3 = *(_QWORD *)(v2 + 40);
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_260(v3, 0x685F746867696577, 0xE900000000000068);
  swift_release();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
    inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_46_11(inited, (__n128)xmmword_242C4B7F0);
    v5 = OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_8_5(0, (v5 & 0xC000000000000001) == 0);
    if ((v5 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_7_11();
    v6 = *(_QWORD *)(v5 + 32);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_136();
    inited[3].n128_u64[0] = v6;
    inited[3].n128_u64[1] = 0x685F746867696577;
    inited[4].n128_u64[0] = 0xE900000000000068;
    v7 = OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_8_5(1, (v7 & 0xC000000000000001) == 0);
    if ((v7 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_7_11();
    v8 = *(_QWORD *)(v7 + 40);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_136();
    inited[4].n128_u64[1] = v8;
    type metadata accessor for TensorRepresentation();
    sub_242C480BC();
    sub_242AA59A4();
    if ((v9 & 1) == 0)
    {
      v10 = OUTLINED_FUNCTION_103_2();
      OUTLINED_FUNCTION_26_28(v10);
      OUTLINED_FUNCTION_81_5();
    }
    sub_242AA59BC();
    if ((v11 & 1) == 0)
    {
      v12 = OUTLINED_FUNCTION_103_2();
      OUTLINED_FUNCTION_26_28(v12);
      OUTLINED_FUNCTION_81_5();
    }
    sub_242AA59E8();
    if ((v15 & 1) == 0)
    {
      v16 = OUTLINED_FUNCTION_103_2();
      OUTLINED_FUNCTION_26_28(v16);
      OUTLINED_FUNCTION_81_5();
    }
    OUTLINED_FUNCTION_35();
    sub_242B00DA8();
    OUTLINED_FUNCTION_24_1();
    *(_OWORD *)v13 = xmmword_242C57520;
    *(_OWORD *)(v13 + 16) = xmmword_242C57530;
    v14 = 3;
    goto LABEL_11;
  }
LABEL_14:
  OUTLINED_FUNCTION_0_9();
}

void sub_242B2C9A4()
{
  JUMPOUT(0x242B2C204);
}

void sub_242B2C9AC()
{
  sub_242B2BFA4();
}

_QWORD *sub_242B2C9C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_242C21A14();
  return sub_242AF2444(v2, a1, 0x2EDBE6FFu);
}

void sub_242B2CA04()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t inited;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;

  OUTLINED_FUNCTION_41_21();
  v2 = *(unsigned __int8 *)(v0 + 128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  v3 = (__n128 *)OUTLINED_FUNCTION_67_9();
  OUTLINED_FUNCTION_2_56(v3, (__n128)xmmword_242C4B7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v4 = OUTLINED_FUNCTION_54_9();
  v5 = OUTLINED_FUNCTION_24_27(v4);
  v6 = OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_23_27(v6);
  if (v2 == 17 || v2 == 14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    v8 = (__n128 *)OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_105_2(v8, v9, v10, v11, v12, v13, v14, v15, v64, v68, v88, v5, v16);
    *(_QWORD *)(v17 + 32) = 0x6E6F6C69737065;
    *(_QWORD *)(v17 + 40) = 0xE700000000000000;
    sub_242B2C9C0(v17 + 48);
    v18 = OUTLINED_FUNCTION_54_9();
    OUTLINED_FUNCTION_63_11(v18, v19, v20, v21, v22, v23, v24, v25, v65, v69, v73, v77, 1, 2, v82, v83, v84, v85, v86);
    v27 = v26;
    OUTLINED_FUNCTION_4_0();
    v87 = v27;
  }
  else
  {
    v28 = OUTLINED_FUNCTION_54_9();
    OUTLINED_FUNCTION_63_11(v28, v29, v30, v31, v32, v33, v34, v35, v64, v68, v88, v5, 1, 2, v82, v83, v84, v85, v86);
    v87 = v36;
  }
  sub_242A5D5BC();
  v38 = v87;
  v37 = v88;
  v70 = sub_242B2A180(v2);
  v40 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v41 = (__n128 *)OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_105_2(v41, v42, v43, v44, v45, v46, v47, v48, v66, v70, v74, v78, v49);
  OUTLINED_FUNCTION_62_11(v1, 0, v50, (unint64_t *)&qword_2572216C8, (uint64_t (*)(uint64_t))type metadata accessor for UnaryArithmeticOperation, (uint64_t)&unk_242C54FA0, sub_242BCC778);
  v41[2].n128_u64[0] = v51;
  v41[2].n128_u64[1] = v52;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v81;
  sub_242B0560C(inited + 32);
  v54 = *(_BYTE *)(inited + 40);
  v41[3].n128_u64[0] = *(_QWORD *)(inited + 32);
  v41[3].n128_u8[8] = v54;
  swift_setDeallocating();
  OUTLINED_FUNCTION_0_2();
  sub_242B7130C();
  v88 = OUTLINED_FUNCTION_54_9();
  v55 = sub_242A5A760(v41);
  v56 = OUTLINED_FUNCTION_35();
  v87 = v55;
  OUTLINED_FUNCTION_20_31(v56, v57, v58, v59, v60, v61, v62, v63, v67, v71, v75, v79, v81, *((uint64_t *)&v81 + 1));
  OUTLINED_FUNCTION_17_27(v1 + 48);
  OUTLINED_FUNCTION_93_3(v72, v40, v80, v76, v38, v37, v55, v88, (uint64_t)&v87);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_110_1();
}

void sub_242B2CC8C()
{
  sub_242B2CA04();
}

#error "242B2CD40: call analysis failed (funcsize=90)"

uint64_t sub_242B2CE30()
{
  return sub_242B2CCA0();
}

uint64_t sub_242B2CE44()
{
  return OUTLINED_FUNCTION_179_0();
}

#error "242B2CF50: call analysis failed (funcsize=104)"

uint64_t sub_242B2D044()
{
  return sub_242B2CE88();
}

uint64_t sub_242B2D058()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B2D084
                                                            + 4 * byte_242C56B41[*(unsigned __int8 *)(v0 + 130)]))(0x6C61757165, 0xE500000000000000);
}

uint64_t sub_242B2D084()
{
  return 0x72657461657267;
}

uint64_t sub_242B2D09C()
{
  return 0x5F72657461657267;
}

uint64_t sub_242B2D0C0()
{
  return 1936942444;
}

uint64_t sub_242B2D0D0()
{
  return 0x7571655F7373656CLL;
}

uint64_t sub_242B2D0EC()
{
  return 0x617571655F746F6ELL;
}

void sub_242B2D108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *inited;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 *v70;
  __n128 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 *v121;
  __n128 *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __n128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t (*v159)(uint64_t);
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __n128 *v179;
  __n128 *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t *v196;
  uint64_t (*v197)(uint64_t);
  uint64_t v198;
  uint64_t (*v199)(uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char v351;
  char v352;
  uint64_t v353;
  char v354;
  uint64_t v355;
  char v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  __n128 v368;
  uint64_t v369;
  uint64_t v370;
  _BYTE v371[57];
  char v372;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_233_0();
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v4 + 160) == 12)
  {
    sub_242AFDA90();
    v345 = v5;
    v7 = v6;
    v361 = *(_QWORD *)(v1 + 48);
    sub_242AFDA90();
    v267 = v9;
    v284 = v8;
    OUTLINED_FUNCTION_201_0(v1, v3);
    *(_QWORD *)v371 = v10;
    *(_QWORD *)&v371[8] = v11;
    OUTLINED_FUNCTION_170();
    v12 = *(_OWORD *)v371;
    OUTLINED_FUNCTION_201_0(v1, v3);
    *(_QWORD *)v371 = v13;
    *(_QWORD *)&v371[8] = v14;
    OUTLINED_FUNCTION_170();
    v325 = *(_QWORD *)&v371[8];
    v335 = *(_QWORD *)v371;
    v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
    inited = (__n128 *)swift_initStackObject();
    v16 = OUTLINED_FUNCTION_210_0(inited, (__n128)xmmword_242C4B7D0);
    v16[3].n128_u64[0] = v345;
    v16[3].n128_u64[1] = v7;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    OUTLINED_FUNCTION_31_2();
    v18 = OUTLINED_FUNCTION_42_18();
    OUTLINED_FUNCTION_174_0(v18, v19, v20, v21, v22, v23, v24, v25, v219, v235, v251, v267, v284, v300, *((uint64_t *)&v12 + 1), v325, v335);
    v27 = v26;
    v28 = OUTLINED_FUNCTION_136();
    sub_242A5D488(v28, v29, v30, v31, v32, v33, v34, v35, v220, v236, v252, v268, v285, v301);
    *(_QWORD *)&v371[8] = OUTLINED_FUNCTION_42_18();
    sub_242A5AFE0((uint64_t)&unk_25137B098, v36, v37, v38, v39, v40, v41, v42, v221, v237, v27, v269, v286, v17, v316, v326, v336, v345, v352);
    *(_QWORD *)v371 = v43;
    sub_242A5D5BC();
    v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    v44 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_59_11(v44, v45, v46, v47, v48, v49, v50, v51, v222, v238, v253, v270, v287, v302, v317, v327, v337, v346, v353,
      v12,
      v361,
      v3,
      v52);
    *(_QWORD *)(v53 + 32) = v358;
    v44[2].n128_u64[1] = v318;
    v44[3].n128_u64[0] = *(_QWORD *)(v4 + 152);
    OUTLINED_FUNCTION_28_26(2);
    OUTLINED_FUNCTION_74();
    *(_QWORD *)&v371[8] = OUTLINED_FUNCTION_42_18();
    OUTLINED_FUNCTION_83_3();
    v54 = OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_263(v54, v55, v56, v57, v58, v59, v60, v61, v223, v239, v254, v271, v288, v303);
    v62 = *(_QWORD *)&v371[8];
    memset(v371, 0, sizeof(v371));
    v372 = 1;
    OUTLINED_FUNCTION_145_2();
    OUTLINED_FUNCTION_224_0();
    OUTLINED_FUNCTION_258(v63, v64, v65, v66, v67, v68, v69, v62, v17);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_35();
    v70 = (__n128 *)swift_initStackObject();
    v71 = OUTLINED_FUNCTION_196_0(v70, v368);
    v71[2].n128_u64[1] = 0xE100000000000000;
    v71[3].n128_u64[0] = v289;
    v71[3].n128_u64[1] = v272;
    OUTLINED_FUNCTION_31_2();
    v370 = OUTLINED_FUNCTION_161_1();
    OUTLINED_FUNCTION_83_4(v370, v72, v73, v74, v75, v76, v77, v78, v224, v240, v255, v272, v289, v304, v318, v328, v338);
    v79 = OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_257(v79, v80, v81, v82, v83, v84, v85, v86, v225, v241, v256, v273, v290, v305);
    v87 = v369;
    v88 = v370;
    OUTLINED_FUNCTION_31_2();
    v370 = sub_242C480BC();
    sub_242A5AFE0((uint64_t)&unk_25137B0E0, v89, v90, v91, v92, v93, v94, v95, v226, v242, v257, v274, v291, v306, v319, v329, v339, v347, v354);
    v369 = v96;
    sub_242A5D5BC();
    v97 = v369;
    v98 = v370;
    v99 = (__n128 *)OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_59_11(v99, v100, v101, v102, v103, v104, v105, v106, v227, v243, v258, v275, v292, v307, v320, v330, v340, v348, v355,
      v358,
      v362,
      v365,
      v107);
    *(_QWORD *)(v108 + 32) = v341;
    v99[2].n128_u64[1] = v331;
    v99[3].n128_u64[0] = *(_QWORD *)(v363 + 152);
    v99[3].n128_u8[8] = 2;
    sub_242C480E0();
    OUTLINED_FUNCTION_74();
    v370 = sub_242C480BC();
    v109 = OUTLINED_FUNCTION_55_9();
    v110 = OUTLINED_FUNCTION_4_0();
    v369 = v109;
    sub_242A5D034(v110, v111, v112, v113, v114, v115, v116, v117, v228, v244, v259, v276, v293, v308);
    v118 = OUTLINED_FUNCTION_145_2();
    OUTLINED_FUNCTION_258(v118, v119, v87, v88, v97, v98, v109, v370, (uint64_t)v371);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_4_0();
    v294 = sub_242B2D058();
    v364 = v120;
    v121 = (__n128 *)swift_initStackObject();
    v122 = OUTLINED_FUNCTION_46_11(v121, (__n128)xmmword_242C4B7F0);
    v122[3].n128_u64[0] = v359;
    v122[3].n128_u64[1] = v321;
    v123 = OUTLINED_FUNCTION_176_0((uint64_t)v122);
    *(_QWORD *)(v123 + 80) = v341;
    *(_QWORD *)(v123 + 88) = v331;
    v124 = MEMORY[0x24BEE4AF8];
    v370 = OUTLINED_FUNCTION_39_17();
    OUTLINED_FUNCTION_83_4(v370, v125, v126, v127, v128, v129, v130, v131, v229, v245, v260, v277, v294, v309, v321, v331, v341);
    v132 = OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_257(v132, v133, v134, v135, v136, v137, v138, v139, v230, v246, v261, v278, v295, v310);
    v360 = v369;
    OUTLINED_FUNCTION_239();
    v370 = OUTLINED_FUNCTION_82_4();
    sub_242A5AFE0(v124, v140, v141, v142, v143, v144, v145, v146, v231, v247, v262, v279, v296, v311, v322, v332, v342, v349, v356);
    v369 = v147;
    sub_242A5D5BC();
    v148 = (__n128 *)OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_59_11(v148, v149, v150, v151, v152, v153, v154, v155, v232, v248, v263, v280, v297, v312, v323, v333, v343, v350, v357,
      v360,
      v364,
      v366,
      v156);
    v157 = OUTLINED_FUNCTION_75_6();
    sub_242B3AB94(v157, v158, v367, (unint64_t *)&qword_257222B68, (uint64_t (*)(uint64_t))type metadata accessor for BinaryComparisonOperation, (uint64_t)&unk_242C600A0, v159);
    v148[2].n128_u64[0] = v160;
    v148[2].n128_u64[1] = v161;
    OUTLINED_FUNCTION_44_15(*(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
    v370 = sub_242C480BC();
    v162 = OUTLINED_FUNCTION_55_9();
    v163 = OUTLINED_FUNCTION_4_0();
    v369 = v162;
    sub_242A5D034(v163, v164, v165, v166, v167, v168, v169, v170, v233, v249, v264, v281, v298, v313);
    sub_242A56808(v1 + 72, (uint64_t)&v369);
    OUTLINED_FUNCTION_126_2();
    sub_242AFE8B8(v171, v172, v173, v174, v175, v176, v177, v178, (uint64_t)&v369);
  }
  else
  {
    sub_242B2D058();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
    v179 = (__n128 *)swift_initStackObject();
    v180 = OUTLINED_FUNCTION_46_11(v179, (__n128)xmmword_242C4B7F0);
    v180[3].n128_u64[0] = v4;
    v180[3].n128_u64[1] = 121;
    v180[4].n128_u64[0] = v181;
    v180[4].n128_u64[1] = *(_QWORD *)(v1 + 48);
    OUTLINED_FUNCTION_11_6();
    OUTLINED_FUNCTION_5();
    v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v183 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_129_1();
    OUTLINED_FUNCTION_46_15();
    v184 = OUTLINED_FUNCTION_136();
    sub_242A5CDDC(v184);
    *(_QWORD *)&v371[8] = OUTLINED_FUNCTION_129_1();
    sub_242A5AFE0(v183, v185, v186, v187, v188, v189, v190, v191, v219, v235, v251, v266, v283, v300, v315, v324, v334, v344, v351);
    *(_QWORD *)v371 = v192;
    sub_242A5D5BC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    v193 = swift_initStackObject();
    *(_OWORD *)(v193 + 16) = xmmword_242C4B7D0;
    v194 = OUTLINED_FUNCTION_75_6();
    sub_242B3AB94(v194, v195, v3, v196, v197, v198, v199);
    *(_QWORD *)(v193 + 32) = v200;
    *(_QWORD *)(v193 + 40) = v201;
    OUTLINED_FUNCTION_12_31(*(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
    *(_QWORD *)&v371[8] = sub_242C480BC();
    v202 = OUTLINED_FUNCTION_83_3();
    v203 = OUTLINED_FUNCTION_136();
    *(_QWORD *)v371 = v202;
    OUTLINED_FUNCTION_263(v203, v204, v205, v206, v207, v208, v209, v210, v234, v250, v265, v282, v299, v314);
    sub_242A56808(v1 + 72, (uint64_t)v371);
    OUTLINED_FUNCTION_126_2();
    sub_242AFE700(v211, v212, v213, v214, v215, v216, v217, v218, v182);
  }
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B2D7E0()
{
  sub_242B2D108();
}

#error "242B2D8CC: call analysis failed (funcsize=107)"

uint64_t sub_242B2D9BC()
{
  return sub_242B2D7F4();
}

void sub_242B2D9D0()
{
  uint64_t v0;
  __n128 *inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD v71[9];

  OUTLINED_FUNCTION_106_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_2_56(inited, (__n128)xmmword_242C4B7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v2 = OUTLINED_FUNCTION_82_4();
  v3 = OUTLINED_FUNCTION_24_27(v2);
  v4 = OUTLINED_FUNCTION_4_0();
  v71[0] = v3;
  OUTLINED_FUNCTION_23_27(v4);
  v57 = v71[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v5 = (__n128 *)OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_29_19(v5, (__n128)xmmword_242C4B7D0);
  v5[3].n128_u64[0] = *(_QWORD *)(v0 + 48);
  v5[3].n128_u64[1] = 0;
  v5[4].n128_u8[0] = 7;
  sub_242C480E0();
  v6 = OUTLINED_FUNCTION_82_4();
  OUTLINED_FUNCTION_63_11(v6, v7, v8, v9, v10, v11, v12, v13, v51, v54, v57, v3, 1, 2, v66, v67, v68, v69, v70);
  v15 = v14;
  OUTLINED_FUNCTION_4_0();
  v71[0] = v15;
  OUTLINED_FUNCTION_36_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v16 = (__n128 *)OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_105_2(v16, v17, v18, v19, v20, v21, v22, v23, v52, v55, v58, v61, v24);
  v25 = OUTLINED_FUNCTION_75_6();
  OUTLINED_FUNCTION_86_3(v25, v26, v27, v28, v29, v30, v31);
  OUTLINED_FUNCTION_132_1(v32, v33);
  sub_242B9DCC4();
  if (*(_QWORD *)(v34 + 16))
  {
    OUTLINED_FUNCTION_18_31(v34);
    OUTLINED_FUNCTION_34();
    v35 = OUTLINED_FUNCTION_54_9();
    v36 = OUTLINED_FUNCTION_40_17(v35);
    v37 = OUTLINED_FUNCTION_4_0();
    v71[0] = v36;
    OUTLINED_FUNCTION_20_31(v37, v38, v39, v40, v41, v42, v43, v44, v53, v56, v59, v62, v64, v65);
    OUTLINED_FUNCTION_17_27(v0 + 56);
    v45 = OUTLINED_FUNCTION_32_23();
    OUTLINED_FUNCTION_80_7(v45, v46, v63, v60, v47, v48, v49, v50, (uint64_t)v71);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    __break(1u);
  }
}

void sub_242B2DBC0()
{
  sub_242B2D9D0();
}

void sub_242B2DBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 *inited;
  __n128 *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 *v59;
  __n128 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 *v105;
  __n128 *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __n128 *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t *v139;
  uint64_t (*v140)(uint64_t);
  uint64_t v141;
  uint64_t (*v142)(uint64_t);
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  __n128 v243;
  _BYTE v244[57];
  char v245;
  char v246;
  uint64_t v247;
  uint64_t v248;
  char v249;

  OUTLINED_FUNCTION_18_1();
  a22 = v25;
  a23 = v26;
  v27 = v23;
  v29 = v28;
  v30 = *(_QWORD *)(v23 + 40);
  v247 = *(_QWORD *)(v30 + 152);
  v233 = *(_QWORD *)(v27 + 56);
  v31 = *(_QWORD *)(v233 + 16);
  static ShapeInference.broadcasting(_:toRank:)((uint64_t)&v247, v31, v244);
  v32 = *(_QWORD *)v244;
  if (!*(_QWORD *)v244)
  {
LABEL_5:
    *(_QWORD *)v244 = 0;
    *(_QWORD *)&v244[8] = 0xE000000000000000;
    sub_242C48C38();
    OUTLINED_FUNCTION_14_14();
    sub_242C48314();
    v164 = OUTLINED_FUNCTION_44_0();
    MEMORY[0x2494EC0FC](v164, MEMORY[0x24BEE1768]);
    sub_242C48314();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_35();
    sub_242C48314();
    v247 = v31;
    sub_242C491CC();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_14_14();
    sub_242C48314();
    v246 = 3;
    OUTLINED_FUNCTION_94_3();
    sub_242A59170();
  }
  v240 = v29;
  sub_242AFDA90();
  v34 = v33;
  v36 = v35;
  v37 = sub_242A88AA4(0x6465706168736572, 0xE800000000000000);
  v236 = v38;
  v238 = v37;
  v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
  inited = (__n128 *)swift_initStackObject();
  v40 = OUTLINED_FUNCTION_210_0(inited, (__n128)xmmword_242C4B7D0);
  v40[3].n128_u64[0] = v34;
  v40[3].n128_u64[1] = v36;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  *(_QWORD *)&v244[8] = OUTLINED_FUNCTION_60_9();
  OUTLINED_FUNCTION_174_0(*(uint64_t *)&v244[8], v42, v43, v44, v45, v46, v47, v48, v165, v174, v24, v191, v199, v208, v30, v221, v225);
  v50 = v49;
  v51 = OUTLINED_FUNCTION_136();
  *(_QWORD *)v244 = v50;
  sub_242A5D488(v51, v52, v53, v54, v55, v56, v57, v58, v166, v175, v183, v192, v200, v209);
  v201 = *(_QWORD *)&v244[8];
  v210 = *(_QWORD *)v244;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v59 = (__n128 *)swift_initStackObject();
  v60 = OUTLINED_FUNCTION_29_19(v59, v243);
  v60[3].n128_u64[0] = v32;
  v60[3].n128_u64[1] = 0;
  v60[4].n128_u8[0] = 7;
  OUTLINED_FUNCTION_107();
  *(_QWORD *)&v244[8] = OUTLINED_FUNCTION_60_9();
  OUTLINED_FUNCTION_76_6(*(uint64_t *)&v244[8], v61, v62, v63, v64, v65, v66, v67, v167, v176, v184, v193, v201, v210, v217, v41, v226, v230, v233);
  v69 = v68;
  OUTLINED_FUNCTION_4_0();
  *(_QWORD *)v244 = v69;
  sub_242A5D5BC();
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v70 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_214_0(v70, v71, v72, v73, v74, v75, v76, v77, v168, v177, v185, v27, v202, v211, v218, v222, v227, v231, v234,
    v236,
    v238,
    v240,
    v78);
  *(_QWORD *)&v244[40] = v237;
  v79 = *(_BYTE *)(v219 + 160);
  *(_QWORD *)&v244[48] = v32;
  OUTLINED_FUNCTION_28_26(v79);
  *(_QWORD *)&v244[8] = OUTLINED_FUNCTION_60_9();
  v80 = OUTLINED_FUNCTION_83_3();
  v81 = OUTLINED_FUNCTION_136();
  *(_QWORD *)v244 = v80;
  sub_242A5D034(v81, v82, v83, v84, v85, v86, v87, v88, v169, v178, v186, v194, v203, v212);
  v89 = *(_QWORD *)&v244[8];
  memset(v244, 0, sizeof(v244));
  v245 = 1;
  OUTLINED_FUNCTION_32_23();
  OUTLINED_FUNCTION_203_0();
  sub_242AFE8B8(v90, v91, v92, v93, v94, v95, v96, v89, (uint64_t)v244);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_108();
  v97 = sub_242A88AA4(0x746E6174736E6F63, 0xE800000000000000);
  v99 = v98;
  v247 = v235;
  a13 = *(_BYTE *)(v219 + 160);
  OUTLINED_FUNCTION_107();
  v100 = v195;
  sub_242B2E130(&v247, &a13);
  v102 = v101;
  v104 = v103;
  OUTLINED_FUNCTION_108();
  v247 = v102;
  v248 = v104;
  v249 = 8;
  swift_unknownObjectRetain();
  sub_242AFDF04(&v247, v97, v99);
  swift_unknownObjectRelease();
  v105 = (__n128 *)OUTLINED_FUNCTION_193_0();
  v106 = OUTLINED_FUNCTION_46_11(v105, (__n128)xmmword_242C4B7F0);
  v106[3].n128_u64[0] = v239;
  v106[3].n128_u64[1] = v237;
  v107 = OUTLINED_FUNCTION_176_0((uint64_t)v106);
  *(_QWORD *)(v107 + 80) = v97;
  *(_QWORD *)(v107 + 88) = v99;
  v108 = MEMORY[0x24BEE4AF8];
  v109 = v223;
  v248 = OUTLINED_FUNCTION_129_1();
  OUTLINED_FUNCTION_174_0(v248, v110, v111, v112, v113, v114, v115, v116, v170, v179, v187, v195, v204, v213, v219, v223, v228);
  v118 = v117;
  v119 = OUTLINED_FUNCTION_136();
  v247 = v118;
  v31 = v109;
  sub_242A5D488(v119, v120, v121, v122, v123, v124, v125, v126, v171, v180, v188, v196, v205, v214);
  v127 = OUTLINED_FUNCTION_129_1();
  v247 = v108;
  v248 = v127;
  sub_242A5D5BC();
  v128 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_59_11(v128, v129, v130, v131, v132, v133, v134, v135, v172, v181, v189, v197, v206, v215, v220, v224, v229, v232, v102,
    v237,
    v239,
    v241,
    v136);
  v137 = OUTLINED_FUNCTION_75_6();
  sub_242B3AB94(v137, v138, v242, v139, v140, v141, v142);
  v128[2].n128_u64[0] = v143;
  v128[2].n128_u64[1] = v144;
  v145 = *(_QWORD *)(v100 + 64);
  if (!*(_QWORD *)(v145 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v145 + 32), *(_BYTE *)(v145 + 40));
  v146 = OUTLINED_FUNCTION_274();
  v147 = OUTLINED_FUNCTION_19_25(v146);
  v148 = OUTLINED_FUNCTION_136();
  v247 = v147;
  OUTLINED_FUNCTION_20_31(v148, v149, v150, v151, v152, v153, v154, v155, v173, v182, v190, v198, v207, v216);
  v156 = v248;
  OUTLINED_FUNCTION_17_27(v100 + 72);
  OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_258(v157, v158, v159, v160, v161, v162, v163, v156, (uint64_t)&v247);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B2E130(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  v4 = type metadata accessor for NativeTensorStorage();
  v7 = v2;
  v6 = v3;
  if ((v3 - 1) > 0xA)
    v5 = 1;
  else
    v5 = qword_242C573A0[(char)(v3 - 1)];
  sub_242C480E0();
  sub_242B1E2E8((uint64_t)&v7, (uint64_t)&v6, v5, v4, v3);
}

void sub_242B2E1C4(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

#error "242B2E420: call analysis failed (funcsize=5)"

#error "242B2E5FC: call analysis failed (funcsize=179)"

uint64_t sub_242B2E734()
{
  return sub_242B2E42C();
}

#error "242B2E7E0: call analysis failed (funcsize=130)"

uint64_t sub_242B2E984()
{
  return sub_242B2E748();
}

unint64_t sub_242B2E998()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0x726568746167;
  if (*(_BYTE *)(v0 + 56) != 1)
    v1 = 0x6E5F726568746167;
  if (*(_BYTE *)(v0 + 56))
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_242B2E9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v1 = *(_QWORD *)(v0 + 40);
  if (!*(_BYTE *)(v0 + 56))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    v5 = 1936291937;
    v6 = 0xE400000000000000;
LABEL_6:
    *(_QWORD *)(inited + 32) = v5;
    *(_QWORD *)(inited + 40) = v6;
    *(_QWORD *)(inited + 48) = v1;
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 1;
    goto LABEL_7;
  }
  if (*(_BYTE *)(v0 + 56) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    v5 = 0x69645F6863746162;
    v6 = 0xEA0000000000736DLL;
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v3 + 32) = 1936291937;
  *(_QWORD *)(v3 + 40) = 0xE400000000000000;
  *(_QWORD *)(v3 + 48) = v1;
  *(_QWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 64) = 1;
  *(_QWORD *)(v3 + 72) = 0x69645F6863746162;
  *(_QWORD *)(v3 + 80) = 0xEA0000000000736DLL;
  *(_QWORD *)(v3 + 88) = v2;
  *(_QWORD *)(v3 + 96) = 0;
  *(_BYTE *)(v3 + 104) = 1;
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  sub_242A5AFE0(v3, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  v15 = v14;
  swift_bridgeObjectRelease();
  sub_242A5D5BC();
  return v15;
}

#error "242B2ECB0: call analysis failed (funcsize=95)"

uint64_t sub_242B2ED0C()
{
  return sub_242B2EB74();
}

unint64_t sub_242B2ED20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0x72657474616373;
  if (*(_BYTE *)(v0 + 48) != 1)
    v1 = 0x5F72657474616373;
  if (*(_BYTE *)(v0 + 48))
    return v1;
  else
    return 0xD000000000000012;
}

uint64_t sub_242B2ED84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v0 + 48) && *(_BYTE *)(v0 + 48) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(inited + 32) = 1701080941;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    v6 = *(char *)(v0 + 80);
    v7 = qword_242C573F8[v6];
    v8 = qword_242C57430[v6];
    *(_QWORD *)(inited + 48) = v7;
    *(_QWORD *)(inited + 56) = v8;
    *(_BYTE *)(inited + 64) = 4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(inited + 32) = 1936291937;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    *(_QWORD *)(inited + 48) = v1;
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 1;
    *(_QWORD *)(inited + 72) = 1701080941;
    *(_QWORD *)(inited + 80) = 0xE400000000000000;
    v3 = *(char *)(v0 + 80);
    v4 = qword_242C573F8[v3];
    v5 = qword_242C57430[v3];
    *(_QWORD *)(inited + 88) = v4;
    *(_QWORD *)(inited + 96) = v5;
    *(_BYTE *)(inited + 104) = 4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  sub_242A5AFE0(inited, v9, v10, v11, v12, v13, v14, v15, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  v17 = v16;
  swift_bridgeObjectRelease();
  sub_242A5D5BC();
  return v17;
}

void sub_242B2EEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[72];
  uint64_t v44;

  v2 = v0;
  if (*(_BYTE *)(v0 + 48) == 2 && *(_QWORD *)(v0 + 40))
  {
    v3 = sub_242B2ED20();
    v5 = v4;
    sub_242B00DA8();
    OUTLINED_FUNCTION_24_1();
    *v6 = v3;
    v6[1] = v5;
    v6[2] = 0xD000000000000047;
    v6[3] = 0x8000000242C6C660;
    OUTLINED_FUNCTION_255((uint64_t)v6, 1);
LABEL_6:
    OUTLINED_FUNCTION_112_2();
    return;
  }
  v44 = v1;
  v35 = sub_242B2ED20();
  v37 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  v8 = OUTLINED_FUNCTION_128_2();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B810;
  OUTLINED_FUNCTION_121_1(v8, 1635017060);
  OUTLINED_FUNCTION_133_1();
  *(_QWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 64) = 0xE700000000000000;
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v8 + 80) = 0x73657461647075;
  *(_QWORD *)(v8 + 88) = 0xE700000000000000;
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v2 + 72);
  swift_retain();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v41 = OUTLINED_FUNCTION_274();
  v11 = OUTLINED_FUNCTION_46_15();
  v12 = OUTLINED_FUNCTION_136();
  sub_242A5CDDC(v12);
  v14 = v11;
  v13 = v41;
  v15 = sub_242B2ED84();
  v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v18 = OUTLINED_FUNCTION_152_0();
  *(_OWORD *)(v18 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_62_11(v2, 0, v19, &qword_257228210, (uint64_t (*)(uint64_t))type metadata accessor for ScatterOperation, (uint64_t)&unk_242C5AC90, sub_242BCC630);
  *(_QWORD *)(v18 + 32) = v20;
  *(_QWORD *)(v18 + 40) = v21;
  sub_242B9DD54();
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = *(_BYTE *)(v22 + 40);
    *(_QWORD *)(v18 + 48) = *(_QWORD *)(v22 + 32);
    *(_BYTE *)(v18 + 56) = v23;
    sub_242C480E0();
    OUTLINED_FUNCTION_34();
    v42 = OUTLINED_FUNCTION_274();
    v24 = sub_242A5A760(v18);
    v25 = OUTLINED_FUNCTION_81();
    sub_242A5D034(v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v37, v39, v40);
    OUTLINED_FUNCTION_17_27(v2 + 120);
    OUTLINED_FUNCTION_93_3(v36, v38, v14, v13, v15, v17, v24, v42, (uint64_t)v43);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_4_0();
    goto LABEL_6;
  }
  __break(1u);
}

void sub_242B2F17C()
{
  sub_242B2EEF4();
}

#error "242B2F228: call analysis failed (funcsize=95)"

uint64_t sub_242B2F340()
{
  return sub_242B2F190();
}

#error "242B2F404: call analysis failed (funcsize=96)"

uint64_t sub_242B2F504()
{
  return sub_242B2F354();
}

#error "242B2F5FC: call analysis failed (funcsize=110)"

uint64_t sub_242B2F6FC()
{
  return sub_242B2F518();
}

uint64_t sub_242B2F710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(inited + 32) = 0x69735F74696C7073;
    *(_QWORD *)(inited + 40) = 0xEB0000000073657ALL;
    *(_QWORD *)(inited + 48) = v1;
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 5;
    *(_QWORD *)(inited + 72) = 1936291937;
    *(_QWORD *)(inited + 80) = 0xE400000000000000;
    *(_QWORD *)(inited + 88) = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(inited + 96) = 0;
    *(_BYTE *)(inited + 104) = 1;
    sub_242C480E0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(inited + 32) = 0x696C70735F6D756ELL;
    *(_QWORD *)(inited + 40) = 0xEA00000000007374;
    *(_QWORD *)(inited + 48) = v1;
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 1;
    *(_QWORD *)(inited + 72) = 1936291937;
    *(_QWORD *)(inited + 80) = 0xE400000000000000;
    *(_QWORD *)(inited + 88) = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(inited + 96) = 0;
    *(_BYTE *)(inited + 104) = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  sub_242A5AFE0(inited, v3, v4, v5, v6, v7, v8, v9, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  v11 = v10;
  swift_bridgeObjectRelease();
  sub_242A5D5BC();
  return v11;
}

uint64_t sub_242B2F878()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_41_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_15_28(inited, (__n128)xmmword_242C4B7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v20 = sub_242C480BC();
  v3 = OUTLINED_FUNCTION_46_15();
  v4 = OUTLINED_FUNCTION_136();
  v19 = v3;
  sub_242A5CDDC(v4);
  v5 = sub_242B2F710();
  v7 = v6;
  v8 = sub_242B2F9A8(v1, v0);
  v10 = v9;
  OUTLINED_FUNCTION_202_0(v1 + 96, v9, v11, v12, v13, v14, v15, v16, v18);
  OUTLINED_FUNCTION_93_3(0x74696C7073, 0xE500000000000000, v3, v20, v5, v7, v8, v10, (uint64_t)&v19);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_4_0();
  return OUTLINED_FUNCTION_83();
}

uint64_t sub_242B2F9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_retain();
  swift_retain();
  v4 = sub_242C480E0();
  v5 = sub_242B29C48(v4, a2, a1);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v6 = sub_242C480BC();
  sub_242A5D034(v6, v7, v8, v9, v10, v11, v12, v13, v5, v6, v16, v17, v18, v19);
  return v15;
}

uint64_t sub_242B2FA50()
{
  return sub_242B2F878();
}

#error "242B2FB68: call analysis failed (funcsize=111)"

uint64_t sub_242B2FC5C()
{
  return sub_242B2FA64();
}

#error "242B2FD70: call analysis failed (funcsize=112)"

uint64_t sub_242B2FE5C()
{
  return sub_242B2FC70();
}

uint64_t sub_242B2FE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[9];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  v3 = (__n128 *)OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_15_28(v3, (__n128)xmmword_242C4B7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v4 = MEMORY[0x24BEE4AF8];
  v5 = OUTLINED_FUNCTION_161_1();
  OUTLINED_FUNCTION_25_26(v5);
  v6 = OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_23_27(v6);
  OUTLINED_FUNCTION_220_0();
  v48[0] = v4;
  v48[1] = OUTLINED_FUNCTION_161_1();
  sub_242A5D5BC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v7 = (__n128 *)OUTLINED_FUNCTION_104_2();
  OUTLINED_FUNCTION_52_9(v7, v8, v9, v10, v11, v12, v13, v14, v42, v44, v15);
  v16 = OUTLINED_FUNCTION_75_6();
  OUTLINED_FUNCTION_86_3(v16, v17, v18, v19, v20, v21, v22);
  v7[2].n128_u64[0] = v23;
  v7[2].n128_u64[1] = v24;
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56));
  v25 = sub_242C480BC();
  v26 = OUTLINED_FUNCTION_19_25(v25);
  v27 = OUTLINED_FUNCTION_136();
  v48[0] = v26;
  OUTLINED_FUNCTION_20_31(v27, v28, v29, v30, v31, v32, v33, v34, v43, v45, 1, 2, v46, a1);
  OUTLINED_FUNCTION_17_27(v2 + 64);
  OUTLINED_FUNCTION_35_18(0x6F72657A5F6E6F6ELL, 0xE800000000000000, v35, v36, v37, v38, v39, v40, (uint64_t)v48);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_3_6();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_242B30018(uint64_t a1)
{
  return sub_242B2FE70(a1);
}

#error "242B3010C: call analysis failed (funcsize=97)"

uint64_t sub_242B301F0()
{
  return sub_242B3002C();
}

uint64_t sub_242B30204()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B3023C
                                                            + 4 * byte_242C56B47[*(unsigned __int8 *)(v0 + 130)]))(0x6D5F656375646572, 0xEA00000000007861);
}

uint64_t sub_242B30254()
{
  return 0x705F656375646572;
}

uint64_t sub_242B30274()
{
  return 0x735F656375646572;
}

#error "242B303B4: call analysis failed (funcsize=135)"

uint64_t sub_242B304E0()
{
  return sub_242B30290();
}

#error "242B305C4: call analysis failed (funcsize=119)"

uint64_t sub_242B30708()
{
  return sub_242B304F4();
}

void sub_242B3071C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;

  OUTLINED_FUNCTION_41_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  v1 = OUTLINED_FUNCTION_67_9();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v1 + 32) = 120;
  *(_QWORD *)(v1 + 40) = 0xE100000000000000;
  OUTLINED_FUNCTION_49_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v2 = OUTLINED_FUNCTION_14_26();
  v3 = OUTLINED_FUNCTION_25_26(v2);
  v4 = OUTLINED_FUNCTION_136();
  v61 = v3;
  OUTLINED_FUNCTION_23_27(v4);
  v5 = v62;
  v47 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v6 = OUTLINED_FUNCTION_249();
  *(_OWORD *)(v6 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v6 + 32) = 107;
  *(_QWORD *)(v6 + 40) = 0xE100000000000000;
  v7 = OUTLINED_FUNCTION_74_6(v6, *(_QWORD *)(v0 + 48));
  *(_QWORD *)(v7 + 72) = 1936291937;
  *(_QWORD *)(v7 + 80) = 0xE400000000000000;
  *(_OWORD *)(v7 + 88) = xmmword_242C57560;
  *(_BYTE *)(v7 + 104) = v8;
  OUTLINED_FUNCTION_171_0();
  *(_QWORD *)(v9 + 112) = v10;
  *(_QWORD *)(v9 + 120) = v11;
  *(_BYTE *)(v9 + 144) = 0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v9 + 136) = 0;
  v12 = OUTLINED_FUNCTION_14_26();
  OUTLINED_FUNCTION_21_27(v12, v13, v14, v15, v16, v17, v18, v19, v43, v45, v47, v50, v52, v54, v56, v57, v58, v59, v60);
  v21 = v20;
  OUTLINED_FUNCTION_136();
  v61 = v21;
  OUTLINED_FUNCTION_36_19();
  v22 = v21;
  v23 = v62;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  OUTLINED_FUNCTION_62_11(v0, 0, v25, &qword_2572281E0, (uint64_t (*)(uint64_t))type metadata accessor for TopKOperation, (uint64_t)&unk_242C5AC58, (uint64_t (*)(uint64_t))sub_242BCC6EC);
  *(_QWORD *)(inited + 32) = v26;
  *(_QWORD *)(inited + 40) = v27;
  v28 = *(_QWORD *)(v0 + 56);
  if (*(_QWORD *)(v28 + 16))
  {
    OUTLINED_FUNCTION_12_31(*(_QWORD *)(v28 + 32), *(_BYTE *)(v28 + 40));
    OUTLINED_FUNCTION_62_11(v0, 1, v29, &qword_2572281E0, (uint64_t (*)(uint64_t))type metadata accessor for TopKOperation, (uint64_t)&unk_242C5AC58, (uint64_t (*)(uint64_t))sub_242BCC6EC);
    *(_QWORD *)(inited + 64) = v30;
    *(_QWORD *)(inited + 72) = v31;
    if (*(_QWORD *)(v28 + 16) >= 2uLL)
    {
      v32 = *(_BYTE *)(v28 + 56);
      *(_QWORD *)(inited + 80) = *(_QWORD *)(v28 + 48);
      *(_BYTE *)(inited + 88) = v32;
      sub_242C480E0();
      v33 = OUTLINED_FUNCTION_54_9();
      v34 = OUTLINED_FUNCTION_19_25(v33);
      v35 = OUTLINED_FUNCTION_136();
      v61 = v34;
      OUTLINED_FUNCTION_20_31(v35, v36, v37, v38, v39, v40, v41, v42, v44, v46, v48, v51, v53, v55);
      OUTLINED_FUNCTION_17_27(v0 + 80);
      OUTLINED_FUNCTION_93_3(1802530676, 0xE400000000000000, v49, v5, v22, v23, v34, v62, (uint64_t)&v61);
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_83();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_4_0();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_242B309A4()
{
  sub_242B3071C();
}

#error "242B30A98: call analysis failed (funcsize=113)"

uint64_t sub_242B30BA4()
{
  return sub_242B309B8();
}

void sub_242B30BB8()
{
  uint64_t v0;
  __n128 *inited;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;

  OUTLINED_FUNCTION_106_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  inited[3].n128_u64[0] = OUTLINED_FUNCTION_156_2(inited, (__n128)xmmword_242C4B7F0);
  inited[3].n128_u64[1] = 121;
  inited[4].n128_u64[0] = v2;
  OUTLINED_FUNCTION_280();
  OUTLINED_FUNCTION_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v3 = OUTLINED_FUNCTION_14_26();
  v4 = OUTLINED_FUNCTION_25_26(v3);
  v5 = OUTLINED_FUNCTION_136();
  v68 = v4;
  OUTLINED_FUNCTION_23_27(v5);
  OUTLINED_FUNCTION_220_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v6 = (__n128 *)OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_52_9(v6, v7, v8, v9, v10, v11, v12, v13, v49, v52, v14);
  *(_QWORD *)(v15 + 32) = 0x736F70736E617274;
  *(_QWORD *)(v15 + 40) = 0xEB00000000785F65;
  *(_QWORD *)(v15 + 48) = *(unsigned __int8 *)(v0 + 56);
  *(_QWORD *)(v15 + 56) = 0;
  *(_BYTE *)(v15 + 64) = 0;
  *(_QWORD *)(v15 + 72) = 0x736F70736E617274;
  *(_QWORD *)(v15 + 80) = 0xEB00000000795F65;
  *(_QWORD *)(v15 + 88) = *(unsigned __int8 *)(v0 + 57);
  *(_QWORD *)(v15 + 96) = 0;
  *(_BYTE *)(v15 + 104) = 0;
  v16 = OUTLINED_FUNCTION_14_26();
  OUTLINED_FUNCTION_21_27(v16, v17, v18, v19, v20, v21, v22, v23, v50, v53, v55, v57, v59, v61, v63, v64, v65, v66, v67);
  v25 = v24;
  OUTLINED_FUNCTION_136();
  v68 = v25;
  OUTLINED_FUNCTION_36_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v26 = OUTLINED_FUNCTION_79_5();
  *(_OWORD *)(v26 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_77_6(v0, v27, v28, &qword_257221F20, (uint64_t (*)(uint64_t))type metadata accessor for MatrixMultiplicationOperation, (uint64_t)&unk_242C54D08, sub_242BCC584);
  *(_QWORD *)(v26 + 32) = v29;
  *(_QWORD *)(v26 + 40) = v30;
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  OUTLINED_FUNCTION_189();
  v31 = sub_242C480BC();
  v32 = OUTLINED_FUNCTION_19_25(v31);
  v33 = OUTLINED_FUNCTION_136();
  v68 = v32;
  OUTLINED_FUNCTION_20_31(v33, v34, v35, v36, v37, v38, v39, v40, v51, v54, v56, v58, v60, v62);
  OUTLINED_FUNCTION_17_27(v0 + 96);
  v41 = OUTLINED_FUNCTION_144_2();
  OUTLINED_FUNCTION_56_10(v41, v42, v43, v44, v45, v46, v47, v48, (uint64_t)&v68);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_110_1();
}

void sub_242B30D90()
{
  sub_242B30BB8();
}

uint64_t sub_242B30DA4()
{
  uint64_t v0;
  _BYTE v2[24];
  uint64_t v3;

  sub_242A8A798(v0, (uint64_t)v2);
  switch(v3)
  {
    case 0:
      return 0x7463656C666572;
    case 2:
      return 0x746163696C706572;
    case 1:
      sub_242A59170();
  }
  sub_242A8A7D4((uint64_t)v2);
  return 0x746E6174736E6F63;
}

uint64_t sub_242B30E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v4;
  unint64_t v5;

  sub_242A8A798(v1, (uint64_t)&v4);
  if (v5 >= 3)
    return sub_242A64518(&v4, a1);
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(a1 + 32) = &protocol witness table for Float;
  *(_DWORD *)a1 = 0;
  return sub_242A8A7D4((uint64_t)&v4);
}

void sub_242B30EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 *inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  int v99;
  char v100;

  OUTLINED_FUNCTION_18_1();
  v1 = v0;
  v3 = v2;
  sub_242A8A798(v1 + 48, (uint64_t)&v94);
  v4 = *((_QWORD *)&v96 + 1);
  sub_242A8A7D4((uint64_t)&v94);
  if (v4 == 1)
  {
LABEL_20:
    v94 = 0xD000000000000011;
    v95 = 0x8000000242C6C6F0;
    v96 = 0u;
    v97 = 0u;
    v98 = 0u;
    v99 = 0;
    v100 = 6;
    OUTLINED_FUNCTION_94_3();
    sub_242A59170();
  }
  v92 = v3;
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    v8 = MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_28_1();
  v7 = (uint64_t *)(v5 + 40);
  v8 = MEMORY[0x24BEE4AF8];
  do
  {
    v9 = *(_QWORD *)(v8 + 16);
    v10 = v9 + 2;
    if (__OFADD__(v9, 2))
    {
      __break(1u);
      goto LABEL_20;
    }
    v11 = *(v7 - 1);
    v12 = *v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!(_DWORD)isUniquelyReferenced_nonNull_native
      || (v14 = *(_QWORD *)(v8 + 24), v15 = v14 >> 1, (uint64_t)(v14 >> 1) < v10))
    {
      if (v9 <= v10)
        v16 = v9 + 2;
      else
        v16 = v9;
      OUTLINED_FUNCTION_6_25(isUniquelyReferenced_nonNull_native, v16);
      v8 = v17;
      v14 = *(_QWORD *)(v17 + 24);
      v15 = v14 >> 1;
    }
    v18 = *(_QWORD *)(v8 + 16);
    v19 = v18 + 1;
    if (v15 <= v18)
    {
      OUTLINED_FUNCTION_6_25(v14 > 1, v18 + 1);
      v8 = v20;
      v14 = *(_QWORD *)(v20 + 24);
      v15 = v14 >> 1;
    }
    *(_QWORD *)(v8 + 16) = v19;
    *(_QWORD *)(v8 + 8 * v18 + 32) = v11;
    if ((uint64_t)v15 < (uint64_t)(v18 + 2))
    {
      OUTLINED_FUNCTION_6_25(v14 > 1, v18 + 2);
      v8 = v21;
    }
    v7 += 2;
    *(_QWORD *)(v8 + 16) = v18 + 2;
    *(_QWORD *)(v8 + 8 * v19 + 32) = v12;
    --v6;
  }
  while (v6);
  OUTLINED_FUNCTION_4_0();
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  inited[3].n128_u64[0] = OUTLINED_FUNCTION_156_2(inited, (__n128)xmmword_242C4B7D0);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v95 = OUTLINED_FUNCTION_57_14();
  v23 = sub_242A5A5CC((uint64_t)inited);
  v24 = OUTLINED_FUNCTION_4_0();
  v94 = v23;
  sub_242A5CDDC(v24);
  v25 = v95;
  v89 = v94;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v26 = swift_initStackObject();
  *(_OWORD *)(v26 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v26 + 32) = 6578544;
  *(_QWORD *)(v26 + 40) = 0xE300000000000000;
  *(_QWORD *)(v26 + 48) = v8;
  *(_QWORD *)(v26 + 56) = 0;
  v27 = OUTLINED_FUNCTION_273(v26);
  *(_QWORD *)(v27 + 72) = 1701080941;
  *(_QWORD *)(v27 + 80) = 0xE400000000000000;
  *(_QWORD *)(v26 + 88) = sub_242B30DA4();
  *(_QWORD *)(v26 + 96) = v28;
  *(_BYTE *)(v26 + 104) = 4;
  strcpy((char *)(v26 + 112), "constant_val");
  *(_BYTE *)(v26 + 125) = 0;
  *(_WORD *)(v26 + 126) = -5120;
  sub_242B30E70((uint64_t)&v94);
  sub_242AF2294((uint64_t)&v94, v26 + 128);
  v29 = OUTLINED_FUNCTION_57_14();
  OUTLINED_FUNCTION_76_6(v29, v30, v31, v32, v33, v34, v35, v36, v76, v80, v83, v85, v87, v89, v1 + 48, v92, v94, v29, v96);
  v38 = v37;
  OUTLINED_FUNCTION_4_0();
  v94 = v38;
  sub_242A5D5BC();
  v39 = v94;
  v40 = v95;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v41 = (__n128 *)OUTLINED_FUNCTION_259();
  OUTLINED_FUNCTION_52_9(v41, v42, v43, v44, v45, v46, v47, v48, v77, v81, v49);
  v50 = OUTLINED_FUNCTION_75_6();
  sub_242B3AB94(v50, v51, v93, v52, v53, v54, v55);
  v41[2].n128_u64[0] = v56;
  v41[2].n128_u64[1] = v57;
  OUTLINED_FUNCTION_44_15(*(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 104));
  v95 = sub_242C480BC();
  v58 = OUTLINED_FUNCTION_55_9();
  v59 = OUTLINED_FUNCTION_4_0();
  v94 = v58;
  sub_242A5D034(v59, v60, v61, v62, v63, v64, v65, v66, v78, v82, v84, v86, v88, v90);
  v67 = v94;
  OUTLINED_FUNCTION_202_0(v1 + 112, v68, v69, v70, v71, v72, v73, v74, v79);
  OUTLINED_FUNCTION_151_2(6578544, 0xE300000000000000, v91, v25, v39, v40, v67, v75, (uint64_t)&v94);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B312BC()
{
  sub_242B30EDC();
}

void sub_242B312D0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *inited;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_233_0();
  v67 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  v2 = (__n128 *)OUTLINED_FUNCTION_67_9();
  OUTLINED_FUNCTION_2_56(v2, (__n128)xmmword_242C4B7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v3 = OUTLINED_FUNCTION_48_17();
  v4 = OUTLINED_FUNCTION_24_27(v3);
  v5 = OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_23_27(v5);
  v68 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_53_11(inited, (__n128)xmmword_242C57570);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = OUTLINED_FUNCTION_2_0();
  v8 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v7 + 32) = v8;
  inited[3].n128_u64[0] = v7;
  inited[3].n128_u64[1] = 0;
  inited[4].n128_u8[0] = 5;
  inited[4].n128_u64[1] = 0x73656469727473;
  inited[5].n128_u64[0] = 0xE700000000000000;
  v9 = OUTLINED_FUNCTION_2_0();
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v9 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v9 + 32) = v10;
  inited[5].n128_u64[1] = v9;
  inited[6].n128_u64[0] = 0;
  inited[6].n128_u8[8] = 5;
  inited[7].n128_u64[0] = 6578544;
  inited[7].n128_u64[1] = 0xE300000000000000;
  v11 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_33_18(v11, (__n128)xmmword_242C4DE40);
  OUTLINED_FUNCTION_200_0((__n128)xmmword_242C57580);
  OUTLINED_FUNCTION_183_0((uint64_t)"exclude_padding_from_average");
  v12 = OUTLINED_FUNCTION_45_14(*(_BYTE *)(v0 + 192));
  OUTLINED_FUNCTION_21_27(v12, v13, v14, v15, v16, v17, v18, v19, v54, v58, 2, 4, 1, 2, v67, v68, v69, v70, v71);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_36_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v20 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_105_2(v20, v21, v22, v23, v24, v25, v26, v27, v55, v59, v61, v63, v28);
  v29 = OUTLINED_FUNCTION_75_6();
  OUTLINED_FUNCTION_62_11(v29, v30, v31, v32, v33, v34, v35);
  v20[2].n128_u64[0] = v36;
  v20[2].n128_u64[1] = v37;
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  v38 = OUTLINED_FUNCTION_48_17();
  OUTLINED_FUNCTION_19_25(v38);
  v39 = OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_20_31(v39, v40, v41, v42, v43, v44, v45, v46, v56, v60, v62, v64, v65, v66);
  OUTLINED_FUNCTION_17_27(v0 + 112);
  v47 = OUTLINED_FUNCTION_192_0();
  OUTLINED_FUNCTION_34_20(v47, 0xE800000000000000, v48, v49, v50, v51, v52, v53, v57);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B3151C()
{
  sub_242B312D0();
}

void sub_242B31530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_233_0();
  v52 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_136_2(inited, (__n128)xmmword_242C4B7F0);
  inited[3].n128_u64[0] = *(_QWORD *)(v0 + 176);
  inited[3].n128_u64[1] = 120;
  inited[4].n128_u64[0] = 0xE100000000000000;
  OUTLINED_FUNCTION_251();
  OUTLINED_FUNCTION_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v4 = OUTLINED_FUNCTION_48_17();
  v5 = OUTLINED_FUNCTION_24_27(v4);
  v6 = OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_23_27(v6);
  v54 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v7 = (__n128 *)OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_53_11(v7, (__n128)xmmword_242C57570);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v8 = OUTLINED_FUNCTION_2_0();
  v9 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v8 + 32) = v9;
  v7[3].n128_u64[0] = v8;
  v7[3].n128_u64[1] = 0;
  v7[4].n128_u8[0] = 5;
  v7[4].n128_u64[1] = 0x73656469727473;
  v7[5].n128_u64[0] = 0xE700000000000000;
  v10 = OUTLINED_FUNCTION_2_0();
  v11 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v10 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v10 + 32) = v11;
  v7[5].n128_u64[1] = v10;
  v7[6].n128_u64[0] = 0;
  v7[6].n128_u8[8] = 5;
  v7[7].n128_u64[0] = 6578544;
  v7[7].n128_u64[1] = 0xE300000000000000;
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_33_18(v12, (__n128)xmmword_242C4DE40);
  OUTLINED_FUNCTION_200_0((__n128)xmmword_242C57580);
  OUTLINED_FUNCTION_183_0((uint64_t)"exclude_padding_from_average");
  v13 = OUTLINED_FUNCTION_45_14(*(_BYTE *)(v1 + 184));
  OUTLINED_FUNCTION_21_27(v13, v14, v15, v16, v17, v18, v19, v20, v47, v50, v52, v54, 2, 4, v58, v59, v60, v61, v62);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_36_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v21 = OUTLINED_FUNCTION_267();
  *(_OWORD *)(v21 + 16) = xmmword_242C4B7D0;
  v22 = OUTLINED_FUNCTION_75_6();
  OUTLINED_FUNCTION_62_11(v22, v23, v24, v25, v26, v27, v28);
  *(_QWORD *)(v21 + 32) = v29;
  *(_QWORD *)(v21 + 40) = v30;
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 104));
  v31 = OUTLINED_FUNCTION_48_17();
  OUTLINED_FUNCTION_19_25(v31);
  v32 = OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_20_31(v32, v33, v34, v35, v36, v37, v38, v39, v48, v51, v53, v55, v56, v57);
  OUTLINED_FUNCTION_17_27(v1 + 112);
  v40 = OUTLINED_FUNCTION_192_0();
  OUTLINED_FUNCTION_34_20(v40, 0xED0000646172675FLL, v41, v42, v43, v44, v45, v46, v49);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B317A4()
{
  sub_242B31530();
}

void sub_242B317B8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *inited;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73[9];

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_233_0();
  v69 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  v2 = (__n128 *)OUTLINED_FUNCTION_67_9();
  OUTLINED_FUNCTION_2_56(v2, (__n128)xmmword_242C4B7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v3 = OUTLINED_FUNCTION_48_17();
  v4 = OUTLINED_FUNCTION_24_27(v3);
  v5 = OUTLINED_FUNCTION_4_0();
  v73[0] = v4;
  OUTLINED_FUNCTION_23_27(v5);
  v70 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_53_11(inited, (__n128)xmmword_242C533B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = OUTLINED_FUNCTION_2_0();
  v8 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v7 + 32) = v8;
  inited[3].n128_u64[0] = v7;
  inited[3].n128_u64[1] = 0;
  inited[4].n128_u8[0] = 5;
  inited[4].n128_u64[1] = 0x73656469727473;
  inited[5].n128_u64[0] = 0xE700000000000000;
  v9 = OUTLINED_FUNCTION_2_0();
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v9 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v9 + 32) = v10;
  inited[5].n128_u64[1] = v9;
  inited[6].n128_u64[0] = 0;
  inited[6].n128_u8[8] = 5;
  inited[7].n128_u64[0] = 6578544;
  inited[7].n128_u64[1] = 0xE300000000000000;
  v11 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_33_18(v11, (__n128)xmmword_242C4DE40);
  OUTLINED_FUNCTION_200_0((__n128)xmmword_242C57580);
  inited[12].n128_u64[0] = 0x646F6D5F6C696563;
  inited[12].n128_u64[1] = 0xE900000000000065;
  inited[14].n128_u8[0] = 0;
  inited[13].n128_u64[0] = 0;
  inited[13].n128_u64[1] = 0;
  v12 = OUTLINED_FUNCTION_48_17();
  OUTLINED_FUNCTION_21_27(v12, v13, v14, v15, v16, v17, v18, v19, v56, v59, 2, 4, 1, 2, v68, v69, v70, v71, v72);
  v21 = v20;
  OUTLINED_FUNCTION_136();
  v73[0] = v21;
  OUTLINED_FUNCTION_36_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v22 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_105_2(v22, v23, v24, v25, v26, v27, v28, v29, v57, v60, v62, v64, v30);
  v31 = OUTLINED_FUNCTION_75_6();
  OUTLINED_FUNCTION_62_11(v31, v32, v33, v34, v35, v36, v37);
  v22[2].n128_u64[0] = v38;
  v22[2].n128_u64[1] = v39;
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  v40 = OUTLINED_FUNCTION_48_17();
  v41 = OUTLINED_FUNCTION_19_25(v40);
  v42 = OUTLINED_FUNCTION_136();
  v73[0] = v41;
  OUTLINED_FUNCTION_20_31(v42, v43, v44, v45, v46, v47, v48, v49, v58, v61, v63, v65, v66, v67);
  OUTLINED_FUNCTION_17_27(v0 + 112);
  OUTLINED_FUNCTION_34_20(0x6C6F6F705F78616DLL, 0xE800000000000000, v50, v51, v52, v53, v54, v55, (uint64_t)v73);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B31A34()
{
  sub_242B317B8();
}

uint64_t sub_242B31A48()
{
  uint64_t v0;
  int v1;
  uint64_t inited;
  unsigned int v3;
  int32x2_t v4;
  int64x2_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x8000000242C6C750;
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 1;
    *(_QWORD *)(inited + 72) = 0xD000000000000011;
    *(_QWORD *)(inited + 80) = 0x8000000242C6C770;
    *(_QWORD *)(inited + 88) = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(inited + 96) = 0;
    *(_BYTE *)(inited + 104) = 1;
  }
  else
  {
    v3 = (v1 & 1) == 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B810;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x8000000242C6C750;
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 1;
    *(_QWORD *)(inited + 72) = 0xD000000000000011;
    *(_QWORD *)(inited + 80) = 0x8000000242C6C770;
    *(_QWORD *)(inited + 88) = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(inited + 96) = 0;
    *(_BYTE *)(inited + 104) = 1;
    v4 = vdup_n_s32(v3);
    strcpy((char *)(inited + 112), "sampling_mode");
    *(_WORD *)(inited + 126) = -4864;
    v5.i64[0] = v4.u32[0];
    v5.i64[1] = v4.u32[1];
    *(int8x16_t *)(inited + 128) = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v5, 0x3FuLL)), (int8x16_t)xmmword_242C575A0, (int8x16_t)xmmword_242C57590);
    *(_BYTE *)(inited + 144) = 4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  sub_242A5AFE0(inited, v6, v7, v8, v9, v10, v11, v12, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  v14 = v13;
  swift_bridgeObjectRelease();
  sub_242A5D5BC();
  return v14;
}

void sub_242B31C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *inited;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __n128 *v16;
  __n128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __n128 *v61;
  __n128 *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 *v103;
  __n128 *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __n128 *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __n128 *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __n128 *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;

  OUTLINED_FUNCTION_18_1();
  v4 = v0;
  v5 = v1;
  v6 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(*(_QWORD *)(v6 + 152) + 16) == 3)
  {
    OUTLINED_FUNCTION_89_2(v1, v2, v3, (unint64_t *)&qword_2572216B0, (uint64_t (*)(uint64_t))type metadata accessor for ResizeOperation, (uint64_t)&unk_242C550D4, sub_242BCC79C);
    v326 = v7;
    v327 = v8;
    sub_242C48314();
    v317 = v326;
    v305 = v327;
    v9 = OUTLINED_FUNCTION_28_1();
    sub_242B65310(v9, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
    inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_114_0(inited, (__n128)xmmword_242C4B7D0);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v13 = OUTLINED_FUNCTION_163_1();
    v14 = OUTLINED_FUNCTION_25_26(v13);
    v15 = OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_23_27(v15);
    v275 = v327;
    v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    v16 = (__n128 *)swift_initStackObject();
    v17 = OUTLINED_FUNCTION_29_19(v16, (__n128)xmmword_242C4B7D0);
    v17[3].n128_u64[0] = (unint64_t)&unk_25137AEC8;
    v17[3].n128_u64[1] = 0;
    v17[4].n128_u8[0] = 7;
    OUTLINED_FUNCTION_28_1();
    v18 = OUTLINED_FUNCTION_161_1();
    OUTLINED_FUNCTION_21_27(v18, v19, v20, v21, v22, v23, v24, v25, v191, v205, v217, v229, v242, v255, v268, v275, v6, v291, v14);
    v27 = v26;
    OUTLINED_FUNCTION_136();
    v326 = v27;
    OUTLINED_FUNCTION_36_19();
    v28 = v327;
    v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    v29 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_149_2(v29, v30, v31, v32, v33, v34, v35, v36, v192, v206, v218, v230, v243, v326, v269, v276, v284, v292, v297,
      v12,
      v305,
      v308,
      v311,
      v314,
      v317,
      v5,
      v37);
    *(_QWORD *)(v38 + 32) = v318;
    v16[2].n128_u64[1] = v306;
    v39 = *(_BYTE *)(v6 + 160);
    v16[3].n128_u64[0] = (unint64_t)&unk_25137AEC8;
    OUTLINED_FUNCTION_28_26(v39);
    v40 = OUTLINED_FUNCTION_161_1();
    v41 = OUTLINED_FUNCTION_19_25(v40);
    v42 = OUTLINED_FUNCTION_136();
    v326 = v41;
    OUTLINED_FUNCTION_20_31(v42, v43, v44, v45, v46, v47, v48, v49, v193, v207, v219, v231, v244, v256);
    v50 = v327;
    OUTLINED_FUNCTION_17_27(v4 + 88);
    v51 = OUTLINED_FUNCTION_32_23();
    OUTLINED_FUNCTION_97_3(v51, v52, v298, v277, v257, v28, v41, v50, (uint64_t)&v326);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_4_0();
    sub_242C48C38();
    sub_242B3AB94(v4, 0, v319, (unint64_t *)&qword_2572216B0, (uint64_t (*)(uint64_t))type metadata accessor for ResizeOperation, (uint64_t)&unk_242C550D4, sub_242BCC79C);
    v54 = v53;
    v56 = v55;
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_14_14();
    sub_242C48314();
    v299 = v56;
    v278 = *(_QWORD *)(v4 + 72);
    v57 = sub_242C480E0();
    sub_242B65310(v57, v58);
    if (*(_BYTE *)(v4 + 64) == 2)
      v59 = 0xD000000000000017;
    else
      v59 = 0x625F657A69736572;
    v60 = 0x8000000242C6C790;
    if (*(_BYTE *)(v4 + 64) != 2)
      v60 = 0xEF7261656E696C69;
    v232 = v60;
    v245 = v59;
    v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
    v61 = (__n128 *)swift_initStackObject();
    v62 = OUTLINED_FUNCTION_196_0(v61, (__n128)xmmword_242C4B7D0);
    v62[2].n128_u64[1] = 0xE100000000000000;
    v62[3].n128_u64[0] = v318;
    v62[3].n128_u64[1] = v306;
    v322 = OUTLINED_FUNCTION_39_17();
    OUTLINED_FUNCTION_83_4(v322, v63, v64, v65, v66, v67, v68, v69, v194, (uint64_t)&unk_25137AEF0, v54, v232, v245, v258, v4, v278, v285);
    v70 = OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_271(v70, v71, v72, v73, v74, v75, v76, v77, v195, v208, v220, v233, v246, v259);
    v78 = v322;
    v79 = (_QWORD *)v4;
    v80 = sub_242B31A48();
    v82 = v81;
    v83 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_149_2(v83, v84, v85, v86, v87, v88, v89, v90, v196, v209, v221, v234, v247, v260, v270, v279, v286, v293, v299,
      v303,
      v306,
      v309,
      v312,
      v315,
      v318,
      v319,
      v91);
    v92 = v222;
    v79[4] = v222;
    v79[5] = v300;
    v93 = *(_BYTE *)(v287 + 160);
    v79[6] = v210;
    OUTLINED_FUNCTION_28_26(v93);
    v323 = OUTLINED_FUNCTION_39_17();
    v94 = OUTLINED_FUNCTION_83_3();
    v95 = OUTLINED_FUNCTION_136();
    sub_242A5D034(v95, v96, v97, v98, v99, v100, v101, v102, v197, v210, v222, v235, v248, v261);
    OUTLINED_FUNCTION_221_0();
    sub_242AFE8B8(v249, v236, (uint64_t)&unk_25137AEF0, v78, v80, v82, v94, v323, v198);
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_47();
    v103 = (__n128 *)swift_initStackObject();
    v104 = OUTLINED_FUNCTION_196_0(v103, (__n128)xmmword_242C4B7D0);
    v104[2].n128_u64[1] = 0xE100000000000000;
    v104[3].n128_u64[0] = v92;
    v104[3].n128_u64[1] = v300;
    v324 = sub_242C480BC();
    OUTLINED_FUNCTION_83_4(v324, v105, v106, v107, v108, v109, v110, v111, v199, v211, v223, v236, v249, v262, v271, v280, v287);
    v112 = OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_271(v112, v113, v114, v115, v116, v117, v118, v119, v200, v212, v224, v237, v250, v263);
    v120 = OUTLINED_FUNCTION_193_0();
    *(_OWORD *)(v120 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v120 + 32) = 0x6570616873;
    *(_QWORD *)(v120 + 40) = 0xE500000000000000;
    *(_QWORD *)(v120 + 48) = v281;
    *(_QWORD *)(v120 + 56) = 0;
    *(_BYTE *)(v120 + 64) = 7;
    OUTLINED_FUNCTION_107();
    v325 = sub_242C480BC();
    OUTLINED_FUNCTION_76_6(v325, v121, v122, v123, v124, v125, v126, v127, v201, v213, v225, v238, v251, v264, v272, v281, v288, v294, v300);
    OUTLINED_FUNCTION_4_0();
    sub_242A5D5BC();
    v128 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_149_2(v128, v129, v130, v131, v132, v133, v134, v135, v202, v214, v226, v239, v252, v265, v273, v282, v289, v295, v301,
      v304,
      v307,
      v310,
      v313,
      v316,
      v94,
      v320,
      v136);
    v137 = OUTLINED_FUNCTION_75_6();
    sub_242B3AB94(v137, v138, v321, (unint64_t *)&qword_2572216B0, (uint64_t (*)(uint64_t))type metadata accessor for ResizeOperation, (uint64_t)&unk_242C550D4, sub_242BCC79C);
    OUTLINED_FUNCTION_107();
    sub_242C480BC();
    OUTLINED_FUNCTION_83_3();
    v139 = OUTLINED_FUNCTION_136();
    sub_242A5D034(v139, v140, v141, v142, v143, v144, v145, v146, v203, v215, v227, v240, v253, v266);
    OUTLINED_FUNCTION_32_23();
    OUTLINED_FUNCTION_160_2();
    sub_242AFE8B8(v147, v148, v149, v150, v151, v152, v153, v154, (uint64_t)&v326);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
    v155 = (__n128 *)OUTLINED_FUNCTION_67_9();
    OUTLINED_FUNCTION_114_0(v155, (__n128)xmmword_242C4B7D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v156 = OUTLINED_FUNCTION_57_14();
    v157 = OUTLINED_FUNCTION_24_27(v156);
    v158 = OUTLINED_FUNCTION_4_0();
    v326 = v157;
    OUTLINED_FUNCTION_23_27(v158);
    sub_242B31A48();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    v159 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_150_2(v159, v160, v161, v162, v163, v164, v165, v166, v191, v205, v217, v229, v242, v255, v268, v274, v283, v290, v296,
      v302,
      v167);
    OUTLINED_FUNCTION_89_2(v168, v169, v170, (unint64_t *)&qword_2572216B0, (uint64_t (*)(uint64_t))type metadata accessor for ResizeOperation, (uint64_t)&unk_242C550D4, sub_242BCC79C);
    *(_QWORD *)(v4 + 32) = v171;
    *(_QWORD *)(v4 + 40) = v172;
    OUTLINED_FUNCTION_12_31(*(_QWORD *)(v4 + 72), *(_BYTE *)(v4 + 80));
    v173 = OUTLINED_FUNCTION_57_14();
    v174 = OUTLINED_FUNCTION_19_25(v173);
    v175 = OUTLINED_FUNCTION_136();
    v326 = v174;
    OUTLINED_FUNCTION_20_31(v175, v176, v177, v178, v179, v180, v181, v182, v204, v216, v228, v241, v254, v267);
    OUTLINED_FUNCTION_17_27(v4 + 88);
    OUTLINED_FUNCTION_160_2();
    OUTLINED_FUNCTION_97_3(v183, v184, v185, v186, v187, v188, v189, v190, (uint64_t)&v326);
    OUTLINED_FUNCTION_35();
  }
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B323CC()
{
  sub_242B31C18();
}

uint64_t sub_242B323E0()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_254();
  if (v1)
    return sub_242B32404(v0);
  else
    return sub_242B325CC(v0);
}

uint64_t sub_242B32404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v24 = sub_242B33CF8();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v30 = MEMORY[0x24BEE4AF8];
  v31 = sub_242C480BC();
  sub_242A5D5BC();
  v6 = v30;
  v7 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  sub_242B3AB94(v2, 0, a1, &qword_257221EE8, (uint64_t (*)(uint64_t))type metadata accessor for LinearOperation, (uint64_t)&unk_242C54D24, sub_242BCC584);
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  v11 = *(_BYTE *)(v2 + 72);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v2 + 64);
  *(_BYTE *)(inited + 56) = v11;
  sub_242C480E0();
  v31 = sub_242C480BC();
  v12 = sub_242A5A760(inited);
  v13 = swift_bridgeObjectRelease();
  v30 = v12;
  sub_242A5D034(v13, v14, v15, v16, v17, v18, v19, v20, v23, (uint64_t)v24, v26, v27, v28, v29);
  v21 = v31;
  sub_242A56808(v2 + 96, (uint64_t)&v30);
  sub_242AFE700(0x7261656E696CLL, 0xE600000000000000, v25, v5, v6, v7, v12, v21, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B325CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v2 = v1;
  sub_242AFDA90();
  v5 = v4;
  v7 = v6;
  v155 = a1;
  sub_242AFDA90();
  v9 = v8;
  v11 = v10;
  v149 = *(_QWORD *)(v2 + 56);
  if (v149)
  {
    sub_242C480E0();
    sub_242C48314();
    sub_242C48314();
    sub_242C48314();
    sub_242AFDC64(0x6C756D74616DLL, 0xE600000000000000);
    sub_242C48314();
    swift_bridgeObjectRelease();
    v12 = v7;
    v147 = v5;
  }
  else
  {
    sub_242B3AB94(v2, 0, v155, &qword_257221EE8, (uint64_t (*)(uint64_t))type metadata accessor for LinearOperation, (uint64_t)&unk_242C54D24, sub_242BCC584);
    v147 = v13;
    v12 = v14;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(inited + 32) = 120;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = 121;
  *(_QWORD *)(inited + 72) = 0xE100000000000000;
  *(_QWORD *)(inited + 80) = v9;
  *(_QWORD *)(inited + 88) = v11;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v154 = sub_242C480BC();
  sub_242A5B0E8(inited, v17, v18, v19, v20, v21, v22, v23, v100, v107, v114, v120, v125, v132, v139, v141, 2);
  v25 = v24;
  v26 = swift_bridgeObjectRelease();
  sub_242A5D488(v26, v27, v28, v29, v30, v31, v32, v33, v101, v108, v115, v121, v126, v133);
  v35 = v25;
  v34 = v154;
  v154 = sub_242C480BC();
  sub_242A5AFE0((uint64_t)&unk_25137AE58, v36, v37, v38, v39, v40, v41, v42, v102, v109, v116, v122, v127, v134, v140, v142, v144, 4, v146);
  v153 = v43;
  sub_242A5D5BC();
  v45 = v153;
  v44 = v154;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v46 = swift_initStackObject();
  *(_OWORD *)(v46 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v46 + 32) = v147;
  *(_QWORD *)(v46 + 40) = v12;
  v47 = *(_QWORD *)(v2 + 64);
  v48 = *(unsigned __int8 *)(v2 + 72);
  *(_QWORD *)(v46 + 48) = v47;
  HIDWORD(v135) = v48;
  *(_BYTE *)(v46 + 56) = v48;
  sub_242C480E0();
  sub_242C480E0();
  v154 = sub_242C480BC();
  v49 = v12;
  v50 = sub_242A5A760(v46);
  v51 = swift_bridgeObjectRelease();
  v153 = v50;
  sub_242A5D034(v51, v52, v53, v54, v55, v56, v57, v58, v103, v110, 1, 2, v128, v135);
  v59 = v2;
  v60 = v154;
  v111 = v59;
  sub_242A56808(v59 + 96, (uint64_t)&v153);
  sub_242AFE8B8(0x6C756D74616DLL, 0xE600000000000000, v35, v34, v45, v44, v50, v60, (uint64_t)&v153);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v149)
  {
    swift_retain();
    v61 = v155;
    sub_242AFDA90();
    v63 = v62;
    v65 = v64;
    v66 = swift_initStackObject();
    *(_OWORD *)(v66 + 16) = v145;
    *(_QWORD *)(v66 + 32) = 120;
    *(_QWORD *)(v66 + 40) = 0xE100000000000000;
    *(_QWORD *)(v66 + 48) = v147;
    *(_QWORD *)(v66 + 56) = v49;
    *(_QWORD *)(v66 + 64) = 121;
    *(_QWORD *)(v66 + 72) = 0xE100000000000000;
    *(_QWORD *)(v66 + 80) = v63;
    *(_QWORD *)(v66 + 88) = v65;
    v67 = MEMORY[0x24BEE4AF8];
    v150 = sub_242C480BC();
    sub_242A5B0E8(v66, v68, v69, v70, v71, v72, v73, v74, v104, v111, v117, v123, v129, v136, v16, v47, v145);
    v76 = v75;
    v77 = swift_bridgeObjectRelease();
    sub_242A5D488(v77, v78, v79, v80, v81, v82, v83, v84, v105, v112, v118, v124, v130, v137);
    v85 = v150;
    v148 = v76;
    v151 = sub_242C480BC();
    sub_242A5D5BC();
    v86 = v151;
    v87 = swift_initStackObject();
    *(_OWORD *)(v87 + 16) = v119;
    sub_242B3AB94(v113, 0, v61, &qword_257221EE8, (uint64_t (*)(uint64_t))type metadata accessor for LinearOperation, (uint64_t)&unk_242C54D24, sub_242BCC584);
    *(_QWORD *)(v87 + 32) = v88;
    *(_QWORD *)(v87 + 40) = v89;
    *(_QWORD *)(v87 + 48) = v143;
    *(_BYTE *)(v87 + 56) = BYTE4(v138);
    sub_242C480E0();
    v152 = sub_242C480BC();
    v90 = sub_242A5A760(v87);
    v91 = swift_bridgeObjectRelease();
    sub_242A5D034(v91, v92, v93, v94, v95, v96, v97, v98, v106, v113, v119, *((uint64_t *)&v119 + 1), v131, v138);
    sub_242AFE8B8(6579297, 0xE300000000000000, v148, v85, v67, v86, v90, v152, (uint64_t)&v153);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B32AD8()
{
  return sub_242B323E0();
}

void sub_242B32AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *inited;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __n128 *v88;
  __n128 *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 *v108;
  __n128 *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __n128 *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  __n128 *v162;
  __n128 *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __n128 *v183;
  __n128 *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  __n128 *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  __n128 v202;
  uint64_t v203;
  char v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __n128 *v215;
  __n128 *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  __n128 *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  __n128 *v269;
  __n128 *v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  __n128 *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  __n128 v295;
  _QWORD *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  __n128 *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  __n128 v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  char v527;
  uint64_t v528;
  char v529;
  char v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  char v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  __n128 v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;

  OUTLINED_FUNCTION_18_1();
  v2 = v0;
  v504 = *(_QWORD *)(v0 + 40);
  sub_242AFDA90();
  v4 = v3;
  v6 = v5;
  v490 = *(_QWORD *)(v0 + 48);
  sub_242AFDA90();
  v385 = v7;
  v409 = v8;
  sub_242AFDA90();
  v10 = v9;
  v12 = v11;
  v544 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
  inited = (__n128 *)swift_initStackObject();
  v548 = (__n128)xmmword_242C4B7F0;
  v14 = OUTLINED_FUNCTION_46_11(inited, (__n128)xmmword_242C4B7F0);
  v14[3].n128_u64[0] = v4;
  v14[3].n128_u64[1] = v6;
  v15 = OUTLINED_FUNCTION_176_0((uint64_t)v14);
  *(_QWORD *)(v15 + 80) = v10;
  *(_QWORD *)(v15 + 88) = v12;
  OUTLINED_FUNCTION_28_1();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v561 = OUTLINED_FUNCTION_42_18();
  sub_242A5B0E8((uint64_t)inited, v17, v18, v19, v20, v21, v22, v23, v336, v362, v385, v409, v4, v6, v476, v490, v504);
  v25 = v24;
  v26 = OUTLINED_FUNCTION_108();
  v560 = v25;
  sub_242A5D488(v26, v27, v28, v29, v30, v31, v32, v33, v337, v363, v386, v410, v433, v455);
  v34 = v561;
  v561 = OUTLINED_FUNCTION_42_18();
  sub_242A5AFE0((uint64_t)&unk_25137AF90, v35, v36, v37, v38, v39, v40, v41, v338, v364, v387, v411, v434, v456, v477, v491, v505, v518, v527);
  OUTLINED_FUNCTION_155_2(v42);
  v43 = v561;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_77_6(v2, v45, v46, &qword_257221EE0, (uint64_t (*)(uint64_t))type metadata accessor for LinearGradientOperation, (uint64_t)&unk_242C54C0C, (uint64_t (*)(uint64_t))sub_242BCC59C);
  OUTLINED_FUNCTION_198_0(v47, v48);
  if (!v50)
    goto LABEL_27;
  v540 = v44;
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v49 + 32), *(_BYTE *)(v49 + 40));
  v519 = v16;
  v51 = sub_242C480BC();
  v52 = OUTLINED_FUNCTION_19_25(v51);
  v53 = OUTLINED_FUNCTION_136();
  v560 = v52;
  OUTLINED_FUNCTION_20_31(v53, v54, v55, v56, v57, v58, v59, v60, v339, v1, v388, v412, v435, v457);
  v478 = v2;
  OUTLINED_FUNCTION_17_27(v2 + 80);
  v61 = OUTLINED_FUNCTION_144_2();
  OUTLINED_FUNCTION_178_0(v61, v62, v25, v34, v25, v43, v63, v64, (uint64_t)&v560);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_0();
  v65 = v506;
  if (*(_QWORD *)(*(_QWORD *)(v506 + 152) + 16) == 2)
  {
    v66 = v458;
    v528 = v436;
  }
  else
  {
    v68 = v436;
    v67 = v458;
    sub_242C480E0();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_120_2();
    OUTLINED_FUNCTION_235();
    OUTLINED_FUNCTION_4_0();
    v66 = v458;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v69 = (__n128 *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_59_11(v69, v70, v71, v72, v73, v74, v75, v76, v340, v365, v389, v413, v436, v458, v478, v492, v506, v519, v436,
      v25,
      v540,
      v544,
      v77);
    v78 = 1;
    OUTLINED_FUNCTION_252();
    v82 = (v81 >> 1) - v80;
    if (v81 >> 1 != v80)
    {
      if ((uint64_t)(v81 >> 1) <= v80)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      v83 = (uint64_t *)(v79 + 8 * v80);
      v84 = 1;
      while (1)
      {
        v85 = *v83++;
        v78 = v84 * v85;
        if ((unsigned __int128)(v84 * (__int128)v85) >> 64 != (v84 * v85) >> 63)
          break;
        v84 = v78;
        if (!--v82)
          goto LABEL_9;
      }
      __break(1u);
      goto LABEL_26;
    }
LABEL_9:
    v69[2].n128_u64[0] = v78;
    OUTLINED_FUNCTION_0_2();
    swift_unknownObjectRelease();
    v86 = sub_242C2F2BC(*(_QWORD *)(v65 + 152));
    if ((v87 & 1) != 0)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v69[2].n128_u64[1] = v86;
    v88 = (__n128 *)swift_initStackObject();
    v89 = OUTLINED_FUNCTION_46_11(v88, (__n128)xmmword_242C4B7D0);
    v89[3].n128_u64[0] = v68;
    v89[3].n128_u64[1] = v67;
    v90 = OUTLINED_FUNCTION_82_4();
    OUTLINED_FUNCTION_83_4(v90, v91, v92, v93, v94, v95, v96, v97, v341, v366, v390, v414, v437, v459, v479, v493, v507);
    v99 = v98;
    v100 = OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_208_0(v100, v101, v102, v103, v104, v105, v106, v107, v342, v367, v391, v415, v438, v460);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    v108 = (__n128 *)swift_initStackObject();
    v109 = OUTLINED_FUNCTION_29_19(v108, (__n128)xmmword_242C4B7D0);
    v109[3].n128_u64[0] = (unint64_t)v69;
    v109[3].n128_u64[1] = 0;
    OUTLINED_FUNCTION_273((uint64_t)v109);
    sub_242C480E0();
    v110 = OUTLINED_FUNCTION_82_4();
    OUTLINED_FUNCTION_76_6(v110, v111, v112, v113, v114, v115, v116, v117, v343, v368, v392, v416, v439, v99, v480, v494, v508, v520, v529);
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_207_0();
    v118 = swift_initStackObject();
    *(_OWORD *)(v118 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v118 + 32) = v528;
    *(_QWORD *)(v118 + 40) = v66;
    v119 = *(_BYTE *)(v506 + 160);
    *(_QWORD *)(v118 + 48) = v69;
    *(_BYTE *)(v118 + 56) = v119;
    OUTLINED_FUNCTION_107();
    sub_242C480BC();
    OUTLINED_FUNCTION_55_9();
    v120 = OUTLINED_FUNCTION_4_0();
    sub_242A5D034(v120, v121, v122, v123, v124, v125, v126, v127, v344, v369, v393, v417, v440, v461);
    OUTLINED_FUNCTION_32_23();
    OUTLINED_FUNCTION_138_2();
    OUTLINED_FUNCTION_178_0(v128, v129, v130, v131, v132, v133, v134, v135, (uint64_t)&v560);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_4_0();
  }
  v137 = v478;
  v136 = v492;
  v536 = v66;
  if (*(_QWORD *)(*(_QWORD *)(v492 + 152) + 16) == 2)
  {
    v139 = v389;
    v138 = v413;
    goto LABEL_20;
  }
  v141 = v389;
  v140 = v413;
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_168_0();
  OUTLINED_FUNCTION_120_2();
  OUTLINED_FUNCTION_235();
  OUTLINED_FUNCTION_4_0();
  v142 = v413;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v143 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_59_11(v143, v144, v145, v146, v147, v148, v149, v150, v340, v365, v389, v413, v436, v458, v478, v492, v389, v519, v528,
    v66,
    v540,
    v544,
    v151);
  v152 = 1;
  OUTLINED_FUNCTION_252();
  v156 = (v155 >> 1) - v154;
  if (v155 >> 1 != v154)
  {
    if ((uint64_t)(v155 >> 1) <= v154)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v157 = (uint64_t *)(v153 + 8 * v154);
    v158 = 1;
    while (1)
    {
      v159 = *v157++;
      v152 = v158 * v159;
      if ((unsigned __int128)(v158 * (__int128)v159) >> 64 != (v158 * v159) >> 63)
        break;
      v158 = v152;
      if (!--v156)
        goto LABEL_18;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_18:
  v143[2].n128_u64[0] = v152;
  OUTLINED_FUNCTION_0_2();
  swift_unknownObjectRelease();
  v160 = sub_242C2F2BC(*(_QWORD *)(v136 + 152));
  if ((v161 & 1) == 0)
  {
    v143[2].n128_u64[1] = v160;
    v162 = (__n128 *)swift_initStackObject();
    v163 = OUTLINED_FUNCTION_46_11(v162, (__n128)xmmword_242C4B7D0);
    v163[3].n128_u64[0] = v141;
    v163[3].n128_u64[1] = v140;
    v552 = OUTLINED_FUNCTION_118_1();
    OUTLINED_FUNCTION_174_0(v552, v164, v165, v166, v167, v168, v169, v170, v345, v370, v394, v418, v441, v142, v481, v495, v509);
    v172 = v171;
    v173 = OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_208_0(v173, v174, v175, v176, v177, v178, v179, v180, v346, v371, v395, v419, v442, v462);
    v181 = v172;
    v182 = v552;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    v183 = (__n128 *)swift_initStackObject();
    v184 = OUTLINED_FUNCTION_29_19(v183, (__n128)xmmword_242C4B7D0);
    v184[3].n128_u64[0] = (unint64_t)v143;
    v184[3].n128_u64[1] = 0;
    OUTLINED_FUNCTION_273((uint64_t)v184);
    sub_242C480E0();
    v553 = OUTLINED_FUNCTION_118_1();
    OUTLINED_FUNCTION_38_18(v553, v185, v186, v187, v188, v189, v190, v191, v347, v372, v396, v420, v443, v463, v482, v496, v510, v521, v530);
    v193 = v192;
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_207_0();
    v194 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_109_1(v194, v195, v196, v197, v198, v199, v200, v201, v348, v373, v397, v421, v553, v464, v483, v497, v511, v522, v531,
      v537,
      v541,
      v545,
      2,
      4,
      v202);
    v139 = v506;
    v138 = v465;
    *(_QWORD *)(v203 + 32) = v506;
    *(_QWORD *)(v203 + 40) = v465;
    v204 = *(_BYTE *)(v492 + 160);
    *(_QWORD *)(v203 + 48) = v143;
    *(_BYTE *)(v203 + 56) = v204;
    OUTLINED_FUNCTION_28_1();
    v554 = sub_242C480BC();
    OUTLINED_FUNCTION_83_3();
    v205 = OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_166_1(v205, v206, v207, v208, v209, v210, v211, v212, v349, v374, v398, v422, v444, v465);
    v213 = OUTLINED_FUNCTION_32_23();
    OUTLINED_FUNCTION_248(v213, v214, v181, v182, v193, v436, v193, v554, (uint64_t)&v560);
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_47();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_81();
    v137 = v478;
    v66 = v536;
LABEL_20:
    v215 = (__n128 *)OUTLINED_FUNCTION_259();
    v216 = OUTLINED_FUNCTION_46_11(v215, v548);
    v216[3].n128_u64[0] = v528;
    v216[3].n128_u64[1] = v66;
    v217 = OUTLINED_FUNCTION_176_0((uint64_t)v216);
    *(_QWORD *)(v217 + 80) = v139;
    *(_QWORD *)(v217 + 88) = v138;
    OUTLINED_FUNCTION_107();
    v555 = OUTLINED_FUNCTION_129_1();
    OUTLINED_FUNCTION_174_0(v555, v218, v219, v220, v221, v222, v223, v224, v340, v365, v389, v413, v436, v458, v478, v492, v506);
    v225 = OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_208_0(v225, v226, v227, v228, v229, v230, v231, v232, v350, v375, v399, v423, v445, v466);
    OUTLINED_FUNCTION_129_1();
    sub_242A5AFE0((uint64_t)&unk_25137B000, v233, v234, v235, v236, v237, v238, v239, v351, v376, v400, v424, v446, v467, v484, v498, v512, v519, v528);
    v551 = v240;
    OUTLINED_FUNCTION_207_0();
    v241 = (__n128 *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_109_1(v241, v242, v243, v244, v245, v246, v247, v248, v352, v377, v401, v425, v447, v468, v485, v499, v513, v523, v532,
      v536,
      v540,
      v544,
      v548.n128_i64[0],
      v548.n128_i64[1],
      v249);
    OUTLINED_FUNCTION_246(v137, 1, v250, &qword_257221EE0, (uint64_t (*)(uint64_t))type metadata accessor for LinearGradientOperation, (uint64_t)&unk_242C54C0C, (uint64_t (*)(uint64_t))sub_242BCC59C);
    OUTLINED_FUNCTION_198_0(v251, v252);
    if (v254 >= 2)
    {
      OUTLINED_FUNCTION_12_31(*(_QWORD *)(v253 + 48), *(_BYTE *)(v253 + 56));
      v556 = OUTLINED_FUNCTION_163_1();
      OUTLINED_FUNCTION_83_3();
      v255 = OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_166_1(v255, v256, v257, v258, v259, v260, v261, v262, v353, v378, v402, v426, v448, v469);
      OUTLINED_FUNCTION_221_0();
      OUTLINED_FUNCTION_144_2();
      OUTLINED_FUNCTION_138_2();
      OUTLINED_FUNCTION_248(v263, v264, v265, v266, v267, v268, v551, v556, v354);
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_81();
      if (!*(_QWORD *)(v137 + 64))
      {
LABEL_24:
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_0_9();
        return;
      }
      v269 = (__n128 *)OUTLINED_FUNCTION_2_0();
      v270 = OUTLINED_FUNCTION_195_0(v269, (__n128)xmmword_242C4B7D0);
      v270[3].n128_u64[0] = v271;
      v270[3].n128_u64[1] = v538;
      v557 = OUTLINED_FUNCTION_82_4();
      OUTLINED_FUNCTION_83_4(v557, v272, v273, v274, v275, v276, v277, v278, v355, v379, v403, v427, v449, v470, v486, v500, v514);
      v279 = OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_208_0(v279, v280, v281, v282, v283, v284, v285, v286, v356, v380, v404, v428, v450, v471);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
      v287 = (__n128 *)OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_59_11(v287, v288, v289, v290, v291, v292, v293, v294, v357, v381, v405, v429, v451, v472, v487, v501, v515, v524, v533,
        v538,
        v542,
        v546,
        v295);
      v296[4] = 1936029793;
      v296[5] = 0xE400000000000000;
      v296[6] = &unk_25137B070;
      v296[7] = 0;
      v297 = OUTLINED_FUNCTION_273((uint64_t)v296);
      v298 = OUTLINED_FUNCTION_143_1(v297);
      *(_QWORD *)(v298 + 88) = 0;
      *(_QWORD *)(v298 + 96) = 0;
      *(_BYTE *)(v298 + 104) = 0;
      v558 = OUTLINED_FUNCTION_82_4();
      OUTLINED_FUNCTION_38_18(v558, v299, v300, v301, v302, v303, v304, v305, v358, v382, v406, v430, v452, v473, v488, v502, v516, v525, v534);
      v307 = v306;
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_207_0();
      v308 = (__n128 *)OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_109_1(v308, v309, v310, v311, v312, v313, v314, v315, v359, v383, v407, v431, v453, v474, v489, v503, v517, v526, v535,
        v539,
        v543,
        v547,
        v549,
        v550,
        v316);
      OUTLINED_FUNCTION_246(v137, 2, v317, &qword_257221EE0, (uint64_t (*)(uint64_t))type metadata accessor for LinearGradientOperation, (uint64_t)&unk_242C54C0C, (uint64_t (*)(uint64_t))sub_242BCC59C);
      OUTLINED_FUNCTION_198_0(v318, v319);
      if (v321 >= 3)
      {
        OUTLINED_FUNCTION_12_31(*(_QWORD *)(v320 + 64), *(_BYTE *)(v320 + 72));
        v559 = OUTLINED_FUNCTION_163_1();
        OUTLINED_FUNCTION_83_3();
        v322 = OUTLINED_FUNCTION_136();
        OUTLINED_FUNCTION_166_1(v322, v323, v324, v325, v326, v327, v328, v329, v360, v384, v408, v432, v454, v475);
        OUTLINED_FUNCTION_186_0();
        OUTLINED_FUNCTION_138_2();
        OUTLINED_FUNCTION_248(v330, v331, v332, v333, v334, v335, v307, v559, v361);
        OUTLINED_FUNCTION_80();
        OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_47();
        OUTLINED_FUNCTION_3_6();
        OUTLINED_FUNCTION_81();
        goto LABEL_24;
      }
      goto LABEL_29;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_242B33508(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_242AD5D84(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

void sub_242B33578()
{
  sub_242B32AEC();
}

void sub_242B3358C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58[9];

  OUTLINED_FUNCTION_18_1();
  v1 = v0;
  v2 = sub_242B33CF8();
  v49 = v3;
  v51 = (uint64_t)v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v4 = (__n128 *)OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_73_9(v4, (__n128)xmmword_242C533B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v5 = OUTLINED_FUNCTION_2_0();
  v6 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v5 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v5 + 32) = v6;
  v4[3].n128_u64[0] = v5;
  v4[3].n128_u64[1] = 0;
  v4[4].n128_u8[0] = 5;
  OUTLINED_FUNCTION_232_0();
  v7 = OUTLINED_FUNCTION_2_0();
  v8 = *(_QWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v8;
  *(_OWORD *)(v7 + 16) = xmmword_242C4DE40;
  *(_QWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v7 + 56) = v9;
  v4[5].n128_u64[1] = v7;
  v4[6].n128_u64[0] = 0;
  v4[6].n128_u8[8] = 5;
  OUTLINED_FUNCTION_153_2();
  OUTLINED_FUNCTION_95_3((__n128)xmmword_242C57580);
  v10 = OUTLINED_FUNCTION_2_0();
  v11 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v10 + 16) = xmmword_242C4B7F0;
  *(_OWORD *)(v10 + 32) = v11;
  v4[10].n128_u64[1] = v10;
  v4[11].n128_u64[0] = 0;
  v4[11].n128_u8[8] = 5;
  v4[12].n128_u64[0] = 0x7370756F7267;
  v4[12].n128_u64[1] = 0xE600000000000000;
  OUTLINED_FUNCTION_181_0(*(_QWORD *)(v1 + 112));
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v12 = OUTLINED_FUNCTION_42_18();
  OUTLINED_FUNCTION_21_27(v12, v13, v14, v15, v16, v17, v18, v19, v43, v45, 2, 4, v49, v51, v53, v54, v55, v56, v57);
  v21 = v20;
  OUTLINED_FUNCTION_136();
  v58[0] = v21;
  OUTLINED_FUNCTION_36_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v22 = OUTLINED_FUNCTION_104_2();
  *(_OWORD *)(v22 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_77_6(v1, v23, v24, &qword_257221ED8, (uint64_t (*)(uint64_t))type metadata accessor for Convolution2DOperation, (uint64_t)&unk_242C54D40, sub_242BCC7D8);
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v26;
  OUTLINED_FUNCTION_12_31(*(_QWORD *)(v1 + 192), *(_BYTE *)(v1 + 200));
  v27 = OUTLINED_FUNCTION_42_18();
  v28 = OUTLINED_FUNCTION_19_25(v27);
  v29 = OUTLINED_FUNCTION_136();
  v58[0] = v28;
  OUTLINED_FUNCTION_20_31(v29, v30, v31, v32, v33, v34, v35, v36, v44, v46, v47, v48, v50, v52);
  OUTLINED_FUNCTION_17_27(v1 + 128);
  OUTLINED_FUNCTION_35_18(1986948963, 0xE400000000000000, v37, v38, v39, v40, v41, v42, (uint64_t)v58);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B337A8()
{
  sub_242B3358C();
}

void sub_242B337BC()
{
  __n128 *v0;
  unint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  __n128 *inited;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD v42[9];

  OUTLINED_FUNCTION_18_1();
  v3 = v0;
  v35 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221170);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_136_2(inited, (__n128)xmmword_242C4B810);
  OUTLINED_FUNCTION_194_0(v3[12].n128_i64[0]);
  inited[4].n128_u64[1] = v1;
  inited[5].n128_u64[0] = 0x746867696577;
  inited[5].n128_u64[1] = 0xE600000000000000;
  v6 = v3[3].n128_u64[0];
  inited[6].n128_u64[0] = v6;
  swift_retain();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v7 = OUTLINED_FUNCTION_82_4();
  v8 = OUTLINED_FUNCTION_25_26(v7);
  v9 = OUTLINED_FUNCTION_136();
  v42[0] = v8;
  OUTLINED_FUNCTION_23_27(v9);
  OUTLINED_FUNCTION_220_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v10 = OUTLINED_FUNCTION_104_2();
  OUTLINED_FUNCTION_73_9((__n128 *)v10, (__n128)xmmword_242C575B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v11 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_187_0(v11, v12, (__n128)xmmword_242C4B7F0);
  *(_QWORD *)(v10 + 72) = 0x657079745F646170;
  *(_QWORD *)(v10 + 80) = 0xE800000000000000;
  *(_OWORD *)(v10 + 88) = xmmword_242C57580;
  *(_BYTE *)(v10 + 104) = 4;
  *(_QWORD *)(v10 + 112) = 6578544;
  *(_QWORD *)(v10 + 120) = 0xE300000000000000;
  v13 = OUTLINED_FUNCTION_2_0();
  v14 = v3[5].n128_u64[0];
  v15 = v3[5].n128_u64[1];
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v14;
  *(_OWORD *)(v13 + 16) = xmmword_242C4DE40;
  *(_QWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 56) = v15;
  *(_QWORD *)(v10 + 128) = v13;
  *(_QWORD *)(v10 + 136) = 0;
  *(_BYTE *)(v10 + 144) = v6;
  *(_QWORD *)(v10 + 152) = 0x6E6F6974616C6964;
  *(_QWORD *)(v10 + 160) = 0xE900000000000073;
  v16 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_157_1(v16, v3[6], (__n128)xmmword_242C4B7F0);
  *(_QWORD *)(v10 + 192) = v17;
  *(_QWORD *)(v10 + 200) = 0xE600000000000000;
  OUTLINED_FUNCTION_181_0(v3[7].n128_i64[0]);
  strcpy((char *)(v10 + 232), "has_input_grad");
  *(_BYTE *)(v10 + 247) = -18;
  *(_OWORD *)(v10 + 248) = xmmword_242C501F0;
  *(_BYTE *)(v10 + 264) = 0;
  *(_QWORD *)(v10 + 272) = 0x676965775F736168;
  *(_QWORD *)(v10 + 280) = 0xEF646172675F7468;
  *(_OWORD *)(v10 + 288) = xmmword_242C501F0;
  *(_BYTE *)(v10 + 304) = 0;
  strcpy((char *)(v10 + 312), "has_bias_grad");
  *(_WORD *)(v10 + 326) = -4864;
  *(_QWORD *)(v10 + 328) = v3[3].n128_u64[1] != 0;
  *(_QWORD *)(v10 + 336) = 0;
  *(_BYTE *)(v10 + 344) = 0;
  v18 = OUTLINED_FUNCTION_82_4();
  OUTLINED_FUNCTION_21_27(v18, v19, v20, v21, v22, v23, v24, v25, v31, v32, 2, 4, v33, v35, v37, v38, v39, v40, v41);
  v27 = v26;
  OUTLINED_FUNCTION_136();
  v42[0] = v27;
  OUTLINED_FUNCTION_36_19();
  v28 = sub_242B33AC4(v36);
  v30 = v29;
  OUTLINED_FUNCTION_17_27((uint64_t)&v3[8]);
  OUTLINED_FUNCTION_84_5(0x6172675F766E6F63, 0xE900000000000064, v34, v2, v27, v42[1], v28, v30, (uint64_t)v42);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B33AC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FB8);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7F0;
  sub_242B3AB94(v1, 0, a1, &qword_257221ED0, (uint64_t (*)(uint64_t))type metadata accessor for Convolution2DGradientOperation, (uint64_t)&unk_242C54D40, sub_242BCC7D8);
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v9;
  v10 = sub_242B01BC8();
  if (!*(_QWORD *)(v10 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = v10;
  v11 = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v7 + 56) = v11;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  sub_242B3AB94(v1, 1, a1, &qword_257221ED0, (uint64_t (*)(uint64_t))type metadata accessor for Convolution2DGradientOperation, (uint64_t)&unk_242C54D40, sub_242BCC7D8);
  *(_QWORD *)(v7 + 64) = v12;
  *(_QWORD *)(v7 + 72) = v13;
  v14 = sub_242B01BC8();
  if (*(_QWORD *)(v14 + 16) < 2uLL)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = *(_BYTE *)(v14 + 56);
  *(_QWORD *)(v7 + 80) = *(_QWORD *)(v14 + 48);
  *(_BYTE *)(v7 + 88) = v15;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + 56))
  {
    sub_242B3AB94(v1, 2, a1, &qword_257221ED0, (uint64_t (*)(uint64_t))type metadata accessor for Convolution2DGradientOperation, (uint64_t)&unk_242C54D40, sub_242BCC7D8);
    a1 = v16;
    v2 = v17;
    v18 = sub_242B01BC8();
    if (*(_QWORD *)(v18 + 16) >= 3uLL)
    {
      v1 = *(_QWORD *)(v18 + 64);
      v4 = *(_BYTE *)(v18 + 72);
      sub_242C480E0();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v7 + 16);
      v3 = v5 + 1;
      if (v5 < *(_QWORD *)(v7 + 24) >> 1)
      {
LABEL_6:
        *(_QWORD *)(v7 + 16) = v3;
        v19 = v7 + 32 * v5;
        *(_QWORD *)(v19 + 32) = a1;
        *(_QWORD *)(v19 + 40) = v2;
        *(_QWORD *)(v19 + 48) = v1;
        *(_BYTE *)(v19 + 56) = v4;
        goto LABEL_7;
      }
LABEL_11:
      sub_242A5EBF8();
      v7 = v29;
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v20 = sub_242C480BC();
  sub_242A5D034(v20, v21, v22, v23, v24, v25, v26, v27, v7, v20, v31, v32, v33, v34);
  return v30;
}

void sub_242B33CE4()
{
  sub_242B337BC();
}

__n128 *sub_242B33CF8()
{
  _QWORD *v0;
  __n128 *v1;
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FA8);
  v1 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v2 = OUTLINED_FUNCTION_46_11(v1, (__n128)xmmword_242C4B7F0);
  v3 = v0[6];
  v2[3].n128_u64[0] = v0[5];
  v2[3].n128_u64[1] = 0x746867696577;
  v2[4].n128_u64[0] = 0xE600000000000000;
  v2[4].n128_u64[1] = v3;
  v4 = v0[7];
  if (v4)
  {
    swift_retain_n();
    swift_retain();
    OUTLINED_FUNCTION_5();
    sub_242A5E37C();
    v1 = v5;
    v5[1].n128_u64[0] = 3;
    v5[5].n128_u64[0] = 1935763810;
    v5[5].n128_u64[1] = 0xE400000000000000;
    v5[6].n128_u64[0] = v4;
    OUTLINED_FUNCTION_135();
  }
  else
  {
    swift_retain();
    OUTLINED_FUNCTION_5();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v7 = sub_242C480BC();
  sub_242A5CDDC(v7);
  return v1;
}

void sub_242B33E04()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __n128 *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 *v41;
  uint64_t v42;
  __n128 *v43;
  double v44;
  __n128 *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 *v59;
  __n128 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __n128 *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  __n128 *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  __n128 *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t *v126;
  uint64_t (*v127)(uint64_t);
  uint64_t v128;
  uint64_t (*v129)(uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t *v147;
  uint64_t (*v148)(uint64_t);
  uint64_t v149;
  uint64_t (*v150)(uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _BYTE v256[57];
  char v257;
  uint64_t v258;

  OUTLINED_FUNCTION_18_1();
  v258 = v3;
  OUTLINED_FUNCTION_254();
  if (!v4)
    goto LABEL_35;
  v5 = v0;
  sub_242B01ECC();
  swift_retain();
  v6 = sub_242B29F94();
  OUTLINED_FUNCTION_136();
  if ((v6 & 1) == 0)
  {
    OUTLINED_FUNCTION_205_0();
    OUTLINED_FUNCTION_94_3();
LABEL_37:
    sub_242A59170();
  }
  v7 = OUTLINED_FUNCTION_142_2();
  v9 = sub_242A88AA4(v7, v8 & 0xFFFFFFFFFFFFLL | 0xEF64000000000000);
  v11 = v10;
  v251 = v10;
  v231 = v9;
  if (v0[14].n128_i64[1] <= 0 && v0[14].n128_i64[0] < 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v37 = (_OWORD *)OUTLINED_FUNCTION_2_0();
    v37[1] = xmmword_242C4DE40;
    v142 = v0[5].n128_i64[0];
    v143 = v0[5].n128_i64[1];
    *((_QWORD *)v37 + 4) = v142;
    *((_QWORD *)v37 + 5) = v142;
    v225 = v142;
    *((_QWORD *)v37 + 6) = v143;
    *((_QWORD *)v37 + 7) = v143;
    v210 = v143;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    v144 = OUTLINED_FUNCTION_75_6();
    OUTLINED_FUNCTION_246(v144, v145, v146, v147, v148, v149, v150);
    *(_QWORD *)(inited + 32) = v151;
    *(_QWORD *)(inited + 40) = v152;
    v153 = v0[12].n128_i64[0];
    v154 = v0[12].n128_u8[8];
    *(_QWORD *)(inited + 48) = v153;
    HIDWORD(v183) = v154;
    *(_BYTE *)(inited + 56) = v154;
    v200 = v153;
    sub_242C480E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v255 = sub_242C480BC();
    v155 = OUTLINED_FUNCTION_55_9();
    v156 = OUTLINED_FUNCTION_4_0();
    v254 = v155;
    sub_242A5D034(v156, v157, v158, v159, v160, v161, v162, v163, v165, v174, v183, v200, v210, v211);
    v237 = v255;
    v242 = v155;
    goto LABEL_17;
  }
  v12 = v0[5].n128_i64[0];
  v13 = 2 * v12;
  if (__OFADD__(v12, v12))
  {
    __break(1u);
    goto LABEL_26;
  }
  v14 = v0[14].n128_u64[0];
  v0 = (__n128 *)(v13 - v14);
  if (__OFSUB__(v13, v14))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    sub_242B4B43C();
    v15 = v164;
    goto LABEL_10;
  }
  v2 = v5[12].n128_i64[0];
  if (*(_QWORD *)(v2 + 16) <= 2uLL)
  {
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_32_0();
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_32_0();
  v15 = (_QWORD *)v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_27;
LABEL_10:
  v16 = v15[2];
  if (v16 < 3)
  {
    __break(1u);
    goto LABEL_29;
  }
  v17 = v15[6];
  v18 = __OFADD__(v17, v0);
  v19 = (char *)v0 + v17;
  if (v18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v15[6] = v19;
  v20 = v5[5].n128_u64[1];
  v21 = 2 * v20;
  if (__OFADD__(v20, v20))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v22 = v5[14].n128_u64[1];
  v18 = __OFSUB__(v21, v22);
  v23 = v21 - v22;
  if (v18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v16 <= 3)
  {
    OUTLINED_FUNCTION_102_0();
LABEL_40:
    sub_242A59264();
  }
  v24 = v15[7];
  v18 = __OFADD__(v24, v23);
  v25 = v24 + v23;
  if (v18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v201 = v5[5].n128_i64[1];
  v225 = v12;
  v15[7] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v26 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v26 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v26 + 32) = v9;
  *(_QWORD *)(v26 + 40) = v11;
  v27 = v5[12].n128_u8[8];
  *(_QWORD *)(v26 + 48) = v15;
  HIDWORD(v183) = v27;
  *(_BYTE *)(v26 + 56) = v27;
  OUTLINED_FUNCTION_107();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v255 = sub_242C480BC();
  inited = OUTLINED_FUNCTION_83_3();
  v29 = OUTLINED_FUNCTION_136();
  v254 = inited;
  sub_242A5D034(v29, v30, v31, v32, v33, v34, v35, v36, v165, v174, v183, v2, v201, v211);
  v237 = v255;
  v242 = inited;
  v37 = &unk_25137B1F0;
LABEL_17:
  v38 = sub_242B33CF8();
  v40 = v39;
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v41 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_73_9(v41, (__n128)xmmword_242C533B0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v43 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_187_0(v43, v44, (__n128)xmmword_242C4B7F0);
  OUTLINED_FUNCTION_232_0();
  v41[5].n128_u64[1] = (unint64_t)v37;
  v41[6].n128_u64[0] = 0;
  v41[6].n128_u8[8] = inited;
  OUTLINED_FUNCTION_153_2();
  OUTLINED_FUNCTION_95_3((__n128)xmmword_242C57580);
  v45 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_157_1(v45, v5[6], (__n128)xmmword_242C4B7F0);
  v41[12].n128_u64[0] = v46;
  v41[12].n128_u64[1] = 0xE600000000000000;
  OUTLINED_FUNCTION_181_0(v5[7].n128_i64[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v255 = OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_38_18(v255, v47, v48, v49, v50, v51, v52, v53, v166, v175, v184, v192, v202, v42, v219, v225, v231, v237, v242);
  v55 = v54;
  OUTLINED_FUNCTION_136();
  v254 = v55;
  sub_242A5D5BC();
  v56 = v255;
  sub_242A56808((uint64_t)&v5[8], (uint64_t)&v254);
  v57 = OUTLINED_FUNCTION_142_2();
  sub_242AFE700(v57, v58 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000, (uint64_t)v38, v40, v55, v56, v243, v238, (uint64_t)&v254);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_3_6();
  if (v5[14].n128_i64[1] > 0 || v5[14].n128_i64[0] >= 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
    v59 = (__n128 *)swift_initStackObject();
    v60 = OUTLINED_FUNCTION_46_11(v59, (__n128)xmmword_242C4B7D0);
    v60[3].n128_u64[0] = v232;
    v60[3].n128_u64[1] = v251;
    *(_QWORD *)&v256[8] = OUTLINED_FUNCTION_184_0();
    OUTLINED_FUNCTION_83_4(*(uint64_t *)&v256[8], v61, v62, v63, v64, v65, v66, v67, v167, v176, v185, v193, v203, v212, v220, v226, v232);
    v69 = v68;
    v70 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)v256 = v69;
    sub_242A5D488(v70, v71, v72, v73, v74, v75, v76, v77, v168, v177, v186, v194, v204, v213);
    v78 = *(_OWORD *)v256;
    v79 = (__n128 *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_59_11(v79, v80, v81, v82, v83, v84, v85, v86, v169, v178, v187, v195, v205, v214, v221, v227, v233, v238, 1,
      2,
      v1,
      v251,
      v87);
    *(_QWORD *)(v88 + 32) = 0x6965685F706F7263;
    *(_QWORD *)(v88 + 40) = 0xEB00000000746867;
    v89 = (__n128 *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_59_11(v89, v90, v91, v92, v93, v94, v95, v96, v170, v179, v188, v196, v206, v215, v222, v228, v234, v239, v244,
      v247,
      v249,
      v252,
      v97);
    *(_QWORD *)(v98 + 32) = v229;
    v99 = v5[14].n128_u64[0];
    v18 = __OFSUB__(v229, v99);
    v100 = v229 - v99;
    if (!v18)
    {
      *(_QWORD *)(v98 + 40) = v100;
      v79[3].n128_u64[0] = v98;
      v79[3].n128_u64[1] = 0;
      v79[4].n128_u8[0] = 5;
      v79[4].n128_u64[1] = 0x6469775F706F7263;
      v79[5].n128_u64[0] = 0xEA00000000006874;
      v101 = (__n128 *)OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_59_11(v101, v102, v103, v104, v105, v106, v107, v108, v171, v180, v189, v197, v207, v216, v223, v229, v235, v240, v245,
        v248,
        v250,
        v253,
        v109);
      *(_QWORD *)(v110 + 32) = v208;
      v111 = v5[14].n128_u64[1];
      v18 = __OFSUB__(v208, v111);
      v112 = v208 - v111;
      if (!v18)
      {
        *(_QWORD *)(v110 + 40) = v112;
        v79[5].n128_u64[1] = v110;
        v79[6].n128_u64[0] = 0;
        v79[6].n128_u8[8] = 5;
        *(_QWORD *)&v256[8] = sub_242C480BC();
        OUTLINED_FUNCTION_76_6(*(uint64_t *)&v256[8], v113, v114, v115, v116, v117, v118, v119, v172, v181, v190, v198, v208, v217, v224, v230, v236, v241, v246);
        v121 = v120;
        OUTLINED_FUNCTION_4_0();
        *(_QWORD *)v256 = v121;
        sub_242A5D5BC();
        v122 = *(_OWORD *)v256;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
        v123 = swift_initStackObject();
        *(_OWORD *)(v123 + 16) = v246;
        v124 = OUTLINED_FUNCTION_75_6();
        sub_242B3AB94(v124, v125, v258, v126, v127, v128, v129);
        *(_QWORD *)(v123 + 32) = v130;
        *(_QWORD *)(v123 + 40) = v131;
        *(_QWORD *)(v123 + 48) = v199;
        OUTLINED_FUNCTION_28_26(SBYTE4(v191));
        *(_QWORD *)&v256[8] = sub_242C480BC();
        v132 = OUTLINED_FUNCTION_83_3();
        v133 = OUTLINED_FUNCTION_136();
        *(_QWORD *)v256 = v132;
        sub_242A5D034(v133, v134, v135, v136, v137, v138, v139, v140, v173, v182, v191, v199, v209, v218);
        v141 = *(_OWORD *)v256;
        memset(v256, 0, sizeof(v256));
        v257 = 1;
        sub_242AFE8B8(1886351971, 0xE400000000000000, v78, *((uint64_t *)&v78 + 1), v122, *((uint64_t *)&v122 + 1), v141, *((uint64_t *)&v141 + 1), (uint64_t)v256);
        OUTLINED_FUNCTION_80();
        OUTLINED_FUNCTION_83();
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_3_6();
        goto LABEL_22;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      OUTLINED_FUNCTION_205_0();
      OUTLINED_FUNCTION_94_3();
      goto LABEL_37;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_22:
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_0_9();
}

void sub_242B34598()
{
  sub_242B33E04();
}

uint64_t sub_242B345AC()
{
  uint64_t v0;
  _BYTE v2[40];
  _BYTE v3[40];
  uint64_t v4;
  char v5;
  _BYTE v6[136];

  sub_242A8B970(v0 + 48, (uint64_t)v6);
  sub_242A8B9AC(v6, v2);
  if (!v5)
    goto LABEL_4;
  if (v5 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return 0x6E5F6D6F646E6172;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  return 0x755F6D6F646E6172;
}

void sub_242B34678()
{
  uint64_t v0;

  sub_242B9156C((uint64_t)&v0);
  OUTLINED_FUNCTION_279();
  OUTLINED_FUNCTION_30_5();
}

void sub_242B346A4()
{
  uint64_t v0;

  sub_242B9156C((uint64_t)&v0);
  OUTLINED_FUNCTION_279();
  OUTLINED_FUNCTION_30_5();
}

BOOL sub_242B346D4()
{
  uint64_t v0;
  int v1;
  _BYTE v3[40];
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  _BYTE v7[128];

  sub_242A8B970(v0 + 48, (uint64_t)v7);
  sub_242A8B9AC(v7, v3);
  v1 = v6;
  if (v6 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_242B3AF64((uint64_t)v3);
  }
  return v1 == 1;
}

uint64_t sub_242B34754()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t inited;
  double v5;
  double v6;
  char v7;
  char v8;
  uint64_t v9;
  double v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46[5];
  uint64_t v47;
  char v48;
  _QWORD v49[16];
  _QWORD v50[3];
  _QWORD v51[3];

  v1 = v0;
  sub_242A8B970(v0 + 48, (uint64_t)v49);
  sub_242A8B9AC(v49, v46);
  if (!v48)
  {
    OUTLINED_FUNCTION_124_2(v46);
    goto LABEL_5;
  }
  if (v48 == 1)
  {
    OUTLINED_FUNCTION_124_2(v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
LABEL_5:
    sub_242B34678();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    if ((v3 & 1) != 0)
    {
      inited = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(inited + 16) = xmmword_242C4B810;
      *(_QWORD *)(inited + 32) = 1851876717;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      v5 = OUTLINED_FUNCTION_50_13(v51);
      *(_QWORD *)(inited + 48) = LOWORD(v5);
      *(_QWORD *)(inited + 56) = 0;
      *(_BYTE *)(inited + 64) = 2;
      *(_QWORD *)(inited + 72) = 0x766564647473;
      *(_QWORD *)(inited + 80) = 0xE600000000000000;
      v6 = OUTLINED_FUNCTION_50_13(v50);
      *(_QWORD *)(inited + 88) = LOWORD(v6);
      *(_QWORD *)(inited + 96) = 0;
      *(_BYTE *)(inited + 104) = 2;
    }
    else
    {
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_242C4B810;
      *(_QWORD *)(inited + 32) = 1851876717;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      *(_QWORD *)(inited + 48) = COERCE_UNSIGNED_INT(OUTLINED_FUNCTION_51_17(v51));
      *(_QWORD *)(inited + 56) = 0;
      *(_BYTE *)(inited + 64) = 3;
      *(_QWORD *)(inited + 72) = 0x766564647473;
      *(_QWORD *)(inited + 80) = 0xE600000000000000;
      *(_QWORD *)(inited + 88) = COERCE_UNSIGNED_INT(OUTLINED_FUNCTION_51_17(v50));
      *(_QWORD *)(inited + 96) = 0;
      *(_BYTE *)(inited + 104) = 3;
    }
    OUTLINED_FUNCTION_135_2();
    *(_BYTE *)(inited + 144) = 7;
    sub_242C480E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v49[1] = sub_242C480BC();
    sub_242A5AFE0(inited, v14, v15, v16, v17, v18, v19, v20, v34, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
    v22 = v21;
    OUTLINED_FUNCTION_34();
    v49[0] = v22;
    sub_242A5D5BC();
    v23 = v49[0];
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_124_2(v46);
  sub_242B34678();
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v9 + 32) = 7827308;
  *(_QWORD *)(v9 + 40) = 0xE300000000000000;
  if ((v8 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_50_13(v51);
    *(_QWORD *)(v9 + 48) = LOWORD(v10);
    *(_QWORD *)(v9 + 56) = 0;
    v11 = 2;
    *(_BYTE *)(v9 + 64) = 2;
    *(_QWORD *)(v9 + 72) = 1751607656;
    *(_QWORD *)(v9 + 80) = 0xE400000000000000;
    v12 = OUTLINED_FUNCTION_50_13(v50);
    v13 = LOWORD(v12);
  }
  else
  {
    *(_QWORD *)(v9 + 48) = COERCE_UNSIGNED_INT(OUTLINED_FUNCTION_51_17(v51));
    *(_QWORD *)(v9 + 56) = 0;
    v11 = 3;
    *(_BYTE *)(v9 + 64) = 3;
    *(_QWORD *)(v9 + 72) = 1751607656;
    *(_QWORD *)(v9 + 80) = 0xE400000000000000;
    v13 = COERCE_UNSIGNED_INT(OUTLINED_FUNCTION_51_17(v50));
  }
  *(_QWORD *)(v9 + 88) = v13;
  *(_QWORD *)(v9 + 96) = 0;
  *(_BYTE *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 112) = 0x6570616873;
  *(_QWORD *)(v9 + 120) = 0xE500000000000000;
  *(_QWORD *)(v9 + 128) = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v9 + 136) = 0;
  *(_BYTE *)(v9 + 144) = 7;
  sub_242C480E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  sub_242A5AFE0(v9, v24, v25, v26, v27, v28, v29, v30, v34, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
  v32 = v31;
  OUTLINED_FUNCTION_34();
  sub_242A5D5BC();
  v23 = v32;
LABEL_13:
  v35 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v35;
}

uint64_t sub_242B34AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 *v87;
  __n128 *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __n128 *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  __n128 *v130;
  __n128 *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __n128 *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __n128 v156;
  uint64_t v157;
  int v158;
  char v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __n128 *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __n128 v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t result;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  int8x16_t v334;
  __int128 v335;
  char v336;
  __int128 v337;
  __int128 v338;
  _BYTE v339[48];
  __int128 v340;
  char v341;
  __int128 v342;
  __int128 v343;
  _BYTE v344[104];
  _BYTE v345[40];
  _BYTE v346[80];

  v3 = v1;
  v5 = *(_QWORD *)(v1 + 40);
  sub_242AFDA90();
  *(_QWORD *)&v342 = v6;
  *((_QWORD *)&v342 + 1) = v7;
  OUTLINED_FUNCTION_170();
  v8 = v342;
  type metadata accessor for TensorHandle();
  v9 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v9 + 16) = v5;
  swift_retain_n();
  sub_242BC995C();
  swift_release();
  v10 = sub_242B29D9C(v9);
  OUTLINED_FUNCTION_17_1();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11 < 2)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v11 == 2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v11 < 4)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v11 == 4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v11 < 6)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v11 == 6)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v334 = *(int8x16_t *)(v10 + 36);
  v12 = *(double *)(v10 + 52);
  OUTLINED_FUNCTION_4_0();
  sub_242AC836C(v334, v12);
  v342 = (unint64_t)v13;
  LOBYTE(v343) = 1;
  sub_242A56808(v1 + 184, (uint64_t)v346);
  sub_242AFD064((uint64_t)&v342, v8, *((uint64_t *)&v8 + 1));
  sub_242B3AB94(v1, 0, a1, (unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0, sub_242BCC660);
  v15 = v14;
  v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v18 = OUTLINED_FUNCTION_67_9();
  *(_OWORD *)(v18 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_253(v18 + 32);
  v19 = *(_QWORD *)(v18 + 32);
  v20 = *(unsigned __int8 *)(v18 + 40);
  swift_setDeallocating();
  OUTLINED_FUNCTION_37_0();
  sub_242B7130C();
  if (sub_242B346D4() || (OUTLINED_FUNCTION_206_0(), (v21 & 1) != 0))
  {
    *(_QWORD *)&v342 = v15;
    *((_QWORD *)&v342 + 1) = v17;
    sub_242C48314();
    v17 = *((_QWORD *)&v342 + 1);
    v15 = v342;
  }
  OUTLINED_FUNCTION_206_0();
  v315 = v17;
  v320 = a1;
  if ((v22 & 1) != 0)
  {
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_253((uint64_t)&v342);
    v310 = v342;
    v23 = 10;
  }
  else
  {
    v310 = v19;
    v23 = v20;
  }
  v24 = sub_242B345AC();
  v258 = v25;
  v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_59_11(inited, v27, v28, v29, v30, v31, v32, v33, v201, v215, v229, v244, v258, v273, v287, v2, v302, v310, v315,
    v320,
    v15,
    *((uint64_t *)&v8 + 1),
    v34);
  v36 = OUTLINED_FUNCTION_121_1(v35, 1684366707);
  *(_QWORD *)(v36 + 48) = v8;
  *(_QWORD *)(v36 + 56) = v330;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  *((_QWORD *)&v342 + 1) = OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_83_4(*((uint64_t *)&v342 + 1), v38, v39, v40, v41, v42, v43, v44, v202, v216, v230, v245, v259, v274, v288, v295, v303);
  v46 = v45;
  v47 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)&v342 = v46;
  sub_242A5D488(v47, v48, v49, v50, v51, v52, v53, v54, v203, v217, v231, v246, v260, v275);
  v55 = v342;
  v56 = sub_242B34754();
  v58 = v57;
  v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v59 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_214_0(v59, v60, v61, v62, v63, v64, v65, v66, v204, v218, v232, v247, v261, v276, v289, v296, v304, v311, v316,
    v321,
    v325,
    v3,
    v67);
  *(_QWORD *)(v3 + 40) = v317;
  *(_QWORD *)(v3 + 48) = v312;
  HIDWORD(v248) = v23;
  *(_BYTE *)(v3 + 56) = v23;
  sub_242C480E0();
  OUTLINED_FUNCTION_74();
  v305 = v37;
  *((_QWORD *)&v342 + 1) = sub_242C480BC();
  v68 = OUTLINED_FUNCTION_83_3();
  v69 = OUTLINED_FUNCTION_136();
  *(_QWORD *)&v342 = v68;
  sub_242A5D034(v69, v70, v71, v72, v73, v74, v75, v76, v205, v219, v233, v248, v262, v277);
  sub_242AFE8B8(v24, v263, v55, *((uint64_t *)&v55 + 1), v56, v58, v342, *((uint64_t *)&v342 + 1), (uint64_t)v346);
  OUTLINED_FUNCTION_47();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_3_6();
  sub_242A8B970(v331 + 48, (uint64_t)&v342);
  sub_242A8B9AC(&v342, &v337);
  if (v341 == 1)
  {
    sub_242A64518(&v340, (uint64_t)v345);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v339[8]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v337);
    *(_QWORD *)&v342 = v326;
    *((_QWORD *)&v342 + 1) = v317;
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_168_0();
    sub_242AFDC64(0x657268745F6F7774, 0xED0000646C6F6873);
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    v77 = v342;
    sub_242A587A8((uint64_t)v345, (uint64_t)&v342);
    sub_242AF2294((uint64_t)&v342, (uint64_t)&v337);
    v78 = v337;
    v79 = v338;
    v335 = v337;
    v336 = v338;
    v342 = 0u;
    v343 = 0u;
    memset(v344, 0, 25);
    v344[25] = 1;
    sub_242AFDF04((uint64_t *)&v335, v77, *((uint64_t *)&v77 + 1));
    sub_242A62618(v78, *((uint64_t *)&v78 + 1), v79);
    OUTLINED_FUNCTION_206_0();
    if ((v82 & 1) != 0)
    {
      *(_QWORD *)&v337 = v326;
      *((_QWORD *)&v337 + 1) = v317;
      OUTLINED_FUNCTION_33();
      sub_242C48314();
      v235 = *((_QWORD *)&v337 + 1);
      v264 = v337;
    }
    else
    {
      OUTLINED_FUNCTION_113_2(v331, v80, v81, (unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0, sub_242BCC660);
      v264 = v85;
      v235 = v86;
    }
    v87 = (__n128 *)OUTLINED_FUNCTION_2_0();
    v88 = OUTLINED_FUNCTION_46_11(v87, (__n128)xmmword_242C4B7F0);
    v88[3].n128_u64[0] = v326;
    v88[3].n128_u64[1] = v317;
    *(_OWORD *)(OUTLINED_FUNCTION_176_0((uint64_t)v88) + 80) = v77;
    v89 = MEMORY[0x24BEE4AF8];
    *((_QWORD *)&v337 + 1) = OUTLINED_FUNCTION_57_14();
    OUTLINED_FUNCTION_83_4(*((uint64_t *)&v337 + 1), v90, v91, v92, v93, v94, v95, v96, v206, v220, v235, v249, v264, v278, v290, v297, v37);
    v97 = OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_242(v97, v98, v99, v100, v101, v102, v103, v104, v207, v221, v236, v250, v265, v279);
    v105 = *((_QWORD *)&v337 + 1);
    v327 = v337;
    v106 = OUTLINED_FUNCTION_57_14();
    *(_QWORD *)&v337 = v89;
    *((_QWORD *)&v337 + 1) = v106;
    sub_242A5D5BC();
    v107 = v337;
    v108 = (__n128 *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_59_11(v108, v109, v110, v111, v112, v113, v114, v115, v208, v222, v237, v251, v266, v280, v291, v298, v306, v312, v317,
      v322,
      v327,
      v331,
      v116);
    v117 = v267;
    v118 = v238;
    *(_QWORD *)(v119 + 32) = v267;
    *(_QWORD *)(v119 + 40) = v238;
    *(_QWORD *)(v119 + 48) = v312;
    *(_BYTE *)(v119 + 56) = BYTE4(v252);
    OUTLINED_FUNCTION_28_1();
    *((_QWORD *)&v337 + 1) = sub_242C480BC();
    v120 = OUTLINED_FUNCTION_83_3();
    v121 = OUTLINED_FUNCTION_136();
    *(_QWORD *)&v337 = v120;
    sub_242A5D034(v121, v122, v123, v124, v125, v126, v127, v128, v209, v223, v238, v252, v267, v281);
    sub_242AFE8B8(6582125, 0xE300000000000000, v328, v105, v107, *((uint64_t *)&v107 + 1), v337, *((uint64_t *)&v337 + 1), (uint64_t)&v342);
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_81();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v345);
    v83 = v117;
    v84 = v118;
  }
  else
  {
    v83 = v326;
    swift_bridgeObjectRelease();
    sub_242B3AF64((uint64_t)&v337);
    v84 = v317;
  }
  OUTLINED_FUNCTION_206_0();
  if ((v129 & 1) == 0)
    return OUTLINED_FUNCTION_108();
  v130 = (__n128 *)swift_initStackObject();
  v131 = OUTLINED_FUNCTION_46_11(v130, (__n128)xmmword_242C4B7D0);
  v131[3].n128_u64[0] = v83;
  v131[3].n128_u64[1] = v84;
  *((_QWORD *)&v337 + 1) = sub_242C480BC();
  OUTLINED_FUNCTION_83_4(*((uint64_t *)&v337 + 1), v132, v133, v134, v135, v136, v137, v138, v206, v220, v234, v249, v263, v278, v290, v297, v305);
  v139 = OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_242(v139, v140, v141, v142, v143, v144, v145, v146, v210, v224, v239, v253, v268, v282);
  v147 = v337;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
  v148 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_59_11(v148, v149, v150, v151, v152, v153, v154, v155, v211, v225, v240, v254, v269, v283, v292, v299, v307, v312, *((uint64_t *)&v147 + 1),
    v322,
    v147,
    v331,
    v156);
  OUTLINED_FUNCTION_180_0(v157);
  OUTLINED_FUNCTION_253((uint64_t)&v337);
  v158 = BYTE8(v337);
  swift_bridgeObjectRelease();
  v159 = v158 - 2;
  if ((v158 - 2) < 0xB && ((0x543u >> v159) & 1) != 0)
  {
    v160 = *(_QWORD *)&aInt32_2[8 * v159];
    v161 = qword_242C574C0[v159];
    v148[3].n128_u64[0] = v160;
    v148[3].n128_u64[1] = v161;
    v148[4].n128_u8[0] = 4;
    *((_QWORD *)&v337 + 1) = OUTLINED_FUNCTION_163_1();
    sub_242A5AFE0((uint64_t)v148, v162, v163, v164, v165, v166, v167, v168, v212, v226, v241, v255, v270, v284, v293, v300, v308, v313, v318);
    v170 = v169;
    OUTLINED_FUNCTION_3_6();
    *(_QWORD *)&v337 = v170;
    sub_242A5D5BC();
    v171 = (__n128 *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_59_11(v171, v172, v173, v174, v175, v176, v177, v178, v213, v227, v242, v256, v271, v285, v294, v301, v309, v314, v319,
      v323,
      v329,
      v332,
      v179);
    v181 = v180 + 48;
    sub_242B3AB94(v333, 0, v324, (unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0, sub_242BCC660);
    v171[2].n128_u64[0] = v182;
    v171[2].n128_u64[1] = v183;
    sub_242B9156C(v181);
    *((_QWORD *)&v337 + 1) = sub_242C480BC();
    v184 = sub_242A5A760(v171);
    v185 = OUTLINED_FUNCTION_81();
    *(_QWORD *)&v337 = v184;
    sub_242A5D034(v185, v186, v187, v188, v189, v190, v191, v192, v214, v228, v243, v257, v272, v286);
    v193 = v337;
    v337 = 0u;
    v338 = 0u;
    memset(v339, 0, 25);
    v339[25] = 1;
    OUTLINED_FUNCTION_145_2();
    OUTLINED_FUNCTION_138_2();
    sub_242AFE8B8(v194, v195, v196, v197, v198, v199, v193, *((uint64_t *)&v193 + 1), (uint64_t)&v337);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_81();
    return OUTLINED_FUNCTION_108();
  }
LABEL_30:
  result = OUTLINED_FUNCTION_115_2();
  __break(1u);
  return result;
}

uint64_t sub_242B35418(uint64_t a1)
{
  return sub_242B34AF0(a1);
}

#error "242B354C4: call analysis failed (funcsize=95)"

uint64_t sub_242B355D0()
{
  return sub_242B3542C();
}

uint64_t sub_242B355E4(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;

  OUTLINED_FUNCTION_254();
  if (!v3)
    return sub_242B35B38(a1);
  result = sub_242B35620();
  if (!v1 && (result & 1) == 0)
    return sub_242B35B38(a1);
  return result;
}

uint64_t sub_242B35620()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  _BYTE v4[80];
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)v0;
  v6 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(v0 + 168))
  {
    if (*(_BYTE *)(v0 + 168) == 1)
      return 0;
  }
  else
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)v4);
    swift_release();
    if (v5)
    {
      v2 = *(_BYTE *)(v5 + 24);
      sub_242A5DC30((uint64_t)v4);
      if ((v2 & 1) != 0)
        return 0;
    }
    else
    {
      sub_242A5DC30((uint64_t)v4);
    }
  }
  if ((unint64_t)(*(_QWORD *)(*(_QWORD *)(v1[5] + 152) + 16) - 6) >= 0xFFFFFFFFFFFFFFFDLL
    && v1[19]
    && v1[20])
  {
    swift_retain();
    swift_retain();
    sub_242BC8D54();
  }
  return 0;
}

uint64_t sub_242B35B38(uint64_t a1)
{
  uint64_t v1;

  return sub_242B2B8F0(a1, v1, *(_BYTE *)(v1 + 168), *(float *)(v1 + 72), *(float *)(v1 + 76));
}

uint64_t sub_242B35B58(float a1, float a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[18];
  uint64_t __src[17];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(__src);
  swift_release();
  v7 = __src[0];
  swift_getKeyPath();
  v8 = sub_242B39120();
  swift_release();
  if (!v8)
  {
    __src[0] = 0xD00000000000002FLL;
    __src[1] = 0x8000000242C6C810;
    BYTE4(__src[10]) = 3;
    goto LABEL_24;
  }
  sub_242B2AD68(__src);
  swift_release();
  v9 = __src[0];
  swift_getKeyPath();
  v10 = sub_242B39120();
  swift_release();
  if (!v10)
  {
    __src[0] = 0xD000000000000030;
    __src[1] = 0x8000000242C6C860;
    BYTE4(__src[10]) = 3;
    goto LABEL_24;
  }
  sub_242B2AD68(__src);
  swift_release();
  v11 = __src[0];
  swift_getKeyPath();
  v12 = sub_242B39120();
  swift_release();
  if (!v12)
  {
    __src[0] = 0xD000000000000035;
    __src[1] = 0x8000000242C6C8A0;
    BYTE4(__src[10]) = 3;
    goto LABEL_24;
  }
  sub_242B2AD68(&v25);
  swift_release();
  swift_getKeyPath();
  v13 = sub_242B39120();
  swift_release();
  if (!v13)
  {
    __src[0] = 0xD000000000000039;
    __src[1] = 0x8000000242C6C8E0;
    BYTE4(__src[10]) = 3;
LABEL_24:
    sub_242A59170();
  }
  sub_242B2AD68(&v24);
  swift_release();
  v20[0] = v7;
  v22 = v11;
  v23 = v9;
  if (a4)
  {
    swift_retain();
    swift_retain();
    v14 = a4 == 1;
  }
  else
  {
    type metadata accessor for ContextManager();
    swift_retain();
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    if (__src[10])
      v14 = *(_BYTE *)(__src[10] + 24);
    else
      v14 = 0;
    sub_242A5DC30((uint64_t)__src);
  }
  basicBatchNorm(_:runningMean:runningVariance:scale:offset:isTraining:momentum:epsilon:)(v20, (uint64_t)&v25, (unint64_t)&v24, &v23, &v22, v14, (uint64_t)__src, a1, a2);
  swift_release();
  swift_release();
  v15 = __src[0];
  if (!a4)
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    memcpy(v20, __src, 0x88uLL);
    if (v20[10])
    {
      v16 = *(_BYTE *)(v20[10] + 24);
      sub_242A5DC30((uint64_t)v20);
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_242A5DC30((uint64_t)v20);
    }
LABEL_18:
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v17 + 32) = v15;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  if (a4 != 1)
    goto LABEL_18;
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_242C4B810;
  v18 = v25;
  *(_QWORD *)(v17 + 32) = v15;
  *(_QWORD *)(v17 + 40) = v18;
  *(_QWORD *)(v17 + 48) = v24;
  swift_release();
  swift_release();
LABEL_19:
  swift_release();
  return v17;
}

uint64_t sub_242B36008(uint64_t a1)
{
  return sub_242B355E4(a1);
}

uint64_t sub_242B3601C(uint64_t a1)
{
  uint64_t v1;

  return sub_242B2B15C(a1, v1, *(float *)(v1 + 76));
}

uint64_t sub_242B36038(float a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD v14[10];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(&v18);
  swift_release();
  v2 = v18;
  swift_getKeyPath();
  v3 = sub_242B39120();
  swift_release();
  if (!v3)
  {
    v18 = 0xD00000000000002FLL;
    v19 = 0x8000000242C6C810;
    v20 = 3;
    goto LABEL_6;
  }
  sub_242B2AD68(&v18);
  swift_release();
  v4 = v18;
  swift_getKeyPath();
  v5 = sub_242B39120();
  swift_release();
  if (!v5)
  {
    v18 = 0xD000000000000030;
    v19 = 0x8000000242C6C860;
    v20 = 3;
LABEL_6:
    sub_242A59170();
  }
  sub_242B2AD68(&v18);
  v6 = swift_release();
  v7 = v18;
  MEMORY[0x24BDAC7A8](v6);
  *(float *)&v14[4] = a1;
  v8 = sub_242B3A108(&v18, v2, v4, v7, (uint64_t)sub_242B3AFB0, (uint64_t)v14);
  swift_release();
  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(&v18);
  swift_release();
  v15 = v18;
  v8((uint64_t)&v18, (uint64_t)&v17, (uint64_t)&v16, &v15);
  v10 = v17;
  v9 = v18;
  v11 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v12 + 32) = v9;
  *(_QWORD *)(v12 + 40) = v10;
  *(_QWORD *)(v12 + 48) = v11;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_242B362F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[7];
  uint64_t v21;

  v7 = *a1;
  v8 = *a2;
  v9 = *a3;
  v10 = *(_QWORD *)(*a2 + 16);
  v21 = *(_QWORD *)(v10 + 152);
  LOBYTE(v19) = *(_BYTE *)(v10 + 160);
  sub_242A66290(v10 + 168, (uint64_t)v20);
  type metadata accessor for TensorRepresentation();
  swift_allocObject();
  swift_retain();
  sub_242C480E0();
  LOBYTE(v18) = 1;
  v11 = sub_242BCA728(&v21, (char *)&v19, (uint64_t)v20, 0x100000000);
  type metadata accessor for TensorHandle();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  swift_retain();
  sub_242BC995C();
  swift_release();
  swift_release();
  v21 = v12;
  v13 = *(_QWORD *)(v8 + 16);
  v19 = *(_QWORD *)(v13 + 152);
  LOBYTE(v18) = *(_BYTE *)(v13 + 160);
  sub_242A66290(v13 + 168, (uint64_t)v20);
  swift_allocObject();
  swift_retain();
  sub_242C480E0();
  v14 = sub_242BCA728(&v19, (char *)&v18, (uint64_t)v20, 0x100000000);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  swift_retain();
  sub_242BC995C();
  swift_release();
  swift_release();
  v19 = v7;
  v20[0] = v15;
  v17 = v9;
  v18 = v8;
  basicBatchNorm(_:runningMean:runningVariance:scale:offset:isTraining:momentum:epsilon:)(&v19, (uint64_t)&v21, (unint64_t)v20, &v18, &v17, 1, a4, 0.9, a5);
  swift_release();
  return swift_release();
}

uint64_t sub_242B364E8(uint64_t a1)
{
  return sub_242B3601C(a1);
}

#error "242B3663C: call analysis failed (funcsize=123)"

uint64_t sub_242B36738()
{
  return sub_242B364FC();
}

uint64_t sub_242B3674C(uint64_t a1)
{
  uint64_t v1;

  return sub_242B2ADB8(a1, v1, *(_QWORD *)(v1 + 152), *(unsigned __int8 *)(v1 + 160), &qword_257228270, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_242B3678C, &qword_257222B48, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyOperation);
}

uint64_t sub_242B3678C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(&v12);
  swift_release();
  v5 = v12;
  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(&v12);
  swift_release();
  v10 = v12;
  v11 = v5;
  v9 = a3;
  basicSoftmaxCrossEntropy(logits:labels:axis:reduction:)(&v11, &v10, a2, &v9, (uint64_t)&v12);
  v6 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = v6;
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_242B368AC(uint64_t a1)
{
  return sub_242B3674C(a1);
}

uint64_t sub_242B368C0(uint64_t a1)
{
  uint64_t v1;

  return sub_242B2ADB8(a1, v1, *(_QWORD *)(v1 + 136), *(unsigned __int8 *)(v1 + 144), &qword_257228278, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_242B36900, &qword_257222B40, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyGradientOperation);
}

void sub_242B36900()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(&v0);
  swift_release();
  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(&v0);
  swift_release();
  swift_retain();
  sub_242BFC830();
}

uint64_t sub_242B369C0(void (*a1)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6[11];

  swift_release();
  swift_getKeyPath();
  sub_242B390A8();
  swift_release();
  sub_242B2AD68(v6);
  swift_release();
  v5 = v6[0];
  a1(v6, &v5);
  v2 = v6[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v3 + 32) = v2;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_242B36A90(uint64_t a1)
{
  return sub_242B368C0(a1);
}

void sub_242B36AA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v7;
  char v8;

  if (*(_BYTE *)(*(_QWORD *)(v1 + 40) + 160) == 8)
  {
    _S0 = *(_DWORD *)(v1 + 116);
    __asm { FCVT            H0, S0 }
    v7 = (unsigned __int16)_S0;
    v8 = 2;
  }
  else
  {
    v7 = *(unsigned int *)(v1 + 116);
    v8 = 3;
  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = v8;
}

void sub_242B36AE0(unint64_t a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 120) == 1)
    sub_242B36B08(a1);
  else
    sub_242B37210(a1);
}

void sub_242B36B08(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char v94;
  _BYTE v95[57];
  char v96;
  unint64_t v97;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 48);
  sub_242AFDA90();
  v97 = v5;
  v7 = v6;
  v8 = sub_242A88AA4(0xD000000000000016, 0x8000000242C6C960);
  v10 = v9;
  sub_242AFDA90();
  v12 = v11;
  v14 = v13;
  v15 = *(_BYTE *)(v4 + 160);
  v93 = *(_QWORD *)(v4 + 152);
  v94 = v15;
  memset(v95, 0, sizeof(v95));
  v96 = 1;
  sub_242C480E0();
  sub_242AFF588(2u, v97, v7, v12, v14, v8, v10, &v93, (uint64_t)v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = sub_242A88AA4(0xD000000000000012, 0x8000000242C6C980);
  v18 = v17;
  v19 = *(_BYTE *)(v4 + 160);
  v93 = *(_QWORD *)(v4 + 152);
  v94 = v19;
  sub_242C480E0();
  v97 = a1;
  sub_242AFFB68(v8, v10, v16, v18, (uint64_t)&v93);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v1 + 136);
  if (!v20)
  {
    v63 = v97;
    sub_242AFDA90();
    v65 = v64;
    v67 = v66;
    sub_242B3AB94(v2, 0, v63, (unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC85C);
    v69 = v68;
    v71 = v70;
    sub_242A55CD4();
    if (*(_QWORD *)(v72 + 16))
    {
      v73 = *(_QWORD *)(v72 + 32);
      v74 = *(_BYTE *)(v72 + 40);
      sub_242C480E0();
      swift_bridgeObjectRelease();
      v93 = v73;
      v94 = v74;
      sub_242AFF588(0, v65, v67, v16, v18, v69, v71, &v93, (uint64_t)v95);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v90 = v16;
  v91 = v18;
  swift_retain();
  v92 = sub_242A88AA4(0x6D75746E656D6F6DLL, 0xE800000000000000);
  v22 = v21;
  LOBYTE(v93) = *(_BYTE *)(v4 + 160);
  v23 = v97;
  sub_242AFE2DC((uint64_t)&v93);
  v24 = v1;
  v25 = sub_242A88AA4(0x765F64656C616373, 0xEF797469636F6C65);
  v27 = v26;
  sub_242AFDA90();
  v29 = v28;
  v31 = v30;
  v32 = *(_QWORD *)(v20 + 152);
  v89 = v20;
  v33 = *(_BYTE *)(v20 + 160);
  v34 = v25;
  v35 = v1;
  v93 = v32;
  v94 = v33;
  sub_242C480E0();
  v88 = v22;
  sub_242AFF588(2u, v29, v31, v92, v22, v34, v27, &v93, (uint64_t)v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242B3AB94(v1, 1, v23, (unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC85C);
  v37 = v36;
  v39 = v38;
  sub_242A55CD4();
  if (*(_QWORD *)(v40 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_13;
  }
  v41 = *(_QWORD *)(v40 + 48);
  v42 = *(_BYTE *)(v40 + 56);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v93 = v41;
  v94 = v42;
  sub_242AFF588(0, v34, v27, v90, v91, v37, v39, &v93, (uint64_t)v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v24 + 120) == 1)
  {
    v87 = sub_242A88AA4(0xD000000000000015, 0x8000000242C6C9A0);
    v44 = v43;
    v45 = *(_BYTE *)(v89 + 160);
    v93 = *(_QWORD *)(v89 + 152);
    v94 = v45;
    sub_242C480E0();
    v46 = v97;
    sub_242AFF588(2u, v37, v39, v92, v88, v87, v44, &v93, (uint64_t)v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = sub_242A88AA4(0xD000000000000024, 0x8000000242C6C9C0);
    v49 = v48;
    v50 = *(_QWORD *)(v35 + 40);
    sub_242AFDA90();
    v52 = v51;
    v54 = v53;
    v55 = *(_BYTE *)(v50 + 160);
    v93 = *(_QWORD *)(v50 + 152);
    v94 = v55;
    sub_242C480E0();
    sub_242AFF588(0, v52, v54, v87, v44, v47, v49, &v93, (uint64_t)v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242B3AB94(v35, 0, v46, (unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC85C);
    v57 = v56;
    v59 = v58;
    sub_242A55CD4();
    if (*(_QWORD *)(v60 + 16))
    {
      v61 = *(_QWORD *)(v60 + 32);
      v62 = *(_BYTE *)(v60 + 40);
      sub_242C480E0();
      swift_bridgeObjectRelease();
      v93 = v61;
      v94 = v62;
      sub_242AFF588(0, v47, v49, v90, v91, v57, v59, &v93, (uint64_t)v95);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75 = v97;
  sub_242AFDA90();
  v77 = v76;
  v79 = v78;
  sub_242B3AB94(v35, 0, v75, (unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC85C);
  v81 = v80;
  v83 = v82;
  sub_242A55CD4();
  if (*(_QWORD *)(v84 + 16))
  {
    v85 = *(_QWORD *)(v84 + 32);
    v86 = *(_BYTE *)(v84 + 40);
    sub_242C480E0();
    swift_bridgeObjectRelease();
    v93 = v85;
    v94 = v86;
    sub_242AFF588(0, v77, v79, v37, v39, v81, v83, &v93, (uint64_t)v95);
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_10;
  }
LABEL_15:
  __break(1u);
}

void sub_242B37210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v2 = v1;
  sub_242AFDA90();
  v5 = v4;
  v150 = v6;
  sub_242AFDA90();
  v8 = v7;
  v122 = v9;
  sub_242AFDA90();
  v11 = v10;
  v13 = v12;
  if (*(_QWORD *)(v1 + 136))
  {
    swift_retain();
    sub_242AFDA90();
    v15 = v14;
    v17 = v16;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4DE40;
    *(_QWORD *)(inited + 32) = 29560;
    *(_QWORD *)(inited + 40) = 0xE200000000000000;
    v19 = v150;
    *(_QWORD *)(inited + 48) = v5;
    *(_QWORD *)(inited + 56) = v19;
    *(_QWORD *)(inited + 64) = 7567460;
    *(_QWORD *)(inited + 72) = 0xE300000000000000;
    *(_QWORD *)(inited + 80) = v8;
    *(_QWORD *)(inited + 88) = v122;
    strcpy((char *)(inited + 96), "learning_rate");
    *(_WORD *)(inited + 110) = -4864;
    *(_QWORD *)(inited + 112) = v11;
    *(_QWORD *)(inited + 120) = v13;
    *(_QWORD *)(inited + 128) = 0x6D75746E656D6F6DLL;
    *(_QWORD *)(inited + 136) = 0xE800000000000000;
    *(_QWORD *)(inited + 144) = v15;
    *(_QWORD *)(inited + 152) = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v149 = sub_242C480BC();
    sub_242A5B0E8(inited, v20, v21, v22, v23, v24, v25, v26, v104, v110, v116, v122, v128, v134, v140, v142, v144);
    v28 = v27;
    v29 = swift_bridgeObjectRelease();
    sub_242A5D488(v29, v30, v31, v32, v33, v34, v35, v36, v105, v111, v117, v123, v129, v135);
    v150 = v149;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226290);
    v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_242C4B7D0;
    strcpy((char *)(v37 + 32), "momentum_val");
    *(_BYTE *)(v37 + 45) = 0;
    *(_WORD *)(v37 + 46) = -5120;
    sub_242B36AA4(v37 + 48);
    v149 = sub_242C480BC();
    sub_242A5AFE0(v37, v38, v39, v40, v41, v42, v43, v44, v106, v112, v118, v28, v130, v136, v141, v143, v145, v146, v147);
    v46 = v45;
    swift_bridgeObjectRelease();
    v148 = v46;
    sub_242A5D5BC();
    v47 = v46;
    v48 = v149;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    v49 = swift_initStackObject();
    *(_OWORD *)(v49 + 16) = xmmword_242C4B7F0;
    sub_242B3AB94(v2, 0, a1, (unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC85C);
    *(_QWORD *)(v49 + 32) = v50;
    *(_QWORD *)(v49 + 40) = v51;
    sub_242A55CD4();
    if (*(_QWORD *)(v52 + 16))
    {
      v53 = *(_BYTE *)(v52 + 40);
      *(_QWORD *)(v49 + 48) = *(_QWORD *)(v52 + 32);
      *(_BYTE *)(v49 + 56) = v53;
      sub_242C480E0();
      swift_bridgeObjectRelease();
      sub_242B3AB94(v2, 1, a1, (unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC85C);
      *(_QWORD *)(v49 + 64) = v54;
      *(_QWORD *)(v49 + 72) = v55;
      sub_242A55CD4();
      if (*(_QWORD *)(v56 + 16) >= 2uLL)
      {
        v57 = *(_BYTE *)(v56 + 56);
        *(_QWORD *)(v49 + 80) = *(_QWORD *)(v56 + 48);
        *(_BYTE *)(v49 + 88) = v57;
        sub_242C480E0();
        swift_bridgeObjectRelease();
        v149 = sub_242C480BC();
        v58 = sub_242A5A760(v49);
        v59 = swift_bridgeObjectRelease();
        v148 = v58;
        sub_242A5D034(v59, v60, v61, v62, v63, v64, v65, v66, v107, v113, v119, v124, v131, v137);
        v67 = v58;
        v68 = v149;
        v69 = v125;
LABEL_7:
        sub_242A56808(v2 + 56, (uint64_t)&v148);
        sub_242AFE8B8(6580083, 0xE300000000000000, v69, v150, v47, v48, v67, v68, (uint64_t)&v148);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
    v70 = swift_initStackObject();
    *(_OWORD *)(v70 + 16) = xmmword_242C4B810;
    *(_QWORD *)(v70 + 32) = 29560;
    *(_QWORD *)(v70 + 40) = 0xE200000000000000;
    v71 = v150;
    *(_QWORD *)(v70 + 48) = v5;
    *(_QWORD *)(v70 + 56) = v71;
    *(_QWORD *)(v70 + 64) = 7567460;
    *(_QWORD *)(v70 + 72) = 0xE300000000000000;
    *(_QWORD *)(v70 + 80) = v8;
    *(_QWORD *)(v70 + 88) = v122;
    strcpy((char *)(v70 + 96), "learning_rate");
    *(_WORD *)(v70 + 110) = -4864;
    *(_QWORD *)(v70 + 112) = v11;
    *(_QWORD *)(v70 + 120) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v72 = MEMORY[0x24BEE4AF8];
    v149 = sub_242C480BC();
    sub_242A5B0E8(v70, v73, v74, v75, v76, v77, v78, v79, v104, v110, v116, v122, v128, v134, v140, v142, v144);
    v81 = v80;
    v82 = swift_bridgeObjectRelease();
    sub_242A5D488(v82, v83, v84, v85, v86, v87, v88, v89, v108, v114, v120, v126, v132, v138);
    v69 = v81;
    v150 = v149;
    v148 = v72;
    v149 = sub_242C480BC();
    sub_242A5D5BC();
    v47 = v72;
    v48 = v149;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
    v90 = swift_initStackObject();
    *(_OWORD *)(v90 + 16) = xmmword_242C4B7D0;
    sub_242B3AB94(v2, 0, a1, (unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC85C);
    *(_QWORD *)(v90 + 32) = v91;
    *(_QWORD *)(v90 + 40) = v92;
    sub_242A55CD4();
    if (*(_QWORD *)(v93 + 16))
    {
      v94 = *(_BYTE *)(v93 + 40);
      *(_QWORD *)(v90 + 48) = *(_QWORD *)(v93 + 32);
      *(_BYTE *)(v90 + 56) = v94;
      sub_242C480E0();
      swift_bridgeObjectRelease();
      v149 = sub_242C480BC();
      v95 = sub_242A5A760(v90);
      v96 = swift_bridgeObjectRelease();
      v148 = v95;
      sub_242A5D034(v96, v97, v98, v99, v100, v101, v102, v103, v109, v115, v121, v127, v133, v139);
      v67 = v95;
      v68 = v149;
      goto LABEL_7;
    }
  }
  __break(1u);
}

void sub_242B377D0(unint64_t a1)
{
  sub_242B36AE0(a1);
}

void sub_242B377E4(uint64_t a1)
{
  sub_242B377F8(a1);
}

void sub_242B377F8(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  unsigned __int8 v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char v62;
  unsigned __int8 v63;
  uint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  unsigned __int8 v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  __n128 *inited;
  __n128 *v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unsigned __int8 v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unsigned __int8 v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  unsigned __int8 v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  char v193;
  unsigned __int8 v194;
  uint64_t *v195;
  char v196;
  unsigned __int8 v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  unsigned __int8 v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  unint64_t v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  _BYTE v271[57];
  char v272;

  v3 = v1[20];
  v4 = *(_QWORD *)(v3 + 152);
  v266 = v1[5];
  v5 = *(_BYTE *)(v266 + 160);
  OUTLINED_FUNCTION_44_0();
  v255 = sub_242A88AA4(6647407, 0xE300000000000000);
  v257 = v6;
  LOBYTE(v269) = v5;
  memset(v271, 0, sizeof(v271));
  v272 = 1;
  sub_242AFE2DC((uint64_t)&v269);
  OUTLINED_FUNCTION_159_2();
  v7 = OUTLINED_FUNCTION_43_20();
  v262 = v8;
  v263 = v7;
  LOBYTE(v269) = v5;
  OUTLINED_FUNCTION_226_0((uint64_t)&v269);
  OUTLINED_FUNCTION_159_2();
  v9 = OUTLINED_FUNCTION_43_20();
  v252 = v10;
  v253 = v9;
  LOBYTE(v269) = v5;
  OUTLINED_FUNCTION_226_0((uint64_t)&v269);
  v11 = OUTLINED_FUNCTION_43_20();
  v13 = v12;
  OUTLINED_FUNCTION_225_0();
  v235 = v11;
  sub_242AFF8E4(v14, v11, v13, v15, v16);
  v17 = OUTLINED_FUNCTION_43_20();
  v246 = v18;
  v249 = v17;
  OUTLINED_FUNCTION_225_0();
  sub_242AFF8E4(v3, v22, v19, v20, v21);
  OUTLINED_FUNCTION_159_2();
  v23 = OUTLINED_FUNCTION_43_20();
  v25 = v24;
  v269 = v4;
  OUTLINED_FUNCTION_134_2();
  OUTLINED_FUNCTION_162_0(4u, v263, v262, v11, v26, v27, v28, v29, v215);
  v30 = OUTLINED_FUNCTION_43_20();
  v238 = v31;
  v241 = v30;
  v269 = v4;
  LOBYTE(v270) = v5;
  sub_242AFF588(1u, v255, v257, v23, v25, v30, v31, &v269, (uint64_t)v271);
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_159_2();
  v32 = OUTLINED_FUNCTION_43_20();
  v34 = v33;
  v269 = v4;
  LOBYTE(v270) = v5;
  OUTLINED_FUNCTION_162_0(4u, v253, v252, v11, v35, v36, v37, &v269, (uint64_t)v271);
  OUTLINED_FUNCTION_4_0();
  v38 = OUTLINED_FUNCTION_43_20();
  v40 = v39;
  v269 = v4;
  OUTLINED_FUNCTION_134_2();
  sub_242AFF588(1u, v255, v257, v32, v34, v38, v40, v41, v216);
  OUTLINED_FUNCTION_83();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_185_0();
  v42 = OUTLINED_FUNCTION_43_20();
  v44 = v43;
  v269 = v4;
  LOBYTE(v270) = v5;
  v268 = a1;
  sub_242AFF74C(0x15u, v38, v40, v42, v43, &v269, (uint64_t)v271);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_185_0();
  v45 = OUTLINED_FUNCTION_43_20();
  v47 = v46;
  v269 = v4;
  OUTLINED_FUNCTION_134_2();
  OUTLINED_FUNCTION_130_2(3u, v42, v44, v241, v238, v45, v47, v48, v217);
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_43_20();
  v269 = v4;
  LOBYTE(v270) = v5;
  v49 = OUTLINED_FUNCTION_182_0();
  v50 = v249;
  v242 = v51;
  v250 = v52;
  sub_242AFF588(v49, v50, v246, v45, v47, v51, v52, v53, v218);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_35();
  v54 = OUTLINED_FUNCTION_218_0();
  v56 = v55;
  v57 = v1[17];
  sub_242AFDA90();
  v59 = v58;
  v61 = v60;
  v247 = v57;
  v62 = *(_BYTE *)(v57 + 160);
  v269 = *(_QWORD *)(v57 + 152);
  LOBYTE(v270) = v62;
  OUTLINED_FUNCTION_107();
  v63 = OUTLINED_FUNCTION_182_0();
  v256 = v54;
  v258 = v56;
  sub_242AFF588(v63, v263, v262, v59, v61, v54, v56, v64, v219);
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_159_2();
  v264 = OUTLINED_FUNCTION_218_0();
  v66 = v65;
  OUTLINED_FUNCTION_177_0();
  sub_242AFE2DC(v67);
  v68 = OUTLINED_FUNCTION_218_0();
  v70 = v69;
  v71 = v1[6];
  sub_242AFDA90();
  v73 = v72;
  v75 = v74;
  v76 = *(_QWORD *)(v71 + 152);
  v77 = *(_BYTE *)(v71 + 160);
  v78 = v68;
  v269 = v76;
  LOBYTE(v270) = v77;
  OUTLINED_FUNCTION_28_1();
  v79 = OUTLINED_FUNCTION_223();
  sub_242AFF588(v79, v264, v66, v73, v75, v68, v70, v80, v220);
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_86_3((uint64_t)v1, 1, v81, (unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC76C);
  v83 = v82;
  v85 = v84;
  v267 = (uint64_t)v1;
  sub_242A56040();
  if (*(_QWORD *)(v86 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_9;
  }
  v87 = *(_QWORD *)(v86 + 48);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_34();
  v269 = v87;
  v88 = OUTLINED_FUNCTION_215_0();
  OUTLINED_FUNCTION_130_2(v88, v256, v258, v78, v70, v83, v85, v89, v221);
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_108();
  v265 = sub_242A88AA4(0xD000000000000012, 0x8000000242C6CAD0);
  v91 = v90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221040);
  inited = (__n128 *)swift_initStackObject();
  v93 = OUTLINED_FUNCTION_195_0(inited, (__n128)xmmword_242C4B7F0);
  v93[3].n128_u64[0] = v94;
  v93[3].n128_u64[1] = v252;
  OUTLINED_FUNCTION_176_0((uint64_t)v93);
  v95 = v1[18];
  sub_242AFDA90();
  inited[5].n128_u64[0] = v96;
  inited[5].n128_u64[1] = v97;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v98 = MEMORY[0x24BEE4AF8];
  v270 = OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_83_4(v270, v99, v100, v101, v102, v103, v104, v105, v222, v230, v4, v235, v238, v242, v247, v250, 0xD000000000000012);
  v107 = v106;
  v108 = OUTLINED_FUNCTION_4_0();
  v269 = v107;
  sub_242A5D488(v108, v109, v110, v111, v112, v113, v114, v115, v223, v231, v233, v236, v239, v243);
  v116 = v270;
  v259 = v269;
  v117 = OUTLINED_FUNCTION_39_17();
  v269 = v98;
  v270 = v117;
  sub_242A5D5BC();
  v118 = v269;
  v119 = v270;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257226288);
  v120 = OUTLINED_FUNCTION_222_0();
  *(_OWORD *)(v120 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v120 + 32) = v265;
  *(_QWORD *)(v120 + 40) = v91;
  v254 = v95;
  v121 = *(_BYTE *)(v95 + 160);
  *(_QWORD *)(v120 + 48) = *(_QWORD *)(v95 + 152);
  *(_BYTE *)(v120 + 56) = v121;
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_74();
  v270 = sub_242C480BC();
  v122 = OUTLINED_FUNCTION_83_3();
  v123 = OUTLINED_FUNCTION_136();
  v269 = v122;
  sub_242A5D034(v123, v124, v125, v126, v127, v128, v129, v130, v224, v232, v234, v237, v240, v244);
  sub_242AFE8B8(7107949, 0xE300000000000000, v259, v116, v118, v119, v269, v270, (uint64_t)v271);
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_159_2();
  v260 = OUTLINED_FUNCTION_43_20();
  v132 = v131;
  OUTLINED_FUNCTION_177_0();
  sub_242AFE2DC(v133);
  OUTLINED_FUNCTION_185_0();
  v134 = OUTLINED_FUNCTION_43_20();
  v136 = v135;
  sub_242AFDA90();
  v138 = v137;
  OUTLINED_FUNCTION_64_11();
  sub_242AFF74C(0x16u, v138, v116, v134, v136, &v269, (uint64_t)v271);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_4_0();
  v139 = OUTLINED_FUNCTION_43_20();
  OUTLINED_FUNCTION_64_11();
  v140 = OUTLINED_FUNCTION_223();
  OUTLINED_FUNCTION_130_2(v140, v260, v132, v134, v136, v139, v116, v141, v225);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_62_11(v267, 2, v142, (unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC76C);
  sub_242A56040();
  if (*(_QWORD *)(v143 + 16) < 3uLL)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v144 = *(_QWORD *)(v143 + 64);
  v145 = *(unsigned __int8 *)(v143 + 72);
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_34();
  v269 = v144;
  OUTLINED_FUNCTION_215_0();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_265(v146, v147, v148, v149, v150, v151, v152, v153, v226);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_108();
  sub_242B3AB94(v267, 2, v145, (unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC76C);
  v155 = v154;
  v157 = v156;
  if (!*(_QWORD *)(v267 + 152))
    goto LABEL_6;
  OUTLINED_FUNCTION_39_0();
  sub_242AFDA90();
  v159 = v158;
  v161 = v160;
  OUTLINED_FUNCTION_237(v267, v160, v162, (unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC76C);
  v164 = v163;
  v166 = v165;
  sub_242A56040();
  if (*(_QWORD *)(v167 + 16) >= 4uLL)
  {
    v168 = v164;
    v169 = *(_QWORD *)(v167 + 80);
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_34();
    v269 = v169;
    OUTLINED_FUNCTION_281();
    OUTLINED_FUNCTION_265(5u, v155, v157, v159, v161, v168, v166, v170, v227);
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_237(v267, v171, v172, (unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC76C);
    v155 = v173;
    v157 = v174;
    OUTLINED_FUNCTION_50_0();
LABEL_6:
    OUTLINED_FUNCTION_185_0();
    OUTLINED_FUNCTION_14_14();
    v261 = OUTLINED_FUNCTION_43_20();
    v176 = v175;
    v177 = *(_BYTE *)(v254 + 160);
    v269 = *(_QWORD *)(v254 + 152);
    LOBYTE(v270) = v177;
    OUTLINED_FUNCTION_33();
    sub_242AFF74C(0x15u, v155, v157, v261, v176, &v269, (uint64_t)v271);
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_43_20();
    LOBYTE(v269) = *(_BYTE *)(v266 + 160);
    sub_242AFE2DC((uint64_t)&v269);
    v178 = OUTLINED_FUNCTION_43_20();
    OUTLINED_FUNCTION_64_11();
    OUTLINED_FUNCTION_139_2();
    OUTLINED_FUNCTION_130_2(v179, v180, v181, v182, v183, v178, v157, v184, (uint64_t)v271);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_185_0();
    v185 = OUTLINED_FUNCTION_43_20();
    v187 = v186;
    OUTLINED_FUNCTION_62_11(v267, 1, v188, (unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC76C);
    v190 = v189;
    v192 = v191;
    v193 = *(_BYTE *)(v248 + 160);
    v269 = *(_QWORD *)(v248 + 152);
    LOBYTE(v270) = v193;
    OUTLINED_FUNCTION_107();
    v194 = OUTLINED_FUNCTION_182_0();
    OUTLINED_FUNCTION_130_2(v194, v245, v251, v190, v192, v185, v187, v195, v228);
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_43_20();
    v196 = *(_BYTE *)(v248 + 160);
    v269 = *(_QWORD *)(v248 + 152);
    LOBYTE(v270) = v196;
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_31_2();
    OUTLINED_FUNCTION_203_0();
    OUTLINED_FUNCTION_130_2(v197, v198, v199, v200, v201, v202, v203, v204, (uint64_t)v271);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_4_0();
    sub_242AFDA90();
    sub_242B3AB94(v267, 0, v268, (unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0, sub_242BCC76C);
    sub_242A56040();
    if (*(_QWORD *)(v205 + 16))
    {
      v206 = *(_QWORD *)(v205 + 32);
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_34();
      v269 = v206;
      OUTLINED_FUNCTION_281();
      OUTLINED_FUNCTION_224_0();
      OUTLINED_FUNCTION_265(v207, v208, v209, v210, v211, v212, v213, v214, v229);
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_35();
      return;
    }
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

void sub_242B38508(uint64_t a1)
{
  sub_242B377E4(a1);
}

void sub_242B3851C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _BOOL8 v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t ObjectType;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  unint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  unint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  __int128 v111;
  __int128 v112;
  _BYTE v113[48];
  uint64_t v114;

  v7 = *(_QWORD *)(a1 + 88);
  v90 = v7;
  if (v7 >> 62)
    goto LABEL_72;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
LABEL_3:
  v99 = a5;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x24BEE4B00];
LABEL_43:
    v53 = *(_QWORD *)(a1 + 152);
    if (v53 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v54 = sub_242C48FC8();
      swift_bridgeObjectRelease();
      if (v54)
        goto LABEL_45;
    }
    else
    {
      v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_242C480E0();
      if (v54)
      {
LABEL_45:
        v96 = v53;
        v98 = v53 & 0xC000000000000001;
        v55 = 4;
        while (1)
        {
          if (v98)
          {
            v56 = MEMORY[0x2494EC84C](v55 - 4, v53);
          }
          else
          {
            v56 = *(_QWORD *)(v53 + 8 * v55);
            swift_retain();
          }
          if (__OFADD__(v55 - 4, 1))
            goto LABEL_65;
          v105 = v55 - 3;
          sub_242BC97A8();
          if (!v57)
            goto LABEL_77;
          v59 = v57;
          v60 = v58;
          v61 = sub_242BC9AA4();
          if ((v62 & 1) != 0)
            break;
          v63 = v61;
          a4 = v56;
          sub_242BC9724();
          if (!*(_QWORD *)(a5 + 16) || (v66 = sub_242A61310(v64, v65), (v67 & 1) == 0))
          {
            swift_bridgeObjectRelease();
            v107 = 0;
            v108 = 0xE000000000000000;
            sub_242C48C38();
            sub_242C48314();
            __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
            sub_242C48E78();
            sub_242C48314();
            sub_242C491CC();
            sub_242C48314();
            swift_bridgeObjectRelease();
            sub_242C48314();
            v110 = 9;
            goto LABEL_78;
          }
          v68 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * v66);
          swift_bridgeObjectRelease();
          ObjectType = swift_getObjectType();
          sub_242B011E8(a2, v68, a6, ObjectType, a3);
          a5 = v70;
          v114 = v71;
          v72 = v60 | 0x8000000000000000;
          swift_unknownObjectRetain();
          swift_isUniquelyReferenced_nonNull_native();
          v107 = v47;
          v73 = v63;
          v74 = sub_242A61540(v59, v72, v63);
          if (__OFADD__(*(_QWORD *)(v47 + 16), (v75 & 1) == 0))
            goto LABEL_66;
          v76 = v74;
          v77 = v75;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257229390);
          if ((sub_242C48EF0() & 1) != 0)
          {
            v78 = sub_242A61540(v59, v72, v73);
            if ((v77 & 1) != (v79 & 1))
              goto LABEL_79;
            v76 = v78;
          }
          v80 = (_QWORD *)v107;
          if ((v77 & 1) != 0)
          {
            v47 = v107;
            v81 = (uint64_t *)(*(_QWORD *)(v107 + 56) + 16 * v76);
            swift_bridgeObjectRelease();
            v82 = v114;
            *v81 = a5;
            v81[1] = v82;
          }
          else
          {
            *(_QWORD *)(v107 + 8 * (v76 >> 6) + 64) |= 1 << v76;
            v83 = (uint64_t *)(v80[6] + 24 * v76);
            *v83 = v59;
            v83[1] = v72;
            v83[2] = v73;
            v84 = (uint64_t *)(v80[7] + 16 * v76);
            v85 = v114;
            *v84 = a5;
            v84[1] = v85;
            v86 = v80[2];
            v12 = __OFADD__(v86, 1);
            v87 = v86 + 1;
            if (v12)
              goto LABEL_69;
            v47 = (uint64_t)v80;
            v80[2] = v87;
            swift_unknownObjectRetain();
          }
          swift_release();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          ++v55;
          v53 = v96;
          a5 = v99;
          if (v105 == v54)
            goto LABEL_63;
        }
        swift_unknownObjectRelease();
LABEL_77:
        v107 = 0xD00000000000006DLL;
        v108 = 0x8000000242C6C4C0;
        v110 = 9;
LABEL_78:
        sub_242A59170();
      }
    }
LABEL_63:
    swift_bridgeObjectRelease();
    sub_242AFF2B0(a1, v47);
    swift_bridgeObjectRelease();
    return;
  }
  v94 = swift_getObjectType();
  v9 = 0;
  v92 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 32);
  v10 = MEMORY[0x24BEE4B00];
  v91 = v8;
  while (1)
  {
    v97 = v10;
    if ((v90 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x2494EC84C](v9, v90);
      a5 = a4;
    }
    else
    {
      a5 = a4;
      if (v9 >= *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_71;
      v11 = *(_QWORD *)(v90 + 32 + 8 * v9);
      swift_retain();
    }
    v12 = __OFADD__(v9, 1);
    v13 = v9 + 1;
    if (v12)
      goto LABEL_67;
    v14 = v92(v94, a3);
    v15 = v14;
    if (v14 >> 62)
    {
      sub_242C480E0();
      v16 = sub_242C48FC8();
    }
    else
    {
      v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_242C480E0();
    }
    v114 = v11;
    v95 = v13;
    if (!v16)
      break;
    v104 = v15;
    v106 = v15 & 0xC000000000000001;
    v17 = 4;
    while (1)
    {
      if (v106)
        MEMORY[0x2494EC84C](v17 - 4, v15);
      else
        swift_retain();
      v18 = v17 - 3;
      if (__OFADD__(v17 - 4, 1))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        sub_242C480E0();
        v8 = sub_242C48FC8();
        goto LABEL_3;
      }
      sub_242BC9724();
      v20 = v19;
      v22 = v21;
      sub_242BC9724();
      if (*(_QWORD *)(a5 + 16))
      {
        v25 = sub_242A61310(v23, v24);
        if ((v26 & 1) != 0)
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_release();
      ++v17;
      v15 = v104;
      if (v18 == v16)
        goto LABEL_28;
    }
    v27 = (uint64_t *)(*(_QWORD *)(a5 + 56) + 16 * v25);
    v29 = *v27;
    v28 = v27[1];
    sub_242C480E0();
    swift_bridgeObjectRelease();
    if (v20 != v29 || v22 != v28)
    {
      v31 = sub_242C4925C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a5 = a4;
      if ((v31 & 1) != 0)
        goto LABEL_38;
      goto LABEL_27;
    }
    swift_bridgeObjectRelease_n();
LABEL_38:
    swift_bridgeObjectRelease_n();
    swift_retain();
    sub_242AFDA90();
    swift_isUniquelyReferenced_nonNull_native();
    v107 = v97;
    sub_242B8DB78();
    v47 = v107;
    swift_release();
LABEL_39:
    swift_release_n();
    swift_bridgeObjectRelease();
    a5 = v99;
    v9 = v95;
    v10 = v47;
    if (v95 == v91)
    {
      swift_bridgeObjectRelease();
      goto LABEL_43;
    }
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  v107 = 0x746E6174736E6F63;
  v108 = 0xE90000000000005FLL;
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  v32 = sub_242BD0CB0(v107, v108, v94, a3);
  v34 = v33;
  swift_bridgeObjectRelease();
  v35 = v114;
  swift_retain();
  v36 = sub_242BCA40C();
  objc_msgSend(v36, sel_lock);

  sub_242BCB5B4(v35, 0, 0, (uint64_t)&v107);
  if (!v93)
  {
    v37 = sub_242BCA40C();
    objc_msgSend(v37, sel_unlock);
    swift_release();

    v109 = 8;
    v111 = 0u;
    v112 = 0u;
    memset(v113, 0, 25);
    v113[25] = 1;
    sub_242AFD064((uint64_t)&v107, v32, v34);
    swift_unknownObjectRelease();
    swift_retain();
    swift_isUniquelyReferenced_nonNull_native();
    v107 = v97;
    v38 = sub_242A61540(v35, 0, 0);
    v40 = *(_QWORD *)(v97 + 16);
    v41 = (v39 & 1) == 0;
    a5 = v40 + v41;
    if (__OFADD__(v40, v41))
      goto LABEL_68;
    v42 = v38;
    v43 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257229390);
    if ((sub_242C48EF0() & 1) == 0)
      goto LABEL_33;
    v44 = sub_242A61540(v35, 0, 0);
    if ((v43 & 1) == (v45 & 1))
    {
      v42 = v44;
LABEL_33:
      v46 = (_QWORD *)v107;
      if ((v43 & 1) != 0)
      {
        v47 = v107;
        v48 = (uint64_t *)(*(_QWORD *)(v107 + 56) + 16 * v42);
        swift_bridgeObjectRelease();
        *v48 = v32;
        v48[1] = v34;
        goto LABEL_39;
      }
      *(_QWORD *)(v107 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      v49 = (uint64_t *)(v46[6] + 24 * v42);
      v49[1] = 0;
      v49[2] = 0;
      *v49 = v35;
      v50 = (uint64_t *)(v46[7] + 16 * v42);
      *v50 = v32;
      v50[1] = v34;
      v51 = v46[2];
      v12 = __OFADD__(v51, 1);
      v52 = v51 + 1;
      if (!v12)
      {
        v47 = (uint64_t)v46;
        v46[2] = v52;
        swift_retain();
        goto LABEL_39;
      }
      goto LABEL_70;
    }
LABEL_79:
    sub_242C492EC();
    __break(1u);
  }
  v88 = sub_242BCA40C();
  objc_msgSend(v88, sel_unlock);
  swift_release();

  __break(1u);
}

uint64_t sub_242B38F14()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 16))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_242B38F40()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 24))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_242B38F6C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 80));
  v2 = sub_242B5C070((void (*)(uint64_t *__return_ptr, uint64_t *))sub_242B3B0D8, v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_242B38FDC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  sub_242B39470(&v5, *a1);
  v3 = *(_QWORD *)(v5 + 16);
  swift_retain();
  result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_242B39034()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 40))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_242B39060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[8];

  (*(void (**)(_QWORD *__return_ptr, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 48))(v4, *(_QWORD *)(*(_QWORD *)v1 + 80));
  return sub_242A56808((uint64_t)v4, a1);
}

uint64_t sub_242B390A8()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5();
  swift_getAtKeyPath();
  swift_release();
  sub_242B39474(v2, &v3);
  OUTLINED_FUNCTION_8_1();
  v0 = *(_QWORD *)(v3 + 16);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_8_1();
  return v0;
}

uint64_t sub_242B39120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_5();
  swift_getAtKeyPath();
  swift_release();
  v1 = v3;
  if (v3)
  {
    sub_242B39474(v3, &v4);
    OUTLINED_FUNCTION_8_1();
    v1 = *(_QWORD *)(v4 + 16);
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_135();
  }
  return v1;
}

uint64_t sub_242B3919C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  OUTLINED_FUNCTION_2_34();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 64);
  v40 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & v2;
  v41 = (unint64_t)(v3 + 63) >> 6;
  v42 = *(_QWORD *)(v0 + 24);
  sub_242C480E0();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v43 = (v5 - 1) & v5;
  v44 = v6;
  for (i = __clz(__rbit64(v5)) | (v6 << 6); ; i = __clz(__rbit64(v10)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    OUTLINED_FUNCTION_107();
    swift_retain();
    sub_242BC9724();
    v21 = v20;
    v23 = v22;
    swift_isUniquelyReferenced_nonNull_native();
    v24 = OUTLINED_FUNCTION_239();
    v26 = sub_242A61310(v24, v25);
    if (__OFADD__(v7[2], (v27 & 1) == 0))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v28 = v26;
    v29 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228250);
    if ((sub_242C48EF0() & 1) != 0)
    {
      v30 = OUTLINED_FUNCTION_239();
      v32 = sub_242A61310(v30, v31);
      if ((v29 & 1) != (v33 & 1))
        goto LABEL_40;
      v28 = v32;
    }
    if ((v29 & 1) != 0)
    {
      v34 = (_QWORD *)(v7[7] + 16 * v28);
      swift_bridgeObjectRelease();
      *v34 = v18;
      v34[1] = v19;
    }
    else
    {
      v7[(v28 >> 6) + 8] |= 1 << v28;
      v35 = (_QWORD *)(v7[6] + 16 * v28);
      *v35 = v21;
      v35[1] = v23;
      v36 = (_QWORD *)(v7[7] + 16 * v28);
      *v36 = v18;
      v36[1] = v19;
      v37 = v7[2];
      v13 = __OFADD__(v37, 1);
      v38 = v37 + 1;
      if (v13)
        goto LABEL_37;
      v7[2] = v38;
      OUTLINED_FUNCTION_32_0();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v43;
    v6 = v44;
    if (v43)
      goto LABEL_4;
LABEL_5:
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_38;
    if (v9 >= v41)
      goto LABEL_35;
    v10 = *(_QWORD *)(v40 + 8 * v9);
    v11 = v6 + 1;
    if (!v10)
    {
      OUTLINED_FUNCTION_262();
      if (v12 == v13)
        goto LABEL_35;
      OUTLINED_FUNCTION_261();
      if (!v10)
      {
        OUTLINED_FUNCTION_262();
        if (v12 == v13)
          goto LABEL_35;
        OUTLINED_FUNCTION_261();
        if (!v10)
        {
          OUTLINED_FUNCTION_262();
          if (v12 == v13)
            goto LABEL_35;
          OUTLINED_FUNCTION_261();
          if (!v10)
            break;
        }
      }
    }
LABEL_24:
    v43 = (v10 - 1) & v10;
    v44 = v11;
  }
  v15 = v14 + 4;
  if (v15 >= v41)
  {
LABEL_35:
    swift_release();
    return (uint64_t)v7;
  }
  v10 = *(_QWORD *)(v40 + 8 * v15);
  if (v10)
  {
    v11 = v15;
    goto LABEL_24;
  }
  while (!__OFADD__(v15, 1))
  {
    OUTLINED_FUNCTION_262();
    if (v12 == v13)
      goto LABEL_35;
    OUTLINED_FUNCTION_261();
    v15 = v16 + 1;
    if (v10)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_242C492EC();
  __break(1u);
  return result;
}

uint64_t sub_242B39474@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[6];
  char v28;
  uint64_t v29;

  v3 = v2;
  sub_242BC9724();
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_2_34();
  v10 = *(_QWORD *)(v3 + 24);
  OUTLINED_FUNCTION_37_0();
  sub_242A9E888(v7, v9, v10);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
    type metadata accessor for TensorHandle();
    v13 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v13 + 16) = v12;
    OUTLINED_FUNCTION_91();
    sub_242BC995C();
    result = OUTLINED_FUNCTION_135();
  }
  else
  {
    v29 = *(_QWORD *)(a1 + 152);
    v28 = *(_BYTE *)(a1 + 160);
    sub_242A66290(a1 + 168, (uint64_t)v27);
    type metadata accessor for TensorRepresentation();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_0_2();
    BYTE4(v26) = 1;
    v15 = sub_242BCA728(&v29, &v28, (uint64_t)v27, 0x100000000);
    type metadata accessor for TensorHandle();
    v13 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v13 + 16) = v15;
    OUTLINED_FUNCTION_11_6();
    sub_242BC995C();
    swift_release();
    sub_242BC9724();
    v17 = v16;
    v19 = v18;
    swift_beginAccess();
    v20 = OUTLINED_FUNCTION_11_6();
    sub_242B8C8F0(v20, v17, v19, v21, v22, v23, v24, v25, v26, v27[0]);
    swift_endAccess();
    result = swift_bridgeObjectRelease();
  }
  *a2 = v13;
  return result;
}

uint64_t sub_242B395FC(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_242B39624()
{
  sub_242B395FC((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EncodingMILTensorOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EncodingMILTensorOperation);
}

uint64_t sub_242B39664@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[64];

  sub_242B39060((uint64_t)v3);
  return sub_242A56808((uint64_t)v3, a1);
}

uint64_t sub_242B3969C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C56C08, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242B396D8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&unk_242C56BE0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39704(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39740(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B3977C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257222B10, (uint64_t (*)(uint64_t))type metadata accessor for OneHotOperation, (uint64_t)&unk_242C554DC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B397B8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572281D0, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormGradientOperation, (uint64_t)&unk_242C5E3B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B397F4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572281D8, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormOperation, (uint64_t)&unk_242C5E3B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39830(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257221600, (uint64_t (*)(uint64_t))type metadata accessor for TileOperation, (uint64_t)&unk_242C4C3C4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B3986C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_2572216B0, (uint64_t (*)(uint64_t))type metadata accessor for ResizeOperation, (uint64_t)&unk_242C550D4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B398A8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257220D10, (uint64_t (*)(uint64_t))type metadata accessor for SelectOperation, (uint64_t)&unk_242C4E4F0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B398E4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572281E0, (uint64_t (*)(uint64_t))type metadata accessor for TopKOperation, (uint64_t)&unk_242C5AC58);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39920(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257223190, (uint64_t (*)(uint64_t))type metadata accessor for ArgumentReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B3995C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257223198, (uint64_t (*)(uint64_t))type metadata accessor for ReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39998(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572281E8, (uint64_t (*)(uint64_t))type metadata accessor for BandPartOperation, (uint64_t)&unk_242C5ACE4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B399D4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572281F0, (uint64_t (*)(uint64_t))type metadata accessor for NonZeroIndicesOperation, (uint64_t)&unk_242C5A734);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39A10(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572281F8, (uint64_t (*)(uint64_t))type metadata accessor for SliceGradientOperation, (uint64_t)&unk_242C62D44);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39A4C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257224020, (uint64_t (*)(uint64_t))type metadata accessor for SliceOperation, (uint64_t)&unk_242C62D44);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39A88(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228200, (uint64_t (*)(uint64_t))type metadata accessor for SplitOperation, (uint64_t)&unk_242C5A910);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39AC4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257222188, (uint64_t (*)(uint64_t))type metadata accessor for ArgumentSortOperation, (uint64_t)&unk_242C5164C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39B00(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228208, (uint64_t (*)(uint64_t))type metadata accessor for ReverseOperation, (uint64_t)&unk_242C5AC74);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39B3C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257227088, (uint64_t (*)(uint64_t))type metadata accessor for TransposeOperation, (uint64_t)&unk_242C5AD00);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39B78(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228210, (uint64_t (*)(uint64_t))type metadata accessor for ScatterOperation, (uint64_t)&unk_242C5AC90);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39BB4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228218, (uint64_t (*)(uint64_t))type metadata accessor for GatherOperation, (uint64_t)&unk_242C5ACAC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39BF0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228220, (uint64_t (*)(uint64_t))type metadata accessor for CastOperation, (uint64_t)&unk_242C5AD38);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39C2C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228228, (uint64_t (*)(uint64_t))type metadata accessor for ConcatOperation, (uint64_t)&unk_242C5AA0C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39C68(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228230, (uint64_t (*)(uint64_t))type metadata accessor for BroadcastOperation, (uint64_t)&unk_242C5ACC8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39CA4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257228238, (uint64_t (*)(uint64_t))type metadata accessor for ReshapeOperation, (uint64_t)&unk_242C5AD1C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39CE0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257226088, (uint64_t (*)(uint64_t))type metadata accessor for BinaryArithmeticOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39D1C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257222B68, (uint64_t (*)(uint64_t))type metadata accessor for BinaryComparisonOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39D58(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257222B70, (uint64_t (*)(uint64_t))type metadata accessor for BinaryLogicalOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39D94(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257224808, (uint64_t (*)(uint64_t))type metadata accessor for UnaryLogicalOperation, (uint64_t)&unk_242C54FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39DD0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_2572216C8, (uint64_t (*)(uint64_t))type metadata accessor for UnaryArithmeticOperation, (uint64_t)&unk_242C54FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39E0C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572230F8, (uint64_t (*)(uint64_t))type metadata accessor for LSTMLayerOperation, (uint64_t)&unk_242C4F858);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39E48(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221320, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxOperation, (uint64_t)&unk_242C54FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39E84(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221328, (uint64_t (*)(uint64_t))type metadata accessor for ReLUGradientOperation, (uint64_t)&unk_242C54FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39EC0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221330, (uint64_t (*)(uint64_t))type metadata accessor for ReLUOperation, (uint64_t)&unk_242C54FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39EFC(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221338, (uint64_t (*)(uint64_t))type metadata accessor for ActivationOperation, (uint64_t)&unk_242C54FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39F38(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257228240, (uint64_t (*)(uint64_t))type metadata accessor for TrackedOperation, (uint64_t)&unk_242C4E798);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B39F74(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F80, (uint64_t (*)(uint64_t))type metadata accessor for ConstantOperation, (uint64_t)&unk_242C4C02C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242B39FB0()
{
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_245();
  OUTLINED_FUNCTION_278();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_269();
  sub_242B93610();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_0_45();
}

uint64_t sub_242B39FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[80];
  uint64_t v7;

  type metadata accessor for ContextManager();
  v1 = (uint64_t)sub_242B93328();
  sub_242B933C0((uint64_t)v6);
  OUTLINED_FUNCTION_135();
  v2 = v7;
  if (v7 && *(_BYTE *)(v7 + 24) == 1)
  {
    v3 = OUTLINED_FUNCTION_39_0();
    MEMORY[0x2494ED6EC](v3);
    OUTLINED_FUNCTION_122_2();
    if (v0)
      goto LABEL_6;
    v1 = v2;
LABEL_8:
    OUTLINED_FUNCTION_238();
    sub_242A5DC30((uint64_t)v6);
    return v1;
  }
  type metadata accessor for PersistentGraphScope();
  OUTLINED_FUNCTION_2_0();
  v1 = sub_242B92F40(1, MEMORY[0x24BEE4AF8]);
  swift_retain();
  v4 = OUTLINED_FUNCTION_50_0();
  v7 = v1;
  MEMORY[0x2494ED6EC](v4);
  OUTLINED_FUNCTION_122_2();
  if (!v0)
    goto LABEL_8;
LABEL_6:
  OUTLINED_FUNCTION_238();
  swift_release();
  sub_242A5DC30((uint64_t)v6);
  return v1;
}

unint64_t (*sub_242B3A108(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint8_t *v19;
  NSObject *v20;
  os_signpost_type_t v21;
  os_signpost_id_t v22;
  uint64_t v23;
  os_signpost_type_t v24;
  os_signpost_id_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  _QWORD *v53;
  __int128 v54[5];
  __int128 v55;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v58[3];
  __int128 v59;
  uint64_t v60[3];
  __int128 v61;
  uint64_t v62[3];
  __int128 v63;
  uint64_t v64;

  v48 = a5;
  v49 = a6;
  v53 = a1;
  v64 = *MEMORY[0x24BDAC8D0];
  v9 = sub_242C47F0C();
  v51 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v52 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60[0] = a2;
  *(_QWORD *)&v63 = &unk_251390928;
  *((_QWORD *)&v63 + 1) = &off_25722D268;
  swift_retain();
  sub_242BF7CB0(v60, v62);
  v58[0] = a3;
  *(_QWORD *)&v61 = &unk_251390928;
  *((_QWORD *)&v61 + 1) = &off_25722D268;
  swift_retain();
  sub_242BF7CB0(v58, v60);
  *(_QWORD *)&v55 = a4;
  *(_QWORD *)&v59 = &unk_251390928;
  *((_QWORD *)&v59 + 1) = &off_25722D268;
  swift_retain();
  sub_242BF7CB0((uint64_t *)&v55, v58);
  v11 = __swift_project_boxed_opaque_existential_1(v62, v63);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *__swift_allocate_boxed_opaque_existential_0((uint64_t *)&v55) = *v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257228268);
  swift_dynamicCast();
  v12 = __swift_project_boxed_opaque_existential_1(v60, v61);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *__swift_allocate_boxed_opaque_existential_0((uint64_t *)&v55) = *v12;
  swift_retain();
  swift_dynamicCast();
  v13 = __swift_project_boxed_opaque_existential_1(v58, v59);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *__swift_allocate_boxed_opaque_existential_0((uint64_t *)&v55) = *v13;
  swift_retain();
  swift_dynamicCast();
  v47 = v63;
  __swift_project_boxed_opaque_existential_1(v62, v63);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v47;
  *(_QWORD *)(v14 + 32) = sub_242BF7E80;
  *(_QWORD *)(v14 + 40) = 0;
  v46 = v14;
  v47 = v61;
  __swift_project_boxed_opaque_existential_1(v60, v61);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v47;
  *(_QWORD *)(v15 + 32) = sub_242BF7E80;
  *(_QWORD *)(v15 + 40) = 0;
  v45 = v15;
  v47 = v59;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v47;
  *(_QWORD *)(v16 + 32) = sub_242BF7E80;
  *(_QWORD *)(v16 + 40) = 0;
  *(_QWORD *)&v47 = v16;
  if (qword_257220558 != -1)
    swift_once();
  v17 = sub_242C47F30();
  __swift_project_value_buffer(v17, (uint64_t)qword_257223360);
  v18 = v50;
  sub_242C47F00();
  v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v19 = 0;
  v20 = sub_242C47F24();
  v21 = sub_242C489A4();
  v22 = sub_242C47EF4();
  _os_signpost_emit_with_name_impl(&dword_242A44000, v20, v21, v22, "Backpropagation (Forward Pass)", "", v19, 2u);
  v23 = sub_242B3A78C();
  v24 = sub_242C48998();
  v25 = sub_242C47EF4();
  _os_signpost_emit_with_name_impl(&dword_242A44000, v20, v24, v25, "Backpropagation (Forward Pass)", "", v19, 2u);

  v26 = *((_QWORD *)&v55 + 1);
  MEMORY[0x2494EDF68](v19, -1, -1);
  (*(void (**)(char *, _QWORD))(v51 + 8))(v18, v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v27 = swift_allocObject();
  v52 = xmmword_242C4B7D0;
  *(_OWORD *)(v27 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v27 + 32) = v26;
  v28 = v62[0];
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v52;
  *(_QWORD *)(inited + 32) = v28;
  v30 = v60[0];
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_242A5E1D4();
  v32 = v31;
  *(_QWORD *)(v31 + 16) = 2;
  *(_QWORD *)(v31 + 40) = v30;
  swift_release();
  v33 = v58[0];
  v34 = *(_QWORD *)(v32 + 16);
  v35 = *(_QWORD *)(v32 + 24);
  swift_retain_n();
  if (v34 >= v35 >> 1)
  {
    sub_242A5E1D4();
    v32 = v44;
  }
  v37 = v45;
  v36 = v46;
  *(_QWORD *)(v32 + 16) = v34 + 1;
  *(_QWORD *)(v32 + 8 * v34 + 32) = v33;
  swift_release();
  v38 = sub_242BF7904(v27, v32, v23);
  v40 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *v53 = v26;
  sub_242A587A8((uint64_t)v62, (uint64_t)&v55);
  sub_242A587A8((uint64_t)v60, (uint64_t)v54);
  v41 = (_QWORD *)swift_allocObject();
  v41[2] = v38;
  v41[3] = v40;
  v41[4] = sub_242B3AFDC;
  v41[5] = v36;
  sub_242A64518(&v55, (uint64_t)(v41 + 6));
  v41[11] = sub_242B3B0FC;
  v41[12] = v37;
  sub_242A64518(v54, (uint64_t)(v41 + 13));
  v42 = v47;
  v41[18] = sub_242B3B0FC;
  v41[19] = v42;
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return sub_242B3B058;
}

uint64_t sub_242B3A78C()
{
  return sub_242B39FF8();
}

uint64_t sub_242B3A7E0(uint64_t (*a1)(uint64_t *, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = a4;
  v8 = a3;
  v6 = a5;
  return a1(&v8, &v7, &v6);
}

unint64_t sub_242B3A828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, void (*a7)(_OWORD *__return_ptr), uint64_t a8, _QWORD *a9, void (*a10)(_OWORD *__return_ptr), uint64_t a11, _QWORD *a12, void (*a13)(_OWORD *__return_ptr))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  unint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[2];
  _OWORD v36[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v15 + 32) = a4;
  swift_retain();
  v16 = a5(v15);
  swift_bridgeObjectRelease();
  v17 = a9[3];
  v18 = a9[4];
  __swift_project_boxed_opaque_existential_1(a9, v17);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 24);
  result = v19(v17, v18);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (*(_QWORD *)(v16 + 16) < result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_242C480E0();
  sub_242A5B8AC();
  a7(v36);
  swift_bridgeObjectRelease();
  v21 = v19(v17, v18);
  v22 = a12[3];
  v23 = a12[4];
  __swift_project_boxed_opaque_existential_1(a12, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 24);
  result = v24(v22, v23);
  v25 = v21 + result;
  if (__OFADD__(v21, result))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v25 < v21)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v21 < 0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v26 = *(_QWORD *)(v16 + 16);
  if (v26 < v21 || (uint64_t)v26 < v25)
    goto LABEL_17;
  sub_242C480E0();
  sub_242A5B8AC();
  a10(v35);
  swift_bridgeObjectRelease();
  v28 = v24(v22, v23);
  v29 = __OFADD__(v21, v28);
  result = v21 + v28;
  if (!v29)
  {
    sub_242B52180(result, v16);
    swift_bridgeObjectRelease();
    sub_242A5B8AC();
    a13(v34);
    swift_bridgeObjectRelease();
    sub_242A7A2D8(v36, &v33);
    swift_dynamicCast();
    sub_242A7A2D8(v35, &v32);
    swift_dynamicCast();
    sub_242A7A2D8(v34, &v31);
    return swift_dynamicCast();
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_242B3AAEC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_242B3AB6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  sub_242B29EDC(a1, a2, a3);
  if (!v4)
    *a4 = v6;
}

void sub_242B3AB94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD v33[30];

  v11 = sub_242A8A510(a4, a5, a6);
  OUTLINED_FUNCTION_2_34();
  v12 = sub_242C2F2E0(*(_QWORD *)(a3 + 56));
  if (v12
    && (v15 = v12,
        v16 = OUTLINED_FUNCTION_266(),
        sub_242A9E814(v16, v11 | 0x8000000000000000, a2, v15),
        v18 = v17,
        swift_release(),
        v12 = swift_bridgeObjectRelease(),
        v18))
  {
    OUTLINED_FUNCTION_241();
    if (v19)
    {
      OUTLINED_FUNCTION_0_49();
      OUTLINED_FUNCTION_24_20();
      if (v20)
      {
        OUTLINED_FUNCTION_40_12();
        do
        {
          OUTLINED_FUNCTION_80_6();
          if (!v19)
            OUTLINED_FUNCTION_86_2();
          OUTLINED_FUNCTION_61_7();
          if ((v21 & 1) == 0)
            OUTLINED_FUNCTION_72_5();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_24_20();
        }
        while (v22);
      }
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_34();
    }
  }
  else
  {
    OUTLINED_FUNCTION_100_1(v12, v13, v14);
    v23 = a7(a2);
    v25 = v24;
    sub_242C480E0();
    sub_242A8D4C8(v23, v25, v33[17], v33[18]);
    v27 = v26;
    OUTLINED_FUNCTION_4_0();
    if (v27)
      OUTLINED_FUNCTION_4_0();
    sub_242A6945C(v33);
    OUTLINED_FUNCTION_241();
    if (v19)
    {
      OUTLINED_FUNCTION_0_49();
      v28 = OUTLINED_FUNCTION_24_20();
      if (v29)
      {
        v30 = v28;
        OUTLINED_FUNCTION_40_12();
        do
        {
          OUTLINED_FUNCTION_80_6();
          if (!v19)
            swift_once();
          sub_242AFCEF0(v30, a3, *(_QWORD *)(v7 + 144));
          if ((v31 & 1) == 0)
            MEMORY[0x2494EBEA4](v30, a3);
          OUTLINED_FUNCTION_34();
          v30 = OUTLINED_FUNCTION_24_20();
          a3 = v32;
        }
        while (v32);
      }
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_0();
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_37_15();
}

void sub_242B3ADC0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_242A8A510(a3, a4, a5);
  OUTLINED_FUNCTION_2_34();
  v7 = sub_242C2F2E0(*(_QWORD *)(a2 + 56));
  if (v7
    && (v10 = v7,
        v11 = swift_unknownObjectRetain(),
        sub_242A9E814(v11, v6 | 0x4000000000000000, 0, v10),
        v13 = v12,
        swift_release(),
        v7 = swift_bridgeObjectRelease(),
        v13))
  {
    OUTLINED_FUNCTION_241();
    if (!v14)
      goto LABEL_23;
    OUTLINED_FUNCTION_0_49();
    OUTLINED_FUNCTION_24_20();
    if (v15)
    {
      OUTLINED_FUNCTION_40_12();
      do
      {
        OUTLINED_FUNCTION_80_6();
        if (!v14)
          OUTLINED_FUNCTION_86_2();
        OUTLINED_FUNCTION_61_7();
        if ((v16 & 1) == 0)
          OUTLINED_FUNCTION_72_5();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_24_20();
      }
      while (v17);
    }
  }
  else
  {
    OUTLINED_FUNCTION_100_1(v7, v8, v9);
    OUTLINED_FUNCTION_28_1();
    sub_242A6945C(&v21);
    OUTLINED_FUNCTION_241();
    if (!v14)
      goto LABEL_23;
    OUTLINED_FUNCTION_0_49();
    OUTLINED_FUNCTION_24_20();
    if (v18)
    {
      OUTLINED_FUNCTION_40_12();
      do
      {
        OUTLINED_FUNCTION_80_6();
        if (!v14)
          OUTLINED_FUNCTION_86_2();
        OUTLINED_FUNCTION_61_7();
        if ((v19 & 1) == 0)
          OUTLINED_FUNCTION_72_5();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_24_20();
      }
      while (v20);
    }
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_34();
LABEL_23:
  OUTLINED_FUNCTION_37_15();
}

uint64_t sub_242B3AF64(uint64_t a1)
{
  sub_242B923EC(a1);
  return a1;
}

void sub_242B3AF98(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_242B3AB6C(a1, a2, v3, a3);
}

uint64_t sub_242B3AFB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_242B362F8(a1, a2, a3, a4, *(float *)(v4 + 16));
}

uint64_t sub_242B3AFB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242B3AFDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_242BFA868(a1, *(uint64_t (**)(uint64_t))(v2 + 32), a2);
}

unint64_t sub_242B3AFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, void (*a7)(_OWORD *__return_ptr), uint64_t a8, _QWORD *a9, void (*a10)(_OWORD *__return_ptr), uint64_t a11, _QWORD *a12, void (*a13)(_OWORD *__return_ptr))
{
  return sub_242B3A828(a1, a2, a3, *a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_242B3B00C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_242B3B058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_242B3AFE8(a1, a2, a3, a4, *(uint64_t (**)(uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), *(void (**)(_OWORD *__return_ptr))(v4 + 32), *(_QWORD *)(v4 + 40), (_QWORD *)(v4 + 48), *(void (**)(_OWORD *__return_ptr))(v4 + 88), *(_QWORD *)(v4 + 96), (_QWORD *)(v4 + 104), *(void (**)(_OWORD *__return_ptr))(v4 + 144));
}

uint64_t sub_242B3B098(uint64_t (*a1)(uint64_t *, uint64_t *, uint64_t *), uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  return sub_242B3A7E0(a1, a2, *a3, *a4, *a5);
}

uint64_t sub_242B3B0B8()
{
  uint64_t v0;

  return sub_242B3B098(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32), *(uint64_t **)(v0 + 40), *(uint64_t **)(v0 + 48));
}

uint64_t sub_242B3B0D8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_242B38FDC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_56(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  a1[1] = a2;
  a1[2].n128_u64[0] = 120;
  a1[2].n128_u64[1] = 0xE100000000000000;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 + 40);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_12_31@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_BYTE *)(v2 + 56) = a2;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_14_26()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_15_28(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  a1[1] = a2;
  a1[2].n128_u64[0] = 120;
  a1[2].n128_u64[1] = 0xE100000000000000;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 + 40);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_17_27(uint64_t a1)
{
  uint64_t v1;

  return sub_242A56808(a1, v1 - 152);
}

uint64_t OUTLINED_FUNCTION_18_31(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 56) = v2;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_19_25(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = a1;
  return sub_242A5A760(v1);
}

void OUTLINED_FUNCTION_20_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_242A5D034(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void OUTLINED_FUNCTION_21_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v20 - 144) = a1;
  sub_242A5AFE0(v19, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t OUTLINED_FUNCTION_23_27(uint64_t a1)
{
  return sub_242A5CDDC(a1);
}

uint64_t OUTLINED_FUNCTION_24_27(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = a1;
  return sub_242A5A5CC(v1);
}

uint64_t OUTLINED_FUNCTION_25_26(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = a1;
  return sub_242A5A5CC(v1);
}

uint64_t OUTLINED_FUNCTION_26_28(uint64_t a1)
{
  uint64_t v1;

  return sub_242B4B240(v1, (a1 & 0xC000000000000001) == 0, a1);
}

uint64_t OUTLINED_FUNCTION_28_26@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = a1;
  return sub_242C480E0();
}

__n128 *OUTLINED_FUNCTION_29_19(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6570616873;
  result[2].n128_u64[1] = 0xE500000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_23()
{
  return 0x65706168736572;
}

__n128 *OUTLINED_FUNCTION_33_18(__n128 *result, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v3 + 88);
  result[2].n128_u64[0] = v5;
  result[2].n128_u64[1] = v5;
  result[1] = a2;
  result[3].n128_u64[0] = v6;
  result[3].n128_u64[1] = v6;
  *(_QWORD *)(v2 + 128) = result;
  *(_QWORD *)(v2 + 136) = 0;
  *(_BYTE *)(v2 + 144) = v4;
  *(_QWORD *)(v2 + 152) = 0x657079745F646170;
  *(_QWORD *)(v2 + 160) = 0xE800000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  return sub_242AFE700(a1, a2, v10, v11, v13, v9, v12, v14, a9);
}

uint64_t OUTLINED_FUNCTION_35_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  return sub_242AFE700(a1, a2, v11, v12, v13, v14, v9, v10, a9);
}

void OUTLINED_FUNCTION_36_19()
{
  sub_242A5D5BC();
}

void OUTLINED_FUNCTION_38_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;

  sub_242A5AFE0(v19, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t OUTLINED_FUNCTION_39_17()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_40_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = a1;
  return sub_242A5A760(v1);
}

void OUTLINED_FUNCTION_41_21()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_42_18()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_43_20()
{
  return sub_242A88AA4();
}

uint64_t OUTLINED_FUNCTION_44_15@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_BYTE *)(v2 + 56) = a2;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_45_14@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = (a1 & 1) == 0;
  *(_QWORD *)(v1 + 216) = 0;
  *(_BYTE *)(v1 + 224) = 0;
  *(_QWORD *)(v1 + 232) = 0x646F6D5F6C696563;
  *(_QWORD *)(v1 + 240) = 0xE900000000000065;
  *(_BYTE *)(v1 + 264) = 0;
  *(_QWORD *)(v1 + 248) = 0;
  *(_QWORD *)(v1 + 256) = 0;
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_46_15()
{
  uint64_t v0;

  return sub_242A5A5CC(v0);
}

uint64_t OUTLINED_FUNCTION_47_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  return sub_242AFE700(a1, a2, v11, a10, v13, v14, v10, v12, a9);
}

uint64_t OUTLINED_FUNCTION_48_17()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_49_14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

double OUTLINED_FUNCTION_50_13(_QWORD *a1)
{
  uint64_t v1;
  double result;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  *(_QWORD *)&result = sub_242B91864();
  return result;
}

float OUTLINED_FUNCTION_51_17(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_242B91580();
}

__n128 OUTLINED_FUNCTION_52_9(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __n128 a11)
{
  __n128 result;

  result = a11;
  a1[1] = a11;
  return result;
}

__n128 *OUTLINED_FUNCTION_53_11(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "kernel_sizes");
  result[2].n128_u8[13] = 0;
  result[2].n128_u16[7] = -5120;
  return result;
}

uint64_t OUTLINED_FUNCTION_54_9()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_55_9()
{
  uint64_t v0;

  return sub_242A5A760(v0);
}

uint64_t OUTLINED_FUNCTION_56_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  return sub_242AFE700(a1, a2, v11, v12, v10, v14, v9, v13, a9);
}

uint64_t OUTLINED_FUNCTION_57_14()
{
  return sub_242C480BC();
}

__n128 OUTLINED_FUNCTION_59_11(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__n128 a23)
{
  __n128 result;

  result = a23;
  a1[1] = a23;
  return result;
}

uint64_t OUTLINED_FUNCTION_60_9()
{
  return sub_242C480BC();
}

void OUTLINED_FUNCTION_62_11(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;

  sub_242B3AB94(a1, a2, v7, a4, a5, a6, a7);
}

void OUTLINED_FUNCTION_63_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v20 - 144) = a1;
  sub_242A5AFE0(v19, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t OUTLINED_FUNCTION_64_11()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_66_10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 32) = a2;
  *(_QWORD *)(a1 + 40) = 0xE400000000000000;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v2 + 56) = 0;
  *(_BYTE *)(v2 + 64) = 5;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_67_9()
{
  return swift_initStackObject();
}

void OUTLINED_FUNCTION_68_7(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  sub_242B3AB94(v8, 0, v7, a4, a5, a6, a7);
}

__n128 *OUTLINED_FUNCTION_72_6(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1936291937;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

__n128 *OUTLINED_FUNCTION_73_9(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x73656469727473;
  result[2].n128_u64[1] = 0xE700000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_74_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(result + 48) = a2;
  *(_QWORD *)(result + 56) = 0;
  *(_BYTE *)(result + 64) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_75_6()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_76_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;

  sub_242A5AFE0(v19, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

void OUTLINED_FUNCTION_77_6(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;

  sub_242B3AB94(a1, 0, v7, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_78_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11)
{
  *(_OWORD *)(a1 + 16) = a11;
  return sub_242B0560C(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_79_5()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_80_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return sub_242AFE700(a1, a2, a3, a4, v11, v12, v9, v10, a9);
}

void OUTLINED_FUNCTION_81_5()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_82_4()
{
  return sub_242C480BC();
}

void OUTLINED_FUNCTION_83_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  sub_242A5B0E8(v17, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t OUTLINED_FUNCTION_84_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_242AFE700(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void OUTLINED_FUNCTION_86_3(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;

  sub_242B3AB94(a1, a2, v7, a4, a5, a6, a7);
}

void OUTLINED_FUNCTION_89_2(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  sub_242B3AB94(v7, 0, v8, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_92_3()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_93_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_242AFE700(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void OUTLINED_FUNCTION_95_3(__n128 a1)
{
  __n128 *v1;

  v1[8] = a1;
  v1[9].n128_u8[0] = 4;
  v1[9].n128_u64[1] = 0x6E6F6974616C6964;
  v1[10].n128_u64[0] = 0xE900000000000073;
}

uint64_t OUTLINED_FUNCTION_97_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_242AFE700(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_103_2()
{
  return sub_242AA4D00();
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return swift_initStackObject();
}

__n128 OUTLINED_FUNCTION_105_2(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __n128 a13)
{
  __n128 result;

  result = a13;
  a1[1] = a13;
  return result;
}

void OUTLINED_FUNCTION_106_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

__n128 OUTLINED_FUNCTION_109_1(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,__n128 a25)
{
  __n128 result;

  result = a25;
  a1[1] = a25;
  return result;
}

void OUTLINED_FUNCTION_113_2(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;

  sub_242B3AB94(a1, 0, v7, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_114_0(__n128 *a1, __n128 a2)
{
  unint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = 120;
  a1[2].n128_u64[1] = 0xE100000000000000;
  a1[3].n128_u64[0] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_118_1()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_120_2()
{
  return sub_242AFDC64(0x6465706168736572, 0xE800000000000000);
}

uint64_t OUTLINED_FUNCTION_121_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(result + 32) = a2;
  *(_QWORD *)(result + 40) = 0xE400000000000000;
  return result;
}

void OUTLINED_FUNCTION_122_2()
{
  sub_242B39FB0();
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  return type metadata accessor for ContextManager();
}

uint64_t OUTLINED_FUNCTION_124_2(__int128 *a1)
{
  __int128 *v1;
  uint64_t v2;

  sub_242A64518(a1, v2 - 104);
  return sub_242A64518(v1, v2 - 144);
}

uint64_t OUTLINED_FUNCTION_128_2()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_129_1()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_130_2(unsigned __int8 a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9)
{
  return sub_242AFF588(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_131_2()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(v0 + 56) = v2;
  return swift_setDeallocating();
}

uint64_t OUTLINED_FUNCTION_132_1(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_135_2()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1[14] = 0x6570616873;
  v1[15] = 0xE500000000000000;
  result = *(_QWORD *)(v0 + 176);
  v1[16] = result;
  v1[17] = 0;
  return result;
}

__n128 *OUTLINED_FUNCTION_136_2(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 31076;
  result[2].n128_u64[1] = 0xE200000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_137_2(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6E69676562;
  a1[2].n128_u64[1] = 0xE500000000000000;
  return *(_QWORD *)(v2 + 48);
}

uint64_t OUTLINED_FUNCTION_142_2()
{
  return 0x6172745F766E6F63;
}

uint64_t OUTLINED_FUNCTION_143_1(uint64_t result)
{
  *(_QWORD *)(result + 72) = 0x6D69645F7065656BLL;
  *(_QWORD *)(result + 80) = 0xE900000000000073;
  return result;
}

uint64_t OUTLINED_FUNCTION_145_2()
{
  return 1953718627;
}

__n128 OUTLINED_FUNCTION_149_2(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__n128 a27)
{
  __n128 result;

  result = a27;
  a1[1] = a27;
  return result;
}

__n128 OUTLINED_FUNCTION_150_2(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,__n128 a21)
{
  __n128 result;

  result = a21;
  a1[1] = a21;
  return result;
}

uint64_t OUTLINED_FUNCTION_151_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_242AFE700(a1, a2, a3, a4, a5, a6, a7, v9, a9);
}

uint64_t OUTLINED_FUNCTION_152_0()
{
  return swift_initStackObject();
}

void OUTLINED_FUNCTION_153_2()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = 0x657079745F646170;
  *(_QWORD *)(v0 + 120) = 0xE800000000000000;
}

uint64_t OUTLINED_FUNCTION_154_2()
{
  return swift_initStackObject();
}

void OUTLINED_FUNCTION_155_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  sub_242A5D5BC();
}

uint64_t OUTLINED_FUNCTION_156_2(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = 120;
  a1[2].n128_u64[1] = 0xE100000000000000;
  return *(_QWORD *)(v2 + 40);
}

__n128 *OUTLINED_FUNCTION_157_1(__n128 *result, __n128 a2, __n128 a3)
{
  char v3;
  uint64_t v4;

  result[1] = a3;
  result[2] = a2;
  *(_QWORD *)(v4 + 168) = result;
  *(_QWORD *)(v4 + 176) = 0;
  *(_BYTE *)(v4 + 184) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_159_2()
{
  return 1635018082;
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_162_0(unsigned __int8 a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return sub_242AFF588(a1, a2, a3, a4, v9, v10, v11, a8, a9);
}

uint64_t OUTLINED_FUNCTION_163_1()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_165_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_166_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unint64_t v14;

  STACK[0x288] = v14;
  sub_242A5D034(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t OUTLINED_FUNCTION_168_0()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_170()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_174_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  sub_242A5B0E8(v17, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t OUTLINED_FUNCTION_176_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 64) = 121;
  *(_QWORD *)(result + 72) = v1;
  return result;
}

void OUTLINED_FUNCTION_178_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  sub_242AFE8B8(a1, a2, a3, a4, a5, a6, v9, v10, a9);
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  return 0x5F6C616369676F6CLL;
}

uint64_t OUTLINED_FUNCTION_180_0(uint64_t result)
{
  *(_QWORD *)(result + 32) = 0x6570797464;
  *(_QWORD *)(result + 40) = 0xE500000000000000;
  return result;
}

void OUTLINED_FUNCTION_181_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = a1;
  *(_QWORD *)(v1 + 216) = 0;
  *(_BYTE *)(v1 + 224) = 1;
}

uint64_t OUTLINED_FUNCTION_182_0()
{
  return 2;
}

void OUTLINED_FUNCTION_183_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = 0xD00000000000001CLL;
  *(_QWORD *)(v1 + 200) = (a1 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_184_0()
{
  return sub_242C480BC();
}

uint64_t OUTLINED_FUNCTION_186_0()
{
  return 0x656375646572;
}

__n128 OUTLINED_FUNCTION_187_0(__n128 *a1, double a2, __n128 a3)
{
  uint64_t v3;
  __n128 *v4;
  __n128 result;

  result = v4[4];
  a1[1] = a3;
  a1[2] = result;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 64) = 5;
  return result;
}

uint64_t OUTLINED_FUNCTION_189()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_192_0()
{
  return 0x6C6F6F705F677661;
}

uint64_t OUTLINED_FUNCTION_193_0()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_194_0(uint64_t result)
{
  _QWORD *v1;

  v1[6] = result;
  v1[7] = 120;
  v1[8] = 0xE100000000000000;
  return result;
}

__n128 *OUTLINED_FUNCTION_195_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 120;
  result[2].n128_u64[1] = 0xE100000000000000;
  return result;
}

__n128 *OUTLINED_FUNCTION_196_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 120;
  return result;
}

uint64_t OUTLINED_FUNCTION_198_0(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

void OUTLINED_FUNCTION_200_0(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 + 168) = a1;
  *(_BYTE *)(v1 + 184) = 4;
}

void OUTLINED_FUNCTION_201_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t (*v4)(uint64_t);

  sub_242B3ADC0(a1, a2, v3, v4, v2);
}

uint64_t OUTLINED_FUNCTION_202_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return sub_242A56808(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_204()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_206_0()
{
  sub_242B346A4();
}

void OUTLINED_FUNCTION_207_0()
{
  sub_242A5D5BC();
}

void OUTLINED_FUNCTION_208_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_242A5D488(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

__n128 *OUTLINED_FUNCTION_210_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 120;
  result[2].n128_u64[1] = 0xE100000000000000;
  return result;
}

__n128 OUTLINED_FUNCTION_214_0(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21,uint64_t a22,__n128 a23)
{
  __n128 result;

  result = a23;
  a1[1] = a23;
  a1[2].n128_u64[0] = a21;
  return result;
}

uint64_t OUTLINED_FUNCTION_215_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_217()
{
  return sub_242B7130C();
}

uint64_t OUTLINED_FUNCTION_218_0()
{
  return sub_242A88AA4();
}

uint64_t OUTLINED_FUNCTION_219()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_222_0()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_223()
{
  return 2;
}

void OUTLINED_FUNCTION_226_0(uint64_t a1)
{
  sub_242AFE2DC(a1);
}

void OUTLINED_FUNCTION_227_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;

  sub_242B3AB94(a1, a2, v7, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_228_0()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_229_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = a1;
  return sub_242A5A760(v1);
}

void OUTLINED_FUNCTION_230_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v20 - 144) = a1;
  sub_242A5AFE0(v19, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

void OUTLINED_FUNCTION_231_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v20 - 144) = a1;
  sub_242A5AFE0(v19, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

void OUTLINED_FUNCTION_232_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = 6578544;
  *(_QWORD *)(v0 + 80) = 0xE300000000000000;
}

void OUTLINED_FUNCTION_233_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_235()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_236(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  sub_242B3AB94(a1, a2, a3, a4, a5, v5, v6);
}

void OUTLINED_FUNCTION_237(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;

  sub_242B3AB94(a1, 3, v7, a4, a5, a6, a7);
}

void OUTLINED_FUNCTION_238()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t OUTLINED_FUNCTION_239()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_242(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_242A5D488(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

__n128 OUTLINED_FUNCTION_243(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,__int128 a25)
{
  __n128 result;

  *(_OWORD *)(a1 + 16) = a25;
  sub_242AA5B04();
  return result;
}

uint64_t OUTLINED_FUNCTION_244()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242AF2294(v1 - 152, v0);
}

const void *OUTLINED_FUNCTION_245()
{
  return sub_242B93328();
}

void OUTLINED_FUNCTION_246(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;

  sub_242B3AB94(a1, a2, *(_QWORD *)(v7 - 72), a4, a5, a6, a7);
}

void OUTLINED_FUNCTION_248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_242AFE8B8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_249()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_250()
{
  unint64_t v0;
  uint64_t v1;

  STACK[0x2C8] = v0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_251()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 72) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_252()
{
  uint64_t v0;

  return sub_242B33508(1, v0);
}

uint64_t OUTLINED_FUNCTION_253@<X0>(uint64_t a1@<X8>)
{
  return sub_242B9156C(a1);
}

uint64_t OUTLINED_FUNCTION_255@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 32) = a2;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_257(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v15 - 224) = v14;
  sub_242A5D488(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void OUTLINED_FUNCTION_258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_242AFE8B8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_259()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242B2BF04(a1, a2, a3);
}

void OUTLINED_FUNCTION_263(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_242A5D034(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t OUTLINED_FUNCTION_265(unsigned __int8 a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9)
{
  return sub_242AFF588(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_266()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_267()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_268()
{
  return swift_release();
}

const void *OUTLINED_FUNCTION_269()
{
  return sub_242B93328();
}

void OUTLINED_FUNCTION_271(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_242A5D488(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t OUTLINED_FUNCTION_273(uint64_t result)
{
  *(_BYTE *)(result + 64) = 5;
  return result;
}

uint64_t OUTLINED_FUNCTION_274()
{
  return sub_242C480BC();
}

void OUTLINED_FUNCTION_275(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  sub_242B3ADC0(v6, v5, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_278()
{
  uint64_t v0;

  return sub_242B93598(v0);
}

uint64_t OUTLINED_FUNCTION_279()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_280()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 72) = v1;
  return swift_retain();
}

uint64_t static Tensor.InverseError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (*(_QWORD *)a1 == *(_QWORD *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t Tensor.inversed()()
{
  return Tensor.inverted()();
}

uint64_t Tensor.inverted()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 152) + 16) != 2)
  {
    OUTLINED_FUNCTION_0_64();
    goto LABEL_6;
  }
  if (*(_BYTE *)(v1 + 160) != 10)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_0_64();
LABEL_6:
    sub_242A59264();
  }
  swift_retain();
  sub_242A9F58C();
  return swift_release();
}

uint64_t sub_242B3C144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE v8[55];
  char v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v6 + 152);
  v9 = *(_BYTE *)(v6 + 160);
  sub_242A66290(v6 + 168, (uint64_t)v8);
  swift_retain();
  sub_242C480E0();
  return sub_242B667C4(&v10, &v9, v8, a1, a2, a3);
}

uint64_t sub_242B3C1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_242C48AA0();
  v6 = *(_QWORD **)(*(_QWORD *)(a5 + 16) + 152);
  v7 = v6[2];
  if (!v7)
  {
LABEL_18:
    sub_242C480E0();
    sub_242A59264();
  }
  v8 = v6[4];
  if (v8 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v8 > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v7 <= 1)
    goto LABEL_18;
  v9 = v6[5];
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  if (v9 > 0x7FFFFFFF)
    goto LABEL_17;
  if ((int)v9 < (int)v8)
    LODWORD(v8) = v6[5];
  sub_242BC098C(0, (int)v8);
  sub_242BC08F8(v9, 0.0);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_242A5ED2C();
  sgetrf_NEWLAPACK();
  sub_242C480E0();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_242A5ED10();
  sgetri_NEWLAPACK();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_242B3C48C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B3C144(a1, a2, v2);
}

ValueMetadata *type metadata accessor for Tensor.InverseError()
{
  return &type metadata for Tensor.InverseError;
}

unint64_t sub_242B3C4B4()
{
  unint64_t result;

  result = qword_257228280[0];
  if (!qword_257228280[0])
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Tensor.InverseError, &type metadata for Tensor.InverseError);
    atomic_store(result, qword_257228280);
  }
  return result;
}

uint64_t type metadata accessor for OrderedDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OrderedDictionary);
}

void sub_242B3C514()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242B3C524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[18];

  v15[12] = a3;
  v15[13] = a4;
  v15[14] = a5;
  v8 = sub_242C480F8();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE04D8], v8);
  v9 = sub_242C48488();
  swift_bridgeObjectRelease();
  v15[17] = v9;
  v15[6] = a3;
  v15[7] = a4;
  v15[8] = a5;
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = swift_getKeyPath();
  OUTLINED_FUNCTION_3_15();
  v10 = sub_242C48650();
  v11 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v10);
  v13 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242B3DC30, (uint64_t)v15, v10, a3, MEMORY[0x24BEE4078], v11, MEMORY[0x24BEE40A8], v12);
  swift_release();
  OUTLINED_FUNCTION_136();
  return v13;
}

BOOL sub_242B3C680(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return *(_QWORD *)(a2 + *(int *)(TupleTypeMetadata2 + 48)) >= *(_QWORD *)(a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_242B3C6E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v20[1] = a3;
  v4 = (uint64_t *)(*a2 + *MEMORY[0x24BEE46A8]);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - v11;
  v13 = *(int *)(v5 + 48);
  v15 = *(_QWORD *)(v14 + 8);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)v20 - v11, a1, v15, v10);
  v17 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)&v12[v13] = v17;
  v18 = *(int *)(v5 + 48);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v12, v15);
  *(_QWORD *)&v8[v18] = v17;
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_242B3C804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  char v9;

  MEMORY[0x2494EBCA0](&v8, a1, a2, a3, MEMORY[0x24BEE1768], a4);
  if ((v9 & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    sub_242C48680();
    v6 = 0;
  }
  return OUTLINED_FUNCTION_16_22(a5, v6);
}

void sub_242B3C888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_8_30(v1, v4);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_5_6();
  v3 = OUTLINED_FUNCTION_1_51();
  MEMORY[0x24BDAC7A8](v3);
  sub_242C485C0();
  OUTLINED_FUNCTION_1_51();
  sub_242C485C0();
  sub_242C480BC();
  sub_242C480E0();
  sub_242C48554();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_20_32();
}

void sub_242B3CB38()
{
  sub_242B3C888();
}

uint64_t sub_242B3CB58(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

void sub_242B3CB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (**v50)(char *, char *, uint64_t);
  unint64_t v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (**v94)(char *, char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;

  OUTLINED_FUNCTION_17_17();
  v105 = v0;
  v106 = v1;
  v77 = v2;
  v92 = v3;
  v93 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v91 = v11;
  v13 = v12;
  v78 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_5_6();
  v76 = v15;
  v16 = sub_242C48A64();
  v90 = OUTLINED_FUNCTION_1_51();
  v17 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v80 = (uint64_t)&v70 - v18;
  v99 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_36_11();
  v79 = v20 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v95 = (uint64_t)&v70 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v96 = (uint64_t)&v70 - v25;
  v26 = *(void (***)(char *, char *, uint64_t))(v8 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_242C48A64();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v70 - v32;
  v34 = MEMORY[0x2494EC198](v13, v6, v31);
  v89 = v10;
  v35 = MEMORY[0x2494EC198](v10, v6);
  if (v34 != v35)
    return;
  v71 = v17;
  v88 = v13;
  v36 = v93;
  v100 = sub_242B3C524(v35, v91, v8, v6, v93);
  v37 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v37);
  v38 = OUTLINED_FUNCTION_6_48();
  v87 = v6;
  v100 = sub_242B3C524(v38, v92, v8, v6, v36);
  OUTLINED_FUNCTION_6_48();
  sub_242C480E0();
  sub_242C4871C();
  OUTLINED_FUNCTION_136();
  v39 = sub_242C4874C();
  swift_bridgeObjectRelease();
  if ((v39 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v86 = v16;
  v94 = v26;
  v40 = v38;
  if ((v38 & 0xC000000000000001) != 0)
  {
    sub_242C48BC0();
    sub_242C48758();
    v40 = v100;
    v75 = v101;
    v41 = v102;
    v42 = v103;
    v43 = v104;
  }
  else
  {
    v42 = 0;
    v44 = -1 << *(_BYTE *)(v38 + 32);
    v45 = *(_QWORD *)(v38 + 56);
    v75 = v38 + 56;
    v41 = ~v44;
    v46 = -v44;
    if (v46 < 64)
      v47 = ~(-1 << v46);
    else
      v47 = -1;
    v43 = v47 & v45;
  }
  v48 = v95;
  v72 = v40 & 0x7FFFFFFFFFFFFFFFLL;
  v70 = v41;
  v74 = (unint64_t)(v41 + 64) >> 6;
  v49 = v80;
  v83 = v40;
  v73 = v29;
  v82 = v33;
  while (1)
  {
    v84 = v43;
    v85 = v42;
    if (v40 < 0)
    {
      v52 = sub_242C48BCC();
      v50 = v94;
      if (!v52)
        goto LABEL_42;
      sub_242C49244();
      swift_unknownObjectRelease();
      v97 = v43;
      v98 = v42;
      v48 = v95;
      goto LABEL_29;
    }
    v50 = v94;
    if (!v43)
      break;
    v97 = (v43 - 1) & v43;
    v98 = v42;
    v51 = __clz(__rbit64(v43)) | (v42 << 6);
LABEL_28:
    v94[2](v33, (char *)(*(_QWORD *)(v40 + 48) + (_QWORD)v94[9] * v51), v8);
LABEL_29:
    OUTLINED_FUNCTION_16_22((uint64_t)v33, 0);
    v50[4](v29, v33, v8);
    v42 = v96;
    v40 = v87;
    v57 = v93;
    sub_242B3C804((uint64_t)v29, v91, v8, v93, v96);
    sub_242B3C804((uint64_t)v29, v92, v8, v57, v48);
    v33 = (char *)v50;
    v58 = v49 + *(int *)(v90 + 48);
    v59 = v86;
    OUTLINED_FUNCTION_4_43(v49, v42);
    OUTLINED_FUNCTION_4_43(v58, v48);
    OUTLINED_FUNCTION_10_33(v49);
    if (v61)
    {
      v43 = *(_QWORD *)(v99 + 8);
      OUTLINED_FUNCTION_16_29(v48);
      OUTLINED_FUNCTION_16_29(v42);
      (*((void (**)(char *, uint64_t))v33 + 1))(v29, v8);
      OUTLINED_FUNCTION_10_33(v58);
      if (!v61)
        goto LABEL_39;
      v49 = v80;
      OUTLINED_FUNCTION_16_29(v80);
      v48 = v95;
      OUTLINED_FUNCTION_11_34();
    }
    else
    {
      v60 = v79;
      OUTLINED_FUNCTION_4_43(v79, v49);
      OUTLINED_FUNCTION_10_33(v58);
      if (v61)
      {
        v69 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
        v69(v95, v59);
        v69(v96, v59);
        ((void (*)(char *, uint64_t))v94[1])(v73, v8);
        OUTLINED_FUNCTION_45_0(v60, *(uint64_t (**)(uint64_t, uint64_t))(v78 + 8));
LABEL_39:
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v80, v90);
LABEL_40:
        sub_242A6FF2C();
        return;
      }
      v62 = v78;
      v63 = v40;
      v64 = v8;
      v65 = v60;
      v42 = v76;
      OUTLINED_FUNCTION_17_28(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 32));
      v81 = sub_242C48200();
      v43 = *(_QWORD *)(v62 + 8);
      ((void (*)(uint64_t, uint64_t))v43)(v42, v40);
      v33 = *(char **)(v99 + 8);
      v66 = v95;
      OUTLINED_FUNCTION_15_29(v95);
      OUTLINED_FUNCTION_15_29(v96);
      v40 = (uint64_t)v73;
      ((void (*)(char *, uint64_t))v94[1])(v73, v64);
      v67 = v65;
      v8 = v64;
      v29 = (char *)v40;
      v68 = v63;
      v48 = v66;
      ((void (*)(uint64_t, uint64_t))v43)(v67, v68);
      OUTLINED_FUNCTION_15_29(v49);
      OUTLINED_FUNCTION_11_34();
      if ((v81 & 1) == 0)
        goto LABEL_40;
    }
  }
  v53 = v42 + 1;
  if (__OFADD__(v42, 1))
  {
    __break(1u);
    return;
  }
  if (v53 >= v74)
    goto LABEL_42;
  v54 = *(_QWORD *)(v75 + 8 * v53);
  v55 = v42 + 1;
  if (v54)
    goto LABEL_27;
  v55 = v42 + 2;
  if (v42 + 2 >= v74)
    goto LABEL_42;
  v54 = *(_QWORD *)(v75 + 8 * v55);
  if (v54)
    goto LABEL_27;
  v55 = v42 + 3;
  if (v42 + 3 >= v74)
    goto LABEL_42;
  v54 = *(_QWORD *)(v75 + 8 * v55);
  if (v54)
  {
LABEL_27:
    v97 = (v54 - 1) & v54;
    v98 = v55;
    v51 = __clz(__rbit64(v54)) + (v55 << 6);
    goto LABEL_28;
  }
  v56 = v42 + 4;
  while (v56 < v74)
  {
    v54 = *(_QWORD *)(v75 + 8 * v56++);
    if (v54)
    {
      v55 = v56 - 1;
      goto LABEL_27;
    }
  }
LABEL_42:
  OUTLINED_FUNCTION_0_65();
  sub_242A6FF2C();
}

void sub_242B3D2A4()
{
  sub_242B3CB68();
}

void sub_242B3D2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t i;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_17_17();
  v44 = v0;
  v45 = v1;
  v3 = v2;
  v5 = v4;
  v41 = v6;
  v42 = v7;
  v43 = v8;
  v40 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_8_30(v10, v35);
  v11 = OUTLINED_FUNCTION_3_15();
  v38 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_36_11();
  v15 = v13 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v35 - v17;
  v19 = *(_QWORD *)(v5 + 64);
  v37 = v5 + 64;
  v20 = 1 << *(_BYTE *)(v5 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v36 = (unint64_t)(v20 + 63) >> 6;
  v46 = v5;
  OUTLINED_FUNCTION_0_2();
  v23 = 0;
  if (!v22)
    goto LABEL_5;
LABEL_4:
  v24 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (i = v24 | (v23 << 6); ; i = __clz(__rbit64(v27)) + (v23 << 6))
  {
    v29 = v46;
    v30 = *(_QWORD *)(v3 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v18, *(_QWORD *)(v46 + 48) + *(_QWORD *)(v30 + 72) * i, v3);
    v31 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * i);
    *(_QWORD *)&v18[*(int *)(v11 + 48)] = v31;
    v32 = *(int *)(v11 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v15, v18, v3);
    *(_QWORD *)(v15 + v32) = v31;
    sub_242C48170();
    v33 = v39;
    v34 = v43;
    sub_242C48680();
    sub_242C48170();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v15, v11);
    if (v22)
      goto LABEL_4;
LABEL_5:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v26 >= v36)
      goto LABEL_19;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v23;
    if (!v27)
    {
      v23 = v26 + 1;
      if (v26 + 1 >= v36)
        goto LABEL_19;
      v27 = *(_QWORD *)(v37 + 8 * v23);
      if (!v27)
        break;
    }
LABEL_16:
    v22 = (v27 - 1) & v27;
  }
  v28 = v26 + 2;
  if (v28 >= v36)
  {
LABEL_19:
    swift_release();
    OUTLINED_FUNCTION_13_11();
    return;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
    v23 = v28;
    goto LABEL_16;
  }
  while (1)
  {
    v23 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v23 >= v36)
      goto LABEL_19;
    v27 = *(_QWORD *)(v37 + 8 * v23);
    ++v28;
    if (v27)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_242B3D52C()
{
  sub_242C49340();
  sub_242B3D2C8();
  return sub_242C49394();
}

uint64_t sub_242B3D5A8()
{
  return sub_242B3D52C();
}

void sub_242B3D5C0()
{
  sub_242B3D2C8();
}

uint64_t sub_242B3D5D8()
{
  sub_242C49340();
  sub_242B3D2C8();
  return sub_242C49394();
}

uint64_t sub_242B3D630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v24 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v26 = TupleTypeMetadata2;
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v27 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - v11;
  v29 = a4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v13 = *(int *)(TupleTypeMetadata2 + 48);
  v14 = &v12[v13];
  v28 = &v12[v13];
  v15 = a1;
  v25 = a1;
  v16 = a1 + v13;
  v17 = *(_QWORD *)(a2 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v12, v15, a2);
  v19 = *(_QWORD *)(a3 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20(v14, v16, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24, v12, a2);
  v21 = v27;
  v22 = &v27[*(int *)(v26 + 48)];
  v18(v27, v25, a2);
  v20(v22, v16, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v29, v22, a3);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v28, a3);
}

void sub_242B3D7D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_17_17();
  v42 = v1;
  v43 = v2;
  v41 = v3;
  v6 = *(_QWORD *)(v4 + 16);
  v5 = *(_QWORD *)(v4 + 24);
  v7 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_36_11();
  v11 = v9 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v40 = OUTLINED_FUNCTION_1_51();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_36_11();
  v18 = (char *)(v16 - v17);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v36 - v21;
  v23 = *v0;
  v24 = v0[1];
  v39 = v0;
  if (v24 >= MEMORY[0x2494EC198](v23, v7, v20))
  {
    __swift_storeEnumTagSinglePayload(v41, 1, 1, v7);
  }
  else
  {
    v37 = &v22[*(int *)(v40 + 48)];
    OUTLINED_FUNCTION_18_32();
    v38 = &v14[*(int *)(v7 + 48)];
    v25 = *(_QWORD *)(v6 - 8);
    v36 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v36(v22, v14, v6);
    v26 = (uint64_t)v37;
    OUTLINED_FUNCTION_18_32();
    v27 = *(_QWORD *)(v5 - 8);
    OUTLINED_FUNCTION_4_43(v26, v11 + *(int *)(v7 + 48));
    OUTLINED_FUNCTION_45_0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    (*(void (**)(char *, uint64_t))(v27 + 8))(v38, v5);
    v28 = v39[1];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
    }
    else
    {
      v39[1] = v30;
      v31 = (uint64_t)&v18[*(int *)(v40 + 48)];
      v32 = v22;
      v33 = (void (*)(uint64_t, char *, uint64_t))v36;
      v36(v18, v32, v6);
      OUTLINED_FUNCTION_4_43(v31, v26);
      v34 = v41;
      v35 = v41 + *(int *)(v7 + 48);
      v33(v41, v18, v6);
      OUTLINED_FUNCTION_4_43(v35, v31);
      __swift_storeEnumTagSinglePayload(v34, 0, 1, v7);
      OUTLINED_FUNCTION_13_11();
    }
  }
}

uint64_t sub_242B3D9FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  sub_242C480E0();
  v7 = sub_242C480E0();
  sub_242B3C524(v7, v3, v4, v5, v6);
  sub_242B3C800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = sub_242C48650();
  v9 = sub_242C48650();
  v10 = MEMORY[0x24BEE12C8];
  v11 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v8);
  v12 = MEMORY[0x2494EDE24](v10, v9);
  sub_242C492D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v29;
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v24 = v8;
  v25 = v9;
  v26 = v11;
  v27 = v12;
  v13 = sub_242C48C8C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = MEMORY[0x2494EDE24](MEMORY[0x24BEE2620], v13);
  v17 = sub_242BD0610((uint64_t)sub_242B3DC50, (uint64_t)v20, v13, TupleTypeMetadata2, MEMORY[0x24BEE4078], v15, MEMORY[0x24BEE40A8], v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v17;
  a2[1] = 0;
  return result;
}

void sub_242B3DBC8()
{
  JUMPOUT(0x2494EC198);
}

uint64_t sub_242B3DBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 16) + 8);
  return MEMORY[0x2494EDE24](&unk_242C577F0, a1, &v4);
}

BOOL sub_242B3DC10(uint64_t a1, uint64_t a2)
{
  return sub_242B3C680(a1, a2);
}

uint64_t sub_242B3DC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242B3C6E8(a1, *(_QWORD **)(v2 + 32), a2);
}

uint64_t sub_242B3DC50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242B3D630(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for ResolutionDependencies.Iterator(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_242C480E0();
  return a1;
}

uint64_t destroy for TensorDescriptor()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ResolutionDependencies.Iterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for ResolutionDependencies.Iterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t type metadata accessor for OrderedDictionary.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OrderedDictionary.Iterator);
}

uint64_t OUTLINED_FUNCTION_0_65()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v2, 1, 1, v0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_51()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_4_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_6_48()
{
  return sub_242C48770();
}

void OUTLINED_FUNCTION_8_30(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_10_33(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_15_29(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_29(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_17_28@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_18_32()
{
  return sub_242C48680();
}

void OUTLINED_FUNCTION_20_32()
{
  JUMPOUT(0x2494EC1C8);
}

uint64_t OUTLINED_FUNCTION_23_28@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t Array<A>.dotDescription.getter(uint64_t a1)
{
  return sub_242B3DE98(a1, (uint64_t (*)(uint64_t))sub_242B78C7C);
}

uint64_t Array<A>.writeDOTDescription(to:)(uint64_t a1, uint64_t a2)
{
  return sub_242B3E188(a1, a2, (void (*)(uint64_t, __n128))Array<A>.dotDescription.getter);
}

uint64_t Tensor.dotDescription.getter()
{
  return sub_242B3E294((uint64_t (*)(__n128 *))Array<A>.dotDescription.getter);
}

uint64_t Tensor.writeDOTDescription(to:)(uint64_t a1)
{
  return sub_242B3E32C(a1, (void (*)(__n128 *))Array<A>.dotDescription.getter);
}

uint64_t Array<A>.milDescription.getter(uint64_t a1)
{
  return sub_242B3DE98(a1, (uint64_t (*)(uint64_t))sub_242B3E088);
}

uint64_t sub_242B3DE98(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (qword_2572205A8 != -1)
    swift_once();
  sub_242B297F4(a1);
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v11) = 1;
  v12 = MEMORY[0x24BEE4B08];
  v4 = sub_242C480E0();
  if (sub_242BABFE0(v4, (char *)&v11))
  {
    sub_242BAA030();
    v6 = v5;
    OUTLINED_FUNCTION_34();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_34();
    v6 = MEMORY[0x24BEE4AF8];
  }
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v7 == 1)
  {
    sub_242A670D8(v6 + 32, (uint64_t)&v11);
    v9 = swift_bridgeObjectRelease();
    v8 = a2(v9);
    sub_242A6945C(&v11);
    return v8;
  }
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_242C48C38();
  sub_242C48314();
  v13 = v7;
  sub_242C491CC();
  sub_242C48314();
  OUTLINED_FUNCTION_34();
  sub_242C48314();
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t sub_242B3E088()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  _QWORD v6[30];
  _BYTE v7[64];

  sub_242A670D8(v0, (uint64_t)v6);
  sub_242BACC80((uint64_t)v7);
  type metadata accessor for MILProgramBuilder();
  swift_initStackObject();
  sub_242B001A0(v6, 0, 1, (uint64_t)v7);
  sub_242AFD004();
  v2 = v1;
  v3 = objc_msgSend(v2, sel_description);
  v4 = sub_242C48248();
  swift_release();

  return v4;
}

uint64_t Array<A>.writeMILDescription(to:)(uint64_t a1, uint64_t a2)
{
  return sub_242B3E188(a1, a2, (void (*)(uint64_t, __n128))Array<A>.milDescription.getter);
}

uint64_t sub_242B3E188(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, __n128))
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  v5 = sub_242C4826C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a2, v7);
  sub_242C48260();
  v10 = sub_242C48254();
  v12 = v11;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (v12 >> 60 != 15)
  {
    sub_242C47C18();
    return sub_242B3E46C(v10, v12);
  }
  return result;
}

uint64_t Tensor.milDescription.getter()
{
  return sub_242B3E294((uint64_t (*)(__n128 *))Array<A>.milDescription.getter);
}

uint64_t sub_242B3E294(uint64_t (*a1)(__n128 *))
{
  __n128 *inited;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_0_66(inited, (__n128)xmmword_242C4B7D0);
  v3 = a1(inited);
  swift_setDeallocating();
  sub_242B71334();
  return v3;
}

uint64_t Tensor.writeMILDescription(to:)(uint64_t a1)
{
  return sub_242B3E32C(a1, (void (*)(__n128 *))Array<A>.milDescription.getter);
}

uint64_t sub_242B3E32C(uint64_t a1, void (*a2)(__n128 *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __n128 *inited;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = sub_242C4826C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_0_66(inited, (__n128)xmmword_242C4B7D0);
  a2(inited);
  swift_setDeallocating();
  sub_242B71334();
  sub_242C48260();
  v8 = sub_242C48254();
  v10 = v9;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v10 >> 60 != 15)
  {
    sub_242C47C18();
    return sub_242B3E46C(v8, v10);
  }
  return result;
}

uint64_t sub_242B3E46C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_242A69418(a1, a2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_66(__n128 *a1, __n128 a2)
{
  unint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return swift_retain();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_242B3E490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_242C48650();
  nullsub_1(v0, v1, v2);
}

void sub_242B3E4C8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_242AC3124();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v3, a1);
      else
        OUTLINED_FUNCTION_91();
      sub_242BC9CA4();
      v5 = v4;
      swift_release();
      v6 = *(_QWORD *)(v7 + 16);
      if (v6 >= *(_QWORD *)(v7 + 24) >> 1)
        sub_242AC3124();
      ++v3;
      *(_QWORD *)(v7 + 16) = v6 + 1;
      *(_QWORD *)(v7 + 8 * v6 + 32) = v5;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    OUTLINED_FUNCTION_44_0();
    v2 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
}

BOOL sub_242B3E620(int a1, int a2)
{
  return a1 == a2;
}

void sub_242B3E62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_242C48248();
  v2 = v1;
  if (v0 == sub_242C48248() && v2 == v3)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

BOOL sub_242B3E690(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_242B3E69C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a1 & 1) != 0)
    v2 = 0x6E657A6F72467369;
  else
    v2 = 0x656C626169726176;
  if ((a2 & 1) != 0)
    v3 = 0x6E657A6F72467369;
  else
    v3 = 0x656C626169726176;
  if (v2 != v3)
    OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B3E710()
{
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_213_0();
  __asm { BR              X10 }
}

uint64_t sub_242B3E740()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_211_0();
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3E798 + 4 * byte_242C578BC[v1]))(v0);
}

void sub_242B3E798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_208_1();
  if (v1 == v2 && v0 == 0xE500000000000000)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3E800()
{
  OUTLINED_FUNCTION_346();
  OUTLINED_FUNCTION_345();
  __asm { BR              X10 }
}

uint64_t sub_242B3E844()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_213_0();
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3E880 + 4 * byte_242C578C4[v1]))(v0);
}

void sub_242B3E880(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x74657366666FLL && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_353();
  else
    OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9();
}

void sub_242B3E8E0()
{
  OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_342();
  __asm { BR              X10 }
}

uint64_t sub_242B3E918()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_213_0();
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3E970 + 4 * byte_242C578CF[v1]))(v0);
}

void sub_242B3E970(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x74657366666FLL && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3E9E0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242B3EA3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3EAB0 + 4 * byte_242C578DB[a2]))(0x756C62746867696CLL);
}

void sub_242B3EAB0(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x756C62746867696CLL && v1 == 0xEA00000000003165)
    OUTLINED_FUNCTION_353();
  else
    OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9();
}

void sub_242B3EB40(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v2 = 0xEB00000000797469;
  v3 = 0x6C696261626F7270;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x676E696E7261656CLL;
    else
      v5 = 0x6574617473;
    if (v4 == 1)
      v6 = 0xED00006573616850;
    else
      v6 = 0xE500000000000000;
  }
  else
  {
    v5 = 0x6C696261626F7270;
    v6 = 0xEB00000000797469;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 0x676E696E7261656CLL;
    else
      v3 = 0x6574617473;
    if (a2 == 1)
      v2 = 0xED00006573616850;
    else
      v2 = 0xE500000000000000;
  }
  if (v5 == v3 && v6 == v2)
    OUTLINED_FUNCTION_353();
  else
    OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9();
}

void sub_242B3EC50(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242B3ECA0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3ECE8 + 4 * byte_242C578E4[a2]))(1684366707);
}

void sub_242B3ECE8(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 1684366707 && v1 == 0xE400000000000000)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3ED40(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1935763810;
  else
    v3 = 0x746867696577;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1935763810;
  else
    v5 = 0x746867696577;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3EDB4(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a1 & 1) != 0)
    v2 = 0x6E696D677261;
  else
    v2 = 0x78616D677261;
  if ((a2 & 1) != 0)
    v3 = 0x6E696D677261;
  else
    v3 = 0x78616D677261;
  if (v2 != v3)
    OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B3EE1C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 29295;
  else
    v3 = 6581857;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 29295;
  else
    v5 = 6581857;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3EE88(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242B3EED0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3EF68 + 4 * byte_242C578EE[a2]))(0x72657461657267);
}

void sub_242B3EF68(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x72657461657267 && v1 == 0xE700000000000000)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F010(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242B3F050(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3F104 + 4 * byte_242C578FC[a2]))(0x7463617274627573);
}

void sub_242B3F104(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x7463617274627573 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F1C8(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_242ABCCF0(a1);
  v5 = v4;
  if (v3 == sub_242ABCCF0(a2) && v5 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

