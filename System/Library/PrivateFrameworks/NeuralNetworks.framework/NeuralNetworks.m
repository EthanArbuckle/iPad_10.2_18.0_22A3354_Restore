void sub_242A46684(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  MEMORY[0x2494ED668](v3, 0x1012C40EC159624);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(result + 48) = v2;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 48);
  v1 = (_QWORD *)(a1 + 48);
  v2 = v3;
  *v1 = 0;
  if (v3)
    std::default_delete<std::string>::operator()[abi:ne180100]((uint64_t)v1, v2);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  std::string *v5;
  std::string::size_type v6;
  std::string::size_type v7;
  std::string *v8;

  v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8)
      std::string::__throw_length_error[abi:ne180100]();
    v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17)
      v6 = __sz | 7;
    v7 = v6 + 1;
    v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    v5 = v8;
  }
  else
  {
    *((_BYTE *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

void std::string::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_25137A0B0, MEMORY[0x24BEDAAF0]);
}

void sub_242A46828(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8B8] + 16);
  return result;
}

void std::default_delete<std::string>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0)
      operator delete(*(void **)a2);
    JUMPOUT(0x2494ED668);
  }
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_242A46A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);

  _Unwind_Resume(a1);
}

_QWORD *std::shared_ptr<MIL::MILContext>::operator=[abi:ne180100]<MIL::MILContext,std::default_delete<MIL::MILContext>,void>(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v4 = *a2;
  if (*a2)
  {
    v5 = (_QWORD *)operator new();
    v6 = *a2;
    *v5 = &unk_25137AA68;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = v6;
  }
  else
  {
    v5 = 0;
  }
  *a2 = 0;
  v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v5;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void sub_242A46C28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t std::shared_ptr<MIL::MILContext>::operator=[abi:ne180100](uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_242A46E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_242A47354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27)
{
  if (__p)
    operator delete(__p);
  if (a26)
    operator delete(a26);

  _Unwind_Resume(a1);
}

void sub_242A478A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48)
{
  void *v48;

  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table((uint64_t)&a32);
  if (__p)
  {
    a48 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

_QWORD *std::shared_ptr<MIL::IRValue const>::operator=[abi:ne180100]<MIL::IRTensorValue const,std::default_delete<MIL::IRTensorValue const>,void>(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v4 = *a2;
  if (*a2)
  {
    v5 = (_QWORD *)operator new();
    v6 = *a2;
    *v5 = &unk_25137A9A8;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = v6;
  }
  else
  {
    v5 = 0;
  }
  *a2 = 0;
  v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v5;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void sub_242A47C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_242A47DB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(a9);
  _Unwind_Resume(exception_object);
}

void sub_242A48968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  void *v34;

  if (a34 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_242A48C24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A48D68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A48E40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_242A48F9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A49054(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A49180(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_242A49364(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A49558(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A495CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A49610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A49684(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A496F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A49820(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A49970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_242A49AEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A49C3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A49D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_242A49E40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A49ED8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A49FBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A4A04C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4A094(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4A1A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A4A2D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_242A4A438(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A4A5B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A4A6CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4A774(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4A858(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4A978(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4AB68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  if (a22 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_242A4AC48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4B0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_242A4B228(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A4B5C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

void sub_242A4B7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_242A4B8C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

_QWORD *std::shared_ptr<MIL::IRProgram>::operator=[abi:ne180100]<MIL::IRProgram,std::default_delete<MIL::IRProgram>,void>(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v4 = *a2;
  if (*a2)
  {
    v5 = (_QWORD *)operator new();
    v6 = *a2;
    *v5 = &unk_25137AA08;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = v6;
  }
  else
  {
    v5 = 0;
  }
  *a2 = 0;
  v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v5;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void sub_242A4B9D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_242A4BD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_242A4BE94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A4C084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a15);
  if (a22 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_242A4C194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  void *v15;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    (*(void (**)(uint64_t))(*(_QWORD *)a15 + 8))(a15);

  _Unwind_Resume(a1);
}

void sub_242A4C3C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a17)
    (*(void (**)(uint64_t))(*(_QWORD *)a17 + 8))(a17);
  _Unwind_Resume(exception_object);
}

uint64_t std::ostringstream::basic_ostringstream[abi:ne180100](uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::ios_base *v6;

  v2 = MEMORY[0x24BEDB870];
  v3 = MEMORY[0x24BEDB870] + 64;
  *(_QWORD *)(a1 + 112) = MEMORY[0x24BEDB870] + 64;
  v4 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v5 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + *(_QWORD *)(v4 - 24)) = v5;
  v6 = (std::ios_base *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 24));
  std::ios_base::init(v6, (void *)(a1 + 8));
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *(_QWORD *)a1 = v2 + 24;
  *(_QWORD *)(a1 + 112) = v3;
  std::streambuf::basic_streambuf();
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEDB848] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_242A4C584(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x2494ED644](v1);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x24BEDB800];
  v3 = *MEMORY[0x24BEDB800];
  *(_QWORD *)a1 = *MEMORY[0x24BEDB800];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEDB848] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x2494ED644](a1 + 112);
  return a1;
}

void sub_242A4C6A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x24BEDB748], MEMORY[0x24BEDABB8]);
}

uint64_t std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MIL::IRDimension const*>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a2);
}

_QWORD *std::vector<BOOL>::__init_with_size[abi:ne180100]<BOOL *,BOOL *>(_QWORD *result, _BYTE *a2, _BYTE *a3, uint64_t a4)
{
  _QWORD *v7;

  if (a4)
  {
    v7 = result;
    std::vector<BOOL>::__vallocate[abi:ne180100](result, a4);
    return std::vector<BOOL>::__construct_at_end<BOOL *,BOOL *>(v7, a2, a3, a4);
  }
  return result;
}

void sub_242A4C810(_Unwind_Exception *exception_object)
{
  void **v1;

  if (*v1)
    operator delete(*v1);
  _Unwind_Resume(exception_object);
}

void *std::vector<BOOL>::__vallocate[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  void *result;
  uint64_t v4;

  if (a2 < 0)
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  result = std::__allocate_at_least[abi:ne180100]<std::allocator<MIL::IRDimension const*>>((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

_QWORD *std::vector<BOOL>::__construct_at_end<BOOL *,BOOL *>(_QWORD *result, _BYTE *a2, _BYTE *a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = result[1];
  v5 = v4 + a4;
  result[1] = v4 + a4;
  if (!v4 || ((v5 - 1) ^ (v4 - 1)) >= 0x40)
  {
    if (v5 >= 0x41)
      v6 = (v5 - 1) >> 6;
    else
      v6 = 0;
    *(_QWORD *)(*result + 8 * v6) = 0;
  }
  if (a2 != a3)
  {
    v7 = v4 & 0x3F;
    v8 = (uint64_t *)(*result + 8 * (v4 >> 6));
    do
    {
      v9 = 1 << v7;
      if (*a2)
        v10 = *v8 | v9;
      else
        v10 = *v8 & ~v9;
      *v8 = v10;
      ++a2;
      v8 += v7 == 63;
      if (v7 == 63)
        v7 = 0;
      else
        ++v7;
    }
    while (a2 != a3);
  }
  return result;
}

_QWORD *std::vector<signed char>::__init_with_size[abi:ne180100]<signed char *,signed char *>(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = std::vector<signed char>::__vallocate[abi:ne180100](result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4C964(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<signed char>::__vallocate[abi:ne180100](_QWORD *a1, size_t __sz)
{
  char *result;

  if ((__sz & 0x8000000000000000) != 0)
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

_QWORD *std::vector<short>::__init_with_size[abi:ne180100]<short *,short *>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<short>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CA1C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<short>::__vallocate[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 < 0)
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<short>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<short>>(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(2 * a2);
}

_QWORD *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CB00(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<int>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a2);
}

_QWORD *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CBEC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<long long>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MIL::IRDimension const*>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

_QWORD *std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = std::vector<signed char>::__vallocate[abi:ne180100](result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CCA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<short>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CD1C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CD94(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<unsigned long long>::__init_with_size[abi:ne180100]<unsigned long long *,unsigned long long *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CE0C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<MIL::Fp16>::__init_with_size[abi:ne180100]<MIL::Fp16*,MIL::Fp16*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<short>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CE84(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CEFC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_242A4CF74(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(uint64_t a1)
{
  void *v2;

  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__deallocate_node(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__deallocate_node(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>,0>(uint64_t a1)
{
  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100](a1 + 24);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *i;
  unint64_t v16;
  _QWORD *v17;
  __int128 *v18;
  __int128 v19;
  float v20;
  float v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD v29[2];
  char v30;

  v8 = (_QWORD *)(a1 + 24);
  v9 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  v17 = operator new(0x38uLL);
  v29[0] = v17;
  v29[1] = a1 + 16;
  *v17 = 0;
  v17[1] = v10;
  v18 = *a4;
  v19 = **a4;
  v17[4] = *((_QWORD *)*a4 + 2);
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *(_QWORD *)v18 = 0;
  v17[5] = 0;
  v17[6] = 0;
  v30 = 1;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    v22 = 1;
    if (v11 >= 3)
      v22 = (v11 & (v11 - 1)) != 0;
    v23 = v22 | (2 * v11);
    v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24)
      v25 = v24;
    else
      v25 = v23;
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v25);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v26 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v26)
  {
    *(_QWORD *)v29[0] = *v26;
    *v26 = v29[0];
  }
  else
  {
    *(_QWORD *)v29[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v29[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v29[0])
    {
      v27 = *(_QWORD *)(*(_QWORD *)v29[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v27 >= v11)
          v27 %= v11;
      }
      else
      {
        v27 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v27) = v29[0];
    }
  }
  i = (unsigned __int8 *)v29[0];
  v29[0] = 0;
  ++*v8;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v29, 0);
  return i;
}

void sub_242A4D2C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unint64_t std::__string_hash<char>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v5;

  v2 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v3 = v2;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;

  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      v11 = v7 + v9;
      v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      v14 = v8 + a3 + v7 + v4;
      v15 = v14 + v5;
      v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      v18 = v17 + v6 + v9;
      v19 = __ROR8__(v18, 44);
      v20 = v18 + v10;
      v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      v23 = *a2;
      v22 = a2 + 4;
      v24 = v23 - 0x4B6D499041670D8DLL * v5;
      v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        v26 = *(v22 - 3);
        v27 = v24 + v15 + v11 + v26;
        v28 = v22[2];
        v29 = v22[3];
        v30 = v22[1];
        v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        v31 = v13 + v20;
        v32 = *(v22 - 2);
        v33 = *(v22 - 1);
        v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        v35 = v34 + v20 + v33;
        v36 = v34 + v26 + v32;
        v15 = v36 + v33;
        v37 = __ROR8__(v36, 44) + v34;
        v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        v16 = v37 + __ROR8__(v35 + v38, 21);
        v39 = v24 + v21 + *v22;
        v20 = v39 + v30 + v28 + v29;
        v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        v13 = v38;
        v25 += 64;
      }
      while (v25);
      v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100](a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100](a2, a3);
  }
  else
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100](a2, a3);
  }
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100](_DWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  if (a2 < 9)
  {
    if (a2 < 4)
    {
      result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)a1 + a2 - 8);
    v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = a1[1];
  v3 = 0xB492B66FBE98F273 * *a1;
  v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8);
  v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(_QWORD *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = *(_QWORD *)((char *)a1 + a2 - 16);
  v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  v5 = a1[2];
  v4 = a1[3];
  v6 = __ROR8__(v3 + v4, 52);
  v7 = v3 + a1[1];
  v8 = __ROR8__(v7, 7);
  v9 = v7 + v5;
  v10 = *(_QWORD *)((char *)a1 + a2 - 32) + v5;
  v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  v12 = *(_QWORD *)((char *)a1 + a2 - 24) + v10 + v2;
  v13 = 0xC3A5C85C97CB3127 * (v12 + *(_QWORD *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t std::equal_to<std::string>::operator()[abi:ne180100](uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  BOOL v14;
  uint64_t result;

  v3 = a3;
  v4 = a2[23];
  if ((v4 & 0x80u) == 0)
    v5 = a2[23];
  else
    v5 = *((_QWORD *)a2 + 1);
  v6 = a3[23];
  v7 = (char)v6;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a3 + 1);
  if (v5 != v6)
    return 0;
  if (v7 < 0)
    v3 = *(unsigned __int8 **)a3;
  if ((v4 & 0x80) != 0)
    return memcmp(*(const void **)a2, v3, *((_QWORD *)a2 + 1)) == 0;
  if (!a2[23])
    return 1;
  v8 = v4 - 1;
  do
  {
    v10 = *a2++;
    v9 = v10;
    v12 = *v3++;
    v11 = v12;
    v14 = v8-- != 0;
    result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__do_rehash<true>(a1, prime);
  }
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;

  if (a2)
  {
    if (a2 >> 61)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v11 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2)
              v12 %= a2;
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *v7 = *v11;
            *v11 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = v11;
            v11 = v7;
          }
          v12 = v8;
LABEL_24:
          v7 = v11;
          v11 = (_QWORD *)*v11;
          v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>,0>((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

void std::__shared_ptr_pointer<MIL::IRTensorValue const *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::IRTensorValue const *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRTensorValue const *>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if (v2 == v3)
    return 1;
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3))
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  return 0;
}

uint64_t std::unordered_map<std::string,std::shared_ptr<MIL::IRValue const>>::unordered_map(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, *(_QWORD *)(a2 + 8));
  for (i = *(unsigned __int8 **)(a2 + 16); i; i = *(unsigned __int8 **)i)
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, i + 16, (__int128 *)i + 1);
  return a1;
}

void sub_242A4DBCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unsigned __int8 **v13;
  unsigned __int8 *i;
  unint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD v25[3];

  v7 = (_QWORD *)(a1 + 24);
  v8 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v10)
        v3 = v8 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v8;
    }
    v13 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(unsigned __int8 **)i)
      {
        v15 = *((_QWORD *)i + 1);
        if (v15 == v9)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10)
              v15 %= v10;
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3)
            break;
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, v9, a3, (uint64_t)v25);
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v25[0] = *v22;
    *v22 = v25[0];
  }
  else
  {
    *(_QWORD *)v25[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v25[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v25[0])
    {
      v23 = *(_QWORD *)(*(_QWORD *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10)
          v23 %= v10;
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v25[0];
    }
  }
  i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v25, 0);
  return i;
}

void sub_242A4DE4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

std::string *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  std::string *result;

  v7 = a1 + 16;
  v8 = (char *)operator new(0x38uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = a2;
  result = std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]((std::string *)(v8 + 16), a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_242A4DEC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100](std::string *this, __int128 *a2)
{
  __int128 v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  v5 = *((_QWORD *)a2 + 4);
  this[1].__r_.__value_.__r.__words[0] = *((_QWORD *)a2 + 3);
  this[1].__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  return this;
}

void std::__shared_ptr_pointer<MIL::IRProgram  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::IRProgram  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRProgram  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

void std::__shared_ptr_pointer<MIL::MILContext  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::MILContext  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::MILContext  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_242A4E138(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_242A4E1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_242A4E5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a25)
    (*(void (**)(uint64_t))(*(_QWORD *)a25 + 8))(a25);
  _Unwind_Resume(exception_object);
}

void sub_242A4EA34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, void *a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32)
{
  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_242A4EB68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A4EDA8(_Unwind_Exception *a1, void *__p, uint64_t a3, int a4, __int16 a5, char a6, char a7, uint64_t a8, void *a9, void *__pa, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__split_buffer<std::string> *a17)
{

  _Unwind_Resume(a1);
}

void sub_242A4EF44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_242A4F578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,char a44)
{
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v48;

  if (a41 < 0)
    operator delete(__p);
  v48 = *(_QWORD *)(v46 - 200);
  *(_QWORD *)(v46 - 200) = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100](v46 - 192);

  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::~pair(uint64_t a1)
{
  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100](a1 + 24);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_242A4F874(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_242A4F9B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_242A4FA80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A4FBA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_242A4FD2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_242A4FE14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A4FECC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_242A4FFEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_242A500CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A50208(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_242A50318(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_242A510BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  if (a30 < 0)
    operator delete(__p);
  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a35);
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table((uint64_t)&a46);
  a46 = (uint64_t)&a62;
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a46);

  std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy((uint64_t)&STACK[0x238], (_QWORD *)STACK[0x240]);
  _Unwind_Resume(a1);
}

void sub_242A514A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_242A517F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;

  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a11);

  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_242A51A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  void *v23;

  if (a17)
    (*(void (**)(void *))(*(_QWORD *)a17 + 8))(a17);

  _Unwind_Resume(a1);
}

void sub_242A51C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_242A51DA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A51E68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_242A52250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (__p)
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a24);
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table((uint64_t)&a36);
  _Unwind_Resume(a1);
}

void sub_242A5251C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

_QWORD *std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<char const(&)[4],std::unique_ptr<MIL::IRValue const>,0>(_QWORD *a1, char *a2, uint64_t *a3)
{
  _QWORD *v5;

  v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>(v5 + 3, a3);
  return a1;
}

void sub_242A52600(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<char const(&)[5],std::unique_ptr<MIL::IRValue const>,0>(_QWORD *a1, char *a2, uint64_t *a3)
{
  _QWORD *v5;

  v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>(v5 + 3, a3);
  return a1;
}

void sub_242A52650(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v2);
    operator delete(**a1);
  }
}

void std::vector<std::string>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0)
      operator delete(*(void **)(i - 24));
  }
  a1[1] = v2;
}

void std::__shared_ptr_pointer<MIL::Location  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::Location  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::Location  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

void std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100](v4 - 16);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::__shared_ptr_pointer<MIL::IRFunction  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::IRFunction  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRFunction  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

_OWORD *std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<MIL::IRTensorValueType const*&>>(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4, _QWORD **a5)
{
  void **v8;
  _OWORD *v9;
  uint64_t **v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  v8 = (void **)std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__find_equal<std::string>((uint64_t)a1, &v15, a2);
  v9 = *v8;
  if (!*v8)
  {
    v10 = (uint64_t **)v8;
    v9 = operator new(0x40uLL);
    v11 = *a4;
    v12 = *a5;
    v13 = *((_QWORD *)*a4 + 2);
    v9[2] = **a4;
    *((_QWORD *)v9 + 6) = v13;
    v11[1] = 0;
    v11[2] = 0;
    *v11 = 0;
    *((_QWORD *)v9 + 7) = *v12;
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__insert_node_at(a1, v15, v10, (uint64_t *)v9);
  }
  return v9;
}

_QWORD *std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__find_equal<std::string>(uint64_t a1, _QWORD *a2, const void **a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  const void **v9;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v7 = a1 + 16;
    do
    {
      while (1)
      {
        v8 = (_QWORD *)v4;
        v9 = (const void **)(v4 + 32);
        if (!std::less<std::string>::operator()[abi:ne180100](v7, a3, (const void **)(v4 + 32)))
          break;
        v4 = *v8;
        v5 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v7, v9, a3))
        break;
      v5 = v8 + 1;
      v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    v8 = (_QWORD *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t *std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL std::less<std::string>::operator()[abi:ne180100](uint64_t a1, const void **a2, const void **a3)
{
  int v3;
  int v4;
  size_t v5;
  const void *v6;
  size_t v7;
  const void *v8;
  size_t v9;
  int v10;

  v3 = *((char *)a3 + 23);
  v4 = *((char *)a2 + 23);
  if (v4 >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = (size_t)a2[1];
  if (v4 >= 0)
    v6 = a2;
  else
    v6 = *a2;
  if (v3 >= 0)
    v7 = *((unsigned __int8 *)a3 + 23);
  else
    v7 = (size_t)a3[1];
  if (v3 >= 0)
    v8 = a3;
  else
    v8 = *a3;
  if (v7 >= v5)
    v9 = v5;
  else
    v9 = v7;
  v10 = memcmp(v6, v8, v9);
  if (v10)
    return v10 < 0;
  else
    return v5 < v7;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void std::vector<std::string>::__swap_out_circular_buffer(std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  std::string *v4;
  std::string *begin;
  std::string *end;
  std::string *value;

  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>((uint64_t)&this->__end_cap_, (uint64_t)this->__end_, (uint64_t)this->__end_, (uint64_t)this->__begin_, (uint64_t)this->__begin_, (uint64_t)__v->__begin_, (uint64_t)__v->__begin_);
  __v->__begin_ = v4;
  begin = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    v9 = a7;
    do
    {
      v10 = *(_OWORD *)(a3 - 24);
      *(_QWORD *)(v9 - 8) = *(_QWORD *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(_QWORD *)(a3 - 16) = 0;
      *(_QWORD *)(a3 - 8) = 0;
      *(_QWORD *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((_QWORD *)&v15 + 1) = v9;
  }
  v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    v1 += 24;
  }
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100]((uint64_t)this, (void **)&this->__begin_->__r_.__value_.__l.__data_);
  if (this->__first_)
    operator delete(this->__first_);
}

void std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  void **v2;
  void **v5;

  v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      v5 = v2 - 3;
      *(_QWORD *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != a2);
  }
}

void std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::shared_ptr<MIL::IRArgument>>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::shared_ptr<MIL::IRArgument>>>,0>(uint64_t a1)
{
  void **v2;

  v2 = (void **)(a1 + 24);
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

MIL::IRNamedValueType *std::unique_ptr<MIL::IRNamedValueType>::reset[abi:ne180100](MIL::IRNamedValueType **a1, MIL::IRNamedValueType *a2)
{
  MIL::IRNamedValueType *result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    MIL::IRNamedValueType::~IRNamedValueType(result);
    JUMPOUT(0x2494ED668);
  }
  return result;
}

void std::__shared_ptr_pointer<MIL::IRNamedValueType  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

MIL::IRNamedValueType *std::__shared_ptr_pointer<MIL::IRNamedValueType  *>::__on_zero_shared(uint64_t a1)
{
  MIL::IRNamedValueType *result;

  result = *(MIL::IRNamedValueType **)(a1 + 24);
  if (result)
  {
    MIL::IRNamedValueType::~IRNamedValueType(result);
    JUMPOUT(0x2494ED668);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRNamedValueType  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a2);
}

uint64_t *std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *a2;
  *a1 = *a2;
  if (v4)
  {
    v5 = (_QWORD *)operator new();
    v6 = *a2;
    *v5 = &unk_25137ABE8;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = v6;
  }
  else
  {
    v5 = 0;
  }
  a1[1] = (uint64_t)v5;
  *a2 = 0;
  return a1;
}

void std::__shared_ptr_pointer<MIL::IRValue const *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::IRValue const *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRValue const *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

uint64_t std::unordered_map<std::string,std::shared_ptr<MIL::IRValue const>>::unordered_map(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    v5 = 40 * a3;
    do
    {
      std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, a2, (__int128 *)a2);
      a2 += 40;
      v5 -= 40;
    }
    while (v5);
  }
  return a1;
}

void sub_242A53144(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<std::shared_ptr<MIL::IROperation>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 16;
    std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100](i - 16);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__shared_ptr_pointer<MIL::IROperation  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::IROperation  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IROperation  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

void std::__shared_ptr_pointer<MIL::IRArgument  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x2494ED668);
}

uint64_t std::__shared_ptr_pointer<MIL::IRArgument  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRArgument  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else
    return 0;
}

_OWORD *std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::__emplace_unique_key_args<std::string,std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>(uint64_t **a1, const void **a2, uint64_t a3, uint64_t a4)
{
  void **v7;
  _OWORD *v8;
  uint64_t **v9;
  _QWORD v11[2];
  char v12;
  uint64_t v13;

  v7 = (void **)std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__find_equal<std::string>((uint64_t)a1, &v13, a2);
  v8 = *v7;
  if (!*v7)
  {
    v9 = (uint64_t **)v7;
    v8 = operator new(0x50uLL);
    v11[1] = a1 + 1;
    v8[2] = *(_OWORD *)a3;
    *((_QWORD *)v8 + 6) = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)a3 = 0;
    *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)a4;
    *((_QWORD *)v8 + 9) = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = 0;
    v12 = 1;
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__insert_node_at(a1, v13, v9, (uint64_t *)v8);
    v11[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v11, 0);
  }
  return v8;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::shared_ptr<MIL::IRArgument>>>,0>((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::unique_ptr<MIL::IRValue const> &&>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4, uint64_t **a5)
{
  unint64_t v5;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  unint64_t v15;
  unsigned __int8 **v16;
  unsigned __int8 *i;
  unint64_t v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD v28[3];

  v10 = (_QWORD *)(a1 + 24);
  v11 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  v12 = v11;
  v13 = *(_QWORD *)(a1 + 8);
  if (v13)
  {
    v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      v5 = v11;
      if (v11 >= v13)
        v5 = v11 % v13;
    }
    else
    {
      v5 = (v13 - 1) & v11;
    }
    v16 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v5);
    if (v16)
    {
      for (i = *v16; i; i = *(unsigned __int8 **)i)
      {
        v18 = *((_QWORD *)i + 1);
        if (v18 == v12)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v15 > 1)
          {
            if (v18 >= v13)
              v18 %= v13;
          }
          else
          {
            v18 &= v13 - 1;
          }
          if (v18 != v5)
            break;
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::unique_ptr<MIL::IRValue const> &&>>(a1, v12, a4, a5, (uint64_t)v28);
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (!v13 || (float)(v20 * (float)v13) < v19)
  {
    v21 = 1;
    if (v13 >= 3)
      v21 = (v13 & (v13 - 1)) != 0;
    v22 = v21 | (2 * v13);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      v24 = v23;
    else
      v24 = v22;
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v24);
    v13 = *(_QWORD *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
        v5 = v12 % v13;
      else
        v5 = v12;
    }
    else
    {
      v5 = (v13 - 1) & v12;
    }
  }
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v25)
  {
    *(_QWORD *)v28[0] = *v25;
    *v25 = v28[0];
  }
  else
  {
    *(_QWORD *)v28[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v28[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v5) = a1 + 16;
    if (*(_QWORD *)v28[0])
    {
      v26 = *(_QWORD *)(*(_QWORD *)v28[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v26 >= v13)
          v26 %= v13;
      }
      else
      {
        v26 &= v13 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v26) = v28[0];
    }
  }
  i = (unsigned __int8 *)v28[0];
  v28[0] = 0;
  ++*v10;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v28, 0);
  return i;
}

void sub_242A5363C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::unique_ptr<MIL::IRValue const> &&>>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t **a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  v9 = a1 + 16;
  v10 = operator new(0x38uLL);
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = 0;
  *v10 = 0;
  v10[1] = a2;
  result = std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<std::string&&,std::unique_ptr<MIL::IRValue const> &&>((uint64_t)(v10 + 2), *a3, *a4);
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_242A536B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<std::string&&,std::unique_ptr<MIL::IRValue const> &&>(uint64_t a1, __int128 *a2, uint64_t *a3)
{
  __int128 v4;

  v4 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  *(_QWORD *)a2 = 0;
  std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>((uint64_t *)(a1 + 24), a3);
  return a1;
}

void sub_242A53710(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::destroy(a1, *(_QWORD *)a2);
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::destroy(a1, *((_QWORD *)a2 + 1));
    if (a2[55] < 0)
      operator delete(*((void **)a2 + 4));
    operator delete(a2);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::shared_ptr<MIL::IRFunction>&&>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4, uint64_t *a5)
{
  unint64_t v5;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  unint64_t v15;
  unsigned __int8 **v16;
  unsigned __int8 *i;
  unint64_t v18;
  char *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  float v23;
  float v24;
  _BOOL8 v25;
  unint64_t v26;
  unint64_t v27;
  size_t v28;
  _QWORD *v29;
  unint64_t v30;
  _QWORD v32[2];
  char v33;

  v10 = (_QWORD *)(a1 + 24);
  v11 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  v12 = v11;
  v13 = *(_QWORD *)(a1 + 8);
  if (v13)
  {
    v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      v5 = v11;
      if (v11 >= v13)
        v5 = v11 % v13;
    }
    else
    {
      v5 = (v13 - 1) & v11;
    }
    v16 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v5);
    if (v16)
    {
      for (i = *v16; i; i = *(unsigned __int8 **)i)
      {
        v18 = *((_QWORD *)i + 1);
        if (v18 == v12)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v15 > 1)
          {
            if (v18 >= v13)
              v18 %= v13;
          }
          else
          {
            v18 &= v13 - 1;
          }
          if (v18 != v5)
            break;
        }
      }
    }
  }
  v19 = (char *)operator new(0x38uLL);
  v32[0] = v19;
  v32[1] = a1 + 16;
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = v12;
  v20 = *a4;
  v21 = *a5;
  v22 = **a4;
  *((_QWORD *)v19 + 4) = *((_QWORD *)*a4 + 2);
  *((_OWORD *)v19 + 1) = v22;
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = 0;
  *(_OWORD *)(v19 + 40) = *(_OWORD *)v21;
  *(_QWORD *)v21 = 0;
  *(_QWORD *)(v21 + 8) = 0;
  v33 = 1;
  v23 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v24 = *(float *)(a1 + 32);
  if (!v13 || (float)(v24 * (float)v13) < v23)
  {
    v25 = 1;
    if (v13 >= 3)
      v25 = (v13 & (v13 - 1)) != 0;
    v26 = v25 | (2 * v13);
    v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27)
      v28 = v27;
    else
      v28 = v26;
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v28);
    v13 = *(_QWORD *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
        v5 = v12 % v13;
      else
        v5 = v12;
    }
    else
    {
      v5 = (v13 - 1) & v12;
    }
  }
  v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v29)
  {
    *(_QWORD *)v32[0] = *v29;
    *v29 = v32[0];
  }
  else
  {
    *(_QWORD *)v32[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v32[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v5) = a1 + 16;
    if (*(_QWORD *)v32[0])
    {
      v30 = *(_QWORD *)(*(_QWORD *)v32[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v30 >= v13)
          v30 %= v13;
      }
      else
      {
        v30 &= v13 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v30) = v32[0];
    }
  }
  i = (unsigned __int8 *)v32[0];
  v32[0] = 0;
  ++*v10;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v32, 0);
  return i;
}

void sub_242A53A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void sub_242A53C08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A53D48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A53FB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A54190(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_242A546F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_242A547F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)SNNEspressoV1ExecutionContext;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_242A548F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  void *v4;
  va_list va;

  va_start(va, a2);
  v4 = v3;

  std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::~pair((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_242A54A04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void Espresso::net::all_globals(Espresso::net *this@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  Espresso::net *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v4 = (std::__shared_weak_count *)*((_QWORD *)this + 137);
  if (!v4)
  {
    v5 = 0;
    goto LABEL_6;
  }
  v5 = std::__shared_weak_count::lock(v4);
  if (!v5 || (v6 = (Espresso::net *)*((_QWORD *)this + 136)) == 0)
  {
LABEL_6:
    std::unordered_map<std::string,std::shared_ptr<Espresso::abstract_blob_container>>::unordered_map(a2, (uint64_t)this + 1440);
    if (!v5)
      return;
    goto LABEL_7;
  }
  Espresso::net::all_globals(v6);
LABEL_7:
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_242A54AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_242A54C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_242A54D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_242A5515C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, char a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  if (__p)
    operator delete(__p);
  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a20);

  _Unwind_Resume(a1);
}

void sub_242A554A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  void *v16;

  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a16);

  _Unwind_Resume(a1);
}

void sub_242A555DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  void *v16;

  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a16);

  _Unwind_Resume(a1);
}

void sub_242A55704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  void *v16;

  std::shared_ptr<MIL::MILContext>::~shared_ptr[abi:ne180100]((uint64_t)&a16);

  _Unwind_Resume(a1);
}

uint64_t std::unordered_map<std::string,std::shared_ptr<Espresso::abstract_blob_container>>::unordered_map(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, *(_QWORD *)(a2 + 8));
  for (i = *(unsigned __int8 **)(a2 + 16); i; i = *(unsigned __int8 **)i)
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, i + 16, (__int128 *)i + 1);
  return a1;
}

void sub_242A55840(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

char *Espresso::abstract_blob_container::shape@<X0>(char *this@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;

  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  v2 = *(_OWORD *)(this + 24);
  *(_OWORD *)a2 = *(_OWORD *)(this + 8);
  *(_OWORD *)(a2 + 16) = v2;
  *(_QWORD *)(a2 + 32) = *((_QWORD *)this + 5);
  if ((char *)(a2 + 40) != this + 48)
    return std::vector<unsigned int>::__assign_with_size[abi:ne180100]<unsigned int *,unsigned int *>((char *)(a2 + 40), *((char **)this + 6), *((_QWORD *)this + 7), (uint64_t)(*((_QWORD *)this + 7) - *((_QWORD *)this + 6)) >> 2);
  return this;
}

void sub_242A558BC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 48) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned int>::__assign_with_size[abi:ne180100]<unsigned int *,unsigned int *>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 2)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62)
      std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 1;
    if (v8 >> 1 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = std::vector<int>::__vallocate[abi:ne180100](v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 2;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

void sub_242A559F4()
{
  sub_242A59170();
}

uint64_t sub_242A55A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_5();
  return v4;
}

void sub_242A55AB4()
{
  __n128 *v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v0 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0(v0, (__n128)xmmword_242C4B7D0);
  sub_242C480E0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A55AF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_242A55B20()
{
  sub_242A55AF4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseOptimizerOperation()
{
  return objc_opt_self();
}

uint64_t sub_242A55B60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned int *)(v0 + 16);
  sub_242C480E0();
  return v1;
}

uint64_t sub_242A55B9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_242A55BA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_242A55BB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

__n128 sub_242A55BC0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_BYTE *)(v1 + 112);
  v4 = *(_BYTE *)(v1 + 113);
  v5 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 88);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242A55BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C4B9C0, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242A55C2C()
{
  return 6580083;
}

void sub_242A55C3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7E0;
  v2 = v0[6];
  *(_QWORD *)(v1 + 32) = v0[5];
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0[16];
  OUTLINED_FUNCTION_7();
  if (v0[17])
  {
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_6();
    v3 = OUTLINED_FUNCTION_11();
    sub_242B648DC(v3);
  }
  else
  {
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_6();
  }
  OUTLINED_FUNCTION_8();
}

void sub_242A55CD4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  if (v1)
  {
    v2 = (__n128 *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_0_0(v2, (__n128)xmmword_242C4B7F0);
    v3 = *(_BYTE *)(v1 + 160);
    v2[3].n128_u64[0] = *(_QWORD *)(v1 + 152);
    v2[3].n128_u8[8] = v3;
    sub_242C480E0();
  }
  else
  {
    v4 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v5 + 152);
    LOBYTE(v5) = *(_BYTE *)(v5 + 160);
    *(_QWORD *)(v4 + 32) = v6;
    *(_BYTE *)(v4 + 40) = v5;
  }
  sub_242C480E0();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A55D74(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, float a9)
{
  uint64_t v18;

  v18 = OUTLINED_FUNCTION_2_0();
  sub_242A55E24(a1, a2, a3, a9, a4, a5, a6, a7, a8);
  return v18;
}

void sub_242A55E24(int a1, uint64_t a2, uint64_t a3, float a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 + 128) = a8;
  *(_QWORD *)(v9 + 136) = a7;
  *(float *)(v9 + 116) = a4;
  *(_BYTE *)(v9 + 120) = a9;
  if (!a3)
    a1 = sub_242BD0204(6580083, 0xE300000000000000);
  OUTLINED_FUNCTION_4(a1, a2, a3);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A55E70()
{
  swift_release();
  return swift_release();
}

uint64_t sub_242A55E8C()
{
  uint64_t v0;

  sub_242A55AF4();
  swift_release();
  OUTLINED_FUNCTION_12();
  return v0;
}

uint64_t sub_242A55EB0()
{
  sub_242A55E8C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StochasticGradientDescentOperation()
{
  return objc_opt_self();
}

void sub_242A55EF0()
{
  sub_242C4817C();
  OUTLINED_FUNCTION_3();
  sub_242C49358();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A55F2C()
{
  sub_242A55EF0();
}

uint64_t sub_242A55F4C()
{
  return 1835099233;
}

uint64_t sub_242A55F5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v2 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v2 + 16) = xmmword_242C4B800;
  v3 = v0[6];
  *(_QWORD *)(v2 + 32) = v0[5];
  *(_QWORD *)(v2 + 40) = v3;
  v4 = v0[18];
  *(_QWORD *)(v2 + 48) = v0[17];
  *(_QWORD *)(v2 + 56) = v4;
  v5 = v0[21];
  *(_QWORD *)(v2 + 64) = v0[20];
  *(_QWORD *)(v2 + 72) = v5;
  OUTLINED_FUNCTION_7();
  v6 = v9;
  if (v1[19])
  {
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_6();
    v7 = swift_retain();
    sub_242B648DC(v7);
    return v9;
  }
  else
  {
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_6();
  }
  return v6;
}

void sub_242A56040()
{
  _QWORD *v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0(v1, (__n128)xmmword_242C4B810);
  v2 = v0[17];
  v3 = v0[18];
  v4 = *(_QWORD *)(v2 + 152);
  LOBYTE(v2) = *(_BYTE *)(v2 + 160);
  v1[3].n128_u64[0] = v4;
  v1[3].n128_u8[8] = v2;
  LOBYTE(v2) = *(_BYTE *)(v3 + 160);
  v1[4].n128_u64[0] = *(_QWORD *)(v3 + 152);
  v1[4].n128_u8[8] = v2;
  v5 = v0[19];
  if (v5)
  {
    v6 = *(_BYTE *)(v5 + 160);
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    v7 = sub_242C480E0();
    sub_242B64C50(v7, v6);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
  }
  OUTLINED_FUNCTION_8();
}

void sub_242A56104(int a1, uint64_t a2, uint64_t a3, float a4, float a5, float a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;

  *(_QWORD *)(v14 + 136) = a9;
  *(_QWORD *)(v14 + 144) = a10;
  *(_QWORD *)(v14 + 152) = a11;
  *(_QWORD *)(v14 + 160) = a12;
  *(_QWORD *)(v14 + 168) = a13;
  *(float *)(v14 + 116) = a4;
  *(float *)(v14 + 120) = a5;
  *(float *)(v14 + 124) = a6;
  *(_BYTE *)(v14 + 128) = a14;
  if (!a3)
    a1 = sub_242BD0204(1835099233, 0xE400000000000000);
  OUTLINED_FUNCTION_4(a1, a2, a3);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A56164()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242A56194()
{
  uint64_t v0;

  sub_242A55AF4();
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_242A561D0()
{
  sub_242A56194();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdamOperation()
{
  return objc_opt_self();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B00);
}

void type metadata accessor for IOSurfaceRef(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B08);
}

void *__swift_memcpy168_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t sub_242A56244(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242A56264(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 168) = v3;
  return result;
}

void type metadata accessor for espresso_buffer_t(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B10);
}

void sub_242A562CC()
{
  sub_242C4817C();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_3();
  sub_242C49358();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A56318()
{
  sub_242A562CC();
}

void sub_242A56338(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_242A56F30(&qword_257220B18, a2, (uint64_t (*)(uint64_t))type metadata accessor for BaseOptimizerOperation, (uint64_t)&unk_242C4B998);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_242A56374()
{
  uint64_t *v0;

  sub_242A56504(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_242A56398(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_242C48230();
  *a2 = 0;
  return result;
}

uint64_t sub_242A56410(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_242C4823C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_242A5648C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_242A564B0();
  *a1 = result;
  return result;
}

uint64_t sub_242A564B0()
{
  uint64_t v0;

  sub_242C48248();
  v0 = sub_242C48224();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_242A564E4()
{
  uint64_t *v0;

  sub_242A56504(*v0, MEMORY[0x24BEE0CD8]);
}

void sub_242A56504(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_242C48248();
  a2(v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A56538()
{
  return sub_242A56540();
}

uint64_t sub_242A56540()
{
  sub_242C48248();
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A56580()
{
  return sub_242A56588();
}

uint64_t sub_242A56588()
{
  uint64_t v0;

  sub_242C48248();
  sub_242C49340();
  sub_242C4817C();
  v0 = sub_242C49394();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242A565F8(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4BBD4, a1);
  return sub_242C47C60();
}

uint64_t sub_242A56634()
{
  MEMORY[0x2494EDE24](&unk_242C4BBD4);
  return sub_242C47C54();
}

uint64_t sub_242A5667C(uint64_t a1, uint64_t a2)
{
  sub_242C49340();
  MEMORY[0x2494EDE24](&unk_242C4BBD4, a2);
  sub_242C47C54();
  return sub_242C49394();
}

BOOL sub_242A566D4(int *a1, int *a2)
{
  return sub_242B3E620(*a1, *a2);
}

void sub_242A566E0(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_242A56710();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_242A56718(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v3;

  *a3 = nullsub_1(*v3, a1, a2);
  OUTLINED_FUNCTION_1_0();
}

void sub_242A5673C()
{
  sub_242C44CD0();
}

void sub_242A56744()
{
  sub_242A5C1F4();
}

void sub_242A5674C()
{
  sub_242BA8D4C();
}

void sub_242A56754()
{
  sub_242B3E62C();
}

uint64_t sub_242A56760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2494EDE24](&unk_242C4BBD4, a3);
  return sub_242C47C48();
}

_DWORD *sub_242A567AC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_242A567BC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2494EDE0C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_242A56808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B38);
}

void *__swift_memcpy5040_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x13B0uLL);
}

uint64_t sub_242A5686C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5040))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242A56890(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 5032) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 4344) = 0u;
    *(_OWORD *)(result + 4328) = 0u;
    *(_OWORD *)(result + 4312) = 0u;
    *(_OWORD *)(result + 4296) = 0u;
    *(_OWORD *)(result + 4280) = 0u;
    *(_OWORD *)(result + 4264) = 0u;
    *(_OWORD *)(result + 4248) = 0u;
    *(_OWORD *)(result + 4232) = 0u;
    *(_OWORD *)(result + 4216) = 0u;
    *(_OWORD *)(result + 4200) = 0u;
    *(_OWORD *)(result + 4184) = 0u;
    *(_OWORD *)(result + 4168) = 0u;
    *(_OWORD *)(result + 4152) = 0u;
    *(_OWORD *)(result + 4136) = 0u;
    *(_OWORD *)(result + 4120) = 0u;
    *(_OWORD *)(result + 4104) = 0u;
    *(_OWORD *)(result + 4088) = 0u;
    *(_OWORD *)(result + 4072) = 0u;
    *(_OWORD *)(result + 4056) = 0u;
    *(_OWORD *)(result + 4040) = 0u;
    *(_OWORD *)(result + 4024) = 0u;
    *(_OWORD *)(result + 4008) = 0u;
    *(_OWORD *)(result + 3992) = 0u;
    *(_OWORD *)(result + 3976) = 0u;
    *(_OWORD *)(result + 3960) = 0u;
    *(_OWORD *)(result + 3944) = 0u;
    *(_OWORD *)(result + 3928) = 0u;
    *(_OWORD *)(result + 3912) = 0u;
    *(_OWORD *)(result + 3896) = 0u;
    *(_OWORD *)(result + 3880) = 0u;
    *(_OWORD *)(result + 3864) = 0u;
    *(_OWORD *)(result + 3848) = 0u;
    *(_OWORD *)(result + 3832) = 0u;
    *(_OWORD *)(result + 3816) = 0u;
    *(_OWORD *)(result + 3800) = 0u;
    *(_OWORD *)(result + 3784) = 0u;
    *(_OWORD *)(result + 3768) = 0u;
    *(_OWORD *)(result + 3752) = 0u;
    *(_OWORD *)(result + 3736) = 0u;
    *(_OWORD *)(result + 3720) = 0u;
    *(_OWORD *)(result + 3704) = 0u;
    *(_OWORD *)(result + 3688) = 0u;
    *(_OWORD *)(result + 3672) = 0u;
    *(_OWORD *)(result + 3656) = 0u;
    *(_OWORD *)(result + 3640) = 0u;
    *(_OWORD *)(result + 3624) = 0u;
    *(_OWORD *)(result + 3608) = 0u;
    *(_OWORD *)(result + 3592) = 0u;
    *(_OWORD *)(result + 3576) = 0u;
    *(_OWORD *)(result + 3560) = 0u;
    *(_OWORD *)(result + 3544) = 0u;
    *(_OWORD *)(result + 3528) = 0u;
    *(_OWORD *)(result + 3512) = 0u;
    *(_OWORD *)(result + 3496) = 0u;
    *(_OWORD *)(result + 3480) = 0u;
    *(_OWORD *)(result + 3464) = 0u;
    *(_OWORD *)(result + 3448) = 0u;
    *(_OWORD *)(result + 3432) = 0u;
    *(_OWORD *)(result + 3416) = 0u;
    *(_OWORD *)(result + 3400) = 0u;
    *(_OWORD *)(result + 3384) = 0u;
    *(_OWORD *)(result + 3368) = 0u;
    *(_OWORD *)(result + 3352) = 0u;
    *(_OWORD *)(result + 3336) = 0u;
    *(_OWORD *)(result + 3320) = 0u;
    *(_OWORD *)(result + 3304) = 0u;
    *(_OWORD *)(result + 3288) = 0u;
    *(_OWORD *)(result + 3272) = 0u;
    *(_OWORD *)(result + 3256) = 0u;
    *(_OWORD *)(result + 3240) = 0u;
    *(_OWORD *)(result + 3224) = 0u;
    *(_OWORD *)(result + 3208) = 0u;
    *(_OWORD *)(result + 3192) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 5016) = 0u;
    *(_OWORD *)(result + 5000) = 0u;
    *(_OWORD *)(result + 4984) = 0u;
    *(_OWORD *)(result + 4968) = 0u;
    *(_OWORD *)(result + 4952) = 0u;
    *(_OWORD *)(result + 4936) = 0u;
    *(_OWORD *)(result + 4920) = 0u;
    *(_OWORD *)(result + 4904) = 0u;
    *(_OWORD *)(result + 4888) = 0u;
    *(_OWORD *)(result + 4872) = 0u;
    *(_OWORD *)(result + 4856) = 0u;
    *(_OWORD *)(result + 4840) = 0u;
    *(_OWORD *)(result + 4824) = 0u;
    *(_OWORD *)(result + 4808) = 0u;
    *(_OWORD *)(result + 4792) = 0u;
    *(_OWORD *)(result + 4776) = 0u;
    *(_OWORD *)(result + 4760) = 0u;
    *(_OWORD *)(result + 4744) = 0u;
    *(_OWORD *)(result + 4728) = 0u;
    *(_OWORD *)(result + 4712) = 0u;
    *(_OWORD *)(result + 4696) = 0u;
    *(_OWORD *)(result + 4680) = 0u;
    *(_OWORD *)(result + 4664) = 0u;
    *(_OWORD *)(result + 4648) = 0u;
    *(_OWORD *)(result + 4632) = 0u;
    *(_OWORD *)(result + 4616) = 0u;
    *(_OWORD *)(result + 4600) = 0u;
    *(_OWORD *)(result + 4584) = 0u;
    *(_OWORD *)(result + 4568) = 0u;
    *(_OWORD *)(result + 4552) = 0u;
    *(_OWORD *)(result + 4536) = 0u;
    *(_OWORD *)(result + 4520) = 0u;
    *(_OWORD *)(result + 4504) = 0u;
    *(_OWORD *)(result + 4488) = 0u;
    *(_OWORD *)(result + 4472) = 0u;
    *(_OWORD *)(result + 4456) = 0u;
    *(_OWORD *)(result + 4440) = 0u;
    *(_OWORD *)(result + 4424) = 0u;
    *(_OWORD *)(result + 4408) = 0u;
    *(_OWORD *)(result + 4392) = 0u;
    *(_OWORD *)(result + 4376) = 0u;
    *(_OWORD *)(result + 4360) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5040) = v3;
  return result;
}

void type metadata accessor for BNNSLayerParametersLSTM(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B40);
}

void type metadata accessor for SNNDataType(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B48);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B50);
}

void *__swift_memcpy176_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t sub_242A56E4C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 176))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242A56E6C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 176) = v3;
  return result;
}

void type metadata accessor for BNNSNDArrayDescriptor(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B58);
}

void type metadata accessor for espresso_storage_type_t(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B60);
}

void type metadata accessor for MTLStorageMode(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220B68);
}

void sub_242A56F00()
{
  sub_242A56F30(&qword_257220B70, 255, (uint64_t (*)(uint64_t))type metadata accessor for MTLStorageMode, (uint64_t)&unk_242C4BAF8);
}

void sub_242A56F30(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x2494EDE24](a4, v6), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

BOOL sub_242A56F6C(uint64_t *a1, uint64_t *a2)
{
  return sub_242B3E690(*a1, *a2);
}

void sub_242A56F78()
{
  sub_242A56F30((unint64_t *)&qword_257220B78, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_242C4BD64);
}

uint64_t sub_242A56FA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_242C48224();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_242A56FEC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_242A57010();
  a1[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A57014()
{
  sub_242A56F30((unint64_t *)&qword_257220BA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_242C4BD20);
  sub_242A56F30(&qword_257220BA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_242C4BC74);
  return sub_242C49058();
}

void sub_242A570A0()
{
  sub_242A56F30(&qword_257220B80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_242C4BC38);
}

void sub_242A570D0()
{
  sub_242A56F30(&qword_257220B88, 255, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_242C4BC0C);
}

void sub_242A57100()
{
  sub_242A56F30(&qword_257220B90, 255, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_242C4BCA8);
}

void sub_242A57130()
{
  sub_242A56F30(&qword_257220B98, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_242C4BBA8);
}

uint64_t initializeBufferWithCopyOfBuffer for TensorRepresentation.ConcreteValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MaxPool2D(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MaxPool2D(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for BNNSActivation(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220BB0);
}

void *__swift_memcpy928_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3A0uLL);
}

uint64_t sub_242A57218(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 928))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242A57238(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 920) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 928) = v3;
  return result;
}

void type metadata accessor for BNNSLSTMGateDescriptor(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220BB8);
}

void *__swift_memcpy528_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x210uLL);
}

uint64_t sub_242A57374(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 528))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242A57394(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 520) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 528) = v3;
  return result;
}

void type metadata accessor for BNNSLSTMDataDescriptor(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220BC0);
}

void type metadata accessor for BNNSDataType(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220BC8);
}

void type metadata accessor for BNNSDataLayout(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220BD0);
}

void type metadata accessor for BNNSNDArrayFlags(uint64_t a1)
{
  sub_242A574AC(a1, &qword_257220BD8);
}

void type metadata accessor for BNNSActivationFunction(uint64_t a1)
{
  sub_242A574AC(a1, (unint64_t *)&unk_257220BE0);
}

void sub_242A574AC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t OUTLINED_FUNCTION_0_0(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = a2;
  v4 = *(_QWORD *)(v3 + 40);
  result = *(_QWORD *)(v4 + 152);
  LOBYTE(v4) = *(_BYTE *)(v4 + 160);
  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3()
{
  return sub_242C49370();
}

uint64_t OUTLINED_FUNCTION_4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = v3;
  return sub_242A56808(v6, v4 + 56);
}

uint64_t OUTLINED_FUNCTION_5()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_6()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_7()
{
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_10()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_12()
{
  return swift_release();
}

uint64_t sub_242A575A0(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_1_1(0, (a2 & 0xC000000000000001) == 0);
  if ((a2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_0_1();
  v6 = *(id *)(a2 + 32);
  OUTLINED_FUNCTION_1_1(1, 1);
  v7 = *(id *)(a2 + 40);
  OUTLINED_FUNCTION_1_1(2, 1);
  v8 = *(id *)(a2 + 48);
  v10 = *(_QWORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 32);
  sub_242C480E0();
  v11 = sub_242A57758((uint64_t)v6, (uint64_t)v7, (uint64_t)v8, v10, v9, a1);

  *(_QWORD *)(v5 + 32) = v11;
  sub_242C4856C();
  return v5;
}

uint64_t sub_242A576E0(void *a1, unint64_t a2)
{
  return sub_242A575A0(a1, a2);
}

unint64_t sub_242A576F4(uint64_t a1)
{
  unint64_t result;

  result = sub_242A57718();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242A57718()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257220D10;
  if (!qword_257220D10)
  {
    v1 = type metadata accessor for SelectOperation();
    result = MEMORY[0x2494EDE24](&unk_242C4E4F0, v1);
    atomic_store(result, (unint64_t *)&qword_257220D10);
  }
  return result;
}

id sub_242A57758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v10;
  id v11;

  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a6, sel_selectWithPredicateTensor_truePredicateTensor_falsePredicateTensor_name_, a1, a2, a3, v10);

  return v11;
}

void OUTLINED_FUNCTION_0_1()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_1_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B4B240(a1, a2, v2);
}

uint64_t sub_242A577F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_0_2();
  return v1;
}

uint64_t sub_242A57818()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 80);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 72);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

uint64_t sub_242A57870(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  char v20;
  uint64_t v21;

  v9 = v8;
  if (!a3)
    a1 = sub_242BD0204(0x746E6174736E6F63, 0xE800000000000000);
  *(_DWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 56) = a4;
  *(_QWORD *)(v9 + 64) = a5;
  *(_QWORD *)(v9 + 40) = a6;
  *(_QWORD *)(v9 + 48) = a7;
  ObjectType = swift_getObjectType();
  v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  swift_unknownObjectRetain();
  v16(&v21, ObjectType, a5);
  v17 = v21;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a5 + 8))(&v20, ObjectType, a5);
  swift_unknownObjectRelease();
  v18 = v20;
  *(_QWORD *)(v9 + 72) = v17;
  *(_BYTE *)(v9 + 80) = v18;
  sub_242A56808(a8, v9 + 88);
  return v9;
}

uint64_t sub_242A57948()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242A5797C()
{
  sub_242A57948();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConstantOperation()
{
  return objc_opt_self();
}

uint64_t sub_242A579BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned int *)(v0 + 16);
  OUTLINED_FUNCTION_0_2();
  return v1;
}

uint64_t sub_242A579F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_242C480E0();
  return v1;
}

uint64_t sub_242A57A20()
{
  return MEMORY[0x24BEE4AF8];
}

__n128 sub_242A57A30@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_BYTE *)(v1 + 144);
  v4 = *(_BYTE *)(v1 + 145);
  v5 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 120);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242A57A60()
{
  return sub_242A577F0();
}

uint64_t sub_242A57A80()
{
  OUTLINED_FUNCTION_0_2();
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A57AC0()
{
  return sub_242A57A80();
}

unint64_t sub_242A57AE0(uint64_t a1)
{
  unint64_t result;

  result = sub_242A57B04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242A57B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257220DD8;
  if (!qword_257220DD8)
  {
    v1 = type metadata accessor for ConstantOperation();
    result = MEMORY[0x2494EDE24](&unk_242C4C004, v1);
    atomic_store(result, (unint64_t *)&qword_257220DD8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return sub_242C480E0();
}

void static RuntimeConfiguration.tensorResolutionDepthThreshold.getter()
{
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_3_0();
}

void static RuntimeConfiguration.tensorResolutionDepthThreshold.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_3();
  qword_257220DE0 = a1;
  OUTLINED_FUNCTION_3_0();
}

void static RuntimeConfiguration.tensorResolutionDepthThreshold.modify()
{
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A57BF0()
{
  uint64_t result;

  result = sub_242A57C10();
  byte_257220DE8 = result & 1;
  return result;
}

uint64_t sub_242A57C10()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_242C4808C();
  sub_242A9E59C(0xD000000000000020, 0x8000000242C64B80, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4)
    return 0;
  if (sub_242C48284() == 1702195828 && v5 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      v9 = sub_242C48284();
      v11 = v10;
      swift_bridgeObjectRelease();
      if (v9 != 7562617 || v11 != 0xE300000000000000)
      {
        v13 = sub_242C4925C();
        swift_bridgeObjectRelease();
        return v13 & 1;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

char *sub_242A57DA4()
{
  if (qword_257220500 != -1)
    swift_once();
  return &byte_257220DE8;
}

uint64_t static RuntimeConfiguration.isUsingPrimitivesForOptimizers.getter()
{
  if (qword_257220500 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  return byte_257220DE8;
}

void static RuntimeConfiguration.isUsingPrimitivesForOptimizers.setter(char a1)
{
  if (qword_257220500 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  byte_257220DE8 = a1 & 1;
  OUTLINED_FUNCTION_3_0();
}

void static RuntimeConfiguration.isUsingPrimitivesForOptimizers.modify()
{
  if (qword_257220500 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A57F10()
{
  return sub_242A57F1C((uint64_t)&unk_257259930);
}

uint64_t sub_242A57F1C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  BOOL v10;
  _UNKNOWN **v11;
  void *v12;

  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_environment);

  v4 = sub_242C4808C();
  sub_242A9E59C(0xD000000000000015, 0x8000000242C64B20, v4);
  v6 = v5;
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if (v8)
  {
    v10 = v6 == 0x6F73736572707365 && v8 == 0xE800000000000000;
    if (v10 || (sub_242C4925C() & 1) != 0)
    {
      v11 = &off_251389928;
      v12 = &unk_251389868;
    }
    else
    {
      if (v6 != 0x706172675F73706DLL || v8 != 0xE900000000000068)
        sub_242C4925C();
      v11 = &off_251389908;
      v12 = &unk_251389888;
    }
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v11 = &off_251389908;
    v12 = &unk_251389888;
  }
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v11;
  return result;
}

uint64_t sub_242A580B0()
{
  return sub_242A580BC((uint64_t)&unk_257259958);
}

uint64_t sub_242A580BC@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  BOOL v10;
  _UNKNOWN **v11;
  void *v12;
  char v14;

  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_environment);

  v4 = sub_242C4808C();
  sub_242A9E59C(0xD000000000000015, 0x8000000242C64B00, v4);
  v6 = v5;
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_8;
  v10 = v6 == 0x6F73736572707365 && v8 == 0xE800000000000000;
  if (!v10 && (sub_242C4925C() & 1) == 0)
  {
    if (v6 == 1936617058 && v8 == 0xE400000000000000)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v14 = sub_242C4925C();
      result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        goto LABEL_8;
    }
    v11 = &off_2513898E8;
    v12 = &unk_251389848;
    goto LABEL_9;
  }
  result = swift_bridgeObjectRelease();
LABEL_8:
  v11 = &off_251389928;
  v12 = &unk_251389868;
LABEL_9:
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v11;
  return result;
}

uint64_t sub_242A58240()
{
  uint64_t result;

  result = sub_242A58348(0xD000000000000016, 0x8000000242C64B60);
  qword_257220DF0 = result;
  return result;
}

void static RuntimeConfiguration.mpsGraphCacheSize.getter()
{
  sub_242A58654(&qword_257220518);
}

void static RuntimeConfiguration.mpsGraphCacheSize.setter(uint64_t a1)
{
  sub_242A586B8(a1, &qword_257220518, &qword_257220DF0);
}

void static RuntimeConfiguration.mpsGraphCacheSize.modify()
{
  if (qword_257220518 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A58314()
{
  uint64_t result;

  result = sub_242A58348(0xD00000000000001ELL, 0x8000000242C64B40);
  qword_257220DF8 = result;
  return result;
}

uint64_t sub_242A58348(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unsigned __int8 v19;
  char v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  char v32;

  v4 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v5 = objc_msgSend(v4, sel_environment);

  v6 = sub_242C4808C();
  sub_242A9E59C(a1, a2, v6);
  v8 = v7;
  v10 = v9;
  result = swift_bridgeObjectRelease();
  if (!v10)
    return 100;
  v12 = HIBYTE(v10) & 0xF;
  v13 = v8 & 0xFFFFFFFFFFFFLL;
  if ((v10 & 0x2000000000000000) != 0)
    v14 = HIBYTE(v10) & 0xF;
  else
    v14 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return 100;
  }
  if ((v10 & 0x1000000000000000) == 0)
  {
    if ((v10 & 0x2000000000000000) == 0)
    {
      if ((v8 & 0x1000000000000000) != 0)
        v15 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v15 = (unsigned __int8 *)sub_242C48D1C();
      v16 = (uint64_t)sub_242A589D4(v15, v13, 10);
      LOBYTE(v8) = v17 & 1;
      goto LABEL_47;
    }
    if (v8 == 43)
    {
      if (!v12)
        goto LABEL_62;
      if (v12 == 1)
        goto LABEL_33;
      OUTLINED_FUNCTION_1_2();
      if (!v21 & v20)
        goto LABEL_33;
      v16 = v23;
      if (v22 != 2)
      {
        if ((BYTE2(v8) - 48) > 9u)
          goto LABEL_33;
        v16 = 10 * v23 + (BYTE2(v8) - 48);
        if (v22 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_6_0();
            if (!v21 & v20)
              goto LABEL_33;
            OUTLINED_FUNCTION_2_1();
            if (!v21)
              goto LABEL_33;
            v16 = v25 + v24;
            if (__OFADD__(v25, v24))
              goto LABEL_33;
            OUTLINED_FUNCTION_5_0();
            if (v21)
              goto LABEL_47;
          }
        }
      }
    }
    else
    {
      if (v8 == 45)
      {
        if (v12)
        {
          if (v12 != 1)
          {
            OUTLINED_FUNCTION_1_2();
            if (!(!v21 & v20))
            {
              if (v18 == 2)
              {
                LOBYTE(v8) = 0;
                v16 = -(uint64_t)v19;
                goto LABEL_47;
              }
              if ((BYTE2(v8) - 48) <= 9u)
              {
                v16 = -10 * v19 - (BYTE2(v8) - 48);
                if (v18 == 3)
                  goto LABEL_46;
                while (1)
                {
                  OUTLINED_FUNCTION_6_0();
                  if (!v21 & v20)
                    break;
                  OUTLINED_FUNCTION_2_1();
                  if (!v21)
                    break;
                  v16 = v31 - v30;
                  if (__OFSUB__(v31, v30))
                    break;
                  OUTLINED_FUNCTION_5_0();
                  if (v21)
                    goto LABEL_47;
                }
              }
            }
          }
LABEL_33:
          v16 = 0;
          LOBYTE(v8) = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
      if (!v12 || (v8 - 48) > 9u)
        goto LABEL_33;
      v16 = (v8 - 48);
      if (v12 != 1)
      {
        OUTLINED_FUNCTION_1_2();
        if (!v21 & v20)
          goto LABEL_33;
        v16 = 10 * (v8 - 48) + v27;
        if (v26 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_6_0();
            if (!v21 & v20)
              goto LABEL_33;
            OUTLINED_FUNCTION_2_1();
            if (!v21)
              goto LABEL_33;
            v16 = v29 + v28;
            if (__OFADD__(v29, v28))
              goto LABEL_33;
            OUTLINED_FUNCTION_5_0();
            if (v21)
              goto LABEL_47;
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v8) = 0;
    goto LABEL_47;
  }
  v16 = (uint64_t)sub_242A588F0(v8, v10, 10);
  LOBYTE(v8) = v32;
LABEL_47:
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return 100;
  else
    return v16;
}

void static RuntimeConfiguration.espressoNetworkCacheSize.getter()
{
  sub_242A58654(&qword_257220520);
}

void sub_242A58654(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_3_0();
}

void static RuntimeConfiguration.espressoNetworkCacheSize.setter(uint64_t a1)
{
  sub_242A586B8(a1, &qword_257220520, &qword_257220DF8);
}

void sub_242A586B8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  *a3 = a1;
  OUTLINED_FUNCTION_3_0();
}

void static RuntimeConfiguration.espressoNetworkCacheSize.modify()
{
  if (qword_257220520 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_1_0();
}

uint64_t RuntimeConfiguration.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RuntimeConfiguration.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t static RuntimeConfiguration.isGPUSupportedByMPSGraph.getter()
{
  return sub_242A58858(&qword_257220508, (uint64_t)&unk_257259930);
}

uint64_t sub_242A587A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t static RuntimeConfiguration.isGPUSupportedByEspresso.getter()
{
  return sub_242A58858(&qword_257220508, (uint64_t)&unk_257259930);
}

uint64_t static RuntimeConfiguration.isCPUSupportedByBNNS.getter()
{
  return sub_242A58858(&qword_257220510, (uint64_t)&unk_257259958);
}

uint64_t static RuntimeConfiguration.isCPUSupportedByEspresso.getter()
{
  return sub_242A58858(&qword_257220510, (uint64_t)&unk_257259958);
}

uint64_t sub_242A58858(_QWORD *a1, uint64_t a2)
{
  _BYTE v4[40];

  if (*a1 != -1)
    swift_once();
  sub_242A587A8(a2, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
  return swift_dynamicCast();
}

uint64_t type metadata accessor for RuntimeConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for RuntimeConfiguration()
{
  return swift_lookUpClassMethod();
}

unsigned __int8 *sub_242A588F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  sub_242C480E0();
  v5 = sub_242C483BC();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_242A58C50();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_242C48D1C();
  }
LABEL_7:
  v11 = sub_242A589D4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_242A589D4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242A58C50()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_242A58CAC();
  v4 = sub_242A58CE0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_242A58CAC()
{
  return sub_242C483C8();
}

uint64_t sub_242A58CE0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_242A58E24(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_242AD1AE8(v9, 0);
      v12 = v11;
      sub_242A58F10(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      sub_242C480E0();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x24BEE4AF8];
    }
    v15 = MEMORY[0x2494EBE50](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2494EBE50);
LABEL_9:
      sub_242C48D1C();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2494EBE50]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_242A58E24(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_242AD1B44(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_242AD1B44(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_242C48368();
    return;
  }
  __break(1u);
}

void sub_242A58F10(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_242AD1B44(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_242C48374();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_242C48D1C();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_242AD1B44(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_242C48350();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_beginAccess();
}

void sub_242A59170()
{
  unsigned __int8 *v0;
  char __dst[88];

  OUTLINED_FUNCTION_93();
  sub_242A62800(v0, __dst);
  sub_242C48C38();
  sub_242C48314();
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_129();
  sub_242C48314();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_156();
  sub_242C48E78();
  sub_242C48314();
  OUTLINED_FUNCTION_90();
  __break(1u);
}

void sub_242A59264()
{
  unsigned __int8 *v0;
  _OWORD __dst[7];

  OUTLINED_FUNCTION_93();
  sub_242A627C4(v0, __dst);
  sub_242C48314();
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_129();
  sub_242C48314();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_156();
  sub_242C48E78();
  OUTLINED_FUNCTION_90();
  __break(1u);
}

void Function.callAsFunction(_:parameters:)(uint64_t a1)
{
  sub_242C480BC();
  Function.callAsFunction(_:parameters:states:)(a1);
}

uint64_t sub_242A593A0()
{
  return swift_bridgeObjectRelease();
}

void Function.callAsFunction(_:parameters:states:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[11];

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v17);
  OUTLINED_FUNCTION_135();
  v5 = v17[10];
  OUTLINED_FUNCTION_91();
  sub_242A5DC30((uint64_t)v17);
  if (v5)
  {
    if (*(_BYTE *)(v5 + 24) == 1 && v3 != 0)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 88))(a1);
      v12 = sub_242A5A890();
      OUTLINED_FUNCTION_4_0();
      sub_242A5B54C(v12);
      OUTLINED_FUNCTION_113();
      v13 = OUTLINED_FUNCTION_112();
      _s14descr25138D269C9IOMappingVMa(v13, v14, v15, v16);
      OUTLINED_FUNCTION_39();
      sub_242C48554();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_133();
    }
    OUTLINED_FUNCTION_135();
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 88))(a1);
  v7 = sub_242A5A890();
  OUTLINED_FUNCTION_4_0();
  sub_242A5B54C(v7);
  v8 = OUTLINED_FUNCTION_112();
  _s14descr25138D269C9IOMappingVMa(v8, v9, v10, v11);
  OUTLINED_FUNCTION_39();
  sub_242C48554();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_144();
}

void sub_242A5A400()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 224) = 0;
  *(_QWORD *)(v0 - 216) = 0xE000000000000000;
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_159();
  OUTLINED_FUNCTION_58();
  sub_242C48314();
  sub_242C48314();
  OUTLINED_FUNCTION_159();
  *(_BYTE *)(v0 - 140) = 9;
  OUTLINED_FUNCTION_59();
  sub_242A59170();
}

uint64_t sub_242A5A5B0(uint64_t a1)
{
  return sub_242A5A890(a1, sub_242AC3194, &unk_257220FE8, &qword_257220FD8);
}

uint64_t sub_242A5A5CC(uint64_t a1)
{
  return sub_242A5AAEC(a1, sub_242AC31B0, &qword_2572210D8, &unk_257220FB0);
}

void sub_242A5A5E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    OUTLINED_FUNCTION_128();
    v3 = a1 + 32;
    do
    {
      v3 += 8;
      sub_242C4877C();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_103();
      OUTLINED_FUNCTION_122();
      sub_242C48D64();
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_8();
}

#error "242A5A6D0: call analysis failed (funcsize=67)"

#error "242A5A838: call analysis failed (funcsize=67)"

uint64_t sub_242A5A874(uint64_t a1)
{
  return sub_242A5A890(a1, sub_242AC3274, &unk_257220FD8, &unk_257220FE8);
}

#error "242A5A8F0: call analysis failed (funcsize=54)"

uint64_t sub_242A5A968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _OWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v9;
  int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC3354();
    v2 = v14;
    v4 = (_OWORD *)(a1 + 56);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v9 = *v4;
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_86();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221020);
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_41();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_81();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3354();
        v2 = v14;
      }
      OUTLINED_FUNCTION_68();
      if (v6)
      {
        OUTLINED_FUNCTION_54();
        sub_242AC3354();
        v2 = v14;
      }
      *(_QWORD *)(v2 + 16) = v5;
      v7 = v2 + 40 * v9;
      *(_DWORD *)(v7 + 32) = v10;
      *(_QWORD *)(v7 + 40) = v11;
      *(_OWORD *)(v7 + 48) = v12;
      *(_QWORD *)(v7 + 64) = v13;
      v4 = (_OWORD *)((char *)v4 + 40);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242A5AAD0(uint64_t a1)
{
  return sub_242A5AAEC(a1, sub_242AC3648, &unk_257220FB0, &qword_2572210D8);
}

#error "242A5AB50: call analysis failed (funcsize=58)"

void sub_242A5ABD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    OUTLINED_FUNCTION_128();
    v3 = a1 + 32;
    do
    {
      v3 += 4;
      sub_242C486BC();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_103();
      OUTLINED_FUNCTION_122();
      sub_242C48D64();
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_8();
}

uint64_t sub_242A5AC38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC38CC();
    v4 = a1 + 32;
    v2 = v8;
    do
    {
      OUTLINED_FUNCTION_73();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_41();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC38CC();
        v2 = v8;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        OUTLINED_FUNCTION_54();
        sub_242AC38CC();
        v2 = v8;
      }
      *(_QWORD *)(v2 + 16) = v5 + 1;
      *(_OWORD *)(v2 + 16 * v5 + 32) = v7;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242A5AD4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC3CCC();
    v2 = v13;
    v4 = (uint64_t *)(a1 + 64);
    do
    {
      v5 = *(v4 - 3);
      v6 = *v4;
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_86();
      OUTLINED_FUNCTION_110();
      OUTLINED_FUNCTION_73();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_41();
      swift_release();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_81();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3CCC();
        v2 = v13;
      }
      OUTLINED_FUNCTION_68();
      if (v7)
      {
        OUTLINED_FUNCTION_54();
        sub_242AC3CCC();
        v2 = v13;
      }
      *(_QWORD *)(v2 + 16) = v5;
      v8 = v2 + 40 * v6;
      *(_QWORD *)(v8 + 32) = v10;
      *(_OWORD *)(v8 + 40) = v11;
      *(_OWORD *)(v8 + 56) = v12;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

#error "242A5AFA0: call analysis failed (funcsize=70)"

void sub_242A5AFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_77();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = v19;
    v27 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC3D3C();
    v22 = v27;
    do
    {
      v23 = *(_QWORD *)(v21 + 48);
      v24 = *(_QWORD *)(v21 + 56);
      v25 = *(_BYTE *)(v21 + 64);
      sub_242C480E0();
      sub_242A625DC(v23, v24, v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F80);
      OUTLINED_FUNCTION_41();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_45();
        sub_242AC3D3C();
        v22 = v27;
      }
      if (*(_QWORD *)(v22 + 16) >= *(_QWORD *)(v22 + 24) >> 1)
      {
        OUTLINED_FUNCTION_54();
        sub_242AC3D3C();
        v22 = v27;
      }
      OUTLINED_FUNCTION_97();
      *(_BYTE *)(v26 + 64) = a19;
      --v20;
    }
    while (v20);
  }
  OUTLINED_FUNCTION_23();
}

void sub_242A5B0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;

  OUTLINED_FUNCTION_79();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = v17;
    v26 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC362C();
    v20 = v26;
    v21 = (uint64_t *)(v19 + 56);
    do
    {
      v22 = *(v21 - 2);
      v23 = *v21;
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_39();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220FA0);
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_81();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC362C();
        v20 = v26;
      }
      OUTLINED_FUNCTION_68();
      if (v24)
      {
        OUTLINED_FUNCTION_54();
        sub_242AC362C();
        v20 = v26;
      }
      v21 += 4;
      *(_QWORD *)(v20 + 16) = v22;
      v25 = (_QWORD *)(v20 + 32 * v23);
      v25[4] = a14;
      v25[5] = a15;
      v25[6] = a16;
      v25[7] = a17;
      --v18;
    }
    while (v18);
  }
  OUTLINED_FUNCTION_24();
}

void sub_242A5B1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_77();
  v20 = v19[2];
  if (v20)
  {
    v21 = v19;
    v27 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC3DC8();
    v22 = v27;
    do
    {
      v23 = v21[6];
      v24 = v21[7];
      v25 = v21[8];
      sub_242C480E0();
      sub_242A62654(v23, v24, v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572210B0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572210B8);
      OUTLINED_FUNCTION_41();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_45();
        sub_242AC3DC8();
        v22 = v27;
      }
      if (*(_QWORD *)(v22 + 16) >= *(_QWORD *)(v22 + 24) >> 1)
      {
        OUTLINED_FUNCTION_54();
        sub_242AC3DC8();
        v22 = v27;
      }
      OUTLINED_FUNCTION_97();
      *(_QWORD *)(v26 + 64) = a19;
      --v20;
    }
    while (v20);
  }
  OUTLINED_FUNCTION_23();
}

void sub_242A5B300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC3E00();
    v3 = v10;
    v4 = a1 + 48;
    do
    {
      sub_242C480E0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221080);
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_41();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3E00();
        v3 = v10;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        OUTLINED_FUNCTION_54();
        sub_242AC3E00();
        v3 = v10;
      }
      v4 += 24;
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 24 * v5;
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v8;
      *(_WORD *)(v6 + 48) = v9;
      --v1;
    }
    while (v1);
  }
  OUTLINED_FUNCTION_124();
}

uint64_t sub_242A5B420(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  _BYTE v10[48];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_21();
    sub_242AC3E38();
    v4 = a1 + 32;
    v2 = v14;
    do
    {
      sub_242A62684(v4, (uint64_t)v10, &qword_257221000);
      OUTLINED_FUNCTION_57();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED0);
      OUTLINED_FUNCTION_41();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3E38();
        v2 = v14;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_242AC3E38();
        v2 = v14;
      }
      *(_QWORD *)(v2 + 16) = v5 + 1;
      v6 = (_OWORD *)(v2 + 48 * v5);
      v7 = v11;
      v8 = v13;
      v6[3] = v12;
      v6[4] = v8;
      v6[2] = v7;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242A5B54C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257227910);
    v1 = sub_242C49010();
  }
  else
  {
    v1 = MEMORY[0x24BEE4B00];
  }
  v4 = v1;
  v2 = sub_242C480E0();
  sub_242A62148(v2, 1, &v4);
  OUTLINED_FUNCTION_4_0();
  return v4;
}

void sub_242A5B5F0(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  type metadata accessor for TensorHandle();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  sub_242BC995C();
  *a2 = v4;
}

uint64_t sub_242A5B64C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_242C48E60();
  if (v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

uint64_t sub_242A5B6D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_242C48D7C();
    v4 = a1 + 48;
    do
    {
      v4 += 24;
      swift_retain();
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_242A5B784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v6 = MEMORY[0x24BEE4AF8];
    sub_242C48D7C();
    v3 = a1 + 48;
    do
    {
      v3 += 24;
      sub_242C480E0();
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      --v1;
    }
    while (v1);
    v4 = v6;
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v4;
}

void sub_242A5B894()
{
  sub_242A5B8B8();
}

void sub_242A5B8A0()
{
  sub_242A5B8B8();
}

void sub_242A5B8AC()
{
  sub_242A5B8B8();
}

void sub_242A5B8B8()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, unint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t, unint64_t);
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_115();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  if ((v2 & 1) == 0)
    goto LABEL_2;
  sub_242C4928C();
  OUTLINED_FUNCTION_86();
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    OUTLINED_FUNCTION_145();
    v10 = MEMORY[0x24BEE4AF8];
  }
  v11 = *(_QWORD *)(v10 + 16);
  swift_release();
  if (__OFSUB__(v3 >> 1, v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (v3 >> 1) - v5)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v1(v9, v7, v5, v3);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass())
    OUTLINED_FUNCTION_145();
LABEL_9:
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242A5B984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[20];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if (!a4 || !a7)
    return MEMORY[0x24BEE4AF8];
  v14 = MEMORY[0x24BEE4AF8];
  if (a8 && a9)
  {
    v29[17] = a11;
    v29[18] = a12;
    v29[14] = a9;
    v29[15] = a10;
    v16 = _s14descr25138D269C9IOMappingVMa(0, a13, a14, a4);
    swift_retain();
    v29[16] = v16;
    sub_242C48668();
    v17 = sub_242C48B84();
    MEMORY[0x2494EDE24](MEMORY[0x24BEE2180], v17);
    sub_242C48428();
    v18 = swift_unknownObjectRelease();
    v30 = v32;
    v31 = v33;
    v19 = MEMORY[0x24BDAC7A8](v18);
    v29[8] = a13;
    v29[9] = a14;
    v29[13] = a14;
    v29[10] = a1;
    MEMORY[0x24BDAC7A8](v19);
    v29[2] = a13;
    v29[3] = a14;
    v29[4] = sub_242A62718;
    v29[5] = v20;
    v21 = sub_242C48FBC();
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572210D8);
    v23 = MEMORY[0x2494EDE24](MEMORY[0x24BEE2FC0], v21);
    v25 = sub_242BD0610((uint64_t)sub_242A62724, (uint64_t)v29, v21, v22, MEMORY[0x24BEE4078], v23, MEMORY[0x24BEE40A8], v24);
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    *((_QWORD *)&v32 + 1) = sub_242C480BC();
    v26 = sub_242A5AAEC(v25, sub_242AC31B0, &qword_2572210D8, &unk_257220FB0);
    v27 = swift_bridgeObjectRelease();
    *(_QWORD *)&v32 = v26;
    sub_242A5CDDC(v27);
    sub_242A5BEB4(v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242BBB980();
  }
  return v14;
}

unint64_t sub_242A5BCD8(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > result)
  {
    v3 = *(_QWORD *)(a2 + 24);
    sub_242C480E0();
    swift_retain();
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_242A5BD40(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = MEMORY[0x24BEE4AF8];
  sub_242AC3274();
  v4 = v21;
  v5 = *(_QWORD *)(a1 + 16);
  sub_242C480E0();
  sub_242C480E0();
  v18 = v5;
  if (v5)
  {
    v6 = 0;
    v7 = (uint64_t *)(a1 + 48);
    do
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      v10 = *(v7 - 2);
      sub_242C480E0();
      swift_retain();
      v11 = a3(&v20, v6, v10, v9, v8);
      v13 = v12;
      swift_release();
      swift_bridgeObjectRelease();
      v14 = v20;
      v21 = v4;
      v15 = *(_QWORD *)(v4 + 16);
      if (v15 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_242AC3274();
        v4 = v21;
      }
      ++v6;
      v7 += 3;
      *(_QWORD *)(v4 + 16) = v15 + 1;
      v16 = (_QWORD *)(v4 + 24 * v15);
      v16[4] = v11;
      v16[5] = v13;
      v16[6] = v14;
    }
    while (v18 != v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_242A5BEB4(uint64_t a1)
{
  sub_242C480E0();
  sub_242C480E0();
  sub_242B64D78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  sub_242A5CDDC();
  return a1;
}

void sub_242A5BF30(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 >= *(_QWORD *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_retain_n();
  sub_242BC995C();
  if (v4 < *(_QWORD *)(a3 + 16))
  {
    v7 = *(_QWORD *)(a3 + 24 * v4 + 48);
    type metadata accessor for TensorHandle();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    swift_retain_n();
    sub_242BC995C();
    swift_retain();
    v9 = sub_242AC4964();
    v11 = v10;
    swift_release();
    swift_release();
    sub_242BC999C();
    swift_release();
    *a4 = v8;
    a4[1] = v9;
    a4[2] = v11;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_242A5C034(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (**v18)(_QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[72];
  uint64_t v27;
  _BYTE v28[64];

  v13 = *a6;
  sub_242A62684(a5 + 168, (uint64_t)v28, (uint64_t *)&unk_257228D70);
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v26);
  swift_release();
  v14 = v27;
  swift_retain();
  sub_242A5DC30((uint64_t)v26);
  type metadata accessor for TensorRepresentation();
  v15 = swift_allocObject();
  v17 = _s14descr25138D269C9OperationCMa(0, *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), v16);
  swift_retain();
  swift_retain();
  v18 = (uint64_t (**)(_QWORD, _QWORD))MEMORY[0x2494EDE24](&unk_242C5B8B0, v17);
  v26[0] = 1;
  v19 = sub_242BCBB20((uint64_t)a6, a2, (uint64_t)v28, 0x100000000, a7, v14, v15, v17, v18);
  v20 = swift_retain();
  v21 = sub_242BC9F84(v20, a5, 0, 0);
  v23 = v22;
  swift_retain();
  swift_unknownObjectRetain();
  sub_242BCA064(v19, v19, (uint64_t)v21, v23);
  swift_unknownObjectRelease();
  type metadata accessor for TensorHandle();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v19;
  swift_retain();
  sub_242C480E0();
  sub_242BC995C();
  swift_release();
  *a1 = v24;
  return a3;
}

void sub_242A5C1F4()
{
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A5C218()
{
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

void sub_242A5C260()
{
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A5C284()
{
  OUTLINED_FUNCTION_96();
  __asm { BR              X10 }
}

uint64_t sub_242A5C2AC()
{
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C2EC()
{
  OUTLINED_FUNCTION_95();
  __asm { BR              X10 }
}

uint64_t sub_242A5C31C()
{
  OUTLINED_FUNCTION_142();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C344()
{
  OUTLINED_FUNCTION_140();
  __asm { BR              X10 }
}

uint64_t sub_242A5C374()
{
  OUTLINED_FUNCTION_142();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C3B0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_242A5C3F4()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5C460()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C4E4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_242A5C520()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5C560()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C5A4()
{
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A5C5C8()
{
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A5C5EC()
{
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A5C628()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C664()
{
  sub_242C49358();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A5C684(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_242A5C6C0()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C748(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_242A5C780()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5C824(uint64_t a1, unsigned __int8 a2)
{
  sub_242ABCCF0(a2);
  sub_242C4817C();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5C860()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5C8A0()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5C8F4()
{
  return sub_242C4817C();
}

uint64_t sub_242A5C910()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5C97C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_242A5C9BC()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5CA10(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_242A5CA4C()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5CAB0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

void sub_242A5CAE0()
{
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A5CB0C()
{
  sub_242C49370();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A5CB30()
{
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

void sub_242A5CB5C()
{
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A5CB80()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5CBC4()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5CC34()
{
  OUTLINED_FUNCTION_96();
  __asm { BR              X10 }
}

uint64_t sub_242A5CC5C()
{
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_242A5CC98()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5CCD4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_242A5CD0C()
{
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_0_4();
}

void sub_242A5CDA4()
{
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A5CDC4()
{
  return sub_242C4817C();
}

#error "242A5CEAC: call analysis failed (funcsize=70)"

void sub_242A5CEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  id v29;

  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_62();
  if (v19)
  {
    OUTLINED_FUNCTION_85();
    OUTLINED_FUNCTION_84();
    while (1)
    {
      v20 = (uint64_t)*(v16 - 2);
      v21 = *v16;
      v22 = *(_QWORD *)(*(_QWORD *)(v14 + 8) + 16);
      swift_bridgeObjectRetain_n();
      v29 = v21;
      if (v22)
      {
        OUTLINED_FUNCTION_28(v20);
        v23 = MEMORY[0x24BEE4AF8];
        if ((v24 & 1) != 0)
          OUTLINED_FUNCTION_22();
      }
      else
      {
        v23 = MEMORY[0x24BEE4AF8];
      }
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_72();
      OUTLINED_FUNCTION_11_0();
      OUTLINED_FUNCTION_44();
      if (v25)
        break;
      OUTLINED_FUNCTION_134();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED8);
      if ((OUTLINED_FUNCTION_30() & 1) != 0)
      {
        OUTLINED_FUNCTION_28(v14);
        OUTLINED_FUNCTION_65();
        if (!v27)
          goto LABEL_22;
        v20 = v26;
      }
      if ((v18 & 1) != 0)
      {
        OUTLINED_FUNCTION_60();
        *(_QWORD *)(v23 + 8 * v20) = v17;
      }
      else
      {
        OUTLINED_FUNCTION_2_2();
        if (v25)
          goto LABEL_21;
        OUTLINED_FUNCTION_48(v28);
      }
      ++v15;
      v14 = a11;
      *(_QWORD *)(a11 + 8) = a14;

      OUTLINED_FUNCTION_49();
      OUTLINED_FUNCTION_4_0();
      v16 += 3;
      OUTLINED_FUNCTION_137();
      if (v27)
      {
        OUTLINED_FUNCTION_3_1();
        return;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_242C492EC();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_9_0();
  }
}

void sub_242A5D034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_62();
  if (v18)
  {
    v19 = v15;
    sub_242C480E0();
    OUTLINED_FUNCTION_84();
    while (1)
    {
      v20 = *(_QWORD *)(v17 - 16);
      OUTLINED_FUNCTION_38();
      swift_bridgeObjectRetain_n();
      if (v14)
      {
        OUTLINED_FUNCTION_28(v20);
        if ((v21 & 1) != 0)
          OUTLINED_FUNCTION_22();
      }
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_31();
      v22 = a14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a14 = *(_QWORD *)(v19 + 8);
      *(_QWORD *)(v19 + 8) = 0x8000000000000000;
      OUTLINED_FUNCTION_28(v20);
      OUTLINED_FUNCTION_44();
      if (v24)
        break;
      OUTLINED_FUNCTION_134();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED8);
      if ((OUTLINED_FUNCTION_30() & 1) != 0)
      {
        OUTLINED_FUNCTION_28(v20);
        OUTLINED_FUNCTION_65();
        if (!v26)
          goto LABEL_21;
        v19 = v25;
      }
      if ((v20 & 1) != 0)
      {
        OUTLINED_FUNCTION_60();
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v19) = v22;
      }
      else
      {
        OUTLINED_FUNCTION_2_2();
        if (v24)
          goto LABEL_20;
        OUTLINED_FUNCTION_48(v27);
      }
      ++v16;
      v17 += 32;
      v19 = a11;
      v14 = *(_QWORD *)(a11 + 8);
      *(_QWORD *)(a11 + 8) = a14;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_49();
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_137();
      if (v26)
      {
        OUTLINED_FUNCTION_3_1();
        return;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    sub_242C492EC();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_9_0();
  }
}

void sub_242A5D190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_37();
  v38 = *(_QWORD *)(*(_QWORD *)v15 + 16);
  if (v38)
  {
    v17 = 0;
    v37 = v15;
    for (i = OUTLINED_FUNCTION_85() + 64; ; i += 40)
    {
      v20 = *(_QWORD *)(i - 32);
      v19 = *(_QWORD *)(i - 24);
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_86();
      OUTLINED_FUNCTION_110();
      if (v14)
      {
        OUTLINED_FUNCTION_28(v20);
        if ((v21 & 1) != 0)
          OUTLINED_FUNCTION_22();
      }
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_31();
      v22 = a14;
      swift_isUniquelyReferenced_nonNull_native();
      v23 = *(_QWORD *)(v16 + 8);
      a14 = v23;
      *(_QWORD *)(v16 + 8) = 0x8000000000000000;
      v24 = v20;
      v25 = OUTLINED_FUNCTION_28(v20);
      if (__OFADD__(*(_QWORD *)(v23 + 16), (v26 & 1) == 0))
        break;
      v27 = v25;
      v28 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED8);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v29 = OUTLINED_FUNCTION_28(v24);
        if ((v28 & 1) != (v30 & 1))
          goto LABEL_19;
        v27 = v29;
      }
      if ((v28 & 1) != 0)
      {
        v31 = *(_QWORD *)(v23 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v31 + 8 * v27) = v22;
      }
      else
      {
        OUTLINED_FUNCTION_160(v23 + 8 * (v27 >> 6));
        v33 = (uint64_t *)(v32 + 16 * v27);
        *v33 = v24;
        v33[1] = v19;
        *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v27) = v22;
        v34 = *(_QWORD *)(v23 + 16);
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_18;
        OUTLINED_FUNCTION_48(v36);
      }
      ++v17;
      v16 = v37;
      v14 = *(_QWORD *)(v37 + 8);
      *(_QWORD *)(v37 + 8) = v23;
      swift_release_n();
      swift_unknownObjectRelease_n();
      OUTLINED_FUNCTION_49();
      OUTLINED_FUNCTION_4_0();
      if (v38 == v17)
      {
        OUTLINED_FUNCTION_3_1();
        return;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    sub_242C492EC();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_9_0();
  }
}

#error "242A5D43C: call analysis failed (funcsize=70)"

void sub_242A5D488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_62();
  if (v19)
  {
    v20 = 0;
    for (i = OUTLINED_FUNCTION_85() + 56; ; i += 32)
    {
      v22 = *(_QWORD *)(i - 24);
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_39();
      if (v14)
      {
        OUTLINED_FUNCTION_28(v22);
        v23 = MEMORY[0x24BEE4AF8];
        if ((v24 & 1) != 0)
          OUTLINED_FUNCTION_22();
      }
      else
      {
        v23 = MEMORY[0x24BEE4AF8];
      }
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_72();
      OUTLINED_FUNCTION_11_0();
      OUTLINED_FUNCTION_44();
      if (v25)
        break;
      OUTLINED_FUNCTION_134();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED8);
      if ((OUTLINED_FUNCTION_30() & 1) != 0)
      {
        OUTLINED_FUNCTION_28(v16);
        OUTLINED_FUNCTION_65();
        if (!v27)
          goto LABEL_22;
        v22 = v26;
      }
      if ((v18 & 1) != 0)
      {
        OUTLINED_FUNCTION_60();
        *(_QWORD *)(v23 + 8 * v22) = v17;
      }
      else
      {
        OUTLINED_FUNCTION_2_2();
        if (v25)
          goto LABEL_21;
        OUTLINED_FUNCTION_48(v28);
      }
      ++v20;
      v16 = v15;
      v14 = *(_QWORD *)(v15 + 8);
      *(_QWORD *)(v15 + 8) = a14;
      OUTLINED_FUNCTION_49();
      OUTLINED_FUNCTION_49();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_137();
      if (v27)
      {
        OUTLINED_FUNCTION_3_1();
        return;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_242C492EC();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_9_0();
  }
}

void sub_242A5D5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  v27 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v27)
  {
    v2 = 0;
    v3 = (char *)(OUTLINED_FUNCTION_85() + 64);
    while (1)
    {
      v5 = *((_QWORD *)v3 - 4);
      v4 = *((_QWORD *)v3 - 3);
      v6 = *((_QWORD *)v3 - 2);
      v7 = *((_QWORD *)v3 - 1);
      v8 = *v3;
      v9 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 16);
      OUTLINED_FUNCTION_33();
      sub_242A625DC(v6, v7, v8);
      OUTLINED_FUNCTION_33();
      sub_242A625DC(v6, v7, v8);
      OUTLINED_FUNCTION_33();
      sub_242A625DC(v6, v7, v8);
      if (v9)
      {
        OUTLINED_FUNCTION_106(v5);
        v10 = MEMORY[0x24BEE4AF8];
        if ((v11 & 1) != 0)
          OUTLINED_FUNCTION_22();
      }
      else
      {
        v10 = MEMORY[0x24BEE4AF8];
      }
      v29 = v7;
      v30 = v6;
      v28 = v8;
      sub_242A62618(v6, v7, v8);
      OUTLINED_FUNCTION_47();
      sub_242B64CF8(v2);
      v12 = v10;
      swift_isUniquelyReferenced_nonNull_native();
      v13 = *(_QWORD *)(v1 + 8);
      v14 = v1;
      *(_QWORD *)(v1 + 8) = 0x8000000000000000;
      v15 = OUTLINED_FUNCTION_106(v5);
      if (__OFADD__(*(_QWORD *)(v13 + 16), (v16 & 1) == 0))
        break;
      v17 = v15;
      v18 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED8);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v19 = OUTLINED_FUNCTION_106(v5);
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_20;
        v17 = v19;
      }
      if ((v18 & 1) != 0)
      {
        v21 = *(_QWORD *)(v13 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v21 + 8 * v17) = v12;
      }
      else
      {
        OUTLINED_FUNCTION_160(v13 + 8 * (v17 >> 6));
        v23 = (uint64_t *)(v22 + 16 * v17);
        *v23 = v5;
        v23[1] = v4;
        *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v17) = v12;
        v24 = *(_QWORD *)(v13 + 16);
        v25 = __OFADD__(v24, 1);
        v26 = v24 + 1;
        if (v25)
          goto LABEL_19;
        *(_QWORD *)(v13 + 16) = v26;
        OUTLINED_FUNCTION_33();
      }
      ++v2;
      v3 += 40;
      v1 = v14;
      *(_QWORD *)(v14 + 8) = v13;
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_47();
      sub_242A62618(v30, v29, v28);
      sub_242A62618(v30, v29, v28);
      if (v27 == v2)
      {
        OUTLINED_FUNCTION_124();
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    sub_242C492EC();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_124();
  }
}

uint64_t sub_242A5D824(uint64_t a1)
{
  if (a1 < 16)
    return 0;
  sub_242C48C38();
  return 0;
}

void sub_242A5D868()
{
  sub_242A5D8EC();
}

void sub_242A5D874()
{
  sub_242A5DA10();
}

void sub_242A5D898()
{
  sub_242A5DAE8();
}

void sub_242A5D8BC()
{
  sub_242A5DAE8();
}

void sub_242A5D8E0()
{
  sub_242A5D8EC();
}

void sub_242A5D8EC()
{
  void (*v0)(uint64_t, uint64_t, char *);
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = OUTLINED_FUNCTION_119();
  *v1 = v2;
  if (!(_DWORD)v3)
  {
    sub_242A5DFD0(v3, *(_QWORD *)(v2 + 16) + 1, 1, v2, &qword_257221120, v0);
    *v1 = v4;
  }
  OUTLINED_FUNCTION_9();
}

void sub_242A5D938()
{
  sub_242A5DAE8();
}

void sub_242A5D95C()
{
  sub_242A5DA10();
}

void sub_242A5D980()
{
  sub_242A5DB2C();
}

void sub_242A5D98C()
{
  sub_242A5DB2C();
}

void sub_242A5D998()
{
  sub_242A5DA10();
}

void sub_242A5D9BC()
{
  sub_242A5DB2C();
}

void sub_242A5D9C8()
{
  sub_242A5DAE8();
}

void sub_242A5D9EC()
{
  sub_242A5DA10();
}

void sub_242A5DA10()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_75();
  *v0 = v1;
  if (!v2)
  {
    OUTLINED_FUNCTION_89();
    sub_242A5DF18();
    *v0 = v3;
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5DA4C()
{
  sub_242A5DAE8();
}

void sub_242A5DA70()
{
  sub_242A5DAE8();
}

void sub_242A5DA94()
{
  sub_242A5DB2C();
}

void sub_242A5DAA0()
{
  sub_242A5DAE8();
}

void sub_242A5DAC4()
{
  sub_242A5DAE8();
}

void sub_242A5DAE8()
{
  uint64_t (*v0)(void);
  _QWORD *v1;
  uint64_t v2;
  int v3;

  v3 = OUTLINED_FUNCTION_75();
  *v1 = v2;
  if (!v3)
  {
    OUTLINED_FUNCTION_89();
    *v1 = v0();
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5DB20()
{
  sub_242A5DB2C();
}

void sub_242A5DB2C()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_119();
  *v1 = v2;
  if (!(_DWORD)v3)
    *v1 = v0(v3, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  OUTLINED_FUNCTION_9();
}

void sub_242A5DB6C()
{
  sub_242A5DBD0();
}

void sub_242A5DB78()
{
  sub_242A5DD74();
}

void sub_242A5DBA0()
{
  sub_242A5DE44();
}

void sub_242A5DBC4()
{
  sub_242A5DBD0();
}

void sub_242A5DBD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, char *);
  unint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_148();
  if (!(v6 ^ v7 | v5))
  {
    sub_242A5DFD0(v4 > 1, v1, 1, v2, &qword_257221120, v3);
    *v0 = v8;
  }
}

void sub_242A5DC0C()
{
  sub_242A5DE44();
}

uint64_t sub_242A5DC30(uint64_t a1)
{
  destroy for Context(a1);
  return a1;
}

void sub_242A5DC64()
{
  sub_242A5DE90();
}

void sub_242A5DC70()
{
  sub_242A5DE44();
}

void sub_242A5DC94()
{
  sub_242A5DD74();
}

void sub_242A5DCB8()
{
  sub_242A5DE90();
}

void sub_242A5DCC4()
{
  sub_242A5DE90();
}

void sub_242A5DCD0()
{
  sub_242A5DD74();
}

uint64_t sub_242A5DCF4(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_242C485A8();
  return result;
}

void sub_242A5DD20()
{
  sub_242A5DE90();
}

void sub_242A5DD2C()
{
  sub_242A5DE44();
}

void sub_242A5DD50()
{
  sub_242A5DD74();
}

void sub_242A5DD74()
{
  _QWORD *v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_148();
  if (!(v2 ^ v3 | v1))
  {
    sub_242A5DF18();
    *v0 = v4;
  }
}

void sub_242A5DDB4()
{
  sub_242A5DE44();
}

void sub_242A5DDD8()
{
  sub_242A5DE44();
}

void sub_242A5DDFC()
{
  sub_242A5DE44();
}

void sub_242A5DE20()
{
  sub_242A5DE44();
}

void sub_242A5DE44()
{
  _QWORD *v0;
  uint64_t (*v1)(BOOL);
  unint64_t v2;
  char v3;
  char v4;
  char v5;

  OUTLINED_FUNCTION_149();
  if (!(v4 ^ v5 | v3))
    *v0 = v1(v2 > 1);
}

void sub_242A5DE84()
{
  sub_242A5DE90();
}

void sub_242A5DE90()
{
  _QWORD *v0;
  uint64_t (*v1)(BOOL);
  unint64_t v2;
  char v3;
  char v4;
  char v5;

  OUTLINED_FUNCTION_149();
  if (!(v4 ^ v5 | v3))
    *v0 = v1(v2 > 1);
}

void sub_242A5DEC4()
{
  sub_242A5E0D0();
}

void sub_242A5DEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_242A5DFD0(a1, a2, a3, a4, &qword_257221120, (void (*)(uint64_t, uint64_t, char *))sub_242C39C70);
}

void sub_242A5DEF4()
{
  sub_242A5DF18();
}

void sub_242A5DF18()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_64();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_26();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_111();
  if (v3)
  {
    OUTLINED_FUNCTION_20(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    v7 = _swift_stdlib_malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * ((uint64_t)(v7 - 32) / 16);
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_98();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_55(v7, v8, (uint64_t)(v12 + 4));
  }
  OUTLINED_FUNCTION_12_0();
}

void sub_242A5DFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_242A5DFD0(a1, a2, a3, a4, &qword_257221120, (void (*)(uint64_t, uint64_t, char *))sub_242BC197C);
}

void sub_242A5DFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, char *))
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  size_t v15;
  char *v16;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_26();
      if (v10)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (v13)
  {
    OUTLINED_FUNCTION_20(a1, a2, a3, a4, a5);
    v14 = (char *)OUTLINED_FUNCTION_2_0();
    v15 = _swift_stdlib_malloc_size(v14);
    *((_QWORD *)v14 + 2) = v12;
    *((_QWORD *)v14 + 3) = 2 * ((uint64_t)(v15 - 32) / 8);
  }
  else
  {
    v14 = (char *)MEMORY[0x24BEE4AF8];
  }
  v16 = v14 + 32;
  if ((v8 & 1) != 0)
  {
    a6(a4 + 32, v12, v16);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    sub_242A60164(0, v12, v16, a4);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5E098()
{
  sub_242A5E940();
}

void sub_242A5E0B4()
{
  sub_242A5E0D0();
}

void sub_242A5E0D0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5E170()
{
  sub_242A5DF18();
}

void sub_242A5E194()
{
  sub_242A5F1C4();
}

void sub_242A5E1B0()
{
  sub_242A5E2B4();
}

void sub_242A5E1D4()
{
  sub_242A5E1F0();
}

void sub_242A5E1F0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5E290()
{
  sub_242A5E2B4();
}

void sub_242A5E2B4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_64();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_26();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_111();
  if (v3)
  {
    OUTLINED_FUNCTION_20(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    v7 = _swift_stdlib_malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * ((uint64_t)(v7 - 32) / 24);
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_98();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_55(v7, v8, (uint64_t)(v12 + 4));
  }
  OUTLINED_FUNCTION_12_0();
}

void sub_242A5E358()
{
  sub_242A5E2B4();
}

void sub_242A5E37C()
{
  sub_242A5E2B4();
}

void sub_242A5E3A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220F88);
    v6 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_27(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_109();
    sub_242BC1BF8(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_67();
    sub_242A5F67C(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5E440()
{
  sub_242A5F090();
}

void sub_242A5E45C()
{
  sub_242A5E478();
}

void sub_242A5E478()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_12_0();
}

void sub_242A5E518()
{
  sub_242A5DF18();
}

void sub_242A5E53C()
{
  sub_242A5F090();
}

void sub_242A5E558()
{
  sub_242A5F1C4();
}

void sub_242A5E574()
{
  sub_242A5E0D0();
}

void sub_242A5E590()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221060);
    v6 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_27(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_109();
    sub_242BC1B40(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_67();
    sub_242A5FCA0(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5E630()
{
  sub_242A5DF18();
}

void sub_242A5E654()
{
  sub_242A5E848();
}

char *sub_242A5E678(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221010);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_242BC1D10((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_242A5FE48(0, v8, v12, a4);
  }
  return v10;
}

void sub_242A5E764()
{
  sub_242A5E780();
}

void sub_242A5E780()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 8);
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_147();
    sub_242A6076C();
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5E824()
{
  sub_242A5E848();
}

void sub_242A5E848()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_64();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_26();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_111();
  if (v3)
  {
    OUTLINED_FUNCTION_20(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    v7 = _swift_stdlib_malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * ((uint64_t)(v7 - 32) / 32);
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_98();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_55(v7, v8, (uint64_t)(v12 + 4));
  }
  OUTLINED_FUNCTION_12_0();
}

void sub_242A5E8EC()
{
  sub_242A5E2B4();
}

void sub_242A5E910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_242A5DFD0(a1, a2, a3, a4, &qword_257221140, (void (*)(uint64_t, uint64_t, char *))sub_242BC197C);
}

void sub_242A5E924()
{
  sub_242A5E940();
}

void sub_242A5E940()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_10_0();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_26();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v3)
  {
    OUTLINED_FUNCTION_20(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    v7 = _swift_stdlib_malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * v7 - 64;
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v7, v8, (uint64_t)(v12 + 4));
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5E9D8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2572298A0);
    v6 = (_QWORD *)swift_allocObject();
    OUTLINED_FUNCTION_27(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_109();
    sub_242BC1D64(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_67();
    sub_242A60068(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5EA7C()
{
  sub_242A5E1F0();
}

void sub_242A5EA98()
{
  sub_242A5DF18();
}

uint64_t sub_242A5EABC()
{
  return sub_242A5EEE4();
}

void sub_242A5EAD8()
{
  sub_242A5EAF4();
}

void sub_242A5EAF4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5EB94()
{
  sub_242A5EAF4();
}

void sub_242A5EBB0()
{
  sub_242A5E2B4();
}

void sub_242A5EBD4()
{
  sub_242A5E848();
}

void sub_242A5EBF8()
{
  sub_242A5EAF4();
}

void sub_242A5EC14()
{
  sub_242A5E780();
}

void sub_242A5EC30()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220F00);
    v6 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_27(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_109();
    sub_242BC1E54(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_67();
    sub_242A60820(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5ECD0()
{
  sub_242A5EAF4();
}

void sub_242A5ECEC()
{
  sub_242A5E848();
}

void sub_242A5ED10()
{
  sub_242A5ED48();
}

void sub_242A5ED2C()
{
  sub_242A5ED48();
}

void sub_242A5ED48()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 4);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5EDE8()
{
  sub_242A5EAF4();
}

void sub_242A5EE04()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221100);
    v6 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_27(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_109();
    sub_242BC2034(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_67();
    sub_242A60C34(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_7_0();
}

void sub_242A5EEA4()
{
  sub_242A5E2B4();
}

uint64_t sub_242A5EEC8()
{
  return sub_242A5EEE4();
}

uint64_t sub_242A5EEE4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  void (*v2)(uint64_t, uint64_t, char *);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  size_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t result;

  OUTLINED_FUNCTION_10_0();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_26();
      if (v10)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  else
  {
    v9 = v5;
  }
  v12 = *(_QWORD *)(v0 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v9;
  if (!v13)
  {
    v17 = (char *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_20(v4, v5, v6, v7, v8);
  v14 = *(_QWORD *)(v1(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = (char *)swift_allocObject();
  v18 = _swift_stdlib_malloc_size(v17);
  if (!v15 || (v18 - v16 == 0x8000000000000000 ? (v19 = v15 == -1) : (v19 = 0), v19))
  {
LABEL_23:
    OUTLINED_FUNCTION_1_3();
    result = sub_242C48F50();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_63((uint64_t)(v18 - v16) / v15);
LABEL_18:
  v20 = *(unsigned __int8 *)(*(_QWORD *)(v1(0) - 8) + 80);
  v21 = (v20 + 32) & ~v20;
  if ((v3 & 1) != 0)
  {
    v2(v0 + v21, v12, &v17[v21]);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v22 = OUTLINED_FUNCTION_147();
    sub_242A60D30(v22, v23, v24, v25, v26);
  }
  return (uint64_t)v17;
}

void sub_242A5F074()
{
  sub_242A5F090();
}

void sub_242A5F090()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_12_0();
}

void sub_242A5F130()
{
  sub_242A5E478();
}

void sub_242A5F14C()
{
  sub_242A5E2B4();
}

void sub_242A5F170()
{
  sub_242A5E940();
}

void sub_242A5F18C()
{
  sub_242A5E0D0();
}

void sub_242A5F1A8()
{
  sub_242A5F1C4();
}

void sub_242A5F1C4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_10_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v2)
  {
    OUTLINED_FUNCTION_20(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_2_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    OUTLINED_FUNCTION_14(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242A5F264(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220EC0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5F378(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5F46C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5F588(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5F67C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 240 * a1 + 32;
    v6 = a3 + 240 * v4;
    if (v5 >= v6 || v5 + 240 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5F77C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5F878(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5F974(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221020);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5FA90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5FB8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221050);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A5FCA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242A5FDA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  v5 = a4 + 16 * a1 + 32;
  if (v5 >= a3 + 16 * v4 || v5 + 16 * v4 <= a3)
  {
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_3_0();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

char *sub_242A5FE48(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + (a1 << 6) + 32);
    v6 = &__dst[64 * v4];
    if (v5 >= v6 || &v5[64 * v4] <= __dst)
    {
      memcpy(__dst, v5, v4 << 6);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242A5FF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  BOOL v9;

  OUTLINED_FUNCTION_154();
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 - v0 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_66();
  if (v8)
    v9 = 0;
  else
    v9 = v7 > v4;
  if (!v9)
  {
    OUTLINED_FUNCTION_20(v2, v3, v4, v5, v6);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_18();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

void sub_242A5FFD4(uint64_t a1, uint64_t a2)
{
  const void *v2;
  void *v3;
  size_t v4;
  unint64_t v5;
  char v6;
  BOOL v7;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_100();
  if (v6)
    v7 = 0;
  else
    v7 = v5 > (unint64_t)v3;
  if (!v7)
  {
    OUTLINED_FUNCTION_101(v3, v2, v4);
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_3_0();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

uint64_t sub_242A60068(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 144 * a1 + 32;
    v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242A60164(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 8 * a1 + 32);
  if (v5 >= &a3[8 * v4] || &v5[8 * v4] <= a3)
  {
    OUTLINED_FUNCTION_101(a3, v5, 8 * v4);
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_3_0();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

uint64_t sub_242A60210(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242A60324()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_154();
  v5 = v1 - v0;
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  v6 = v3 + 16 * v0 + 32;
  if (v6 >= v2 + 16 * v5 || v6 + 16 * v5 <= v2)
  {
    OUTLINED_FUNCTION_20(v0, v1, v2, v3, v4);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_18();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

uint64_t sub_242A603D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

char *sub_242A604CC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242A605BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  BOOL v9;

  OUTLINED_FUNCTION_154();
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 - v0 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_88();
  if (v8)
    v9 = 0;
  else
    v9 = v7 > v4;
  if (!v9)
  {
    OUTLINED_FUNCTION_20(v2, v3, v4, v5, v6);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_18();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

uint64_t sub_242A60658(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F10);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242A6076C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_154();
  v5 = v1 - v0;
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  v6 = v3 + 8 * v0 + 32;
  if (v6 >= v2 + 8 * v5 || v6 + 8 * v5 <= v2)
  {
    OUTLINED_FUNCTION_20(v0, v1, v2, v3, v4);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_18();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

char *sub_242A60820(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 176 * a1 + 32);
    v6 = &__dst[176 * v4];
    if (v5 >= v6 || &v5[176 * v4] <= __dst)
    {
      memcpy(__dst, v5, 176 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A6091C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F50);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

char *sub_242A60A30(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A60B20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572210F8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A60C34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A60D30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_4_0();
    return v14;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242A60E1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572210B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A60F38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221080);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

void sub_242A61054(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  if (v5 >= a3 + 24 * v4 || v5 + 24 * v4 <= a3)
  {
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_3_0();
    return;
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15();
LABEL_11:
  OUTLINED_FUNCTION_13();
  __break(1u);
}

char *sub_242A61104(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_242C4901C();
  __break(1u);
  return result;
}

uint64_t sub_242A611F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221000);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242C4901C();
  __break(1u);
  return result;
}

unint64_t sub_242A61310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_76();
  v4 = OUTLINED_FUNCTION_78();
  return sub_242A616A4(a1, a2, v4);
}

unint64_t sub_242A6135C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_242C48A10();
  return sub_242A61784(a1, v2);
}

unint64_t sub_242A6138C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_34();
  v6 = OUTLINED_FUNCTION_78();
  return sub_242A6188C(a1, a2, a3, v6);
}

unint64_t sub_242A613F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_120();
  return sub_242A620AC(v0, v1);
}

unint64_t sub_242A6141C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_151();
  sub_242C4934C();
  sub_242C49358();
  v6 = OUTLINED_FUNCTION_78();
  return sub_242A6195C(a1, a2, a3, v6);
}

unint64_t sub_242A61490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_150();
  v6 = OUTLINED_FUNCTION_78();
  return sub_242A619E8(a1, a2, a3, v6);
}

unint64_t sub_242A614F0(uint64_t a1)
{
  uint64_t v2;

  sub_242C48EB4();
  v2 = sub_242C48164();
  return sub_242A61A6C(a1, v2);
}

unint64_t sub_242A61540(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;

  OUTLINED_FUNCTION_40();
  if (a2 >> 62)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_139();
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_153();
    if (a2 >> 62 == 1)
    {
      OUTLINED_FUNCTION_130();
      OUTLINED_FUNCTION_136();
    }
    else
    {
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_150();
      OUTLINED_FUNCTION_130();
    }
  }
  else
  {
    sub_242B89308();
    sub_242C4934C();
  }
  v6 = OUTLINED_FUNCTION_78();
  return sub_242A61B94(a1, a2, a3, v6);
}

unint64_t sub_242A61604(uint64_t *a1)
{
  uint64_t v2;
  _BYTE v4[72];

  OUTLINED_FUNCTION_40();
  sub_242BB4D1C((uint64_t)v4);
  v2 = OUTLINED_FUNCTION_78();
  return sub_242A61FE8(a1, v2);
}

unint64_t sub_242A61650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_34();
  v4 = OUTLINED_FUNCTION_78();
  return sub_242A616A4(a1, a2, v4);
}

unint64_t sub_242A616A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_242C4925C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_242C4925C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_242A61784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_242A62558();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_242C48A1C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_242C48A1C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_242A6188C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    do
    {
      v13 = v12 + 24 * v7;
      if (*(_DWORD *)v13 == a1)
      {
        v14 = *(_QWORD *)(v13 + 8) == a2 && *(_QWORD *)(v13 + 16) == a3;
        if (v14 || (sub_242C4925C() & 1) != 0)
          break;
      }
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_242A6195C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  BOOL v14;

  v6 = -1 << *(_BYTE *)(v4 + 32);
  result = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v8 = ~v6;
    do
    {
      v9 = *(_QWORD *)(v4 + 48) + 24 * result;
      v10 = *(_QWORD *)v9;
      v11 = *(_QWORD *)(v9 + 8);
      v12 = *(_BYTE *)(v9 + 16);
      v14 = v10 != a1 || v11 != a2;
      if (((v14 | (v12 ^ a3)) & 1) == 0)
        break;
      result = (result + 1) & v8;
    }
    while (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_242A619E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;

  v6 = -1 << *(_BYTE *)(v4 + 32);
  result = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v8 = ~v6;
    v9 = *(_QWORD *)(v4 + 48);
    do
    {
      if (*(_QWORD *)(v9 + 24 * result) == a1 && *(_QWORD *)(v9 + 24 * result + 16) == a3)
        break;
      result = (result + 1) & v8;
    }
    while (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_242A61A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_242C48EB4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_242C48200();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_242A61B94(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, unint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, unint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  unint64_t v42;
  uint64_t v45;
  uint64_t v46;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v5 = v4;
  v6 = v4 + 64;
  v7 = -1 << *(_BYTE *)(v4 + 32);
  v8 = a4 & ~v7;
  if (((*(_QWORD *)(v4 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = a3;
    v10 = a2;
    v11 = a1;
    v12 = ~v7;
    v51 = ~v7;
    v52 = a2 & 0xC000000000000000;
    v49 = a2 & 0x3FFFFFFFFFFFFFFFLL;
    v50 = a2 >> 62;
    v45 = v6;
    v46 = v5;
    do
    {
      v13 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 24 * v8);
      v14 = *v13;
      v15 = v13[1];
      if (v15 >> 62)
      {
        v16 = v13[2];
        if (v15 >> 62 == 1)
        {
          if (v52 == 0x4000000000000000)
          {
            ObjectType = swift_getObjectType();
            v18 = *(uint64_t (**)(uint64_t, unint64_t))(v15 + 16);
            sub_242A625B8(v14, v15);
            sub_242A625B8(v14, v15);
            sub_242A625B8(v11, v10);
            v19 = v9;
            LODWORD(v18) = v18(ObjectType, v15 & 0x3FFFFFFFFFFFFFFFLL);
            v21 = v20;
            v23 = v22;
            v24 = swift_getObjectType();
            if ((_DWORD)v18 != (*(unsigned int (**)(uint64_t))(v49 + 16))(v24))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v42 = a2;
              sub_242A62594(v11, a2);
              sub_242A62594(v14, v15);
LABEL_27:
              v9 = v19;
              v10 = v42;
              v6 = v45;
              v5 = v46;
              sub_242A62594(v14, v15);
              v12 = v51;
              goto LABEL_28;
            }
            if (v21 == v25 && v23 == v26)
            {
              swift_bridgeObjectRelease_n();
              sub_242A62594(a1, a2);
              sub_242A62594(v14, v15);
              sub_242A62594(v14, v15);
              return v8;
            }
            v28 = sub_242C4925C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v11 = a1;
            v10 = a2;
            v9 = a3;
            sub_242A62594(a1, a2);
            sub_242A62594(v14, v15);
            sub_242A62594(v14, v15);
            v6 = v45;
            v5 = v46;
            v12 = v51;
            if ((v28 & 1) != 0)
              return v8;
          }
        }
        else if (v52 == 0x8000000000000000)
        {
          v31 = swift_getObjectType();
          v32 = *(uint64_t (**)(uint64_t, unint64_t))(v15 + 16);
          sub_242A625B8(v14, v15);
          sub_242A625B8(v11, v10);
          v19 = v9;
          LODWORD(v31) = v32(v31, v15 & 0x3FFFFFFFFFFFFFFFLL);
          v34 = v33;
          v36 = v35;
          v37 = swift_getObjectType();
          if ((_DWORD)v31 != (*(unsigned int (**)(uint64_t))(v49 + 16))(v37))
          {
            v42 = a2;
            sub_242A62594(v11, a2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
          if (v34 == v38 && v36 == v39)
          {
            v11 = a1;
            v10 = a2;
            v9 = a3;
            sub_242A62594(a1, a2);
            swift_bridgeObjectRelease_n();
            sub_242A62594(v14, v15);
            v6 = v45;
            v5 = v46;
            v12 = v51;
            if (v16 == a3)
              return v8;
          }
          else
          {
            v41 = sub_242C4925C();
            v11 = a1;
            v10 = a2;
            sub_242A62594(a1, a2);
            swift_bridgeObjectRelease();
            v9 = a3;
            swift_bridgeObjectRelease();
            sub_242A62594(v14, v15);
            v6 = v45;
            v5 = v46;
            v12 = v51;
            if ((v41 & 1) != 0 && v16 == a3)
              return v8;
          }
        }
      }
      else if (!v50)
      {
        v29 = sub_242B89308();
        v30 = sub_242B89308();
        v12 = v51;
        v9 = a3;
        if (v29 == v30)
          return v8;
      }
LABEL_28:
      v8 = (v8 + 1) & v12;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_242A61FE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  BOOL v7;
  uint64_t v9[11];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_242A624E8(*(_QWORD *)(v2 + 48) + 88 * v4, (uint64_t)v9);
      v7 = sub_242BADB20(v9, a1);
      sub_242A62524((uint64_t)v9);
      if (v7)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_242A620AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void sub_242A62148(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  id v25;

  v4 = *(_QWORD *)(a1 + 16);
  sub_242C480E0();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = 0;
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    if (v5 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_242C492EC();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *(v6 - 1);
    v7 = *v6;
    v9 = *(v6 - 2);
    sub_242C480E0();
    swift_retain();
    if (!v8)
      goto LABEL_18;
    v10 = (_QWORD *)*a3;
    v12 = sub_242A61310(v9, v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221178);
      sub_242C48F08();
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v20 = (uint64_t *)(v19[6] + 16 * v12);
    *v20 = v9;
    v20[1] = v8;
    *(_QWORD *)(v19[7] + 8 * v12) = v7;
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_22;
    ++v5;
    v19[2] = v23;
    v6 += 3;
    a2 = 1;
    if (v4 == v5)
      goto LABEL_18;
  }
  sub_242B182AC(v15, a2 & 1);
  v17 = sub_242A61310(v9, v8);
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_23;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v24 = (void *)swift_allocError();
  swift_willThrow();
  v25 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_242C48C38();
  sub_242C48314();
  sub_242C48E78();
  sub_242C48314();
  sub_242C48F5C();
  __break(1u);
}

uint64_t sub_242A62434()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242A624A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242A5B984(a1, a2, v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11], v2[12], v2[13], v2[2], v2[3]);
}

uint64_t sub_242A624DC(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_242A5C034(a1, a2, a3, a4, a5, *(uint64_t **)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_242A624E8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LazyTensorFunction.Key(a2, a1);
  return a2;
}

uint64_t sub_242A62524(uint64_t a1)
{
  destroy for LazyTensorFunction.Key(a1);
  return a1;
}

unint64_t sub_242A62558()
{
  unint64_t result;

  result = qword_257220F18;
  if (!qword_257220F18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257220F18);
  }
  return result;
}

uint64_t sub_242A62594(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t result;

  v2 = a2 >> 62;
  if (a2 >> 62 == 2 || (_DWORD)v2 == 1)
    return swift_unknownObjectRelease();
  if (!(_DWORD)v2)
    return swift_release();
  return result;
}

uint64_t sub_242A625B8(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t result;

  v2 = a2 >> 62;
  if (a2 >> 62 == 2 || (_DWORD)v2 == 1)
    return swift_unknownObjectRetain();
  if (!(_DWORD)v2)
    return swift_retain();
  return result;
}

uint64_t sub_242A625DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 4:
    case 5:
    case 6:
    case 7:
      result = sub_242C480E0();
      break;
    case 8:
      result = swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_242A62618(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 4:
    case 5:
    case 6:
    case 7:
      result = swift_bridgeObjectRelease();
      break;
    case 8:
      result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_242A62654(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x2000000000000000) == 0)
    return sub_242A62660(a1, a2, a3);
  return a1;
}

uint64_t sub_242A62660(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 62 == 2)
    return swift_retain();
  if ((a3 >> 62) <= 1)
    return sub_242C480E0();
  return result;
}

uint64_t sub_242A62684(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_242A626C8(uint64_t *a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v4 = *a1;
  result = a2(&v4);
  if (v2)
    return swift_allocError();
  return result;
}

unint64_t sub_242A62718(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A5BCD8(a1, a2, *(_QWORD *)(v2 + 32));
}

uint64_t sub_242A62724@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t, _OWORD *);
  uint64_t v5;
  __int128 v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[3];

  v4 = *(uint64_t (**)(uint64_t, _OWORD *))(v2 + 32);
  v5 = *a1;
  v6 = *(_OWORD *)(a1 + 3);
  v10[0] = *(_OWORD *)(a1 + 1);
  v10[1] = v6;
  v10[2] = *(_OWORD *)(a1 + 5);
  result = v4(v5, v10);
  *a2 = result;
  a2[1] = v8;
  a2[2] = v9;
  return result;
}

void sub_242A62788(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_242A5BF30(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_242A627AC(uint64_t *a1)
{
  uint64_t v1;

  return sub_242A626C8(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

_OWORD *sub_242A627C4(unsigned __int8 *__src, _OWORD *__dst)
{
  sub_242B5575C(__dst, __src);
  return __dst;
}

char *sub_242A62800(unsigned __int8 *__src, char *__dst)
{
  sub_242B5774C(__dst, __src);
  return __dst;
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_2_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v0 + 8 * (v4 >> 6) + 64) |= 1 << v4;
  v5 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v4);
  *v5 = v1;
  v5[1] = v2;
  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v4) = v3;
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return sub_242C4817C();
}

unint64_t OUTLINED_FUNCTION_11_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8) = 0x8000000000000000;
  return sub_242A61310(v2, v1);
}

uint64_t OUTLINED_FUNCTION_13()
{
  return sub_242C4901C();
}

uint64_t OUTLINED_FUNCTION_14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t OUTLINED_FUNCTION_17()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_19()
{
  return sub_242C4817C();
}

uint64_t OUTLINED_FUNCTION_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_21()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22()
{
  return sub_242C480E0();
}

size_t OUTLINED_FUNCTION_27(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

unint64_t OUTLINED_FUNCTION_28(uint64_t a1)
{
  uint64_t v1;

  return sub_242A61310(a1, v1);
}

uint64_t OUTLINED_FUNCTION_29()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t OUTLINED_FUNCTION_30()
{
  return sub_242C48EF0();
}

void OUTLINED_FUNCTION_31()
{
  uint64_t v0;

  sub_242B64CF8(v0);
}

uint64_t OUTLINED_FUNCTION_33()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_34()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_35()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_38()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_40()
{
  return sub_242C49340();
}

uint64_t OUTLINED_FUNCTION_41()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_42()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_45()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_46()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_47()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_49()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_50(uint64_t a1, uint64_t (*a2)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v2;

  return a2(0, v2, 0);
}

uint64_t OUTLINED_FUNCTION_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  *(_QWORD *)(a11 + 8) = v13;
  return a13;
}

uint64_t OUTLINED_FUNCTION_55(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  return v4(0, v6, a3, v3, v5);
}

uint64_t OUTLINED_FUNCTION_57()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_58()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_60()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_62()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void OUTLINED_FUNCTION_63(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_67()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_69()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_70()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 208) = 0x6574656D61726170;
  *(_QWORD *)(v0 - 200) = 0xE900000000000072;
  *(_BYTE *)(v0 - 116) = 21;
}

uint64_t OUTLINED_FUNCTION_71()
{
  return sub_242C4817C();
}

uint64_t OUTLINED_FUNCTION_72()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_73()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_74()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_76()
{
  return sub_242C4817C();
}

uint64_t OUTLINED_FUNCTION_78()
{
  return sub_242C49394();
}

uint64_t OUTLINED_FUNCTION_80()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_85()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_86()
{
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_87()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t);

  return v1(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t OUTLINED_FUNCTION_90()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_91()
{
  return swift_retain();
}

BOOL OUTLINED_FUNCTION_92@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_97()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v0 + 16) = v3;
  v7 = (_QWORD *)(v0 + 40 * v2);
  v7[4] = v4;
  v7[5] = v5;
  v7[6] = v6;
  v7[7] = v1;
}

uint64_t OUTLINED_FUNCTION_98()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

void OUTLINED_FUNCTION_99()
{
  sub_242BBB0E8();
}

void *OUTLINED_FUNCTION_101@<X0>(void *__dst@<X2>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memcpy(__dst, a2, a3);
}

uint64_t OUTLINED_FUNCTION_103()
{
  return sub_242C48D88();
}

unint64_t OUTLINED_FUNCTION_104()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A61310(v0, v1);
}

uint64_t OUTLINED_FUNCTION_105()
{
  return sub_242C48C38();
}

unint64_t OUTLINED_FUNCTION_106(uint64_t a1)
{
  uint64_t v1;

  return sub_242A61310(a1, v1);
}

uint64_t OUTLINED_FUNCTION_107()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_108()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_109()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_110()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_112()
{
  return 0;
}

void OUTLINED_FUNCTION_113()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 320) = **(_QWORD **)(v0 - 328);
}

uint64_t OUTLINED_FUNCTION_117()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_119()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_120()
{
  return sub_242C49334();
}

uint64_t OUTLINED_FUNCTION_121()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_122()
{
  return sub_242C48D94();
}

__n128 OUTLINED_FUNCTION_123@<Q0>(uint64_t a1@<X8>, __n128 a2)
{
  __n128 result;

  result = a2;
  *(__n128 *)(a1 + 40) = a2;
  return result;
}

char *OUTLINED_FUNCTION_125(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t OUTLINED_FUNCTION_126(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2, 1);
}

uint64_t OUTLINED_FUNCTION_127()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_128()
{
  return sub_242C48D7C();
}

void OUTLINED_FUNCTION_129()
{
  sub_242A8A550();
}

uint64_t OUTLINED_FUNCTION_130()
{
  unint64_t v0;
  uint64_t v1;

  return sub_242A62594(v1, v0);
}

uint64_t OUTLINED_FUNCTION_131()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_132(double a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v11 - 224) = 0;
  *(_QWORD *)(v11 - 216) = 0;
  Array<A>.resolve(descriptor:)((__n128 *)(v11 - 224), v10, a5, a6, a7, a8, a9, a10, a1, a2);
}

void OUTLINED_FUNCTION_133()
{
  JUMPOUT(0x2494EC1C8);
}

uint64_t OUTLINED_FUNCTION_135()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_136()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_138()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_139()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_141()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_144()
{
  JUMPOUT(0x2494EC1C8);
}

uint64_t OUTLINED_FUNCTION_145()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_147()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_150()
{
  return sub_242C4934C();
}

uint64_t OUTLINED_FUNCTION_151()
{
  return sub_242C4934C();
}

uint64_t OUTLINED_FUNCTION_153()
{
  return sub_242C4817C();
}

uint64_t OUTLINED_FUNCTION_155()
{
  return sub_242C48D4C();
}

uint64_t OUTLINED_FUNCTION_156()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_157()
{
  return sub_242A5CDDC();
}

BOOL OUTLINED_FUNCTION_158@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_159()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 216);
  *(_QWORD *)(v0 - 224) = *(_QWORD *)(v0 - 224);
  *(_QWORD *)(v0 - 216) = v1;
}

void OUTLINED_FUNCTION_160(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t Dataset.batchSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t Dataset.dropsLastPartialBatch.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t Dataset.underestimatedCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

#error "242A63354: call analysis failed (funcsize=50)"

uint64_t sub_242A633B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_257221180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void Dataset.init<>(samples:batchSize:batchSampler:dropsLastPartialBatch:prefetchMode:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t (*v43)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;

  OUTLINED_FUNCTION_37();
  a25 = v30;
  a26 = v31;
  v52 = v32;
  v34 = v33;
  v36 = *v35;
  v51 = v35[1];
  v50 = *((_BYTE *)v35 + 16);
  OUTLINED_FUNCTION_20_0();
  if (v40 < 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    v41 = v39;
    v42 = v38;
    v43 = v37;
    v44 = a28;
    sub_242ACAAF0(v39, a28, &a13);
    v45 = OUTLINED_FUNCTION_23_0();
    v46(v45, v41);
    OUTLINED_FUNCTION_11_1(a13);
    *(_BYTE *)(v34 + 80) = v52 & 1;
    *(_QWORD *)(v34 + 88) = v36;
    *(_QWORD *)(v34 + 96) = v51;
    *(_BYTE *)(v34 + 104) = v50;
    if (!v43)
    {
      v48 = a29;
      v47 = a30;
      v49 = a27;
      v42 = (_QWORD *)OUTLINED_FUNCTION_27_0();
      v42[2] = v41;
      v42[3] = v49;
      v42[4] = v44;
      v42[5] = v48;
      v43 = sub_242A63504;
      v42[6] = v47;
    }
    *(_QWORD *)(v34 + 64) = v43;
    *(_QWORD *)(v34 + 72) = v42;
    OUTLINED_FUNCTION_9_0();
  }
}

#error "242A6358C: call analysis failed (funcsize=55)"

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *Dataset.init<>(samples:sampler:batchSize:batchSampler:dropsLastPartialBatch:prefetchMode:transform:)@<X0>(char a1@<W4>, uint64_t *a2@<X5>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t (*v10)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  _QWORD *result;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v20 = a2[1];
  v21 = *a2;
  v19 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_20_0();
  if (v12 < 1)
  {
    OUTLINED_FUNCTION_24_0();
    result = (_QWORD *)OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    v13 = v11;
    v14 = v10;
    v15 = v9;
    sub_242ACAB6C(v9, a4, a6, &v23);
    __swift_destroy_boxed_opaque_existential_1(v15);
    v16 = OUTLINED_FUNCTION_23_0();
    v17(v16, a4);
    result = (_QWORD *)OUTLINED_FUNCTION_11_1(v23);
    *(_BYTE *)(a3 + 80) = a1 & 1;
    *(_QWORD *)(a3 + 88) = v21;
    *(_QWORD *)(a3 + 96) = v20;
    *(_BYTE *)(a3 + 104) = v19;
    if (!v14)
    {
      result = (_QWORD *)OUTLINED_FUNCTION_27_0();
      v13 = result;
      result[2] = a4;
      result[3] = a5;
      result[4] = a6;
      result[5] = a7;
      v14 = sub_242A63504;
      result[6] = a8;
    }
    *(_QWORD *)(a3 + 64) = v14;
    *(_QWORD *)(a3 + 72) = v13;
  }
  return result;
}

uint64_t sub_242A63754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 24) - 8) + 16))(a2, a1);
}

void Dataset.makeIterator()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (*(_BYTE *)(v4 + 104) == 1)
  {
    type metadata accessor for Sampling(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), a4);
    OUTLINED_FUNCTION_15_0();
  }
  type metadata accessor for Sampling(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), a4);
  OUTLINED_FUNCTION_15_0();
}

void sub_242A639E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_0();
  sub_242C48428();
  OUTLINED_FUNCTION_4_1();
  v3 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  v4 = v0[3];
  v3[2] = v2;
  v3[3] = v4;
  v5 = v0[5];
  v6 = v0[6];
  v3[4] = v1;
  v3[5] = v5;
  v3[6] = v6;
  OUTLINED_FUNCTION_6_2(v3 + 7);
  sub_242C48C5C();
  OUTLINED_FUNCTION_28_0();
}

void sub_242A63A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,__int128 a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,__int128 a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_242AC51E0(v45, a9, (uint64_t)sub_242A63CA0, v44, v42, v43, a1, (uint64_t)&a34);
  OUTLINED_FUNCTION_13_0();
  swift_release();
  v47 = a36;
  v48 = a37;
  v49 = a38;
  a42 = a35;
  *(_QWORD *)(v46 - 200) = a34;
  *(_QWORD *)(v46 - 176) = v47;
  *(_QWORD *)(v46 - 168) = v48;
  *(_QWORD *)(v46 - 160) = v49;
  OUTLINED_FUNCTION_28_0();
}

void sub_242A63AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for LazyPrefetchingMapSequence(0, v1, v2, a1);
  OUTLINED_FUNCTION_28_0();
}

#error "242A63B14: call analysis failed (funcsize=26)"

#error "242A63B64: call analysis failed (funcsize=25)"

uint64_t sub_242A63C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[6];

  v8[5] = a1;
  v8[2] = a3;
  v8[3] = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v5 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v4);
  return sub_242A7DAD0((void (*)(char *, uint64_t))sub_242A64554, (uint64_t)v8, v4, a3, MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v6);
}

uint64_t sub_242A63CA4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t (*v9)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[4];

  v8 = *a1;
  sub_242A64490(a2 + 24, (uint64_t)&v13);
  if (v14)
  {
    sub_242A64518(&v13, (uint64_t)v15);
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    *(_QWORD *)&v13 = v8;
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_15_0();
  }
  sub_242A644D8((uint64_t)&v13);
  v15[0] = v8;
  v9 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8);
  v10 = OUTLINED_FUNCTION_25();
  sub_242C480E0();
  v11 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v10);
  return v9(v15, v10, v11, a4, a6);
}

uint64_t sub_242A63E14()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 104))
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242A63E74(uint64_t *a1)
{
  uint64_t *v1;

  return sub_242A63CA4(a1, (uint64_t)(v1 + 7), v1[2], v1[3], v1[4], v1[5]);
}

void sub_242A63E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Dataset.makeIterator()(a1, a2, a3, a4);
}

uint64_t sub_242A63EAC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_242A63ECC()
{
  return 2;
}

uint64_t sub_242A63EDC()
{
  return sub_242C48458();
}

uint64_t Dataset<>.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Sampling(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 8), a4);
  return Sampling<>.count.getter();
}

void sub_242A63F44()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242A63F54()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_242A63F5C(uint64_t a1)
{
  swift_release();
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  return swift_release();
}

uint64_t sub_242A63F94(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = (_OWORD *)(a1 + 24);
  v5 = a2 + 24;
  v6 = *(_QWORD *)(a2 + 48);
  swift_retain();
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }
  else
  {
    v8 = *(_OWORD *)(v5 + 16);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(v5 + 32);
  }
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_retain();
  return a1;
}

uint64_t sub_242A64044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 48) = v4;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 24);
    v6 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 40) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v8;
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

void *__swift_memcpy105_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t sub_242A642A0(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t sub_242A64334(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 105))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242A64374(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Dataset()
{
  JUMPOUT(0x2494EDD88);
}

uint64_t sub_242A643DC()
{
  return swift_allocateGenericValueMetadata();
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_242A643F8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242A64418(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_242A64448(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242A64464(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 16) = v2;
  return result;
}

void type metadata accessor for Dataset.PrefetchMode()
{
  JUMPOUT(0x2494EDD88);
}

uint64_t sub_242A64490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_257221180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_242A644D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_257221180);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242A64518(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_242A64554()
{
  return sub_242C48680();
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  return sub_242C48F5C();
}

void *OUTLINED_FUNCTION_2_3(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;

  a1[2] = a13;
  a1[3] = v13;
  a1[4] = a10;
  a1[5] = a11;
  a1[6] = a12;
  return memcpy(a1 + 7, (const void *)(v14 - 200), 0x69uLL);
}

uint64_t OUTLINED_FUNCTION_3_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  return a14(v16 - 200, v15, v14);
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2 - 200, v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return swift_deallocObject();
}

void *OUTLINED_FUNCTION_6_2(void *a1)
{
  uint64_t v1;

  return memcpy(a1, (const void *)(v1 - 200), 0x69uLL);
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return sub_242C4904C();
}

void OUTLINED_FUNCTION_10_1()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_11_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v2 = a1;
  v2[1] = v1;
  v2[2] = v4;
  return sub_242A633B4(v3, v5);
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return sub_242C48428();
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_15_0()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return sub_242C48C5C();
}

double OUTLINED_FUNCTION_20_0()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0;
  return result;
}

__n128 OUTLINED_FUNCTION_21_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17)
{
  return (__n128)a17;
}

uint64_t OUTLINED_FUNCTION_22_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  *v14 = a13;
  v14[1] = a14;
  v14[2] = v16;
  return v15;
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_25()
{
  return sub_242C48650();
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_28_0()
{
  JUMPOUT(0x2494EDE24);
}

BOOL sub_242A64778()
{
  _BOOL8 result;

  result = sub_242A64798();
  byte_257259980 = result;
  return result;
}

BOOL sub_242A64798()
{
  BOOL v0;
  size_t v2;
  int v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  v2 = 4;
  if (sysctlbyname("kern.hv_vmm_present", &v3, &v2, 0, 0))
    v0 = 1;
  else
    v0 = v3 == 0;
  return !v0;
}

uint64_t sub_242A64814()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlatformInfo()
{
  return objc_opt_self();
}

uint64_t sub_242A64844(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v5;
  id v6;
  char **v7;
  id v8;
  double v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  if (!*(_BYTE *)(v1 + 128))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v5 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_0_6(v5, (__n128)xmmword_242C4BF60);
    if (v3)
      OUTLINED_FUNCTION_5_3();
    v6 = OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_2_4();
    v7 = &selRef_erfWithTensor_name_;
    goto LABEL_7;
  }
  if (*(_BYTE *)(v1 + 128) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v5 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_0_6(v5, (__n128)xmmword_242C4BF60);
    if (v3)
      OUTLINED_FUNCTION_5_3();
    v6 = OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_2_4();
    v7 = &selRef_sigmoidWithTensor_name_;
LABEL_7:
    sub_242A64DA0((uint64_t)v6, v2, v1, a1, (SEL *)v7);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v5 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_6(v5, (__n128)xmmword_242C4BF60);
  if (v3)
    OUTLINED_FUNCTION_5_3();
  v6 = OUTLINED_FUNCTION_12_2();
  if (*(_BYTE *)(v1 + 136))
    v9 = 0.0;
  else
    v9 = *(float *)(v1 + 132);
  OUTLINED_FUNCTION_2_4();
  v8 = sub_242A64D20((uint64_t)v6, v9, v2, v1, a1);
LABEL_13:
  v10 = (unint64_t)v8;

  v5[2].n128_u64[0] = v10;
  v11 = OUTLINED_FUNCTION_7_2();
  return OUTLINED_FUNCTION_9_2(v11, v12, v13, v14, v15, v16, v17, v18, v20, (uint64_t)v5);
}

uint64_t sub_242A649A4(void *a1)
{
  return sub_242A64844(a1);
}

void sub_242A649B8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v6 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v6 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_4_2();
  if ((a2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_6_3();
  v7 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_2_4();
  sub_242A64DA0((uint64_t)v7, v3, v2, a1, (SEL *)&selRef_reLUWithTensor_name_);
  OUTLINED_FUNCTION_11_2();
  *(_QWORD *)(v6 + 32) = v2;
  v8 = OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_9_2(v8, v9, v10, v11, v12, v13, v14, v15, v16, v6);
  OUTLINED_FUNCTION_3_3();
}

void sub_242A64A54(void *a1, uint64_t a2)
{
  sub_242A649B8(a1, a2);
}

void sub_242A64A68(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_4_2();
  if (v6)
    OUTLINED_FUNCTION_6_3();
  v7 = OUTLINED_FUNCTION_10_2();
  sub_242B4B240(1, 1, a2);
  v8 = *(id *)(a2 + 40);
  OUTLINED_FUNCTION_2_4();
  sub_242A64E0C((uint64_t)v7, (uint64_t)v8, v3, v2, a1, (SEL *)&selRef_reLUGradientWithIncomingGradient_sourceTensor_name_);
  OUTLINED_FUNCTION_11_2();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v9 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v9 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v9 + 32) = v2;
  v19 = v9;
  v10 = OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_9_2(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_3_3();
}

void sub_242A64B3C(void *a1, uint64_t a2)
{
  sub_242A64A68(a1, a2);
}

void sub_242A64B50(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v5 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v5 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_4_2();
  if ((a2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_6_3();
  v6 = OUTLINED_FUNCTION_10_2();
  v7 = v2[16];
  v9 = v2[3];
  v8 = v2[4];
  sub_242C480E0();
  sub_242A64E0C((uint64_t)v6, v7, v9, v8, a1, (SEL *)&selRef_softMaxWithTensor_axis_name_);
  OUTLINED_FUNCTION_11_2();
  *(_QWORD *)(v5 + 32) = v8;
  v10 = OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_9_2(v10, v11, v12, v13, v14, v15, v16, v17, v18, v5);
  OUTLINED_FUNCTION_3_3();
}

void sub_242A64BFC(void *a1, uint64_t a2)
{
  sub_242A64B50(a1, a2);
}

uint64_t sub_242A64C10(uint64_t a1)
{
  uint64_t result;

  result = sub_242A64CE0(&qword_257221320, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A64C44(uint64_t a1)
{
  uint64_t result;

  result = sub_242A64CE0(&qword_257221328, (uint64_t (*)(uint64_t))type metadata accessor for ReLUGradientOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A64C78(uint64_t a1)
{
  uint64_t result;

  result = sub_242A64CE0(&qword_257221330, (uint64_t (*)(uint64_t))type metadata accessor for ReLUOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A64CAC(uint64_t a1)
{
  uint64_t result;

  result = sub_242A64CE0(&qword_257221338, (uint64_t (*)(uint64_t))type metadata accessor for ActivationOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A64CE0(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C54FA0, v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_242A64D20(uint64_t a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_leakyReLUWithTensor_alpha_name_, a1, v8, a2);

  return v9;
}

void sub_242A64DA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a4, *a5, a1, v8);

  OUTLINED_FUNCTION_7_0();
}

void sub_242A64E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  void *v10;
  id v11;

  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a5, *a6, a1, a2, v10);

  OUTLINED_FUNCTION_7_0();
}

uint64_t OUTLINED_FUNCTION_0_6(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return sub_242B4B240(0, (v2 & 0xC000000000000001) == 0, v2);
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return sub_242B4B240(0, v2, v1);
}

void OUTLINED_FUNCTION_5_3()
{
  JUMPOUT(0x2494EC84CLL);
}

void OUTLINED_FUNCTION_6_3()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_9_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

id OUTLINED_FUNCTION_10_2()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void OUTLINED_FUNCTION_11_2()
{
  void *v0;

}

id OUTLINED_FUNCTION_12_2()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void sub_242A64F18()
{
  sub_242A59170();
}

uint64_t sub_242A64F74()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  return v0;
}

uint64_t sub_242A64FCC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 64);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

uint64_t sub_242A6501C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v9;

  v8 = *a6;
  v9 = *((_BYTE *)a6 + 8);
  *(_DWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = v8;
  *(_BYTE *)(v7 + 64) = v9;
  sub_242A56808(a7, v7 + 72);
  return v7;
}

void sub_242A65058()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 120))();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C02D08();
}

uint64_t sub_242A650B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242A650E4()
{
  sub_242A650B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseTileOperation()
{
  return objc_opt_self();
}

__n128 sub_242A65128@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_BYTE *)(v1 + 128);
  v4 = *(_BYTE *)(v1 + 129);
  v5 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 104);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

void sub_242A65158()
{
  sub_242A65058();
}

uint64_t sub_242A65178(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C4C3C4, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242A651B4()
{
  return 1701603700;
}

void sub_242A651C4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  char v11;

  *(_QWORD *)(v9 + 136) = a8;
  *(_QWORD *)(v9 + 144) = a9;
  if (!a3)
    a1 = sub_242BD0204(1701603700, 0xE400000000000000);
  OUTLINED_FUNCTION_0_7(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  OUTLINED_FUNCTION_8();
}

uint64_t sub_242A65218()
{
  uint64_t v0;

  return sub_242A6549C(*(_QWORD *)(v0 + 136));
}

uint64_t sub_242A65220()
{
  uint64_t v0;

  sub_242A650B0();
  sub_242A6549C(*(_QWORD *)(v0 + 136));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TileOperation()
{
  return objc_opt_self();
}

uint64_t sub_242A65268()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242A65298()
{
  return OUTLINED_FUNCTION_2_5();
}

uint64_t sub_242A652A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  swift_retain();
  return v0;
}

void sub_242A6530C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  *(_QWORD *)(v8 + 136) = a4;
  if (!a3)
  {
    v9 = OUTLINED_FUNCTION_2_5();
    a1 = sub_242BD0204(v9, v10);
  }
  OUTLINED_FUNCTION_0_7(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  OUTLINED_FUNCTION_8();
}

uint64_t sub_242A65354()
{
  sub_242A650B0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TileGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242A6539C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_2572215F8, type metadata accessor for TileGradientOperation, (uint64_t)&unk_242C4C3C4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A653D8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450((unint64_t *)&qword_257221600, type metadata accessor for TileOperation, (uint64_t)&unk_242C4C3C4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A65414(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257221608, type metadata accessor for BaseTileOperation, (uint64_t)&unk_242C4C38C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A65450(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = MEMORY[0x2494EDE24](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242A6548C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_242A6549C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t OUTLINED_FUNCTION_0_7(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  a9 = v13;
  a10 = v14;
  return sub_242A6501C(a1, a2, a3, v12, v11, &a9, v10);
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return 0x6172675F656C6974;
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return swift_allocObject();
}

BOOL static RegularizationKind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 4) & 1) == 0)
      return 0;
  }
  else if ((*(_BYTE *)(a2 + 4) & 1) != 0)
  {
    return 0;
  }
  return *(float *)a1 == *(float *)a2;
}

uint64_t sub_242A65540(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_242A65558(char a1)
{
  return a1 & 1;
}

uint64_t sub_242A65564(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B4F2A0(*a1, *a2);
}

uint64_t sub_242A65570()
{
  unsigned __int8 *v0;

  return sub_242C4496C(*v0);
}

uint64_t sub_242A65578(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A6283C(a1, *v1);
}

uint64_t sub_242A65580(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242BA91EC(a1, *v1);
}

uint64_t sub_242A65588@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_242A65540(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_242A655B0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_242A65558(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_242A655D8()
{
  sub_242A66060();
  return sub_242C48524();
}

uint64_t sub_242A65634()
{
  sub_242A66060();
  return sub_242C484F4();
}

BOOL sub_242A65680(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_242A65690()
{
  return sub_242C4934C();
}

uint64_t sub_242A656B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242A657BC()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242A65800()
{
  return 0;
}

uint64_t sub_242A6580C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C616373;
  else
    return 0x696D697263736964;
}

BOOL sub_242A6584C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242A65680(*a1, *a2);
}

uint64_t sub_242A65858()
{
  return sub_242A657BC();
}

uint64_t sub_242A65860()
{
  return sub_242A65690();
}

uint64_t sub_242A65868()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242A658A8()
{
  char *v0;

  return sub_242A6580C(*v0);
}

uint64_t sub_242A658B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242A656B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242A658D4()
{
  return sub_242A65800();
}

uint64_t sub_242A658F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A63ECC();
  *a1 = result;
  return result;
}

uint64_t sub_242A65914()
{
  sub_242A65AD0();
  return sub_242C494D8();
}

uint64_t sub_242A6593C()
{
  sub_242A65AD0();
  return sub_242C494E4();
}

uint64_t RegularizationKind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  int v7;
  char v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221610);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242A65AD0();
  sub_242C49448();
  if (!v2)
  {
    sub_242A65B0C();
    sub_242C490D0();
    sub_242C490B8();
    v7 = v6;
    OUTLINED_FUNCTION_2_6();
    *(_DWORD *)a2 = v7;
    *(_BYTE *)(a2 + 4) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_242A65AD0()
{
  unint64_t result;

  result = qword_257221618;
  if (!qword_257221618)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C660, &type metadata for RegularizationKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221618);
  }
  return result;
}

unint64_t sub_242A65B0C()
{
  unint64_t result;

  result = qword_257221620;
  if (!qword_257221620)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C638, &type metadata for RegularizationKind.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221620);
  }
  return result;
}

uint64_t RegularizationKind.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _DWORD v10[4];
  char v11;
  __int16 v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221628);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[3] = *(_DWORD *)v1;
  v8 = *(_BYTE *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242A65AD0();
  sub_242C49478();
  if ((v8 & 1) != 0)
  {
    v15 = 1;
    v14 = 0;
    sub_242A65CB4();
    OUTLINED_FUNCTION_3_5();
    if (!v2)
    {
      v13 = 1;
LABEL_6:
      sub_242C4916C();
    }
  }
  else
  {
    v12 = 0;
    sub_242A65CB4();
    OUTLINED_FUNCTION_3_5();
    if (!v2)
    {
      v11 = 1;
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_242A65CB4()
{
  unint64_t result;

  result = qword_257221630;
  if (!qword_257221630)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C610, &type metadata for RegularizationKind.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221630);
  }
  return result;
}

uint64_t sub_242A65CF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RegularizationKind.init(from:)(a1, a2);
}

uint64_t sub_242A65D04(_QWORD *a1)
{
  return RegularizationKind.encode(to:)(a1);
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RegularizationKind(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 5))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 4);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegularizationKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_242A65DB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

uint64_t sub_242A65DB8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 4) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RegularizationKind()
{
  return &type metadata for RegularizationKind;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for RegularizationKind.Discriminator()
{
  return &type metadata for RegularizationKind.Discriminator;
}

uint64_t getEnumTagSinglePayload for LayerVariableReference.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s14NeuralNetworks18RegularizationKindO13DiscriminatorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242A65ECC + 4 * byte_242C4C3F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242A65F00 + 4 * byte_242C4C3F0[v4]))();
}

uint64_t sub_242A65F00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A65F08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A65F10);
  return result;
}

uint64_t sub_242A65F1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A65F24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242A65F28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A65F30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A65F3C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_242A65F44(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RegularizationKind.CodingKeys()
{
  return &type metadata for RegularizationKind.CodingKeys;
}

unint64_t sub_242A65F64()
{
  unint64_t result;

  result = qword_257221638;
  if (!qword_257221638)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C548, &type metadata for RegularizationKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221638);
  }
  return result;
}

unint64_t sub_242A65FA4()
{
  unint64_t result;

  result = qword_257221640;
  if (!qword_257221640)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C5E8, &type metadata for RegularizationKind.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221640);
  }
  return result;
}

unint64_t sub_242A65FE4()
{
  unint64_t result;

  result = qword_257221648;
  if (!qword_257221648)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C4B8, &type metadata for RegularizationKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221648);
  }
  return result;
}

unint64_t sub_242A66024()
{
  unint64_t result;

  result = qword_257221650;
  if (!qword_257221650)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C4E0, &type metadata for RegularizationKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221650);
  }
  return result;
}

unint64_t sub_242A66060()
{
  unint64_t result;

  result = qword_257221658;
  if (!qword_257221658)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C570, &type metadata for RegularizationKind.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221658);
  }
  return result;
}

uint64_t sub_242A6609C()
{
  int *v0;
  int v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[7];
  uint64_t v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  v1 = *v0;
  if ((v0[1] & 1) != 0)
  {
    OUTLINED_FUNCTION_1_5();
    v3 = *(_BYTE *)(v2 + 160);
    OUTLINED_FUNCTION_4_3(v4, v5, v6, v7, v8, v9, v10, v11, v39, v42, v45, v48, v51, v54, v57, v60, v63, v66, v69,
      v72,
      v75,
      v78,
      v81,
      v84,
      v87,
      v90,
      v93,
      v96,
      v99,
      v102[0]);
    v43 = MEMORY[0x24BEE4AF8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    *(_DWORD *)(inited + 32) = v1;
    HIBYTE(v40) = v3;
    OUTLINED_FUNCTION_5_5(inited, v13, v14, v15, v16, v17, v18, v19, v40, v43, v46, v49, v52, v55, v58, v61, v64, v67, v70,
      v73,
      v76,
      v79,
      v82,
      v85,
      v88,
      v91,
      v94,
      v97,
      v100,
      v102[0]);
    OUTLINED_FUNCTION_0_8();
    sub_242A662D8((uint64_t)v102);
    OUTLINED_FUNCTION_6_4();
    v102[0] = inited;
    static Tensor.* infix(_:_:)();
    swift_release();
    v102[0] = v103;
  }
  else
  {
    OUTLINED_FUNCTION_1_5();
    v21 = *(_BYTE *)(v20 + 160);
    OUTLINED_FUNCTION_4_3(v22, v23, v24, v25, v26, v27, v28, v29, v39, v42, v45, v48, v51, v54, v57, v60, v63, v66, v69,
      v72,
      v75,
      v78,
      v81,
      v84,
      v87,
      v90,
      v93,
      v96,
      v99,
      v102[0]);
    v44 = MEMORY[0x24BEE4AF8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    v30 = swift_initStackObject();
    *(_OWORD *)(v30 + 16) = xmmword_242C4B7D0;
    *(_DWORD *)(v30 + 32) = v1;
    HIBYTE(v41) = v21;
    OUTLINED_FUNCTION_5_5(v30, v31, v32, v33, v34, v35, v36, v37, v41, v44, v47, v50, v53, v56, v59, v62, v65, v68, v71,
      v74,
      v77,
      v80,
      v83,
      v86,
      v89,
      v92,
      v95,
      v98,
      v101,
      v102[0]);
    OUTLINED_FUNCTION_0_8();
    sub_242A662D8((uint64_t)v102);
    OUTLINED_FUNCTION_6_4();
    v103 = v30;
  }
  static Tensor.+ infix(_:_:)();
  return swift_release();
}

uint64_t sub_242A6621C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  if (*(unsigned __int8 *)(v2 + 4) != 255)
    return sub_242A6609C();
  *a2 = v3;
  return swift_retain();
}

uint64_t sub_242A66290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257228D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_242A662D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257228D70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void OUTLINED_FUNCTION_0_8()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

double OUTLINED_FUNCTION_1_5()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 104) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_4_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  return sub_242A66290(v30 - 128, (uint64_t)&a30);
}

uint64_t OUTLINED_FUNCTION_5_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  return sub_242A66290((uint64_t)&a30, (uint64_t)&a18);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 128);
}

void sub_242A6639C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[248];

  OUTLINED_FUNCTION_18_1();
  a19 = v23;
  a20 = v24;
  v58 = v21;
  v59 = v25;
  v56 = v27;
  v57 = v26;
  v29 = v28;
  v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v56 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = OUTLINED_FUNCTION_16_1();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_56();
  v38 = *v20;
  v37 = v20[1];
  v62 = v20[2];
  v63 = v37;
  v61 = v20[3];
  sub_242A670D8(v38 + 88, (uint64_t)v69);
  type metadata accessor for LazyTensorFunctionBuilder();
  swift_initStackObject();
  sub_242BAFD84((uint64_t)v69);
  v60 = v39;
  a10 = v31;
  v68 = v29;
  sub_242A6907C(v57, (uint64_t)v34);
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35) == 1)
  {
    v40 = v38;
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_69();
    v41 = sub_242A690D0((uint64_t)v34);
    v42 = v59;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v22, v34, v35);
    v64 = v38;
    v65 = v63;
    v66 = v62;
    v67 = v61;
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_69();
    v43 = v29;
    v44 = v58;
    v42 = v59;
    v45 = sub_242A66630(v31, v43, v22, v59);
    if (v44)
    {
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v22, v35);
      goto LABEL_9;
    }
    v47 = v45;
    v40 = v38;
    v48 = v46;
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v22, v35);
    swift_bridgeObjectRelease();
    a10 = v47;
    v41 = swift_bridgeObjectRelease();
    v68 = v48;
  }
  MEMORY[0x24BDAC7A8](v41);
  *((_OWORD *)&v56 - 5) = *(_OWORD *)(v42 + 16);
  v49 = v63;
  *(&v56 - 8) = v40;
  *(&v56 - 7) = v49;
  v51 = v60;
  v50 = v61;
  *(&v56 - 6) = v62;
  *(&v56 - 5) = v50;
  *(&v56 - 4) = (uint64_t)&a10;
  *(&v56 - 3) = v51;
  *(&v56 - 2) = (uint64_t)&v68;
  sub_242BA9FD8();
  sub_242BAA030();
  if (*(_QWORD *)(v52 + 16) == 1)
  {
    sub_242A670D8(v52 + 32, v56);
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    OUTLINED_FUNCTION_3_6();
    sub_242A66F3C();
    OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_80_0();
    *v53 = v54;
    v53[1] = v55;
    swift_willThrow();
  }
LABEL_9:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242A66630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  char *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v20[1] = a2;
  v24 = a1;
  v7 = sub_242C47B7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v4;
  v15 = v4[1];
  v22 = v4[2];
  v23 = v15;
  v21 = v4[3];
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v17(v10, a3, v7, v12);
  sub_242AF0548();
  if (!v5)
  {
    ((void (*)(char *, char *, uint64_t))v17)(v14, v10, v7);
    v18 = &v14[v11[5]];
    *(_QWORD *)v18 = 0x200000000;
    *(_OWORD *)(v18 + 8) = 0u;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_OWORD *)(v18 + 40) = 0u;
    *((_QWORD *)v18 + 7) = 0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_QWORD *)&v14[v11[8]] = MEMORY[0x24BEE4AF8];
    *(_QWORD *)&v14[v11[6]] = 64;
    *(_QWORD *)&v14[v11[7]] = 64;
    v25 = v16;
    v26 = v23;
    v27 = v22;
    v28 = v21;
    sub_242A66A60();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v8;
}

uint64_t sub_242A66848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  int v32;
  uint64_t v33;

  v33 = *(_QWORD *)(a3 + 16);
  _s14descr25138D269C9IOMappingVMa(255, a10, a11, a4);
  v13 = sub_242C48650();
  sub_242C480E0();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v13);
  sub_242C48470();
  result = swift_bridgeObjectRelease();
  if ((_QWORD)v30)
  {
    if (v29 == 1)
    {
      v15 = *a7;
    }
    else
    {
      if (v29 != 2)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v15 = *a9;
    }
    if (*(_QWORD *)(v15 + 16))
    {
      sub_242C480E0();
      v16 = sub_242A61310(*((uint64_t *)&v29 + 1), v30);
      if ((v17 & 1) != 0)
      {
        v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
        swift_retain();
        swift_bridgeObjectRelease();
        v19 = *(_QWORD *)(v18 + 16);
        v20 = swift_retain_n();
        v21 = sub_242BC9F84(v20, v19, 0, 0);
        v23 = v22;
        swift_release();
        swift_retain();
        sub_242BC9724();
        v25 = v24;
        v27 = v26;
        swift_release();
        type metadata accessor for TensorRepresentation();
        v29 = 0u;
        v30 = 0u;
        v31 = 0u;
        v32 = 0;
        swift_allocObject();
        LOBYTE(v33) = 1;
        v28 = sub_242BCA944((uint64_t)v21, v23, v25, v27, (uint64_t)&v29, 0x100000000);
        sub_242BA9A2C(a2, v28);
        swift_release();
        swift_release();
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_242A66A60()
{
  OUTLINED_FUNCTION_12_3();
}

void sub_242A66A8C(void *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_53((uint64_t)a1, (void (*)(char *))sub_242A69238);
  objc_autoreleasePoolPop(a1);
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0();
}

void sub_242A66ACC()
{
  OUTLINED_FUNCTION_12_3();
}

void sub_242A66AF8(void *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_53((uint64_t)a1, (void (*)(char *))sub_242A69148);
  objc_autoreleasePoolPop(a1);
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0();
}

void sub_242A66B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_18_1();
  v22 = v21;
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_5_6();
  _s14descr25138D269C9IOMappingVMa(0, v22, a21, v24);
  OUTLINED_FUNCTION_44_0();
  sub_242C48554();
  OUTLINED_FUNCTION_84_0();
}

uint64_t ModelWritingError.debugDescription.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_65_0();
  return v0;
}

uint64_t ModelWritingError.errorDescription.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_65_0();
  return v0;
}

unint64_t sub_242A66F3C()
{
  unint64_t result;

  result = qword_257221660;
  if (!qword_257221660)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for ModelWritingError, &type metadata for ModelWritingError);
    atomic_store(result, (unint64_t *)&qword_257221660);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for GradientSourceID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_242C480E0();
  return a1;
}

uint64_t destroy for GradientSourceID()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for GradientSourceID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for GradientSourceID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientSourceID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientSourceID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelWritingError()
{
  return &type metadata for ModelWritingError;
}

uint64_t sub_242A670D8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LazyTensorFunction(a2, a1);
  return a2;
}

#error "242A6713C: call analysis failed (funcsize=19)"

void sub_242A67164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  __objc2_class_ro *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  unsigned int v45;
  id v46;
  id v47;
  void *v48;
  unsigned __int8 v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  __objc2_class_ro *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_10_3(v29, v30, v31, v32, v33, v34, v35);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_85_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_58_0();
  v37 = (void *)objc_opt_self();
  v38 = (__objc2_class_ro *)OUTLINED_FUNCTION_55_0(v37);
  v39 = -[__objc2_class_ro currentDirectoryPath](v38, sel_currentDirectoryPath);

  v40 = sub_242C48248();
  OUTLINED_FUNCTION_74_0(v40, v41);
  v42 = sub_242C47B04();
  v43 = OUTLINED_FUNCTION_31_0(v42, (const char *)(v27 + 695));
  v44 = (void *)OUTLINED_FUNCTION_82_0();
  v45 = OUTLINED_FUNCTION_30_0((uint64_t)v44, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_);

  if (!v45)
  {
    v62 = 0;
    OUTLINED_FUNCTION_81_0();

    swift_willThrow();
    v63 = OUTLINED_FUNCTION_45_0(v25, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    v60 = OUTLINED_FUNCTION_31_0(v63, sel_defaultManager);
    v64 = OUTLINED_FUNCTION_6_5();
    v61 = (void *)v64;
    v65 = &SliceOperation;
LABEL_7:
    OUTLINED_FUNCTION_25_0(v64, (const char *)v65[32].base_prots);
    goto LABEL_8;
  }
  v46 = OUTLINED_FUNCTION_75_0();
  v47 = OUTLINED_FUNCTION_31_0((uint64_t)v46, sel_defaultManager);
  OUTLINED_FUNCTION_83_0();
  v48 = (void *)sub_242C48224();
  OUTLINED_FUNCTION_136();
  v49 = OUTLINED_FUNCTION_42_0();

  v50 = v28;
  if ((v49 & 1) == 0)
  {
    OUTLINED_FUNCTION_38_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_43_0(0xD000000000000013);
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_35_0();
    sub_242A66F3C();
    v66 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_52_0(v66, v67);
    v68 = OUTLINED_FUNCTION_2_7();
    v60 = OUTLINED_FUNCTION_27_1(v68, sel_defaultManager);
    v64 = OUTLINED_FUNCTION_6_5();
    v65 = v38;
    v61 = (void *)v64;
    goto LABEL_7;
  }
  v51 = OUTLINED_FUNCTION_4_4();
  sub_242A67DD0(v51, v52, v53, v54, v55, v56, v57, v58, v72, v73, a23, v74, v75, v76, v77, v78, v79, v80, v81,
    v82,
    v83,
    v84,
    v85);
  if (!v23)
  {
    v69 = OUTLINED_FUNCTION_2_7();
    v70 = OUTLINED_FUNCTION_27_1(v69, sel_defaultManager);
    v71 = (void *)OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_68_0((uint64_t)v71, sel_changeCurrentDirectoryPath_);
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_35();

    OUTLINED_FUNCTION_50_0();
    goto LABEL_9;
  }
  v59 = OUTLINED_FUNCTION_2_7();
  v60 = OUTLINED_FUNCTION_27_1(v59, sel_defaultManager);
  v61 = (void *)OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_25_0((uint64_t)v61, sel_changeCurrentDirectoryPath_);
LABEL_8:
  swift_release();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_50_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
LABEL_9:
  OUTLINED_FUNCTION_0_9();
}

void sub_242A67458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  __objc2_class_ro *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  unsigned int v46;
  id v47;
  id v48;
  void *v49;
  unsigned __int8 v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  __objc2_class_ro *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_10_3(v30, v31, v32, v33, v34, v35, v36);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_85_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_58_0();
  v38 = (void *)objc_opt_self();
  v39 = (__objc2_class_ro *)OUTLINED_FUNCTION_55_0(v38);
  v40 = -[__objc2_class_ro currentDirectoryPath](v39, sel_currentDirectoryPath);

  v41 = sub_242C48248();
  OUTLINED_FUNCTION_74_0(v41, v42);
  v43 = sub_242C47B04();
  v44 = OUTLINED_FUNCTION_31_0(v43, (const char *)(v28 + 695));
  v45 = (void *)OUTLINED_FUNCTION_82_0();
  v46 = OUTLINED_FUNCTION_30_0((uint64_t)v45, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_);

  if (!v46)
  {
    v63 = 0;
    OUTLINED_FUNCTION_81_0();

    swift_willThrow();
    v64 = OUTLINED_FUNCTION_45_0(v26, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    v61 = OUTLINED_FUNCTION_31_0(v64, sel_defaultManager);
    v65 = OUTLINED_FUNCTION_6_5();
    v62 = (void *)v65;
    v66 = &SliceOperation;
LABEL_7:
    OUTLINED_FUNCTION_25_0(v65, (const char *)v66[32].base_prots);
    goto LABEL_8;
  }
  v47 = OUTLINED_FUNCTION_75_0();
  v48 = OUTLINED_FUNCTION_31_0((uint64_t)v47, sel_defaultManager);
  OUTLINED_FUNCTION_83_0();
  v49 = (void *)sub_242C48224();
  OUTLINED_FUNCTION_136();
  v50 = OUTLINED_FUNCTION_42_0();

  v51 = v29;
  if ((v50 & 1) == 0)
  {
    OUTLINED_FUNCTION_38_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_43_0(0xD000000000000013);
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_35_0();
    sub_242A66F3C();
    v67 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_52_0(v67, v68);
    v69 = OUTLINED_FUNCTION_2_7();
    v61 = OUTLINED_FUNCTION_27_1(v69, sel_defaultManager);
    v65 = OUTLINED_FUNCTION_6_5();
    v66 = v39;
    v62 = (void *)v65;
    goto LABEL_7;
  }
  v52 = OUTLINED_FUNCTION_4_4();
  sub_242A682E4(v52, v53, v54, v55, v56, v57, v58, v59, v73, v74, a23, a24, v75, v76, v77, v78, v79, v80, v81,
    v82,
    v83,
    v84,
    v85,
    v86);
  if (!v24)
  {
    v70 = OUTLINED_FUNCTION_2_7();
    v71 = OUTLINED_FUNCTION_27_1(v70, sel_defaultManager);
    v72 = (void *)OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_68_0((uint64_t)v72, sel_changeCurrentDirectoryPath_);
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_35();

    OUTLINED_FUNCTION_50_0();
    goto LABEL_9;
  }
  v60 = OUTLINED_FUNCTION_2_7();
  v61 = OUTLINED_FUNCTION_27_1(v60, sel_defaultManager);
  v62 = (void *)OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_25_0((uint64_t)v62, sel_changeCurrentDirectoryPath_);
LABEL_8:
  swift_release();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_50_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_80();
LABEL_9:
  OUTLINED_FUNCTION_0_9();
}

void sub_242A6774C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    OUTLINED_FUNCTION_17_1();
LABEL_16:
    OUTLINED_FUNCTION_22_1();
    return;
  }
  v4 = sub_242C480E0() + 40;
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (*(_BYTE *)(v4 - 8) != 3)
      goto LABEL_12;
    v6 = *(_QWORD *)(v4 + 32);
    v7 = *(_QWORD *)(a2 + 240);
    if ((v7 & 0xC000000000000001) != 0)
    {
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_63_0();
    }
    if ((v6 & 0x8000000000000000) != 0)
      break;
    if (v6 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_18;
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_39_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_23_1();
      v5 = v8;
    }
    if (*(_QWORD *)(v5 + 16) >= *(_QWORD *)(v5 + 24) >> 1)
    {
      OUTLINED_FUNCTION_23_1();
      v5 = v9;
    }
    OUTLINED_FUNCTION_62_0();
LABEL_12:
    v4 += 48;
    if (!--v3)
    {
      OUTLINED_FUNCTION_17_1();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

void sub_242A67894(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    OUTLINED_FUNCTION_17_1();
LABEL_16:
    OUTLINED_FUNCTION_22_1();
    return;
  }
  v4 = sub_242C480E0() + 40;
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (*(_BYTE *)(v4 - 8))
      goto LABEL_12;
    v6 = *(_QWORD *)(v4 + 32);
    v7 = *(_QWORD *)(a2 + 176);
    if ((v7 & 0xC000000000000001) != 0)
    {
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_63_0();
    }
    if ((v6 & 0x8000000000000000) != 0)
      break;
    if (v6 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_18;
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_39_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_23_1();
      v5 = v8;
    }
    if (*(_QWORD *)(v5 + 16) >= *(_QWORD *)(v5 + 24) >> 1)
    {
      OUTLINED_FUNCTION_23_1();
      v5 = v9;
    }
    OUTLINED_FUNCTION_62_0();
LABEL_12:
    v4 += 48;
    if (!--v3)
    {
      OUTLINED_FUNCTION_17_1();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

void sub_242A679DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_91();
  v1 = OUTLINED_FUNCTION_28_1();
  sub_242A6774C(v1, v0);
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_21_1();
}

void sub_242A67A1C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_91();
  v1 = OUTLINED_FUNCTION_28_1();
  sub_242A67894(v1, v0);
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_21_1();
}

void sub_242A67A58(uint64_t a1, void (*a2)(char *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  id v19;
  __int128 v20;
  __int128 v21;
  id v22;
  unsigned __int8 v23;
  id v24;
  id v25;
  void (*v26)(char *);
  id v27;
  _OWORD v28[4];
  uint64_t v29;

  v26 = a2;
  v29 = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for MILBlobStorageWriter.BlobWriter(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_242C47B7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242A6917C();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = sub_242A67CCC((uint64_t)v10);
  if (!v2)
  {
    v12 = v11;
    sub_242A691B8(a1, (uint64_t)v6);
    *(_QWORD *)&v6[*(int *)(v4 + 20)] = v12;
    v13 = v12;
    v26(v6);
    v14 = type metadata accessor for MILBlobStorageWriter(0);
    v15 = *(int *)(v14 + 20);
    v16 = *(_QWORD *)&v6[v15 + 56];
    v17 = a1 + v15;
    *(_QWORD *)v17 = *(_QWORD *)&v6[v15];
    *(_OWORD *)(v17 + 8) = *(_OWORD *)&v6[v15 + 8];
    *(_OWORD *)(v17 + 24) = *(_OWORD *)&v6[v15 + 24];
    *(_OWORD *)(v17 + 40) = *(_OWORD *)&v6[v15 + 40];
    *(_QWORD *)(v17 + 56) = v16;
    *(_QWORD *)(a1 + *(int *)(v14 + 32)) = *(_QWORD *)&v6[*(int *)(v14 + 32)];
    sub_242C480E0();
    swift_bridgeObjectRelease();
    v27 = 0;
    v18 = objc_msgSend(v13, sel_seekToOffset_error_, 0, &v27);
    v19 = v27;
    if ((v18 & 1) == 0)
      goto LABEL_5;
    v20 = *(_OWORD *)(v17 + 16);
    v28[0] = *(_OWORD *)v17;
    v28[1] = v20;
    v21 = *(_OWORD *)(v17 + 48);
    v28[2] = *(_OWORD *)(v17 + 32);
    v28[3] = v21;
    v22 = v27;
    sub_242AF0AD4(v28, v13);
    v27 = 0;
    v23 = objc_msgSend(v13, sel_closeAndReturnError_, &v27);
    v19 = v27;
    if ((v23 & 1) != 0)
    {
      v24 = v27;
      sub_242A691FC((uint64_t)v6, type metadata accessor for MILBlobStorageWriter.BlobWriter);

    }
    else
    {
LABEL_5:
      v25 = v19;
      sub_242C47AF8();

      swift_willThrow();
      sub_242A691FC((uint64_t)v6, type metadata accessor for MILBlobStorageWriter.BlobWriter);
    }
  }
}

id sub_242A67CCC(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_242C47B34();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = OUTLINED_FUNCTION_16_1();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_242C47AF8();

    swift_willThrow();
    v9 = OUTLINED_FUNCTION_16_1();
    OUTLINED_FUNCTION_71_0(*(_QWORD *)(v9 - 8));
  }
  return v3;
}

void sub_242A67DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  void (*v64)(uint64_t, _QWORD, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[6];
  uint64_t v81;

  OUTLINED_FUNCTION_18_1();
  v78 = v26;
  v75 = v28;
  v76 = v27;
  v74 = v29;
  v72 = v30;
  v73 = v31;
  v71 = v32;
  v77 = v33 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_5_6();
  v58 = v35;
  OUTLINED_FUNCTION_36_0();
  v67 = sub_242C47A38();
  v65 = *(_QWORD *)(v67 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_5_6();
  v66 = v37;
  v38 = OUTLINED_FUNCTION_69_0();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_56();
  v81 = OUTLINED_FUNCTION_16_1();
  v68 = *(_QWORD *)(v81 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_13_1();
  v61 = v41;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_64_0();
  v70 = v43;
  OUTLINED_FUNCTION_36_0();
  v44 = sub_242C47C3C();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_57_0();
  v46 = sub_242C480BC();
  sub_242C47C30();
  v47 = sub_242C47C24();
  v49 = v48;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v23, v44);
  v80[0] = 0x302E302E31;
  v80[1] = 0xE500000000000000;
  v80[2] = v46;
  v80[3] = v47;
  v80[4] = v49;
  OUTLINED_FUNCTION_80_0();
  HIDWORD(v59) = *MEMORY[0x24BDCD7A0];
  v63 = *(void (**)(uint64_t))(v39 + 104);
  v63(v25);
  sub_242A692CC();
  v50 = v70;
  sub_242C47B70();
  OUTLINED_FUNCTION_45_0(v25, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
  swift_bridgeObjectRelease();
  swift_retain();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_91();
  sub_242C480E0();
  OUTLINED_FUNCTION_28_1();
  sub_242C480E0();
  swift_retain();
  sub_242A67458(v70, v77, v76, v72, v73, v74, v78, v75, a21, a22, (uint64_t)v80, a23, v58, v59, v61, (uint64_t)v63, v65, v66, v67,
    v68,
    v70,
    v71,
    v72,
    v73);
  if (v24)
  {
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v50, v81);
  }
  else
  {
    v79 = v25;
    v51 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v51(v50, v81);
    sub_242C47A68();
    OUTLINED_FUNCTION_77_0();
    sub_242C47A5C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221680);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_242C4B7F0;
    sub_242C47A20();
    sub_242C47A2C();
    sub_242A69308();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221690);
    sub_242A69348();
    sub_242C48B9C();
    sub_242C47A44();
    sub_242A693D0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_33();
    v52 = sub_242C47A50();
    v54 = v53;
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_72_0();
    __swift_storeEnumTagSinglePayload(v55, v56, v57, v81);
    v64(v79, v60, v38);
    sub_242C47B64();
    sub_242C47C18();
    v51(v62, v81);
    sub_242A69418(v52, v54);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_0_9();
}

void sub_242A682E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char *a24)
{
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  char v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  unint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  BOOL v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  char v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  __int16 v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t);
  uint64_t *v143;
  uint64_t *v144;
  uint64_t v145;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, uint64_t);
  void (*v164)(uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD v174[3];
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  _QWORD v215[30];
  uint64_t v216;
  _QWORD v217[4];
  _WORD v218[8];
  unint64_t v219;
  unint64_t v220;
  _QWORD v221[9];
  uint64_t v222;

  OUTLINED_FUNCTION_18_1();
  v202 = v26;
  v203 = v25;
  v28 = v27;
  v204 = v29;
  v205 = v30;
  v209 = v31;
  v33 = v32;
  v201 = (unint64_t)a24;
  v34 = sub_242C47C3C();
  v185 = *(_QWORD *)(v34 - 8);
  v186 = v34;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_5_6();
  v184 = v36;
  v37 = OUTLINED_FUNCTION_16_1();
  v189 = *(_QWORD *)(v37 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_5_6();
  v188 = v39;
  OUTLINED_FUNCTION_36_0();
  v40 = sub_242C47CB4();
  v197 = *(_QWORD *)(v40 - 8);
  v198 = v40;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_13_1();
  v192 = v42;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v43);
  v194 = (char *)v174 - v44;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_64_0();
  v196 = v46;
  OUTLINED_FUNCTION_36_0();
  v222 = sub_242C47CD8();
  v210 = *(_QWORD *)(v222 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_13_1();
  v193 = v48;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v49);
  v195 = (char *)v174 - v50;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_64_0();
  v208 = v52;
  OUTLINED_FUNCTION_36_0();
  v53 = sub_242C47D68();
  v190 = *(_QWORD *)(v53 - 8);
  v191 = v53;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_13_1();
  v199 = v55;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v56);
  OUTLINED_FUNCTION_64_0();
  v207 = v57;
  v58 = OUTLINED_FUNCTION_69_0();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_57_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v60);
  MEMORY[0x24BDAC7A8](v61);
  v63 = (char *)v174 - v62;
  v206 = v58;
  v200 = v59;
  v187 = v64;
  if ((v33 & 1) != 0)
  {
    OUTLINED_FUNCTION_72_0();
    __swift_storeEnumTagSinglePayload(v66, v67, v68, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104))(v24, *MEMORY[0x24BDCD7A0], v58);
    sub_242C47B64();
    v65 = 0;
  }
  else
  {
    v65 = 1;
  }
  v69 = v24;
  __swift_storeEnumTagSinglePayload((uint64_t)v63, v65, 1, v37);
  v70 = sub_242C480E0();
  v71 = v203;
  ((void (*)(_QWORD *__return_ptr, uint64_t, unint64_t, char *, uint64_t, unint64_t, unint64_t, uint64_t))v201)(v215, v70, v202, v63, v209, v204, v205, v28);
  if (v71)
  {
    OUTLINED_FUNCTION_108();
    v77 = (uint64_t)v63;
LABEL_7:
    sub_242A690D0(v77);
    goto LABEL_8;
  }
  v177 = v37;
  OUTLINED_FUNCTION_108();
  sub_242A670D8((uint64_t)v215, (uint64_t)&v214);
  sub_242BACC80((uint64_t)&v216);
  type metadata accessor for MILProgramBuilder();
  swift_initStackObject();
  OUTLINED_FUNCTION_72_0();
  v76 = sub_242B001A0(v72, v73, v74, v75);
  sub_242AFD004();
  v79 = v78;
  sub_242A68FC4((uint64_t)v215);
  v80 = v207;
  sub_242A90ADC(v79, 1852399981, 0xE400000000000000, v207);
  v203 = 0;
  v174[1] = v79;
  v81 = *(_QWORD *)(sub_242C47D20() + 16);
  swift_bridgeObjectRelease();
  v174[2] = v76;
  v175 = v63;
  v174[0] = v69;
  v183 = v81;
  if (!v81)
  {
    v83 = v206;
    goto LABEL_55;
  }
  v82 = 0;
  v182 = *(_QWORD *)(a21 + 16);
  v178 = (unint64_t *)(a21 + 64);
  v83 = v206;
LABEL_11:
  v84 = sub_242C47D20();
  if (v82 >= *(_QWORD *)(v84 + 16))
  {
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
  }
  else
  {
    v85 = v210;
    v202 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    v86 = *(_QWORD *)(v210 + 72);
    v205 = v82;
    v201 = v86 * v82;
    v87 = v208;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v210 + 16))(v208, v84 + v202 + v86 * v82, v222);
    OUTLINED_FUNCTION_136();
    v88 = sub_242C47CCC();
    v90 = v89;
    OUTLINED_FUNCTION_45_0(v87, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));
    if (!v182)
    {
      OUTLINED_FUNCTION_108();
      goto LABEL_38;
    }
    v91 = v178;
    v92 = v182;
    while (1)
    {
      v93 = *(v91 - 2);
      v94 = *(v91 - 1);
      v95 = *v91;
      v96 = *(v91 - 4) == v88 && *(v91 - 3) == (_QWORD)v90;
      if (v96 || (OUTLINED_FUNCTION_20_1() & 1) != 0)
        break;
      v91 += 5;
      if (!--v92)
        goto LABEL_30;
    }
    OUTLINED_FUNCTION_44_0();
    sub_242A62654(v93, v94, v95);
    sub_242A67A1C();
    v98 = v97;
    v181 = *(_QWORD **)(v97 + 16);
    if (!v181)
    {
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_7_3();
LABEL_30:
      OUTLINED_FUNCTION_108();
      v83 = v206;
      v80 = v207;
      goto LABEL_38;
    }
    v99 = *(_QWORD *)(v97 + 32);
    v100 = *(_QWORD **)(v98 + 40);
    v204 = *(_QWORD *)(v98 + 48);
    v101 = v99 == v88 && v100 == v90;
    v80 = v207;
    if (v101)
    {
      v103 = v90;
      goto LABEL_32;
    }
    v176 = v98;
    v102 = v100;
    if ((OUTLINED_FUNCTION_20_1() & 1) != 0)
    {
      v103 = v102;
      goto LABEL_32;
    }
    if (v181 == (_QWORD *)1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    v112 = (uint64_t *)(v176 + 72);
    v113 = 1;
    while (1)
    {
      if (__OFADD__(v113, 1))
        goto LABEL_109;
      v114 = *(v112 - 2);
      v115 = (_QWORD *)*(v112 - 1);
      v204 = *v112;
      if (v114 == v88 && v115 == v90)
      {
        v103 = v90;
        goto LABEL_32;
      }
      v179 = v113 + 1;
      v180 = v113;
      if ((OUTLINED_FUNCTION_20_1() & 1) != 0)
        break;
      v112 += 3;
      v113 = v180 + 1;
      if ((_QWORD *)v179 == v181)
      {
        swift_bridgeObjectRelease();
        v80 = v207;
LABEL_51:
        OUTLINED_FUNCTION_3_6();
        OUTLINED_FUNCTION_7_3();
        OUTLINED_FUNCTION_108();
LABEL_37:
        v83 = v206;
LABEL_38:
        v82 = v205 + 1;
        if (v205 + 1 == v183)
        {
LABEL_55:
          v117 = *(_QWORD *)(sub_242C47D44() + 16);
          swift_bridgeObjectRelease();
          v202 = v117;
          if (v117)
          {
            v118 = 0;
            v201 = *(_QWORD *)(a22 + 16);
            v195 = (char *)(a22 + 48);
            while (1)
            {
              v119 = sub_242C47D44();
              if (v118 >= *(_QWORD *)(v119 + 16))
                goto LABEL_108;
              v120 = v80;
              v121 = v210;
              v205 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
              v204 = *(_QWORD *)(v210 + 72) * v118;
              v122 = v208;
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v210 + 16))(v208, v119 + v205 + v204, v222);
              OUTLINED_FUNCTION_136();
              v123 = sub_242C47CCC();
              v125 = v124;
              (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v122, v222);
              v126 = (char *)v201;
              if (v201)
              {
                v127 = v195;
                while (1)
                {
                  v128 = *(_WORD *)v127;
                  v129 = *((_QWORD *)v127 - 2) == v123 && *((_QWORD *)v127 - 1) == v125;
                  if (v129 || (OUTLINED_FUNCTION_19_0() & 1) != 0)
                    break;
                  v127 += 24;
                  if (!--v126)
                    goto LABEL_76;
                }
                OUTLINED_FUNCTION_32_0();
                sub_242A679DC();
                v133 = v132;
                v196 = v132[2];
                if (!v196)
                {
                  OUTLINED_FUNCTION_3_6();
                  OUTLINED_FUNCTION_35();
LABEL_76:
                  swift_bridgeObjectRelease();
                  v80 = v207;
                  v130 = v199;
                  v131 = v200;
                  goto LABEL_83;
                }
                v134 = v132[6];
                if (v132[4] == v123 && v132[5] == v125)
                {
                  v137 = v125;
                }
                else
                {
                  v136 = v132[5];
                  if ((OUTLINED_FUNCTION_19_0() & 1) == 0)
                  {
                    if (v196 != 1)
                    {
                      v181 = v133;
                      v147 = v133 + 9;
                      v148 = 1;
                      v183 = v118;
                      while (1)
                      {
                        v149 = v148 + 1;
                        if (__OFADD__(v148, 1))
                          goto LABEL_110;
                        v150 = *(v147 - 2);
                        v151 = *(v147 - 1);
                        v182 = *v147;
                        if (v150 == v123 && v151 == v125)
                          break;
                        if ((OUTLINED_FUNCTION_19_0() & 1) != 0)
                        {
                          v137 = v151;
                          goto LABEL_97;
                        }
                        v147 += 3;
                        ++v148;
                        v118 = v183;
                        if (v149 == v196)
                          goto LABEL_94;
                      }
                      v137 = v125;
LABEL_97:
                      v134 = v182;
                      v118 = v183;
                      goto LABEL_78;
                    }
LABEL_94:
                    swift_bridgeObjectRelease();
                    v130 = v199;
                    OUTLINED_FUNCTION_3_6();
                    OUTLINED_FUNCTION_35();
                    v80 = v207;
                    v131 = v200;
                    goto LABEL_83;
                  }
                  v137 = v136;
                }
LABEL_78:
                v196 = v137;
                sub_242C480E0();
                OUTLINED_FUNCTION_39_0();
                OUTLINED_FUNCTION_80();
                LOWORD(v211) = v128;
                v138 = v134;
                v139 = v192;
                v140 = v203;
                sub_242B08854(v138, v192);
                if (v140)
                {
                  OUTLINED_FUNCTION_60_0();
                  OUTLINED_FUNCTION_35();
                  swift_release();
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_3_6();
                  OUTLINED_FUNCTION_59_0();
                  OUTLINED_FUNCTION_49_0();
                  OUTLINED_FUNCTION_41_0();
                  v77 = (uint64_t)v175;
                  goto LABEL_7;
                }
                v203 = 0;
                OUTLINED_FUNCTION_35();
                v141 = OUTLINED_FUNCTION_79_0();
                v142(v141, v139);
                OUTLINED_FUNCTION_61_0();
                v80 = v207;
                sub_242C47D38();
                v144 = v143;
                v145 = *v143;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *v144 = v145;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v145 = sub_242B4B590();
                  *v144 = v145;
                }
                v131 = v200;
                if (v118 >= *(_QWORD *)(v145 + 16))
                  goto LABEL_112;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v210 + 40))(v145 + v205 + v204, v193, v222);
                OUTLINED_FUNCTION_76_0();
                swift_release();
                swift_bridgeObjectRelease();
                (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v139, v198);
                v130 = v199;
              }
              else
              {
                OUTLINED_FUNCTION_3_6();
                v130 = v199;
                v131 = v200;
                v80 = v120;
              }
LABEL_83:
              ++v118;
              v83 = v206;
              if (v118 == v202)
                goto LABEL_99;
            }
          }
          v130 = v199;
          v131 = v200;
LABEL_99:
          v154 = v190;
          v153 = v191;
          v155 = v131;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v190 + 16))(v130, v80, v191);
          OUTLINED_FUNCTION_72_0();
          v156 = v177;
          __swift_storeEnumTagSinglePayload(v157, v158, v159, v177);
          (*(void (**)(_QWORD, _QWORD, uint64_t))(v155 + 104))(v174[0], *MEMORY[0x24BDCD7A0], v83);
          v160 = v188;
          sub_242C47B64();
          v161 = v130;
          v162 = v203;
          sub_242C47D08();
          v203 = v162;
          if (v162)
          {
            OUTLINED_FUNCTION_60_0();
            OUTLINED_FUNCTION_59_0();
            (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v160, v156);
            v163 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
            v163(v161, v153);
            v163(v80, v153);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v160, v156);
            v164 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
            v164(v130, v153);
            if (__swift_getEnumTagSinglePayload((uint64_t)v175, 1, v156) != 1)
            {
              sub_242C47C30();
              v165 = sub_242C47C24();
              v167 = v166;
              OUTLINED_FUNCTION_71_0(v185);
              v221[0] = 0xD000000000000010;
              v221[1] = 0x8000000242C65230;
              OUTLINED_FUNCTION_80_0();
              v221[2] = v168;
              v221[3] = v169;
              v221[4] = 0x73746867696577;
              v221[5] = 0xE700000000000000;
              v221[6] = 0xD000000000000018;
              v221[7] = 0x8000000242C65250;
              sub_242B8CA20(v221, v165, v167);
              OUTLINED_FUNCTION_3_6();
            }
            v170 = *(_QWORD *)(a23 + 24);
            v171 = *(_QWORD *)(a23 + 32);
            v217[0] = 0xD000000000000010;
            v217[1] = 0x8000000242C65230;
            OUTLINED_FUNCTION_80_0();
            v217[2] = v172;
            v217[3] = v173;
            strcpy((char *)v218, "model.mlmodel");
            v218[7] = -4864;
            v219 = 0xD00000000000001ELL;
            v220 = 0x8000000242C651F0;
            OUTLINED_FUNCTION_44_0();
            sub_242B8CA20(v217, v170, v171);
            OUTLINED_FUNCTION_60_0();
            OUTLINED_FUNCTION_59_0();
            OUTLINED_FUNCTION_3_6();
            v164(v207, v191);
          }
          OUTLINED_FUNCTION_41_0();
          sub_242A690D0((uint64_t)v175);
LABEL_8:
          OUTLINED_FUNCTION_0_9();
          return;
        }
        goto LABEL_11;
      }
    }
    v103 = v115;
LABEL_32:
    v181 = v103;
    sub_242C480E0();
    swift_retain();
    OUTLINED_FUNCTION_136();
    v211 = v93;
    v212 = v94;
    v213 = v95;
    v104 = v196;
    v105 = v203;
    sub_242B079AC(v204, v196);
    v203 = v105;
    if (v105)
    {
      OUTLINED_FUNCTION_60_0();
      swift_release();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_59_0();
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_41_0();
      sub_242A690D0((uint64_t)v175);
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_7_3();
      goto LABEL_8;
    }
    v106 = OUTLINED_FUNCTION_79_0();
    v107(v106, v104);
    OUTLINED_FUNCTION_61_0();
    v80 = v207;
    sub_242C47D14();
    v109 = v108;
    v110 = *v108;
    v111 = swift_isUniquelyReferenced_nonNull_native();
    *v109 = v110;
    if ((v111 & 1) == 0)
    {
      v110 = sub_242B4B590();
      *v109 = v110;
    }
    if (v205 < *(_QWORD *)(v110 + 16))
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v210 + 40))(v110 + v202 + v201, v195, v222);
      OUTLINED_FUNCTION_76_0();
      OUTLINED_FUNCTION_3_6();
      swift_release();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_3();
      (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v196, v198);
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_112:
  __break(1u);
}

void sub_242A68FC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 224) + 16);
  if (v2)
  {
    if (v2 == 1)
    {
      sub_242A9B6C4(*(_QWORD *)(a1 + 224));
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_242C3782C();
      OUTLINED_FUNCTION_40_0();
      v3 = v1;
      sub_242BB6668(&v3);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242A6907C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_242A690D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242A69110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A66848(a1, a2, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(uint64_t **)(v2 + 64), *(_QWORD *)(v2 + 72), *(uint64_t **)(v2 + 80), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_242A69148(uint64_t a1)
{
  sub_242A6926C(a1, 2, 36, 0xD000000000000020, 0x8000000242C65150);
}

unint64_t sub_242A6917C()
{
  unint64_t result;

  result = qword_257221670;
  if (!qword_257221670)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257221670);
  }
  return result;
}

uint64_t sub_242A691B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MILBlobStorageWriter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_242A691FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_242A69238(uint64_t a1)
{
  sub_242A6926C(a1, 1, 40, 0xD000000000000024, 0x8000000242C65180);
}

#error "242A692A8: call analysis failed (funcsize=16)"

BOOL sub_242A692B8(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(a1 + 40) == *(_QWORD *)(v1 + 32);
}

unint64_t sub_242A692CC()
{
  unint64_t result;

  result = qword_257221678;
  if (!qword_257221678)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257221678);
  }
  return result;
}

unint64_t sub_242A69308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257221688;
  if (!qword_257221688)
  {
    v1 = sub_242C47A38();
    result = MEMORY[0x2494EDE24](MEMORY[0x24BDCB2C8], v1);
    atomic_store(result, (unint64_t *)&qword_257221688);
  }
  return result;
}

unint64_t sub_242A69348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257221698;
  if (!qword_257221698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221690);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257221698);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2494EDE18](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_242A693D0()
{
  unint64_t result;

  result = qword_2572216A0;
  if (!qword_2572216A0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C593A4, &type metadata for MLPackageManifest);
    atomic_store(result, (unint64_t *)&qword_2572216A0);
  }
  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_242A69418(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_242A6945C(_QWORD *a1)
{
  destroy for LazyTensorFunction(a1);
  return a1;
}

uint64_t sub_242A69490(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x2000000000000000) == 0)
    return sub_242A6949C(a1, a2, a3);
  return a1;
}

uint64_t sub_242A6949C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 62 == 2)
    return swift_release();
  if ((a3 >> 62) <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

void OUTLINED_FUNCTION_1_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_242A67164(a1, a2, a3, a4, a5, a6, a7, a8, v23, v24, v25, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(v0, *(_QWORD *)(v1 - 200));
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return sub_242C48224();
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_242A69490(v0, v2, v1);
}

void OUTLINED_FUNCTION_10_3(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 184) = a5;
  *(_QWORD *)(v8 - 176) = v7;
  *(_QWORD *)(v8 - 152) = a6;
  *(_QWORD *)(v8 - 144) = a2;
  *(_QWORD *)(v8 - 120) = a3;
  *(_QWORD *)(v8 - 112) = a1;
  *(_QWORD *)(v8 - 192) = a7;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 - 136) = a4;
  *(_QWORD *)(v8 - 128) = v9;
  *(_QWORD *)(v8 - 160) = *(_QWORD *)(v8 + 16);
}

void OUTLINED_FUNCTION_12_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 24) = v0;
  JUMPOUT(0x2494ED6ECLL);
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return sub_242C47B7C();
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return sub_242C4925C();
}

void OUTLINED_FUNCTION_23_1()
{
  sub_242A5EEA4();
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return swift_allocError();
}

id OUTLINED_FUNCTION_25_0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

id OUTLINED_FUNCTION_27_1(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return sub_242C480E0();
}

id OUTLINED_FUNCTION_30_0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, 1, 0, v4 - 104);
}

id OUTLINED_FUNCTION_31_0(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return sub_242C48224();
}

uint64_t OUTLINED_FUNCTION_35_0()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0xE000000000000000;
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_41_0()
{
  uint64_t v0;

  return sub_242A6945C((_QWORD *)(v0 + 904));
}

id OUTLINED_FUNCTION_42_0()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, sel_changeCurrentDirectoryPath_, v1);
}

uint64_t OUTLINED_FUNCTION_43_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = (v1 - 32) | 0x8000000000000000;
  return sub_242C47B58();
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_45_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[35], v0[19]);
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_52_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_53(uint64_t a1, void (*a2)(char *))
{
  uint64_t v2;

  sub_242A67A58(v2, a2);
}

id OUTLINED_FUNCTION_55_0(void *a1)
{
  return objc_msgSend(a1, sel_defaultManager);
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_60_0()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_61_0()
{
  return sub_242C47CC0();
}

void OUTLINED_FUNCTION_62_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v2 + 16) = v5;
  v6 = (_QWORD *)(v2 + 24 * v0);
  v6[4] = v1;
  v6[5] = v3;
  v6[6] = v4;
}

void OUTLINED_FUNCTION_63_0()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_68_0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_69_0()
{
  return sub_242C47B10();
}

uint64_t OUTLINED_FUNCTION_71_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_74_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 168) = a2;

}

id OUTLINED_FUNCTION_75_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 216) = v0;
  *(_QWORD *)(v4 - 208) = v3;
  *(_QWORD *)(v4 - 200) = v2;
  return v1;
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(v0 + 312, 0);
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return sub_242C47AF8();
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return sub_242C47B34();
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return sub_242C47B58();
}

void OUTLINED_FUNCTION_84_0()
{
  JUMPOUT(0x2494EC1C8);
}

void sub_242A6993C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - v7;
  v9 = OUTLINED_FUNCTION_14_1();
  v40 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_13_1();
  v39 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v15 = sub_242B89308();
  sub_242A9E618(v15, a1);
  if (v16)
  {
    v18 = v16;
    v19 = v17;
    type metadata accessor for NativeTensorStorage();
    v42 = *(_QWORD *)(v1 + 72);
    v41 = *(_BYTE *)(v1 + 80);
    sub_242C480E0();
    v20 = (uint64_t *)OUTLINED_FUNCTION_18_2();
    sub_242B1D8D0(v20, v21, v22);
    v37 = v23;
    v38 = v2;
    OUTLINED_FUNCTION_11_4(*(_QWORD *)(v23 + 16));
    OUTLINED_FUNCTION_1_7((uint64_t)&v42, (uint64_t)v14);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 16))(&v42, ObjectType, v19);
    v25 = (uint64_t)v14;
    v26 = v39;
    OUTLINED_FUNCTION_1_7((uint64_t)&v42, v39);
    OUTLINED_FUNCTION_5_7((uint64_t)v8, v25);
    OUTLINED_FUNCTION_0_10((uint64_t)v8);
    OUTLINED_FUNCTION_5_7(v3, v26);
    v27 = OUTLINED_FUNCTION_0_10(v3);
    v28 = MEMORY[0x24BDAC7A8](v27);
    *(&v36 - 4) = v1;
    *(&v36 - 3) = v25;
    v29 = v37;
    *(&v36 - 2) = v18;
    *(&v36 - 1) = v19;
    MEMORY[0x24BDAC7A8](v28);
    *(&v36 - 6) = v18;
    *(&v36 - 5) = v19;
    *(&v36 - 4) = v3;
    *(&v36 - 3) = (uint64_t)sub_242A6A5EC;
    *(&v36 - 2) = v30;
    swift_retain();
    v31 = v38;
    sub_242A6A608((uint64_t)v8, (uint64_t (*)(_BYTE *))sub_242A6AB40, (uint64_t)(&v36 - 8), v32);
    if (v31)
    {
      swift_release_n();
      OUTLINED_FUNCTION_19_1();
      sub_242A6AB60((uint64_t)v8);
      OUTLINED_FUNCTION_6_6(v39);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_6_6(v25);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_19_1();
      sub_242A6AB60((uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v34 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v34 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v34 + 32) = v29;
      *(_QWORD *)(v34 + 40) = &off_251387678;
      swift_unknownObjectRelease();
      v35 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v35(v39, v9);
      v35(v25, v9);
    }
  }
  else
  {
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_2_8(v33, 0xD000000000000025);
  }
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242A69C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;

  v17[1] = a5;
  v18 = a6;
  v8 = sub_242C47930();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_242C4781C();
  MEMORY[0x24BDAC7A8](v12);
  sub_242A69E64((uint64_t)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  sub_242C489C8();
  sub_242C47648();
  if (sub_242C4763C())
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v18 + 16))(&v29, ObjectType);
    if (!*(_QWORD *)(v29 + 16))
    {
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = -1;
      v25 = 0;
      v26 = 0;
      v24 = 0;
      v27 = -1;
      v28 = 4;
      sub_242A59264();
    }
    swift_bridgeObjectRelease();
    sub_242C47618();
    return swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v16 = 0xD000000000000035;
    *(_QWORD *)(v16 + 8) = 0x8000000242C653E0;
    *(_BYTE *)(v16 + 16) = 1;
    return swift_willThrow();
  }
}

void sub_242A69E50(uint64_t a1)
{
  sub_242A6993C(a1);
}

uint64_t sub_242A69E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *(unsigned __int8 *)(v1 + 64);
  v4 = sub_242C4781C();
  v5 = (unsigned int *)MEMORY[0x24BEDF828];
  if (v3 != 2)
    v5 = (unsigned int *)MEMORY[0x24BEDF830];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v5, v4);
}

void sub_242A69EB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_4_5();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v50 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v50 - v9;
  v61 = *(_QWORD *)(OUTLINED_FUNCTION_14_1() - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_13_1();
  v59 = v12;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v60 = (uint64_t)v50 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v50 - v16;
  v18 = sub_242B89308();
  sub_242A9E618(v18, a1);
  if (!v19)
    goto LABEL_6;
  v21 = v19;
  v55 = v20;
  v56 = v17;
  v53 = v10;
  v22 = sub_242B89308();
  sub_242A9E618(v22, a1);
  if (!v23)
  {
    OUTLINED_FUNCTION_17_2();
LABEL_6:
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_2_8(v48, 0xD00000000000002ELL);
    goto LABEL_7;
  }
  v25 = v23;
  v54 = v24;
  type metadata accessor for NativeTensorStorage();
  v63 = *(_QWORD *)(v1 + 72);
  v62 = *(_BYTE *)(v1 + 80);
  sub_242C480E0();
  v26 = (uint64_t *)OUTLINED_FUNCTION_18_2();
  v27 = (uint64_t)v58;
  sub_242B1D8D0(v26, v28, v29);
  v31 = v30;
  v51 = v27;
  v50[1] = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr))(v55 + 16))(&v63);
  v57 = v2;
  v58 = v8;
  v32 = v25;
  v33 = (uint64_t)v56;
  OUTLINED_FUNCTION_1_7((uint64_t)&v63, (uint64_t)v56);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v54 + 16))(&v63, ObjectType);
  v35 = v60;
  OUTLINED_FUNCTION_1_7((uint64_t)&v63, v60);
  OUTLINED_FUNCTION_11_4(*(_QWORD *)(v31 + 16));
  v52 = v21;
  v36 = v59;
  OUTLINED_FUNCTION_1_7((uint64_t)&v63, v59);
  v37 = (uint64_t)v53;
  OUTLINED_FUNCTION_5_7((uint64_t)v53, v33);
  OUTLINED_FUNCTION_0_10(v37);
  OUTLINED_FUNCTION_5_7((uint64_t)v58, v35);
  OUTLINED_FUNCTION_0_10((uint64_t)v58);
  OUTLINED_FUNCTION_5_7(v57, v36);
  v38 = OUTLINED_FUNCTION_0_10(v57);
  v50[0] = v50;
  v39 = MEMORY[0x24BDAC7A8](v38);
  v50[-4] = v1;
  v50[-3] = v33;
  v40 = v32;
  v41 = v31;
  v42 = v57;
  v43 = (uint64_t)v58;
  v44 = v54;
  v50[-2] = v40;
  v50[-1] = v44;
  MEMORY[0x24BDAC7A8](v39);
  v50[-8] = v40;
  v50[-7] = v45;
  v50[-6] = v43;
  v50[-5] = v41;
  v50[-4] = &off_251387678;
  v50[-3] = v42;
  v50[-2] = sub_242A6AD6C;
  v50[-1] = v46;
  swift_retain();
  v47 = v51;
  sub_242BF6310((uint64_t)sub_242A6AD88, (uint64_t)&v50[-10], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
  if (v47)
  {
    OUTLINED_FUNCTION_17_2();
    swift_release_n();
    OUTLINED_FUNCTION_7_4();
    OUTLINED_FUNCTION_13_2();
    sub_242A6AB60(v37);
    OUTLINED_FUNCTION_15_1(v59);
    OUTLINED_FUNCTION_15_1(v60);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_15_1((uint64_t)v56);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_7_4();
    OUTLINED_FUNCTION_13_2();
    sub_242A6AB60(v37);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v49 = OUTLINED_FUNCTION_5_4();
    *(_OWORD *)(v49 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v49 + 32) = v41;
    *(_QWORD *)(v49 + 40) = &off_251387678;
    OUTLINED_FUNCTION_17_2();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6_6(v59);
    OUTLINED_FUNCTION_6_6(v60);
    OUTLINED_FUNCTION_6_6((uint64_t)v56);
  }
LABEL_7:
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242A6A290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;

  v23 = a3;
  v19[1] = a6;
  v20 = a7;
  v9 = sub_242C47930();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_242C4781C();
  MEMORY[0x24BDAC7A8](v13);
  sub_242A69E64((uint64_t)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = a5;
  v22 = a1;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v15(v12, a5, v9);
  sub_242C489C8();
  sub_242C47648();
  if (sub_242C4763C())
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v20 + 16))(&v33, ObjectType);
    if (!*(_QWORD *)(v33 + 16))
    {
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = -1;
      v29 = 0;
      v30 = 0;
      v28 = 0;
      v31 = -1;
      v32 = 4;
      sub_242A59264();
    }
    swift_bridgeObjectRelease();
    v15(v12, v21, v9);
    sub_242C489C8();
    sub_242C4760C();
    return swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v18 = 0xD000000000000035;
    *(_QWORD *)(v18 + 8) = 0x8000000242C653E0;
    *(_BYTE *)(v18 + 16) = 1;
    return swift_willThrow();
  }
}

void sub_242A6A4F4(uint64_t a1)
{
  sub_242A69EB8(a1);
}

uint64_t sub_242A6A508(uint64_t a1)
{
  uint64_t result;

  result = sub_242A6A570(&qword_2572216A8, (uint64_t (*)(uint64_t))type metadata accessor for ResizeGradientOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A6A53C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A6A570((unint64_t *)&qword_2572216B0, (uint64_t (*)(uint64_t))type metadata accessor for ResizeOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A6A570(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C550D4, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_242A6A5B0()
{
  unint64_t result;

  result = qword_2572216C0;
  if (!qword_2572216C0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4E38C, &type metadata for BNNSDispatchError);
    atomic_store(result, (unint64_t *)&qword_2572216C0);
  }
  return result;
}

uint64_t sub_242A6A5EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242A69C18(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_242A6A608@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_BYTE *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  BOOL v17;
  int v18;
  uint64_t result;
  _BYTE v22[8];

  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v10);
  v12 = v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v13 = OUTLINED_FUNCTION_14_1();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  LODWORD(v15) = *(unsigned __int8 *)(v5 + 24);
  v17 = v15 > 0xC;
  v18 = (1 << v15) & 0x1777;
  if (v17 || v18 == 0)
    goto LABEL_10;
  sub_242A6ABA0(a1, (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    OUTLINED_FUNCTION_11_4(*(_QWORD *)(v5 + 16));
    sub_242B51AEC((uint64_t)v22, 0, 3, (uint64_t)v16);
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  }
  if ((sub_242B53EA8() & 1) != 0)
  {
LABEL_10:
    result = sub_242C48F5C();
    __break(1u);
  }
  else
  {
    sub_242A6A874(v5, (uint64_t)v16, a2, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

void sub_242A6A83C(void (*a1)(void))
{
  a1();
  OUTLINED_FUNCTION_9_4();
}

uint64_t sub_242A6A874@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t (*a3)(_BYTE *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *);
  _BYTE v30[56];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;

  v28 = a4;
  v29 = a3;
  v27 = a5;
  v7 = sub_242C47930();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_242C48AD0();
  v11 = *(_BYTE *)(a1 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v25 = sub_242C47918();
  sub_242C4790C();
  v24 = *(_OWORD *)v30;
  v23 = *(_OWORD *)&v30[16];
  v22 = *(_OWORD *)&v30[32];
  v12 = v31;
  v21 = *(_QWORD *)&v30[48];
  sub_242C47924();
  v20 = *(_OWORD *)v30;
  v19 = *(_OWORD *)&v30[16];
  v18 = *(_OWORD *)&v30[32];
  v13 = *(_QWORD *)&v30[48];
  v14 = v31;
  v30[0] = v11;
  sub_242B526F4();
  LODWORD(a1) = v15;
  v30[0] = v11;
  sub_242B526F4();
  *(_DWORD *)v30 = 0;
  *(_DWORD *)&v30[4] = v25;
  *(_OWORD *)&v30[8] = v24;
  *(_OWORD *)&v30[24] = v23;
  *(_OWORD *)&v30[40] = v22;
  v31 = v21;
  v32 = v12;
  v33 = v20;
  v34 = v19;
  v35 = v18;
  v36 = v13;
  v37 = v14;
  v38 = v26;
  v39 = a1;
  v40 = 0;
  v41 = v16;
  v42 = 1065353216;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v29(v30);
}

void sub_242A6AAA4(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  _QWORD v8[6];

  swift_getObjectType();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  sub_242BF6310((uint64_t)sub_242A6ABE8, (uint64_t)v8, MEMORY[0x24BEE4AE0] + 8, a4);
}

void sub_242A6AB40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_242A6AAA4(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_242A6AB60(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242A6ABA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_242A6ABE8(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, uint64_t))(v1 + 16))(*(_QWORD *)(v1 + 32), a1);
  OUTLINED_FUNCTION_9_4();
}

void sub_242A6AC10(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_getObjectType();
  v14 = a2;
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a7;
  v19 = a1;
  sub_242BF6310((uint64_t)sub_242A6ADB8, (uint64_t)v13, MEMORY[0x24BEE4AE0] + 8, a6);
}

void sub_242A6ACC4(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  _QWORD v10[6];

  swift_getObjectType();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  sub_242BF6310((uint64_t)sub_242A6ADD8, (uint64_t)v10, MEMORY[0x24BEE4AE0] + 8, a5);
}

uint64_t sub_242A6AD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_242A6A290(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

void sub_242A6AD88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_242A6AC10(a1, v2[5], v2[6], v2[7], v2[8], a2, v2[9]);
}

void sub_242A6ADB8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_242A6ACC4(a1, v2[5], v2[6], v2[7], a2);
}

void sub_242A6ADD8(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD, uint64_t))(v1 + 16))(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
  OUTLINED_FUNCTION_9_4();
}

uint64_t OUTLINED_FUNCTION_0_10(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

void OUTLINED_FUNCTION_1_7(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242B51AEC(a1, 0, 2, a2);
}

uint64_t OUTLINED_FUNCTION_2_8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_5_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_6_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_11_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return sub_242C47930();
}

uint64_t OUTLINED_FUNCTION_15_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return 1;
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Upsample1D()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Upsample2D()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance SymmetricPad1D()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance SymmetricPad2D()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance ConstantPad1D()
{
  return OUTLINED_FUNCTION_31_1();
}

void protocol witness for Layer.isEveryParameterInitialized.getter in conformance ConstantPad2D()
{
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_0_11();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance MaxPool1D()
{
  return OUTLINED_FUNCTION_31_1();
}

void protocol witness for Layer.isEveryParameterInitialized.getter in conformance MaxPool2D()
{
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_0_11();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance AveragePool1D()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance AveragePool2D()
{
  OUTLINED_FUNCTION_1_8();
  return OUTLINED_FUNCTION_31_1() & 1;
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Reshape()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance ScaledTanh()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Hardshrink()
{
  return OUTLINED_FUNCTION_31_1();
}

uint64_t sub_242A6B024()
{
  return OUTLINED_FUNCTION_31_1() & 1;
}

__n128 OUTLINED_FUNCTION_1_8()
{
  __n128 *v0;

  return v0[2];
}

uint64_t sub_242A6B0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    OUTLINED_FUNCTION_15_2();
    sub_242AC3258();
    v3 = v9;
    v4 = (uint64_t *)(v1 + 48);
    do
    {
      v5 = *v4;
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      swift_retain();
      if (v7 >= v6 >> 1)
        sub_242AC3258();
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_242A6B170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    OUTLINED_FUNCTION_15_2();
    sub_242AC315C();
    v3 = v11;
    v4 = (uint64_t *)(v1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      OUTLINED_FUNCTION_37_0();
      if (v8 >= v7 >> 1)
        sub_242AC315C();
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_242A6B22C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_242C48D7C();
    v4 = a1 + 48;
    do
    {
      v4 += 24;
      swift_retain();
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_242A6B2DC(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21;

  v21 = MEMORY[0x24BEE4AF8];
  sub_242AC3194();
  v3 = v21;
  v4 = *(_QWORD *)(a1 + 16);
  sub_242C480E0();
  v17 = v4;
  if (v4)
  {
    v5 = 0;
    v6 = (uint64_t *)(a1 + 48);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v9 = *(v6 - 2);
      v19[1] = v5;
      v19[2] = v9;
      v19[3] = v8;
      v20 = v7;
      sub_242C480E0();
      swift_retain();
      v10 = a2(v19, v5, v9, v8, &v20);
      v12 = v11;
      swift_release();
      swift_bridgeObjectRelease();
      v13 = v19[0];
      v21 = v3;
      v14 = *(_QWORD *)(v3 + 16);
      if (v14 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_242AC3194();
        v3 = v21;
      }
      ++v5;
      v6 += 3;
      *(_QWORD *)(v3 + 16) = v14 + 1;
      v15 = (_QWORD *)(v3 + 24 * v14);
      v15[4] = v10;
      v15[5] = v12;
      v15[6] = v13;
    }
    while (v17 != v5);
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_242A6B444(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  for (; v2; v2 = sub_242C48FC8())
  {
    v3 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v3 - 4, a1);
      else
        swift_retain();
      v4 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v5 = sub_242B89308();
      v6 = sub_242B89308();
      swift_release();
      if (v5 == v6)
      {
        swift_release();
        v7 = 1;
        goto LABEL_15;
      }
      ++v3;
      if (v4 == v2)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    sub_242C480E0();
  }
LABEL_14:
  swift_release();
  v7 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_242A6B598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  unsigned __int8 *v22;
  int v23;
  uint64_t v24;
  char v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  __n128 v40;
  _QWORD v41[12];
  uint64_t (*v42)(uint64_t);
  void (*v43)(char *, __n128);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;

  v41[7] = a8;
  v41[10] = a6;
  v41[11] = a7;
  v42 = a5;
  v46 = a9;
  v59 = *MEMORY[0x24BDAC8D0];
  v47 = a10;
  v44 = *(_QWORD *)(a10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v14);
  v45 = (char *)v41 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v41[9] = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v41 - v20;
  v23 = *v22;
  v50 = *((_QWORD *)v22 + 1);
  v53 = *((_QWORD *)v22 + 2);
  v49 = v22[24];
  v41[8] = v24;
  v43 = *(void (**)(char *, __n128))(v24 + 16);
  v43((char *)v41 - v20, v19);
  v48 = a12;
  v52 = v21;
  sub_242ADAC68();
  v51 = v23;
  v41[2] = a1;
  if (v23)
  {
    if (v23 != 1)
      goto LABEL_8;
LABEL_6:
    v26 = 1;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_44_0();
  sub_242B93328();
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_3_7();
  if (v55)
  {
    v25 = *(_BYTE *)(v55 + 24);
    OUTLINED_FUNCTION_7_5();
    OUTLINED_FUNCTION_3_6();
    if ((v25 & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    OUTLINED_FUNCTION_7_5();
    OUTLINED_FUNCTION_3_6();
  }
LABEL_8:
  v26 = 2;
LABEL_9:
  v56.n128_u8[0] = v26;
  v27 = v48;
  v28 = (uint64_t)v52;
  Layer.prepare(for:)((NeuralNetworks::LearningPhase)&v56);
  v29 = v42(a3);
  v30 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 88);
  v41[4] = v29;
  v54 = v30(a3);
  v31 = sub_242C480E0();
  v32 = sub_242A6B0B8(v31);
  OUTLINED_FUNCTION_136();
  v56 = 0uLL;
  Array<A>.resolve(descriptor:)(&v56, v32, v33, v34, v35, v36, v37, v38, v39, v40);
  OUTLINED_FUNCTION_3_6();
  v56.n128_u8[0] = v51;
  v56.n128_u64[1] = v50;
  v57 = v53;
  v58 = v49;
  sub_242A6C38C(v28, (uint64_t)&v56, v46, v47, a11, v27);
}

void sub_242A6C38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;

  v17 = a6;
  v14[3] = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48E30();
  v15 = MEMORY[0x2494EDE24](&unk_242C52AB0, v9);
  v11 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v9, v15, v10);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v19 = *(_QWORD *)(a2 + 8);
  v18 = *(_QWORD *)(a2 + 16);
  v20 = *(unsigned __int8 *)(a2 + 24);
  type metadata accessor for AnyLayerVariablePathCache();
  sub_242BA21DC(a5);
}

uint64_t sub_242A6CD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v9 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
  Layer.callAsFunction(_:)(a2, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a5);
}

uint64_t sub_242A6CE3C(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_22;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  for (; v4; v4 = sub_242C48FC8())
  {
    v5 = 0;
    v21 = v3 & 0xC000000000000001;
    v19 = (_OWORD *)(a2 + 40);
    v23 = MEMORY[0x24BEE4AF8];
    v17 = v4;
    v18 = v3;
    v20 = a2;
    while (1)
    {
      if (v21)
        MEMORY[0x2494EC84C](v5, v3);
      else
        swift_retain();
      if (__OFADD__(v5++, 1))
        break;
      v7 = *(_QWORD *)(a2 + 16);
      if (v7)
      {
        sub_242C480E0();
        v8 = v19;
        while (1)
        {
          v22 = *v8;
          v9 = *((_QWORD *)v8 - 1);
          swift_retain();
          sub_242C480E0();
          swift_retain();
          v10 = sub_242B89308();
          swift_release();
          if (v10 == sub_242B89308())
            break;
          v8 = (_OWORD *)((char *)v8 + 24);
          swift_release();
          swift_bridgeObjectRelease();
          if (!--v7)
          {
            swift_release();
            a2 = v20;
            swift_bridgeObjectRelease();
            v4 = v17;
            v3 = v18;
            goto LABEL_19;
          }
        }
        swift_release();
        a2 = v20;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_242A5E8EC();
          v23 = v14;
        }
        v4 = v17;
        v3 = v18;
        v11 = *(_QWORD *)(v23 + 16);
        v12 = v22;
        if (v11 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_242A5E8EC();
          v12 = v22;
          v23 = v15;
        }
        *(_QWORD *)(v23 + 16) = v11 + 1;
        v13 = v23 + 24 * v11;
        *(_QWORD *)(v13 + 32) = v9;
        *(_OWORD *)(v13 + 40) = v12;
      }
      else
      {
        swift_release();
      }
LABEL_19:
      if (v5 == v4)
        goto LABEL_24;
    }
    __break(1u);
LABEL_22:
    sub_242C480E0();
  }
  v23 = MEMORY[0x24BEE4AF8];
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_242A6D0A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];
  int v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  int v44;
  _QWORD v45[21];
  uint64_t v46;

  v33 = a4;
  v34 = a5;
  v32 = a3;
  type metadata accessor for LazyTensorFunctionBuilder();
  v15 = sub_242A6B22C(a2);
  LOBYTE(v45[0]) = a6;
  v45[1] = MEMORY[0x24BEE4B08];
  if (!sub_242BABFE0(v15, (char *)v45))
  {
    v22 = type metadata accessor for Function.CompilationError(0, a8, a9, v16);
    MEMORY[0x2494EDE24](&protocol conformance descriptor for Function<A, B>.CompilationError, v22);
    swift_allocError();
    v23 = 0x8000000242C65510;
    v25 = v24;
    v26 = 0xD000000000000027;
LABEL_7:
    sub_242C3A000(v26, v23, v25);
    swift_willThrow();
    return a8;
  }
  sub_242BAA030();
  v18 = v17;
  swift_release();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    v28 = type metadata accessor for Function.CompilationError(0, a8, a9, v27);
    MEMORY[0x2494EDE24](&protocol conformance descriptor for Function<A, B>.CompilationError, v28);
    swift_allocError();
    v26 = 0xD00000000000007CLL;
    v23 = 0x8000000242C65540;
    v25 = v29;
    goto LABEL_7;
  }
  sub_242A670D8(v18 + 32, (uint64_t)v45);
  v19 = swift_bridgeObjectRelease();
  v20 = *a1;
  MEMORY[0x24BDAC7A8](v19);
  v31[2] = v45;
  sub_242C480E0();
  v21 = sub_242C00698((uint64_t)sub_242A70150, (uint64_t)v31, v20);
  v31[4] = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v21;
  sub_242A66290((uint64_t)&v46, (uint64_t)&v37);
  sub_242A6FE24(a7, (uint64_t)v35);
  if (*((_QWORD *)&v38 + 1))
  {
    sub_242A6FDE8((uint64_t)v35);
    v41 = v37;
    v42 = v38;
    v43 = v39;
    v44 = v40;
  }
  else
  {
    v41 = v35[0];
    v42 = v35[1];
    v43 = v35[2];
    v44 = v36;
    sub_242A662D8((uint64_t)&v37);
  }
  a8 = sub_242A6DF9C((uint64_t)v45, *a1, v32, v33, 0, 0, v34, a2, 0, (uint64_t)&v41, a8, a9);
  sub_242A6FDE8((uint64_t)&v41);
  sub_242A6945C(v45);
  return a8;
}

void sub_242A6D388(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_257220510 != -1)
    swift_once();
  v2 = qword_257259970;
  v3 = unk_257259978;
  v4 = __swift_project_boxed_opaque_existential_1(qword_257259958, qword_257259970);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v8 + 16))(v7, v5);
  sub_242B76988(1, (uint64_t)v7, v2, v3, a1);
}

uint64_t sub_242A6D444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __int128 v45;
  __int128 v46;
  void (*v47)(void);
  uint64_t v50;
  uint64_t v53;
  _OWORD v54[3];
  int v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  int v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  int v63;
  _BYTE v64[168];
  uint64_t v65;
  uint64_t v66;

  v9 = v8;
  v66 = a8;
  *(_QWORD *)v64 = a2;
  sub_242C480E0();
  sub_242C480E0();
  v50 = a3;
  sub_242B65108();
  v13 = v9;
  v14 = sub_242A6B0B8(a1);
  v53 = *(_QWORD *)v64;
  v15 = sub_242A6B0B8(*(uint64_t *)v64);
  v16 = v9;
  v17 = (void (*)(void))sub_242BF7904(v14, v15, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a1 + 16);
  v19 = MEMORY[0x24BEE4AF8];
  if (v18)
  {
    v47 = v17;
    *(_QWORD *)&v56 = MEMORY[0x24BEE4AF8];
    sub_242AC3194();
    v19 = v56;
    v20 = (uint64_t *)(a1 + 48);
    do
    {
      v21 = *(v20 - 1);
      v22 = *v20;
      *(_QWORD *)&v60 = *(v20 - 2);
      *((_QWORD *)&v60 + 1) = v21;
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_242C48314();
      *(_OWORD *)v64 = v60;
      swift_retain();
      *(_QWORD *)&v60 = v22;
      Tensor.init(onesLike:)((uint64_t *)&v60, &v64[16]);
      swift_release();
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)v64;
      v24 = *(_OWORD *)&v64[8];
      *(_QWORD *)&v56 = v19;
      v25 = *(_QWORD *)(v19 + 16);
      if (v25 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        v46 = *(_OWORD *)&v64[8];
        sub_242AC3194();
        v24 = v46;
        v19 = v56;
      }
      *(_QWORD *)(v19 + 16) = v25 + 1;
      v26 = v19 + 24 * v25;
      *(_QWORD *)(v26 + 32) = v23;
      *(_OWORD *)(v26 + 40) = v24;
      v20 += 3;
      --v18;
    }
    while (v18);
    v17 = v47;
    v16 = v13;
  }
  sub_242A6B0B8(v19);
  v17();
  v27 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v27);
  v28 = sub_242A6B2DC(v53, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t *))sub_242A6FE1C);
  v29 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  v30 = sub_242A6B22C(v28);
  v64[0] = 0;
  *(_QWORD *)&v64[8] = MEMORY[0x24BEE4B08];
  if (!sub_242BABFE0(v30, v64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = a7;
    v35 = type metadata accessor for Function.CompilationError(0, a7, v66, v34);
    MEMORY[0x2494EDE24](&protocol conformance descriptor for Function<A, B>.CompilationError, v35);
    swift_allocError();
    v36 = 0x8000000242C65510;
    v38 = v37;
    v39 = 0xD000000000000027;
LABEL_13:
    sub_242C3A000(v39, v36, v38);
    swift_willThrow();
    swift_release();
    return v29;
  }
  sub_242BAA030();
  v32 = v31;
  swift_release();
  if (*(_QWORD *)(v32 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = a7;
    v41 = type metadata accessor for Function.CompilationError(0, a7, v66, v40);
    MEMORY[0x2494EDE24](&protocol conformance descriptor for Function<A, B>.CompilationError, v41);
    swift_allocError();
    v39 = 0xD00000000000007CLL;
    v36 = 0x8000000242C65540;
    v38 = v42;
    goto LABEL_13;
  }
  sub_242A670D8(v32 + 32, (uint64_t)v64);
  swift_bridgeObjectRelease();
  sub_242C480E0();
  v33 = sub_242C480E0();
  sub_242A6CE3C(v33, a2);
  swift_bridgeObjectRelease();
  sub_242A66290((uint64_t)&v65, (uint64_t)&v56);
  sub_242A6FE24(a6, (uint64_t)v54);
  if (*((_QWORD *)&v57 + 1))
  {
    sub_242A6FDE8((uint64_t)v54);
    v60 = v56;
    v61 = v57;
    v62 = v58;
    v63 = v59;
  }
  else
  {
    v60 = v54[0];
    v61 = v54[1];
    v62 = v54[2];
    v63 = v55;
    sub_242A662D8((uint64_t)&v56);
  }
  sub_242B65108();
  *(_QWORD *)&v45 = 1684107879;
  *((_QWORD *)&v45 + 1) = 0xE400000000000000;
  v43 = sub_242A6DF9C((uint64_t)v64, v19, v50, a4, 0, 0, MEMORY[0x24BEE4AF8], v28, v45, (uint64_t)&v60, a7, v66);
  if (!v16)
    v29 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_242A6FDE8((uint64_t)&v60);
  sub_242A6945C(v64);
  return v29;
}

void sub_242A6D9C0()
{
  Layer.namedLayerStateKeyPaths(recursively:)();
}

uint64_t sub_242A6DCB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  type metadata accessor for TensorHandle();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain_n();
  sub_242BC995C();
  result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_242A6DD14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8[8];
  uint64_t v9;
  uint64_t v10;

  v8[0] = 1;
  v5 = MEMORY[0x24BEE4AF8];
  v9 = MEMORY[0x24BEE4AF8];
  sub_242A709D0((uint64_t)v8, a1);
  v6 = v10;
  sub_242A707C8(v5);
  swift_retain();
  sub_242A765B4((void (*)(uint64_t *__return_ptr))sub_242A702B0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = v6;
  swift_retain();
  result = swift_release();
  *a3 = v6;
  return result;
}

uint64_t sub_242A6DE00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  swift_beginAccess();
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_retain();
}

uint64_t sub_242A6DE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {
    sub_242C480E0();
  }
  else
  {
    sub_242A692CC();
    a1 = sub_242C48AE8();
  }
  swift_retain();
  return a1;
}

uint64_t sub_242A6DEF4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  sub_242C480E0();
  swift_retain();
  v6 = sub_242C480E0();
  v7 = sub_242A6B444(v6);
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    sub_242C480E0();
    result = swift_retain();
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
  }
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_242A6DF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD v53[6];
  _QWORD v54[6];
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t FunctionTypeMetadata1;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[30];
  _QWORD v64[10];
  uint64_t v65[30];
  uint64_t v66;
  __int128 v67;
  _BYTE v68[248];
  uint64_t v69;

  v62 = a12;
  FunctionTypeMetadata1 = a11;
  v55[1] = *((_QWORD *)&a9 + 1);
  sub_242A670D8(a1, (uint64_t)v68);
  type metadata accessor for LazyTensorFunctionBuilder();
  swift_allocObject();
  sub_242BAFD84((uint64_t)v68);
  v18 = v17;
  v59 = (_QWORD *)a2;
  OUTLINED_FUNCTION_37_0();
  sub_242C480E0();
  v60 = a3;
  sub_242B65108();
  OUTLINED_FUNCTION_44_0();
  v61 = a4;
  sub_242B65108();
  OUTLINED_FUNCTION_44_0();
  sub_242BAC338(v18);
  v65[0] = a8;
  v57 = a8;
  sub_242C480E0();
  sub_242C480E0();
  sub_242B65108();
  OUTLINED_FUNCTION_0_2();
  sub_242BAC4F0(v18, a8);
  v69 = MEMORY[0x24BEE4B08];
  v67 = a9;
  if (*((_QWORD *)&a9 + 1))
  {
    v56 = v12;
    sub_242C480E0();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    v19 = sub_242A6B170(a2);
    OUTLINED_FUNCTION_3_6();
    sub_242A706AC(v19);
    v21 = v20;
    swift_bridgeObjectRelease();
    v69 = v21;
    v22 = sub_242A6B170(v65[0]);
    v56 = v12;
    OUTLINED_FUNCTION_136();
    sub_242A706AC(v22);
    v24 = v23;
    OUTLINED_FUNCTION_44_0();
    LOBYTE(v22) = sub_242A6ED00(v24, v21);
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_136();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v67 = xmmword_242C4C800;
    }
  }
  v25 = v62;
  v26 = FunctionTypeMetadata1;
  OUTLINED_FUNCTION_31_2();
  _s14descr25138D269C9IOMappingVMa(v27, v28, v29, v30);
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  v66 = sub_242C47FFC();
  MEMORY[0x24BDAC7A8](v66);
  v53[2] = v26;
  v53[3] = v62;
  sub_242BAC800();
  v31 = OUTLINED_FUNCTION_4_6();
  sub_242C48A64();
  swift_getFunctionTypeMetadata1();
  v32 = sub_242C47FFC();
  *(_QWORD *)(v31 + 16) = v32;
  MEMORY[0x24BDAC7A8](v32);
  v53[4] = v26;
  v53[5] = v25;
  v54[0] = v59;
  v54[1] = v18;
  v62 = v31;
  v54[2] = v31;
  v54[3] = v60;
  v54[4] = v61;
  sub_242BA9FD8();
  sub_242BAA030();
  if (*(_QWORD *)(v33 + 16) == 1)
  {
    v61 = a10;
    sub_242A670D8(v33 + 32, (uint64_t)v65);
    OUTLINED_FUNCTION_136();
    v34 = swift_beginAccess();
    v59 = v55;
    v63[0] = *(_QWORD *)(v62 + 16);
    MEMORY[0x24BDAC7A8](v34);
    OUTLINED_FUNCTION_30_1((uint64_t)v55);
    v35 = sub_242C48650();
    OUTLINED_FUNCTION_0_2();
    v36 = swift_checkMetadataState();
    MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v35);
    v60 = sub_242C4841C();
    v37 = OUTLINED_FUNCTION_26_1();
    v59 = v54;
    v64[0] = v66;
    MEMORY[0x24BDAC7A8](v37);
    OUTLINED_FUNCTION_30_1((uint64_t)v54);
    v38 = sub_242C48650();
    OUTLINED_FUNCTION_0_2();
    v39 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v38);
    v41 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242A6FF0C, (uint64_t)v53, v38, v36, MEMORY[0x24BEE4078], v39, MEMORY[0x24BEE40A8], v40);
    OUTLINED_FUNCTION_13_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_31_2();
    _s14descr25138D269C11ComputePassCMa(v42, v43, v44, v45);
    sub_242A6FE24(v61, (uint64_t)v64);
    sub_242A670D8((uint64_t)v65, (uint64_t)v63);
    v46 = sub_242BBBC10(v60, v41, (uint64_t)v64, v63);
    sub_242A6945C(v65);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_31_2();
    v46 = type metadata accessor for Function.CompilationError(v47, v48, v49, v50);
    MEMORY[0x2494EDE24](&protocol conformance descriptor for Function<A, B>.CompilationError, v46);
    swift_allocError();
    sub_242C3A000(0xD00000000000007ALL, 0x8000000242C655C0, v51);
    swift_willThrow();
    swift_release();
    OUTLINED_FUNCTION_13_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v46;
}

uint64_t *sub_242A6E554(uint64_t *result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (**v18)(_QWORD, _QWORD);
  _BYTE v19[56];
  __int128 v20;
  char v21;
  __int128 v22;
  const char *v23;
  uint64_t v24;
  char v25;
  char v26;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(_QWORD *)(a6 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v7 = result;
  v8 = *(_QWORD *)(a6 + 8 * a2 + 32);
  v9 = *(_QWORD *)(v8 + 16);
  swift_retain_n();
  swift_retain();
  v10 = sub_242BCA40C();
  objc_msgSend(v10, sel_lock);

  swift_beginAccess();
  sub_242A6FF34(v9 + 40, (uint64_t)&v20);
  if (v26)
  {
    if (v26 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_242A6FFE8((uint64_t)&v22 + 8);
    }
    else
    {
      sub_242A6FF70((uint64_t)&v20);
    }
    v12 = sub_242BCA40C();
    objc_msgSend(v12, sel_unlock);
    swift_release_n();

    sub_242C480E0();
    v13 = *(_QWORD *)(v8 + 16);
    swift_retain();
    v14 = sub_242BD0D40((uint64_t)sub_242B0C174);
    v16 = v15;
    *(_QWORD *)&v20 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/Un"
                      "aryArithmeticOps.swift";
    *((_QWORD *)&v20 + 1) = 120;
    v21 = 2;
    v22 = xmmword_242C4C810;
    v23 = "init(id:operator:operand:creationSite:backward:)";
    v24 = 48;
    v25 = 2;
    type metadata accessor for UnaryArithmeticOperation();
    swift_allocObject();
    v17 = sub_242ABCF44(0, 0, 0, 13, v13, &v20, v14, v16);
    v18 = (uint64_t (**)(_QWORD, _QWORD))sub_242A70094();
    sub_242A66290(v13 + 168, (uint64_t)v19);
    sub_242BC9830(v17, v18, 0, (uint64_t)v19, v7);
    swift_release();
  }
  else
  {
    sub_242A6FF70((uint64_t)&v20);
    v11 = sub_242BCA40C();
    objc_msgSend(v11, sel_unlock);
    swift_release_n();

    sub_242C480E0();
    *v7 = v8;
  }
  return (uint64_t *)a3;
}

BOOL sub_242A6E794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_242A6E7C8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_242BAC260, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_242BAC260);
}

BOOL sub_242A6E7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  sub_242C480E0();
  swift_retain();
  v17 = a8(a7, a1, a2, a3);
  LOBYTE(a3) = v18;
  OUTLINED_FUNCTION_37_0();
  swift_retain();
  v19 = a9(a7, a4, a5, a6);
  if ((a3 & 1) != 0)
    v17 = *(_QWORD *)(a7 + 16);
  if ((v20 & 1) != 0)
    v19 = *(_QWORD *)(a7 + 16);
  return v17 < v19;
}

uint64_t sub_242A6E888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain_n();
  v4 = 0;
  for (i = a2 + 48; ; i += 24)
  {
    v6 = *(_QWORD *)(i - 16);
    swift_retain();
    sub_242C480E0();
    swift_retain();
    v7 = sub_242B89308();
    swift_release();
    if (v7 == sub_242B89308())
      break;
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_242A6E988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain_n();
  v4 = 0;
  for (i = a2 + 48; ; i += 24)
  {
    v6 = *(_QWORD *)(i - 16);
    swift_retain();
    sub_242C480E0();
    swift_retain();
    v7 = sub_242B89308();
    swift_release();
    if (v7 == sub_242B89308())
      break;
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_242A6EA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain_n();
  v4 = 0;
  for (i = a2 + 48; ; i += 24)
  {
    v6 = *(_QWORD *)(i - 16);
    swift_retain();
    sub_242C480E0();
    swift_retain();
    v7 = sub_242B89308();
    swift_release();
    if (v7 == sub_242B89308())
      break;
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_242A6EB90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain_n();
  v4 = 0;
  for (i = a2 + 48; ; i += 24)
  {
    v6 = *(_QWORD *)(i - 16);
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_44_0();
    swift_retain();
    v7 = sub_242B89308();
    swift_release();
    if (v7 == sub_242B89308())
      break;
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      OUTLINED_FUNCTION_34_1();
      return 0;
    }
  }
  swift_release();
  OUTLINED_FUNCTION_34_1();
  return v6;
}

uint64_t sub_242A6EC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a3;
  if (a2)
  {
    sub_242C480E0();
    sub_242C48314();
    sub_242C48314();
    return a3;
  }
  else
  {
    sub_242C480E0();
  }
  return v3;
}

uint64_t sub_242A6ED00(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v32 = v4;
  v33 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  sub_242C480E0();
  result = sub_242C480E0();
  v11 = 0;
  while (1)
  {
    v12 = v11;
    if (!v8)
      break;
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v11 << 6);
LABEL_29:
    if (*(_QWORD *)(v5 + 16))
    {
      v18 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v14);
      v20 = *v18;
      v19 = v18[1];
      sub_242C49340();
      sub_242C480E0();
      sub_242C4817C();
      v21 = sub_242C49394();
      v22 = -1 << *(_BYTE *)(v5 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + 48);
        v25 = (_QWORD *)(v24 + 16 * v23);
        v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_242C4925C() & 1) != 0)
        {
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_47:
          sub_242A6FF2C();
          return v30;
        }
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_242C4925C() & 1) != 0)
            goto LABEL_46;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v15 >= v31)
    goto LABEL_49;
  v16 = *(_QWORD *)(v33 + 8 * v15);
  ++v11;
  if (v16)
    goto LABEL_28;
  v11 = v12 + 2;
  if (v12 + 2 >= v31)
    goto LABEL_49;
  v16 = *(_QWORD *)(v33 + 8 * v11);
  if (v16)
    goto LABEL_28;
  v11 = v12 + 3;
  if (v12 + 3 >= v31)
    goto LABEL_49;
  v16 = *(_QWORD *)(v33 + 8 * v11);
  if (v16)
  {
LABEL_28:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_29;
  }
  v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    v30 = 1;
    goto LABEL_47;
  }
  v16 = *(_QWORD *)(v33 + 8 * v17);
  if (v16)
  {
    v11 = v12 + 4;
    goto LABEL_28;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v31)
      goto LABEL_49;
    v16 = *(_QWORD *)(v33 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_28;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_242A6EFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v14 = sub_242A6EA8C(a2, a3);
  if (!v15)
  {
    v14 = sub_242A6EB90(a2, a4);
    if (!v15)
    {
      sub_242C48C38();
      sub_242C48314();
      sub_242BC9724();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      sub_242A59170();
    }
  }
  v18 = v14;
  v19 = v15;
  v20 = v16;
  v21 = v17;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a10;
  *(_QWORD *)(v22 + 24) = a11;
  *(_QWORD *)(v22 + 32) = a1;
  *(_QWORD *)(v22 + 40) = v18;
  *(_QWORD *)(v22 + 48) = v19;
  *(_QWORD *)(v22 + 56) = v20;
  *(_BYTE *)(v22 + 64) = v21;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a10;
  v23[3] = a11;
  v23[4] = sub_242A7001C;
  v23[5] = v22;
  _s14descr25138D269C9IOMappingVMa(255, a10, a11, v24);
  swift_getFunctionTypeMetadata1();
  sub_242C48650();
  sub_242C480E0();
  swift_retain();
  sub_242C48620();
  if ((a6 & 1) != 0
    || (v25 = *a7, sub_242C480E0(), sub_242AFCE44(v18, v19, v25), v27 = v26, swift_bridgeObjectRelease(), (v27 & 1) != 0))
  {
    v29 = *a8;
    v28 = a8[1];
    sub_242C480E0();
  }
  else
  {
    v29 = 0;
    v28 = 0;
  }
  sub_242A6EC80(v29, v28, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242A692CC();
  sub_242C48AE8();
  swift_bridgeObjectRelease();
  sub_242BAC75C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A6F2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD v17[3];

  v11 = *(_QWORD *)(a1 + 152);
  sub_242B4B240(a2, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0)
  {
    sub_242C480E0();
    MEMORY[0x2494EC84C](a2, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  v12 = sub_242BAC6E4();
  v14 = v13;
  swift_release();
  sub_242BBBBFC(a5, a3, a4, v12, v14, a2, (uint64_t)v17);
  v15 = v17[1];
  *a6 = v17[0];
  a6[1] = v15;
  a6[2] = v17[2];
  return sub_242C480E0();
}

uint64_t sub_242A6F3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v14;
  id v15;
  void *v16;
  __objc2_class *Class;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v26[2];
  char v27;
  char v28;
  _OWORD v29[2];
  __int128 v30;
  int v31;
  char v32;

  swift_retain();
  v14 = sub_242BCA40C();
  objc_msgSend(v14, sel_lock);

  swift_beginAccess();
  sub_242A6FF34(a1 + 40, (uint64_t)v29);
  if (v32)
  {
    if (v32 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_242A6FFE8((uint64_t)&v30);
    }
    else
    {
      sub_242A6FF70((uint64_t)v29);
    }
    v18 = sub_242BCA40C();
    objc_msgSend(v18, sel_unlock);
    swift_release();

    goto LABEL_9;
  }
  sub_242A6FF70((uint64_t)v29);
  v15 = sub_242BCA40C();
  objc_msgSend(v15, sel_unlock);
  swift_release();

  sub_242BC97A8();
  if (!v16
    || (Class = (__objc2_class *)object_getClass(v16),
        swift_unknownObjectRelease(),
        Class != _TtC14NeuralNetworks14InputOperation))
  {
LABEL_9:
    v26[0] = *(_QWORD *)(a1 + 152);
    v28 = *(_BYTE *)(a1 + 160);
    type metadata accessor for TensorRepresentation();
    memset(v29, 0, sizeof(v29));
    v30 = 0u;
    v31 = 0;
    swift_allocObject();
    sub_242C480E0();
    v27 = 1;
    v19 = sub_242BCA728(v26, &v28, (uint64_t)v29, 0x100000000);
    swift_retain();
    sub_242BA9A2C(a1, (uint64_t)v19);
    swift_release();
    a1 = (uint64_t)v19;
    goto LABEL_10;
  }
  swift_retain();
LABEL_10:
  v20 = sub_242B89308();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a8;
  *(_QWORD *)(v21 + 24) = a9;
  *(_QWORD *)(v21 + 32) = v20;
  *(_QWORD *)(v21 + 40) = a2;
  *(_QWORD *)(v21 + 48) = a3;
  *(_QWORD *)(v21 + 56) = a4;
  *(_BYTE *)(v21 + 64) = a5;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a8;
  v22[3] = a9;
  v22[4] = sub_242A6FFC8;
  v22[5] = v21;
  v26[0] = (uint64_t)sub_242A6FFDC;
  v26[1] = (uint64_t)v22;
  swift_beginAccess();
  _s14descr25138D269C9IOMappingVMa(255, a8, a9, v23);
  sub_242C48A64();
  swift_getFunctionTypeMetadata1();
  sub_242C48650();
  sub_242C480E0();
  swift_retain();
  sub_242C48620();
  swift_endAccess();
  swift_release();
  return a1;
}

uint64_t sub_242A6F6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, _QWORD *a6@<X8>)
{
  unint64_t v6;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  _BYTE v29[8];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  LODWORD(v6) = a5;
  v11 = *(_QWORD *)(a1 + 88);
  if (v11 >> 62)
    goto LABEL_22;
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  if (v12)
  {
    while (1)
    {
      v27 = a3;
      v28 = v6;
      v6 = v11 & 0xC000000000000001;
      if ((v11 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](0, v11);
      else
        swift_retain();
      v13 = sub_242B89308();
      swift_release();
      if (v13 == a2)
        break;
      if (v12 == 1)
      {
LABEL_14:
        result = swift_bridgeObjectRelease();
        v18 = 0;
        v19 = 0;
        v12 = 0;
        goto LABEL_24;
      }
      v26 = a4;
      a4 = 5;
      while (1)
      {
        v14 = a4 - 4;
        if (v6)
        {
          a3 = MEMORY[0x2494EC84C](a4 - 4, v11);
        }
        else
        {
          a3 = *(_QWORD *)(v11 + 8 * a4);
          swift_retain();
        }
        v15 = sub_242B89308();
        swift_release();
        if (v15 == a2)
        {
          a4 = v26;
          goto LABEL_17;
        }
        v16 = a4 - 3;
        if (__OFADD__(v14, 1))
          break;
        ++a4;
        if (v16 == v12)
          goto LABEL_14;
      }
      __break(1u);
LABEL_22:
      sub_242C480E0();
      v12 = sub_242C48FC8();
      if (!v12)
        goto LABEL_23;
    }
    v14 = 0;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_242B4B240(v14, v6 == 0, v11);
    if (v6)
    {
      sub_242C480E0();
      MEMORY[0x2494EC84C](v14, v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v20 = sub_242BAC6E4();
    v22 = v21;
    swift_release();
    sub_242BBBBFC(v28, v27, a4, v20, v22, v14, (uint64_t)v29);
    v18 = v29[0];
    v19 = v30;
    v12 = v31;
    v23 = v32;
    v24 = v33;
    v25 = v34;
    result = sub_242C480E0();
  }
  else
  {
LABEL_23:
    result = swift_bridgeObjectRelease();
    v18 = 0;
    v19 = 0;
LABEL_24:
    v23 = 0;
    v24 = 0;
    v25 = 0;
  }
  *a6 = v18;
  a6[1] = v19;
  a6[2] = v12;
  a6[3] = v23;
  a6[4] = v24;
  a6[5] = v25;
  return result;
}

uint64_t sub_242A6F94C@<X0>(void (*a1)(_QWORD *__return_ptr)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  a1(v10);
  _s14descr25138D269C9IOMappingVMa(255, a2, a3, v7);
  v8 = sub_242C48A64();
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, v10, v8);
}

uint64_t sub_242A6F9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[3];
  int v35;

  v15 = sub_242A6E888(a2, a3);
  if (v16)
  {
    sub_242A6F3FC(a2, v15, v16, v17, 0, a4, a5, a8, a9);
LABEL_5:
    sub_242BAC858();
    goto LABEL_6;
  }
  v18 = sub_242A6E988(a2, a6);
  if (v19)
  {
    sub_242A6F3FC(a2, v18, v19, v20, 1, a4, a5, a8, a9);
    goto LABEL_5;
  }
  v22 = sub_242A6EB90(a2, a7);
  if (!v23)
  {
    v25 = swift_retain();
    v26 = sub_242BC9F84(v25, a2, 0, 0);
    v28 = v27;
    sub_242BC9724();
    v30 = v29;
    v32 = v31;
    type metadata accessor for TensorRepresentation();
    memset(v34, 0, sizeof(v34));
    v35 = 0;
    swift_allocObject();
    v33 = sub_242BCA944((uint64_t)v26, v28, v30, v32, (uint64_t)v34, 0x100000000);
    sub_242BA9A2C(a2, v33);
    return swift_release();
  }
  sub_242A6F3FC(a2, v22, v23, v24, 2, a4, a5, a8, a9);
  sub_242BAC858();
LABEL_6:
  swift_bridgeObjectRelease();
  return swift_release();
}

double sub_242A6FBC4@<D0>(void (**a1)(_OWORD *__return_ptr, uint64_t)@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[3];

  (*a1)(v7, a2);
  result = *(double *)v7;
  v5 = v7[1];
  v6 = v7[2];
  *a3 = v7[0];
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

__n128 sub_242A6FC18@<Q0>(void (**a1)(uint64_t *__return_ptr, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __n128 result;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  __int128 v9;
  uint64_t v10;

  (*a1)(&v7, a2);
  result = v8;
  v5 = v9;
  v6 = v10;
  *(_BYTE *)a3 = v7;
  *(__n128 *)(a3 + 8) = result;
  *(_OWORD *)(a3 + 24) = v5;
  *(_QWORD *)(a3 + 40) = v6;
  return result;
}

void sub_242A6FC7C(uint64_t *a1@<X0>, char a2@<W4>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = sub_242C480E0();
  }
  else
  {
    sub_242A692CC();
    v4 = sub_242C48AE8();
    v5 = v6;
  }
  *a3 = v4;
  a3[1] = v5;
  Layer.value<A>(for:)();
}

uint64_t sub_242A6FD54()
{
  uint64_t *v0;

  return sub_242A6CD88(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

void sub_242A6FD74(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_242A6FDAC(a1, a2);
}

void sub_242A6FD90(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_242A6FDAC(a1, a2);
}

void sub_242A6FDAC(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_242A6FC7C(a1, *(_BYTE *)(v2 + 56), a2);
}

uint64_t sub_242A6FDE8(uint64_t a1)
{
  destroy for ComputeDevice(a1);
  return a1;
}

uint64_t *sub_242A6FE1C(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_242A6E554(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16));
}

uint64_t sub_242A6FE24(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ComputeDevice(a2, a1);
  return a2;
}

uint64_t sub_242A6FE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A6EFDC(a1, a2, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56), *(uint64_t **)(v2 + 64), *(uint64_t **)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_242A6FE9C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242A6FEC0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242A6F9C0(a1, a2, v2[4], v2[5], v2[6], v2[7], v2[8], v2[2], v2[3]);
}

double sub_242A6FEF0@<D0>(void (**a1)(_OWORD *__return_ptr, uint64_t)@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242A6FBC4(a1, *(_QWORD *)(v2 + 32), a2);
}

double sub_242A6FF0C@<D0>(void (**a1)(uint64_t *__return_ptr, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = sub_242A6FC18(a1, *(_QWORD *)(v2 + 32), a2).n128_u64[0];
  return result;
}

uint64_t sub_242A6FF2C()
{
  return swift_release();
}

uint64_t sub_242A6FF34(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TensorRepresentation.ResolutionStage(a2, a1);
  return a2;
}

uint64_t sub_242A6FF70(uint64_t a1)
{
  destroy for TensorRepresentation.ResolutionStage(a1);
  return a1;
}

uint64_t sub_242A6FFA4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242A6FFC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242A6F6EC(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 64), a2);
}

uint64_t sub_242A6FFDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242A6F94C(*(void (**)(_QWORD *__return_ptr))(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_242A6FFE8(uint64_t a1)
{
  destroy for TensorRepresentation.SymbolicValue();
  return a1;
}

uint64_t sub_242A7001C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242A6F2F8(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 64), a2);
}

uint64_t sub_242A70030()
{
  swift_release();
  return swift_deallocObject();
}

double sub_242A70054@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;

  (*(void (**)(_OWORD *__return_ptr))(v1 + 32))(v5);
  v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

unint64_t sub_242A70094()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2572216C8;
  if (!qword_2572216C8)
  {
    v1 = type metadata accessor for UnaryArithmeticOperation();
    result = MEMORY[0x2494EDE24](&unk_242C54FA0, v1);
    atomic_store(result, (unint64_t *)&qword_2572216C8);
  }
  return result;
}

uint64_t sub_242A700D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_242A6DE48(a1, a2, a3, *(unsigned __int8 *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_BYTE *)(v3 + 64));
}

uint64_t sub_242A70108@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 48))(*a1, a1[1], a1[2]);
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t sub_242A70150@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_242A6DEF4(a1, a2);
}

uint64_t sub_242A70168()
{
  return swift_deallocObject();
}

uint64_t sub_242A70178(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;

  return sub_242BA22F4(a1, a2, *(_BYTE *)(v2 + 32), *(_DWORD *)(v2 + 36));
}

unint64_t sub_242A70198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2572216D0;
  if (!qword_2572216D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221158);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2572216D0);
  }
  return result;
}

uint64_t sub_242A701DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242A70200()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242A7022C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_242A6DD14(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_242A70234@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_242A6DE00(v1, a1);
}

void *sub_242A7023C(const void *a1, void *a2)
{
  __swift_memcpy85_8(a2, a1);
  return a2;
}

uint64_t sub_242A70278(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_242A7028C();
  return result;
}

uint64_t sub_242A7028C()
{
  return swift_retain();
}

uint64_t sub_242A70294(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_242A6FF2C();
  return result;
}

uint64_t sub_242A702A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_242A6DCB4(v1, a1);
}

uint64_t sub_242A702B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_242BCB5B4(v1[2], v1[3], v1[4], a1);
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), v1);
}

void *OUTLINED_FUNCTION_3_7()
{
  uint64_t v0;
  uint64_t v1;

  return memcpy((void *)(v0 + 224), (const void *)(v1 - 240), 0x88uLL);
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_5_8()
{
  uint64_t v0;

  sub_242B933C0(v0 - 240);
}

uint64_t OUTLINED_FUNCTION_6_7()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  uint64_t v0;

  return sub_242A5DC30(v0 + 224);
}

BOOL OUTLINED_FUNCTION_9_5@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_10_4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = a1;
  sub_242AC3194();
}

void OUTLINED_FUNCTION_11_5(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = a1;
  sub_242AC3194();
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  uint64_t v0;

  return sub_242A6FDE8(v0 - 240);
}

void OUTLINED_FUNCTION_21_2()
{
  sub_242AC3194();
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  return type metadata accessor for ContextManager();
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return type metadata accessor for TensorHandle();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 - 32) = v3;
  *(_QWORD *)(a1 - 24) = v2;
  *(_QWORD *)(a1 - 16) = v1 + 408;
  return 0;
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_33_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a1 - 40) = v2;
  *(_QWORD *)(a1 - 32) = v1;
  *(_BYTE *)(a1 - 24) = *(_DWORD *)(v3 + 156);
  *(_QWORD *)(a1 - 16) = v4;
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_35_1()
{
  sub_242A5E8EC();
}

uint64_t OUTLINED_FUNCTION_36_1(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 72))(a1, *(_QWORD *)(v1 + 200));
}

uint64_t OUTLINED_FUNCTION_37_0()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_39_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  return sub_242C48650();
}

uint64_t ParameterInitializer.callAsFunction(shape:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7[8];
  uint64_t v8;

  v2 = v1;
  v7[0] = 1;
  v4 = MEMORY[0x24BEE4AF8];
  v8 = MEMORY[0x24BEE4AF8];
  sub_242A709D0((uint64_t)v7, v2);
  sub_242A70800(v4, MEMORY[0x24BEE0940], MEMORY[0x24BEE0948], (void (*)(uint64_t *, uint64_t))sub_242BA34E8);
  swift_retain();
  sub_242A765B4((void (*)(uint64_t *__return_ptr))sub_242A702B0);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_135();
  result = swift_unknownObjectRelease();
  *a1 = v6;
  return result;
}

void static ParameterInitializer.custom(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[10];
  char v4;

  v3[0] = a1;
  v3[1] = a2;
  v4 = 4;
  v2 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(v3, (void *)(v2 + 16));
  swift_retain();
  OUTLINED_FUNCTION_18_4();
}

uint64_t sub_242A7055C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_242C48E48();
  v0 = sub_242C48728();
  v6 = v0;
  sub_242C48E3C();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_41_2();
  v1 = v5;
  if (v5)
  {
    v2 = v4;
    do
    {
      sub_242BA2E04(&v4, v2, v1);
      OUTLINED_FUNCTION_31_3();
      OUTLINED_FUNCTION_41_2();
      v2 = v4;
      v1 = v5;
    }
    while (v5);
    v0 = v6;
  }
  OUTLINED_FUNCTION_8_1();
  return v0;
}

uint64_t sub_242A705EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[3];
  char v11;

  sub_242A77134();
  v2 = sub_242C48728();
  v9 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 32;
    do
    {
      v5 = *(_OWORD *)(a1 + v4 + 16);
      v10[0] = *(_OWORD *)(a1 + v4);
      v10[1] = v5;
      v10[2] = *(_OWORD *)(a1 + v4 + 32);
      v11 = *(_BYTE *)(a1 + v4 + 48);
      sub_242A77170((uint64_t)v10);
      sub_242BA2F30((uint64_t)&v8, (uint64_t)v10);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_135();
      v4 += 56;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_4_0();
    return v9;
  }
  else
  {
    v6 = v2;
    OUTLINED_FUNCTION_4_0();
  }
  return v6;
}

void sub_242A706AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_242C48728();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 40;
    do
    {
      v4 = OUTLINED_FUNCTION_42_1();
      v12 = (uint64_t *)OUTLINED_FUNCTION_43_1(v4, v5, v6, v7, v8, v9, v10, v11, v15, v16);
      sub_242BA2E04(v12, v13, v14);
      OUTLINED_FUNCTION_31_3();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_18();
}

void sub_242A7072C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  sub_242C48728();
  if (v2)
  {
    v3 = 0;
    while (v3 < *(_QWORD *)(a1 + 16))
    {
      ++v3;
      sub_242BA34E8();
      if (v2 == v3)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    OUTLINED_FUNCTION_8_1();
  }
}

uint64_t sub_242A707C8(uint64_t a1)
{
  return sub_242A70800(a1, MEMORY[0x24BEE0940], MEMORY[0x24BEE0948], (void (*)(uint64_t *, uint64_t))sub_242BA34E8);
}

uint64_t sub_242A707E4(uint64_t a1)
{
  return sub_242A70800(a1, MEMORY[0x24BEE1768], MEMORY[0x24BEE1778], (void (*)(uint64_t *, uint64_t))sub_242BA31C0);
}

uint64_t sub_242A70800(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_242C48728();
  v13 = v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      v9 = *(_QWORD *)(a1 + 8 * i + 32);
      a4(&v12, v9);
    }
    OUTLINED_FUNCTION_4_0();
    return v13;
  }
  else
  {
    v10 = v6;
    OUTLINED_FUNCTION_4_0();
  }
  return v10;
}

void sub_242A70888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_242C48728();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 40;
    do
    {
      v4 = OUTLINED_FUNCTION_42_1();
      v12 = (uint64_t *)OUTLINED_FUNCTION_43_1(v4, v5, v6, v7, v8, v9, v10, v11, v15, v16);
      sub_242BA36A0(v12, v13, v14);
      OUTLINED_FUNCTION_31_3();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_18();
}

void sub_242A70908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_34_2(a1, a2, a3);
  __asm { BR              X10 }
}

uint64_t sub_242A70938()
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_2();
  sub_242A662D8((uint64_t)&v2);
  return v1;
}

void sub_242A709D0(uint64_t a1, uint64_t a2)
{
  _BYTE v2[96];

  sub_242A76690(a2 + 16, (uint64_t)v2);
  __asm { BR              X10 }
}

uint64_t sub_242A70A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[24];
  uint64_t v5;

  v1 = v4[22];
  v2 = v4[23];
  sub_242A766C4((uint64_t)&v5, (uint64_t)v4);
  sub_242A71170(v1, v0, (uint64_t)v4, v1, v2);
  return sub_242A662D8((uint64_t)v4);
}

void sub_242A71170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9;
  uint64_t v10;
  void (*v11)(_DWORD *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  _DWORD v13[14];
  uint64_t v14;

  MEMORY[0x24BDAC7A8](a1);
  v13[0] = v9;
  v11 = *(void (**)(_DWORD *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(v10 + 16);
  v12 = sub_242A77290();
  v11(v13, MEMORY[0x24BEE14E8], &protocol witness table for Float, v12, a4, a5);
  v14 = a2;
  sub_242A66290(a3, (uint64_t)v13);
  sub_242C480E0();
  Tensor.init<A>(repeating:shape:scalarType:on:)();
}

void sub_242A71258(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t TupleTypeMetadata2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[56];
  uint64_t v53;

  v50 = a6;
  v51 = a2;
  v47 = a3;
  v48 = a4;
  v49 = a8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v39 - v15;
  v43 = *(_QWORD *)(a5 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v39 - v20;
  v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a7 + 16) + 24) + 8);
  v23 = sub_242C481F4();
  v44 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v42 = (char *)&v39 - v27;
  v53 = v51;
  sub_242C480E0();
  sub_242C48074();
  v51 = a1;
  sub_242C48074();
  v46 = v22;
  if ((sub_242C481C4() & 1) != 0)
  {
    v41 = v23;
    v28 = TupleTypeMetadata2;
    v29 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
    v40 = v26;
    v30 = v16;
    v31 = v43;
    v32 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v32(v30, v21, a5);
    v32(v29, v19, a5);
    v33 = &v13[*(int *)(v28 + 48)];
    v34 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v34(v13, v30, a5);
    v34(v33, v29, a5);
    v35 = v40;
    v32(v40, v13, a5);
    v36 = *(void (**)(char *, uint64_t))(v31 + 8);
    v36(v33, a5);
    v37 = &v13[*(int *)(v28 + 48)];
    v32(v13, v30, a5);
    v32(v37, v29, a5);
    v38 = v41;
    v32(&v35[*(int *)(v41 + 36)], v37, a5);
    v36(v13, a5);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v35, v38);
    if (v47)
      sub_242AC7BCC();
    sub_242A66290(v48, (uint64_t)v52);
    Tensor.init<A>(randomUniform:in:seed:scalarType:on:)();
  }
  else
  {
    __break(1u);
  }
}

void sub_242A715A4(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  unsigned __int16 v10;
  unsigned __int16 v11;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  __int16 v52;
  _OWORD v53[3];
  int v54;
  _BYTE v55[48];
  uint64_t v56;
  __int16 v57;

  v10 = a7.n128_u16[0];
  v11 = a6.n128_u16[0];
  sub_242A66290(a4, (uint64_t)v55);
  if (!*(_QWORD *)&v55[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v53);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v55);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v53[0] = *(_OWORD *)v55;
  v53[1] = *(_OWORD *)&v55[16];
  v53[2] = *(_OWORD *)&v55[32];
  v54 = v56;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE4678];
  *(_QWORD *)&v47 = &protocol witness table for Float16;
  LOWORD(__src) = v11;
  v49 = MEMORY[0x24BEE4678];
  v50 = &protocol witness table for Float16;
  WORD4(v47) = v10;
  v52 = 2050;
  *(_OWORD *)&v55[8] = xmmword_242C4CA40;
  *(_OWORD *)&v55[24] = xmmword_242C4CA50;
  *(_QWORD *)v55 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v55[40] = "init(id:state:shape:distribution:creationSite:)";
  v56 = 47;
  v57 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v55);
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v53);
  *a5 = v38;
}

void sub_242A71AF8(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  char *v12;
  unint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  os_unfair_lock_s *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  int v41;
  uint64_t v42;
  __int128 __src;
  __int128 v44;
  __int128 v45;
  int v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  _OWORD v51[3];
  int v52;
  _BYTE v53[48];
  uint64_t v54;
  __int16 v55;

  sub_242A66290(a5, (uint64_t)v53);
  if (!*(_QWORD *)&v53[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v51);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v53);
    if ((a4 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v12 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v13 = *(_QWORD *)(*(_QWORD *)v12 + 16);
    swift_beginAccess();
    v14 = *(_QWORD *)v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v12 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v13)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v14 = v37;
      *(_QWORD *)v12 = v37;
      if (v13)
      {
LABEL_7:
        if (v13 <= *(_QWORD *)(v14 + 16))
        {
          a3 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v51[0] = *(_OWORD *)v53;
  v51[1] = *(_OWORD *)&v53[16];
  v51[2] = *(_OWORD *)&v53[32];
  v52 = v54;
  if ((a4 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v16 = sub_242B40ACC(a3);
  __src = v17;
  *(_QWORD *)&v44 = v18;
  BYTE8(v44) = v16 & 1;
  *(_QWORD *)&v45 = v19;
  sub_242AC87F0(&v38);
  v20 = *(_QWORD *)(v38 + 16);
  swift_retain();
  swift_release();
  v42 = a1;
  *((_QWORD *)&v44 + 1) = &type metadata for BFloat16;
  *(_QWORD *)&v45 = sub_242A7730C();
  LOWORD(__src) = a2;
  v47 = &type metadata for BFloat16;
  v48 = v45;
  WORD4(v45) = HIWORD(a2);
  v50 = 2306;
  *(_OWORD *)&v53[8] = xmmword_242C4CA40;
  *(_OWORD *)&v53[24] = xmmword_242C4CA50;
  *(_QWORD *)v53 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v53[40] = "init(id:state:shape:distribution:creationSite:)";
  v54 = 47;
  v55 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v21 = sub_242B91B60(0, 0, 0, v20, &v42, &__src, (uint64_t)v53);
  sub_242A66290((uint64_t)v51, (uint64_t)&v38);
  if (!*((_QWORD *)&v39 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v38);
LABEL_16:
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0;
    goto LABEL_17;
  }
  __src = v38;
  v44 = v39;
  v45 = v40;
  v46 = v41;
  v22 = sub_242A772CC();
  v23 = qword_2572205A0;
  swift_retain();
  if (v23 != -1)
    swift_once();
  v24 = (uint64_t *)(qword_25722D2A8 + 16);
  v25 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v25);
  sub_242C000CC(v24, v22, &v38);
  os_unfair_lock_unlock(v25);
  v26 = v38;
  swift_release();
  if ((v46 & ~v26) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v38 = __src;
  v39 = v44;
  v40 = v45;
  v41 = v46;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v27 = v49;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v28 = v48;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v29 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v21, 0, (uint64_t)&v38, 0x100000000, v27, v28, v29);
  v31 = v30;
  type metadata accessor for TensorHandle();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v31;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v51, (uint64_t)&v38);
  if (*((_QWORD *)&v39 + 1))
  {
    __src = v38;
    v44 = v39;
    v45 = v40;
    v46 = v41;
    *(_QWORD *)&v38 = v32;
    Tensor.scalarType.getter();
    v35 = sub_242B090E0(v33, v34);
    if (v35 != 2)
      sub_242C19848((uint64_t)&__src, v35 & 1);
    *(_QWORD *)&v38 = v32;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v36 = v38;
  }
  else
  {
    sub_242A662D8((uint64_t)&v38);
    swift_retain();
    swift_release();
    swift_release();
    v36 = v32;
  }
  sub_242A662D8(a5);
  swift_release();
  sub_242A662D8((uint64_t)v51);
  *a6 = v36;
}

void sub_242A72044(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  __int16 v52;
  _OWORD v53[3];
  int v54;
  _BYTE v55[48];
  uint64_t v56;
  __int16 v57;

  sub_242A66290(a4, (uint64_t)v55);
  if (!*(_QWORD *)&v55[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v53);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v55);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v53[0] = *(_OWORD *)v55;
  v53[1] = *(_OWORD *)&v55[16];
  v53[2] = *(_OWORD *)&v55[32];
  v54 = v56;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE14E8];
  *(_QWORD *)&v47 = &protocol witness table for Float;
  *(float *)&__src = a6;
  v49 = MEMORY[0x24BEE14E8];
  v50 = &protocol witness table for Float;
  *((float *)&v47 + 2) = a7;
  v52 = 2562;
  *(_OWORD *)&v55[8] = xmmword_242C4CA40;
  *(_OWORD *)&v55[24] = xmmword_242C4CA50;
  *(_QWORD *)v55 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v55[40] = "init(id:state:shape:distribution:creationSite:)";
  v56 = 47;
  v57 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v55);
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v53);
  *a5 = v38;
}

void sub_242A72598(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  __int16 v52;
  _OWORD v53[3];
  int v54;
  _BYTE v55[48];
  uint64_t v56;
  __int16 v57;

  sub_242A66290(a4, (uint64_t)v55);
  if (!*(_QWORD *)&v55[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v53);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v55);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v53[0] = *(_OWORD *)v55;
  v53[1] = *(_OWORD *)&v55[16];
  v53[2] = *(_OWORD *)&v55[32];
  v54 = v56;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v47 = &protocol witness table for Double;
  *(double *)&__src = a6;
  v49 = MEMORY[0x24BEE13C8];
  v50 = &protocol witness table for Double;
  *((double *)&v47 + 1) = a7;
  v52 = 2818;
  *(_OWORD *)&v55[8] = xmmword_242C4CA40;
  *(_OWORD *)&v55[24] = xmmword_242C4CA50;
  *(_QWORD *)v55 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v55[40] = "init(id:state:shape:distribution:creationSite:)";
  v56 = 47;
  v57 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v55);
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v53);
  *a5 = v38;
}

void sub_242A72AEC(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  unsigned __int16 v10;
  unsigned __int16 v11;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  __int16 v52;
  _OWORD v53[3];
  int v54;
  _BYTE v55[48];
  uint64_t v56;
  __int16 v57;

  v10 = a7.n128_u16[0];
  v11 = a6.n128_u16[0];
  sub_242A66290(a4, (uint64_t)v55);
  if (!*(_QWORD *)&v55[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v53);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v55);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v53[0] = *(_OWORD *)v55;
  v53[1] = *(_OWORD *)&v55[16];
  v53[2] = *(_OWORD *)&v55[32];
  v54 = v56;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE4678];
  *(_QWORD *)&v47 = &protocol witness table for Float16;
  LOWORD(__src) = v11;
  v49 = MEMORY[0x24BEE4678];
  v50 = &protocol witness table for Float16;
  WORD4(v47) = v10;
  v52 = 2048;
  *(_OWORD *)&v55[8] = xmmword_242C4CA40;
  *(_OWORD *)&v55[24] = xmmword_242C4CA50;
  *(_QWORD *)v55 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v55[40] = "init(id:state:shape:distribution:creationSite:)";
  v56 = 47;
  v57 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v55);
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v53);
  *a5 = v38;
}

void sub_242A73040(uint64_t a1@<X0>, __int16 a2@<W1>, __int16 a3@<W2>, unint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  ValueMetadata *v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;
  _OWORD v53[3];
  int v54;
  _BYTE v55[48];
  uint64_t v56;
  __int16 v57;

  sub_242A66290(a6, (uint64_t)v55);
  if (!*(_QWORD *)&v55[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v53);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v55);
    if ((a5 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a4 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v53[0] = *(_OWORD *)v55;
  v53[1] = *(_OWORD *)&v55[16];
  v53[2] = *(_OWORD *)&v55[32];
  v54 = v56;
  if ((a5 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a4);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = &type metadata for BFloat16;
  *(_QWORD *)&v47 = sub_242A7730C();
  LOWORD(__src) = a2;
  v49 = &type metadata for BFloat16;
  v50 = v47;
  WORD4(v47) = a3;
  v52 = 2304;
  *(_OWORD *)&v55[8] = xmmword_242C4CA40;
  *(_OWORD *)&v55[24] = xmmword_242C4CA50;
  *(_QWORD *)v55 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v55[40] = "init(id:state:shape:distribution:creationSite:)";
  v56 = 47;
  v57 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v55);
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a6);
  swift_release();
  sub_242A662D8((uint64_t)v53);
  *a7 = v38;
}

void sub_242A7358C(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  __int16 v52;
  _OWORD v53[3];
  int v54;
  _BYTE v55[48];
  uint64_t v56;
  __int16 v57;

  sub_242A66290(a4, (uint64_t)v55);
  if (!*(_QWORD *)&v55[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v53);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v55);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v53[0] = *(_OWORD *)v55;
  v53[1] = *(_OWORD *)&v55[16];
  v53[2] = *(_OWORD *)&v55[32];
  v54 = v56;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE14E8];
  *(_QWORD *)&v47 = &protocol witness table for Float;
  *(float *)&__src = a6;
  v49 = MEMORY[0x24BEE14E8];
  v50 = &protocol witness table for Float;
  *((float *)&v47 + 2) = a7;
  v52 = 2560;
  *(_OWORD *)&v55[8] = xmmword_242C4CA40;
  *(_OWORD *)&v55[24] = xmmword_242C4CA50;
  *(_QWORD *)v55 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v55[40] = "init(id:state:shape:distribution:creationSite:)";
  v56 = 47;
  v57 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v55);
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v53);
  *a5 = v38;
}

void sub_242A73AE0(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  __int16 v52;
  _OWORD v53[3];
  int v54;
  _BYTE v55[48];
  uint64_t v56;
  __int16 v57;

  sub_242A66290(a4, (uint64_t)v55);
  if (!*(_QWORD *)&v55[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v53);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v55);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v53[0] = *(_OWORD *)v55;
  v53[1] = *(_OWORD *)&v55[16];
  v53[2] = *(_OWORD *)&v55[32];
  v54 = v56;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v47 = &protocol witness table for Double;
  *(double *)&__src = a6;
  v49 = MEMORY[0x24BEE13C8];
  v50 = &protocol witness table for Double;
  *((double *)&v47 + 1) = a7;
  v52 = 2816;
  *(_OWORD *)&v55[8] = xmmword_242C4CA40;
  *(_OWORD *)&v55[24] = xmmword_242C4CA50;
  *(_QWORD *)v55 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v55[40] = "init(id:state:shape:distribution:creationSite:)";
  v56 = 47;
  v57 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v55);
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v53, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v53);
  *a5 = v38;
}

void sub_242A74034(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  unsigned __int16 v10;
  unsigned __int16 v11;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  uint64_t v52;
  _UNKNOWN **v53;
  __int16 v54;
  _OWORD v55[3];
  int v56;
  _BYTE v57[48];
  uint64_t v58;
  __int16 v59;

  v10 = a7.n128_u16[0];
  v11 = a6.n128_u16[0];
  sub_242A66290(a4, (uint64_t)v57);
  if (!*(_QWORD *)&v57[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v55);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v57);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v55[0] = *(_OWORD *)v57;
  v55[1] = *(_OWORD *)&v57[16];
  v55[2] = *(_OWORD *)&v57[32];
  v56 = v58;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE4678];
  *(_QWORD *)&v47 = &protocol witness table for Float16;
  LOWORD(__src) = v11;
  v49 = MEMORY[0x24BEE4678];
  v50 = &protocol witness table for Float16;
  WORD4(v47) = v10;
  v52 = MEMORY[0x24BEE4678];
  v53 = &protocol witness table for Float16;
  LOWORD(v51) = 0x4000;
  v54 = 2049;
  *(_OWORD *)&v57[8] = xmmword_242C4CA40;
  *(_OWORD *)&v57[24] = xmmword_242C4CA50;
  *(_QWORD *)v57 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v57[40] = "init(id:state:shape:distribution:creationSite:)";
  v58 = 47;
  v59 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v57);
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v55);
  *a5 = v38;
}

void sub_242A74598(uint64_t a1@<X0>, __int16 a2@<W1>, __int16 a3@<W2>, unint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  ValueMetadata *v49;
  uint64_t v50;
  uint64_t v51;
  ValueMetadata *v52;
  uint64_t v53;
  __int16 v54;
  _OWORD v55[3];
  int v56;
  _BYTE v57[48];
  uint64_t v58;
  __int16 v59;

  sub_242A66290(a6, (uint64_t)v57);
  if (!*(_QWORD *)&v57[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v55);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v57);
    if ((a5 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a4 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v55[0] = *(_OWORD *)v57;
  v55[1] = *(_OWORD *)&v57[16];
  v55[2] = *(_OWORD *)&v57[32];
  v56 = v58;
  if ((a5 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a4);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = &type metadata for BFloat16;
  *(_QWORD *)&v47 = sub_242A7730C();
  LOWORD(__src) = a2;
  v49 = &type metadata for BFloat16;
  v50 = v47;
  WORD4(v47) = a3;
  v52 = &type metadata for BFloat16;
  v53 = v47;
  LOWORD(v51) = 0x4000;
  v54 = 2305;
  *(_OWORD *)&v57[8] = xmmword_242C4CA40;
  *(_OWORD *)&v57[24] = xmmword_242C4CA50;
  *(_QWORD *)v57 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v57[40] = "init(id:state:shape:distribution:creationSite:)";
  v58 = 47;
  v59 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v57);
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a6);
  swift_release();
  sub_242A662D8((uint64_t)v55);
  *a7 = v38;
}

void sub_242A74AF0(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  uint64_t v52;
  _UNKNOWN **v53;
  __int16 v54;
  _OWORD v55[3];
  int v56;
  _BYTE v57[48];
  uint64_t v58;
  __int16 v59;

  sub_242A66290(a4, (uint64_t)v57);
  if (!*(_QWORD *)&v57[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v55);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v57);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v55[0] = *(_OWORD *)v57;
  v55[1] = *(_OWORD *)&v57[16];
  v55[2] = *(_OWORD *)&v57[32];
  v56 = v58;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE14E8];
  *(_QWORD *)&v47 = &protocol witness table for Float;
  *(float *)&__src = a6;
  v49 = MEMORY[0x24BEE14E8];
  v50 = &protocol witness table for Float;
  *((float *)&v47 + 2) = a7;
  v52 = MEMORY[0x24BEE14E8];
  v53 = &protocol witness table for Float;
  LODWORD(v51) = 0x40000000;
  v54 = 2561;
  *(_OWORD *)&v57[8] = xmmword_242C4CA40;
  *(_OWORD *)&v57[24] = xmmword_242C4CA50;
  *(_QWORD *)v57 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v57[40] = "init(id:state:shape:distribution:creationSite:)";
  v58 = 47;
  v59 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v57);
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v55);
  *a5 = v38;
}

void sub_242A75050(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  __int128 __src;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  uint64_t v52;
  _UNKNOWN **v53;
  __int16 v54;
  _OWORD v55[3];
  int v56;
  _BYTE v57[48];
  uint64_t v58;
  __int16 v59;

  sub_242A66290(a4, (uint64_t)v57);
  if (!*(_QWORD *)&v57[24])
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)&__src);
    swift_release();
    sub_242A66290((uint64_t)&__src, (uint64_t)v55);
    sub_242A5DC30((uint64_t)&__src);
    sub_242A662D8((uint64_t)v57);
    if ((a3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    type metadata accessor for ContextManager();
    v14 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    swift_beginAccess();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v39;
      *(_QWORD *)v14 = v39;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          a2 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v55[0] = *(_OWORD *)v57;
  v55[1] = *(_OWORD *)&v57[16];
  v55[2] = *(_OWORD *)&v57[32];
  v56 = v58;
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(a2);
  __src = v19;
  *(_QWORD *)&v46 = v20;
  BYTE8(v46) = v18 & 1;
  *(_QWORD *)&v47 = v21;
  sub_242AC87F0(&v40);
  v22 = *(_QWORD *)(v40 + 16);
  swift_retain();
  swift_release();
  v44 = a1;
  *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v47 = &protocol witness table for Double;
  *(double *)&__src = a6;
  v49 = MEMORY[0x24BEE13C8];
  v50 = &protocol witness table for Double;
  *((double *)&v47 + 1) = a7;
  v52 = MEMORY[0x24BEE13C8];
  v53 = &protocol witness table for Double;
  v51 = 0x4000000000000000;
  v54 = 2817;
  *(_OWORD *)&v57[8] = xmmword_242C4CA40;
  *(_OWORD *)&v57[24] = xmmword_242C4CA50;
  *(_QWORD *)v57 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(_QWORD *)&v57[40] = "init(id:state:shape:distribution:creationSite:)";
  v58 = 47;
  v59 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  v23 = sub_242B91B60(0, 0, 0, v22, &v44, &__src, (uint64_t)v57);
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (!*((_QWORD *)&v41 + 1))
  {
    swift_retain();
    sub_242A662D8((uint64_t)&v40);
LABEL_16:
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
    goto LABEL_17;
  }
  __src = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v24 = sub_242A772CC();
  v25 = qword_2572205A0;
  swift_retain();
  if (v25 != -1)
    swift_once();
  v26 = (uint64_t *)(qword_25722D2A8 + 16);
  v27 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_242C000CC(v26, v24, &v40);
  os_unfair_lock_unlock(v27);
  v28 = v40;
  swift_release();
  if ((v48 & ~v28) != 0)
  {
    sub_242A6FDE8((uint64_t)&__src);
    goto LABEL_16;
  }
  v40 = __src;
  v41 = v46;
  v42 = v47;
  v43 = v48;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v29 = v51;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  sub_242B93328();
  sub_242B933C0((uint64_t)&__src);
  swift_release();
  v30 = (uint64_t)v50;
  swift_retain();
  sub_242A5DC30((uint64_t)&__src);
  type metadata accessor for TensorRepresentation();
  v31 = swift_allocObject();
  LOBYTE(__src) = 1;
  sub_242B4BE5C(v23, 0, (uint64_t)&v40, 0x100000000, v29, v30, v31);
  v33 = v32;
  type metadata accessor for TensorHandle();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  swift_retain();
  sub_242BC995C();
  sub_242A66290((uint64_t)v55, (uint64_t)&v40);
  if (*((_QWORD *)&v41 + 1))
  {
    __src = v40;
    v46 = v41;
    v47 = v42;
    v48 = v43;
    *(_QWORD *)&v40 = v34;
    Tensor.scalarType.getter();
    v37 = sub_242B090E0(v35, v36);
    if (v37 != 2)
      sub_242C19848((uint64_t)&__src, v37 & 1);
    *(_QWORD *)&v40 = v34;
    swift_retain();
    Tensor.place(on:)((uint64_t)&__src);
    sub_242A6FDE8((uint64_t)&__src);
    swift_release();
    swift_release();
    v38 = v40;
  }
  else
  {
    sub_242A662D8((uint64_t)&v40);
    swift_retain();
    swift_release();
    swift_release();
    v38 = v34;
  }
  sub_242A662D8(a4);
  swift_release();
  sub_242A662D8((uint64_t)v55);
  *a5 = v38;
}

uint64_t ParameterInitializer.deinit()
{
  uint64_t v0;

  sub_242A76664(v0 + 16);
  return v0;
}

uint64_t ParameterInitializer.__deallocating_deinit()
{
  uint64_t v0;

  sub_242A76664(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_242A755F0(char a1)
{
  if (!a1)
    return 0x6D726F66696E75;
  if (a1 == 1)
    return 0x6C616D726F6ELL;
  return 0xD000000000000010;
}

BOOL sub_242A75648(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_242A75658()
{
  return sub_242C4934C();
}

BOOL sub_242A7567C(char *a1, char *a2)
{
  return sub_242A75648(*a1, *a2);
}

void sub_242A75688()
{
  sub_242A7571C();
}

uint64_t sub_242A756A0()
{
  return sub_242A75658();
}

uint64_t sub_242A756AC()
{
  char *v0;

  return sub_242A755F0(*v0);
}

uint64_t sub_242A756B4(char a1)
{
  if (!a1)
    return 0x2820746F726F6C47;
  if (a1 == 1)
    return 0x6D69614B28206548;
  return 0x6E7543654CLL;
}

void sub_242A7571C()
{
  sub_242C49340();
  sub_242C4934C();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

void sub_242A75758()
{
  sub_242C49340();
  sub_242C4934C();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242A75790()
{
  char *v0;

  return sub_242A756B4(*v0);
}

uint64_t sub_242A75798()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 2)
LABEL_17:
    sub_242A59264();
  if (v1 == 2)
    return *(_QWORD *)(*(_QWORD *)v0 + 32);
  sub_242C480E0();
  sub_242A5B894();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v3 + 32);
    v6 = 1;
    while (1)
    {
      v7 = *v5++;
      v8 = v6 * v7;
      if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63)
        break;
      v6 = v8;
      if (!--v4)
        goto LABEL_11;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = 1;
LABEL_11:
  swift_bridgeObjectRelease();
  v9 = TensorShape.subscript.getter(v1 - 2);
  v2 = v9 * v8;
  if ((unsigned __int128)(v9 * (__int128)v8) >> 64 != (v9 * v8) >> 63)
    goto LABEL_15;
  v10 = TensorShape.subscript.getter(v1 - 1);
  if ((unsigned __int128)(v10 * (__int128)v8) >> 64 != (v10 * v8) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return v2;
}

uint64_t sub_242A758F0(unint64_t a1, char a2)
{
  char v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  ValueMetadata *v14;
  unint64_t v15;

  if ((a2 & 1) != 0)
    return 0;
  v2 = sub_242B40ACC(a1);
  v12 = v3;
  v5 = v4;
  v6 = v2;
  v8 = v7;
  v14 = &type metadata for PhiloxRandomNumberGenerator;
  v15 = sub_242A771D8();
  v9 = swift_allocObject();
  *(_QWORD *)&v13 = v9;
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 32) = v5;
  *(_BYTE *)(v9 + 40) = v6 & 1;
  *(_QWORD *)(v9 + 48) = v8;
  type metadata accessor for AnyRandomNumberGenerator();
  v10 = swift_allocObject();
  sub_242A64518(&v13, v10 + 16);
  return v10;
}

void static ParameterInitializer.zeros.getter()
{
  sub_242A75A5C(0.0);
}

void sub_242A759AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242A75AC0(a1, a2, a3, 0.0);
}

void ParameterInitializer.computeDevice.getter()
{
  uint64_t v0;
  _BYTE v1[88];
  _BYTE v2[88];

  sub_242A76690(v0 + 16, (uint64_t)v2);
  sub_242A76690((uint64_t)v2, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_242A759FC()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  swift_release();
  sub_242A766C4((uint64_t)&v2, v0);
  return sub_242A76664((uint64_t)&v3);
}

void static ParameterInitializer.ones.getter()
{
  sub_242A75A5C(1.0);
}

void sub_242A75A5C(float a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  _UNKNOWN **v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  int v8;
  char v9;

  v2 = a1;
  v3 = MEMORY[0x24BEE14E8];
  v4 = &protocol witness table for Float;
  v9 = 0;
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0;
  v1 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(&v2, (void *)(v1 + 16));
  OUTLINED_FUNCTION_18_4();
}

void sub_242A75AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242A75AC0(a1, a2, a3, 1.0);
}

void sub_242A75AC0(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v4;
  _UNKNOWN **v5;
  uint64_t v6;
  _UNKNOWN **v7;
  uint64_t v8;
  float v9;
  uint64_t v10;
  _UNKNOWN **v11;
  char v12;

  v9 = a4;
  sub_242A70908(a1, a2, a3);
  v6 = MEMORY[0x24BEE14E8];
  v7 = &protocol witness table for Float;
  if (v4)
  {
    v6 = v4;
    v7 = v5;
  }
  v10 = v6;
  v11 = v7;
  ParameterInitializer.computeDevice.getter();
  v12 = 0;
  v8 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(&v9, (void *)(v8 + 16));
  OUTLINED_FUNCTION_18_4();
}

void static ParameterInitializer.repeating(_:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[64];

  v5 = a4;
  v6 = a1;
  v7 = a2;
  sub_242A66290(a3, (uint64_t)v8);
  v8[60] = 0;
  v4 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(&v5, (void *)(v4 + 16));
  OUTLINED_FUNCTION_18_4();
}

void static ParameterInitializer.randomUniform(in:seed:scalarType:on:)(unint64_t a1, char a2)
{
  uint64_t v2;
  _BYTE v3[88];

  OUTLINED_FUNCTION_16_2(a1, a2);
  OUTLINED_FUNCTION_8_2();
  v3[84] = 1;
  v2 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(v3, (void *)(v2 + 16));
  OUTLINED_FUNCTION_7_6();
}

void static ParameterInitializer.randomNormal(mean:standardDeviation:seed:scalarType:on:)(unint64_t a1, char a2)
{
  uint64_t v2;
  _BYTE v3[88];

  OUTLINED_FUNCTION_16_2(a1, a2);
  OUTLINED_FUNCTION_8_2();
  v3[84] = 2;
  v2 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(v3, (void *)(v2 + 16));
  OUTLINED_FUNCTION_7_6();
}

void static ParameterInitializer.glorotUniform(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_14_2(a1, a2, a3, a4, a5, 0);
}

void static ParameterInitializer.glorotNormal(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_13_3(a1, a2, a3, a4, a5, 0);
}

void static ParameterInitializer.heUniform(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_14_2(a1, a2, a3, a4, a5, 1);
}

void static ParameterInitializer.heNormal(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_13_3(a1, a2, a3, a4, a5, 1);
}

void static ParameterInitializer.heUniform(scale:seed:scalarType:on:)(unint64_t a1, char a2)
{
  uint64_t v2;
  __int16 v3[42];
  char v4;

  v3[0] = 1;
  OUTLINED_FUNCTION_27_2(a1, a2);
  OUTLINED_FUNCTION_8_2();
  v4 = 3;
  v2 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(v3, (void *)(v2 + 16));
  OUTLINED_FUNCTION_7_6();
}

void static ParameterInitializer.leCunUniform(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_14_2(a1, a2, a3, a4, a5, 2);
}

void static ParameterInitializer.leCunNormal(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_13_3(a1, a2, a3, a4, a5, 2);
}

void sub_242A75CB4(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  _BYTE v8[88];

  v8[0] = a6;
  v8[1] = a7;
  OUTLINED_FUNCTION_27_2(a1, a2);
  OUTLINED_FUNCTION_8_2();
  v8[84] = 3;
  v7 = OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_3(v8, (void *)(v7 + 16));
  OUTLINED_FUNCTION_7_6();
}

void ParameterInitializer.description.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_34_2(a1, a2, a3);
  __asm { BR              X10 }
}

uint64_t sub_242A75D4C()
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_23_3();
  sub_242C48C38();
  sub_242C48314();
  sub_242C48704();
  sub_242C48314();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_34();
  sub_242A662D8((uint64_t)&v2);
  return v1;
}

uint64_t sub_242A76068()
{
  OUTLINED_FUNCTION_39_2();
  sub_242C48314();
  return swift_bridgeObjectRelease();
}

void sub_242A76090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ParameterInitializer.description.getter(a1, a2, a3);
}

void sub_242A760B0()
{
  uint64_t v0;
  _BYTE v1[88];

  sub_242A76690(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_242A760EC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release();
  return sub_242A766C4((uint64_t)&v2, v0);
}

void ParameterInitializer.place(on:)()
{
  sub_242A7615C();
}

void sub_242A7615C()
{
  uint64_t v0;
  _BYTE v1[88];

  sub_242A76690(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_242A7619C()
{
  uint64_t v0;
  uint64_t v1;
  int v3;
  __int128 v4;
  uint64_t v5;

  sub_242A76664(v1);
  *(_DWORD *)v1 = v3;
  *(_OWORD *)(v1 + 8) = v4;
  sub_242A6FE24(v0, v1 + 24);
  *(_BYTE *)(v1 + 84) = 0;
  return sub_242A662D8((uint64_t)&v5);
}

uint64_t ParameterInitializer.placed(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[88];
  _QWORD v10[11];

  sub_242A70908(a1, a2, a3);
  if (v6)
  {
    (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)(v5 + 8) + 32))(v10);
    if (LOBYTE(v10[0]) - 8 < 3)
      sub_242C19848(a1, (v10[0] & 7) == 2);
  }
  sub_242A76690(v3 + 16, (uint64_t)v9);
  sub_242A76690((uint64_t)v9, (uint64_t)v10);
  sub_242A7615C();
  sub_242A76664((uint64_t)v9);
  v7 = OUTLINED_FUNCTION_4_7();
  return OUTLINED_FUNCTION_19_3(v10, (void *)(v7 + 16));
}

void sub_242A76394(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242A76690(v1, a1);
  sub_242A7615C();
}

void sub_242A763D4()
{
  ParameterInitializer.place(on:)();
}

uint64_t sub_242A763F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = ParameterInitializer.placed(on:)(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t ParameterInitializer.cast(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[88];
  _BYTE v4[88];

  sub_242A76690(v0 + 16, (uint64_t)v3);
  sub_242A76498();
  sub_242A76664((uint64_t)v3);
  v1 = OUTLINED_FUNCTION_4_7();
  return OUTLINED_FUNCTION_19_3(v4, (void *)(v1 + 16));
}

void sub_242A76498()
{
  uint64_t v0;
  _BYTE v1[88];

  sub_242A76690(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_242A764E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;

  if (v5 == v2)
  {
    OUTLINED_FUNCTION_28_3();
  }
  else
  {
    *(_DWORD *)v0 = v4;
    *(_QWORD *)(v0 + 8) = v2;
    *(_QWORD *)(v0 + 16) = v1;
    sub_242A760B0();
    *(_BYTE *)(v0 + 84) = 0;
  }
  return sub_242A662D8((uint64_t)&v6);
}

void sub_242A765B4(void (*a1)(uint64_t *__return_ptr))
{
  id v2;
  id v3;
  uint64_t v4;

  v2 = sub_242BCA40C();
  objc_msgSend(v2, sel_lock);

  a1(&v4);
  v3 = sub_242BCA40C();
  objc_msgSend(v3, sel_unlock);

}

uint64_t sub_242A76664(uint64_t a1)
{
  destroy for ParameterInitializer.Kind(a1);
  return a1;
}

uint64_t sub_242A76690(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ParameterInitializer.Kind(a2, a1);
  return a2;
}

uint64_t sub_242A766C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257228D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_242A7670C()
{
  sub_242C48E78();
  sub_242C48314();
  sub_242C48E78();
  return 0;
}

uint64_t type metadata accessor for ParameterInitializer()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParameterInitializer()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for ParameterInitializer.Kind(uint64_t result)
{
  _QWORD *v1;
  int v2;

  v1 = (_QWORD *)result;
  v2 = *(unsigned __int8 *)(result + 84);
  while (2)
  {
    switch(v2)
    {
      case 0:
        if (!*(_QWORD *)(result + 48))
          return result;
        __swift_destroy_boxed_opaque_existential_1(result + 24);
        result = v1[8];
        break;
      case 1:
      case 2:
      case 3:
        result = swift_release();
        if (!v1[7])
          return result;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 4));
        result = v1[9];
        break;
      case 4:
        return swift_release();
      default:
        v2 = *(_DWORD *)result + 5;
        continue;
    }
    break;
  }
  if ((unint64_t)(result - 1) >= 2)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ParameterInitializer.Kind(uint64_t a1, uint64_t a2)
{
  int v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  char v31;
  __int128 v32;
  __int128 v33;

  v4 = *(unsigned __int8 *)(a2 + 84);
  while (2)
  {
    switch(v4)
    {
      case 0:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v5 = (_OWORD *)(a1 + 24);
        v6 = (_OWORD *)(a2 + 24);
        v7 = *(_QWORD *)(a2 + 48);
        if (v7)
        {
          v8 = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 48) = v7;
          *(_QWORD *)(a1 + 56) = v8;
          (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
          v9 = *(_QWORD *)(a2 + 64);
          if ((unint64_t)(v9 - 1) >= 2)
            v9 = swift_unknownObjectRetain();
          *(_QWORD *)(a1 + 64) = v9;
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
        }
        else
        {
          v29 = *(_OWORD *)(a2 + 40);
          *v5 = *v6;
          *(_OWORD *)(a1 + 40) = v29;
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
        }
        *(_BYTE *)(a1 + 84) = 0;
        return a1;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(_QWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 24) = v10;
        v11 = (_OWORD *)(a1 + 32);
        v12 = (_OWORD *)(a2 + 32);
        v13 = *(_QWORD *)(a2 + 56);
        swift_retain();
        if (v13)
        {
          v14 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = v13;
          *(_QWORD *)(a1 + 64) = v14;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 32, a2 + 32, v13);
          v15 = *(_QWORD *)(a2 + 72);
          if ((unint64_t)(v15 - 1) >= 2)
            v15 = swift_unknownObjectRetain();
          *(_QWORD *)(a1 + 72) = v15;
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        else
        {
          v30 = *(_OWORD *)(a2 + 48);
          *v11 = *v12;
          *(_OWORD *)(a1 + 48) = v30;
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        v31 = 1;
        goto LABEL_29;
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v16 = *(_QWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 24) = v16;
        v17 = (_OWORD *)(a1 + 32);
        v18 = (_OWORD *)(a2 + 32);
        v19 = *(_QWORD *)(a2 + 56);
        swift_retain();
        if (v19)
        {
          v20 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = v19;
          *(_QWORD *)(a1 + 64) = v20;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))(a1 + 32, a2 + 32, v19);
          v21 = *(_QWORD *)(a2 + 72);
          if ((unint64_t)(v21 - 1) >= 2)
            v21 = swift_unknownObjectRetain();
          *(_QWORD *)(a1 + 72) = v21;
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        else
        {
          v32 = *(_OWORD *)(a2 + 48);
          *v17 = *v18;
          *(_OWORD *)(a1 + 48) = v32;
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        v31 = 2;
        goto LABEL_29;
      case 3:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        v22 = *(_QWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 24) = v22;
        v23 = (_OWORD *)(a1 + 32);
        v24 = (_OWORD *)(a2 + 32);
        v25 = *(_QWORD *)(a2 + 56);
        swift_retain();
        if (v25)
        {
          v26 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = v25;
          *(_QWORD *)(a1 + 64) = v26;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 32, a2 + 32, v25);
          v27 = *(_QWORD *)(a2 + 72);
          if ((unint64_t)(v27 - 1) >= 2)
            v27 = swift_unknownObjectRetain();
          *(_QWORD *)(a1 + 72) = v27;
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        else
        {
          v33 = *(_OWORD *)(a2 + 48);
          *v23 = *v24;
          *(_OWORD *)(a1 + 48) = v33;
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        v31 = 3;
LABEL_29:
        *(_BYTE *)(a1 + 84) = v31;
        break;
      case 4:
        v28 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v28;
        *(_BYTE *)(a1 + 84) = 4;
        swift_retain();
        break;
      default:
        v4 = *(_DWORD *)a2 + 5;
        continue;
    }
    return a1;
  }
}

uint64_t assignWithCopy for ParameterInitializer.Kind(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 84);
    while (2)
    {
      switch(v4)
      {
        case 0:
          if (!*(_QWORD *)(a1 + 48))
            goto LABEL_12;
          __swift_destroy_boxed_opaque_existential_1(a1 + 24);
          v5 = *(_QWORD *)(a1 + 64);
          break;
        case 1:
        case 2:
        case 3:
          swift_release();
          if (!*(_QWORD *)(a1 + 56))
            goto LABEL_12;
          __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          v5 = *(_QWORD *)(a1 + 72);
          break;
        case 4:
          swift_release();
          goto LABEL_12;
        default:
          v4 = *(_DWORD *)a1 + 5;
          continue;
      }
      break;
    }
    if ((unint64_t)(v5 - 1) >= 2)
      swift_unknownObjectRelease();
LABEL_12:
    v6 = *(unsigned __int8 *)(a2 + 84);
    while (2)
    {
      switch(v6)
      {
        case 0:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          v7 = (_OWORD *)(a1 + 24);
          v8 = (__int128 *)(a2 + 24);
          v9 = *(_QWORD *)(a2 + 48);
          if (v9)
          {
            *(_QWORD *)(a1 + 48) = v9;
            *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
            (**(void (***)(_OWORD *, __int128 *))(v9 - 8))(v7, v8);
            v10 = *(_QWORD *)(a2 + 64);
            if ((unint64_t)(v10 - 1) >= 2)
              v10 = swift_unknownObjectRetain();
            *(_QWORD *)(a1 + 64) = v10;
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
          }
          else
          {
            v18 = *v8;
            v19 = *(_OWORD *)(a2 + 40);
            v20 = *(_OWORD *)(a2 + 56);
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 40) = v19;
            *(_OWORD *)(a1 + 56) = v20;
            *v7 = v18;
          }
          *(_BYTE *)(a1 + 84) = 0;
          return a1;
        case 1:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          v11 = *(_QWORD *)(a2 + 56);
          swift_retain();
          if (v11)
          {
            *(_QWORD *)(a1 + 56) = v11;
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 32, a2 + 32, v11);
            v12 = *(_QWORD *)(a2 + 72);
            if ((unint64_t)(v12 - 1) >= 2)
              v12 = swift_unknownObjectRetain();
            *(_QWORD *)(a1 + 72) = v12;
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
          }
          else
          {
            v21 = *(_OWORD *)(a2 + 32);
            v22 = *(_OWORD *)(a2 + 48);
            v23 = *(_OWORD *)(a2 + 64);
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 48) = v22;
            *(_OWORD *)(a1 + 64) = v23;
            *(_OWORD *)(a1 + 32) = v21;
          }
          v24 = 1;
          goto LABEL_40;
        case 2:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          v13 = *(_QWORD *)(a2 + 56);
          swift_retain();
          if (v13)
          {
            *(_QWORD *)(a1 + 56) = v13;
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 32, a2 + 32, v13);
            v14 = *(_QWORD *)(a2 + 72);
            if ((unint64_t)(v14 - 1) >= 2)
              v14 = swift_unknownObjectRetain();
            *(_QWORD *)(a1 + 72) = v14;
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
          }
          else
          {
            v25 = *(_OWORD *)(a2 + 32);
            v26 = *(_OWORD *)(a2 + 48);
            v27 = *(_OWORD *)(a2 + 64);
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 48) = v26;
            *(_OWORD *)(a1 + 64) = v27;
            *(_OWORD *)(a1 + 32) = v25;
          }
          v24 = 2;
          goto LABEL_40;
        case 3:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
          *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          v15 = *(_QWORD *)(a2 + 56);
          swift_retain();
          if (v15)
          {
            *(_QWORD *)(a1 + 56) = v15;
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))(a1 + 32, a2 + 32, v15);
            v16 = *(_QWORD *)(a2 + 72);
            if ((unint64_t)(v16 - 1) >= 2)
              v16 = swift_unknownObjectRetain();
            *(_QWORD *)(a1 + 72) = v16;
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
          }
          else
          {
            v28 = *(_OWORD *)(a2 + 32);
            v29 = *(_OWORD *)(a2 + 48);
            v30 = *(_OWORD *)(a2 + 64);
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 48) = v29;
            *(_OWORD *)(a1 + 64) = v30;
            *(_OWORD *)(a1 + 32) = v28;
          }
          v24 = 3;
LABEL_40:
          *(_BYTE *)(a1 + 84) = v24;
          break;
        case 4:
          v17 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v17;
          *(_BYTE *)(a1 + 84) = 4;
          swift_retain();
          break;
        default:
          v6 = *(_DWORD *)a2 + 5;
          continue;
      }
      break;
    }
  }
  return a1;
}

void *__swift_memcpy85_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x55uLL);
}

unsigned __int8 *assignWithTake for ParameterInitializer.Kind(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  char v7;

  if (a1 != a2)
  {
    v4 = a1[84];
    while (2)
    {
      switch(v4)
      {
        case 0:
          if (!*((_QWORD *)a1 + 6))
            goto LABEL_12;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 24));
          v5 = *((_QWORD *)a1 + 8);
          break;
        case 1:
        case 2:
        case 3:
          swift_release();
          if (!*((_QWORD *)a1 + 7))
            goto LABEL_12;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 32));
          v5 = *((_QWORD *)a1 + 9);
          break;
        case 4:
          swift_release();
          goto LABEL_12;
        default:
          v4 = *(_DWORD *)a1 + 5;
          continue;
      }
      break;
    }
    if ((unint64_t)(v5 - 1) >= 2)
      swift_unknownObjectRelease();
LABEL_12:
    v6 = a2[84];
    while (2)
    {
      switch(v6)
      {
        case 0:
          memcpy(a1, a2, 0x4CuLL);
          v7 = 0;
          break;
        case 1:
          memcpy(a1, a2, 0x54uLL);
          v7 = 1;
          break;
        case 2:
          memcpy(a1, a2, 0x54uLL);
          v7 = 2;
          break;
        case 3:
          memcpy(a1, a2, 0x54uLL);
          v7 = 3;
          break;
        case 4:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v7 = 4;
          break;
        default:
          v6 = *(_DWORD *)a2 + 5;
          continue;
      }
      break;
    }
    a1[84] = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterInitializer.Kind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 85))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 84);
  if (v3 >= 5)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ParameterInitializer.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 77) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 85) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 85) = 0;
    if (a2)
      *(_BYTE *)(result + 84) = -(char)a2;
  }
  return result;
}

uint64_t sub_242A77064(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 84);
  if (result >= 5)
    return (*(_DWORD *)a1 + 5);
  return result;
}

uint64_t sub_242A77080(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 4)
  {
    v2 = a2 - 5;
    *(_DWORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    LOBYTE(a2) = 5;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 84) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParameterInitializer.Kind()
{
  return &type metadata for ParameterInitializer.Kind;
}

uint64_t sub_242A770C0()
{
  OUTLINED_FUNCTION_25_1();
  sub_242C48314();
  OUTLINED_FUNCTION_25_1();
  return 0;
}

unint64_t sub_242A77134()
{
  unint64_t result;

  result = qword_257221778;
  if (!qword_257221778)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B1CC, &type metadata for LazyTensorFunction.Key.OutputDescriptionKey);
    atomic_store(result, (unint64_t *)&qword_257221778);
  }
  return result;
}

uint64_t sub_242A77170(uint64_t a1)
{
  swift_retain();
  sub_242C480E0();
  return a1;
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2())
    return a1;
  else
    return 0;
}

unint64_t sub_242A771D8()
{
  unint64_t result;

  result = qword_257221780;
  if (!qword_257221780)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51DAC, &type metadata for PhiloxRandomNumberGenerator);
    atomic_store(result, (unint64_t *)&qword_257221780);
  }
  return result;
}

uint64_t sub_242A77214()
{
  return swift_deallocObject();
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result;

  result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2())
      return a1;
    else
      return 0;
  }
  return result;
}

unint64_t sub_242A77290()
{
  unint64_t result;

  result = qword_257221788;
  if (!qword_257221788)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE14F0], MEMORY[0x24BEE14E8]);
    atomic_store(result, (unint64_t *)&qword_257221788);
  }
  return result;
}

unint64_t sub_242A772CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257221790;
  if (!qword_257221790)
  {
    v1 = type metadata accessor for RandomOperation();
    result = MEMORY[0x2494EDE24](&unk_242C59DC0, v1);
    atomic_store(result, (unint64_t *)&qword_257221790);
  }
  return result;
}

unint64_t sub_242A7730C()
{
  unint64_t result;

  result = qword_257221798;
  if (!qword_257221798)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for BFloat16, &type metadata for BFloat16);
    atomic_store(result, (unint64_t *)&qword_257221798);
  }
  return result;
}

_BYTE *sub_242A77350(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParameterInitializer.Distribution()
{
  return &type metadata for ParameterInitializer.Distribution;
}

uint64_t getEnumTagSinglePayload for Upsample1D.Size.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s14NeuralNetworks20ParameterInitializerC15VarianceScalingOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242A7743C + 4 * byte_242C4C864[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242A77470 + 4 * byte_242C4C85F[v4]))();
}

uint64_t sub_242A77470(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A77478(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A77480);
  return result;
}

uint64_t sub_242A7748C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A77494);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242A77498(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A774A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParameterInitializer.VarianceScaling()
{
  return &type metadata for ParameterInitializer.VarianceScaling;
}

unint64_t sub_242A774C0()
{
  unint64_t result;

  result = qword_2572217A0;
  if (!qword_2572217A0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4C978, &type metadata for ParameterInitializer.VarianceScaling);
    atomic_store(result, (unint64_t *)&qword_2572217A0);
  }
  return result;
}

unint64_t sub_242A77500()
{
  unint64_t result;

  result = qword_2572217A8;
  if (!qword_2572217A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4CA08, &type metadata for ParameterInitializer.Distribution);
    atomic_store(result, (unint64_t *)&qword_2572217A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_12(uint64_t a1, ...)
{
  uint64_t v2;
  va_list va;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v2 = va_arg(va1, _QWORD);
  v4 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  return sub_242A66290((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_1_9(uint64_t a1, ...)
{
  uint64_t v2;
  va_list va;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v2 = va_arg(va1, _QWORD);
  v4 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  return sub_242A66290((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return swift_allocObject();
}

float OUTLINED_FUNCTION_5_9()
{
  float v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v0, v1);
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 8) + 32))(v0, *(_QWORD *)(v1 + 8));
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return sub_242AC7BCC();
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_13_3(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_242A75CB4(a1, a2, a3, a4, a5, a6, 1);
}

void OUTLINED_FUNCTION_14_2(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_242A75CB4(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t OUTLINED_FUNCTION_16_2(unint64_t a1, char a2)
{
  return sub_242A758F0(a1, a2 & 1);
}

uint64_t OUTLINED_FUNCTION_19_3(const void *a1, void *a2)
{
  uint64_t v2;

  sub_242A7023C(a1, a2);
  return v2;
}

double OUTLINED_FUNCTION_20_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  *v10 = a10;
  v10[1] = v13;
  v10[2] = v12;
  v10[3] = v11;
  sub_242A760B0();
  return result;
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_27_2(unint64_t a1, char a2)
{
  return sub_242A758F0(a1, a2 & 1);
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A76690(v1, v0);
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_33_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  return sub_242A766C4(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_34_2(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  return sub_242A76690(v3 + 16, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return sub_242C48704();
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return sub_242C494F0();
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_41_2()
{
  return sub_242C49034();
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  return sub_242C480E0();
}

char *OUTLINED_FUNCTION_43_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

char *sub_242A777AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t ObjectType;
  void (*v30)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v53 - v6;
  v8 = sub_242C47930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v67 = (uint64_t)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)v53 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v69 = (uint64_t)v53 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v68 = (uint64_t)v53 - v16;
  v17 = sub_242B89308();
  OUTLINED_FUNCTION_5_10(v17);
  if (!v18)
    goto LABEL_9;
  v20 = v18;
  v65 = v19;
  v21 = sub_242B89308();
  OUTLINED_FUNCTION_5_10(v21);
  if (!v22)
  {
LABEL_8:
    OUTLINED_FUNCTION_2_11();
LABEL_9:
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v35 = xmmword_242C4CA70;
    *(_BYTE *)(v35 + 16) = 2;
    swift_willThrow();
    return v7;
  }
  v59 = v5;
  v63 = v23;
  v64 = v22;
  v24 = sub_242B89308();
  OUTLINED_FUNCTION_5_10(v24);
  if (!v25)
  {
    OUTLINED_FUNCTION_2_11();
    goto LABEL_8;
  }
  v27 = v25;
  v28 = v26;
  v60 = v1;
  ObjectType = swift_getObjectType();
  v30 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v28 + 16);
  v30(v71, ObjectType, v28);
  v31 = *(_QWORD *)(v71[0] + 16);
  swift_bridgeObjectRelease();
  v62 = v9;
  v61 = v27;
  v58 = v8;
  v56 = v7;
  v55 = ObjectType;
  if (v31 <= 1)
  {
    v57 = 1;
    v32 = v28;
    v34 = v66;
    v33 = v30;
  }
  else
  {
    ((void (*)(uint64_t, uint64_t))v30)(ObjectType, v28);
    if (!*(_QWORD *)(v79 + 16))
    {
      memset(v71, 0, sizeof(v71));
      v72 = -1;
      v74 = 0;
      v75 = 0;
      v73 = 0;
      v76 = -1;
      v77 = 4;
      sub_242A59264();
    }
    v32 = v28;
    v33 = v30;
    v57 = *(_QWORD *)(v79 + 32);
    swift_bridgeObjectRelease();
    v34 = v66;
  }
  v37 = v60;
  v53[0] = v32;
  type metadata accessor for NativeTensorStorage();
  v71[0] = *(_QWORD *)(v37 + 80);
  LOBYTE(v79) = *(_BYTE *)(v37 + 88);
  sub_242C480E0();
  sub_242B1D8D0(v71, (uint64_t)&v79, 0);
  v39 = v38;
  v54 = v34;
  v71[0] = *(_QWORD *)(v38 + 16);
  sub_242C480E0();
  v40 = v68;
  OUTLINED_FUNCTION_1_10((uint64_t)v71, v68);
  v53[1] = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr))(v65 + 16))(v71);
  v66 = v20;
  OUTLINED_FUNCTION_1_10((uint64_t)v71, v69);
  v41 = v64;
  v42 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v63 + 16))(v71, v42);
  OUTLINED_FUNCTION_1_10((uint64_t)v71, v70);
  v7 = v61;
  v33(v71, v55, v32);
  v43 = v67;
  OUTLINED_FUNCTION_1_10((uint64_t)v71, v67);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v45 = (uint64_t)v56;
  v46 = v40;
  v47 = v58;
  v44(v56, v46, v58);
  OUTLINED_FUNCTION_0_10(v45);
  swift_retain();
  v55 = v39;
  v48 = sub_242BF6140(v45);
  sub_242A6AB60(v45);
  v49 = (uint64_t)v59;
  v44(v59, v69, v47);
  v50 = OUTLINED_FUNCTION_0_10(v49);
  MEMORY[0x24BDAC7A8](v50);
  v51 = v63;
  v53[-10] = v41;
  v53[-9] = v51;
  v53[-8] = v70;
  v53[-7] = v7;
  v53[-6] = v53[0];
  v53[-5] = v43;
  v53[-4] = v57;
  v53[-3] = v48;
  v53[-2] = v60;
  v52 = v54;
  sub_242BF6310((uint64_t)sub_242A78220, (uint64_t)&v53[-12], MEMORY[0x24BEE4AE0] + 8, (uint64_t)&v78);
  if (v52)
  {
    OUTLINED_FUNCTION_7_7();
    OUTLINED_FUNCTION_2_11();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_13(v69);
    OUTLINED_FUNCTION_0_13(v68);
    swift_release();
    OUTLINED_FUNCTION_4_8();
  }
  else
  {
    OUTLINED_FUNCTION_6_9();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v7 = (char *)swift_allocObject();
    *((_OWORD *)v7 + 1) = xmmword_242C4B7D0;
    swift_retain();
    *((_QWORD *)v7 + 4) = sub_242A7815C();
    *((_QWORD *)v7 + 5) = &off_251387678;
    OUTLINED_FUNCTION_7_7();
    swift_release();
    OUTLINED_FUNCTION_4_8();
    OUTLINED_FUNCTION_2_11();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_13(v69);
    OUTLINED_FUNCTION_0_13(v68);
  }
  OUTLINED_FUNCTION_0_13(v43);
  OUTLINED_FUNCTION_0_13(v70);
  return v7;
}

uint64_t sub_242A77D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v20 = a6;
  v21 = a7;
  v19 = a5;
  v22 = a8;
  v23 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v16 = sub_242C47930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a3, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
  v25 = a4;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  v29 = a1;
  v30 = a9;
  v31 = a10;
  sub_242BF6310((uint64_t)sub_242A782F4, (uint64_t)v24, MEMORY[0x24BEE4AE0] + 8, v22);
  return sub_242A6AB60((uint64_t)v15);
}

uint64_t sub_242A77ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v19 = a7;
  v20 = a8;
  v21 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v16 = sub_242C47930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a3, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
  v23 = a4;
  v24 = a5;
  v25 = a1;
  v26 = a6;
  v27 = v19;
  sub_242BF6310((uint64_t)sub_242A78318, (uint64_t)v22, MEMORY[0x24BEE4AE0] + 8, v20);
  return sub_242A6AB60((uint64_t)v15);
}

void sub_242A77FF8(const void *a1, size_t a2, const void *a3, const void *a4)
{
  void *v4;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[176];

  sub_242A78110(v14);
  sub_242C48A28();
  v9 = sub_242C489B0();
  sub_242B51CD0(a2, a3, a4, a1, v14, v9, v10, v11, v12);
  if (v4)
  {
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000024;
    *(_QWORD *)(v13 + 8) = 0x8000000242C65B40;
    *(_BYTE *)(v13 + 16) = 1;
    swift_willThrow();

  }
}

void *sub_242A78110@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[184];
  _BYTE __src[192];

  sub_242A7825C(v1 + 16, (uint64_t)v4);
  sub_242A7825C((uint64_t)v4, (uint64_t)__src);
  return memcpy(a1, __src, 0xB0uLL);
}

uint64_t sub_242A7815C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[184];
  _BYTE v4[184];

  v1 = sub_242A781D8();
  sub_242A78254(v3);
  sub_242A7825C(v0 + 16, (uint64_t)v4);
  sub_242A7825C((uint64_t)v3, v0 + 16);
  sub_242A782A4((uint64_t)v4);
  swift_release();
  return v1;
}

char *sub_242A781C4()
{
  return sub_242A777AC();
}

uint64_t sub_242A781D8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[184];
  _BYTE v4[176];
  uint64_t v5;

  sub_242A7825C(v0 + 16, (uint64_t)v3);
  sub_242A7825C((uint64_t)v3, (uint64_t)v4);
  v1 = v5;
  sub_242A782CC((uint64_t)v4);
  return v1;
}

uint64_t sub_242A78220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_242A77D94(a1, v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2, v2[9], v2[10]);
}

void sub_242A78254(void *a1)
{
  bzero(a1, 0xB8uLL);
}

uint64_t sub_242A7825C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572217B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_242A782A4(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_242A782CC(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_242A782F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_242A77ECC(a1, v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2);
}

void sub_242A78318(const void *a1)
{
  uint64_t v1;

  sub_242A77FF8(a1, *(_QWORD *)(v1 + 16), *(const void **)(v1 + 24), *(const void **)(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_0_13(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_1_10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242B51AEC(a1, 0, 0, a2);
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_5_10(uint64_t a1)
{
  uint64_t v1;

  sub_242A9E618(a1, v1);
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return swift_release();
}

uint64_t dispatch thunk of LayerVariable.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LayerVariable.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LayerVariable.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of LayerVariable.isInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_242A783A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *a1;
  v2 = v5;
  sub_242A783D8(&v5);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v2;
  return sub_242A70294(v3);
}

uint64_t sub_242A783D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      if ((v2 & 0xF000000000000007) == 0xF000000000000007 || (v2 & 0x8000000000000000) == 0)
        goto LABEL_10;
    }
    else if ((v2 & 0xF000000000000007) == 0xF000000000000007)
    {
      goto LABEL_10;
    }
LABEL_9:
    sub_242A70278(*a1);
    sub_242A70278(v3);
    sub_242A70294(v3);
    return sub_242A70294(v2);
  }
  if ((~v2 & 0xF000000000000007) == 0)
    goto LABEL_9;
  sub_242A7028C();
  sub_242A70294(v3);
  sub_242A70294(v2);
LABEL_10:
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

void sub_242A784F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0xF000000000000007;
  OUTLINED_FUNCTION_7_8();
  *(_DWORD *)(v0 + 16) = OUTLINED_FUNCTION_6_10();
  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 32) = 0xF000000000000007;
  sub_242A70294(v1);
  OUTLINED_FUNCTION_9();
}

void sub_242A78538(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  *(_OWORD *)(v2 + 24) = xmmword_242C4CAA0;
  if ((a2 & 0x100000000) != 0)
  {
    OUTLINED_FUNCTION_7_8();
    LODWORD(a2) = OUTLINED_FUNCTION_6_10();
    v4 = *(_QWORD *)(v2 + 32);
  }
  else
  {
    v4 = 0xF000000000000007;
  }
  *(_DWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 32) = v3 | 0x8000000000000000;
  sub_242A70294(v4);
  OUTLINED_FUNCTION_9();
}

void sub_242A78594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_OWORD *)(v1 + 24) = xmmword_242C4CAA0;
  OUTLINED_FUNCTION_7_8();
  *(_DWORD *)(v1 + 16) = OUTLINED_FUNCTION_6_10();
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;
  sub_242A70294(v3);
  OUTLINED_FUNCTION_9();
}

void sub_242A785DC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  *(_OWORD *)(v1 + 24) = xmmword_242C4CAA0;
  OUTLINED_FUNCTION_7_8();
  *(_DWORD *)(v1 + 16) = OUTLINED_FUNCTION_6_10();
  v3 = *(_QWORD *)(v1 + 32);
  v4 = 0xF000000000000007;
  if (a1)
    v4 = a1;
  *(_QWORD *)(v1 + 32) = v4;
  sub_242A70294(v3);
  OUTLINED_FUNCTION_9();
}

void sub_242A78630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v1 = *(_QWORD *)(v0 + 32);
  if ((v1 & 0x8000000000000000) == 0)
  {
    LOBYTE(v5[0]) = 1;
    v2 = MEMORY[0x24BEE4AF8];
    v5[1] = MEMORY[0x24BEE4AF8];
    sub_242A7028C();
    sub_242A709D0((uint64_t)v5, v1);
    v3 = sub_242A707C8(v2);
    MEMORY[0x24BDAC7A8](v3);
    swift_retain();
    sub_242A765B4((void (*)(uint64_t *__return_ptr))sub_242A702B0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    v5[0] = v4 | 0x8000000000000000;
    sub_242A783A0(v5);
    OUTLINED_FUNCTION_5_11();
  }
}

uint64_t sub_242A78740()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_242A78794(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 25705;
}

void sub_242A787BC(char *a1, char *a2)
{
  sub_242B3F22C(*a1, *a2);
}

void sub_242A787C8()
{
  sub_242C44970();
}

uint64_t sub_242A787D0()
{
  return sub_242A5C860();
}

void sub_242A787D8()
{
  sub_242BA90A0();
}

uint64_t sub_242A787E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A78740();
  *a1 = result;
  return result;
}

uint64_t sub_242A7880C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242A78794(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242A78834()
{
  char *v0;

  return sub_242A78794(*v0);
}

uint64_t sub_242A7883C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A78790();
  *a1 = result;
  return result;
}

void sub_242A78860(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_242A7886C()
{
  sub_242A79290();
  return sub_242C494D8();
}

uint64_t sub_242A78894()
{
  sub_242A79290();
  return sub_242C494E4();
}

uint64_t sub_242A788BC(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_242A78908(a1);
  return v2;
}

uint64_t sub_242A78908(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572218B0);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_9();
  *(_OWORD *)(v1 + 24) = xmmword_242C4CAA0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242A79290();
  sub_242C49448();
  if (v2)
  {
    sub_242A70294(*(_QWORD *)(v1 + 32));
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_DWORD *)(v1 + 16) = sub_242C490F4();
    sub_242A79308();
    sub_242C49094();
    OUTLINED_FUNCTION_2_12();
    v5 = 0xF000000000000007;
    if (v8)
      v5 = v8 | 0x8000000000000000;
    v6 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = v5;
    sub_242A70294(v6);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_242A78AAC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t **v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v21 = (uint64_t *)*v2;
  v4 = sub_242C48CEC();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_4_9();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221890);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_4_9();
  v12 = v11 - v10;
  v13 = v2[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v13 & 0x8000000000000000) == 0)
  {
    sub_242C49454();
    sub_242C48CC8();
    v14 = sub_242C48CF8();
    swift_allocError();
    v16 = v15;
    v17 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2572218A8) + 48);
    v16[3] = v21;
    *v16 = v2;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v17, v7, v23);
    (*(void (**)(uint64_t **, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE2728], v14);
    swift_retain();
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v7, v23);
  }
  sub_242A79290();
  sub_242C49478();
  sub_242C4919C();
  if (v20)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  v19 = v2[4];
  if ((~v19 & 0xF000000000000007) != 0 && v19 < 0)
  {
    sub_242A792CC();
    sub_242C4913C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  }
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t sub_242A78D94()
{
  uint64_t v0;

  sub_242A70294(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayerVariableReference()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for LayerVariableReference.InitializationState(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_242A7028C();
  *a1 = v3;
  return a1;
}

uint64_t destroy for LayerVariableReference.InitializationState()
{
  return sub_242A6FF2C();
}

_QWORD *assignWithCopy for LayerVariableReference.InitializationState(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_242A7028C();
  *a1 = v3;
  sub_242A6FF2C();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for LayerVariableReference.InitializationState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_242A6FF2C();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerVariableReference.InitializationState(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for LayerVariableReference.InitializationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_242A78F28(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_242A78F34(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_242A78F44(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for LayerVariableReference.InitializationState()
{
  return &type metadata for LayerVariableReference.InitializationState;
}

void sub_242A78F68(_DWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_DWORD *)(*(_QWORD *)v1 + 16);
}

uint64_t sub_242A78F78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_242A788BC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_242A78FA0(_QWORD *a1)
{
  return sub_242A78AAC(a1);
}

uint64_t sub_242A78FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(v1 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 < 0)
    {
      return sub_242A66290(*(_QWORD *)(v2 + 16) + 168, a1);
    }
    else
    {
      sub_242A7028C();
      ParameterInitializer.computeDevice.getter();
      return sub_242A70294(v2);
    }
  }
  else
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

void sub_242A79038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 32);
  if ((~v1 & 0xF000000000000007) != 0)
  {
    if (v1 < 0)
    {
      v12 = v1 & 0x7FFFFFFFFFFFFFFFLL;
      Tensor.scalarType.getter();
      v7 = v6;
      v9 = v8;
      swift_retain();
      v10 = sub_242B090E0(v7, v9);
      if (v10 != 2)
        OUTLINED_FUNCTION_3_9(v10, v10 & 1);
      v12 = v1 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      OUTLINED_FUNCTION_9_7();
      v11 = v1 & 0x7FFFFFFFFFFFFFFFLL | 0x8000000000000000;
      v5 = (uint64_t *)&v11;
    }
    else
    {
      v2 = sub_242A7028C();
      v12 = OUTLINED_FUNCTION_8_3(v2, v3, v4);
      v5 = &v12;
    }
    sub_242A783A0(v5);
    OUTLINED_FUNCTION_5_11();
  }
}

uint64_t sub_242A79120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 32);
  if ((~v1 & 0xF000000000000007) != 0)
  {
    if (v1 < 0)
    {
      v5 = v0;
      v14 = v1 & 0x7FFFFFFFFFFFFFFFLL;
      Tensor.scalarType.getter();
      v7 = v6;
      v9 = v8;
      swift_retain();
      v10 = sub_242B090E0(v7, v9);
      if (v10 != 2)
        OUTLINED_FUNCTION_3_9(v10, v10 & 1);
      v14 = v1 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      OUTLINED_FUNCTION_9_7();
      v13 = v1 & 0x7FFFFFFFFFFFFFFFLL;
      v11 = *(unsigned int *)(v5 + 16);
      v0 = OUTLINED_FUNCTION_0_14();
      sub_242A78538(&v13, v11);
    }
    else
    {
      v2 = sub_242A7028C();
      OUTLINED_FUNCTION_8_3(v2, v3, v4);
      OUTLINED_FUNCTION_0_14();
      OUTLINED_FUNCTION_10_6();
    }
    OUTLINED_FUNCTION_5_11();
  }
  else
  {
    v0 = OUTLINED_FUNCTION_0_14();
    sub_242A784F8();
  }
  return v0;
}

void sub_242A7923C()
{
  sub_242A79038();
}

uint64_t sub_242A7925C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_242A79120();
  *a1 = result;
  return result;
}

uint64_t sub_242A79284()
{
  return MEMORY[0x24BEE4500];
}

unint64_t sub_242A79290()
{
  unint64_t result;

  result = qword_257221898;
  if (!qword_257221898)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4CCB8, &type metadata for LayerVariableReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221898);
  }
  return result;
}

unint64_t sub_242A792CC()
{
  unint64_t result;

  result = qword_2572218A0;
  if (!qword_2572218A0)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Tensor, &type metadata for Tensor);
    atomic_store(result, (unint64_t *)&qword_2572218A0);
  }
  return result;
}

unint64_t sub_242A79308()
{
  unint64_t result;

  result = qword_2572218B8;
  if (!qword_2572218B8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Tensor, &type metadata for Tensor);
    atomic_store(result, (unint64_t *)&qword_2572218B8);
  }
  return result;
}

uint64_t *sub_242A79344(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[11];
  uint64_t v16[11];

  v2 = v1;
  v4 = sub_242C49208();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_4_9();
  v8 = v7 - v6;
  v9 = *(_QWORD *)(v2 + 32);
  if ((~v9 & 0xF000000000000007) != 0)
  {
    if (v9 < 0)
    {
      v15[0] = v9 & 0x7FFFFFFFFFFFFFFFLL;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE38B8], v4);
      sub_242A7028C();
      Tensor.cast(to:roundingRule:)();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
      v15[0] = v16[0];
      v13 = *(unsigned int *)(v2 + 16);
      v10 = (uint64_t *)OUTLINED_FUNCTION_0_14();
      sub_242A78538(v15, v13);
    }
    else
    {
      LOBYTE(v16[0]) = *a1;
      sub_242C21A14();
      dynamic_cast_existential_1_unconditional(v11);
      sub_242A76690(v9 + 16, (uint64_t)v15);
      sub_242A7028C();
      v10 = v15;
      sub_242A76498();
      sub_242A76664((uint64_t)v15);
      type metadata accessor for ParameterInitializer();
      v12 = swift_allocObject();
      sub_242A7023C(v16, (void *)(v12 + 16));
      OUTLINED_FUNCTION_0_14();
      OUTLINED_FUNCTION_10_6();
    }
    OUTLINED_FUNCTION_5_11();
  }
  else
  {
    v10 = (uint64_t *)OUTLINED_FUNCTION_0_14();
    sub_242A784F8();
  }
  return v10;
}

uint64_t dynamic_cast_existential_1_unconditional(uint64_t a1)
{
  uint64_t result;

  result = swift_conformsToProtocol2();
  if (result)
    return a1;
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for LayerVariableReference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242A7956C + 4 * byte_242C4CAB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242A795A0 + 4 * byte_242C4CAB0[v4]))();
}

uint64_t sub_242A795A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A795A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A795B0);
  return result;
}

uint64_t sub_242A795BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A795C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242A795C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A795D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayerVariableReference.CodingKeys()
{
  return &type metadata for LayerVariableReference.CodingKeys;
}

unint64_t sub_242A795F0()
{
  unint64_t result;

  result = qword_2572218C0;
  if (!qword_2572218C0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4CC90, &type metadata for LayerVariableReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572218C0);
  }
  return result;
}

unint64_t sub_242A79630()
{
  unint64_t result;

  result = qword_2572218C8;
  if (!qword_2572218C8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4CBC8, &type metadata for LayerVariableReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572218C8);
  }
  return result;
}

unint64_t sub_242A79670()
{
  unint64_t result;

  result = qword_2572218D0;
  if (!qword_2572218D0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4CBF0, &type metadata for LayerVariableReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572218D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_9(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_242C19848(v2, a2);
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  uint64_t v0;

  return sub_242A70294(v0);
}

uint64_t OUTLINED_FUNCTION_6_10()
{
  return sub_242C2BBB0();
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return type metadata accessor for VariableIdentityGenerator();
}

uint64_t OUTLINED_FUNCTION_8_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return ParameterInitializer.placed(on:)(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  uint64_t v0;

  return Tensor.place(on:)(v0);
}

void OUTLINED_FUNCTION_10_6()
{
  uint64_t v0;

  sub_242A78594(v0);
}

void sub_242A79734(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  int64_t v6;
  uint64_t v7;
  BOOL v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  BOOL v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v26;

  v6 = a1;
  v7 = sub_242B6C914(a1, a2, a3);
  v26 = MEMORY[0x24BEE4AF8];
  sub_242AC3108();
  if (v7 < 0)
  {
LABEL_45:
    __break(1u);
    return;
  }
  if (v7)
  {
    while (1)
    {
      v8 = v6 <= a2;
      if (a3 > 0)
        v8 = v6 >= a2;
      if (v8)
        break;
      if (__OFADD__(v6, a3))
        v9 = ((v6 + a3) >> 63) ^ 0x8000000000000000;
      else
        v9 = v6 + a3;
      if (__OFADD__(v6, a4))
        goto LABEL_39;
      v10 = *a5;
      if (*(_QWORD *)(*a5 + 16) >= v6 + a4)
        v11 = v6 + a4;
      else
        v11 = *(_QWORD *)(*a5 + 16);
      if (v11 < v6)
        goto LABEL_40;
      if (v6 < 0)
        goto LABEL_41;
      v13 = *(_QWORD *)(v26 + 16);
      v12 = *(_QWORD *)(v26 + 24);
      sub_242C480E0();
      if (v13 >= v12 >> 1)
        sub_242AC3108();
      *(_QWORD *)(v26 + 16) = v13 + 1;
      v14 = (_QWORD *)(v26 + 32 * v13);
      v14[4] = v10;
      v14[5] = v10 + 32;
      v14[6] = v6;
      v14[7] = (2 * v11) | 1;
      v6 = v9;
      if (!--v7)
        goto LABEL_20;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v9 = v6;
LABEL_20:
  v15 = v9 <= a2;
  if (a3 > 0)
    v15 = v9 >= a2;
  if (!v15)
  {
    while (1)
    {
      v16 = __OFADD__(v9, a3) ? ((v9 + a3) >> 63) ^ 0x8000000000000000 : v9 + a3;
      if (__OFADD__(v9, a4))
        break;
      v17 = *a5;
      if (*(_QWORD *)(*a5 + 16) >= v9 + a4)
        v18 = v9 + a4;
      else
        v18 = *(_QWORD *)(*a5 + 16);
      if (v18 < v9)
        goto LABEL_43;
      if (v9 < 0)
        goto LABEL_44;
      v20 = *(_QWORD *)(v26 + 16);
      v19 = *(_QWORD *)(v26 + 24);
      sub_242C480E0();
      if (v20 >= v19 >> 1)
        sub_242AC3108();
      *(_QWORD *)(v26 + 16) = v20 + 1;
      v21 = (_QWORD *)(v26 + 32 * v20);
      v21[4] = v17;
      v21[5] = v17 + 32;
      v21[6] = v9;
      v21[7] = (2 * v18) | 1;
      v22 = v16 <= a2;
      if (a3 > 0)
        v22 = v16 >= a2;
      v9 = v16;
      if (v22)
        return;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
}

void Tensor.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BOOL8 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v0 + 16) + 152) + 16))
  {
    do
    {
      OUTLINED_FUNCTION_1_11();
      if (!v4)
      {
        __break(1u);
        return;
      }
    }
    while (v2 != 1);
    v5 = v3 > 1000;
  }
  else
  {
    v5 = 0;
  }
  Tensor.scalarType.getter();
  sub_242A79A14(v6, v1, 80, 3, v5, v6, v7);
}

uint64_t sub_242A79A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v9 = *(_QWORD *)(a6 - 8);
  result = MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v11 + 16);
  v18 = *(_QWORD *)(v17 + 152);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = (uint64_t *)(v18 + 32);
    v21 = 1;
    while (1)
    {
      v22 = *v20++;
      v23 = v21 * v22;
      if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63)
        break;
      v21 = v23;
      if (!--v19)
      {
        if (v23 == 1)
          goto LABEL_6;
        v35 = v13;
        v36 = v12;
        v34 = v14;
        *(_QWORD *)&v40 = v11;
        v25 = Tensor.scalars<A>(as:)(result, a6, a7);
        *(_QWORD *)&v40 = v25;
        v26 = sub_242C48650();
        MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v26);
        sub_242C48428();
        v42 = v38;
        v27 = swift_allocObject();
        *(_QWORD *)(v27 + 16) = a6;
        *(_QWORD *)(v27 + 24) = a7;
        v28 = sub_242C48C5C();
        MEMORY[0x2494EDE24](MEMORY[0x24BEE25B0], v28);
        sub_242C4904C();
        swift_release();
        swift_bridgeObjectRelease();
        v37 = v40;
        v38 = v40;
        v39 = v41;
        v29 = sub_242C48E24();
        MEMORY[0x2494EDE24](MEMORY[0x24BEE2B40], v29);
        sub_242C484C4();
        swift_release();
        result = swift_bridgeObjectRelease();
        if (v43)
          v30 = 3;
        else
          v30 = v42;
        if (v30)
        {
          if (v36 != 0x8000000000000000 || v30 != -1)
          {
            if (v36 / v30 <= 1)
              v32 = 1;
            else
              v32 = v36 / v30;
            *(_QWORD *)&v40 = *(_QWORD *)(v17 + 152);
            sub_242C480E0();
            v24 = sub_242A79D88(0, v35, v30, v32, v34 & 1, (uint64_t)&v40, v25, a6, a7);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v24;
          }
LABEL_22:
          __break(1u);
          return result;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_6:
  *(_QWORD *)&v40 = 0;
  *((_QWORD *)&v40 + 1) = 0xE000000000000000;
  *(_QWORD *)&v38 = v11;
  Tensor.scalar<A>(as:)(result, a6, a7, (uint64_t)v16);
  sub_242C49214();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, a6);
  return v40;
}

uint64_t sub_242A79CF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_242C48278();
  v5 = sub_242C482D8();
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_242A79D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  MEMORY[0x24BDAC7A8](a1);
  v16 = *v15;
  v17 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v17);
  if ((sub_242C4883C() & 1) != 0)
    return 0;
  if (MEMORY[0x2494EC198](a7, a8) == 1)
  {
    sub_242C48680();
    return sub_242C48278();
  }
  v19 = *(_QWORD *)(v16 + 16);
  v20 = v19 - 1;
  if (v19 == 1)
    return sub_242A7A418(a1, a2, a3, a4, a5 & 1, a7, a8, a9);
  v26 = MEMORY[0x24BEE4AF8];
  if (!v19)
  {
LABEL_20:
    sub_242C480E0();
    sub_242A59264();
  }
  v21 = *(_QWORD *)(v16 + 32);
  if (v21 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_242A7AAB0(0, v21, &v26, v16, a7, a5 & 1, a2, a1, a3, a4, a8);
  MEMORY[0x2494EBF40](10, 0xE100000000000000, v20);
  sub_242C48314();
  swift_bridgeObjectRelease();
  if (__OFADD__(a1, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  MEMORY[0x2494EBF40](32, 0xE100000000000000, a1 + 1);
  sub_242C480E0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v26;
  v23 = *(_QWORD *)(v26 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain_n();
    v24 = v22 + 40;
    do
    {
      sub_242C480E0();
      sub_242C48314();
      if (v23 != 1)
        sub_242C480E0();
      v24 += 16;
      sub_242C48314();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_242C480E0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 91;
}

void Tensor.playgroundDescription.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20[3];
  uint64_t v21;

  v3 = *v1;
  v4 = *(_QWORD *)(*(_QWORD *)(*v1 + 16) + 152);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = 1;
    v6 = (uint64_t *)(v4 + 32);
    v7 = *(_QWORD *)(v4 + 16);
    do
    {
      v8 = *v6++;
      v9 = v5 * v8;
      if ((unsigned __int128)(v5 * (__int128)v8) >> 64 != (v5 * v8) >> 63)
      {
        __break(1u);
        goto LABEL_20;
      }
      v5 = v9;
      --v7;
    }
    while (v7);
    if (v9 == 1)
      goto LABEL_6;
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v14)
        break;
      if (v12 == 1)
      {
        v15 = v13 > 1000;
        OUTLINED_FUNCTION_4_10();
        OUTLINED_FUNCTION_3_10();
        OUTLINED_FUNCTION_0_15();
        OUTLINED_FUNCTION_2_13();
        *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE0D00];
        *(_QWORD *)a1 = v1;
        *(_QWORD *)(a1 + 8) = v15;
        return;
      }
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_6:
  OUTLINED_FUNCTION_4_10();
  sub_242A7A240(v10, v11, v20);
  if (v21)
  {
    sub_242A7A2D8(v20, (_OWORD *)a1);
    return;
  }
  if (*(_QWORD *)(v4 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v14)
        break;
      if (v16 == 1)
      {
        v18 = v17 > 1000;
        goto LABEL_18;
      }
    }
LABEL_21:
    __break(1u);
    return;
  }
  v18 = 0;
LABEL_18:
  v19 = v3;
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_3_10();
  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_2_13();
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE0D00];
  *(_QWORD *)a1 = &v19;
  *(_QWORD *)(a1 + 8) = v18;
  sub_242A7A298((uint64_t)v20);
}

void sub_242A7A240(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *boxed_opaque_existential_0;

  a3[3] = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
  Tensor.scalar<A>(as:)(a1, a1, a2, (uint64_t)boxed_opaque_existential_0);
}

uint64_t sub_242A7A298(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572218D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_242A7A2D8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_242A7A328()
{
  return swift_deallocObject();
}

uint64_t sub_242A7A338@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_242A79CF8(a1, a2);
}

uint64_t sub_242A7A340(uint64_t a1)
{
  uint64_t v2;
  BOOL v3;
  uint64_t result;

  v2 = sub_242C482D8();
  v3 = __OFADD__(v2, a1);
  result = v2 + a1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2494EBE44](result);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572218E8);
    sub_242A7AF34(&qword_2572218F0, &qword_2572218E8, MEMORY[0x24BEE49B0]);
    sub_242C482FC();
    sub_242C482FC();
    return 0;
  }
  return result;
}

uint64_t sub_242A7A418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[16];
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  v13 = a1;
  v63 = MEMORY[0x24BEE4AF8];
  if ((a5 & 1) == 0)
    goto LABEL_8;
  a1 = MEMORY[0x2494EC198](a6, a7);
  if (a2 + 0x4000000000000000 < 0)
    goto LABEL_21;
  if (a1 <= 2 * a2)
  {
LABEL_8:
    *(_QWORD *)&v61 = a6;
    v29 = MEMORY[0x24BDAC7A8](a1);
    v51 = a7;
    v52 = a8;
    v53 = a3;
    MEMORY[0x24BDAC7A8](v29);
    v47 = a7;
    v48 = a8;
    v49 = sub_242A7AEDC;
    v50 = v30;
    v31 = sub_242C48650();
    v32 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v31);
    sub_242A7DAD0((void (*)(char *, uint64_t))sub_242A7AEE8, (uint64_t)v46, v31, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v32, MEMORY[0x24BEE40A8], v33);
    goto LABEL_9;
  }
  v15 = sub_242C48650();
  sub_242C480E0();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v15);
  v57 = v15;
  v16 = sub_242C48830();
  v54[1] = v54;
  v59 = v61;
  v60 = v62;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v51 = a7;
  v52 = a8;
  v53 = a3;
  MEMORY[0x24BDAC7A8](v17);
  v47 = a7;
  v48 = a8;
  v49 = sub_242A7AF74;
  v50 = v18;
  v19 = sub_242C48B84();
  v55 = MEMORY[0x2494EDE24](MEMORY[0x24BEE2190], v19);
  v56 = v19;
  sub_242A7DAD0((void (*)(char *, uint64_t))sub_242A7AEE8, (uint64_t)v46, v19, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v55, MEMORY[0x24BEE40A8], v20);
  swift_unknownObjectRelease();
  sub_242B64A2C();
  v21 = v63;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_22;
  while (1)
  {
    v23 = *(_QWORD *)(v21 + 16);
    if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
    {
      sub_242A5E0B4();
      v21 = v45;
    }
    *(_QWORD *)(v21 + 16) = v23 + 1;
    v24 = v21 + 16 * v23;
    *(_QWORD *)(v24 + 32) = 3026478;
    *(_QWORD *)(v24 + 40) = 0xE300000000000000;
    v63 = v21;
    *(_QWORD *)&v59 = a6;
    sub_242C480E0();
    MEMORY[0x2494EDE24](MEMORY[0x24BEE12B0], v57);
    v25 = sub_242C48188();
    v59 = v61;
    v60 = v62;
    v26 = MEMORY[0x24BDAC7A8](v25);
    v51 = a7;
    v52 = a8;
    v53 = a3;
    MEMORY[0x24BDAC7A8](v26);
    v47 = a7;
    v48 = a8;
    v49 = sub_242A7AF74;
    v50 = v27;
    sub_242A7DAD0((void (*)(char *, uint64_t))sub_242A7AEE8, (uint64_t)v46, v56, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v55, MEMORY[0x24BEE40A8], v28);
    swift_unknownObjectRelease();
    v13 = v58;
LABEL_9:
    sub_242B64A2C();
    if (!a4)
    {
      __break(1u);
      goto LABEL_20;
    }
    v34 = v63;
    sub_242A79734(0, *(_QWORD *)(v63 + 16), a4, a4, &v63);
    if (!__OFADD__(v13, 1))
      break;
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_242A5E0B4();
    v21 = v44;
  }
  v36 = v35;
  v37 = 0xE100000000000000;
  MEMORY[0x2494EBF40](32, 0xE100000000000000, v13 + 1);
  *(_QWORD *)&v61 = 2604;
  *((_QWORD *)&v61 + 1) = 0xE200000000000000;
  sub_242C48314();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v59 = 91;
  *((_QWORD *)&v59 + 1) = 0xE100000000000000;
  v38 = *(_QWORD *)(v36 + 16);
  if (v38)
  {
    v58 = v34;
    swift_bridgeObjectRetain_n();
    v57 = v36;
    v39 = (__int128 *)(v36 + 48);
    v40 = MEMORY[0x24BEE2170];
    do
    {
      v41 = *v39;
      v61 = *(v39 - 1);
      v62 = v41;
      swift_unknownObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F50);
      sub_242A7AF34(&qword_2572218E0, &qword_257220F50, v40);
      sub_242C48194();
      sub_242C48314();
      swift_bridgeObjectRelease();
      if (v38 != 1)
        sub_242C480E0();
      sub_242C48314();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v39 += 2;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v37 = *((_QWORD *)&v59 + 1);
    v42 = v59;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = 91;
  }
  *(_QWORD *)&v61 = v42;
  *((_QWORD *)&v61 + 1) = v37;
  sub_242C480E0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_242A7A99C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_242C48278();
  result = sub_242C482D8();
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    v6 = sub_242A7A340((a2 - result) & ~((a2 - result) >> 63));
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_242A7AA58(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v11[3];

  result = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
  }
  else
  {
    v11[1] = v7;
    v11[2] = v8;
    v11[0] = *a2;
    return sub_242A79D88(result, a4, a5, a6, a7 & 1, v11, a1);
  }
  return result;
}

uint64_t sub_242A7AAB0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  _QWORD v62[5];

  v16 = *(_QWORD *)(a4 + 16);
  if (!v16)
    goto LABEL_59;
  v11 = a7;
  v15 = a6;
  v14 = a4;
  v12 = a2;
  v13 = a1;
  v58 = a11;
  v54 = a10;
  v53 = a9;
  sub_242C4928C();
  sub_242C480E0();
  swift_unknownObjectRetain_n();
  v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v18 = *(_QWORD *)(v17 + 16);
  swift_release();
  if (v18 == v16 - 1)
  {
    v60 = swift_dynamicCastClass();
    if (!v60)
    {
      swift_bridgeObjectRelease();
      v60 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
LABEL_60:
    swift_bridgeObjectRelease();
    sub_242C37664(v14, v14 + 32, 1, (2 * v16) | 1);
    v60 = v50;
  }
  result = swift_bridgeObjectRelease();
  if (v13 == v12)
    return swift_release();
  if (v12 >= v13)
  {
    v20 = *(_QWORD *)(v60 + 16);
    v14 = MEMORY[0x2494EC198](a5, v58);
    v51 = v12 - v11;
    v21 = __OFSUB__(v12, v11);
    v52 = v21;
    v57 = v11;
    v56 = v15;
    while (1)
    {
      if (v13 >= v12)
      {
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      if (v20)
      {
        v22 = (uint64_t *)(v60 + 32);
        v23 = v20;
        v24 = 1;
        while (1)
        {
          v25 = *v22++;
          v26 = v24 * v25;
          if ((unsigned __int128)(v24 * (__int128)v25) >> 64 != (v24 * v25) >> 63)
            break;
          v24 = v26;
          if (!--v23)
            goto LABEL_21;
        }
        __break(1u);
        goto LABEL_53;
      }
      v26 = 1;
LABEL_21:
      v27 = v13 * v26;
      if ((unsigned __int128)(v13 * (__int128)v26) >> 64 != (v13 * v26) >> 63)
        goto LABEL_55;
      if (v27 < v14)
      {
        if (v20)
        {
          v28 = (uint64_t *)(v60 + 32);
          v29 = v20;
          v30 = 1;
          while (1)
          {
            v31 = *v28++;
            v32 = v30 * v31;
            if ((unsigned __int128)(v30 * (__int128)v31) >> 64 != (v30 * v31) >> 63)
              break;
            v30 = v32;
            if (!--v29)
              goto LABEL_29;
          }
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        v32 = 1;
LABEL_29:
        if (__OFADD__(v27, v32))
          goto LABEL_56;
        if (v14 >= v27 + v32)
          v33 = v27 + v32;
        else
          v33 = v14;
        if ((v15 & 1) == 0 || v13 < v11)
          goto LABEL_43;
        if (v52)
          goto LABEL_58;
        if (v13 >= v51)
        {
LABEL_43:
          if (v33 < v27)
            goto LABEL_57;
          v62[0] = sub_242C48668();
          v62[1] = v38;
          v62[2] = v39;
          v62[3] = v40;
          v41 = sub_242C48B84();
          MEMORY[0x2494EDE24](MEMORY[0x24BEE2180], v41);
          v42 = sub_242C4865C();
          v62[0] = v60;
          v43 = sub_242A7AA58(v42, v62, a8, v11, v53, v54, v15 & 1);
          v37 = v44;
          swift_bridgeObjectRelease();
          v34 = *a3;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5E0B4();
            v34 = v46;
          }
          v16 = *(_QWORD *)(v34 + 16);
          if (v16 >= *(_QWORD *)(v34 + 24) >> 1)
          {
            sub_242A5E0B4();
            v34 = v47;
          }
          *(_QWORD *)(v34 + 16) = v16 + 1;
          v45 = v34 + 16 * v16;
          *(_QWORD *)(v45 + 32) = v43;
          v36 = v45 + 32;
          goto LABEL_49;
        }
        if (v13 == v11)
        {
          v34 = *a3;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5E0B4();
            v34 = v48;
          }
          v16 = *(_QWORD *)(v34 + 16);
          if (v16 >= *(_QWORD *)(v34 + 24) >> 1)
          {
            sub_242A5E0B4();
            v34 = v49;
          }
          *(_QWORD *)(v34 + 16) = v16 + 1;
          v35 = v34 + 16 * v16;
          *(_QWORD *)(v35 + 32) = 3026478;
          v36 = v35 + 32;
          v37 = 0xE300000000000000;
LABEL_49:
          *(_QWORD *)(v36 + 8) = v37;
          *a3 = v34;
          v11 = v57;
          v15 = v56;
        }
      }
      if (++v13 == v12)
        return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_242A7AEDC(uint64_t a1)
{
  uint64_t v1;

  return sub_242A7A99C(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_242A7AEE8@<X0>(uint64_t *a1@<X8>)
{
  return sub_242A7AEFC(a1);
}

uint64_t sub_242A7AEFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242A7AF34(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2494EDE24](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_242A79A14(v0, v1, 80, 3, v2, v0, v3);
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_4_10()
{
  Tensor.scalarType.getter();
}

uint64_t Upsample1D.Size.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_242A7AFE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Upsample1D.Size.init(integerLiteral:)(*a1, a2);
}

void Upsample1D.size.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

void Upsample1D.mode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

uint64_t Upsample1D.init(size:mode:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  char v4;

  v3 = *(_BYTE *)(result + 8);
  v4 = *a2;
  *(_QWORD *)a3 = *(_QWORD *)result;
  *(_BYTE *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 9) = v4;
  return result;
}

uint64_t Upsample1D.forward(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  float v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  __int128 v19;
  char v20;
  char v21;

  v2 = *a1;
  v3 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 != 3)
  {
LABEL_15:
    v16 = v4;
    v17 = xmmword_242C4CD60;
    v18 = 0;
    v19 = xmmword_242C4CD70;
    v20 = 0;
    v21 = 7;
    OUTLINED_FUNCTION_16_3();
    sub_242A59264();
  }
  v5 = *(_QWORD *)v1;
  v6 = *(_BYTE *)(v1 + 9);
  if (*(_BYTE *)(v1 + 8) == 1)
  {
    v7 = OUTLINED_FUNCTION_21_4(*(float *)&v5);
    if (v8)
    {
      __break(1u);
    }
    else if (v7 > -9.2234e18)
    {
      if (v7 < 9.2234e18)
      {
        v5 = (uint64_t)v7;
LABEL_11:
        v16 = v2;
        Tensor.expandingShape(at:)();
        v14 = v15;
        v13 = v6;
        resize(images:size:mode:)(&v14, v5, 1, &v13, &v16);
        swift_release();
        v15 = v16;
        Tensor.squeezingShape(at:)();
        return swift_release();
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = *(_QWORD *)(v3 + 48);
  if (v9 == -1)
    goto LABEL_11;
  v10 = *(_QWORD *)v1;
  if (v9)
    v10 = v5 % v9;
  if (!v10)
    goto LABEL_11;
  sub_242C48C38();
  OUTLINED_FUNCTION_7_9();
  v12 = sub_242C480E0();
  MEMORY[0x2494EC0FC](v12, MEMORY[0x24BEE1768]);
  sub_242C48314();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  sub_242C48314();
  result = OUTLINED_FUNCTION_14_3();
  __break(1u);
  return result;
}

uint64_t sub_242A7B23C(char a1)
{
  if ((a1 & 1) != 0)
    return 1701080941;
  else
    return 1702521203;
}

void sub_242A7B25C()
{
  sub_242A7BAA4();
}

uint64_t sub_242A7B278()
{
  char *v0;

  return sub_242A7B23C(*v0);
}

uint64_t sub_242A7B280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242A7B9F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242A7B2A4()
{
  sub_242A7CBC4();
  return sub_242C494D8();
}

uint64_t sub_242A7B2CC()
{
  sub_242A7CBC4();
  return sub_242C494E4();
}

void Upsample1D.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_1();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572218F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_28_4(*(unsigned __int8 *)(v0 + 9));
  sub_242A7CBC4();
  OUTLINED_FUNCTION_17_4();
  sub_242A7CC00();
  sub_242C49184();
  if (!v1)
  {
    sub_242A7CC3C();
    OUTLINED_FUNCTION_3_5();
  }
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_0_9();
}

void Upsample1D.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_29_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221918);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_5_12();
  sub_242A7CBC4();
  OUTLINED_FUNCTION_10_7();
  if (!v13)
  {
    sub_242A7CC78();
    OUTLINED_FUNCTION_2_14();
    sub_242A7CCB4();
    OUTLINED_FUNCTION_2_14();
    OUTLINED_FUNCTION_2_6();
    *(_QWORD *)v14 = v16;
    *(_BYTE *)(v14 + 8) = v17;
    *(_BYTE *)(v14 + 9) = a12;
  }
  __swift_destroy_boxed_opaque_existential_1(v12);
  OUTLINED_FUNCTION_0_9();
}

void sub_242A7B4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  Upsample1D.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_242A7B50C()
{
  Upsample1D.encode(to:)();
}

uint64_t Upsample2D.Size.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = result;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t Upsample2D.Size.init(arrayLiteral:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1[2] == 2)
  {
    v3 = a1[4];
    v4 = a1[5];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v3;
    *(_QWORD *)(a2 + 8) = v4;
    *(_BYTE *)(a2 + 16) = 0;
  }
  else
  {
    result = OUTLINED_FUNCTION_14_3();
    __break(1u);
  }
  return result;
}

uint64_t sub_242A7B5B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Upsample2D.Size.init(integerLiteral:)(*a1, a2);
}

__n128 Upsample2D.size.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[1].n128_u8[0];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

void Upsample2D.mode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t Upsample2D.init(size:mode:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;

  v3 = *(_QWORD *)result;
  v4 = *(_QWORD *)(result + 8);
  v5 = *(unsigned __int8 *)(result + 16);
  v6 = *a2;
  if (v5 != 1)
  {
    if (v3 < 1 || v4 <= 0)
      goto LABEL_8;
LABEL_7:
    *(_QWORD *)a3 = v3;
    *(_QWORD *)(a3 + 8) = v4;
    *(_BYTE *)(a3 + 16) = v5;
    *(_BYTE *)(a3 + 17) = v6;
    return result;
  }
  if (*(float *)&v3 > 0.0 && *((float *)&v3 + 1) > 0.0)
    goto LABEL_7;
LABEL_8:
  result = OUTLINED_FUNCTION_14_3();
  __break(1u);
  return result;
}

uint64_t Upsample2D.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  unsigned __int8 v9;
  void *v10;
  BOOL v11;
  _QWORD *v12;
  uint64_t v13;
  float v14;
  char v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  char v29;
  char v30;

  v4 = *a1;
  v6 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v7 = *(unsigned __int8 *)(v2 + 16);
  v8 = *(_BYTE *)(v2 + 17);
  v9 = *(_BYTE *)(*(_QWORD *)(*a1 + 16) + 160);
  v10 = static ScalarType.floatingPointTypes.getter();
  v11 = sub_242B64794(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_26;
  v12 = *(_QWORD **)(*(_QWORD *)(v4 + 16) + 152);
  if (v12[2] != 4)
  {
    v26 = v12[2];
    *(_OWORD *)v27 = xmmword_242C4CD60;
    v27[16] = 0;
    v28 = xmmword_242C4CD80;
    v29 = 0;
    v30 = 7;
    OUTLINED_FUNCTION_16_3();
LABEL_28:
    sub_242A59264();
  }
  if (v7)
  {
    v14 = OUTLINED_FUNCTION_21_4(*(float *)&v6);
    if (v15)
    {
      __break(1u);
    }
    else if (v14 > -9.2234e18)
    {
      if (v14 < 9.2234e18)
      {
        v16 = *((float *)&v6 + 1) * (float)*(uint64_t *)(v13 + 56);
        if ((~LODWORD(v16) & 0x7F800000) != 0)
        {
          if (v16 > -9.2234e18)
          {
            if (v16 < 9.2234e18)
            {
              v6 = (uint64_t)v14;
              v5 = (uint64_t)v16;
LABEL_19:
              v26 = v4;
              v25 = v8;
              return resize(images:size:mode:)(&v26, v6, v5, &v25, a2);
            }
            goto LABEL_25;
          }
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          sub_242C21A14();
          v26 = v22;
          *(_QWORD *)v27 = v23;
          *(_OWORD *)&v27[8] = xmmword_242C4CD60;
          LOBYTE(v28) = 0;
          *((_QWORD *)&v28 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
          v29 = 2;
          v30 = 3;
          OUTLINED_FUNCTION_16_3();
          goto LABEL_28;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_22;
  }
  v17 = v12[6];
  if (v17 == -1)
    goto LABEL_18;
  v18 = v6;
  if (v17)
    v18 = v6 % v17;
  if (!v18)
  {
LABEL_18:
    v19 = v12[7];
    if (v19 == -1)
      goto LABEL_19;
    v20 = v5;
    if (v19)
      v20 = v5 % v19;
    if (!v20)
      goto LABEL_19;
  }
  sub_242C48C38();
  OUTLINED_FUNCTION_7_9();
  v24 = sub_242C480E0();
  MEMORY[0x2494EC0FC](v24, MEMORY[0x24BEE1768]);
  sub_242C48314();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  sub_242C48314();
  result = OUTLINED_FUNCTION_14_3();
  __break(1u);
  return result;
}

uint64_t sub_242A7B9F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (OUTLINED_FUNCTION_18_5() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_18_5();
    OUTLINED_FUNCTION_4_0();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_242A7BAA4()
{
  OUTLINED_FUNCTION_20_4();
  sub_242C4934C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242A7BAD0()
{
  OUTLINED_FUNCTION_31_4();
  OUTLINED_FUNCTION_32_2();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242A7BAF4()
{
  sub_242A7CCF0();
  return sub_242C494D8();
}

uint64_t sub_242A7BB1C()
{
  sub_242A7CCF0();
  return sub_242C494E4();
}

void Upsample2D.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_1();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221938);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_28_4(*(unsigned __int8 *)(v0 + 17));
  sub_242A7CCF0();
  OUTLINED_FUNCTION_17_4();
  sub_242A7CD2C();
  sub_242C49184();
  if (!v1)
  {
    sub_242A7CC3C();
    OUTLINED_FUNCTION_3_5();
  }
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_0_9();
}

void Upsample2D.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_29_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221950);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_5_12();
  sub_242A7CCF0();
  OUTLINED_FUNCTION_10_7();
  if (!v1)
  {
    sub_242A7CD68();
    OUTLINED_FUNCTION_2_14();
    sub_242A7CCB4();
    OUTLINED_FUNCTION_2_14();
    OUTLINED_FUNCTION_2_6();
    *(_QWORD *)v2 = v4;
    *(_QWORD *)(v2 + 8) = v5;
    *(_BYTE *)(v2 + 16) = v6;
    *(_BYTE *)(v2 + 17) = v4;
  }
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242A7BD54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6176247463617865 && a2 == 0xEB0000000065756CLL;
    if (v6 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x794264656C616373 && a2 == 0xEE00656C61637324)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_242C4925C();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_242A7BF00()
{
  return 3;
}

uint64_t sub_242A7BF08(char a1)
{
  if (!a1)
    return 0x696D697263736964;
  if (a1 == 1)
    return 0x6176247463617865;
  return 0x794264656C616373;
}

void sub_242A7BF84()
{
  Upsample2D.init(from:)();
}

void sub_242A7BF98()
{
  Upsample2D.encode(to:)();
}

void sub_242A7BFAC()
{
  sub_242A5CDA4();
}

uint64_t sub_242A7BFB4()
{
  sub_242A7D85C();
  return sub_242C48524();
}

uint64_t sub_242A7C010()
{
  sub_242A7D85C();
  return sub_242C484F4();
}

void sub_242A7C05C()
{
  sub_242A7C648();
}

uint64_t sub_242A7C074()
{
  char *v0;

  return sub_242A7BF08(*v0);
}

uint64_t sub_242A7C07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242A7BD54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242A7C0A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A7BF00();
  *a1 = result;
  return result;
}

uint64_t sub_242A7C0C4()
{
  sub_242A7CDA4();
  return sub_242C494D8();
}

uint64_t sub_242A7C0EC()
{
  sub_242A7CDA4();
  return sub_242C494E4();
}

void Upsample1D.Size.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;

  OUTLINED_FUNCTION_18_1();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221960);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_11();
  v6 = *(unsigned __int8 *)(v0 + 8);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_242A7CDA4();
  sub_242C49478();
  if (v6 == 1)
  {
    sub_242A7CDE0();
    OUTLINED_FUNCTION_25_2();
    if (!v1)
      sub_242C4916C();
  }
  else
  {
    sub_242A7CDE0();
    OUTLINED_FUNCTION_25_2();
    if (!v1)
      sub_242C49178();
  }
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_0_9();
}

void Upsample1D.Size.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_29_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221978);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_5_12();
  sub_242A7CDA4();
  OUTLINED_FUNCTION_10_7();
  if (!v1)
  {
    sub_242A7CE1C();
    OUTLINED_FUNCTION_19_4();
    if ((v7 & 1) != 0)
    {
      OUTLINED_FUNCTION_11_7();
      v5 = v4;
      OUTLINED_FUNCTION_1_12();
      v6 = v5;
    }
    else
    {
      v6 = OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_1_12();
    }
    *(_QWORD *)v2 = v6;
    *(_BYTE *)(v2 + 8) = v7;
  }
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_30_2();
}

uint64_t sub_242A7C3A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6568247463617865 && a2 == 0xEC00000074686769;
    if (v6 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6977247463617865 && a2 == 0xEB00000000687464;
      if (v7 || (sub_242C4925C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x794264656C616373 && a2 == 0xEF74686769656824;
        if (v8 || (sub_242C4925C() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x794264656C616373 && a2 == 0xEE00687464697724)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_242C4925C();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_242A7C640()
{
  return 5;
}

void sub_242A7C648()
{
  OUTLINED_FUNCTION_20_4();
  sub_242C4934C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242A7C674(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242A7C6B4 + 4 * byte_242C4CD94[a1]))(0x696D697263736964, 0xED0000726F74616ELL);
}

uint64_t sub_242A7C6B4()
{
  return 0x6568247463617865;
}

uint64_t sub_242A7C6D4()
{
  return 0x6977247463617865;
}

uint64_t sub_242A7C6F4()
{
  return 0x794264656C616373;
}

void sub_242A7C72C()
{
  Upsample1D.Size.init(from:)();
}

void sub_242A7C740()
{
  Upsample1D.Size.encode(to:)();
}

uint64_t sub_242A7C754()
{
  sub_242A7D898();
  return sub_242C48524();
}

uint64_t sub_242A7C7B0()
{
  sub_242A7D898();
  return sub_242C484F4();
}

uint64_t sub_242A7C7FC()
{
  unsigned __int8 *v0;

  return sub_242A7C674(*v0);
}

uint64_t sub_242A7C804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242A7C3A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242A7C828@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A7C640();
  *a1 = result;
  return result;
}

uint64_t sub_242A7C84C()
{
  sub_242A7CE58();
  return sub_242C494D8();
}

uint64_t sub_242A7C874()
{
  sub_242A7CE58();
  return sub_242C494E4();
}

void Upsample2D.Size.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  OUTLINED_FUNCTION_18_1();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221988);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_11();
  v5 = *(unsigned __int8 *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_242A7CE58();
  sub_242C49478();
  if (v5 == 1)
  {
    sub_242A7CE94();
    OUTLINED_FUNCTION_3_5();
    if (!v1)
    {
      OUTLINED_FUNCTION_23_4();
      OUTLINED_FUNCTION_23_4();
    }
  }
  else
  {
    sub_242A7CE94();
    OUTLINED_FUNCTION_3_5();
    if (!v1)
    {
      OUTLINED_FUNCTION_26_3();
      OUTLINED_FUNCTION_26_3();
    }
  }
  OUTLINED_FUNCTION_13_4(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_0_9();
}

uint64_t Upsample2D.Size.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  OUTLINED_FUNCTION_29_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572219A0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_5_12();
  sub_242A7CE58();
  OUTLINED_FUNCTION_10_7();
  if (!v1)
  {
    sub_242A7CED0();
    OUTLINED_FUNCTION_19_4();
    if ((v11 & 1) != 0)
    {
      OUTLINED_FUNCTION_11_7();
      v6 = v5;
      OUTLINED_FUNCTION_11_7();
      v8 = v7;
      OUTLINED_FUNCTION_1_12();
      v9 = 0;
      v10 = v6 | ((unint64_t)v8 << 32);
    }
    else
    {
      v10 = OUTLINED_FUNCTION_12_5();
      v9 = OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_1_12();
    }
    *(_QWORD *)v2 = v10;
    *(_QWORD *)(v2 + 8) = v9;
    *(_BYTE *)(v2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t sub_242A7CB9C()
{
  return Upsample2D.Size.init(from:)();
}

void sub_242A7CBB0()
{
  Upsample2D.Size.encode(to:)();
}

unint64_t sub_242A7CBC4()
{
  unint64_t result;

  result = qword_257221900;
  if (!qword_257221900)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D664, &type metadata for Upsample1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221900);
  }
  return result;
}

unint64_t sub_242A7CC00()
{
  unint64_t result;

  result = qword_257221908;
  if (!qword_257221908)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Upsample1D.Size, &type metadata for Upsample1D.Size);
    atomic_store(result, (unint64_t *)&qword_257221908);
  }
  return result;
}

unint64_t sub_242A7CC3C()
{
  unint64_t result;

  result = qword_257221910;
  if (!qword_257221910)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for InterpolationMode, &type metadata for InterpolationMode);
    atomic_store(result, (unint64_t *)&qword_257221910);
  }
  return result;
}

unint64_t sub_242A7CC78()
{
  unint64_t result;

  result = qword_257221920;
  if (!qword_257221920)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Upsample1D.Size, &type metadata for Upsample1D.Size);
    atomic_store(result, (unint64_t *)&qword_257221920);
  }
  return result;
}

unint64_t sub_242A7CCB4()
{
  unint64_t result;

  result = qword_257221928;
  if (!qword_257221928)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for InterpolationMode, &type metadata for InterpolationMode);
    atomic_store(result, (unint64_t *)&qword_257221928);
  }
  return result;
}

unint64_t sub_242A7CCF0()
{
  unint64_t result;

  result = qword_257221940;
  if (!qword_257221940)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D614, &type metadata for Upsample2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221940);
  }
  return result;
}

unint64_t sub_242A7CD2C()
{
  unint64_t result;

  result = qword_257221948;
  if (!qword_257221948)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Upsample2D.Size, &type metadata for Upsample2D.Size);
    atomic_store(result, (unint64_t *)&qword_257221948);
  }
  return result;
}

unint64_t sub_242A7CD68()
{
  unint64_t result;

  result = qword_257221958;
  if (!qword_257221958)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Upsample2D.Size, &type metadata for Upsample2D.Size);
    atomic_store(result, (unint64_t *)&qword_257221958);
  }
  return result;
}

unint64_t sub_242A7CDA4()
{
  unint64_t result;

  result = qword_257221968;
  if (!qword_257221968)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D5C4, &type metadata for Upsample1D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221968);
  }
  return result;
}

unint64_t sub_242A7CDE0()
{
  unint64_t result;

  result = qword_257221970;
  if (!qword_257221970)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D59C, &type metadata for Upsample1D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221970);
  }
  return result;
}

unint64_t sub_242A7CE1C()
{
  unint64_t result;

  result = qword_257221980;
  if (!qword_257221980)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D574, &type metadata for Upsample1D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221980);
  }
  return result;
}

unint64_t sub_242A7CE58()
{
  unint64_t result;

  result = qword_257221990;
  if (!qword_257221990)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D524, &type metadata for Upsample2D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221990);
  }
  return result;
}

unint64_t sub_242A7CE94()
{
  unint64_t result;

  result = qword_257221998;
  if (!qword_257221998)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D4FC, &type metadata for Upsample2D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221998);
  }
  return result;
}

unint64_t sub_242A7CED0()
{
  unint64_t result;

  result = qword_2572219A8;
  if (!qword_2572219A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D4D4, &type metadata for Upsample2D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_2572219A8);
  }
  return result;
}

uint64_t sub_242A7CF0C()
{
  return MEMORY[0x24BEE17E8];
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Upsample1D(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample1D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

void type metadata accessor for Upsample1D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Upsample1D.Size(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample1D.Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_242A7D054(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_242A7D05C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for Upsample1D.Size()
{
  OUTLINED_FUNCTION_22_4();
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Upsample2D(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample2D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for Upsample2D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t getEnumTagSinglePayload for Upsample2D.Size(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample2D.Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_242A7D19C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_242A7D1A4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for Upsample2D.Size()
{
  OUTLINED_FUNCTION_22_4();
}

ValueMetadata *type metadata accessor for Upsample2D.Size.Discriminator()
{
  return &type metadata for Upsample2D.Size.Discriminator;
}

uint64_t getEnumTagSinglePayload for Upsample2D.Size.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample2D.Size.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_242A7D2A4 + 4 * byte_242C4CD9E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_242A7D2D8 + 4 * byte_242C4CD99[v4]))();
}

uint64_t sub_242A7D2D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A7D2E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A7D2E8);
  return result;
}

uint64_t sub_242A7D2F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A7D2FCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_242A7D300(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A7D308(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Upsample2D.Size.CodingKeys()
{
  return &type metadata for Upsample2D.Size.CodingKeys;
}

ValueMetadata *type metadata accessor for Upsample1D.Size.Discriminator()
{
  return &type metadata for Upsample1D.Size.Discriminator;
}

uint64_t storeEnumTagSinglePayload for Upsample1D.Size.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242A7D380 + 4 * byte_242C4CDA8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242A7D3B4 + 4 * byte_242C4CDA3[v4]))();
}

uint64_t sub_242A7D3B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A7D3BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A7D3C4);
  return result;
}

uint64_t sub_242A7D3D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A7D3D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242A7D3DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A7D3E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Upsample1D.Size.CodingKeys()
{
  return &type metadata for Upsample1D.Size.CodingKeys;
}

ValueMetadata *type metadata accessor for Upsample2D.CodingKeys()
{
  return &type metadata for Upsample2D.CodingKeys;
}

uint64_t _s14NeuralNetworks10Upsample2DV4SizeO13DiscriminatorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242A7D45C + 4 * byte_242C4CDB2[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242A7D490 + 4 * byte_242C4CDAD[v4]))();
}

uint64_t sub_242A7D490(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A7D498(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A7D4A0);
  return result;
}

uint64_t sub_242A7D4AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A7D4B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242A7D4B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A7D4C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Upsample1D.CodingKeys()
{
  return &type metadata for Upsample1D.CodingKeys;
}

unint64_t sub_242A7D4E0()
{
  unint64_t result;

  result = qword_257221A60;
  if (!qword_257221A60)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D144, &type metadata for Upsample1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221A60);
  }
  return result;
}

unint64_t sub_242A7D520()
{
  unint64_t result;

  result = qword_257221A68;
  if (!qword_257221A68)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D1FC, &type metadata for Upsample2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221A68);
  }
  return result;
}

unint64_t sub_242A7D560()
{
  unint64_t result;

  result = qword_257221A70;
  if (!qword_257221A70)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D2B4, &type metadata for Upsample1D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221A70);
  }
  return result;
}

unint64_t sub_242A7D5A0()
{
  unint64_t result;

  result = qword_257221A78;
  if (!qword_257221A78)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D354, &type metadata for Upsample1D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221A78);
  }
  return result;
}

unint64_t sub_242A7D5E0()
{
  unint64_t result;

  result = qword_257221A80;
  if (!qword_257221A80)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D40C, &type metadata for Upsample2D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221A80);
  }
  return result;
}

unint64_t sub_242A7D620()
{
  unint64_t result;

  result = qword_257221A88;
  if (!qword_257221A88)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D4AC, &type metadata for Upsample2D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221A88);
  }
  return result;
}

unint64_t sub_242A7D660()
{
  unint64_t result;

  result = qword_257221A90;
  if (!qword_257221A90)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D37C, &type metadata for Upsample2D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221A90);
  }
  return result;
}

unint64_t sub_242A7D6A0()
{
  unint64_t result;

  result = qword_257221A98;
  if (!qword_257221A98)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D3A4, &type metadata for Upsample2D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221A98);
  }
  return result;
}

unint64_t sub_242A7D6E0()
{
  unint64_t result;

  result = qword_257221AA0;
  if (!qword_257221AA0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D224, &type metadata for Upsample1D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221AA0);
  }
  return result;
}

unint64_t sub_242A7D720()
{
  unint64_t result;

  result = qword_257221AA8;
  if (!qword_257221AA8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D24C, &type metadata for Upsample1D.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221AA8);
  }
  return result;
}

unint64_t sub_242A7D760()
{
  unint64_t result;

  result = qword_257221AB0;
  if (!qword_257221AB0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D16C, &type metadata for Upsample2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221AB0);
  }
  return result;
}

unint64_t sub_242A7D7A0()
{
  unint64_t result;

  result = qword_257221AB8;
  if (!qword_257221AB8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D194, &type metadata for Upsample2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221AB8);
  }
  return result;
}

unint64_t sub_242A7D7E0()
{
  unint64_t result;

  result = qword_257221AC0;
  if (!qword_257221AC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D0B4, &type metadata for Upsample1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221AC0);
  }
  return result;
}

unint64_t sub_242A7D820()
{
  unint64_t result;

  result = qword_257221AC8;
  if (!qword_257221AC8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D0DC, &type metadata for Upsample1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257221AC8);
  }
  return result;
}

unint64_t sub_242A7D85C()
{
  unint64_t result;

  result = qword_257221AD0;
  if (!qword_257221AD0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D2DC, &type metadata for Upsample1D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221AD0);
  }
  return result;
}

unint64_t sub_242A7D898()
{
  unint64_t result;

  result = qword_257221AD8;
  if (!qword_257221AD8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4D434, &type metadata for Upsample2D.Size.Discriminator);
    atomic_store(result, (unint64_t *)&qword_257221AD8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_14()
{
  return sub_242C490D0();
}

_QWORD *OUTLINED_FUNCTION_5_12()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return sub_242C49448();
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return sub_242C490B8();
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return sub_242C490C4();
}

uint64_t OUTLINED_FUNCTION_13_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  return sub_242C49478();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return sub_242C49340();
}

float OUTLINED_FUNCTION_21_4(float a1)
{
  uint64_t v1;

  return a1 * (float)v1;
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return sub_242C4916C();
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  return sub_242C49178();
}

_QWORD *OUTLINED_FUNCTION_28_4@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 72) = a1;
  return __swift_project_boxed_opaque_existential_1(v1, v1[3]);
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  return sub_242C49340();
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  return sub_242C4934C();
}

uint64_t sub_242A7DAD0(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char *v27;
  char *v28;
  void (*v29)(char *, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[40];
  uint64_t v52;

  v39 = a5;
  v40 = a8;
  v46 = a1;
  v47 = a2;
  v38 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_5_6();
  v48 = v11;
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v13);
  v43 = (char *)&v34 - v14;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_5_6();
  v42 = v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_13_1();
  v37 = v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v34 - v21;
  v44 = v8;
  v23 = a6;
  v24 = sub_242C487B8();
  if (!v24)
    return sub_242C485C0();
  v25 = v24;
  v35 = AssociatedTypeWitness;
  v52 = sub_242C47FFC();
  v45 = sub_242C48E00();
  sub_242C48D70();
  v36 = v22;
  result = sub_242C487AC();
  if (v25 < 0)
  {
    __break(1u);
  }
  else
  {
    v49 = v23;
    v27 = v43;
    v28 = v36;
    while (1)
    {
      v29 = (void (*)(char *, _QWORD))sub_242C48854();
      (*(void (**)(char *))(v12 + 16))(v27);
      v29(v51, 0);
      v30 = v50;
      v46(v27, v48);
      if (v30)
        break;
      v50 = 0;
      OUTLINED_FUNCTION_151_0();
      sub_242C48DDC();
      sub_242C487DC();
      if (!--v25)
      {
        v31 = v41;
        v32 = v37;
        v33 = v35;
        (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v37, v28, v35);
        sub_242C48BD8();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
        return v52;
      }
    }
    OUTLINED_FUNCTION_151_0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v35);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v40, v48, v39);
  }
  return result;
}

uint64_t (*RMSProp.learningRate.modify())()
{
  return nullsub_1;
}

void RMSProp.gradientClippingMode.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_68_1(a1);
}

void RMSProp.regularizationKind.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_182(a1);
}

float RMSProp.gradientScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

uint64_t RMSProp.step.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  result = v1 + 1;
  if (__OFADD__(v1, 1))
    __break(1u);
  return result;
}

uint64_t sub_242A7DE18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RMSProp.step.getter();
  *a1 = result;
  return result;
}

void sub_242A7DE90(uint64_t *a1)
{
  RMSProp.step.setter(*a1);
}

void RMSProp.step.setter(uint64_t a1)
{
  if (__OFSUB__(a1, 1))
    __break(1u);
  else
    OUTLINED_FUNCTION_181(a1 - 1);
}

uint64_t (*RMSProp.step.modify(uint64_t (*result)()))()
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 40);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v4;
    return sub_242A7DEEC;
  }
  return result;
}

uint64_t RMSProp.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_3_12(*(_QWORD *)(v1 + 48), a1);
}

void RMSProp.alpha.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_174();
  *(_QWORD *)(v1 + 48) = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RMSProp.alpha.modify())()
{
  return nullsub_1;
}

void RMSProp.init(for:learningRate:rho:epsilon:gradientClippingMode:regularizationKind:gradientScale:)(uint64_t a1, double a2, float a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  float v13;
  uint64_t v14;
  uint64_t v15;

  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v13 < 0.0)
  {
    OUTLINED_FUNCTION_42_2();
    v14 = 51;
  }
  else
  {
    if (a3 < 0.0)
    {
      OUTLINED_FUNCTION_42_2();
      v14 = 52;
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
      goto LABEL_10;
    }
    if (*(unsigned __int8 *)(v8 + 4) == 255 || *(float *)v8 > 0.0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v9, a6);
      OptimizerStateDictionary.init(_:)((uint64_t)v12, a6, (uint64_t)&v15);
    }
    OUTLINED_FUNCTION_42_2();
    v14 = 54;
  }
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_80_1();
LABEL_10:
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_100_0();
}

void RMSProp.update(_:with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_224(*MEMORY[0x24BDAC8D0]);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_5_6();
  sub_242C47F3C();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_160_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_230();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_159_0();
  OUTLINED_FUNCTION_145_0();
}

float OUTLINED_FUNCTION_190()
{
  uint64_t v0;

  return *(float *)v0;
}

void OUTLINED_FUNCTION_16_4(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*sub_242A7F210())()
{
  return nullsub_1;
}

uint64_t (*sub_242A7F224())()
{
  return nullsub_1;
}

void sub_242A7F234(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;

  v2 = *(_DWORD *)(v1 + 20);
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 12);
  *(_BYTE *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
}

float sub_242A7F250()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

void sub_242A7F258(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _DWORD v25[7];
  char v26;
  uint64_t v27;
  uint64_t v28[2];

  v7 = *a2;
  v8 = *a3;
  v9 = *(_DWORD *)(v4 + 28);
  BYTE4(v19) = *(_BYTE *)(v4 + 32);
  LODWORD(v19) = v9;
  v27 = v7;
  v28[0] = v8;
  sub_242A6621C(v28, &v20);
  v11 = v20;
  if (*(_QWORD *)(v4 + 40))
  {
    v28[0] = *(_QWORD *)(v4 + 48);
    v12 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v10);
    OptimizerStateDictionary.subscript.getter(a1, v12);
    if (!(_QWORD)v20)
    {
      v24 = 0u;
      memset(v25, 0, sizeof(v25));
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v26 = 22;
      sub_242A59264();
    }
    v27 = v11;
    LODWORD(v23) = 0;
    v21 = 0u;
    v22 = 0u;
    v20 = 0u;
    swift_retain();
    sub_242B6421C((uint64_t)&v27, (uint64_t)&v20);
    v28[0] = v11;
    LODWORD(v23) = 0;
    v21 = 0u;
    v22 = 0u;
    v20 = 0u;
    swift_retain();
    sub_242B6421C((uint64_t)v28, (uint64_t)&v20);
    *(_QWORD *)&v20 = v27;
    static Tensor.* infix(_:_:)();
    swift_release();
    v27 = v28[0];
    v19 = v11;
    LODWORD(v23) = 0;
    v21 = 0u;
    v22 = 0u;
    v20 = 0u;
    swift_retain();
    sub_242B6421C((uint64_t)&v19, (uint64_t)&v20);
    v19 = v11;
    *(_QWORD *)&v20 = v18;
    pow(_:_:)();
    static Tensor.* infix(_:_:)();
    swift_release();
    swift_release();
    static Tensor.+ infix(_:_:)();
    swift_release();
    swift_release();
    v14 = v20;
    sqrt(_:)();
    v27 = v28[0];
    v18 = v11;
    LODWORD(v23) = 0;
    v21 = 0u;
    v22 = 0u;
    v20 = 0u;
    swift_retain();
    sub_242B6421C((uint64_t)&v18, (uint64_t)&v20);
    v18 = v19;
    static Tensor.+ infix(_:_:)();
    swift_release();
    swift_release();
    v15 = v20;
    v27 = v11;
    LODWORD(v23) = 0;
    v21 = 0u;
    v22 = 0u;
    v20 = 0u;
    swift_retain();
    sub_242B6421C((uint64_t)&v27, (uint64_t)&v20);
    v27 = v28[0];
    v28[0] = v7;
    v19 = v11;
    static Tensor.* infix(_:_:)();
    v18 = v15;
    v19 = v20;
    static Tensor./ infix(_:_:)();
    swift_release();
    v19 = v27;
    static Tensor.- infix(_:_:)();
    swift_release();
    *(_QWORD *)&v20 = v14;
    v17 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v16);
    swift_retain();
    swift_retain();
    OptimizerStateDictionary.subscript.setter(&v20, a1, v17);
  }
  v28[0] = *(_QWORD *)(v4 + 48);
  v13 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v10);
  sub_242C480E0();
  OptimizerStateDictionary.subscript.getter(a1, (uint64_t)sub_242A85E84, v7, v13);
}

uint64_t sub_242A7F614()
{
  uint64_t v0;
  uint64_t result;
  _QWORD *v2;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *v2 = v0;
  return result;
}

uint64_t sub_242A7F670()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_242A7F6BC()
{
  return 8;
}

uint64_t sub_242A7F6C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242A7F700 + 4 * byte_242C4D6E0[a1]))(0x676E696E7261656CLL, 0xEC00000065746152);
}

uint64_t sub_242A7F700()
{
  return 7301234;
}

uint64_t sub_242A7F710()
{
  return 0x6E6F6C69737065;
}

unint64_t sub_242A7F728()
{
  return 0xD000000000000014;
}

unint64_t sub_242A7F748()
{
  return 0xD000000000000012;
}

uint64_t sub_242A7F764()
{
  return 0x746E656964617267;
}

uint64_t sub_242A7F788()
{
  return 0x6F69746172657469;
}

uint64_t sub_242A7F7A4()
{
  return 0x6168706C61;
}

uint64_t sub_242A7F7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2494EDE24](&unk_242C4DA98, a3);
  return sub_242C49298();
}

uint64_t sub_242A7F810(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DA98, a1);
  return sub_242C48500();
}

uint64_t sub_242A7F85C()
{
  MEMORY[0x2494EDE24](&unk_242C4DA98);
  return sub_242C48518();
}

uint64_t sub_242A7F8AC()
{
  MEMORY[0x2494EDE24](&unk_242C4DA98);
  return sub_242C4850C();
}

uint64_t sub_242A7F8FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A7F670();
  *a1 = result;
  return result;
}

void sub_242A7F930(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_242A85390(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_242A7F6C4, a2);
}

uint64_t sub_242A7F93C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A7F7B8(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_242A7F948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_242A7F6B8(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_242A7F974(uint64_t a1, uint64_t a2)
{
  return sub_242A853F4(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_242A86C80);
}

uint64_t sub_242A7F980@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A7F6BC();
  *a1 = result;
  return result;
}

uint64_t sub_242A7F9AC(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DDB8, a1);
  return sub_242C494D8();
}

uint64_t sub_242A7F9E0(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DDB8, a1);
  return sub_242C494E4();
}

void RMSProp.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for RMSProp.CodingKeys(255, a2, a3, a4);
  OUTLINED_FUNCTION_201();
}

void sub_242A7FA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v13 = sub_242C4910C();
  *(_QWORD *)(v12 - 152) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&a9 - v16;
  v18 = v11[3];
  *(_QWORD *)(v12 - 144) = v11;
  __swift_project_boxed_opaque_existential_1(v11, v18);
  v19 = v17;
  v20 = *(_QWORD *)(v12 - 136);
  sub_242C49448();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v12 - 144));
  }
  else
  {
    v21 = v10;
    v22 = v9;
    v23 = v14;
    OUTLINED_FUNCTION_198();
    v24 = *(_QWORD *)(v12 - 152);
    v25 = v19;
    sub_242C490B8();
    v27 = v26;
    OUTLINED_FUNCTION_137_0();
    v28 = sub_242C490C4();
    v29 = *(_QWORD *)(v12 - 144);
    v30 = v28;
    OUTLINED_FUNCTION_48_0(1);
    v32 = v31;
    OUTLINED_FUNCTION_48_0(2);
    v34 = v33;
    OUTLINED_FUNCTION_48_0(5);
    v36 = v35;
    OUTLINED_FUNCTION_185();
    sub_242A85ED4();
    OUTLINED_FUNCTION_91_0();
    *(_QWORD *)(v12 - 136) = *(unsigned __int8 *)(v12 - 124);
    v37 = *(unsigned int *)(v12 - 128);
    *(_BYTE *)(v12 - 65) = 3;
    sub_242A85F10();
    OUTLINED_FUNCTION_91_0();
    *(_QWORD *)(v12 - 168) = v37;
    v38 = *(_QWORD *)(v12 - 128);
    *(_QWORD *)(v12 - 176) = *(unsigned __int8 *)(v12 - 116);
    *(_QWORD *)(v12 - 184) = *(unsigned int *)(v12 - 120);
    v40 = type metadata accessor for OptimizerStateDictionary(0, v21, v22, v39);
    *(_BYTE *)(v12 - 65) = 7;
    MEMORY[0x2494EDE24](&protocol conformance descriptor for OptimizerStateDictionary<A>, v40);
    sub_242C490D0();
    v41 = v24;
    v42 = *(_QWORD *)(v12 - 168) | (*(_QWORD *)(v12 - 136) << 32);
    v43 = v38;
    v44 = *(_QWORD *)(v12 - 184) | (*(_QWORD *)(v12 - 176) << 32);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v41);
    v45 = *(_QWORD *)(v12 - 128);
    v46 = *(_QWORD *)(v12 - 160);
    *(_DWORD *)v46 = v27;
    *(_DWORD *)(v46 + 4) = v32;
    *(_DWORD *)(v46 + 8) = v34;
    *(_QWORD *)(v46 + 12) = v43;
    *(_BYTE *)(v46 + 24) = BYTE4(v44);
    *(_DWORD *)(v46 + 20) = v44;
    *(_BYTE *)(v46 + 32) = BYTE4(v42);
    *(_DWORD *)(v46 + 28) = v42;
    *(_DWORD *)(v46 + 36) = v36;
    *(_QWORD *)(v46 + 40) = v30;
    *(_QWORD *)(v46 + 48) = v45;
    OUTLINED_FUNCTION_0_2();
    __swift_destroy_boxed_opaque_existential_1(v29);
    OUTLINED_FUNCTION_136();
  }
  OUTLINED_FUNCTION_57_1();
}

void RMSProp.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_161(a1, a2);
  type metadata accessor for RMSProp.CodingKeys(v2, v3, v4, v5);
  OUTLINED_FUNCTION_214();
}

void sub_242A7FD24()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_242C491A8();
  v4 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_162();
  v6 = *(_QWORD *)(v0 + 12);
  *(_QWORD *)(v2 - 184) = *(unsigned __int8 *)(v0 + 24);
  *(_QWORD *)(v2 - 176) = v6;
  *(_QWORD *)(v2 - 152) = *(unsigned int *)(v0 + 20);
  *(_QWORD *)(v2 - 160) = *(unsigned __int8 *)(v0 + 32);
  *(_QWORD *)(v2 - 168) = *(unsigned int *)(v0 + 28);
  v7 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v0 + 40);
  v8 = v1[3];
  v9 = v1;
  v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_242C49478();
  OUTLINED_FUNCTION_198();
  v12 = *(_QWORD *)(v2 - 136);
  sub_242C4916C();
  if (!v12)
  {
    v13 = *(_QWORD *)(v2 - 168);
    v14 = *(_QWORD *)(v2 - 160);
    v15 = *(_QWORD *)(v2 - 152);
    *(_BYTE *)(v2 - 128) = 6;
    sub_242C49178();
    OUTLINED_FUNCTION_94_0();
    OUTLINED_FUNCTION_71_1();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_71_1();
    *(_BYTE *)(v2 - 128) = 5;
    OUTLINED_FUNCTION_71_1();
    *(_DWORD *)(v2 - 128) = v13;
    *(_BYTE *)(v2 - 124) = (v13 | (unint64_t)(v14 << 32)) >> 32;
    OUTLINED_FUNCTION_185();
    sub_242A85F4C();
    OUTLINED_FUNCTION_96_0();
    v16 = v15 | (*(_QWORD *)(v2 - 184) << 32);
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 176);
    *(_BYTE *)(v2 - 116) = BYTE4(v16);
    *(_DWORD *)(v2 - 120) = v16;
    *(_BYTE *)(v2 - 65) = 3;
    sub_242A85F88();
    OUTLINED_FUNCTION_96_0();
    *(_QWORD *)(v2 - 128) = v7;
    *(_BYTE *)(v2 - 65) = 7;
    v18 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(v2 - 200), *(_QWORD *)(v2 - 192), v17);
    MEMORY[0x2494EDE24](&protocol conformance descriptor for OptimizerStateDictionary<A>, v18);
    sub_242C49184();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v3);
  OUTLINED_FUNCTION_57_1();
}

void sub_242A7FF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  RMSProp.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

void sub_242A7FF4C(uint64_t a1, uint64_t a2)
{
  RMSProp.encode(to:)(a1, a2);
}

uint64_t (*Adam.learningRate.modify())()
{
  return nullsub_1;
}

float Adam.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void Adam.gradientClippingMode.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_68_1(a1);
}

void Adam.regularizationKind.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_182(a1);
}

float Adam.gradientScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 40);
}

uint64_t Adam.step.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 48);
  result = v1 + 1;
  if (__OFADD__(v1, 1))
    __break(1u);
  return result;
}

uint64_t sub_242A7FFC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Adam.step.getter();
  *a1 = result;
  return result;
}

uint64_t sub_242A80040(uint64_t *a1)
{
  return Adam.step.setter(*a1);
}

uint64_t Adam.step.setter(uint64_t result)
{
  uint64_t v1;

  if (__OFSUB__(result, 1))
    __break(1u);
  else
    *(_QWORD *)(v1 + 48) = (result - 1) & ~((result - 1) >> 63);
  return result;
}

_QWORD *Adam.step.modify(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  result[1] = v1;
  v2 = *(_QWORD *)(v1 + 48);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *result = v4;
    return sub_242A800A4;
  }
  return result;
}

_QWORD *sub_242A800A4(_QWORD *result, char a2)
{
  uint64_t v2;
  _BOOL4 v3;

  v2 = *result - 1;
  v3 = __OFSUB__(*result, 1);
  if ((a2 & 1) != 0)
  {
    if (!v3)
    {
LABEL_8:
      *(_QWORD *)(result[1] + 48) = v2 & ~(v2 >> 63);
      return result;
    }
    __break(1u);
  }
  if (!v3)
    goto LABEL_8;
  __break(1u);
  return result;
}

uint64_t Adam.firstMoments.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_3_12(*(_QWORD *)(v1 + 56), a1);
}

void Adam.firstMoments.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_173();
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*Adam.firstMoments.modify())()
{
  return nullsub_1;
}

uint64_t Adam.secondMoments.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_3_12(*(_QWORD *)(v1 + 64), a1);
}

void Adam.secondMoments.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_175();
  *(_QWORD *)(v1 + 64) = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*Adam.secondMoments.modify())()
{
  return nullsub_1;
}

uint64_t Adam.maximumSecondMoments.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_3_12(*(_QWORD *)(v1 + 72), a1);
}

void Adam.maximumSecondMoments.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*Adam.maximumSecondMoments.modify())()
{
  return nullsub_1;
}

BOOL Adam.usesAMSGrad.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72) != 0;
}

void Adam.init(for:learningRate:beta1:beta2:usesAMSGrad:epsilon:gradientClippingMode:regularizationKind:gradientScale:)()
{
  float v0;
  float v1;
  float v2;
  float v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  char v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;

  OUTLINED_FUNCTION_222();
  v1 = v0;
  v3 = v2;
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_127_0();
  if (v8 == v9)
  {
    v10 = v3 < 0.0 || v3 > 1.0;
    if (v10 || (v1 >= 0.0 ? (v11 = v1 > 1.0) : (v11 = 1), v11))
    {
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_231();
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_216(v5, v6, v7);
    if (*(unsigned __int8 *)(v12 + 4) == 255 || *(float *)v12 > 0.0)
    {
      OUTLINED_FUNCTION_20_5();
      OUTLINED_FUNCTION_10_8();
    }
  }
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_80_1();
LABEL_16:
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_100_0();
}

void Adam.update(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_signpost_type_t v30;
  char v31;
  _WORD *v32;
  os_signpost_id_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  float v58;
  uint64_t v59;
  uint64_t v60;
  __n128 *v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  float v71;
  float v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  unsigned __int8 v82;
  uint64_t v83;
  char v84;
  __n128 *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  __n128 *v98;
  uint64_t v99;
  __n128 *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t *v120;
  os_signpost_id_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134[4];
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t *, uint64_t);
  uint64_t *v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  int v174;
  uint64_t v175[7];
  uint64_t v176[4];
  __int128 v177;
  __int128 v178;
  __int128 v179;
  int v180;

  v6 = v3;
  v158 = a1;
  v9 = OUTLINED_FUNCTION_224(*MEMORY[0x24BDAC8D0]);
  v136 = *(_QWORD *)(v9 - 8);
  v137 = v9;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v10);
  v12 = OUTLINED_FUNCTION_61_1(v11, v134[0]);
  v134[2] = *(_QWORD *)(v12 - 8);
  v134[3] = v12;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_5_6();
  v134[1] = v14;
  v142 = OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_160_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_1();
  v141 = v16;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v134 - v19;
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_159_0();
  v161 = MEMORY[0x2494EDE24](&unk_242C4D7B8, a3);
  nullsub_1(a3, v161, v21);
  v162 = a3;
  v157 = *(_QWORD *)(a3 + 16);
  sub_242C48E30();
  v22 = OUTLINED_FUNCTION_125_0();
  v159 = a2;
  v147 = v22;
  v23 = MEMORY[0x2494EC198](a2);
  v24 = v23 & ~(v23 >> 63);
  OUTLINED_FUNCTION_74_1(v23, v25, v26, MEMORY[0x24BEE4AF8]);
  v152 = v27;
  if (qword_257220558 != -1)
    goto LABEL_71;
  while (1)
  {
    v28 = OUTLINED_FUNCTION_229();
    __swift_project_value_buffer(v28, (uint64_t)qword_257223360);
    OUTLINED_FUNCTION_118();
    v138 = v3;
    v29 = sub_242C47F24();
    v30 = sub_242C489A4();
    v31 = sub_242C48A34();
    v160 = v23;
    if ((v31 & 1) != 0)
    {
      v32 = (_WORD *)OUTLINED_FUNCTION_38_2();
      v33 = OUTLINED_FUNCTION_73_1(v32);
      OUTLINED_FUNCTION_101_0(&dword_242A44000, v29, v30, v33, "Optimizing", "", (uint8_t *)v23);
      OUTLINED_FUNCTION_37_2();
    }

    v34 = v142;
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 16))(v20, v4, v142);
    OUTLINED_FUNCTION_227();
    OUTLINED_FUNCTION_77_0();
    v139 = sub_242C47F54();
    v140 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
    v140(v4, v34);
    v174 = 0;
    v172 = 0u;
    v173 = 0u;
    v171 = 0u;
    OUTLINED_FUNCTION_1_13();
    OUTLINED_FUNCTION_199((uint64_t)&unk_25137B7C0, v175);
    OUTLINED_FUNCTION_6_11();
    v169 = v175[0];
    OUTLINED_FUNCTION_142_0();
    v38 = !(!v38 & v37) && v36 == 0x200000000;
    if (v38)
    {
      v39 = *(_QWORD *)(v6 + 16);
      v5 = v147;
      if ((v39 & 0x100000000) != 0)
      {
        *(_QWORD *)&v171 = v159;
        MEMORY[0x24BDAC7A8](v35);
        v42 = v161;
        v134[-2] = v43;
        v134[-1] = v42;
        sub_242C48650();
        OUTLINED_FUNCTION_145_0();
      }
      OUTLINED_FUNCTION_97_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
      v40 = OUTLINED_FUNCTION_0_16();
      *(_OWORD *)(v40 + 16) = xmmword_242C4B7D0;
      *(_DWORD *)(v40 + 32) = v39;
      OUTLINED_FUNCTION_1_13();
      OUTLINED_FUNCTION_200(MEMORY[0x24BEE4AF8], v175);
      OUTLINED_FUNCTION_6_11();
      v41 = v175[0];
      OUTLINED_FUNCTION_138_0();
      v4 = 0;
      v169 = v41;
    }
    else
    {
      v4 = 0;
      v5 = v147;
    }
    OUTLINED_FUNCTION_75_1();
    v168 = v44;
    v45 = v152;
    if (v23 < 0)
      __break(1u);
    if (!v23)
      break;
    v163 = 0;
    v3 = 0;
    HIDWORD(v134[0]) = *MEMORY[0x24BEE38B8];
    v151 = MEMORY[0x24BEE4AE0] + 8;
    v143 = xmmword_242C4B7F0;
    v156 = v6;
    v153 = xmmword_242C4B7D0;
    while (1)
    {
      if (v3 == v23)
      {
        __break(1u);
        goto LABEL_69;
      }
      v164 = v3;
      sub_242C48680();
      v46 = *((_QWORD *)&v171 + 1);
      v23 = v171;
      OUTLINED_FUNCTION_123_0();
      v47 = swift_retain();
      MEMORY[0x24BDAC7A8](v47);
      v4 = &v134[-10];
      v48 = v161;
      v134[-8] = v162;
      v134[-7] = v48;
      v165 = v46;
      v134[-6] = v46;
      v134[-5] = v6;
      OUTLINED_FUNCTION_82_1((uint64_t)v134);
      v49 = sub_242C48B54();
      if ((v50 & 1) != 0)
        break;
      v20 = (char *)v6;
      v51 = v5;
      MEMORY[0x24BDAC7A8](v49);
      OUTLINED_FUNCTION_220();
      *(_QWORD *)(v52 - 48) = v157;
      *(_QWORD *)(v52 - 40) = v53;
      *(_QWORD *)(v52 - 32) = v54;
      *(_QWORD *)(v52 - 24) = sub_242A85E70;
      *(_QWORD *)(v52 - 16) = v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
      v4 = v163;
      sub_242BA1484();
      v163 = v4;
      OUTLINED_FUNCTION_157_0();
LABEL_59:
      v115 = OUTLINED_FUNCTION_167();
      v24 = *(_QWORD *)(v45 + 16);
      OUTLINED_FUNCTION_171();
      if (v37)
      {
        OUTLINED_FUNCTION_107_0(v116);
        v45 = v118;
      }
      v5 = v51;
      v117 = v164 + 1;
      *(_QWORD *)(v45 + 16) = v4;
      *(_QWORD *)(v45 + 8 * v24 + 32) = v115;
      v3 = v117;
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_23_5();
      v23 = v160;
      v6 = (uint64_t)v20;
      if (v3 == v160)
        goto LABEL_62;
    }
    v55 = swift_modifyAtWritableKeyPath();
    if ((*(_BYTE *)(v56 + 8) & 1) != 0)
    {
      v20 = (char *)v6;
      v51 = v5;
      OUTLINED_FUNCTION_206((uint64_t)v176);
      OUTLINED_FUNCTION_157_0();
      goto LABEL_59;
    }
    v57 = v56;
    v149 = v55;
    v150 = v134;
    v58 = *(float *)(v6 + 40);
    v59 = v165;
    v154 = v56;
    if (v58 == 1.0)
    {
      OUTLINED_FUNCTION_39_0();
      v60 = v59;
      v5 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v174 = 0;
      v172 = 0u;
      v173 = 0u;
      v171 = 0u;
      OUTLINED_FUNCTION_1_13();
      v5 = MEMORY[0x24BEE4AF8];
      v167 = MEMORY[0x24BEE4AF8];
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
      v61 = (__n128 *)OUTLINED_FUNCTION_0_16();
      OUTLINED_FUNCTION_153_0(v61);
      v57 = v154;
      OUTLINED_FUNCTION_65_1();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_22_5();
      v62 = v170;
      OUTLINED_FUNCTION_6_11();
      *(_QWORD *)&v177 = v59;
      v175[0] = v62;
      static Tensor.* infix(_:_:)();
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_50_0();
      v60 = v171;
    }
    OUTLINED_FUNCTION_124_0();
    v152 = v45;
    if (!v38 & v37)
    {
      *(_QWORD *)&v171 = v60;
    }
    else
    {
      v64 = *(_QWORD *)(v6 + 16);
      v65 = *(unsigned int *)(v6 + 24) | ((unint64_t)v63 << 32);
      if (v63)
      {
        v66 = v169;
        v174 = 0;
        v172 = 0u;
        v173 = 0u;
        v171 = 0u;
        if (HIDWORD(v65) == 1)
        {
          v67 = *(_BYTE *)(*(_QWORD *)(v60 + 16) + 160);
          OUTLINED_FUNCTION_1_13();
          v167 = v5;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
          v68 = OUTLINED_FUNCTION_0_16();
          *(_OWORD *)(v68 + 16) = v153;
          *(_DWORD *)(v68 + 32) = v64;
          v166 = v67;
          OUTLINED_FUNCTION_65_1();
          OUTLINED_FUNCTION_11();
          OUTLINED_FUNCTION_11_6();
          OUTLINED_FUNCTION_15_3();
          OUTLINED_FUNCTION_22_5();
          v69 = v170;
          OUTLINED_FUNCTION_6_11();
          *(_QWORD *)&v177 = v60;
          OUTLINED_FUNCTION_178();
          v175[0] = v171;
          Tensor.sum()();
          OUTLINED_FUNCTION_17_5();
          v175[0] = v177;
          OUTLINED_FUNCTION_180();
          OUTLINED_FUNCTION_135();
          v70 = v171;
          *(_QWORD *)&v177 = v60;
          *(_QWORD *)&v171 = v69;
          v175[0] = v70;
          v167 = v69;
          max(_:_:)();
          v167 = v170;
          OUTLINED_FUNCTION_122_0();
          OUTLINED_FUNCTION_17_5();
          v170 = v175[0];
          OUTLINED_FUNCTION_134_0();
          OUTLINED_FUNCTION_23_5();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_17_5();
          OUTLINED_FUNCTION_28_5();
        }
        else
        {
          v73 = *(_BYTE *)(*(_QWORD *)(v60 + 16) + 160);
          OUTLINED_FUNCTION_1_13();
          v167 = v5;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
          v74 = OUTLINED_FUNCTION_0_16();
          *(_OWORD *)(v74 + 16) = v153;
          *(_DWORD *)(v74 + 32) = v65;
          v166 = v73;
          OUTLINED_FUNCTION_65_1();
          OUTLINED_FUNCTION_11();
          OUTLINED_FUNCTION_11_6();
          OUTLINED_FUNCTION_15_3();
          OUTLINED_FUNCTION_22_5();
          v75 = v170;
          OUTLINED_FUNCTION_6_11();
          *(_QWORD *)&v171 = v60;
          v175[0] = v75;
          OUTLINED_FUNCTION_136_0();
          v175[0] = v177;
          *(_QWORD *)&v171 = v66;
          LOBYTE(v167) = *(_BYTE *)(*(_QWORD *)(v60 + 16) + 160);
          v76 = v135;
          v77 = v136;
          v78 = v137;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v136 + 104))(v135, HIDWORD(v134[0]), v137);
          Tensor.cast(to:roundingRule:)();
          v79 = v76;
          v5 = MEMORY[0x24BEE4AF8];
          (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v79, v78);
          v167 = v170;
          OUTLINED_FUNCTION_122_0();
          OUTLINED_FUNCTION_23_5();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_17_5();
          OUTLINED_FUNCTION_135();
        }
        swift_release();
        v6 = v156;
      }
      else
      {
        LODWORD(v71) = *(_QWORD *)(v6 + 16);
        LODWORD(v72) = HIDWORD(*(_QWORD *)(v6 + 16));
        *(_QWORD *)&v177 = v60;
        OUTLINED_FUNCTION_179(v71, v72);
        OUTLINED_FUNCTION_17_1();
      }
      v57 = v154;
    }
    v24 = *(_QWORD *)(*(_QWORD *)v57 + 32);
    if ((~v24 & 0xF000000000000007) == 0)
    {
      OUTLINED_FUNCTION_85_1();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
      goto LABEL_76;
    }
    if ((v24 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
LABEL_76:
      OUTLINED_FUNCTION_78_0();
      OUTLINED_FUNCTION_100_0();
    }
    v80 = v171;
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_129_0();
    if (qword_257220500 != -1)
      swift_once();
    v20 = (char *)(v24 & 0x7FFFFFFFFFFFFFFFLL);
    swift_beginAccess();
    v155 = v80;
    v148 = v24;
    if (byte_257220DE8 == 1)
    {
      OUTLINED_FUNCTION_124_0();
      if (!v38 & v37)
      {
        OUTLINED_FUNCTION_5();
        v146 = v80;
      }
      else
      {
        OUTLINED_FUNCTION_33_3(v81);
        v146 = v171;
      }
      OUTLINED_FUNCTION_106_0();
      v170 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
      v3 = OUTLINED_FUNCTION_0_16();
      *(_OWORD *)(v3 + 16) = v153;
      *(float *)(v3 + 32) = v58;
      LOBYTE(v167) = v80;
      OUTLINED_FUNCTION_1_13();
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_6_11();
      v83 = *(_QWORD *)(v6 + 48);
      v4 = (uint64_t *)(v83 + 1);
      if (!__OFADD__(v83, 1))
      {
        v145 = v175[0];
        v84 = *(_BYTE *)(*(_QWORD *)((v24 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 160);
        v174 = 0;
        v172 = 0u;
        v173 = 0u;
        v171 = 0u;
        v170 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
        v85 = (__n128 *)OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_207(v85);
        LOBYTE(v167) = v84;
        OUTLINED_FUNCTION_1_13();
        Tensor.init(shape:coercingScalars:scalarType:on:)();
        v86 = OUTLINED_FUNCTION_6_11();
        v144 = v175[0];
        if (!*(_QWORD *)(v6 + 48))
        {
          *(_QWORD *)&v177 = *(_QWORD *)(v6 + 56);
          OUTLINED_FUNCTION_18_6(v86, v87, v88, v89);
          OUTLINED_FUNCTION_44_0();
          v112 = OUTLINED_FUNCTION_87_0();
          OUTLINED_FUNCTION_39_3(v112, (uint64_t)sub_242A85E84);
        }
        *(_QWORD *)&v177 = *(_QWORD *)(v6 + 56);
        v90 = OUTLINED_FUNCTION_18_6(v86, v87, v88, v89);
        v91 = OUTLINED_FUNCTION_87_0();
        v92 = OptimizerStateDictionary.subscript.getter(v91, v90);
        if ((_QWORD)v171)
        {
          *(_QWORD *)&v177 = *(_QWORD *)(v156 + 64);
          OUTLINED_FUNCTION_228(v92, v157, v93, v94);
          OUTLINED_FUNCTION_74();
          OUTLINED_FUNCTION_39_3(v23, (uint64_t)sub_242A85E84);
        }
        goto LABEL_75;
      }
LABEL_69:
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_124_0();
      if (!v38 & v37)
      {
        OUTLINED_FUNCTION_5();
        v95 = v80;
      }
      else
      {
        OUTLINED_FUNCTION_33_3(v82);
        v95 = v171;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
      v3 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v3 + 16) = v143;
      *(_QWORD *)(v3 + 32) = v20;
      *(_QWORD *)(v3 + 40) = v95;
      OUTLINED_FUNCTION_129_0();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_0_2();
      v96 = 0;
      v97 = 0;
      while (1)
      {
        LOBYTE(v24) = v96;
        sub_242A66290(*(_QWORD *)(*(_QWORD *)(v3 + 32 + 8 * v97) + 16) + 168, (uint64_t)&v171);
        if (*((_QWORD *)&v172 + 1))
          break;
        OUTLINED_FUNCTION_6_11();
        v96 = 1;
        v97 = 1;
        if ((v24 & 1) != 0)
        {
          OUTLINED_FUNCTION_136();
          v180 = 0;
          v178 = 0u;
          v179 = 0u;
          v177 = 0u;
          goto LABEL_53;
        }
      }
      OUTLINED_FUNCTION_136();
      v177 = v171;
      v178 = v172;
      v179 = v173;
      v180 = v174;
LABEL_53:
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_106_0();
      v167 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
      v98 = (__n128 *)OUTLINED_FUNCTION_0_16();
      OUTLINED_FUNCTION_153_0(v98);
      OUTLINED_FUNCTION_202();
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_6_11();
      v99 = *(_QWORD *)(v6 + 48);
      v4 = (uint64_t *)(v99 + 1);
      if (!__OFADD__(v99, 1))
      {
        v145 = v170;
        v174 = 0;
        v172 = 0u;
        v173 = 0u;
        v171 = 0u;
        v167 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
        v100 = (__n128 *)OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_207(v100);
        v166 = 2;
        OUTLINED_FUNCTION_202();
        Tensor.init(shape:coercingScalars:scalarType:on:)();
        v101 = OUTLINED_FUNCTION_6_11();
        v144 = v170;
        v105 = *(_QWORD *)(v6 + 48);
        v106 = *(_QWORD *)(v6 + 56);
        v146 = v95;
        if (!v105)
        {
          v175[0] = v106;
          OUTLINED_FUNCTION_18_6(v101, v102, v103, v104);
          OUTLINED_FUNCTION_44_0();
          v113 = OUTLINED_FUNCTION_86_0();
          OUTLINED_FUNCTION_39_3(v113, (uint64_t)sub_242A85E84);
        }
        v175[0] = v106;
        v107 = OUTLINED_FUNCTION_18_6(v101, v102, v103, v104);
        v108 = OUTLINED_FUNCTION_86_0();
        v109 = OptimizerStateDictionary.subscript.getter(v108, v107);
        if ((_QWORD)v171)
        {
          v175[0] = *(_QWORD *)(v156 + 64);
          OUTLINED_FUNCTION_228(v109, v157, v110, v111);
          OUTLINED_FUNCTION_74();
          v114 = OUTLINED_FUNCTION_86_0();
          OUTLINED_FUNCTION_39_3(v114, (uint64_t)sub_242A85E84);
        }
LABEL_75:
        OUTLINED_FUNCTION_70_0();
        OUTLINED_FUNCTION_103_0();
        sub_242A59264();
      }
    }
    __break(1u);
LABEL_71:
    swift_once();
  }
LABEL_62:
  v119 = (void *)sub_242C47F24();
  v120 = v141;
  sub_242C47F48();
  sub_242C48998();
  if ((OUTLINED_FUNCTION_128_0() & 1) != 0)
  {
    OUTLINED_FUNCTION_158_0();
    sub_242C47F6C();
    OUTLINED_FUNCTION_19_5();
    if (OUTLINED_FUNCTION_163() != *MEMORY[0x24BEE7810])
      OUTLINED_FUNCTION_79_1();
    *(_WORD *)OUTLINED_FUNCTION_38_2() = 0;
    v121 = sub_242C47EF4();
    OUTLINED_FUNCTION_47_1(&dword_242A44000, v122, (os_signpost_type_t)v24, v121, "Optimizing");
    OUTLINED_FUNCTION_37_2();
  }
  OUTLINED_FUNCTION_19_5();

  v140(v120, v142);
  swift_release();
  v123 = OUTLINED_FUNCTION_218();
  OUTLINED_FUNCTION_92_0(v123, v131, v132, v124, v125, v126, v127, v128, v129, v130);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_34();
  j_nullsub_1(v162, v161, v133);
  OUTLINED_FUNCTION_164(v6);
  OUTLINED_FUNCTION_81_1();
}

void sub_242A8159C()
{
  OUTLINED_FUNCTION_90_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_16_5();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_152();
}

void sub_242A815C4()
{
  OUTLINED_FUNCTION_90_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_84_1();
  JUMPOUT(0x242A81538);
}

void sub_242A815E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  float v22;
  float v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[56];
  _BYTE v44[56];
  const char *v45;
  __int128 v46;
  __int128 v47;
  const char *v48;
  uint64_t v49;
  __int16 v50;

  v14 = *a11;
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a3 + 16);
  v17 = *(_QWORD *)(a4 + 16);
  v18 = *(_QWORD *)(a5 + 16);
  if (a6)
  {
    v38 = *(_QWORD *)(a6 + 16);
    swift_retain();
  }
  else
  {
    v38 = 0;
  }
  v19 = *(_QWORD *)(a7 + 16);
  v20 = *(_QWORD *)(a8 + 16);
  v21 = *(_QWORD *)(a9 + 72);
  v22 = *(float *)(a9 + 4);
  v23 = *(float *)(a9 + 8);
  v24 = *(float *)(a9 + 12);
  v39 = *(_QWORD *)(v14 + *MEMORY[0x24BEE2B70]);
  v46 = xmmword_242C4D6C0;
  v47 = xmmword_242C4D6D0;
  v45 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/OptimizerOps.swift";
  v48 = "init(id:parameter:gradient:momentum:velocity:maximumVelocity:learningRate:step:beta1:beta2:epsilon:usesAMSGrad:creationSite:)";
  v49 = 125;
  v50 = 2;
  type metadata accessor for AdamOperation();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242A56104(0, 0, 0, v22, v23, v24, v15, v16, v17, v18, v38, v19, v20, v21 != 0);
  v26 = v25;
  sub_242A66290(a10, (uint64_t)v44);
  sub_242A66290((uint64_t)v44, (uint64_t)v43);
  type metadata accessor for ContextManager();
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v40);
  swift_release();
  v27 = v42;
  swift_retain();
  sub_242A5DC30((uint64_t)v40);
  sub_242B93328();
  sub_242B933C0((uint64_t)v40);
  swift_release();
  v28 = v41;
  swift_retain();
  sub_242A5DC30((uint64_t)v40);
  type metadata accessor for TensorRepresentation();
  v29 = swift_allocObject();
  LOBYTE(v40[0]) = 1;
  v30 = sub_242B4C0B0(v26, 0, v43, 0x100000000, v27, v28, v29);
  type metadata accessor for TensorHandle();
  *(_QWORD *)(swift_allocObject() + 16) = v30;
  swift_retain();
  sub_242BC995C();
  swift_release();
  sub_242A662D8((uint64_t)v44);
  sub_242A66290(a10, (uint64_t)v44);
  sub_242A66290((uint64_t)v44, (uint64_t)v43);
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v40);
  swift_release();
  v31 = v42;
  swift_retain();
  sub_242A5DC30((uint64_t)v40);
  sub_242B93328();
  sub_242B933C0((uint64_t)v40);
  swift_release();
  v32 = v41;
  swift_retain();
  sub_242A5DC30((uint64_t)v40);
  v33 = swift_allocObject();
  LOBYTE(v40[0]) = 1;
  v34 = sub_242B4C0B0(v26, 1, v43, 0x100000000, v31, v32, v33);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  swift_retain();
  sub_242BC995C();
  swift_release();
  sub_242A662D8((uint64_t)v44);
  v40[0] = v35;
  v37 = type metadata accessor for OptimizerStateDictionary(0, v39, a12, v36);
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(v40, (uint64_t)a11, v37);
}

void sub_242A819B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_242A86B90();
  sub_242A66290(v43, v47 - 232);
  sub_242A66290(v47 - 232, (uint64_t)&a43);
  swift_retain_n();
  sub_242B93328();
  sub_242B933C0((uint64_t)&a25);
  swift_release();
  v48 = a35;
  swift_retain();
  sub_242A5DC30((uint64_t)&a25);
  sub_242B93328();
  sub_242B933C0((uint64_t)&a25);
  swift_release();
  v49 = a34;
  swift_retain();
  sub_242A5DC30((uint64_t)&a25);
  v50 = swift_allocObject();
  LOBYTE(a25) = 1;
  v51 = sub_242B4C0B0(v46, 2, &a43, 0x100000000, v48, v49, v50);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v51;
  swift_retain();
  sub_242BC995C();
  swift_release();
  swift_release();
  sub_242A662D8(v47 - 232);
  a25 = v52;
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&a25, v45, v44);
}

uint64_t sub_242A81AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[18];
  _BYTE v18[304];

  if (*v13)
  {
    sub_242A66290(v16, v2 - 232);
    sub_242A66290(v2 - 232, (uint64_t)v18);
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)v17);
    swift_release();
    v3 = v17[10];
    swift_retain();
    sub_242A5DC30((uint64_t)v17);
    sub_242B93328();
    sub_242B933C0((uint64_t)v17);
    swift_release();
    v4 = v17[9];
    swift_retain();
    sub_242A5DC30((uint64_t)v17);
    v5 = swift_allocObject();
    LOBYTE(v17[0]) = 1;
    v6 = sub_242B4C0B0(v1, 3, v18, 0x100000000, v3, v4, v5);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242A662D8(v2 - 232);
    if (*v13)
    {
      v17[0] = v7;
      swift_retain();
      swift_retain();
      OptimizerStateDictionary.subscript.setter(v17, v15, v11);
    }
  }
  else
  {
    v7 = 0;
  }
  v17[0] = v10;
  sub_242B89120();
  v17[0] = v7;
  sub_242B8917C(v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v8 + 32) = v0;
  *(_QWORD *)(v8 + 40) = v12;
  swift_retain();
  swift_retain();
  sub_242B89200(v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_setDeallocating();
  result = sub_242B71334();
  *v14 = v10;
  return result;
}

uint64_t sub_242A81CFC()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  type metadata accessor for ContextManager();
  v1 = OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_210((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v27);
  OUTLINED_FUNCTION_135();
  type metadata accessor for ResolutionDependencies();
  v9 = OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_194(v9, MEMORY[0x24BEE4AF8]);
  swift_release();
  v10 = OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_208((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v28);
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_211();
  sub_242B93328();
  OUTLINED_FUNCTION_209();
  swift_release();
  v18 = OUTLINED_FUNCTION_135();
  if (v0)
    return OUTLINED_FUNCTION_191(v18, v19, v20, v21, v22, v23, v24, v25, v29);
  OUTLINED_FUNCTION_191(v18, v19, v20, v21, v22, v23, v24, v25, v29);
  return v30;
}

uint64_t sub_242A81DD4()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  type metadata accessor for ContextManager();
  v0 = OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_210((uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, v26);
  OUTLINED_FUNCTION_135();
  type metadata accessor for ResolutionDependencies();
  v8 = OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_194(v8, MEMORY[0x24BEE4AF8]);
  swift_release();
  v9 = OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_208((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v27);
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_209();
  swift_release();
  v17 = OUTLINED_FUNCTION_135();
  return OUTLINED_FUNCTION_191(v17, v18, v19, v20, v21, v22, v23, v24, v28);
}

void sub_242A81E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float *a9, uint64_t *a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v11 = *a10;
  v19 = a3;
  v20 = a2;
  v17 = a5;
  v18 = a4;
  v15 = a7;
  v16 = a6;
  v14 = a8;
  basicAdam(parameter:gradient:momentum:velocity:maximumVelocity:learningRate:step:beta1:beta2:epsilon:)(&v24, &v23, &v22, &v21, &v20, &v19, &v18, &v17, a9[1], a9[2], a9[3], &v16, &v15, &v14);
  v24 = v23;
  v13 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(v11 + *MEMORY[0x24BEE2B70]), a11, v12);
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&v24, (uint64_t)a10, v13);
}

void sub_242A81F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = v1;
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter((_QWORD *)(v3 - 72), v2, v0);
}

uint64_t sub_242A81F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  if (v2 && *(_QWORD *)(v4 + 72))
  {
    *(_QWORD *)(v6 - 72) = v2;
    swift_retain();
    swift_retain();
    OptimizerStateDictionary.subscript.setter((_QWORD *)(v6 - 72), v5, v0);
  }
  *(_QWORD *)(v6 - 72) = v9;
  sub_242B89120();
  *(_QWORD *)(v6 - 72) = v2;
  sub_242B8917C((_QWORD *)(v6 - 72));
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v1;
  swift_retain();
  swift_retain();
  sub_242B89200(inited);
  swift_release();
  swift_release();
  swift_release();
  swift_setDeallocating();
  result = sub_242B71334();
  *v10 = v9;
  return result;
}

uint64_t sub_242A82078()
{
  return sub_242A84A30();
}

uint64_t sub_242A82094()
{
  return 11;
}

uint64_t sub_242A8209C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242A820D8 + 4 * byte_242C4D6E8[a1]))(0x676E696E7261656CLL, 0xEC00000065746152);
}

uint64_t sub_242A820D8()
{
  return 0x3161746562;
}

uint64_t sub_242A820EC()
{
  return 0x3261746562;
}

uint64_t sub_242A82100()
{
  return 0x6E6F6C69737065;
}

unint64_t sub_242A82118()
{
  return 0xD000000000000014;
}

uint64_t sub_242A821A4()
{
  return 0x6F69746172657469;
}

uint64_t sub_242A821C0()
{
  return 0x6F4D646E6F636573;
}

uint64_t (*sub_242A821EC())()
{
  return nullsub_1;
}

void sub_242A821FC(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;

  v2 = *(_DWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 28);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
}

float sub_242A82218()
{
  uint64_t v0;

  return *(float *)(v0 + 40);
}

void sub_242A82220(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  int *v4;
  int *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  char v12;
  uint64_t v13;
  int v14;
  char v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  int v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  int v50;
  int v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[60];
  char v57;
  uint64_t v58[7];
  uint64_t v59;
  int v60;
  char v61;

  v6 = v4;
  v8 = *a2;
  v9 = *a3;
  v10 = sub_242A57DA4();
  swift_beginAccess();
  v52 = a1;
  if (*v10 == 1)
  {
    v11 = v6[8];
    v61 = *((_BYTE *)v6 + 36);
    v12 = v61;
    v60 = v11;
    v58[0] = v9;
    v59 = v8;
    sub_242A6621C(v58, &v53);
    *(_QWORD *)&v53 = v8;
    v50 = *v6;
    Tensor.elementType.getter(&v59);
    *(_DWORD *)v56 = 0;
    v54 = 0u;
    v55 = 0u;
    v53 = 0u;
    Tensor.init(coercing:scalarType:on:)((char *)&v59, (uint64_t)&v53, v58);
    v13 = *((_QWORD *)v6 + 2);
    v14 = v6[6];
    v15 = *((_BYTE *)v6 + 28);
    v16 = v6[10];
    v17 = *((_QWORD *)v6 + 6);
    LODWORD(v18) = v50;
    DWORD1(v18) = v6[1];
    *((_QWORD *)&v18 + 1) = *((_QWORD *)v6 + 1);
    v19 = *((_QWORD *)v6 + 9);
    v53 = v18;
    *(_QWORD *)&v54 = v13;
    BYTE12(v54) = v15;
    DWORD2(v54) = v14;
    BYTE4(v55) = v12;
    LODWORD(v55) = v11;
    DWORD2(v55) = v16;
    *(_QWORD *)v56 = v17;
    v48 = *(_OWORD *)(v6 + 14);
    *(_OWORD *)&v56[8] = v48;
    *(_QWORD *)&v56[24] = v19;
    v20 = Adam.step.getter();
    *(_QWORD *)&v53 = v8;
    Tensor.elementType.getter(&v59);
    *(_DWORD *)v56 = 0;
    v54 = 0u;
    v55 = 0u;
    v53 = 0u;
    Tensor.init(coercing:scalarType:on:)(v20, (uint64_t)&v59, (uint64_t)&v53);
    if (!v17)
    {
      v58[0] = v48;
      v46 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v21);
      sub_242C480E0();
      OptimizerStateDictionary.subscript.getter(v52, (uint64_t)sub_242A85E84, v8, v46);
    }
    v58[0] = v48;
    v23 = *(_QWORD *)(a4 + 16);
    v22 = *(_QWORD *)(a4 + 24);
    v24 = type metadata accessor for OptimizerStateDictionary(0, v23, v22, v21);
    OptimizerStateDictionary.subscript.getter(v52, v24);
    if ((_QWORD)v53)
    {
      v58[0] = *((_QWORD *)v6 + 8);
      type metadata accessor for OptimizerStateDictionary(0, v23, v22, v25);
      sub_242C480E0();
      OptimizerStateDictionary.subscript.getter(v52, (uint64_t)sub_242A85E84, v8, v24);
    }
  }
  else
  {
    v26 = v6[8];
    v61 = *((_BYTE *)v6 + 36);
    v27 = v61;
    v60 = v26;
    v58[0] = v9;
    v59 = v8;
    sub_242A6621C(v58, &v53);
    v28 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v28;
    v32 = nullsub_1(inited, v30, v31);
    swift_retain();
    swift_retain();
    sub_242B7661C(v32, (uint64_t)v58);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v53 = v8;
    v51 = *v6;
    Tensor.elementType.getter(&v60);
    *(_DWORD *)v56 = 0;
    v54 = 0u;
    v55 = 0u;
    v53 = 0u;
    Tensor.init(coercing:scalarType:on:)((char *)&v60, (uint64_t)&v53, &v59);
    v33 = *((_QWORD *)v6 + 2);
    v34 = v6[6];
    v35 = *((_BYTE *)v6 + 28);
    v36 = v6[10];
    v37 = *((_QWORD *)v6 + 6);
    LODWORD(v38) = v51;
    DWORD1(v38) = v6[1];
    *((_QWORD *)&v38 + 1) = *((_QWORD *)v6 + 1);
    v39 = *((_QWORD *)v6 + 9);
    v53 = v38;
    *(_QWORD *)&v54 = v33;
    BYTE12(v54) = v35;
    DWORD2(v54) = v34;
    BYTE4(v55) = v27;
    LODWORD(v55) = v26;
    DWORD2(v55) = v36;
    *(_QWORD *)v56 = v37;
    v49 = *(_OWORD *)(v6 + 14);
    *(_OWORD *)&v56[8] = v49;
    *(_QWORD *)&v56[24] = v39;
    v40 = Adam.step.getter();
    LOBYTE(v60) = 2;
    *(_DWORD *)v56 = 0;
    v54 = 0u;
    v55 = 0u;
    v53 = 0u;
    Tensor.init(coercing:scalarType:on:)(v40, (uint64_t)&v60, (uint64_t)&v53);
    if (!v37)
    {
      v59 = v49;
      v47 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v41);
      sub_242C480E0();
      OptimizerStateDictionary.subscript.getter(v52, (uint64_t)sub_242A85E84, v8, v47);
    }
    v59 = v49;
    v42 = *(_QWORD *)(a4 + 16);
    v43 = *(_QWORD *)(a4 + 24);
    v44 = type metadata accessor for OptimizerStateDictionary(0, v42, v43, v41);
    OptimizerStateDictionary.subscript.getter(v52, v44);
    if ((_QWORD)v53)
    {
      v59 = *((_QWORD *)v6 + 8);
      type metadata accessor for OptimizerStateDictionary(0, v42, v43, v45);
      sub_242C480E0();
      OptimizerStateDictionary.subscript.getter(v52, (uint64_t)sub_242A85E84, v8, v44);
    }
  }
  v55 = 0u;
  memset(v56, 0, sizeof(v56));
  v53 = 0u;
  v54 = 0u;
  v57 = 22;
  sub_242A59264();
}

uint64_t sub_242A8292C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2494EDE24](&unk_242C4DB88, a3);
  return sub_242C49298();
}

uint64_t sub_242A82980(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DB88, a1);
  return sub_242C48500();
}

uint64_t sub_242A829CC()
{
  MEMORY[0x2494EDE24](&unk_242C4DB88);
  return sub_242C48518();
}

uint64_t sub_242A82A1C()
{
  MEMORY[0x2494EDE24](&unk_242C4DB88);
  return sub_242C4850C();
}

uint64_t sub_242A82A6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A84A30();
  *a1 = result;
  return result;
}

void sub_242A82AA8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_242A85390(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_242A8209C, a2);
}

uint64_t sub_242A82AB4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A821E4(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_242A82AC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A82078();
  *a1 = result;
  return result;
}

uint64_t sub_242A82AEC(uint64_t a1, uint64_t a2)
{
  return sub_242A853F4(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_242A65800);
}

uint64_t sub_242A82AF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A82094();
  *a1 = result;
  return result;
}

uint64_t sub_242A82B24(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DD68, a1);
  return sub_242C494D8();
}

uint64_t sub_242A82B58(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DD68, a1);
  return sub_242C494E4();
}

void Adam.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_176();
  type metadata accessor for Adam.CodingKeys(255, v0, v1, v2);
  OUTLINED_FUNCTION_201();
}

void sub_242A82BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, _QWORD);
  uint64_t v30;
  uint64_t v31;

  v5 = OUTLINED_FUNCTION_116_0();
  *(_QWORD *)(v4 - 144) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_162();
  *(_QWORD *)(v4 - 136) = v3;
  OUTLINED_FUNCTION_54_0();
  sub_242C49448();
  if (v1)
  {
    OUTLINED_FUNCTION_172();
  }
  else
  {
    *(_QWORD *)(v4 - 168) = v2;
    *(_QWORD *)(v4 - 160) = v0;
    v8 = v6;
    v9 = *(_QWORD *)(v4 - 152);
    OUTLINED_FUNCTION_198();
    OUTLINED_FUNCTION_9_8();
    v11 = v10;
    *(_BYTE *)(v4 - 128) = 10;
    v12 = OUTLINED_FUNCTION_196();
    OUTLINED_FUNCTION_94_0();
    OUTLINED_FUNCTION_9_8();
    v14 = v13;
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_9_8();
    v16 = v15;
    *(_BYTE *)(v4 - 128) = 3;
    OUTLINED_FUNCTION_9_8();
    v18 = v17;
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_9_8();
    v20 = v19;
    *(_BYTE *)(v4 - 113) = 5;
    sub_242A85ED4();
    OUTLINED_FUNCTION_67_1();
    v21 = *(unsigned __int8 *)(v4 - 124);
    v22 = *(unsigned int *)(v4 - 128);
    *(_BYTE *)(v4 - 113) = 4;
    sub_242A85F10();
    OUTLINED_FUNCTION_67_1();
    *(_QWORD *)(v4 - 184) = *(_QWORD *)(v4 - 128);
    *(_QWORD *)(v4 - 176) = v22;
    *(_QWORD *)(v4 - 192) = *(unsigned __int8 *)(v4 - 116);
    v23 = *(unsigned int *)(v4 - 120);
    *(_QWORD *)(v4 - 208) = v21;
    *(_QWORD *)(v4 - 200) = v23;
    v25 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 160), v24);
    *(_BYTE *)(v4 - 113) = 7;
    MEMORY[0x2494EDE24](&protocol conformance descriptor for OptimizerStateDictionary<A>, v25);
    OUTLINED_FUNCTION_69_1();
    *(_QWORD *)(v4 - 168) = v12;
    *(_QWORD *)(v4 - 160) = v25;
    v26 = *(_QWORD *)(v4 - 128);
    *(_BYTE *)(v4 - 113) = 8;
    OUTLINED_FUNCTION_69_1();
    v27 = *(_QWORD *)(v4 - 128);
    *(_BYTE *)(v4 - 113) = 9;
    OUTLINED_FUNCTION_113_0();
    v28 = *(_QWORD *)(v4 - 176) | (*(_QWORD *)(v4 - 208) << 32);
    v29 = *(uint64_t (**)(uint64_t, _QWORD))(v8 + 8);
    v30 = *(_QWORD *)(v4 - 200) | (*(_QWORD *)(v4 - 192) << 32);
    OUTLINED_FUNCTION_117_0(v29);
    v31 = *(_QWORD *)(v4 - 128);
    swift_bridgeObjectRelease();
    *(_DWORD *)v9 = v11;
    *(_DWORD *)(v9 + 4) = v14;
    *(_DWORD *)(v9 + 8) = v16;
    *(_DWORD *)(v9 + 12) = v18;
    *(_QWORD *)(v9 + 16) = *(_QWORD *)(v4 - 184);
    *(_BYTE *)(v9 + 28) = BYTE4(v30);
    *(_DWORD *)(v9 + 24) = v30;
    *(_BYTE *)(v9 + 36) = BYTE4(v28);
    *(_DWORD *)(v9 + 32) = v28;
    *(_DWORD *)(v9 + 40) = v20;
    *(_QWORD *)(v9 + 48) = *(_QWORD *)(v4 - 168);
    *(_QWORD *)(v9 + 56) = v26;
    *(_QWORD *)(v9 + 64) = v27;
    *(_QWORD *)(v9 + 72) = v31;
    OUTLINED_FUNCTION_0_2();
    sub_242C480E0();
    sub_242C480E0();
    OUTLINED_FUNCTION_172();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_83();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_49_1();
}

void Adam.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_176();
  type metadata accessor for Adam.CodingKeys(255, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1);
  OUTLINED_FUNCTION_214();
}

void sub_242A82F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v12 = OUTLINED_FUNCTION_120_0();
  v13 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&a9 - v15;
  v17 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v11 - 168) = *(unsigned __int8 *)(v9 + 28);
  *(_QWORD *)(v11 - 160) = v17;
  *(_QWORD *)(v11 - 176) = *(unsigned int *)(v9 + 24);
  *(_QWORD *)(v11 - 184) = *(unsigned __int8 *)(v9 + 36);
  *(_QWORD *)(v11 - 192) = *(unsigned int *)(v9 + 32);
  *(_QWORD *)(v11 - 152) = *(_QWORD *)(v9 + 48);
  v18 = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v11 - 224) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v11 - 216) = v18;
  *(_QWORD *)(v11 - 232) = *(_QWORD *)(v9 + 72);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  OUTLINED_FUNCTION_148_0();
  sub_242C49478();
  OUTLINED_FUNCTION_198();
  v19 = *(_QWORD *)(v11 - 144);
  sub_242C4916C();
  if (!v19)
  {
    v20 = *(_QWORD *)(v11 - 176);
    v21 = *(_QWORD *)(v11 - 168);
    v22 = *(_QWORD *)(v11 - 160);
    v23 = *(_QWORD *)(v11 - 184);
    *(_BYTE *)(v11 - 128) = 10;
    sub_242C49178();
    OUTLINED_FUNCTION_94_0();
    OUTLINED_FUNCTION_23_4();
    *(_QWORD *)(v11 - 144) = v13;
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_23_4();
    *(_BYTE *)(v11 - 128) = 3;
    OUTLINED_FUNCTION_23_4();
    *(_QWORD *)(v11 - 128) = v22;
    *(_DWORD *)(v11 - 120) = v20;
    *(_BYTE *)(v11 - 116) = (v20 | (unint64_t)(v21 << 32)) >> 32;
    *(_BYTE *)(v11 - 129) = 4;
    sub_242A85F88();
    OUTLINED_FUNCTION_95_0();
    v24 = *(_QWORD *)(v11 - 192) | (v23 << 32);
    *(_BYTE *)(v11 - 124) = BYTE4(v24);
    *(_DWORD *)(v11 - 128) = v24;
    *(_BYTE *)(v11 - 129) = 5;
    sub_242A85F4C();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_23_4();
    v25 = *(_QWORD *)(v11 - 208);
    *(_QWORD *)(v11 - 128) = *(_QWORD *)(v11 - 216);
    *(_BYTE *)(v11 - 129) = 7;
    type metadata accessor for OptimizerStateDictionary(0, v25, *(_QWORD *)(v11 - 200), v26);
    OUTLINED_FUNCTION_145_0();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  OUTLINED_FUNCTION_49_1();
}

void sub_242A831B0()
{
  Adam.init(from:)();
}

void sub_242A831CC()
{
  Adam.encode(to:)();
}

uint64_t (*AdamW.learningRate.modify())()
{
  return nullsub_1;
}

float AdamW.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void AdamW.gradientClippingMode.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_68_1(a1);
}

float AdamW.weightDecay.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

float AdamW.gradientScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

uint64_t AdamW.step.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  result = v1 + 1;
  if (__OFADD__(v1, 1))
    __break(1u);
  return result;
}

uint64_t sub_242A8323C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AdamW.step.getter();
  *a1 = result;
  return result;
}

void sub_242A832B4(uint64_t *a1)
{
  AdamW.step.setter(*a1);
}

void AdamW.step.setter(uint64_t a1)
{
  if (__OFSUB__(a1, 1))
    __break(1u);
  else
    OUTLINED_FUNCTION_181(a1 - 1);
}

uint64_t (*AdamW.step.modify(uint64_t (*result)()))()
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 40);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v4;
    return sub_242A7DEEC;
  }
  return result;
}

_QWORD *sub_242A83310(_QWORD *result, char a2)
{
  uint64_t v2;
  _BOOL4 v3;

  v2 = *result - 1;
  v3 = __OFSUB__(*result, 1);
  if ((a2 & 1) != 0)
  {
    if (!v3)
    {
LABEL_8:
      *(_QWORD *)(result[1] + 40) = v2 & ~(v2 >> 63);
      return result;
    }
    __break(1u);
  }
  if (!v3)
    goto LABEL_8;
  __break(1u);
  return result;
}

uint64_t AdamW.firstMoments.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_3_12(*(_QWORD *)(v1 + 48), a1);
}

void AdamW.firstMoments.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_174();
  *(_QWORD *)(v1 + 48) = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*AdamW.firstMoments.modify())()
{
  return nullsub_1;
}

uint64_t AdamW.secondMoments.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_3_12(*(_QWORD *)(v1 + 56), a1);
}

void AdamW.secondMoments.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_173();
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*AdamW.secondMoments.modify())()
{
  return nullsub_1;
}

uint64_t AdamW.maximumSecondMoments.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_3_12(*(_QWORD *)(v1 + 64), a1);
}

void AdamW.maximumSecondMoments.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_175();
  *(_QWORD *)(v1 + 64) = v0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*AdamW.maximumSecondMoments.modify())()
{
  return nullsub_1;
}

BOOL AdamW.usesAMSGrad.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64) != 0;
}

void AdamW.init(for:learningRate:beta1:beta2:usesAMSGrad:epsilon:gradientClippingMode:weightDecay:gradientScale:)()
{
  float v0;
  float v1;
  float v2;
  float v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  char v9;

  OUTLINED_FUNCTION_222();
  v1 = v0;
  v3 = v2;
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_127_0();
  if (v8 != v9)
  {
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    if (v3 >= 0.0 && v3 <= 1.0 && v1 >= 0.0 && v1 <= 1.0)
    {
      OUTLINED_FUNCTION_216(v5, v6, v7);
      OUTLINED_FUNCTION_20_5();
      OUTLINED_FUNCTION_10_8();
    }
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_231();
  }
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_100_0();
}

void sub_242A83560()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  float v4;
  float v5;
  float v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    v4 = *(float *)(v0 + 4);
    v5 = (float)v3;
    v6 = *(float *)v0 * sqrtf(1.0 - powf(*(float *)(v0 + 8), (float)v3));
    *(float *)(v0 + 72) = v6 / (float)(1.0 - powf(v4, v5));
  }
}

uint64_t (*AdamW.update(_:with:)(uint64_t a1, unint64_t a2, uint64_t a3))(_BYTE *, _QWORD)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  char v24;
  _WORD *v25;
  os_signpost_id_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint8_t *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __n128 *v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  uint8_t *v96;
  os_signpost_id_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint8_t *, uint64_t);
  uint8_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t *v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __n128 v153;
  char v154;
  uint64_t v155[7];
  uint64_t v156[4];
  _QWORD v157[9];

  v139 = a1;
  v157[7] = *MEMORY[0x24BDAC8D0];
  v7 = sub_242C49208();
  v118 = *(_QWORD *)(v7 - 8);
  v119 = v7;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v8);
  v10 = OUTLINED_FUNCTION_61_1(v9, v113);
  v115 = *(_QWORD *)(v10 - 8);
  v116 = v10;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_5_6();
  v127 = v12;
  v124 = OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_160_0();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (uint8_t *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_230();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_159_0();
  v136 = v3;
  sub_242A83560();
  v144 = a3;
  v138 = *(_QWORD *)(a3 + 16);
  sub_242C48E30();
  v140 = OUTLINED_FUNCTION_125_0();
  v141 = a2;
  v142 = MEMORY[0x2494EC198](a2);
  v18 = v142 & ~(v142 >> 63);
  OUTLINED_FUNCTION_74_1(v142, v19, v20, MEMORY[0x24BEE4AF8]);
  v135 = v21;
  if (qword_257220558 != -1)
    goto LABEL_48;
  while (1)
  {
    v22 = OUTLINED_FUNCTION_229();
    __swift_project_value_buffer(v22, (uint64_t)qword_257223360);
    OUTLINED_FUNCTION_118();
    v120 = v3;
    v23 = sub_242C47F24();
    sub_242C489A4();
    v24 = OUTLINED_FUNCTION_212();
    v122 = v16;
    if ((v24 & 1) != 0)
    {
      v25 = (_WORD *)OUTLINED_FUNCTION_38_2();
      v26 = OUTLINED_FUNCTION_73_1(v25);
      OUTLINED_FUNCTION_101_0(&dword_242A44000, v23, (os_signpost_type_t)v4, v26, "Optimizing", "", v16);
      OUTLINED_FUNCTION_37_2();
    }

    OUTLINED_FUNCTION_98_0();
    OUTLINED_FUNCTION_227();
    OUTLINED_FUNCTION_77_0();
    v27 = OUTLINED_FUNCTION_154_0();
    v28 = OUTLINED_FUNCTION_203(v27);
    v121 = v29;
    ((void (*)(uint64_t))v29)(v28);
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_5_13();
    sub_242A85A44(MEMORY[0x24BEE4AF8], (uint64_t)&unk_25137B9D8, (uint64_t)v157, v155);
    OUTLINED_FUNCTION_29_2();
    v152 = v155[0];
    v30 = v136;
    OUTLINED_FUNCTION_142_0();
    v34 = !(!v34 & v33) && v32 == 0x200000000;
    if (v34)
    {
      v35 = *(_QWORD *)(v30 + 16);
      if ((v35 & 0x100000000) != 0)
      {
        v153.n128_u64[0] = v141;
        MEMORY[0x24BDAC7A8](v31);
        *(&v113 - 2) = v144;
        *(&v113 - 1) = MEMORY[0x2494EDE24](&unk_242C4D840);
        sub_242C48650();
        OUTLINED_FUNCTION_145_0();
      }
      OUTLINED_FUNCTION_53_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
      v36 = OUTLINED_FUNCTION_0_16();
      *(_OWORD *)(v36 + 16) = xmmword_242C4B7D0;
      *(_DWORD *)(v36 + 32) = v35;
      OUTLINED_FUNCTION_5_13();
      sub_242A85A44(MEMORY[0x24BEE4AF8], v36, (uint64_t)v157, v155);
      OUTLINED_FUNCTION_29_2();
      v37 = v155[0];
      swift_release();
      v137 = 0;
      v152 = v37;
    }
    else
    {
      v137 = 0;
    }
    v3 = v142;
    OUTLINED_FUNCTION_75_1();
    v151 = v38;
    v39 = v127;
    if (v3 < 0)
      __break(1u);
    if (!v3)
      break;
    v16 = 0;
    v114 = *MEMORY[0x24BEE38B8];
    v125 = v30 + 56;
    v126 = v30 + 48;
    v123 = v30 + 64;
    v134 = MEMORY[0x24BEE4AE0] + 8;
    v4 = v135;
    v145 = xmmword_242C4B7D0;
    while ((uint8_t *)v3 != v16)
    {
      sub_242C48680();
      v40 = v153;
      OUTLINED_FUNCTION_11_6();
      v41 = OUTLINED_FUNCTION_11();
      v146 = &v113;
      MEMORY[0x24BDAC7A8](v41);
      v42 = &v113 - 10;
      v43 = v144;
      *(&v113 - 8) = v144;
      *(&v113 - 7) = MEMORY[0x2494EDE24](&unk_242C4D840, v43);
      *(&v113 - 6) = v40.n128_i64[1];
      v147 = v40.n128_i64[1];
      *(&v113 - 5) = v30;
      *(&v113 - 4) = (uint64_t)&v152;
      *(&v113 - 3) = v40.n128_u64[0];
      *(&v113 - 2) = (uint64_t)&v151;
      OUTLINED_FUNCTION_11_6();
      v44 = sub_242C48B54();
      if ((v45 & 1) != 0)
      {
        v48 = swift_modifyAtWritableKeyPath();
        v50 = v147;
        if ((*(_BYTE *)(v49 + 8) & 1) == 0)
        {
          v51 = v49;
          v133 = v48;
          if (*(float *)(v30 + 36) == 1.0)
          {
            OUTLINED_FUNCTION_10();
            v52 = v50;
          }
          else
          {
            OUTLINED_FUNCTION_53_0();
            v53 = *(_BYTE *)(*(_QWORD *)(v50 + 16) + 160);
            OUTLINED_FUNCTION_5_13();
            v149 = MEMORY[0x24BEE4AF8];
            __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
            v54 = (__n128 *)OUTLINED_FUNCTION_0_16();
            OUTLINED_FUNCTION_133_0(v54);
            v148 = v53;
            OUTLINED_FUNCTION_12_6();
            OUTLINED_FUNCTION_10();
            OUTLINED_FUNCTION_15_3();
            OUTLINED_FUNCTION_43_2();
            v55 = v150;
            OUTLINED_FUNCTION_29_2();
            v157[0] = v50;
            v155[0] = v55;
            OUTLINED_FUNCTION_140_0();
            OUTLINED_FUNCTION_135();
            OUTLINED_FUNCTION_17_5();
            v52 = v153.n128_u64[0];
          }
          OUTLINED_FUNCTION_124_0();
          if (!v34 & v33)
          {
            v153.n128_u64[0] = v52;
          }
          else
          {
            v57 = *(_QWORD *)(v30 + 16);
            v58 = *(unsigned int *)(v30 + 24) | ((unint64_t)v56 << 32);
            if (HIDWORD(v58))
            {
              v59 = v152;
              OUTLINED_FUNCTION_149_0();
              if (HIDWORD(v58) == 1)
              {
                v61 = *(_BYTE *)(v60 + 160);
                OUTLINED_FUNCTION_5_13();
                v149 = MEMORY[0x24BEE4AF8];
                __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
                v62 = OUTLINED_FUNCTION_0_16();
                *(_OWORD *)(v62 + 16) = v145;
                *(_DWORD *)(v62 + 32) = v57;
                v148 = v61;
                OUTLINED_FUNCTION_12_6();
                OUTLINED_FUNCTION_5();
                OUTLINED_FUNCTION_205();
                OUTLINED_FUNCTION_15_3();
                OUTLINED_FUNCTION_43_2();
                v63 = v150;
                OUTLINED_FUNCTION_29_2();
                v157[0] = v52;
                Tensor.squared()();
                v155[0] = v153.n128_u64[0];
                Tensor.sum()();
                OUTLINED_FUNCTION_19_5();
                v155[0] = v157[0];
                OUTLINED_FUNCTION_186();
                OUTLINED_FUNCTION_135();
                v64 = v153.n128_u64[0];
                v157[0] = v52;
                v153.n128_u64[0] = v63;
                v155[0] = v64;
                v149 = v63;
                max(_:_:)();
                v149 = v150;
                static Tensor./ infix(_:_:)();
                OUTLINED_FUNCTION_19_5();
                v150 = v155[0];
                static Tensor.* infix(_:_:)();
                OUTLINED_FUNCTION_23_5();
                OUTLINED_FUNCTION_72_1();
                OUTLINED_FUNCTION_19_5();
                OUTLINED_FUNCTION_17_5();
              }
              else
              {
                v65 = *(_BYTE *)(v60 + 160);
                OUTLINED_FUNCTION_5_13();
                v149 = MEMORY[0x24BEE4AF8];
                __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
                v66 = OUTLINED_FUNCTION_0_16();
                *(_OWORD *)(v66 + 16) = v145;
                *(_DWORD *)(v66 + 32) = v58;
                v148 = v65;
                OUTLINED_FUNCTION_12_6();
                OUTLINED_FUNCTION_5();
                OUTLINED_FUNCTION_205();
                OUTLINED_FUNCTION_15_3();
                OUTLINED_FUNCTION_43_2();
                v67 = v150;
                v143 = v150;
                OUTLINED_FUNCTION_29_2();
                v153.n128_u64[0] = v52;
                v155[0] = v67;
                OUTLINED_FUNCTION_44_1();
                v131 = v59;
                v132 = v157[0];
                v155[0] = v157[0];
                v153.n128_u64[0] = v59;
                LOBYTE(v149) = *(_BYTE *)(*(_QWORD *)(v52 + 16) + 160);
                v69 = v117;
                v68 = v118;
                v70 = v51;
                v71 = v119;
                (*(void (**)(uint64_t, _QWORD, uint64_t))(v118 + 104))(v117, v114, v119);
                Tensor.cast(to:roundingRule:)();
                v72 = v71;
                v51 = v70;
                (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v72);
                v149 = v150;
                static Tensor./ infix(_:_:)();
                OUTLINED_FUNCTION_23_5();
                swift_release();
                swift_release();
                OUTLINED_FUNCTION_135();
              }
            }
            else
            {
              v157[0] = v52;
              Tensor.clamped(to:)((uint64_t)&v153, *(float *)&v57, *((float *)&v57 + 1));
            }
            swift_release();
            v30 = v136;
          }
          v73 = *(_QWORD *)(*(_QWORD *)v51 + 32);
          if ((~v73 & 0xF000000000000007) != 0)
          {
            v132 = v51;
            if (v73 < 0)
            {
              v74 = v73 & 0x7FFFFFFFFFFFFFFFLL;
              v75 = *(_QWORD *)(v30 + 40);
              v76 = *(_QWORD *)(v30 + 48);
              v143 = v153.n128_u64[0];
              v135 = v4;
              v131 = v73;
              v129 = v16;
              if (v75)
              {
                v157[0] = v76;
                swift_retain();
                v77 = sub_242A70278(v73);
                v81 = OUTLINED_FUNCTION_77_1(v77, v78, v79, v80);
                v82 = OUTLINED_FUNCTION_141_0();
                v83 = OptimizerStateDictionary.subscript.getter(v82, v81);
                if (v153.n128_u64[0])
                {
                  v128 = v81;
                  v153.n128_u64[0] = *(_QWORD *)(v136 + 56);
                  OUTLINED_FUNCTION_77_1(v83, v84, v85, v86);
                  OUTLINED_FUNCTION_158_0();
                  OUTLINED_FUNCTION_44_0();
                  v130 = v73 & 0x7FFFFFFFFFFFFFFFLL;
                  OUTLINED_FUNCTION_192(v40.n128_i64[0], (uint64_t)sub_242A85E84, v74);
                }
                memset(&v153, 0, 108);
                v154 = 22;
                OUTLINED_FUNCTION_103_0();
                sub_242A59264();
              }
              v157[0] = v76;
              swift_retain();
              v87 = sub_242A70278(v73);
              OUTLINED_FUNCTION_77_1(v87, v88, v89, v90);
              OUTLINED_FUNCTION_44_0();
              v91 = OUTLINED_FUNCTION_141_0();
              OUTLINED_FUNCTION_192(v91, (uint64_t)sub_242A85E84, v74);
            }
            OUTLINED_FUNCTION_31_5();
            OUTLINED_FUNCTION_24_0();
            OUTLINED_FUNCTION_80_1();
          }
          else
          {
            OUTLINED_FUNCTION_85_1();
            OUTLINED_FUNCTION_24_0();
            OUTLINED_FUNCTION_105_0();
          }
          OUTLINED_FUNCTION_78_0();
          OUTLINED_FUNCTION_100_0();
        }
        OUTLINED_FUNCTION_206((uint64_t)v156);
        OUTLINED_FUNCTION_13_0();
      }
      else
      {
        v46 = MEMORY[0x24BDAC7A8](v44);
        v47 = *(_QWORD *)(v43 + 24);
        *(&v113 - 6) = v138;
        *(&v113 - 5) = v47;
        *(&v113 - 4) = v46;
        *(&v113 - 3) = (uint64_t)sub_242A85E70;
        *(&v113 - 2) = (uint64_t)v42;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
        v42 = v137;
        sub_242BA1484();
        v137 = v42;
        OUTLINED_FUNCTION_13_0();
      }
      v92 = sub_242B89308();
      v18 = *(_QWORD *)(v4 + 16);
      OUTLINED_FUNCTION_171();
      if (v33)
      {
        sub_242A5E910(v93 > 1, (uint64_t)v42, 1, v4);
        v4 = v94;
      }
      ++v16;
      *(_QWORD *)(v4 + 16) = v42;
      *(_QWORD *)(v4 + 8 * v18 + 32) = v92;
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_23_5();
      v3 = v142;
      if ((uint8_t *)v142 == v16)
        goto LABEL_41;
    }
    __break(1u);
LABEL_48:
    swift_once();
  }
LABEL_41:
  v95 = (void *)sub_242C47F24();
  v96 = v122;
  sub_242C47F48();
  sub_242C48998();
  if ((OUTLINED_FUNCTION_128_0() & 1) != 0)
  {
    OUTLINED_FUNCTION_11_6();
    sub_242C47F6C();
    OUTLINED_FUNCTION_13_0();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v115 + 88))(v39, v116) != *MEMORY[0x24BEE7810])
      OUTLINED_FUNCTION_79_1();
    *(_WORD *)OUTLINED_FUNCTION_38_2() = 0;
    v97 = sub_242C47EF4();
    OUTLINED_FUNCTION_47_1(&dword_242A44000, v98, (os_signpost_type_t)v18, v97, "Optimizing");
    OUTLINED_FUNCTION_37_2();
  }
  OUTLINED_FUNCTION_13_0();

  v121(v96, v124);
  v99 = v151;
  swift_release();
  v100 = OUTLINED_FUNCTION_218();
  v153.n128_u64[0] = 1;
  v153.n128_u64[1] = v100;
  Array<A>.resolve(descriptor:)(&v153, v99, v101, v102, v103, v104, v105, v106, v107, v108);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_34();
  v109 = v144;
  v110 = MEMORY[0x2494EDE24](&unk_242C4D840, v144);
  j_nullsub_1(v109, v110, v111);
  return sub_242C2B268(v30, v109, v110);
}

void sub_242A8483C()
{
  OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_16_5();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_152();
}

void sub_242A84864()
{
  OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_84_1();
  JUMPOUT(0x242A847C4);
}

void sub_242A84888(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = a1;
  swift_retain();
  Tensor.init(zerosLike:)(&v3, a2);
}

uint64_t sub_242A848C0(uint64_t a1, float a2)
{
  uint64_t v4;
  int v5;
  void *v6;
  BOOL v7;
  void *v8;
  BOOL v9;
  uint64_t inited;
  _QWORD v12[7];
  unsigned __int8 v13[56];
  uint64_t v14;

  *(_QWORD *)v13 = a1;
  Tensor.scalarType.getter();
  (*(void (**)(unsigned __int8 *__return_ptr))(v4 + 32))(v13);
  v5 = v13[0];
  v6 = static ScalarType.floatingPointTypes.getter();
  v7 = sub_242B64794(0xAu, (uint64_t)v6);
  OUTLINED_FUNCTION_3_6();
  if (v7
    && (v8 = static ScalarType.integerTypes.getter(), v9 = sub_242B64794(v5, (uint64_t)v8), OUTLINED_FUNCTION_3_6(), v9)
    || v5 == 12)
  {
    OUTLINED_FUNCTION_184();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    *(float *)(inited + 32) = a2;
    sub_242A66290((uint64_t)v13, (uint64_t)v12);
    sub_242C0A3E0(MEMORY[0x24BEE4AF8], inited, (uint64_t)v12, &v14);
    sub_242A662D8((uint64_t)v13);
  }
  else
  {
    v12[3] = MEMORY[0x24BEE14E8];
    v12[4] = &protocol witness table for Float;
    *(float *)v12 = a2;
    *(_QWORD *)v13 = a1;
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_184();
    Tensor.init(coercing:scalarType:on:)();
  }
  *(_QWORD *)v13 = v14;
  v12[0] = a1;
  static Tensor.* infix(_:_:)();
  return OUTLINED_FUNCTION_135();
}

uint64_t sub_242A84A30()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_242A84A74()
{
  return sub_242A84A30();
}

uint64_t sub_242A84A90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242A84ACC + 4 * byte_242C4D6F3[a1]))(0x676E696E7261656CLL, 0xEC00000065746152);
}

uint64_t sub_242A84ACC()
{
  return 0x3161746562;
}

uint64_t sub_242A84AE0()
{
  return 0x3261746562;
}

uint64_t sub_242A84AF4()
{
  return 0x6E6F6C69737065;
}

unint64_t sub_242A84B0C()
{
  return 0xD000000000000014;
}

uint64_t sub_242A84B98()
{
  return 0x6F69746172657469;
}

uint64_t sub_242A84BB4()
{
  return 0x6F4D646E6F636573;
}

void sub_242A84BE0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  if (*(_QWORD *)(v4 + 40))
  {
    v7 = *(_QWORD *)(a4 + 16);
    v8 = *(_QWORD *)(a4 + 24);
    v9 = type metadata accessor for OptimizerStateDictionary(0, v7, v8, a4);
    OptimizerStateDictionary.subscript.getter(a1, v9);
    if (!v12)
      sub_242A59264();
    type metadata accessor for OptimizerStateDictionary(0, v7, v8, v10);
    swift_retain();
    sub_242C480E0();
    OptimizerStateDictionary.subscript.getter(a1, (uint64_t)sub_242A85E84, v6, v9);
  }
  v11 = type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a4);
  sub_242C480E0();
  OptimizerStateDictionary.subscript.getter(a1, (uint64_t)sub_242A85E84, v6, v11);
}

void sub_242A84D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23,__int128 a24,__int128 a25,int a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  swift_bridgeObjectRelease();
  a26 = 0;
  a24 = 0u;
  a25 = 0u;
  a23 = 0u;
  swift_retain();
  sub_242B6421C((uint64_t)&a21, (uint64_t)&a23);
  v30 = a22;
  a26 = 0;
  a24 = 0u;
  a25 = 0u;
  a23 = 0u;
  swift_retain();
  sub_242B6421C((uint64_t)&a21, (uint64_t)&a23);
  *(_QWORD *)&a23 = a22;
  static Tensor.* infix(_:_:)();
  swift_release();
  a21 = a22;
  *(_QWORD *)&a23 = v30;
  static Tensor.* infix(_:_:)();
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  v31 = a23;
  a26 = 0;
  a24 = 0u;
  a25 = 0u;
  a23 = 0u;
  swift_retain();
  swift_retain();
  sub_242B6421C((uint64_t)&a21, (uint64_t)&a23);
  v32 = a22;
  a26 = 0;
  a24 = 0u;
  a25 = 0u;
  a23 = 0u;
  swift_retain();
  sub_242B6421C((uint64_t)&a21, (uint64_t)&a23);
  *(_QWORD *)&a23 = a22;
  a21 = *(_QWORD *)(v29 - 128);
  static Tensor.* infix(_:_:)();
  a21 = a22;
  *(_QWORD *)&a23 = v32;
  Tensor.squared()();
  static Tensor.* infix(_:_:)();
  swift_release();
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  v33 = a23;
  if (*(_QWORD *)(v28 + 64))
  {
    a22 = *(_QWORD *)(v28 + 64);
    swift_retain();
    OptimizerStateDictionary.subscript.getter(v27, v26);
    if ((_QWORD)a23)
    {
      a21 = v33;
      a22 = a23;
      max(_:_:)();
      swift_release_n();
      swift_retain();
      swift_retain();
      OptimizerStateDictionary.subscript.setter(&a23, v27, v26);
    }
    swift_release();
  }
  *(_QWORD *)&a23 = v31;
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&a23, v27, v26);
}

void sub_242A85018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  uint64_t v15;
  va_list va;

  va_start(va, a14);
  swift_retain_n();
  swift_retain();
  OptimizerStateDictionary.subscript.setter((uint64_t *)va, v15, v14);
}

uint64_t sub_242A85044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int v12;

  v7 = v0;
  v12 = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  swift_retain();
  sub_242B6421C((uint64_t)&v7, (uint64_t)&v9);
  sub_242A848C0(v3, *(float *)(v2 + 72));
  swift_release();
  v6 = v1;
  v7 = v9;
  sqrt(_:)();
  swift_release();
  static Tensor.+ infix(_:_:)();
  swift_release();
  static Tensor./ infix(_:_:)();
  swift_release();
  swift_release();
  if (*(float *)(v2 + 32) != 0.0)
  {
    v6 = v0;
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    v9 = 0u;
    swift_retain();
    sub_242B6421C((uint64_t)&v6, (uint64_t)&v9);
    v6 = v5;
    static Tensor.* infix(_:_:)();
    v7 = v9;
    static Tensor.+= infix(_:_:)(&v8, &v7);
    swift_release();
    swift_release();
  }
  *(_QWORD *)&v9 = v5;
  v7 = v8;
  swift_retain();
  static Tensor.- infix(_:_:)();
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242A85208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2494EDE24](&unk_242C4DC78, a3);
  return sub_242C49298();
}

uint64_t sub_242A8525C(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DC78, a1);
  return sub_242C48500();
}

uint64_t sub_242A852A8()
{
  MEMORY[0x2494EDE24](&unk_242C4DC78);
  return sub_242C48518();
}

uint64_t sub_242A852F8()
{
  MEMORY[0x2494EDE24](&unk_242C4DC78);
  return sub_242C4850C();
}

uint64_t sub_242A85348@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A84A30();
  *a1 = result;
  return result;
}

void sub_242A85384(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_242A85390(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_242A84A90, a2);
}

void sub_242A85390(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;

  *a3 = a2(*v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  a3[1] = v5;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A853BC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A84BD8(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_242A853C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A84A74();
  *a1 = result;
  return result;
}

uint64_t sub_242A853F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_242A85418(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DD18, a1);
  return sub_242C494D8();
}

uint64_t sub_242A8544C(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4DD18, a1);
  return sub_242C494E4();
}

void AdamW.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_221();
  type metadata accessor for AdamW.CodingKeys(255, v0, v1, v2);
  OUTLINED_FUNCTION_201();
}

void sub_242A854C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 - 160) = OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_162();
  *(_QWORD *)(v4 - 152) = v2;
  OUTLINED_FUNCTION_54_0();
  sub_242C49448();
  if (!v1)
  {
    *(_BYTE *)(v4 - 144) = 0;
    OUTLINED_FUNCTION_9_8();
    *(_BYTE *)(v4 - 144) = 10;
    OUTLINED_FUNCTION_196();
    OUTLINED_FUNCTION_7_10(1);
    OUTLINED_FUNCTION_7_10(2);
    OUTLINED_FUNCTION_7_10(3);
    OUTLINED_FUNCTION_7_10(6);
    OUTLINED_FUNCTION_7_10(5);
    OUTLINED_FUNCTION_185();
    sub_242A85F10();
    OUTLINED_FUNCTION_113_0();
    v6 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(v4 - 184) = *(unsigned __int8 *)(v4 - 132);
    *(_QWORD *)(v4 - 176) = v6;
    *(_QWORD *)(v4 - 192) = *(unsigned int *)(v4 - 136);
    type metadata accessor for OptimizerStateDictionary(0, v3, v0, v7);
    *(_BYTE *)(v4 - 65) = 7;
    OUTLINED_FUNCTION_145_0();
  }
  OUTLINED_FUNCTION_166();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_52_1();
}

void sub_242A85674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_69_1();
  if (!v0)
  {
    *(_QWORD *)(v2 - 200) = v1;
    v9 = *(_QWORD *)(v2 - 144);
    OUTLINED_FUNCTION_111_0(8);
    OUTLINED_FUNCTION_69_1();
    v10 = *(_QWORD *)(v2 - 144);
    OUTLINED_FUNCTION_111_0(9);
    OUTLINED_FUNCTION_113_0();
    v11 = *(_QWORD *)(v2 - 192) | (*(_QWORD *)(v2 - 184) << 32);
    OUTLINED_FUNCTION_66_1();
    v12 = *(_QWORD *)(v2 - 144);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v2 - 176);
    v14 = *(_QWORD *)(v2 - 168);
    *(_DWORD *)v14 = v3;
    *(_DWORD *)(v14 + 4) = v4;
    *(_DWORD *)(v14 + 8) = v5;
    *(_DWORD *)(v14 + 12) = v6;
    *(_QWORD *)(v14 + 16) = v13;
    *(_BYTE *)(v14 + 28) = BYTE4(v11);
    *(_DWORD *)(v14 + 24) = v11;
    *(_DWORD *)(v14 + 32) = v8;
    *(_DWORD *)(v14 + 36) = v7;
    *(_QWORD *)(v14 + 40) = *(_QWORD *)(v2 - 200);
    *(_QWORD *)(v14 + 48) = v9;
    *(_QWORD *)(v14 + 56) = v10;
    *(_QWORD *)(v14 + 64) = v12;
    *(_DWORD *)(v14 + 72) = 0;
    OUTLINED_FUNCTION_0_2();
    sub_242C480E0();
    sub_242C480E0();
    OUTLINED_FUNCTION_166();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_83();
    JUMPOUT(0x242A85624);
  }
  JUMPOUT(0x242A855FCLL);
}

void AdamW.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_221();
  v2 = OUTLINED_FUNCTION_161(v0, v1);
  type metadata accessor for AdamW.CodingKeys(v2, v3, v4, v5);
  OUTLINED_FUNCTION_214();
}

void sub_242A857B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v12 = OUTLINED_FUNCTION_120_0();
  v13 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&a9 - v15;
  v17 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v11 - 176) = *(unsigned __int8 *)(v9 + 28);
  *(_QWORD *)(v11 - 168) = v17;
  *(_QWORD *)(v11 - 184) = *(unsigned int *)(v9 + 24);
  *(_QWORD *)(v11 - 160) = *(_QWORD *)(v9 + 40);
  v18 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v11 - 216) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v11 - 208) = v18;
  *(_QWORD *)(v11 - 224) = *(_QWORD *)(v9 + 64);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  OUTLINED_FUNCTION_148_0();
  sub_242C49478();
  *(_BYTE *)(v11 - 144) = 0;
  v19 = *(_QWORD *)(v11 - 152);
  sub_242C4916C();
  if (!v19)
  {
    v21 = *(_QWORD *)(v11 - 184);
    v20 = *(_QWORD *)(v11 - 176);
    v22 = *(_QWORD *)(v11 - 168);
    *(_BYTE *)(v11 - 144) = 10;
    sub_242C49178();
    OUTLINED_FUNCTION_130_0(1);
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_130_0(2);
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_130_0(3);
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_130_0(6);
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_130_0(5);
    OUTLINED_FUNCTION_24_3();
    *(_QWORD *)(v11 - 144) = v22;
    *(_DWORD *)(v11 - 136) = v21;
    *(_BYTE *)(v11 - 132) = (v21 | (unint64_t)(v20 << 32)) >> 32;
    OUTLINED_FUNCTION_185();
    sub_242A85F88();
    OUTLINED_FUNCTION_213();
    v23 = *(_QWORD *)(v11 - 200);
    *(_QWORD *)(v11 - 144) = *(_QWORD *)(v11 - 208);
    *(_BYTE *)(v11 - 65) = 7;
    type metadata accessor for OptimizerStateDictionary(0, v23, *(_QWORD *)(v11 - 192), v24);
    OUTLINED_FUNCTION_145_0();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  OUTLINED_FUNCTION_52_1();
}

void sub_242A859A4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_55_1();
  if (!v0)
  {
    *(_QWORD *)(v1 - 144) = *(_QWORD *)(v1 - 216);
    *(_BYTE *)(v1 - 65) = 8;
    OUTLINED_FUNCTION_55_1();
    *(_QWORD *)(v1 - 144) = *(_QWORD *)(v1 - 224);
    *(_BYTE *)(v1 - 65) = 9;
    OUTLINED_FUNCTION_213();
    JUMPOUT(0x242A858A8);
  }
  JUMPOUT(0x242A85864);
}

void sub_242A85A14()
{
  AdamW.init(from:)();
}

void sub_242A85A30()
{
  AdamW.encode(to:)();
}

uint64_t sub_242A85A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[6];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v8)
        break;
      if (v6 == 1)
        goto LABEL_7;
    }
    __break(1u);
LABEL_9:
    v11 = a2;
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    v12 = a1;
    sub_242C48C38();
    sub_242C48314();
    if (*(_QWORD *)(v12 + 16))
    {
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v8)
          break;
        if (v13 == 1)
          goto LABEL_15;
      }
      __break(1u);
    }
    v14 = 1;
LABEL_15:
    v18 = v14;
    OUTLINED_FUNCTION_155_0();
    sub_242C48314();
    OUTLINED_FUNCTION_3_6();
    sub_242C48314();
    v18 = *(_QWORD *)(v11 + 16);
    OUTLINED_FUNCTION_155_0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
  v7 = 1;
LABEL_7:
  if (v7 != *(_QWORD *)(a2 + 16))
    goto LABEL_9;
  v17 = a1;
  v16 = 10;
  v9 = sub_242A66290(a3, (uint64_t)v15);
  MEMORY[0x24BDAC7A8](v9);
  Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)&v17, (uint64_t)&v16, (uint64_t)v15, (uint64_t)sub_242A86C3C);
  sub_242A662D8(a3);
  result = swift_bridgeObjectRelease();
  *a4 = v18;
  return result;
}

void *sub_242A85C6C(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (result)
    v3 = (a2 - (uint64_t)result) / 4;
  else
    v3 = 0;
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    if (v3 < v4)
    {
      __break(1u);
LABEL_14:
      result = (void *)sub_242C4901C();
      __break(1u);
      return result;
    }
    if (result)
    {
      if (a3 + 32 >= (unint64_t)result + 4 * v4 || a3 + 32 + 4 * v4 <= (unint64_t)result)
        return memcpy(result, (const void *)(a3 + 32), 4 * v4);
      goto LABEL_14;
    }
  }
  return result;
}

void sub_242A85D24(uint64_t a1)
{
  sub_242A85D6C(a1);
}

void sub_242A85D30(uint64_t a1)
{
  sub_242A85D6C(a1);
}

void sub_242A85D3C(uint64_t a1)
{
  sub_242A85D6C(a1);
}

void sub_242A85D48(uint64_t a1)
{
  sub_242A85D6C(a1);
}

void sub_242A85D54(uint64_t a1)
{
  sub_242A85DE8(a1, &qword_257220FB0);
}

void sub_242A85D60(uint64_t a1)
{
  sub_242A85D6C(a1);
}

void sub_242A85D6C(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_104_0();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_242C485CC() + 16) = a1;
    OUTLINED_FUNCTION_3_0();
  }
}

void sub_242A85DD0(uint64_t a1)
{
  sub_242A85DE8(a1, &qword_257221EA8);
}

void sub_242A85DDC(uint64_t a1)
{
  sub_242A85DE8(a1, &qword_257221EB0);
}

void sub_242A85DE8(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_104_0();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(a2);
      *(_QWORD *)(sub_242C485CC() + 16) = a1;
    }
    OUTLINED_FUNCTION_3_0();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_242A85E70(uint64_t a1)
{
  return sub_242A85FF8(a1);
}

void sub_242A85E84(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_13_5(a1);
}

uint64_t sub_242A85E98(uint64_t a1, _QWORD *a2)
{
  return sub_242A8601C(a1, a2);
}

uint64_t sub_242A85EAC(uint64_t a1)
{
  return sub_242C2B2BC(a1);
}

uint64_t type metadata accessor for RMSProp.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RMSProp.CodingKeys);
}

unint64_t sub_242A85ED4()
{
  unint64_t result;

  result = qword_257221AE0;
  if (!qword_257221AE0)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for RegularizationKind, &type metadata for RegularizationKind);
    atomic_store(result, (unint64_t *)&qword_257221AE0);
  }
  return result;
}

unint64_t sub_242A85F10()
{
  unint64_t result;

  result = qword_257221AE8;
  if (!qword_257221AE8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for GradientClippingMode, &type metadata for GradientClippingMode);
    atomic_store(result, (unint64_t *)&qword_257221AE8);
  }
  return result;
}

unint64_t sub_242A85F4C()
{
  unint64_t result;

  result = qword_257221AF0;
  if (!qword_257221AF0)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for RegularizationKind, &type metadata for RegularizationKind);
    atomic_store(result, (unint64_t *)&qword_257221AF0);
  }
  return result;
}

unint64_t sub_242A85F88()
{
  unint64_t result;

  result = qword_257221AF8;
  if (!qword_257221AF8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for GradientClippingMode, &type metadata for GradientClippingMode);
    atomic_store(result, (unint64_t *)&qword_257221AF8);
  }
  return result;
}

void sub_242A85FC4()
{
  sub_242A86BD0();
}

void sub_242A85FD8()
{
  sub_242A86BFC();
}

uint64_t type metadata accessor for Adam.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Adam.CodingKeys);
}

uint64_t sub_242A85FF8(uint64_t a1)
{
  uint64_t v1;

  return sub_242C2B3D0(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD **)(v1 + 48), *(_QWORD *)(v1 + 56), *(uint64_t **)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_242A8601C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242BA25FC(a1, *(_QWORD *)(v2 + 32), *(uint64_t (**)(uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), (uint64_t)&type metadata for Parameter, MEMORY[0x24BEE4AE0] + 8, *(_QWORD *)(v2 + 24), (uint64_t)&protocol witness table for Parameter, a2);
}

uint64_t type metadata accessor for AdamW.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdamW.CodingKeys);
}

uint64_t sub_242A86074(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&protocol conformance descriptor for RMSProp<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A860A0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_242A860A8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Adam<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A860D4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&protocol conformance descriptor for AdamW<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A86130()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_242A86138()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A86140(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 17) = *(_QWORD *)(a2 + 17);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  sub_242C480E0();
  return a1;
}

uint64_t sub_242A861A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 17) = *(_QWORD *)(a2 + 17);
  *(_QWORD *)(a1 + 12) = v3;
  LODWORD(v3) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = v3;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_242A86240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 17) = *(_QWORD *)(a2 + 17);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242A862A8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242A862E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for RMSProp(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RMSProp);
}

uint64_t sub_242A86340()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A86370(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v3;
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

uint64_t sub_242A863EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  *(_QWORD *)(a1 + 16) = v4;
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t sub_242A864B8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242A8653C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242A8657C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for Adam(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Adam);
}

uint64_t sub_242A865DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A8660C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

uint64_t sub_242A86680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void *__swift_memcpy76_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4CuLL);
}

uint64_t sub_242A8674C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t sub_242A867C8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 76))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242A86808(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 76) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 76) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AdamW(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdamW);
}

uint64_t sub_242A86868()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_242A86878(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_242A86900(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_242A8694C + 4 * byte_242C4D703[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_242A86980 + 4 * byte_242C4D6FE[v4]))();
}

uint64_t sub_242A86980(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A86988(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A86990);
  return result;
}

uint64_t sub_242A8699C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A869A4);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_242A869A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A869B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for DotNodeShape(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_242A86A44(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_242A86A90 + 4 * byte_242C4D70D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_242A86AC4 + 4 * byte_242C4D708[v4]))();
}

uint64_t sub_242A86AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A86ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A86AD4);
  return result;
}

uint64_t sub_242A86AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A86AE8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_242A86AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A86AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_242A86B00()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B10()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B20()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B30()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B40()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B50()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B60()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B70()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242A86B80()
{
  JUMPOUT(0x2494EDE24);
}

unint64_t sub_242A86B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257221EB8;
  if (!qword_257221EB8)
  {
    v1 = type metadata accessor for AdamOperation();
    result = MEMORY[0x2494EDE24](&unk_242C4B9C0, v1);
    atomic_store(result, (unint64_t *)&qword_257221EB8);
  }
  return result;
}

void sub_242A86BD0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_131_0();
  sub_242A815E8(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], *(uint64_t **)(v0 + 96), v10);
}

void sub_242A86BFC()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = OUTLINED_FUNCTION_131_0();
  sub_242A81E90(v1, v2, v3, v4, v5, v6, v7, v8, (float *)v0.n128_u64[0], (uint64_t *)v0.n128_u64[1], v9);
}

void *sub_242A86C24(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_242A85C6C(a1, a2, *a3);
}

void *sub_242A86C3C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A86C24(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2494EDD88](a1, v6, a5);
}

uint64_t sub_242A86C84(uint64_t a1)
{
  return sub_242A85EAC(a1);
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_13()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v0 + 352, v1 - 176);
}

uint64_t OUTLINED_FUNCTION_3_12@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v0 + 448) = 0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return sub_242A66290(v0 + 400, v1 - 184);
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v0 + 400, v1 - 184);
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  uint64_t v0;

  return sub_242A662D8(v0 + 352);
}

uint64_t OUTLINED_FUNCTION_7_10@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return sub_242C490B8();
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  return sub_242C490B8();
}

void OUTLINED_FUNCTION_10_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OptimizerStateDictionary.init(_:)(v1, v0, v2 - 136);
}

void OUTLINED_FUNCTION_11_8()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v1 - 184, v0 + 512);
}

void OUTLINED_FUNCTION_13_5(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_242A84888(v1, a1);
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v1 - 176, v0 + 472);
}

void OUTLINED_FUNCTION_15_3()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_18_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for OptimizerStateDictionary(0, v5, *(_QWORD *)(*(_QWORD *)(v4 + 272) + 24), a4);
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v3, v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 176);
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return sub_242C4916C();
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  uint64_t v0;

  return sub_242A662D8(v0 + 400);
}

uint64_t OUTLINED_FUNCTION_33_3@<X0>(unsigned __int8 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v6 = *(unsigned int *)(v4 + 32) | ((unint64_t)a1 << 32);
  *(_DWORD *)(v1 + 344) = *(_DWORD *)(v4 + 32);
  *(_BYTE *)(v1 + 348) = BYTE4(v6) & 1;
  *(_QWORD *)(v5 - 176) = v2;
  *(_QWORD *)(v1 + 488) = v3;
  return sub_242A6609C();
}

void OUTLINED_FUNCTION_36_3()
{
  sub_242A5E1D4();
}

void OUTLINED_FUNCTION_37_2()
{
  JUMPOUT(0x2494EDF68);
}

uint64_t OUTLINED_FUNCTION_38_2()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_39_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  OptimizerStateDictionary.subscript.getter(a1, a2, v2, v3);
}

void OUTLINED_FUNCTION_41_3()
{
  sub_242A5E1D4();
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 184);
}

void OUTLINED_FUNCTION_44_1()
{
  static Tensor.* infix(_:_:)();
}

void OUTLINED_FUNCTION_47_1(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  NSObject *v5;
  const char *v6;
  uint8_t *v7;

  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

uint64_t OUTLINED_FUNCTION_48_0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return sub_242C490B8();
}

uint64_t OUTLINED_FUNCTION_50_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(v4 + 200), *(_QWORD *)(*(_QWORD *)(v4 + 272) + 24), a4);
}

double OUTLINED_FUNCTION_53_0()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 448) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  __swift_project_boxed_opaque_existential_1(v2, v1);
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_61_1@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_242C47F3C();
}

uint64_t OUTLINED_FUNCTION_63_1(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  return sub_242A7DAD0(a1, v8, v9, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_65_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v1 - 176, v0 + 488);
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 160));
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return sub_242C49094();
}

void OUTLINED_FUNCTION_68_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return sub_242C490D0();
}

double OUTLINED_FUNCTION_70_0()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 444) = 0u;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  *(_OWORD *)(v0 + 368) = 0u;
  *(_BYTE *)(v0 + 460) = 22;
  return result;
}

uint64_t OUTLINED_FUNCTION_71_1()
{
  return sub_242C4916C();
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_73_1(_WORD *a1)
{
  *a1 = 0;
  return sub_242C47EF4();
}

void OUTLINED_FUNCTION_74_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_242A5E910(0, v4, 0, a4);
}

void OUTLINED_FUNCTION_75_1()
{
  sub_242A5E1D4();
}

uint64_t OUTLINED_FUNCTION_77_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for OptimizerStateDictionary(0, *(_QWORD *)(v4 + 248), v5, a4);
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_82_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 32) = v1 + 336;
  *(_QWORD *)(a1 - 24) = v2;
  *(_QWORD *)(a1 - 16) = v1 + 328;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_88_0()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_89_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 352) = 13;
  Tensor.init(stacking:alongAxis:scalarType:)();
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return sub_242C49094();
}

void OUTLINED_FUNCTION_92_0(unint64_t a1, double a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __n128 *v10;
  uint64_t v11;

  v10[22].n128_u64[0] = 1;
  v10[22].n128_u64[1] = a1;
  Array<A>.resolve(descriptor:)(v10 + 22, v11, a5, a6, a7, a8, a9, a10, a2, a3);
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 2;
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_94_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 1;
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  return sub_242C4913C();
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return sub_242C4913C();
}

double OUTLINED_FUNCTION_97_0()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 400) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 368) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 16))(v2, v1, *(_QWORD *)(v0 + 96));
}

void OUTLINED_FUNCTION_100_0()
{
  __break(1u);
}

void OUTLINED_FUNCTION_101_0(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, a7, 2u);
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  return sub_242C48F50();
}

double OUTLINED_FUNCTION_106_0()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 400) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 368) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  return result;
}

void OUTLINED_FUNCTION_107_0(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_242A5E910(a1 > 1, v1, 1, v2);
}

__n128 OUTLINED_FUNCTION_109_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  return 16;
}

uint64_t OUTLINED_FUNCTION_111_0@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 65) = a1;
  return v1;
}

void OUTLINED_FUNCTION_112_0()
{
  static Tensor.+ infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return sub_242C49094();
}

double OUTLINED_FUNCTION_115_0()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 448) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_116_0()
{
  return sub_242C4910C();
}

uint64_t OUTLINED_FUNCTION_117_0@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_118()
{
  return sub_242C47F00();
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  return sub_242C491A8();
}

void OUTLINED_FUNCTION_122_0()
{
  static Tensor./ infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_123_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_125_0()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  return sub_242C47F0C();
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  return sub_242C48A34();
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  uint64_t v0;

  return sub_242A70278(v0);
}

uint64_t OUTLINED_FUNCTION_130_0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return v1 - 144;
}

__n128 OUTLINED_FUNCTION_131_0()
{
  __n128 *v0;

  return v0[5];
}

__n128 OUTLINED_FUNCTION_133_0(__n128 *a1)
{
  __n128 *v1;
  unsigned __int32 v2;
  __n128 result;

  result = v1[19];
  a1[1] = result;
  a1[2].n128_u32[0] = v2;
  return result;
}

void OUTLINED_FUNCTION_134_0()
{
  static Tensor.* infix(_:_:)();
}

void OUTLINED_FUNCTION_135_0()
{
  static Tensor.* infix(_:_:)();
}

void OUTLINED_FUNCTION_136_0()
{
  static Tensor.* infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_137_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 6;
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_138_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_140_0()
{
  static Tensor.* infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_141_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_143_0()
{
  uint64_t v0;

  return sub_242A783A0((uint64_t *)(v0 + 352));
}

double OUTLINED_FUNCTION_144_0()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 400) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 368) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  return result;
}

void OUTLINED_FUNCTION_145_0()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_146()
{
  uint64_t v0;

  return v0 + 400;
}

uint64_t OUTLINED_FUNCTION_148_0()
{
  uint64_t v0;

  return v0;
}

double OUTLINED_FUNCTION_149_0()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 448) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_150_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void OUTLINED_FUNCTION_152()
{
  JUMPOUT(0x2494EC0FCLL);
}

__n128 OUTLINED_FUNCTION_153_0(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v2;
  unsigned __int32 v3;
  __n128 result;

  result = v1[12];
  a1[1] = result;
  a1[2].n128_u32[0] = v3;
  v1[19].n128_u8[15] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_154_0()
{
  return sub_242C47F54();
}

uint64_t OUTLINED_FUNCTION_155_0()
{
  return sub_242C491CC();
}

unint64_t OUTLINED_FUNCTION_156_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 360) = v1;
  return 0xD00000000000003DLL;
}

uint64_t OUTLINED_FUNCTION_157_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_158_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_161(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 24);
  result = 255;
  *(_QWORD *)(v2 - 200) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v2 - 192) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_163()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v0);
}

uint64_t (*OUTLINED_FUNCTION_164(uint64_t a1))(_BYTE *, _QWORD)
{
  uint64_t v1;
  uint64_t v2;

  return sub_242C2B268(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_165()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_166()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 152));
}

uint64_t OUTLINED_FUNCTION_167()
{
  return sub_242B89308();
}

uint64_t OUTLINED_FUNCTION_169@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_172()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 136));
}

uint64_t OUTLINED_FUNCTION_173()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_174()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_175()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_177()
{
  sqrt(_:)();
}

uint64_t OUTLINED_FUNCTION_178()
{
  return Tensor.squared()();
}

uint64_t OUTLINED_FUNCTION_179(float a1, float a2)
{
  uint64_t v2;

  return Tensor.clamped(to:)(v2 + 352, a1, a2);
}

void OUTLINED_FUNCTION_180()
{
  sqrt(_:)();
}

void OUTLINED_FUNCTION_181(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1 & ~(a1 >> 63);
}

void OUTLINED_FUNCTION_182(uint64_t a1@<X8>)
{
  int v1;
  char v2;

  *(_BYTE *)(a1 + 4) = v2;
  *(_DWORD *)a1 = v1;
}

uint64_t OUTLINED_FUNCTION_183()
{
  return sub_242C48C38();
}

double OUTLINED_FUNCTION_184()
{
  return 0.0;
}

void OUTLINED_FUNCTION_185()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
}

void OUTLINED_FUNCTION_186()
{
  sqrt(_:)();
}

float OUTLINED_FUNCTION_187()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

float OUTLINED_FUNCTION_188()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

uint64_t OUTLINED_FUNCTION_191(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_242A5DC30((uint64_t)&a9);
}

void OUTLINED_FUNCTION_192(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  OptimizerStateDictionary.subscript.getter(a1, a2, a3, v3);
}

const void *OUTLINED_FUNCTION_193()
{
  return sub_242B93328();
}

uint64_t OUTLINED_FUNCTION_194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = a2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_195()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_196()
{
  return sub_242C490C4();
}

uint64_t OUTLINED_FUNCTION_197()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_198()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 0;
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_199@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_242A85A44(v2, a1, v3 - 176, a2);
}

uint64_t OUTLINED_FUNCTION_200@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_242A85A44(a1, v2, v3 - 176, a2);
}

void OUTLINED_FUNCTION_201()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_202()
{
  uint64_t v0;

  return sub_242A66290(v0 + 352, v0 + 488);
}

uint64_t OUTLINED_FUNCTION_203(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 80) = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_205()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_206(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

__n128 OUTLINED_FUNCTION_207(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  __n128 result;

  result = v1[12];
  a1[1] = result;
  a1[2].n128_u64[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_242B93598((uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_209()
{
  return sub_242B93610();
}

void OUTLINED_FUNCTION_210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_242B933C0((uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_211()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_212()
{
  return sub_242C48A34();
}

uint64_t OUTLINED_FUNCTION_213()
{
  return sub_242C4913C();
}

void OUTLINED_FUNCTION_214()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_215()
{
  return swift_release();
}

void OUTLINED_FUNCTION_216(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 144) = *a3;
}

uint64_t OUTLINED_FUNCTION_218()
{
  uint64_t v0;

  return sub_242A707C8(v0);
}

uint64_t OUTLINED_FUNCTION_224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return sub_242C49208();
}

uint64_t OUTLINED_FUNCTION_225()
{
  uint64_t v0;

  return v0 + 320;
}

uint64_t OUTLINED_FUNCTION_226()
{
  return type metadata accessor for LayerVariableReference();
}

uint64_t OUTLINED_FUNCTION_227()
{
  return sub_242C47F60();
}

uint64_t OUTLINED_FUNCTION_228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for OptimizerStateDictionary(0, a2, v4, a4);
}

uint64_t OUTLINED_FUNCTION_229()
{
  return sub_242C47F30();
}

const void *OUTLINED_FUNCTION_232()
{
  return sub_242B93328();
}

uint64_t OUTLINED_FUNCTION_233()
{
  return swift_release();
}

uint64_t sub_242A87980()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_67_2();
  v4 = v3 & 0xC000000000000001;
  OUTLINED_FUNCTION_5_14();
  if (v4)
    OUTLINED_FUNCTION_7_11();
  v5 = OUTLINED_FUNCTION_39_4();
  OUTLINED_FUNCTION_8_5(1, 1);
  v6 = OUTLINED_FUNCTION_45_1();
  if (*(_BYTE *)(v1 + 56) == 1)
  {
    v7 = v5;
    OUTLINED_FUNCTION_44_2();
    v9 = *(_QWORD *)(v1 + 24);
    v8 = *(_QWORD *)(v1 + 32);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_34();
    v10 = OUTLINED_FUNCTION_42_3();
    OUTLINED_FUNCTION_41_4(v10, v11, v12, v9, v8, v13, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
    v5 = v14;

  }
  if (*(_BYTE *)(v1 + 57) == 1)
  {
    v15 = v6;
    OUTLINED_FUNCTION_44_2();
    v17 = *(_QWORD *)(v1 + 24);
    v16 = *(_QWORD *)(v1 + 32);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_34();
    v18 = OUTLINED_FUNCTION_42_3();
    OUTLINED_FUNCTION_41_4(v18, v19, v20, v17, v16, v21, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
    v6 = v22;

  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v23 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v23 + 16) = xmmword_242C4BF60;
  v24 = *(_QWORD *)(v1 + 24);
  v25 = *(_QWORD *)(v1 + 32);
  sub_242C480E0();
  sub_242A8A96C((uint64_t)v5, (uint64_t)v6, v24, v25, v0, (SEL *)&selRef_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_);
  *(_QWORD *)(v23 + 32) = v26;
  sub_242C4856C();

  return v23;
}

uint64_t sub_242A87B40()
{
  return sub_242A87980();
}

unint64_t sub_242A87B54()
{
  uint64_t v0;
  _BYTE v2[24];
  unint64_t v3;

  sub_242A8A798(v0, (uint64_t)v2);
  if (v3 < 3)
    return v3 + 1;
  sub_242A8A7D4((uint64_t)v2);
  return 0;
}

double sub_242A87B98()
{
  uint64_t v0;
  double v1;
  double v3;
  _BYTE v4[40];
  _BYTE v5[40];
  __int128 v6;
  unint64_t v7;

  sub_242A8A798(v0, (uint64_t)&v6);
  if (v7 >= 3)
  {
    sub_242A64518(&v6, (uint64_t)v5);
    sub_242A587A8((uint64_t)v5, (uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if (swift_dynamicCast())
    {
      v1 = *(float *)&v3;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
    else
    {
      if (!swift_dynamicCast())
      {
        sub_242C48C38();
        sub_242C48314();
        sub_242C48E78();
        sub_242C48314();
        sub_242A59170();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v1 = v3;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_242A8A7D4((uint64_t)&v6);
    return 0.0;
  }
  return v1;
}

uint64_t sub_242A87D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_242C480E0();
    sub_242C48D7C();
    v3 = 32;
    do
    {
      sub_242C4877C();
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      v3 += 16;
      --v1;
    }
    while (v1);
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_242A87DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_242C480E0();
    sub_242C48D7C();
    v3 = 40;
    do
    {
      sub_242C4877C();
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      v3 += 16;
      --v1;
    }
    while (v1);
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_242A87EA4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v14;

  OUTLINED_FUNCTION_67_2();
  v3 = v2 & 0xC000000000000001;
  OUTLINED_FUNCTION_5_14();
  if (v3)
    OUTLINED_FUNCTION_7_11();
  v4 = OUTLINED_FUNCTION_39_4();
  v5 = sub_242A87B54();
  v6 = sub_242A87D2C();
  OUTLINED_FUNCTION_9_9(v6, (unint64_t *)&qword_257221F28);
  v7 = (void *)OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_136();
  sub_242A87DE8();
  v8 = (void *)OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_136();
  v9 = sub_242A87B98();
  v11 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + 32);
  OUTLINED_FUNCTION_0_2();
  sub_242A8A6F0((uint64_t)v4, v5, (uint64_t)v7, (uint64_t)v8, v9, v11, v10, v0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v12 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_12(v12, (__n128)xmmword_242C4BF60);
  return v14;
}

uint64_t sub_242A87FD8()
{
  return sub_242A87EA4();
}

uint64_t sub_242A87FEC(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v15;

  v4 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_5_14();
  if (v4)
    OUTLINED_FUNCTION_7_11();
  v5 = OUTLINED_FUNCTION_39_4();
  OUTLINED_FUNCTION_8_5(1, 1);
  v6 = OUTLINED_FUNCTION_45_1();
  v7 = sub_242A87B54();
  v8 = sub_242A87D2C();
  OUTLINED_FUNCTION_9_9(v8, (unint64_t *)&qword_257221F28);
  v9 = (void *)OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_136();
  sub_242A87DE8();
  v10 = (void *)OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_136();
  v12 = *(_QWORD *)(v2 + 24);
  v11 = *(_QWORD *)(v2 + 32);
  OUTLINED_FUNCTION_0_2();
  sub_242A8A8CC((uint64_t)v5, (uint64_t)v6, v7, (uint64_t)v9, (uint64_t)v10, v12, v11, a1);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v13 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_12(v13, (__n128)xmmword_242C4BF60);

  return v15;
}

uint64_t sub_242A8813C(void *a1, uint64_t a2)
{
  return sub_242A87FEC(a1, a2);
}

void *sub_242A88150()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned __int8 *v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithKernelWidth_kernelHeight_strideInX_strideInY_dilationRateInX_dilationRateInY_paddingLeft_paddingRight_paddingTop_paddingBottom_paddingStyle_dataLayout_, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), 1, 1, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 80), 0, 0);
  if (!v1)
    sub_242A882DC();
  v2 = v1;
  if (*(__objc2_class **)v0 == _TtC14NeuralNetworks22Average2DPoolOperation)
  {
    v3 = (unsigned __int8 *)(v0 + 192);
    goto LABEL_6;
  }
  if (*(__objc2_class **)v0 == _TtC14NeuralNetworks30Average2DPoolGradientOperation)
  {
    v3 = (unsigned __int8 *)(v0 + 184);
LABEL_6:
    objc_msgSend(v1, sel_setIncludeZeroPadToAverage_, *v3);
  }
  objc_msgSend(v2, sel_setReturnIndicesMode_, 0);
  return v2;
}

void sub_242A882DC()
{
  unsigned __int8 *v0;
  char __dst[88];

  sub_242A62800(v0, __dst);
  OUTLINED_FUNCTION_68_2();
  sub_242C48314();
  OUTLINED_FUNCTION_131();
  sub_242A8A550();
  sub_242C48314();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_156();
  sub_242C48E78();
  sub_242C48314();
  OUTLINED_FUNCTION_54_1();
  __break(1u);
}

void sub_242A883F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_242A8ABE4(a2, a3, a4);
  OUTLINED_FUNCTION_68_2();
  sub_242C48314();
  OUTLINED_FUNCTION_131();
  sub_242A8A550();
  sub_242C48314();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_156();
  sub_242C48E78();
  sub_242C48314();
  OUTLINED_FUNCTION_54_1();
  __break(1u);
}

uint64_t sub_242A88528(void *a1, uint64_t a2)
{
  return sub_242A88560(a1, a2, (SEL *)&selRef_avgPooling2DWithSourceTensor_descriptor_name_);
}

uint64_t sub_242A88544(void *a1, uint64_t a2)
{
  return sub_242A8864C(a1, a2, (SEL *)&selRef_avgPooling2DGradientWithGradientTensor_sourceTensor_descriptor_name_);
}

uint64_t sub_242A88560(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  unint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v15;

  v7 = a2 & 0xC000000000000001;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v7)
    v8 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v8 = *(id *)(a2 + 32);
  v9 = v8;
  v10 = sub_242A88150();
  v12 = *(_QWORD *)(v3 + 24);
  v11 = *(_QWORD *)(v3 + 32);
  OUTLINED_FUNCTION_0_2();
  sub_242A8A96C((uint64_t)v9, (uint64_t)v10, v12, v11, a1, a3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v13 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_12(v13, (__n128)xmmword_242C4BF60);
  return v15;
}

uint64_t sub_242A88630(void *a1, uint64_t a2)
{
  return sub_242A88560(a1, a2, (SEL *)&selRef_maxPooling2DWithSourceTensor_descriptor_name_);
}

uint64_t sub_242A8864C(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  unint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v14;

  v6 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_17_6(0, (a2 & 0xC000000000000001) == 0);
  if (v6)
    OUTLINED_FUNCTION_16_6();
  v7 = OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_17_6(1, 1);
  v8 = OUTLINED_FUNCTION_71_2();
  v9 = sub_242A88150();
  v11 = *(_QWORD *)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 32);
  OUTLINED_FUNCTION_0_2();
  sub_242A8A9DC((uint64_t)v7, (uint64_t)v8, (uint64_t)v9, v11, v10, a1, a3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v12 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_12(v12, (__n128)xmmword_242C4BF60);
  return v14;
}

uint64_t sub_242A88740(void *a1, uint64_t a2)
{
  return sub_242A8864C(a1, a2, (SEL *)&selRef_maxPooling2DGradientWithGradientTensor_sourceTensor_descriptor_name_);
}

#error "242A88A64: call analysis failed (funcsize=182)"

uint64_t sub_242A88AA8()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  sub_242C480E0();
  sub_242C48314();
  sub_242C48314();
  return v2;
}

uint64_t sub_242A88B08()
{
  return sub_242A8875C();
}

#error "242A88E18: call analysis failed (funcsize=192)"

uint64_t sub_242A88E54()
{
  return sub_242A88B1C();
}

id sub_242A88E68()
{
  _QWORD *v0;
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_descriptorWithStrideInX_strideInY_dilationRateInX_dilationRateInY_groups_paddingLeft_paddingRight_paddingTop_paddingBottom_paddingStyle_dataLayout_weightsLayout_, v0[9], v0[8], v0[13], v0[12], v0[14], v0[11], v0[11], v0[10], v0[10], 0, 0, 2);
  if (!result)
    sub_242A882DC();
  return result;
}

id sub_242A88FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  sub_242A8AA58(0, &qword_257221F38);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_242C4B7E0;
  *(_QWORD *)(v0 + 32) = sub_242C4877C();
  *(_QWORD *)(v0 + 40) = sub_242C4877C();
  *(_QWORD *)(v0 + 48) = sub_242C4877C();
  sub_242C4856C();
  v1 = v0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_242C4B7E0;
  *(_QWORD *)(v2 + 32) = sub_242C4877C();
  *(_QWORD *)(v2 + 40) = sub_242C4877C();
  *(_QWORD *)(v2 + 48) = sub_242C4877C();
  sub_242C4856C();
  v3 = v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242C4B800;
  *(_QWORD *)(v4 + 32) = sub_242C4877C();
  *(_QWORD *)(v4 + 40) = sub_242C4877C();
  *(_QWORD *)(v4 + 48) = sub_242C4877C();
  *(_QWORD *)(v4 + 56) = sub_242C4877C();
  *(_QWORD *)(v4 + 64) = sub_242C4877C();
  *(_QWORD *)(v4 + 72) = sub_242C4877C();
  sub_242C4856C();
  v5 = sub_242A891F8(v1, v3, v4, 0);
  if (!v5)
    sub_242A882DC();
  v6 = v5;
  objc_msgSend(v5, sel_setChannelDimensionIndex_, -3);
  return v6;
}

id sub_242A891F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;

  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v5 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_descriptorWithStrides_dilationRates_paddingValues_paddingStyle_, v5, v6, v7, a4);

  return v8;
}

BOOL sub_242A892DC()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;

  if ((uint64_t)v0[14] < 2)
    return 0;
  v1 = *(_QWORD *)(v0[6] + 152);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2 <= 1)
  {
    sub_242C480E0();
    sub_242A59264();
  }
  if (*(_QWORD *)(v1 + 40) != 1)
    return 0;
  return v2 > 3 && *(_QWORD *)(*(_QWORD *)(v0[5] + 152) + 16) > 3uLL;
}

void sub_242A893A4(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;

  v5 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_17_6(0, (a2 & 0xC000000000000001) == 0);
  if (v5)
    OUTLINED_FUNCTION_16_6();
  v6 = OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_17_6(1, 1);
  v7 = OUTLINED_FUNCTION_71_2();
  if (*(_QWORD *)(v2 + 56))
  {
    OUTLINED_FUNCTION_17_6(2, 1);
    v8 = *(id *)(a2 + 48);
  }
  else
  {
    v8 = 0;
  }
  if (sub_242A892DC())
  {
    OUTLINED_FUNCTION_46_1();
    OUTLINED_FUNCTION_36_4();
    OUTLINED_FUNCTION_20_6((uint64_t)v7, -3, -4, v9, v10, v11, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
    v13 = v12;
    v14 = sub_242A88FA4();
    OUTLINED_FUNCTION_37_3();
    OUTLINED_FUNCTION_36_4();
    OUTLINED_FUNCTION_20_6((uint64_t)v6, (uint64_t)v13, (uint64_t)v14, v15, v16, v17, (SEL *)&selRef_depthwiseConvolution3DWithSourceTensor_weightsTensor_descriptor_name_);
    v19 = v18;

  }
  else
  {
    v14 = sub_242A88E68();
    OUTLINED_FUNCTION_37_3();
    OUTLINED_FUNCTION_36_4();
    OUTLINED_FUNCTION_20_6((uint64_t)v6, (uint64_t)v7, (uint64_t)v14, v20, v21, v22, (SEL *)&selRef_convolution2DWithSourceTensor_weightsTensor_descriptor_name_);
    v19 = v23;
  }

  if (!v8)
  {
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v39 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v39 + 16) = xmmword_242C4BF60;
    if (v19)
    {
      *(_QWORD *)(v39 + 32) = v19;
      sub_242C4856C();

      return;
    }
    goto LABEL_18;
  }
  v41 = v7;
  v24 = *(_QWORD *)(*(_QWORD *)(v2 + 192) + 16);
  v25 = v8;
  sub_242BC0874(1, v24);
  v27 = v26;
  sub_242B02498();
  v29 = v28;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242B4B43C();
    v27 = v40;
  }
  if (*(_QWORD *)(v27 + 16) < 2uLL)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(_QWORD *)(v27 + 40) = v29;
  v30 = sub_242C480E0();
  sub_242A5A5E8(v30);
  v31 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_9(v31, (unint64_t *)&qword_257221F28);
  v32 = (void *)OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_4_0();
  v33 = objc_msgSend(a1, sel_reshapeTensor_withShape_name_, v25, v32, 0);

  if (v19)
  {
    v34 = v19;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_37_3();
    OUTLINED_FUNCTION_14_5();
    OUTLINED_FUNCTION_12_7((uint64_t)v34, (uint64_t)v33, v35, v36, v37, (SEL *)&selRef_additionWithPrimaryTensor_secondaryTensor_name_);
    v19 = v38;

    v7 = v41;
    goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

void sub_242A8968C(void *a1, uint64_t a2)
{
  sub_242A893A4(a1, a2);
}

void sub_242A896A0(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;

  v3 = v2;
  v6 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_5_14();
  if (!v6)
  {
    v7 = OUTLINED_FUNCTION_39_4();
    OUTLINED_FUNCTION_8_5(1, 1);
    OUTLINED_FUNCTION_45_1();
    OUTLINED_FUNCTION_8_5(2, 1);
    v8 = *(id *)(a2 + 48);
    sub_242AD5DD0(2, 0);
    sub_242C4856C();
    if (sub_242A892DC())
    {
      sub_242A88AA8();
      OUTLINED_FUNCTION_36_4();
      OUTLINED_FUNCTION_20_6((uint64_t)v8, -3, -4, v9, v10, v11, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
      v13 = v12;
      if (*(_QWORD *)(sub_242B01BC8() + 16))
      {
        OUTLINED_FUNCTION_61_2();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_30_3();
        v15 = v14;
        OUTLINED_FUNCTION_4_0();
        v16 = sub_242A88FA4();
        OUTLINED_FUNCTION_26_4();
        OUTLINED_FUNCTION_35_3();
        sub_242A8AA90((uint64_t)v7, v13, v15, (uint64_t)v16, v17, v18, a1);
        OUTLINED_FUNCTION_65_2();
        v19 = v3;
        OUTLINED_FUNCTION_38_3();
      }
      __break(1u);
    }
    else if (*(_QWORD *)(OUTLINED_FUNCTION_70_1() + 16))
    {
      OUTLINED_FUNCTION_61_2();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_30_3();
      v21 = v20;
      v22 = OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_9_9(v22, (unint64_t *)&qword_257221F28);
      OUTLINED_FUNCTION_32_4();
      OUTLINED_FUNCTION_136();
      v23 = OUTLINED_FUNCTION_51_2();
      OUTLINED_FUNCTION_26_4();
      OUTLINED_FUNCTION_35_3();
      OUTLINED_FUNCTION_49_2((uint64_t)v7, (uint64_t)v8, v24, v25, v26, v27, v28, (SEL *)&selRef_convolution2DDataGradientWithIncomingGradientTensor_weightsTensor_outputShape_forwardConvolutionDescriptor_name_);
      OUTLINED_FUNCTION_65_2();

      v29 = v21;
      OUTLINED_FUNCTION_38_3();
    }
    __break(1u);
    JUMPOUT(0x242A89BECLL);
  }
  OUTLINED_FUNCTION_7_11();
}

void sub_242A89CA4(void *a1, uint64_t a2)
{
  sub_242A896A0(a1, a2);
}

#error "242A89F00: call analysis failed (funcsize=148)"

uint64_t sub_242A89F3C()
{
  return sub_242A89CB8();
}

#error "242A8A1A4: call analysis failed (funcsize=160)"

uint64_t sub_242A8A1F0()
{
  return sub_242A89F50();
}

uint64_t sub_242A8A204(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221EC0, (uint64_t (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DGradientOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A240(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221EC8, (uint64_t (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A27C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221ED0, (uint64_t (*)(uint64_t))type metadata accessor for Convolution2DGradientOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A2B8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221ED8, (uint64_t (*)(uint64_t))type metadata accessor for Convolution2DOperation, (uint64_t)&unk_242C54D40);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A2F4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221EE0, (uint64_t (*)(uint64_t))type metadata accessor for LinearGradientOperation, (uint64_t)&unk_242C54C0C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A330(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221EE8, (uint64_t (*)(uint64_t))type metadata accessor for LinearOperation, (uint64_t)&unk_242C54D24);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A36C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221EF0, (uint64_t (*)(uint64_t))type metadata accessor for Max2DPoolGradientOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A3A8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221EF8, (uint64_t (*)(uint64_t))type metadata accessor for Max2DPoolOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A3E4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F00, (uint64_t (*)(uint64_t))type metadata accessor for Average2DPoolGradientOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A420(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F08, (uint64_t (*)(uint64_t))type metadata accessor for Average2DPoolOperation, (uint64_t)&unk_242C5367C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A45C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F10, (uint64_t (*)(uint64_t))type metadata accessor for PadGradientOperation, (uint64_t)&unk_242C514B4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A498(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F18, (uint64_t (*)(uint64_t))type metadata accessor for PadOperation, (uint64_t)&unk_242C514B4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A4D4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F20, (uint64_t (*)(uint64_t))type metadata accessor for MatrixMultiplicationOperation, (uint64_t)&unk_242C54D08);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8A510(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2494EDE24](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_242A8A550()
{
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_0_11();
}

void sub_242A8A59C()
{
  OUTLINED_FUNCTION_56_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221F40);
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_3_0();
}

void sub_242A8A5E0()
{
  OUTLINED_FUNCTION_57_2();
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_3_0();
}

void sub_242A8A61C()
{
  OUTLINED_FUNCTION_56_0();
  sub_242C480E0();
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_3_0();
}

void sub_242A8A660()
{
  OUTLINED_FUNCTION_57_2();
  sub_242C480E0();
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_3_0();
}

void sub_242A8A6A0(uint64_t a1)
{
  _QWORD v1[6];

  v1[4] = 96;
  v1[5] = 0xE100000000000000;
  sub_242A8ABFC(a1, (uint64_t)v1);
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_0_11();
}

id sub_242A8A6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v14;
  id v15;

  v14 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a8, sel_padTensor_withPaddingMode_leftPadding_rightPadding_constantValue_name_, a1, a2, a3, a4, v14, a5);

  return v15;
}

uint64_t sub_242A8A798(uint64_t a1, uint64_t a2)
{
  _s11PaddingModeOwcp(a2, a1);
  return a2;
}

uint64_t sub_242A8A7D4(uint64_t a1)
{
  _s11PaddingModeOwxx(a1);
  return a1;
}

void sub_242A8A808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_242A8A96C(a1, a2, a3, a4, a5, (SEL *)&selRef_additionWithPrimaryTensor_secondaryTensor_name_);
}

void sub_242A8A814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_242A8A96C(a1, a2, a3, a4, a5, (SEL *)&selRef_reshapeTensor_withShape_name_);
}

void sub_242A8A820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v7;
  void *v8;
  id v9;

  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v7 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_reductionSumWithTensor_axes_name_, a1, v7, v8);

  OUTLINED_FUNCTION_7_0();
}

id sub_242A8A8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v14;
  id v15;

  v14 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a8, sel_padGradientWithIncomingGradientTensor_sourceTensor_paddingMode_leftPadding_rightPadding_name_, a1, a2, a3, a4, a5, v14);

  return v15;
}

void sub_242A8A96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  void *v10;
  id v11;

  v10 = (void *)sub_242C48224();
  OUTLINED_FUNCTION_34();
  v11 = objc_msgSend(a5, *a6, a1, a2, v10);

  OUTLINED_FUNCTION_7_0();
}

void sub_242A8A9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, SEL *a7)
{
  void *v12;
  id v13;

  v12 = (void *)sub_242C48224();
  OUTLINED_FUNCTION_34();
  v13 = objc_msgSend(a6, *a7, a1, a2, a3, v12);

  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242A8AA58(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_242A8AA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v11;
  void *v12;
  id v13;

  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v11 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a7, sel_depthwiseConvolution3DDataGradientWithIncomingGradientTensor_weightsTensor_outputShape_descriptor_name_, a1, a2, v11, a4, v12);

  return v13;
}

void sub_242A8AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, SEL *a8)
{
  void *v14;
  id v15;

  v14 = (void *)sub_242C48224();
  OUTLINED_FUNCTION_34();
  v15 = objc_msgSend(a7, *a8, a1, a2, a3, a4, v14);

  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242A8ABE4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return sub_242C480E0();
  return result;
}

uint64_t sub_242A8ABFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  return sub_242C485A8();
}

uint64_t OUTLINED_FUNCTION_4_12(__n128 *a1, __n128 a2)
{
  unint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return sub_242B4B240(0, v2, v1);
}

void OUTLINED_FUNCTION_7_11()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_8_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B4B240(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_9_9(uint64_t a1, unint64_t *a2)
{
  return sub_242A8AA58(0, a2);
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_12_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  void *v6;

  sub_242A8A96C(a1, a2, a3, a4, v6, a6);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return sub_242C4856C();
}

void OUTLINED_FUNCTION_16_6()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_17_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B4B240(a1, a2, v2);
}

void OUTLINED_FUNCTION_20_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  void *v7;

  sub_242A8A9DC(a1, a2, a3, a4, a5, v7, a7);
}

uint64_t OUTLINED_FUNCTION_21_5()
{
  return sub_242A88AA8();
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  return sub_242C4853C();
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return sub_242A88AA8();
}

void OUTLINED_FUNCTION_27_3()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_28_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B4B240(a1, a2, v2);
}

void OUTLINED_FUNCTION_30_3()
{
  uint64_t v0;

  sub_242A5A5E8(v0);
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return sub_242C4853C();
}

id OUTLINED_FUNCTION_33_4(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, v3, 0);
}

void OUTLINED_FUNCTION_34_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{

}

uint64_t OUTLINED_FUNCTION_37_3()
{
  return sub_242A88AA8();
}

void OUTLINED_FUNCTION_38_3()
{
  JUMPOUT(0x2494EC0CCLL);
}

id OUTLINED_FUNCTION_39_4()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return sub_242A88AA8();
}

void OUTLINED_FUNCTION_41_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  void *v7;
  uint64_t v8;

  sub_242A8A9DC(v8, -1, -2, a4, a5, v7, a7);
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_43_3()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return sub_242C48C38();
}

id OUTLINED_FUNCTION_45_1()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return sub_242A88AA8();
}

void OUTLINED_FUNCTION_48_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;

  sub_242A8AB60(a1, a2, v8, v10, a5, a6, v9, a8);
}

void OUTLINED_FUNCTION_49_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;

  sub_242A8AB60(a1, a2, v8, v10, a5, a6, v9, a8);
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return sub_242C4853C();
}

id OUTLINED_FUNCTION_51_2()
{
  return sub_242A88E68();
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_62_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  return sub_242C2F2BC(v1);
}

void OUTLINED_FUNCTION_63_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

}

uint64_t OUTLINED_FUNCTION_64_1(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_242C4877C();
}

void OUTLINED_FUNCTION_65_2()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_69_2()
{
  return sub_242C48278();
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return sub_242B01BC8();
}

id OUTLINED_FUNCTION_71_2()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

id OUTLINED_FUNCTION_72_2()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_73_2()
{
  return sub_242C48278();
}

BOOL LearningPhase.isTraining.getter()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE v3[80];
  uint64_t v4;

  if (*v0)
    return *v0 == 1;
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v3);
  swift_release();
  if (v4)
    v1 = *(unsigned __int8 *)(v4 + 24);
  else
    v1 = 0;
  sub_242A5DC30((uint64_t)v3);
  return v1;
}

uint64_t LearningPhase.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696E69617274;
  if (*v0 != 1)
    v1 = 0x636E657265666E69;
  if (*v0)
    return v1;
  else
    return 0x6974616D6F747561;
}

NeuralNetworks::LearningPhase_optional __swiftcall LearningPhase.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (NeuralNetworks::LearningPhase_optional)rawValue;
}

uint64_t LearningPhase.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_242A8B008()
{
  unsigned __int8 *v0;

  return sub_242C4497C(*v0);
}

void sub_242A8B010()
{
  sub_242A5CB5C();
}

uint64_t sub_242A8B018(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242BA8E3C(a1, *v1);
}

NeuralNetworks::LearningPhase_optional sub_242A8B020(Swift::Int *a1)
{
  return LearningPhase.init(rawValue:)(*a1);
}

uint64_t sub_242A8B028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = LearningPhase.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_242A8B04C()
{
  sub_242A8B204();
  return sub_242C48524();
}

uint64_t sub_242A8B0A8()
{
  sub_242A8B204();
  return sub_242C484F4();
}

unint64_t sub_242A8B0FC()
{
  unint64_t result;

  result = qword_257221F48;
  if (!qword_257221F48)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LearningPhase, &type metadata for LearningPhase);
    atomic_store(result, (unint64_t *)&qword_257221F48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LearningPhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242A8B184 + 4 * byte_242C4DFC1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242A8B1B8 + 4 * byte_242C4DFBC[v4]))();
}

uint64_t sub_242A8B1B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A8B1C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A8B1C8);
  return result;
}

uint64_t sub_242A8B1D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A8B1DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242A8B1E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A8B1E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LearningPhase()
{
  return &type metadata for LearningPhase;
}

unint64_t sub_242A8B204()
{
  unint64_t result;

  result = qword_257221F50;
  if (!qword_257221F50)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LearningPhase, &type metadata for LearningPhase);
    atomic_store(result, (unint64_t *)&qword_257221F50);
  }
  return result;
}

id sub_242A8B240()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  _QWORD v15[3];
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];
  __int128 v23;
  char v24;
  uint64_t v25;
  char v26;

  v1 = v0;
  sub_242B9156C((uint64_t)&v25);
  v2 = v26;
  swift_bridgeObjectRelease();
  LOBYTE(v21[0]) = v2;
  sub_242BF51CC();
  v4 = v3;
  sub_242A8B970(v1 + 48, (uint64_t)&v25);
  sub_242A8B9AC(&v25, v21);
  if (v24)
  {
    if (v24 == 1)
    {
      sub_242A64518(v21, (uint64_t)v19);
      sub_242A64518(v22, (uint64_t)v17);
      sub_242A64518(&v23, (uint64_t)v15);
      v5 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithDistribution_dataType_, 2, v4);
      if (v5)
      {
        __swift_project_boxed_opaque_existential_1(v19, v20);
        *(float *)&v6 = sub_242B91580();
        objc_msgSend(v5, sel_setMean_, v6);
        __swift_project_boxed_opaque_existential_1(v17, v18);
        *(float *)&v7 = sub_242B91580();
        objc_msgSend(v5, sel_setStandardDeviation_, v7);
        __swift_project_boxed_opaque_existential_1(v15, v16);
        *(float *)&v8 = -sub_242B91580();
        objc_msgSend(v5, sel_setMin_, v8);
        __swift_project_boxed_opaque_existential_1(v15, v16);
        *(float *)&v9 = sub_242B91580();
        objc_msgSend(v5, sel_setMax_, v9);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
    else
    {
      sub_242A64518(v21, (uint64_t)v19);
      sub_242A64518(v22, (uint64_t)v17);
      v5 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithDistribution_dataType_, 0, v4);
      if (v5)
      {
        __swift_project_boxed_opaque_existential_1(v19, v20);
        if ((_DWORD)v4 == 536870944)
        {
          objc_msgSend(v5, sel_setMinInteger_, sub_242B9168C());
          __swift_project_boxed_opaque_existential_1(v17, v18);
          objc_msgSend(v5, sel_setMaxInteger_, sub_242B9168C());
        }
        else
        {
          *(float *)&v12 = sub_242B91580();
          objc_msgSend(v5, sel_setMin_, v12);
          __swift_project_boxed_opaque_existential_1(v17, v18);
          *(float *)&v13 = sub_242B91580();
          objc_msgSend(v5, sel_setMax_, v13);
        }
      }
    }
  }
  else
  {
    sub_242A64518(v21, (uint64_t)v19);
    sub_242A64518(v22, (uint64_t)v17);
    v5 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithDistribution_dataType_, 1, v4);
    if (v5)
    {
      __swift_project_boxed_opaque_existential_1(v19, v20);
      *(float *)&v10 = sub_242B91580();
      objc_msgSend(v5, sel_setMean_, v10);
      __swift_project_boxed_opaque_existential_1(v17, v18);
      *(float *)&v11 = sub_242B91580();
      objc_msgSend(v5, sel_setStandardDeviation_, v11);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return v5;
}

uint64_t sub_242A8B5E0(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  int64x2_t v18;
  int64x2_t v19;
  __int128 v20;
  char v21;
  char v22;
  uint64_t v23[10];
  char v24;
  int64x2_t v25;
  char v26;
  __int128 v27;
  int64x2_t v28;
  char v29;

  v5 = sub_242A8B240();
  if (!v5)
  {
    v23[0] = 0xD00000000000002ELL;
    v23[1] = 0x8000000242C66550;
    v24 = 3;
    if ((*(_BYTE *)(v2 + 241) & 1) != 0)
    {
      v18 = vdupq_n_s64(0x12uLL);
      v18.i64[0] = (uint64_t)"encode(to:inputs:)";
      v19 = vdupq_n_s64(0x6FuLL);
      v19.i64[0] = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Backends/MPSGrap"
                            "h/MPSRandomOp.swift";
      v20 = xmmword_242C4E110;
      v21 = 2;
      v22 = 2;
    }
    else
    {
      v22 = *(_BYTE *)(v2 + 240);
      v20 = *(_OWORD *)(v2 + 208);
      v18 = *(int64x2_t *)(v2 + 224);
      v19 = *(int64x2_t *)(v2 + 184);
      v21 = *(_BYTE *)(v2 + 200);
    }
    v25 = v19;
    v26 = v21;
    v27 = v20;
    v28 = v18;
    v29 = v22;
    sub_242A882DC();
  }
  v6 = v5;
  sub_242B9156C((uint64_t)v23);
  sub_242A5A5E8(v23[0]);
  swift_bridgeObjectRelease();
  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v7 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v8 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v8 = *(id *)(a2 + 32);
  v9 = v8;
  sub_242C480E0();
  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a1, sel_randomTensorWithShape_descriptor_stateTensor_name_, v7, v6, v9, v10);

  sub_242A8AA58(0, (unint64_t *)&qword_257220F18);
  v12 = sub_242C48548();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v13 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v13 + 16) = xmmword_242C4BF60;
  sub_242B4B240(0, (v12 & 0xC000000000000001) == 0, v12);
  if ((v12 & 0xC000000000000001) != 0)
    v14 = (id)MEMORY[0x2494EC84C](0, v12);
  else
    v14 = *(id *)(v12 + 32);
  v15 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 32) = v15;
  OUTLINED_FUNCTION_0_18();
  v16 = v23[0];

  return v16;
}

uint64_t sub_242A8B84C(void *a1, uint64_t a2)
{
  return sub_242A8B5E0(a1, a2);
}

uint64_t sub_242A8B860(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v3 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v3 + 16) = xmmword_242C4BF60;
  v4 = v1[7];
  v6 = v1[3];
  v5 = v1[4];
  sub_242C480E0();
  *(_QWORD *)(v3 + 32) = sub_242A8B9E8(v4, v6, v5, a1);
  OUTLINED_FUNCTION_0_18();
  return v8;
}

uint64_t sub_242A8B8E4(void *a1)
{
  return sub_242A8B860(a1);
}

uint64_t sub_242A8B8F8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F58, (uint64_t (*)(uint64_t))type metadata accessor for RandomStateOperation, (uint64_t)&unk_242C59D50);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8B934(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8B970(uint64_t a1, uint64_t a2)
{
  sub_242B92100(a2, a1);
  return a2;
}

void *sub_242A8B9AC(const void *a1, void *a2)
{
  __swift_memcpy121_8(a2, a1);
  return a2;
}

id sub_242A8B9E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;

  v6 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a4, sel_randomPhiloxStateTensorWithSeed_name_, a1, v6);

  return v7;
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return sub_242C4856C();
}

NeuralNetworks::ReductionKind_optional __swiftcall ReductionKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NeuralNetworks::ReductionKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_242C49064();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ReductionKind.allCases.getter()
{
  return &unk_25137BC18;
}

uint64_t ReductionKind.rawValue.getter()
{
  char *v0;

  return qword_242C4E278[*v0];
}

void sub_242A8BAE0(char *a1, char *a2)
{
  sub_242B3F730(*a1, *a2);
}

unint64_t sub_242A8BAF0()
{
  unint64_t result;

  result = qword_257221F60;
  if (!qword_257221F60)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for ReductionKind, &type metadata for ReductionKind);
    atomic_store(result, (unint64_t *)&qword_257221F60);
  }
  return result;
}

void sub_242A8BB2C()
{
  unsigned __int8 *v0;

  sub_242C44980(*v0);
}

uint64_t sub_242A8BB34()
{
  return sub_242A5CB30();
}

void sub_242A8BB3C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA92A0(a1, *v1);
}

NeuralNetworks::ReductionKind_optional sub_242A8BB44(Swift::String *a1)
{
  return ReductionKind.init(rawValue:)(*a1);
}

uint64_t sub_242A8BB50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ReductionKind.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

unint64_t sub_242A8BB7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257221F68;
  if (!qword_257221F68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221F70);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257221F68);
  }
  return result;
}

void sub_242A8BBC0(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137BC18;
}

uint64_t getEnumTagSinglePayload for ReductionKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReductionKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_242A8BCA4 + 4 * byte_242C4E15D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_242A8BCD8 + 4 * byte_242C4E158[v4]))();
}

uint64_t sub_242A8BCD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A8BCE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A8BCE8);
  return result;
}

uint64_t sub_242A8BCF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A8BCFCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_242A8BD00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A8BD08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReductionKind()
{
  return &type metadata for ReductionKind;
}

uint64_t sub_242A8BD24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType();
  v10[2] = a1;
  v11 = v1;
  v5 = *(void (**)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v6 = sub_242A8AA58(0, (unint64_t *)&qword_257220F18);
  v5(&v12, sub_242A8C0F4, v10, v6, ObjectType, v3);
  v7 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v8 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v8 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v8 + 32) = v7;
  v12 = v8;
  sub_242C4856C();
  return v12;
}

void sub_242A8BDF0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  if (a1)
  {
    v8 = MEMORY[0x2494EB790](a1, a2 - a1);
    v10 = v9;
    v11 = (void *)sub_242C47BD0();
    sub_242A69418(v8, v10);
    v12 = *(_QWORD *)(a4 + 64);
    ObjectType = swift_getObjectType();
    sub_242BC8254(ObjectType, v12, v14);
    if (v15)
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 16))(&v20, ObjectType, v12);
      sub_242A5A5E8(v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_242C4BF60;
      sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
      *(_QWORD *)(v16 + 32) = sub_242C48A04();
      v20 = v16;
      sub_242C4856C();
    }
    sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
    v17 = (void *)sub_242C4853C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v20, ObjectType, v12);
    sub_242BF51CC();
    v19 = objc_msgSend(a3, sel_constantWithData_shape_dataType_, v11, v17, v18);

    *a5 = v19;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_242A8BFA0(uint64_t a1)
{
  return sub_242A8BD24(a1);
}

uint64_t sub_242A8BFB4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_242A5A5E8(*(_QWORD *)(v1 + 40));
  v5 = v4;
  sub_242BF51CC();
  v7 = v6;
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v2 + 32);
  sub_242C480E0();
  v10 = sub_242A8C10C(v5, v7, v8, v9, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v11 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v11 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v11 + 32) = v10;
  v13 = v11;
  sub_242C4856C();
  return v13;
}

uint64_t sub_242A8C068(void *a1)
{
  return sub_242A8BFB4(a1);
}

uint64_t sub_242A8C07C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F78, (uint64_t (*)(uint64_t))type metadata accessor for InputOperation, (uint64_t)&unk_242C5314C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8C0B8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257221F80, (uint64_t (*)(uint64_t))type metadata accessor for ConstantOperation, (uint64_t)&unk_242C4C02C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242A8C0F4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_242A8BDF0(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

id sub_242A8C10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v7;
  void *v8;
  id v9;

  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v7 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_placeholderWithShape_dataType_name_, v7, a2, v8);

  return v9;
}

void sub_242A8C1C4(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_242A8C1FC()
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_19();
  sub_242C48C38();
  sub_242C48314();
  OUTLINED_FUNCTION_3_14();
  sub_242C48314();
  return v1;
}

void sub_242A8C348()
{
  uint64_t v0;

  sub_242A8C1C4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_242A8C354(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _QWORD v4[30];

  v3 = (void *)MEMORY[0x2494ED6EC]();
  sub_242A670D8(a1, (uint64_t)v4);
  type metadata accessor for BNNSExecutor();
  swift_initStackObject();
  sub_242A8C428(v4);
  sub_242A8C4C0();
  sub_242A8C8A0();
  if (!v1)
    sub_242A8D010();
  swift_release();
  objc_autoreleasePoolPop(v3);
}

uint64_t type metadata accessor for BNNSBackend()
{
  return objc_opt_self();
}

void sub_242A8C404(uint64_t a1)
{
  sub_242A8C354(a1);
}

uint64_t sub_242A8C418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242A670D8(*(_QWORD *)(v1 + 16) + 24, a1);
}

uint64_t sub_242A8C428(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[240];

  sub_242A670D8((uint64_t)a1, (uint64_t)v5);
  type metadata accessor for BNNSExecutor.Context();
  v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220F60);
  *(_QWORD *)(v3 + 16) = sub_242C480BC();
  memcpy((void *)(v3 + 24), v5, 0xECuLL);
  sub_242A6945C(a1);
  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_242A8C4C0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __int128 v42;
  _QWORD *v43;
  _OWORD v44[5];
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;

  sub_242A8C418((uint64_t)v44);
  v0 = (unint64_t)v45;
  sub_242C480E0();
  sub_242A6945C(v44);
  if (v0 >> 62)
  {
LABEL_36:
    sub_242C480E0();
    v1 = sub_242C48FC8();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v1)
    return swift_bridgeObjectRelease();
LABEL_3:
  v41 = (_QWORD *)(*(_QWORD *)(v40 + 16) + 16);
  v38 = (_QWORD *)v0;
  v39 = v0 & 0xC000000000000001;
  v2 = 4;
  v37 = v1;
  while (1)
  {
    if (v39)
    {
      v3 = MEMORY[0x2494EC84C](v2 - 4, v0);
    }
    else
    {
      v3 = *(_QWORD *)(v0 + 8 * v2);
      swift_retain();
    }
    if (__OFADD__(v2 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    sub_242A8C418((uint64_t)v44);
    v6 = v46;
    v5 = v47;
    sub_242BC9724();
    v4 = v2 - 3;
    if (v5[2])
    {
      v0 = (unint64_t)v5;
      v9 = sub_242A61310(v7, v8);
      if ((v10 & 1) != 0)
      {
        v11 = *(_QWORD *)(v5[7] + 8 * v9);
        if ((v11 & 0x8000000000000000) != 0)
          goto LABEL_32;
        if (v11 >= *(_QWORD *)(v6 + 16))
          goto LABEL_33;
LABEL_17:
        v17 = v6 + 16 * v11;
        v18 = *(_QWORD *)(v17 + 32);
        v19 = *(_QWORD *)(v17 + 40);
        sub_242C480E0();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    v6 = v48;
    v12 = v49;
    sub_242BC9724();
    if (v12[2])
    {
      v0 = (unint64_t)v12;
      v15 = sub_242A61310(v13, v14);
      if ((v16 & 1) != 0)
      {
        v11 = *(_QWORD *)(v12[7] + 8 * v15);
        if ((v11 & 0x8000000000000000) != 0)
          goto LABEL_34;
        if (v11 >= *(_QWORD *)(v6 + 16))
          goto LABEL_35;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    sub_242BC9724();
    v18 = v20;
    v19 = v21;
LABEL_19:
    sub_242A6945C(v44);
    swift_retain();
    v22 = sub_242BCA40C();
    objc_msgSend(v22, sel_lock);

    sub_242BCB5B4(v3, 0, 0, (uint64_t)v44);
    v23 = sub_242BCA40C();
    objc_msgSend(v23, sel_unlock);
    swift_release();

    v42 = v44[0];
    swift_beginAccess();
    swift_unknownObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v43 = (_QWORD *)*v41;
    v0 = (unint64_t)v43;
    *v41 = 0x8000000000000000;
    v24 = v18;
    v25 = sub_242A61310(v18, v19);
    if (__OFADD__(*(_QWORD *)(v0 + 16), (v26 & 1) == 0))
      goto LABEL_30;
    v27 = v25;
    v28 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222170);
    v0 = (unint64_t)&v43;
    if ((sub_242C48EF0() & 1) != 0)
      break;
LABEL_23:
    v31 = v43;
    if ((v28 & 1) != 0)
    {
      *(_OWORD *)(v43[7] + 16 * v27) = v42;
    }
    else
    {
      v43[(v27 >> 6) + 8] |= 1 << v27;
      v32 = (uint64_t *)(v31[6] + 16 * v27);
      *v32 = v24;
      v32[1] = v19;
      *(_OWORD *)(v31[7] + 16 * v27) = v42;
      v33 = v31[2];
      v34 = __OFADD__(v33, 1);
      v35 = v33 + 1;
      if (v34)
        goto LABEL_31;
      v31[2] = v35;
      sub_242C480E0();
    }
    *v41 = v31;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    ++v2;
    v0 = (unint64_t)v38;
    if (v4 == v37)
      return swift_bridgeObjectRelease();
  }
  v0 = (unint64_t)v43;
  v29 = sub_242A61310(v24, v19);
  if ((v28 & 1) == (v30 & 1))
  {
    v27 = v29;
    goto LABEL_23;
  }
  result = sub_242C492EC();
  __break(1u);
  return result;
}

uint64_t sub_242A8C8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  _QWORD *v81;
  _QWORD v82[18];
  uint64_t v83;
  uint64_t v84;

  v1 = v0;
  sub_242A8C418((uint64_t)v82);
  v2 = v82[15];
  sub_242C480E0();
  sub_242A6945C(v82);
  v65 = *(_QWORD *)(v2 + 16);
  if (!v65)
    return swift_bridgeObjectRelease();
  v3 = 0;
  v66 = v2;
  v67 = v2 + 32;
  while (v3 < *(_QWORD *)(v2 + 16))
  {
    v4 = (uint64_t *)(v67 + 16 * v3);
    v5 = *v4;
    v6 = v4[1];
    swift_getObjectType();
    if (!dynamic_cast_existential_1_conditional(v5))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      ObjectType = swift_getObjectType();
      v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(ObjectType, v6);
      v63 = v62;
      sub_242A6A5B0();
      swift_allocError();
      *(_QWORD *)v64 = v61;
      *(_QWORD *)(v64 + 8) = v63;
      *(_BYTE *)(v64 + 16) = 0;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
    v69 = v7;
    v68 = v3;
    v8 = swift_getObjectType();
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 32);
    swift_unknownObjectRetain_n();
    v72 = v8;
    v10 = v9(v8, v6);
    if (v10 >> 62)
    {
      sub_242C480E0();
      v11 = sub_242C48FC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v73 = v6;
    v70 = v1;
    if (v11)
    {
      v12 = 4;
      v13 = (_QWORD *)MEMORY[0x24BEE4B00];
      while (1)
      {
        if ((v10 & 0xC000000000000001) != 0)
          MEMORY[0x2494EC84C](v12 - 4, v10);
        else
          swift_retain();
        if (__OFADD__(v12 - 4, 1))
          goto LABEL_52;
        v14 = sub_242A8D374();
        if (!v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v82[0] = 0;
          v82[1] = 0xE000000000000000;
          sub_242C48C38();
          swift_bridgeObjectRelease();
          sub_242A8C418((uint64_t)v82);
          sub_242BD01E4(v72, v73);
          sub_242A6945C(v82);
          sub_242C48314();
          swift_bridgeObjectRelease();
          sub_242C48314();
          sub_242A6A5B0();
          swift_allocError();
          *(_QWORD *)v58 = 0xD000000000000027;
          *(_QWORD *)(v58 + 8) = 0x8000000242C667A0;
          *(_BYTE *)(v58 + 16) = 1;
          swift_willThrow();
          swift_release();
          return swift_unknownObjectRelease_n();
        }
        v84 = v14;
        v77 = v12;
        v79 = v15;
        v75 = v12 - 3;
        v16 = sub_242B89308();
        swift_isUniquelyReferenced_nonNull_native();
        v82[0] = v13;
        v17 = sub_242A613F0();
        if (__OFADD__(v13[2], (v18 & 1) == 0))
          goto LABEL_53;
        v19 = v17;
        v20 = v18;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257222168);
        if ((sub_242C48EF0() & 1) != 0)
        {
          v21 = sub_242A613F0();
          if ((v20 & 1) != (v22 & 1))
            goto LABEL_59;
          v19 = v21;
        }
        v13 = (_QWORD *)v82[0];
        if ((v20 & 1) != 0)
        {
          v23 = (_QWORD *)(*(_QWORD *)(v82[0] + 56) + 16 * v19);
          swift_unknownObjectRelease();
          *v23 = v84;
          v23[1] = v79;
        }
        else
        {
          *(_QWORD *)(v82[0] + 8 * (v19 >> 6) + 64) |= 1 << v19;
          *(_QWORD *)(v13[6] + 8 * v19) = v16;
          v24 = (_QWORD *)(v13[7] + 16 * v19);
          *v24 = v84;
          v24[1] = v79;
          v25 = v13[2];
          v26 = __OFADD__(v25, 1);
          v27 = v25 + 1;
          if (v26)
            goto LABEL_55;
          v13[2] = v27;
        }
        swift_release();
        swift_bridgeObjectRelease();
        v12 = v77 + 1;
        if (v75 == v11)
          goto LABEL_25;
      }
    }
    v13 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_25:
    swift_bridgeObjectRelease();
    v28 = swift_getObjectType();
    v29 = (*(uint64_t (**)(_QWORD *, uint64_t))(v69 + 16))(v13, v28);
    if (v70)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    v30 = v29;
    swift_bridgeObjectRelease();
    v71 = v30;
    v31 = *(_QWORD *)(v30 + 16);
    v32 = v73;
    v78 = v31;
    if (v31)
    {
      v33 = 0;
      v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 72);
      v34 = (_QWORD *)(*(_QWORD *)(v74 + 16) + 16);
      while (1)
      {
        v80 = *(_OWORD *)(v71 + 32 + 16 * v33);
        sub_242A8C418((uint64_t)v82);
        swift_unknownObjectRetain();
        v35 = v76(v33, v72, v32);
        v36 = v35;
        v38 = v37;
        v39 = v83;
        if (*(_QWORD *)(v83 + 16))
        {
          v40 = v82[17];
          sub_242C480E0();
          v41 = sub_242A61310(v36, v38);
          v42 = v38;
          if ((v43 & 1) != 0)
          {
            v44 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v41);
            if ((v44 & 0x8000000000000000) != 0)
              goto LABEL_56;
            if (v44 >= *(_QWORD *)(v40 + 16))
              goto LABEL_57;
            v45 = v40 + 16 * v44;
            v36 = *(_QWORD *)(v45 + 32);
            v42 = *(_QWORD *)(v45 + 40);
            sub_242C480E0();
            swift_bridgeObjectRelease();
          }
          v84 = v36;
          swift_bridgeObjectRelease();
          v38 = v42;
        }
        else
        {
          v84 = v35;
        }
        sub_242A6945C(v82);
        swift_beginAccess();
        swift_unknownObjectRetain();
        swift_isUniquelyReferenced_nonNull_native();
        v46 = (_QWORD *)*v34;
        v81 = (_QWORD *)*v34;
        *v34 = 0x8000000000000000;
        v47 = sub_242A61310(v84, v38);
        if (__OFADD__(v46[2], (v48 & 1) == 0))
          break;
        v49 = v47;
        v50 = v48;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257222170);
        v51 = sub_242C48EF0();
        v52 = v84;
        if ((v51 & 1) != 0)
        {
          v53 = sub_242A61310(v84, v38);
          if ((v50 & 1) != (v54 & 1))
            goto LABEL_59;
          v49 = v53;
        }
        if ((v50 & 1) != 0)
        {
          *(_OWORD *)(v81[7] + 16 * v49) = v80;
        }
        else
        {
          v81[(v49 >> 6) + 8] |= 1 << v49;
          v55 = (uint64_t *)(v81[6] + 16 * v49);
          *v55 = v52;
          v55[1] = v38;
          *(_OWORD *)(v81[7] + 16 * v49) = v80;
          v56 = v81[2];
          v26 = __OFADD__(v56, 1);
          v57 = v56 + 1;
          if (v26)
            goto LABEL_54;
          v81[2] = v57;
          sub_242C480E0();
        }
        ++v33;
        *v34 = v81;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        v32 = v73;
        if (v78 == v33)
          goto LABEL_44;
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      break;
    }
LABEL_44:
    v3 = v68 + 1;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    v2 = v66;
    v1 = 0;
    if (v68 + 1 == v65)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_59:
  result = sub_242C492EC();
  __break(1u);
  return result;
}

uint64_t sub_242A8D010()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  char v13;
  id v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  char v20;
  _BYTE v21[112];
  _BYTE v22[112];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[80];
  _QWORD v28[13];
  char v29;
  unint64_t v30;
  unint64_t v31;

  sub_242A8C418((uint64_t)v28);
  v0 = v30;
  sub_242C480E0();
  sub_242A6945C(v28);
  if (v0 >> 62)
    goto LABEL_19;
  v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v1)
  {
    v31 = v0 & 0xC000000000000001;
    v2 = 4;
    v17 = v0;
    while (1)
    {
      if (v31)
      {
        v3 = MEMORY[0x2494EC84C](v2 - 4, v0);
      }
      else
      {
        v3 = *(_QWORD *)(v0 + 8 * v2);
        swift_retain();
      }
      v4 = v2 - 3;
      if (__OFADD__(v2 - 4, 1))
        break;
      v5 = sub_242A8D374();
      if (!v5)
      {
        swift_bridgeObjectRelease();
        sub_242A6A5B0();
        swift_allocError();
        *(_QWORD *)v16 = 0xD000000000000034;
        *(_QWORD *)(v16 + 8) = 0x8000000242C666B0;
        *(_BYTE *)(v16 + 16) = 1;
        swift_willThrow();
        return swift_release();
      }
      v7 = v5;
      v8 = v6;
      swift_retain();
      swift_unknownObjectRetain();
      v9 = sub_242BCA40C();
      objc_msgSend(v9, sel_lock);

      swift_beginAccess();
      sub_242A6FF34(v3 + 40, (uint64_t)v28);
      if (!v29)
      {
        v10 = v1;
        sub_242A6FF34(v3 + 40, (uint64_t)v22);
        sub_242A6FF34((uint64_t)v22, (uint64_t)v21);
        if (v21[105])
        {
          v19[0] = 0xD00000000000002BLL;
          v19[1] = 0x8000000242C666F0;
          v20 = 9;
          sub_242A59170();
        }
        sub_242A8D620((uint64_t)v21, (uint64_t)v19);
        v11 = v19[7];
        v18 = v19[6];
        Strong = swift_weakLoadStrong();
        swift_unknownObjectRetain();
        sub_242C480E0();
        swift_release();
        if (Strong)
        {
          v23 = v7;
          v24 = v8;
          v25 = v18;
          v26 = v11;
          sub_242A8D620((uint64_t)v19, (uint64_t)v27);
          v13 = 1;
        }
        else
        {
          sub_242A6FFE8((uint64_t)v19);
          v23 = v7;
          v24 = v8;
          v13 = 2;
          v25 = v18;
          v26 = v11;
        }
        v1 = v10;
        v27[73] = v13;
        sub_242A6FF70((uint64_t)v22);
        swift_beginAccess();
        sub_242A8D65C((uint64_t)&v23, v3 + 40);
        swift_endAccess();
        v0 = v17;
      }
      sub_242A6FF70((uint64_t)v28);
      v14 = sub_242BCA40C();
      objc_msgSend(v14, sel_unlock);
      swift_unknownObjectRelease_n();
      swift_release_n();

      ++v2;
      if (v4 == v1)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_19:
    sub_242C480E0();
    v1 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_242A8D374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[30];

  sub_242A670D8(v0 + 24, (uint64_t)v11);
  v1 = v11[13];
  v2 = v11[14];
  sub_242BC9724();
  OUTLINED_FUNCTION_2_15(v3, v4);
  OUTLINED_FUNCTION_1_14();
  if (!v2)
  {
    v1 = v11[17];
    v2 = v11[18];
    sub_242BC9724();
    OUTLINED_FUNCTION_2_15(v5, v6);
    OUTLINED_FUNCTION_1_14();
    if (!v2)
    {
      sub_242BC9724();
      v1 = v7;
      v2 = v8;
    }
  }
  sub_242A6945C(v11);
  swift_beginAccess();
  v9 = sub_242A9E6D0(v1, v2, *(_QWORD *)(v0 + 16));
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_242A8D438()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BNNSExecutor()
{
  return objc_opt_self();
}

uint64_t sub_242A8D47C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_242A6945C((_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BNNSExecutor.Context()
{
  return objc_opt_self();
}

unint64_t sub_242A8D4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;
  char v7;
  unint64_t v8;
  uint64_t v9;

  if (!*(_QWORD *)(a4 + 16))
    return 0;
  result = sub_242A61310(a1, a2);
  if ((v7 & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result);
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v8 < *(_QWORD *)(a3 + 16))
  {
    v9 = *(_QWORD *)(a3 + 16 * v8 + 32);
    sub_242C480E0();
    return v9;
  }
  __break(1u);
  return result;
}

void sub_242A8D53C(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  sub_242A8D5B4(v6, a2, a3);
  v6[4] = v7;
  OUTLINED_FUNCTION_9();
}

void sub_242A8D588(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_242A8D5B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;

  v6 = a3 & 0xC000000000000001;
  sub_242B4B240(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = MEMORY[0x2494EC84C](a2, a3);
  else
    v7 = swift_retain();
  *a1 = v7;
  OUTLINED_FUNCTION_9();
}

uint64_t destroy for OptionalParameter()
{
  return swift_release();
}

uint64_t sub_242A8D620(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TensorRepresentation.SymbolicValue(a2, a1);
  return a2;
}

uint64_t sub_242A8D65C(uint64_t a1, uint64_t a2)
{
  assignWithTake for TensorRepresentation.ResolutionStage(a2, a1);
  return a2;
}

uint64_t sub_242A8D69C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return sub_242C480E0();
  return result;
}

uint64_t destroy for BNNSDispatchError(uint64_t a1)
{
  return sub_242A8D6C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_242A8D6C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14NeuralNetworks17BNNSDispatchErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242A8D69C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BNNSDispatchError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242A8D69C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_242A8D6C4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BNNSDispatchError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_242A8D6C4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BNNSDispatchError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BNNSDispatchError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_242A8D840(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BNNSDispatchError()
{
  return &type metadata for BNNSDispatchError;
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_2_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_242A8D4C8(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_3_14()
{
  return sub_242C48314();
}

void Tensor.cumulativeSum(alongAxis:exclusive:reverse:)()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  char v5;
  char v6;
  __n128 *inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[16];

  OUTLINED_FUNCTION_30_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222178);
  v2 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v3 = OUTLINED_FUNCTION_24_5(v2, (__n128)xmmword_242C4B7F0);
  if (!v4)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_4_14((uint64_t)v3, v4);
  while (1)
  {
    OUTLINED_FUNCTION_1_15();
    if ((v5 & 1) != 0)
      break;
    OUTLINED_FUNCTION_34_4();
    if (v6)
    {
      OUTLINED_FUNCTION_10_10();
      v48[0] = v1;
      OUTLINED_FUNCTION_2_16();
      OUTLINED_FUNCTION_14_6();
      sub_242A59264();
    }
  }
  OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_31_6();
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_11;
  if (v1 <= 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_33_5();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
    inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_25_3(inited, (__n128)xmmword_242C4B7D0, v8, v9, v10, v11, v12, v13, v14, v22, v24, v26, v28, v30, v32, v34, v36, v38, v40,
      v42,
      v44,
      v46,
      v0,
      v48[0]);
    OUTLINED_FUNCTION_32_5(MEMORY[0x24BEE4AF8], v15, v16, v17, v18, v19, v20, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43,
      v45,
      v47);
    sub_242A662D8((uint64_t)v48);
    OUTLINED_FUNCTION_15_5();
    Tensor.cumulativeSum(alongAxis:exclusive:reverse:)();
    swift_release();
    OUTLINED_FUNCTION_6_12();
    return;
  }
LABEL_12:
  __break(1u);
}

{
  char v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_28_7();
  if (!v0)
  {
    OUTLINED_FUNCTION_37_4();
    OUTLINED_FUNCTION_16_7();
    OUTLINED_FUNCTION_14_6();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_36_5();
  v1 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_10(v1);
  swift_retain();
  sub_242BD0D40((uint64_t)sub_242A8E370);
  OUTLINED_FUNCTION_27_4();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_2_0();
  v2 = OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_21_6(v2, v3, v4, 0, v5, v6, v7, v8, v17, v18, v19);
  v9 = sub_242A8A510(&qword_257222180, (uint64_t (*)(uint64_t))type metadata accessor for CumulativeOperation, (uint64_t)&unk_242C5FA30);
  v13 = OUTLINED_FUNCTION_20_7(v9, v10, v11, v12);
  OUTLINED_FUNCTION_13_7(v13, v14, v15, v16);
  OUTLINED_FUNCTION_11_9();
}

uint64_t sub_242A8DACC(uint64_t result, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  uint64_t v13;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    v7 = *(_QWORD *)(result + 32);
    v12[0] = *(_QWORD *)(a2 + 40);
    v12[1] = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    Tensor.cumulativeSum(alongAxis:exclusive:reverse:)(&v13, v12, a3 & 1, (a4 & 1) == 0);
    v8 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_242C4B7D0;
    swift_retain();
    swift_retain();
    v10 = sub_242AC4964();
    *(_QWORD *)(v9 + 32) = v8;
    *(_QWORD *)(v9 + 40) = v10;
    *(_QWORD *)(v9 + 48) = v11;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v9;
  }
LABEL_7:
  __break(1u);
  return result;
}

void Tensor.cumulativeProduct(alongAxis:exclusive:reverse:)()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  char v5;
  char v6;
  __n128 *inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[16];

  OUTLINED_FUNCTION_30_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222178);
  v2 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v3 = OUTLINED_FUNCTION_24_5(v2, (__n128)xmmword_242C4B7F0);
  if (!v4)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_4_14((uint64_t)v3, v4);
  while (1)
  {
    OUTLINED_FUNCTION_1_15();
    if ((v5 & 1) != 0)
      break;
    OUTLINED_FUNCTION_34_4();
    if (v6)
    {
      OUTLINED_FUNCTION_10_10();
      v48[0] = v1;
      OUTLINED_FUNCTION_2_16();
      OUTLINED_FUNCTION_14_6();
      sub_242A59264();
    }
  }
  OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_31_6();
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_11;
  if (v1 <= 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_33_5();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
    inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_25_3(inited, (__n128)xmmword_242C4B7D0, v8, v9, v10, v11, v12, v13, v14, v22, v24, v26, v28, v30, v32, v34, v36, v38, v40,
      v42,
      v44,
      v46,
      v0,
      v48[0]);
    OUTLINED_FUNCTION_32_5(MEMORY[0x24BEE4AF8], v15, v16, v17, v18, v19, v20, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43,
      v45,
      v47);
    sub_242A662D8((uint64_t)v48);
    OUTLINED_FUNCTION_15_5();
    Tensor.cumulativeProduct(alongAxis:exclusive:reverse:)();
    swift_release();
    OUTLINED_FUNCTION_6_12();
    return;
  }
LABEL_12:
  __break(1u);
}

{
  char v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_28_7();
  if (!v0)
  {
    OUTLINED_FUNCTION_37_4();
    OUTLINED_FUNCTION_16_7();
    OUTLINED_FUNCTION_14_6();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_36_5();
  v1 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_10(v1);
  swift_retain();
  sub_242BD0D40((uint64_t)sub_242A8E380);
  OUTLINED_FUNCTION_27_4();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_2_0();
  v2 = OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_21_6(v2, v3, v4, 1, v5, v6, v7, v8, v17, v18, v19);
  v9 = sub_242A8A510(&qword_257222180, (uint64_t (*)(uint64_t))type metadata accessor for CumulativeOperation, (uint64_t)&unk_242C5FA30);
  v13 = OUTLINED_FUNCTION_20_7(v9, v10, v11, v12);
  OUTLINED_FUNCTION_13_7(v13, v14, v15, v16);
  OUTLINED_FUNCTION_11_9();
}

uint64_t sub_242A8DE00(uint64_t result, _QWORD *a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = a2[2];
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    v7 = *(_QWORD *)(result + 32);
    v8 = a2[4];
    v13 = a2[5];
    v14 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    Tensor.cumulativeProduct(alongAxis:exclusive:reverse:)(&v15, &v13, a3 & 1, a4 & 1);
    v13 = v7;
    v14 = v15;
    static Tensor.* infix(_:_:)();
    v13 = v15;
    Tensor.cumulativeSum(alongAxis:exclusive:reverse:)();
    swift_release();
    v13 = v14;
    static Tensor./ infix(_:_:)();
    swift_release();
    v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_242C4B7D0;
    swift_retain();
    swift_retain();
    v11 = sub_242AC4964();
    *(_QWORD *)(v10 + 32) = v9;
    *(_QWORD *)(v10 + 40) = v11;
    *(_QWORD *)(v10 + 48) = v12;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v10;
  }
LABEL_7:
  __break(1u);
  return result;
}

void Tensor.argsort(alongAxis:descendingOrder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_18_7();
  if (v3 ^ v4 | v2)
    v5 = v1 <= v0;
  else
    v5 = 1;
  if (v5)
  {
    OUTLINED_FUNCTION_0_20();
    OUTLINED_FUNCTION_8_6();
  }
  OUTLINED_FUNCTION_22_7();
  type metadata accessor for ArgumentSortOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_4();
  OUTLINED_FUNCTION_7_12();
  sub_242ABDD8C();
  v6 = sub_242A8A510(&qword_257222188, (uint64_t (*)(uint64_t))type metadata accessor for ArgumentSortOperation, (uint64_t)&unk_242C5164C);
  v7 = OUTLINED_FUNCTION_29_3(v6);
  OUTLINED_FUNCTION_19_6(v7);
  OUTLINED_FUNCTION_23_7();
}

void Tensor.sorted(alongAxis:descendingOrder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_18_7();
  if (v3 ^ v4 | v2)
    v5 = v1 <= v0;
  else
    v5 = 1;
  if (v5)
  {
    OUTLINED_FUNCTION_0_20();
    OUTLINED_FUNCTION_8_6();
  }
  OUTLINED_FUNCTION_22_7();
  type metadata accessor for SortOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_4();
  OUTLINED_FUNCTION_7_12();
  sub_242ABDF44();
  v6 = sub_242A8A510(&qword_257222190, (uint64_t (*)(uint64_t))type metadata accessor for SortOperation, (uint64_t)&unk_242C51630);
  v7 = OUTLINED_FUNCTION_29_3(v6);
  OUTLINED_FUNCTION_19_6(v7);
  OUTLINED_FUNCTION_23_7();
}

uint64_t sub_242A8E108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[6];
  char v14;
  _QWORD v15[3];

  v15[2] = a2;
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v8)
        break;
      if (v6 == 1)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v7 = 1;
LABEL_7:
    if (v7 == *(_QWORD *)(a2 + 16))
    {
      v15[0] = a1;
      v14 = 2;
      v9 = sub_242A66290(a3, (uint64_t)v13);
      MEMORY[0x24BDAC7A8](v9);
      Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)v15, (uint64_t)&v14, (uint64_t)v13, (uint64_t)sub_242A86C3C);
      sub_242A662D8(a3);
      result = swift_bridgeObjectRelease();
      *a4 = v15[1];
      return result;
    }
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  v11 = a1;
  sub_242C48C38();
  sub_242C48314();
  if (*(_QWORD *)(v11 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v8)
        break;
      if (v12 == 1)
        goto LABEL_13;
    }
    __break(1u);
  }
LABEL_13:
  OUTLINED_FUNCTION_155_0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  OUTLINED_FUNCTION_155_0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t sub_242A8E344(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 4)
    return sub_242C480E0();
  return result;
}

uint64_t sub_242A8E358(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_242A8E370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A8DACC(a1, a2, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17));
}

uint64_t sub_242A8E380(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242A8DE00(a1, a2, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17));
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_1_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + v2 + 32);
  v4 = *(_QWORD *)(v1 + v2 + 40);
  v5 = *(_BYTE *)(v1 + v2 + 48);
  sub_242A8E344(v3, v4, v5);
  sub_242C1A454(v0, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_4_14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 56) = -a2;
  *(_QWORD *)(a1 + 64) = a2 - 1;
  *(_BYTE *)(a1 + 72) = 1;
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return 0;
}

void OUTLINED_FUNCTION_8_6()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_9_10(uint64_t a1)
{
  char v1;
  char v2;

  *(_BYTE *)(a1 + 16) = v1 & 1;
  *(_BYTE *)(a1 + 17) = v2 & 1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_12_8()
{
  return type metadata accessor for CumulativeOperation();
}

uint64_t OUTLINED_FUNCTION_13_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t (**v6)(_QWORD, _QWORD);
  va_list va;

  va_start(va, a4);
  return sub_242BC9830(v5, v6, 0, (uint64_t)va, v4);
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_6(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t (**v3)(_QWORD, _QWORD);
  va_list va;

  va_start(va, a1);
  return sub_242BC9830(v1, v3, 0, (uint64_t)va, v2);
}

uint64_t OUTLINED_FUNCTION_20_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  return sub_242A66290(*(_QWORD *)(v4 + 16) + 168, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_21_6(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  return sub_242C09E88(a1, a2, a3, a4, v11, v14, v12, v13, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return 0;
}

__n128 *OUTLINED_FUNCTION_24_5(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0;
  result[2].n128_u64[1] = 0;
  result[3].n128_u8[0] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_3(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  unsigned __int32 v24;

  a1[1] = a2;
  a1[2].n128_u32[0] = v24;
  return sub_242A66290((uint64_t)&a24, (uint64_t)&a10);
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_29_3(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_242A66290(v1 + 168, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_242A8E358(v0, v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;

  return sub_242A8E108(a1, v21, (uint64_t)&a9, &a21);
}

double OUTLINED_FUNCTION_33_5()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_242A8E358(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_35_4()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_37_4()
{
  sub_242C21A14();
}

void sub_242A8E72C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7E0;
  v2 = v0[6];
  *(_QWORD *)(v1 + 32) = v0[5];
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0[7];
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_21_1();
}

void sub_242A8E794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  swift_retain();
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242A8E7EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 88);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 80);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

uint64_t sub_242A8E840(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v15;
  char v16;

  v15 = *a7;
  v16 = *((_BYTE *)a7 + 8);
  if (!a3)
    a1 = sub_242BD0204(0x7463656C6573, 0xE600000000000000);
  *(_DWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 80) = v15;
  *(_BYTE *)(v10 + 88) = v16;
  sub_242A56808(a8, v10 + 96);
  *(_QWORD *)(v10 + 64) = a9;
  *(_QWORD *)(v10 + 72) = a10;
  return v10;
}

uint64_t sub_242A8E8D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_242A6549C(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242A8E91C()
{
  sub_242A8E8D8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SelectOperation()
{
  return objc_opt_self();
}

uint64_t sub_242A8E95C()
{
  return 0x7463656C6573;
}

__n128 sub_242A8E978@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 144);
  v3 = *(_BYTE *)(v1 + 152);
  v4 = *(_BYTE *)(v1 + 153);
  v5 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242A8E9A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242A8E9D8()
{
  return sub_242A57B40();
}

uint64_t sub_242A8E9F8()
{
  return sub_242C4817C();
}

uint64_t sub_242A8EA0C()
{
  return sub_242A8E9F8();
}

uint64_t sub_242A8EA20(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8EA88((unint64_t *)&qword_257220D10, (uint64_t)&unk_242C4E4F0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8EA54(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8EA88(qword_257222270, (uint64_t)&unk_242C4E490);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A8EA88(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SelectOperation();
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242A8EACC()
{
  return swift_initClassMetadata2();
}

_QWORD *sub_242A8EB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  return sub_242A8EB64(a1, a2, a3);
}

_QWORD *sub_242A8EB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = 0;
  v3[2] = a1;
  swift_bridgeObjectRelease();
  v3[4] = a3;
  swift_release();
  return v3;
}

uint64_t sub_242A8EBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 32) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + 32);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_242A8EC08()
{
  sub_242A8EBA0();
  return swift_deallocClassInstance();
}

uint64_t _s17RecursiveChildrenV9LabelPathCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s17RecursiveChildrenV9LabelPathCMn);
}

uint64_t sub_242A8EC34(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 8))
    return swift_release();
  return result;
}

_QWORD *sub_242A8EC70(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v5 = a2 + 1;
  v4 = a2[1];
  sub_242C480E0();
  if (v4)
  {
    v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

_QWORD *sub_242A8ECD8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *sub_242A8ED88(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InputGradient(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputGradient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s17RecursiveChildrenVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s17RecursiveChildrenVMn);
}

void sub_242A8EE9C()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242A8EEAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EB8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = v0[3];
  *(_QWORD *)(v1 + 32) = v0[2];
  *(_QWORD *)(v1 + 40) = v2;
  v3 = (_QWORD *)v0[4];
  sub_242C480E0();
  swift_retain();
  for (; v3; v3 = (_QWORD *)v3[4])
  {
    v5 = v3[2];
    v4 = v3[3];
    v7 = *(_QWORD *)(v1 + 16);
    v6 = *(_QWORD *)(v1 + 24);
    swift_retain();
    sub_242C480E0();
    if (v7 >= v6 >> 1)
    {
      sub_242A5DEC4();
      v1 = v9;
    }
    *(_QWORD *)(v1 + 16) = v7 + 1;
    v8 = v1 + 16 * v7;
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v4;
    swift_release();
  }
  v10 = swift_allocObject();
  swift_release();
  *(_QWORD *)(v10 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222388);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_242A8F948;
  *(_QWORD *)(result + 24) = v10;
  return result;
}

uint64_t sub_242A8EFD8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + 16;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16))
  {
    sub_242A8FDC4();
    if (v6 == 1)
      sub_242A8F9C8(*(_QWORD *)(*(_QWORD *)v4 + 16) - 1);
  }
  else
  {
    v5 = 0;
    v6 = 1;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_endAccess();
}

uint64_t sub_242A8F060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_242A8EEAC();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_242A8F0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222398);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_242C493E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C493AC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    sub_242A8FE1C((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_242A8F0A0(v11, a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_242C493DC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572223A0);
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572223B0);
    swift_allocObject();
    v14 = (uint64_t)sub_242A8FC08(v13);
    v15 = (_QWORD *)v14;
  }
  else
  {
    swift_retain();
    sub_242B05E48();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572223A8);
    swift_allocObject();
    v15 = sub_242A8FCCC(v17);
    v14 = swift_release();
  }
  v18 = MEMORY[0x24BDAC7A8](v14);
  v19 = *(_QWORD *)(a3 + 16);
  v29[-2] = v19;
  v29[-1] = a2;
  MEMORY[0x24BDAC7A8](v18);
  v29[-4] = v19;
  v29[-3] = sub_242A8FE5C;
  v29[-2] = v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED0);
  _s17RecursiveChildrenV9LabelPathCMa(255, v19, v22, v23);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v26 = sub_242A8F400((uint64_t)sub_242A8FE64, (uint64_t)&v29[-6], (uint64_t)v15, v21, TupleTypeMetadata2, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8], v25);
  swift_release();
  v29[0] = v26;
  v27 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v27);
  return sub_242C48614();
}

_QWORD *sub_242A8F37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;

  _s17RecursiveChildrenV9LabelPathCMa(0, a6, a3, a4);
  swift_retain();
  sub_242C480E0();
  v11 = sub_242A8EB14(a2, a3, a5);
  sub_242A8ABFC(a4, a1);
  return v11;
}

uint64_t sub_242A8F400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v11 = *(_QWORD *)(a6 - 8);
  v12 = MEMORY[0x24BDAC7A8](a1);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = v15;
  v24 = v16;
  v25 = v17;
  v26 = v18;
  v27 = v12;
  v28 = v19;
  v20 = sub_242C48E60();
  if (v8)
  {
    v29 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a8, v14, a6);
  }
  return v20;
}

uint64_t sub_242A8F4E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(__int128 *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t *v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[2];
  __int128 v48;
  uint64_t v49;

  v3 = v2;
  v33 = a2;
  v41 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v42 = sub_242C48A64();
  v36 = *(_QWORD *)(v42 - 8);
  v5 = MEMORY[0x24BDAC7A8](v42);
  v7 = (char *)&v33 - v6;
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_5_6();
  v37 = v8;
  v9 = sub_242C493E8();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_5_6();
  v38 = v10;
  v13 = _s17RecursiveChildrenV9LabelPathCMa(255, v4, v11, v12);
  v43 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    while (1)
    {
      OUTLINED_FUNCTION_3_15();
      v14 = sub_242C48650();
      v15 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12B0], v14);
      v16 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E8], v14);
      MEMORY[0x2494EC420](&v44, v14, v15, v16);
      if (!v44)
      {
        v24 = sub_242C48A64();
        (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(&v44, v24);
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257222390);
        v25 = OUTLINED_FUNCTION_3_15();
        v26 = (uint64_t)v33;
        v27 = 1;
        return __swift_storeEnumTagSinglePayload(v26, v27, 1, v25);
      }
      v46 = v44;
      sub_242A7A2D8(&v45, v47);
      v17 = v46;
      sub_242A7A2D8(v47, &v48);
      v18 = *(uint64_t (**)(__int128 *))(v3 + 8);
      if (!v18 || (v18(&v48) & 1) != 0)
      {
        OUTLINED_FUNCTION_5_16();
        v19 = v38;
        sub_242C493B8();
        swift_retain();
        sub_242A8F0A0(v19, v17, v41);
        OUTLINED_FUNCTION_50_0();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v19, v40);
      }
      OUTLINED_FUNCTION_5_16();
      if ((swift_dynamicCast() & 1) != 0)
        break;
      OUTLINED_FUNCTION_6_13((uint64_t)v7, 1);
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_4_15();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v42);
    }
    v20 = v13;
    OUTLINED_FUNCTION_6_13((uint64_t)v7, 0);
    v21 = v4;
    v22 = v35;
    v23 = v37;
    v34 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
    v34((uint64_t)v37, v7, v21);
    __swift_project_boxed_opaque_existential_1(&v48, v49);
    if (swift_getDynamicType() != v42)
      break;
    OUTLINED_FUNCTION_50_0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
    OUTLINED_FUNCTION_4_15();
    v13 = v20;
    v4 = v21;
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257222390);
  v28 = OUTLINED_FUNCTION_3_15();
  v29 = v33;
  v30 = (char *)v33 + *(int *)(v28 + 48);
  v46 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EC0);
  MEMORY[0x2494EDE24](&unk_242C4E698, v20);
  v31 = sub_242C4865C();
  OUTLINED_FUNCTION_4_15();
  *v29 = v31;
  v34((uint64_t)v30, v23, v21);
  v26 = (uint64_t)v29;
  v27 = 0;
  v25 = v28;
  return __swift_storeEnumTagSinglePayload(v26, v27, 1, v25);
}

void sub_242A8F8E8()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242A8F8F8()
{
  return sub_242A7AF34(&qword_257222378, &qword_257222380, MEMORY[0x24BEE2420]);
}

uint64_t sub_242A8F924()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242A8F948@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_242A8EFD8(v1, a1);
}

void sub_242A8F950(unint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;

  if ((OUTLINED_FUNCTION_0_21() & 1) == 0)
  {
    sub_242B4B510();
    v1 = v8;
  }
  v5 = *(_QWORD *)(v1 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = (void *)OUTLINED_FUNCTION_9_11();
    memcpy(v6, v7, 0x88uLL);
    sub_242BC1D64((char *)(v3 + 176), v5 - 1 - a1, v2);
    OUTLINED_FUNCTION_2_17();
    OUTLINED_FUNCTION_12_0();
  }
}

void sub_242A8F9C8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242B4B520();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_242BC1924((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

void sub_242A8FA50(unint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;

  if ((OUTLINED_FUNCTION_0_21() & 1) == 0)
  {
    sub_242B4B550();
    v1 = v8;
  }
  v5 = *(_QWORD *)(v1 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = (void *)OUTLINED_FUNCTION_9_11();
    memcpy(v6, v7, 0xECuLL);
    sub_242BC1BF8((char *)(v3 + 272), v5 - 1 - a1, v2);
    OUTLINED_FUNCTION_2_17();
    OUTLINED_FUNCTION_12_0();
  }
}

void sub_242A8FAC8(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;

  if ((OUTLINED_FUNCTION_0_21() & 1) == 0)
  {
    sub_242B4B560();
    v1 = v4;
  }
  v3 = *(_QWORD *)(v1 + 16);
  if (v3 <= a1)
  {
    __break(1u);
  }
  else
  {
    sub_242BC197C(v1 + 8 * a1 + 40, v3 - 1 - a1, v1 + 8 * a1 + 32);
    OUTLINED_FUNCTION_2_17();
  }
}

uint64_t sub_242A8FB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t, char *);
  uint64_t result;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v8 = *(_QWORD *)(a6 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v19 - v13;
  result = v15(v12, (char *)&v19 - v13);
  if (v6)
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v11, v14, a6);
    swift_allocError();
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v17)(v18, v11, a6);
  }
  return result;
}

_QWORD *sub_242A8FC08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572223B8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 32);
  v4 = sub_242A7AF34(&qword_2572223C0, &qword_2572223B8, MEMORY[0x24BEE4A90]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(a1 + 16);
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = v5;
  v1[5] = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return v1;
}

_QWORD *sub_242A8FCCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572223C8);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  v4 = sub_242A7AF34(&qword_2572223D0, &qword_2572223C8, MEMORY[0x24BEE4A90]);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = v6;
  v1[5] = v4;
  return v1;
}

void sub_242A8FD64(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if ((OUTLINED_FUNCTION_0_21() & 1) == 0)
  {
    sub_242B4B510();
    v1 = v4;
  }
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    memcpy(a1, (const void *)(v1 + 144 * (v3 - 1) + 32), 0x88uLL);
    OUTLINED_FUNCTION_2_17();
    OUTLINED_FUNCTION_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_242A8FDC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242B4B520();
    v1 = v3;
  }
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    *(_QWORD *)(v1 + 16) = v2 - 1;
    *v0 = v1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_242A8FE1C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222398);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_242A8FE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_242A8F37C(a1, a2, a3, a4, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16));
}

uint64_t sub_242A8FE64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t *, _QWORD, _QWORD, _QWORD *))(v2 + 24))(a2 + 1, *a1, a1[1], a1 + 2);
  *a2 = result;
  return result;
}

uint64_t sub_242A8FEA8(uint64_t a1)
{
  uint64_t *v1;

  return sub_242A8FB34(a1, v1[6], v1[7], v1[2], v1[3], v1[4]);
}

void sub_242A8FEC8(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if ((OUTLINED_FUNCTION_0_21() & 1) == 0)
  {
    sub_242B4B550();
    v1 = v4;
  }
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    memcpy(a1, (const void *)(v1 + 240 * (v3 - 1) + 32), 0xECuLL);
    OUTLINED_FUNCTION_2_17();
    OUTLINED_FUNCTION_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_242A8FF28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if ((OUTLINED_FUNCTION_0_21() & 1) == 0)
  {
    sub_242B4B560();
    v0 = v3;
  }
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    *(_QWORD *)(v0 + 16) = v2 - 1;
    *v1 = v0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t OUTLINED_FUNCTION_0_21()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_2_17()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = v2;
  *v1 = v0;
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_4_15()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 120);
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  uint64_t v0;

  return sub_242A8ABFC(v0 - 120, v0 - 160);
}

uint64_t OUTLINED_FUNCTION_6_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242A8FFCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_22();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16))(v1, v0);
}

uint64_t sub_242A90000()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_22();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24))(v1, v0);
}

void sub_242A90034()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_6_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32));
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A90058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_1_16();
  if (!dynamic_cast_existential_1_conditional(v1))
    return MEMORY[0x24BEE4AF8];
  v2 = OUTLINED_FUNCTION_4_16();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v2, v1);
}

void sub_242A900AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_6_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 56));
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A900D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[8];

  v3 = OUTLINED_FUNCTION_3_16();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v1 + 48))(v5, v3, v1);
  return sub_242A56808((uint64_t)v5, a1);
}

void sub_242A90124()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_6_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 40));
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A90148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_1_16();
  result = dynamic_cast_existential_1_conditional(v1);
  if (result)
  {
    v3 = OUTLINED_FUNCTION_4_16();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v3, v1);
  }
  return result;
}

void sub_242A90198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v1 + 16);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional(v3))
  {
    v5 = v4;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, ObjectType, v5);
  }
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A901FC()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PassthroughOperation()
{
  return objc_opt_self();
}

uint64_t sub_242A90250@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[64];

  sub_242A900D4((uint64_t)v3);
  return sub_242A56808((uint64_t)v3, a1);
}

void sub_242A90290()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_6_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 64));
  OUTLINED_FUNCTION_9();
}

void sub_242A902B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_3_16();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 88))(a1, v3, v1);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242A90300(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C4E798, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242A9033C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10[2];
  uint64_t v11;
  __int128 v12;

  v12 = *(_OWORD *)(v1 + 16);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572225D0);
  if (!swift_dynamicCast())
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_242A905A8((uint64_t)v10);
    v6[0] = 0;
    v6[1] = 0xE000000000000000;
    sub_242C48C38();
    sub_242C48314();
    OUTLINED_FUNCTION_1_16();
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v9 = 9;
    sub_242A59170();
  }
  sub_242A64518(v10, (uint64_t)v6);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_242A904C4(uint64_t a1)
{
  return sub_242A9033C(a1);
}

uint64_t type metadata accessor for TrackedOperation()
{
  return objc_opt_self();
}

uint64_t sub_242A90504(uint64_t a1)
{
  uint64_t result;

  result = sub_242A9056C((unint64_t *)&qword_2572225C0, (uint64_t)&unk_242C4E798);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A90538(uint64_t a1)
{
  uint64_t result;

  result = sub_242A9056C(&qword_2572225C8, (uint64_t)&unk_242C4E754);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242A9056C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PassthroughOperation();
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242A905A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A7F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_6_14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_242A90620(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, _QWORD);
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  char v65[40];
  uint64_t v66;

  v64 = a3;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222608);
  MEMORY[0x24BDAC7A8](v54);
  v62 = (uint64_t *)((char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v53 = (uint64_t *)((char *)&v46 - v7);
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)&v46 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222600);
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v63 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  if (!v12)
    return v13;
  v66 = MEMORY[0x24BEE4AF8];
  sub_242AC3878();
  result = sub_242B3AAE8(a1);
  if ((result & 0x8000000000000000) == 0 && result < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = a1 + 64;
    v17 = 1;
    v49 = a1;
    v47 = v12;
    v48 = a1 + 64;
    while ((*(_QWORD *)(v16 + 8 * ((unint64_t)result >> 6)) & (1 << result)) != 0)
    {
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
        goto LABEL_27;
      v57 = 1 << result;
      v58 = (unint64_t)result >> 6;
      v55 = v17;
      v56 = v15;
      v18 = v54;
      v19 = v52;
      v20 = &v52[*(int *)(v54 + 48)];
      v21 = *(_QWORD *)(a1 + 56);
      v22 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * result);
      v24 = *v22;
      v23 = v22[1];
      v25 = result;
      v26 = sub_242C47DA4();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(_QWORD *)(v27 + 72);
      v61 = v25;
      v29 = v21 + v28 * v25;
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
      v30(v20, v29, v26);
      *v19 = v24;
      v19[1] = v23;
      v31 = (uint64_t)v53;
      *v53 = v24;
      *(_QWORD *)(v31 + 8) = v23;
      v30((char *)(v31 + *(int *)(v18 + 48)), (uint64_t)v20, v26);
      v32 = v62;
      sub_242A929E0(v31, (uint64_t)v62, &qword_257222608);
      swift_bridgeObjectRetain_n();
      sub_242A929A8((uint64_t)v19, &qword_257222608);
      v33 = *v32;
      v59 = v32[1];
      v60 = v33;
      v30((char *)v63 + *(int *)(v51 + 48), (uint64_t)v32 + *(int *)(v18 + 48), v26);
      v34 = *(_QWORD *)(sub_242C47D98() + 16);
      swift_bridgeObjectRelease();
      if (v34)
      {
        v35 = 0;
        while (1)
        {
          v36 = (void (*)(char *, _QWORD))sub_242C47D8C();
          v38 = v37;
          v39 = *v37;
          result = swift_isUniquelyReferenced_nonNull_native();
          *v38 = v39;
          if ((result & 1) == 0)
          {
            result = sub_242B4B530();
            v39 = result;
            *v38 = result;
          }
          if (v35 >= *(_QWORD *)(v39 + 16))
            break;
          sub_242C47EA0();
          v40 = sub_242C47E88();
          a2(3, v40, v41);
          swift_bridgeObjectRelease();
          sub_242C47E94();
          v36(v65, 0);
          if (v34 == ++v35)
            goto LABEL_13;
        }
        __break(1u);
        break;
      }
LABEL_13:
      v42 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a2)(1, v60, v59);
      v43 = v63;
      *v63 = v42;
      v43[1] = v44;
      sub_242A929A8((uint64_t)v62, &qword_257222608);
      v13 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3878();
        v13 = v66;
      }
      v45 = *(_QWORD *)(v13 + 16);
      if (v45 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_242AC3878();
        v13 = v66;
      }
      *(_QWORD *)(v13 + 16) = v45 + 1;
      sub_242A929E0((uint64_t)v63, v13+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v45, &qword_257222600);
      a1 = v49;
      result = v61;
      if (v61 >= -(-1 << *(_BYTE *)(v49 + 32)))
        goto LABEL_28;
      v16 = v48;
      if ((*(_QWORD *)(v48 + 8 * v58) & v57) == 0)
        goto LABEL_29;
      if (*(_DWORD *)(v49 + 36) != (_DWORD)v56)
        goto LABEL_30;
      result = sub_242C48BB4();
      if (v55 == v47)
        return v13;
      if ((result & 0x8000000000000000) == 0)
      {
        v15 = *(unsigned int *)(a1 + 36);
        v17 = v55 + 1;
        if (result < 1 << *(_BYTE *)(a1 + 32))
          continue;
      }
      goto LABEL_31;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_242A90ADC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumTagSinglePayload;
  uint64_t v38;
  uint64_t v39;
  void (**v40)(_QWORD, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char v49;
  unint64_t v50;
  void (*v51)(unint64_t, char *);
  id v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  void (*v59)(char *, unint64_t, uint64_t);
  uint64_t v60;
  unint64_t v61;
  void (*v62)(unint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;

  v75 = a3;
  v69 = a2;
  v73 = a1;
  v5 = sub_242C47D74();
  v81 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_13_1();
  v79 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v64 - v9;
  v80 = sub_242C47CD8();
  MEMORY[0x24BDAC7A8](v80);
  OUTLINED_FUNCTION_13_1();
  v77 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v76 = (char *)&v64 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572225D8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_4_9();
  v68 = v16 - v15;
  v71 = sub_242C47E64();
  v17 = *(void **)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_4_9();
  v20 = v19 - v18;
  v21 = sub_242C47EDC();
  v66 = *(_QWORD *)(v21 - 8);
  v67 = v21;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_4_9();
  v25 = v24 - v23;
  v70 = sub_242C47ED0();
  v72 = *(_QWORD *)(v70 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_4_9();
  v29 = v28 - v27;
  sub_242C47D5C();
  v74 = a4;
  sub_242C47CF0();
  v30 = v73;
  v31 = v78;
  sub_242A90FEC(v30, v29);
  if (v31)
  {

    swift_bridgeObjectRelease();
    v32 = sub_242C47D68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v74, v32);
  }
  else
  {
    v78 = v30;
    v64 = 0;
    v65 = v20;
    v73 = v17;
    v33 = v70;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v25, v29, v70);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v25, *MEMORY[0x24BE632E0], v67);
    sub_242C47CFC();
    v34 = sub_242C47EC4();
    v35 = v68;
    sub_242A9E6D4(v69, v75, v34, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v71;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v35, 1, v71);
    v38 = v72;
    if (EnumTagSinglePayload == 1)
    {

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v29, v33);
      sub_242A929A8(v35, &qword_2572225D8);
    }
    else
    {
      v39 = v36;
      v69 = v29;
      v40 = (void (**)(_QWORD, uint64_t))v73;
      v41 = v65;
      (*((void (**)(uint64_t, uint64_t, uint64_t))v73 + 4))(v65, v35, v39);
      v42 = sub_242C47E4C();
      v43 = *(_QWORD *)(v42 + 16);
      if (v43)
      {
        v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v44 = &v82;
        OUTLINED_FUNCTION_6_15();
        v45 = *(unsigned __int8 *)(v81 + 80);
        v68 = v42;
        v46 = v42 + ((v45 + 32) & ~v45);
        v75 = *(_QWORD *)(v81 + 72);
        v47 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
        do
        {
          v47(v10, v46, v5);
          v48 = OUTLINED_FUNCTION_13_8();
          ((void (*)(uint64_t))v47)(v48);
          OUTLINED_FUNCTION_11_10();
          OUTLINED_FUNCTION_5_17();
          if ((OUTLINED_FUNCTION_9_12() & 1) == 0)
          {
            OUTLINED_FUNCTION_2_18();
            v44 = v82;
          }
          OUTLINED_FUNCTION_8_7();
          if (v49)
          {
            OUTLINED_FUNCTION_4_17();
            v44 = v82;
          }
          v50 = OUTLINED_FUNCTION_1_17();
          v51(v50, v76);
          v82 = v44;
          v46 += v75;
          --v43;
          v52 = v78;
        }
        while (v43);
        swift_bridgeObjectRelease();
        v40 = (void (**)(_QWORD, uint64_t))v73;
        v41 = v65;
      }
      else
      {
        swift_bridgeObjectRelease();
        v52 = v78;
      }
      sub_242C47D2C();
      v53 = sub_242C47E58();
      v54 = *(_QWORD *)(v53 + 16);
      if (v54)
      {
        v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v55 = &v82;
        v56 = v53;
        OUTLINED_FUNCTION_6_15();
        v57 = v56 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        v58 = *(char **)(v81 + 72);
        v75 = v56;
        v76 = v58;
        v59 = *(void (**)(char *, unint64_t, uint64_t))(v81 + 16);
        do
        {
          v59(v10, v57, v5);
          v60 = OUTLINED_FUNCTION_13_8();
          ((void (*)(uint64_t))v59)(v60);
          OUTLINED_FUNCTION_11_10();
          OUTLINED_FUNCTION_5_17();
          if ((OUTLINED_FUNCTION_9_12() & 1) == 0)
          {
            OUTLINED_FUNCTION_2_18();
            v55 = v82;
          }
          OUTLINED_FUNCTION_8_7();
          if (v49)
          {
            OUTLINED_FUNCTION_4_17();
            v55 = v82;
          }
          v61 = OUTLINED_FUNCTION_1_17();
          v62(v61, v63);
          v82 = v55;
          v57 += (unint64_t)v76;
          --v54;
          v52 = v78;
        }
        while (v54);
        swift_bridgeObjectRelease();
        v40 = (void (**)(_QWORD, uint64_t))v73;
        v41 = v65;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_242C47D50();

      v40[1](v41, v71);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v69, v70);
    }
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_242A90FEC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_242C47ED0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_4_9();
  v8 = v7 - v6;
  v16[0] = 0;
  v9 = objc_msgSend(a1, sel_serializeToProtobufWithError_, v16);
  v10 = v16[0];
  v11 = sub_242C47BE8();
  v13 = v12;

  if (v10)
  {
    v14 = v10;
    swift_willThrow();

    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    sub_242A92930(v11, v13);
    sub_242C47D80();
    if (!v15)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, v8, v4);
      sub_242A91148();
      sub_242A91180();
    }

    OUTLINED_FUNCTION_10_11();
  }
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242A91148()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_242C480BC();
  return sub_242A9163C(v0, v1);
}

uint64_t sub_242A91180()
{
  uint64_t result;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t (*v10)(_BYTE *, _QWORD);
  void (*v11)(uint64_t *, _QWORD);
  void (*v12)(uint64_t *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[32];

  result = sub_242C47EC4();
  v1 = 0;
  v2 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  for (v5 &= v5 - 1; ; v5 = (v8 - 1) & v8)
  {
    sub_242C480E0();
    v10 = (uint64_t (*)(_BYTE *, _QWORD))sub_242C47EB8();
    sub_242A99910();
    v12 = v11;
    v14 = v13;
    v15 = sub_242C47E64();
    if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
      sub_242A919A4();
    v12(&v16, 0);
    swift_bridgeObjectRelease();
    result = v10(v17, 0);
    if (v5)
      goto LABEL_4;
LABEL_5:
    v7 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v7 >= v6)
      return swift_release();
    v8 = *(_QWORD *)(v2 + 8 * v7);
    ++v1;
    if (!v8)
    {
      v1 = v7 + 1;
      if (v7 + 1 >= v6)
        return swift_release();
      v8 = *(_QWORD *)(v2 + 8 * v1);
      if (!v8)
      {
        v1 = v7 + 2;
        if (v7 + 2 >= v6)
          return swift_release();
        v8 = *(_QWORD *)(v2 + 8 * v1);
        if (!v8)
        {
          v1 = v7 + 3;
          if (v7 + 3 >= v6)
            return swift_release();
          v8 = *(_QWORD *)(v2 + 8 * v1);
          if (!v8)
          {
            v1 = v7 + 4;
            if (v7 + 4 >= v6)
              return swift_release();
            v8 = *(_QWORD *)(v2 + 8 * v1);
            if (!v8)
              break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  v9 = v7 + 5;
  if (v9 >= v6)
    return swift_release();
  v8 = *(_QWORD *)(v2 + 8 * v9);
  if (v8)
  {
    v1 = v9;
    goto LABEL_22;
  }
  while (1)
  {
    v1 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v1 >= v6)
      return swift_release();
    v8 = *(_QWORD *)(v2 + 8 * v1);
    ++v9;
    if (v8)
      goto LABEL_22;
  }
LABEL_29:
  __break(1u);
  return result;
}

_QWORD *sub_242A9136C(char a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _QWORD v24[6];
  _QWORD v25[2];

  if (a1 != 3)
  {
    if (*(_QWORD *)(a4 + 16))
    {
      sub_242C480E0();
      v22 = sub_242A61310(a2, a3);
      if ((v23 & 1) != 0)
      {
        a2 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * v22);
        sub_242C480E0();
        swift_bridgeObjectRelease();
        return (_QWORD *)a2;
      }
      swift_bridgeObjectRelease();
    }
LABEL_33:
    sub_242C480E0();
    return (_QWORD *)a2;
  }
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = (_QWORD *)sub_242C480E0();
  v13 = 0;
  while (v10)
  {
    v10 &= v10 - 1;
LABEL_25:
    sub_242C480E0();
    v17 = sub_242C4838C();
    result = (_QWORD *)swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      v25[0] = 46;
      v25[1] = 0xE100000000000000;
      MEMORY[0x24BDAC7A8](result);
      v24[2] = v25;
      sub_242C480E0();
      result = (_QWORD *)sub_242B10AE8(0x7FFFFFFFFFFFFFFFLL, 1u, sub_242A92A34, (uint64_t)v24, a2, a3);
      if (result[2] >= 2uLL)
      {
        v18 = result[8];
        v19 = result[9];
        v20 = result[10];
        v21 = result[11];
        sub_242C480E0();
        swift_bridgeObjectRelease();
        a2 = MEMORY[0x2494EBE38](v18, v19, v20, v21);
        swift_release();
        swift_bridgeObjectRelease();
        return (_QWORD *)a2;
      }
      goto LABEL_36;
    }
  }
  v14 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v11)
    goto LABEL_31;
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v13;
  if (v15)
    goto LABEL_24;
  v13 = v14 + 1;
  if (v14 + 1 >= v11)
    goto LABEL_31;
  v15 = *(_QWORD *)(v7 + 8 * v13);
  if (v15)
    goto LABEL_24;
  v13 = v14 + 2;
  if (v14 + 2 >= v11)
    goto LABEL_31;
  v15 = *(_QWORD *)(v7 + 8 * v13);
  if (v15)
    goto LABEL_24;
  v13 = v14 + 3;
  if (v14 + 3 >= v11)
    goto LABEL_31;
  v15 = *(_QWORD *)(v7 + 8 * v13);
  if (v15)
    goto LABEL_24;
  v13 = v14 + 4;
  if (v14 + 4 >= v11)
    goto LABEL_31;
  v15 = *(_QWORD *)(v7 + 8 * v13);
  if (v15)
  {
LABEL_24:
    v10 = (v15 - 1) & v15;
    goto LABEL_25;
  }
  v16 = v14 + 5;
  if (v16 >= v11)
  {
LABEL_31:
    swift_release();
    goto LABEL_33;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v13 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v13 >= v11)
      goto LABEL_31;
    v15 = *(_QWORD *)(v7 + 8 * v13);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_242A9163C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  int64_t v10;
  void (*v11)(char *, _QWORD);
  void (*v12)(char *, _QWORD);
  void (*v13)(char *, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  int64_t v27;
  char v29[16];
  uint64_t v30;
  uint64_t v31;
  char v32[32];
  char v33[40];

  v30 = a2;
  v2 = sub_242C47EC4();
  v3 = 0;
  v4 = *(_QWORD *)(v2 + 64);
  v26 = v2 + 64;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v27 = (unint64_t)(v5 + 63) >> 6;
  if ((v6 & v4) == 0)
    goto LABEL_5;
LABEL_4:
  for (v7 &= v7 - 1; ; v7 = (v9 - 1) & v9)
  {
    sub_242C480E0();
    v11 = (void (*)(char *, _QWORD))sub_242C47EB8();
    sub_242A99910();
    v13 = v12;
    v15 = v14;
    v16 = sub_242C47E64();
    if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
    {
      v17 = sub_242C47E34();
      v19 = v18;
      if (*(_QWORD *)(a2 + 16))
      {
        sub_242C480E0();
        sub_242A61310(v17, v19);
        if ((v20 & 1) != 0)
        {
          sub_242C480E0();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      sub_242C47E40();
      v21 = sub_242C47E1C();
      v22 = sub_242A90620(v21, (void (*)(uint64_t, uint64_t, uint64_t))sub_242A92974, (uint64_t)v29);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v22 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2572225F8);
        v23 = sub_242C49010();
      }
      else
      {
        v23 = MEMORY[0x24BEE4B00];
      }
      v31 = v23;
      v24 = sub_242C480E0();
      sub_242A92580(v24, 1, &v31);
      swift_bridgeObjectRelease();
      sub_242C47E28();
    }
    v13(v32, 0);
    swift_bridgeObjectRelease();
    v11(v33, 0);
    if (v7)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v3++, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v3 >= v27)
      goto LABEL_35;
    v9 = *(_QWORD *)(v26 + 8 * v3);
    if (!v9)
      break;
LABEL_19:
    ;
  }
  v10 = v3 + 1;
  if (v3 + 1 >= v27)
    goto LABEL_35;
  v9 = *(_QWORD *)(v26 + 8 * v10);
  if (v9)
    goto LABEL_18;
  v10 = v3 + 2;
  if (v3 + 2 >= v27)
    goto LABEL_35;
  v9 = *(_QWORD *)(v26 + 8 * v10);
  if (v9)
    goto LABEL_18;
  v10 = v3 + 3;
  if (v3 + 3 >= v27)
    goto LABEL_35;
  v9 = *(_QWORD *)(v26 + 8 * v10);
  if (v9)
    goto LABEL_18;
  v10 = v3 + 4;
  if (v3 + 4 >= v27)
    goto LABEL_35;
  v9 = *(_QWORD *)(v26 + 8 * v10);
  if (v9)
    goto LABEL_18;
  v10 = v3 + 5;
  if (v3 + 5 >= v27)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v9 = *(_QWORD *)(v26 + 8 * v10);
  if (v9)
  {
LABEL_18:
    v3 = v10;
    goto LABEL_19;
  }
  while (1)
  {
    v3 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v3 >= v27)
      goto LABEL_35;
    v9 = *(_QWORD *)(v26 + 8 * v3);
    ++v10;
    if (v9)
      goto LABEL_19;
  }
LABEL_37:
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_242A919A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t i;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD);
  void (*v32)(char *, _QWORD);
  void (*v33)(char *, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD);
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  void (*v45)(char *, _QWORD);
  uint64_t v46;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  unint64_t v70;
  char v71;
  char v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  char v78;
  unint64_t v79;
  char v80;
  unint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t result;
  char *v92;
  uint64_t v93;
  int64_t v94;
  _QWORD *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, _QWORD);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(_WORD *, _QWORD);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  char *v110;
  char *v111;
  uint64_t v112;
  int64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _WORD v121[12];
  char v122[8];
  char v123[8];
  char v124[8];

  v100 = sub_242C47EAC();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v98 = (char *)&v92 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_242C47DC8();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572225E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v92 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572225E8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v97 = (char *)&v92 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)&v92 - v15;
  v119 = sub_242C47E04();
  v117 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v96 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v115 = (char *)&v92 - v18;
  v103 = v0;
  v19 = sub_242C47E1C();
  v20 = 0;
  v21 = *(_QWORD *)(v19 + 64);
  v93 = v19 + 64;
  v104 = v19;
  v22 = 1 << *(_BYTE *)(v19 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v94 = (unint64_t)(v22 + 63) >> 6;
  v109 = *MEMORY[0x24BE62F90];
  v111 = v5;
  v110 = v8;
  v92 = v11;
  if (!v24)
    goto LABEL_5;
LABEL_4:
  v112 = (v24 - 1) & v24;
  v113 = v20;
  for (i = __clz(__rbit64(v24)) | (v20 << 6); ; i = __clz(__rbit64(v27)) + (v28 << 6))
  {
    v30 = *(_QWORD *)(*(_QWORD *)(v104 + 48) + 16 * i + 8);
    sub_242C480E0();
    v31 = (void (*)(char *, _QWORD))sub_242C47E10();
    sub_242A9994C();
    v33 = v32;
    v35 = v34;
    v36 = sub_242C47DA4();
    if (__swift_getEnumTagSinglePayload(v35, 1, v36))
    {
      v33(v123, 0);
      goto LABEL_67;
    }
    v101 = v33;
    v102 = v30;
    v37 = *(_QWORD *)(sub_242C47D98() + 16);
    swift_bridgeObjectRelease();
    v118 = v37;
    if (v37)
      break;
LABEL_66:
    v101(v123, 0);
LABEL_67:
    swift_bridgeObjectRelease();
    v31(v124, 0);
    v20 = v113;
    v24 = v112;
    if (v112)
      goto LABEL_4;
LABEL_5:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_71;
    if (v26 >= v94)
      return swift_release();
    v27 = *(_QWORD *)(v93 + 8 * v26);
    v28 = v20 + 1;
    if (!v27)
    {
      v28 = v20 + 2;
      if (v20 + 2 >= v94)
        return swift_release();
      v27 = *(_QWORD *)(v93 + 8 * v28);
      if (!v27)
      {
        v28 = v20 + 3;
        if (v20 + 3 >= v94)
          return swift_release();
        v27 = *(_QWORD *)(v93 + 8 * v28);
        if (!v27)
        {
          v28 = v20 + 4;
          if (v20 + 4 >= v94)
            return swift_release();
          v27 = *(_QWORD *)(v93 + 8 * v28);
          if (!v27)
          {
            v28 = v20 + 5;
            if (v20 + 5 >= v94)
              return swift_release();
            v27 = *(_QWORD *)(v93 + 8 * v28);
            if (!v27)
            {
              v29 = v20 + 6;
              if (v20 + 6 >= v94)
                return swift_release();
              v27 = *(_QWORD *)(v93 + 8 * v29);
              if (!v27)
              {
                while (1)
                {
                  v28 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    goto LABEL_74;
                  if (v28 >= v94)
                    return swift_release();
                  v27 = *(_QWORD *)(v93 + 8 * v28);
                  ++v29;
                  if (v27)
                    goto LABEL_22;
                }
              }
              v28 = v20 + 6;
            }
          }
        }
      }
    }
LABEL_22:
    v112 = (v27 - 1) & v27;
    v113 = v28;
  }
  v38 = 0;
  while (1)
  {
    v39 = v35;
    v40 = (void (*)(char *, _QWORD))sub_242C47D8C();
    v42 = v41;
    v43 = *v41;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v42 = v43;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v43 = sub_242B4B530();
      *v42 = v43;
    }
    if (v38 >= *(_QWORD *)(v43 + 16))
      break;
    v45 = v31;
    sub_242C47EA0();
    if (sub_242C47E88() == 0x74736E6F63 && v46 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      v49 = sub_242C47E7C();
      if (*(_QWORD *)(v49 + 16))
      {
        v50 = sub_242A61310(7102838, 0xE300000000000000);
        v51 = (uint64_t)v116;
        if ((v52 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v117 + 16))(v116, *(_QWORD *)(v49 + 56) + *(_QWORD *)(v117 + 72) * v50, v119);
          v53 = 0;
        }
        else
        {
          v53 = 1;
        }
      }
      else
      {
        v53 = 1;
        v51 = (uint64_t)v116;
      }
      v54 = v119;
      __swift_storeEnumTagSinglePayload(v51, v53, 1, v119);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v51, 1, v54) == 1)
      {
        v55 = v51;
        v56 = &qword_2572225E8;
      }
      else
      {
        v57 = v51;
        v58 = v117;
        v59 = v115;
        v114 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 32);
        v114(v115, v57, v54);
        sub_242C47DE0();
        v60 = sub_242C47DD4();
        if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v60) == 1)
        {
          (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v54);
        }
        else
        {
          v61 = (uint64_t)v8;
          v62 = (uint64_t)v111;
          sub_242A9297C(v61, (uint64_t)v111, &qword_2572225E0);
          v63 = *(_QWORD *)(v60 - 8);
          v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 88))(v62, v60);
          if (v64 == v109)
          {
            (*(void (**)(uint64_t, uint64_t))(v63 + 96))(v62, v60);
            (*(void (**)(char *, uint64_t, uint64_t))(v107 + 32))(v106, v62, v108);
            strcpy((char *)v121, "@model_path/");
            HIBYTE(v121[6]) = 0;
            v121[7] = -5120;
            sub_242C47DBC();
            sub_242C48314();
            swift_bridgeObjectRelease();
            v65 = v98;
            sub_242C47DF8();
            sub_242C47DB0();
            v66 = (uint64_t)v97;
            sub_242C47DEC();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v99 + 8))(v65, v100);
            v67 = v119;
            __swift_storeEnumTagSinglePayload(v66, 0, 1, v119);
            v105 = (void (*)(_WORD *, _QWORD))sub_242C47E70();
            v69 = v68;
            if (__swift_getEnumTagSinglePayload(v66, 1, v67) == 1)
            {
              sub_242A929A8(v66, &qword_2572225E8);
              sub_242C480E0();
              v70 = sub_242A61310(7102838, 0xE300000000000000);
              v72 = v71;
              swift_bridgeObjectRelease();
              v8 = v110;
              if ((v72 & 1) != 0)
              {
                LODWORD(v95) = swift_isUniquelyReferenced_nonNull_native();
                v120 = (_QWORD *)*v69;
                *v69 = 0x8000000000000000;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2572225F0);
                sub_242C48EF0();
                v73 = v120;
                swift_bridgeObjectRelease();
                v74 = (uint64_t)v92;
                v114(v92, v73[7] + *(_QWORD *)(v117 + 72) * v70, v67);
                sub_242C48F14();
                *v69 = v73;
                swift_bridgeObjectRelease();
                v75 = 0;
              }
              else
              {
                v75 = 1;
                v74 = (uint64_t)v92;
              }
              v85 = v115;
              v86 = v67;
              __swift_storeEnumTagSinglePayload(v74, v75, 1, v67);
              sub_242A929A8(v74, &qword_2572225E8);
              v84 = v117;
            }
            else
            {
              v114(v96, v66, v67);
              swift_isUniquelyReferenced_nonNull_native();
              v120 = (_QWORD *)*v69;
              v76 = v120;
              v95 = v69;
              *v69 = 0x8000000000000000;
              v77 = sub_242A61310(7102838, 0xE300000000000000);
              v8 = v110;
              if (__OFADD__(v76[2], (v78 & 1) == 0))
                goto LABEL_72;
              v79 = v77;
              v80 = v78;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2572225F0);
              if ((sub_242C48EF0() & 1) != 0)
              {
                v81 = sub_242A61310(7102838, 0xE300000000000000);
                if ((v80 & 1) != (v82 & 1))
                  goto LABEL_75;
                v79 = v81;
              }
              v83 = v120;
              if ((v80 & 1) != 0)
              {
                v84 = v117;
                (*(void (**)(unint64_t, char *, uint64_t))(v117 + 40))(v120[7] + *(_QWORD *)(v117 + 72) * v79, v96, v119);
              }
              else
              {
                v120[(v79 >> 6) + 8] |= 1 << v79;
                v87 = (_QWORD *)(v83[6] + 16 * v79);
                *v87 = 7102838;
                v87[1] = 0xE300000000000000;
                v114((char *)(v83[7] + *(_QWORD *)(v117 + 72) * v79), (uint64_t)v96, v119);
                v88 = v83[2];
                v89 = __OFADD__(v88, 1);
                v90 = v88 + 1;
                if (v89)
                  goto LABEL_73;
                v83[2] = v90;
                v84 = v117;
              }
              *v95 = v120;
              swift_bridgeObjectRelease();
              v85 = v115;
              v86 = v119;
            }
            v105(v121, 0);
            (*(void (**)(char *, uint64_t))(v107 + 8))(v106, v108);
            (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v86);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v117 + 8))(v115, v119);
            (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v60);
            v8 = v110;
          }
        }
        v55 = (uint64_t)v8;
        v56 = &qword_2572225E0;
      }
      sub_242A929A8(v55, v56);
      goto LABEL_65;
    }
    v48 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v48 & 1) != 0)
      goto LABEL_37;
LABEL_65:
    ++v38;
    v40(v122, 0);
    v31 = v45;
    v35 = v39;
    if (v118 == v38)
      goto LABEL_66;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  result = sub_242C492EC();
  __break(1u);
  return result;
}

void sub_242A92580(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  void *v35;
  id v36;
  _QWORD v37[3];
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;

  v44 = a3;
  v6 = sub_242C47DA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222600);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v37[1] = v3;
  v37[2] = a1;
  v42 = (char *)v13 + *(int *)(v10 + 48);
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v39 = *(_QWORD *)(v11 + 72);
  sub_242C480E0();
  v40 = v7;
  v41 = v6;
  v38 = v13;
  while (1)
  {
    sub_242A9297C(v15, (uint64_t)v13, &qword_257222600);
    v17 = v13[1];
    v47 = *v13;
    v16 = v47;
    v48 = v17;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v43, v42, v6);
    v19 = (_QWORD *)*v44;
    v21 = sub_242A61310(v16, v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_242C492EC();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257222970);
      sub_242C48F08();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v43;
    v29 = (_QWORD *)*v44;
    *(_QWORD *)(*v44 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    v30 = (uint64_t *)(v29[6] + 16 * v21);
    *v30 = v16;
    v30[1] = v17;
    v7 = v40;
    v31 = v29[7] + *(_QWORD *)(v40 + 72) * v21;
    v6 = v41;
    v18((char *)v31, v28, v41);
    v32 = v29[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_18;
    v29[2] = v34;
    v13 = v38;
    v15 += v39;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_242B1856C(v24, a2 & 1);
  v26 = sub_242A61310(v16, v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v35 = (void *)swift_allocError();
  swift_willThrow();
  v49 = v35;
  v36 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v45 = 0;
  v46 = 0xE000000000000000;
  sub_242C48C38();
  sub_242C48314();
  sub_242C48E78();
  sub_242C48314();
  sub_242C48F5C();
  __break(1u);
}

uint64_t sub_242A92930(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

_QWORD *sub_242A92974(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return sub_242A9136C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_242A9297C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_7_13(a1, a2, a3);
  OUTLINED_FUNCTION_15_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_1_0();
}

void sub_242A929A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_1_0();
}

void sub_242A929E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_7_13(a1, a2, a3);
  OUTLINED_FUNCTION_15_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A92A0C(uint64_t *a1, uint64_t *a2)
{
  return sub_242B10AA8(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_242A92A34(uint64_t *a1)
{
  uint64_t v1;

  return sub_242A92A0C(a1, *(uint64_t **)(v1 + 16)) & 1;
}

unint64_t OUTLINED_FUNCTION_1_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v2;
  return v0
       + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
       + *(_QWORD *)(v3 + 72) * v1;
}

void OUTLINED_FUNCTION_2_18()
{
  sub_242AC3894();
}

void OUTLINED_FUNCTION_4_17()
{
  sub_242AC3894();
}

uint64_t OUTLINED_FUNCTION_5_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_6_15()
{
  sub_242AC3894();
}

uint64_t OUTLINED_FUNCTION_7_13(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_9_12()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  unint64_t v0;
  uint64_t v1;

  return sub_242A69418(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_10()
{
  return sub_242C47CE4();
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_15_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void Conv1D.weight.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void Conv1D.bias.modify(_QWORD *a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_51_3();
  if (!v3)
  {
    *a1 = 0;
LABEL_6:
    OUTLINED_FUNCTION_30_5();
    return;
  }
  v4 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_31_7(v4);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

#error "242A92DE4: call analysis failed (funcsize=208)"

void Conv1D.init(weight:bias:stride:padding:dilation:groupCount:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_70_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v47 = v6;
  v8 = v7;
  v10 = *v9;
  v12 = *v11;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222610);
  v13 = OUTLINED_FUNCTION_2_0();
  v14 = OUTLINED_FUNCTION_150_1(v13);
  if (v16 != 3)
  {
    OUTLINED_FUNCTION_95_1();
    goto LABEL_27;
  }
  v17 = v14;
  v18 = *(_QWORD *)(v15 + 32);
  if (v1 != -1)
  {
    v19 = v18;
    if (v1)
      v19 = v18 % v1;
    if (v19)
    {
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_24_0();
LABEL_23:
      OUTLINED_FUNCTION_80_1();
      goto LABEL_24;
    }
  }
  v48 = v5;
  if (v12)
  {
    OUTLINED_FUNCTION_68_3();
    if (!v20)
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_56_1();
LABEL_24:
      OUTLINED_FUNCTION_78_0();
      __break(1u);
LABEL_25:
      OUTLINED_FUNCTION_57_3();
      sub_242C480E0();
      goto LABEL_26;
    }
    OUTLINED_FUNCTION_145_1();
    if (!v20)
    {
      OUTLINED_FUNCTION_46_2();
      OUTLINED_FUNCTION_64_2();
      OUTLINED_FUNCTION_92_1(34);
      OUTLINED_FUNCTION_38_4();
      v45 = OUTLINED_FUNCTION_74();
      MEMORY[0x2494EC0FC](v45, MEMORY[0x24BEE1768]);
      OUTLINED_FUNCTION_38_4();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_17_8();
      OUTLINED_FUNCTION_89_1(*(_QWORD *)(v10 + 16));
      if (!v46)
        goto LABEL_25;
      OUTLINED_FUNCTION_119_1();
      OUTLINED_FUNCTION_38_4();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_132_0();
      goto LABEL_23;
    }
  }
  v49 = v3;
  OUTLINED_FUNCTION_1_4();
  v21 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_37_5(v21, v22, v23, v24, v25, v26, v27, v28);
  v30 = v29;
  OUTLINED_FUNCTION_17_1();
  if (v12)
  {
    v31 = OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_37_5(v31, v32, v33, v34, v35, v36, v37, v38);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_12_9();
  }
  v40 = v39;
  v41 = *(_QWORD **)(*(_QWORD *)(v10 + 16) + 152);
  if (!v41[2])
    goto LABEL_25;
  v42 = v41[4];
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_8_1();
  if (v41[2] <= 2uLL)
  {
    OUTLINED_FUNCTION_11_11();
LABEL_26:
    OUTLINED_FUNCTION_103_1();
LABEL_27:
    sub_242A59264();
  }
  v43 = v12 != 0;
  v44 = v41[6];
  OUTLINED_FUNCTION_3_6();
  *(_QWORD *)v8 = v30;
  *(_WORD *)(v8 + 8) = 256;
  *(_QWORD *)(v8 + 16) = v40;
  *(_WORD *)(v8 + 24) = 256;
  *(_BYTE *)(v8 + 26) = v43;
  *(_QWORD *)(v8 + 32) = v42;
  *(_QWORD *)(v8 + 40) = v44;
  *(_QWORD *)(v8 + 48) = v47;
  *(_QWORD *)(v8 + 56) = v48;
  *(_QWORD *)(v8 + 64) = v49;
  *(_QWORD *)(v8 + 72) = v1;
  *(_QWORD *)(v8 + 80) = v17;
  OUTLINED_FUNCTION_21_7();
}

void Conv1D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_154_1();
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222610);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v10 + 16) = 0;
  if (v0 != -1)
  {
    v11 = v7;
    if (v0)
      v11 = v7 % v0;
    if (v11)
    {
      OUTLINED_FUNCTION_93_1();
      goto LABEL_14;
    }
  }
  if (v7 <= 0)
  {
    OUTLINED_FUNCTION_147_0();
LABEL_14:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (v15 <= 0)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_161_0();
LABEL_15:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_151_1();
  v12 = swift_retain();
  sub_242A78594(v12);
  OUTLINED_FUNCTION_142_1();
  swift_allocObject();
  OUTLINED_FUNCTION_36_6();
  if (v2)
    sub_242A78594(v2);
  else
    OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_5();
  swift_release();
  OUTLINED_FUNCTION_112_1();
  v9[4] = v7;
  v9[5] = v15;
  v9[6] = v13;
  v9[7] = v14;
  v9[8] = v1;
  v9[9] = v0;
  v9[10] = v10;
  OUTLINED_FUNCTION_23();
}

void Conv1D.initializeParameters(for:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  OUTLINED_FUNCTION_126_1();
  OUTLINED_FUNCTION_18_8(*v4);
  if (!(!v10 & v5))
  {
LABEL_13:
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_4_18();
  }
  OUTLINED_FUNCTION_144_1();
  v6 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v7 + 40);
  if (v6 != -1 && v8 % v6)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v9 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v9 + 16) = xmmword_242C4B810;
    *(_QWORD *)(v9 + 32) = v1;
    v10 = v8 == 0x8000000000000000 && v6 == -1;
    if (v10)
    {
      __break(1u);
      goto LABEL_13;
    }
    *(_QWORD *)(v9 + 40) = v8 / v6;
    *(_QWORD *)(v9 + 48) = v3;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_122_1();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_3_6();
    if (v2)
    {
      v11 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v11 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v11 + 32) = v1;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_121_0();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_34();
    }
    OUTLINED_FUNCTION_34_5();
  }
}

uint64_t Conv1D.forward(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  __int128 **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  OUTLINED_FUNCTION_104_1();
  if (!v5)
  {
LABEL_13:
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_136_1();
  v6 = *v0;
  Tensor.expandingShape(at:)();
  v7 = *(_QWORD *)(v6 + 32);
  if ((~v7 & 0xF000000000000007) == 0)
    goto LABEL_10;
  if ((v7 & 0x8000000000000000) == 0)
  {
LABEL_11:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_12;
  }
  sub_242A7028C();
  Tensor.expandingShape(at:)();
  sub_242A70294(v7);
  if ((v4 & 1) != 0)
  {
    v8 = *(_QWORD *)(v3 + 32);
    if ((~v8 & 0xF000000000000007) != 0)
    {
      if (v8 < 0)
      {
        sub_242A7028C();
        goto LABEL_9;
      }
      goto LABEL_11;
    }
LABEL_10:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_12:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    goto LABEL_13;
  }
LABEL_9:
  OUTLINED_FUNCTION_134_1();
  conv2D(_:weight:bias:stride:padding:dilation:groupCount:)(v9, v10, v11, v12, v13, v14, v15, 1, v16, v1, v2);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_13_0();
  Tensor.squeezingShape(at:)();
  return swift_release();
}

void sub_242A93840()
{
  Conv1D.init(from:)();
}

void Conv1D.init(from:)()
{
  sub_242A95F38();
}

void sub_242A93888()
{
  Conv1D.encode(to:)();
}

void Conv1D.encode(to:)()
{
  sub_242A961CC();
}

uint64_t sub_242A938C8()
{
  return sub_242A97944();
}

uint64_t sub_242A938E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B3EC4C(*a1, *a2);
}

void sub_242A938F0()
{
  unsigned __int8 *v0;

  sub_242C4498C(*v0);
}

uint64_t sub_242A938F8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A5C4E0(a1, *v1);
}

void sub_242A93900(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA8EDC(a1, *v1);
}

uint64_t sub_242A93908@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A97944();
  *a1 = result;
  return result;
}

uint64_t sub_242A9393C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A938C8();
  *a1 = result;
  return result;
}

uint64_t sub_242A93960()
{
  sub_242A97E4C();
  return sub_242C494D8();
}

uint64_t sub_242A93988()
{
  sub_242A97E4C();
  return sub_242C494E4();
}

uint64_t Conv2D.weight.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

uint64_t sub_242A93A30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Conv2D.weight.getter();
  *a1 = v3;
  return result;
}

void sub_242A93AC0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *a1;
  swift_retain();
  Conv2D.weight.setter(&v8, v1, v2, v3, v4, v5, v6, v7);
}

void Conv2D.weight.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_66_3(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_1();
}

void Conv2D.weight.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void Conv2D.bias.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 26) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void sub_242A93C44(_QWORD *a1@<X8>)
{
  uint64_t v2;

  Conv2D.bias.getter(&v2);
  *a1 = v2;
}

void sub_242A93CD4()
{
  swift_retain();
  Conv2D.bias.setter();
}

void Conv2D.bias.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_51_3();
  if (v8)
  {
    if (v0)
    {
      OUTLINED_FUNCTION_72_3(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12);
LABEL_6:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v0)
      goto LABEL_6;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void Conv2D.bias.modify(_QWORD *a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_51_3();
  if (!v3)
  {
    *a1 = 0;
LABEL_6:
    OUTLINED_FUNCTION_30_5();
    return;
  }
  v4 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_31_7(v4);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void Conv2D.$bias.getter(uint64_t a1@<X8>)
{
  __int16 v1;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_3();
  if (v3)
  {
    OUTLINED_FUNCTION_62_2();
    v4 = OUTLINED_FUNCTION_159_1();
  }
  else
  {
    v4 = 0;
    v1 = 0;
  }
  *(_QWORD *)a1 = v4;
  *(_WORD *)(a1 + 8) = v1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t Conv2D.isEveryParameterInitialized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 112);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    return OUTLINED_FUNCTION_31_1();
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  v5 = !v4;
  v6 = v5 ^ 1u;
  if (v4 && *(_BYTE *)(v0 + 26))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
    v6 = (~v7 & 0xF000000000000007) != 0 && v7 < 0;
  }
  return OUTLINED_FUNCTION_156_1(v6, v1);
}

uint64_t Conv2D.kernelSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Conv2D.stride.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t Conv2D.padding.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t Conv2D.dilation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t Conv2D.groupCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

void sub_242A93F00(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v46;

  v13 = *a1;
  v40 = *((_BYTE *)a1 + 9);
  v41 = *((_BYTE *)a1 + 8);
  v14 = *a2;
  v15 = *((unsigned __int16 *)a2 + 4);
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222640);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = 0;
  OUTLINED_FUNCTION_26_5();
  if (v36)
    goto LABEL_32;
  if ((v17 & 0x8000000000000000) == 0)
    goto LABEL_23;
  v46 = a7;
  v18 = *(_QWORD *)(*(_QWORD *)(v17 + 16) + 152);
  if (*(_QWORD *)(v18 + 16) != 4)
  {
LABEL_28:
    OUTLINED_FUNCTION_24_0();
    while (1)
    {
      OUTLINED_FUNCTION_96_1();
LABEL_33:
      while (1)
      {
        OUTLINED_FUNCTION_78_0();
        __break(1u);
LABEL_34:
        if (v37 < 0)
          break;
LABEL_24:
        OUTLINED_FUNCTION_6_16();
        OUTLINED_FUNCTION_24_0();
        OUTLINED_FUNCTION_80_1();
      }
      OUTLINED_FUNCTION_89_1(*(_QWORD *)(v37 + 16));
      if (!v38)
        break;
      sub_242C491CC();
      OUTLINED_FUNCTION_87_1();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_28_8();
    }
    goto LABEL_37;
  }
  v19 = v16;
  v20 = *(_QWORD *)(v18 + 32);
  if (a10 != -1)
  {
    v21 = v20;
    if (a10)
      v21 = v20 % a10;
    if (v21)
    {
      OUTLINED_FUNCTION_54_2();
      goto LABEL_28;
    }
  }
  if (!v14)
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_205();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_15_7();
    v25 = v26;
    v23 = 0;
    LOBYTE(v24) = 1;
    goto LABEL_17;
  }
  v22 = *(_QWORD *)(v14 + 32);
  OUTLINED_FUNCTION_149_1();
  if (v36)
  {
LABEL_32:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
    goto LABEL_33;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
LABEL_23:
    OUTLINED_FUNCTION_94_1();
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_68_3();
  if (!v36)
  {
    OUTLINED_FUNCTION_53_1();
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_145_1();
  if (!v36)
  {
    OUTLINED_FUNCTION_205();
    sub_242A70278(v22);
    sub_242C48C38();
    OUTLINED_FUNCTION_87_1();
    v35 = OUTLINED_FUNCTION_74();
    MEMORY[0x2494EC0FC](v35, MEMORY[0x24BEE1768]);
    OUTLINED_FUNCTION_87_1();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_86_1();
    OUTLINED_FUNCTION_26_5();
    if (!v36)
      goto LABEL_34;
    goto LABEL_32;
  }
  v23 = v15 & 1;
  v24 = (v15 >> 8) & 1;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_205();
  v25 = v14;
LABEL_17:
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_26_5();
  if (v36)
    goto LABEL_32;
  if ((v27 & 0x8000000000000000) == 0)
    goto LABEL_23;
  v28 = (_QWORD *)OUTLINED_FUNCTION_89_1(*(_QWORD *)(v27 + 16));
  if (!v29)
  {
LABEL_37:
    OUTLINED_FUNCTION_85_2();
LABEL_38:
    OUTLINED_FUNCTION_131_1();
    sub_242C480E0();
    OUTLINED_FUNCTION_4_18();
  }
  if (v29 <= 2 || (v39 = a8, v29 == 3))
  {
    OUTLINED_FUNCTION_108_0();
    goto LABEL_38;
  }
  v30 = v23;
  v31 = v13;
  v32 = v28[4];
  v34 = v28[6];
  v33 = v28[7];
  OUTLINED_FUNCTION_72_1();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_1();
  *(_QWORD *)a9 = v31;
  *(_BYTE *)(a9 + 8) = v41;
  *(_BYTE *)(a9 + 9) = v40;
  *(_QWORD *)(a9 + 16) = v25;
  *(_BYTE *)(a9 + 24) = v30;
  *(_BYTE *)(a9 + 25) = v24;
  *(_BYTE *)(a9 + 26) = v14 != 0;
  *(_QWORD *)(a9 + 32) = v32;
  *(_QWORD *)(a9 + 40) = v34;
  *(_QWORD *)(a9 + 48) = v33;
  *(_QWORD *)(a9 + 56) = a3;
  *(_QWORD *)(a9 + 64) = a4;
  *(_QWORD *)(a9 + 72) = a5;
  *(_QWORD *)(a9 + 80) = a6;
  *(_QWORD *)(a9 + 88) = v46;
  *(_QWORD *)(a9 + 96) = v39;
  *(_QWORD *)(a9 + 104) = a10;
  *(_QWORD *)(a9 + 112) = v19;
  OUTLINED_FUNCTION_67_3();
}

void Conv2D.init(weight:bias:stride:padding:dilation:groupCount:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v58;
  uint64_t v59;

  v13 = *a1;
  v14 = *a2;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222640);
  v15 = OUTLINED_FUNCTION_2_0();
  v16 = OUTLINED_FUNCTION_150_1(v15);
  if (v18 != 4)
    goto LABEL_25;
  v19 = v16;
  v20 = *(_QWORD *)(v17 + 32);
  if (a10 != -1)
  {
    v21 = v20;
    if (a10)
      v21 = v20 % a10;
    if (v21)
    {
      OUTLINED_FUNCTION_52_2();
LABEL_25:
      OUTLINED_FUNCTION_24_0();
      goto LABEL_26;
    }
  }
  v58 = a7;
  if (v14)
  {
    OUTLINED_FUNCTION_68_3();
    if (!v22)
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_56_1();
      while (1)
      {
        OUTLINED_FUNCTION_78_0();
        __break(1u);
LABEL_28:
        OUTLINED_FUNCTION_205();
        sub_242C48C38();
        OUTLINED_FUNCTION_92_1(38);
        OUTLINED_FUNCTION_135_1();
        v47 = OUTLINED_FUNCTION_74();
        MEMORY[0x2494EC0FC](v47, MEMORY[0x24BEE1768]);
        OUTLINED_FUNCTION_135_1();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_3_6();
        OUTLINED_FUNCTION_86_1();
        OUTLINED_FUNCTION_89_1(*(_QWORD *)(v13 + 16));
        if (!v48)
          break;
        sub_242C491CC();
        v13 = v49;
        OUTLINED_FUNCTION_135_1();
        OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_28_8();
LABEL_26:
        OUTLINED_FUNCTION_80_1();
      }
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_145_1();
    if (!v22)
      goto LABEL_28;
  }
  v59 = a8;
  OUTLINED_FUNCTION_1_4();
  v23 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_102(v23, v24, v25, v26, v27, v28, v29, v30, v50, v52);
  v32 = v31;
  OUTLINED_FUNCTION_17_5();
  if (v14)
  {
    v33 = OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_102(v33, v34, v35, v36, v37, v38, v39, v40, v51, v53);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_12_9();
  }
  v41 = *(_QWORD **)(*(_QWORD *)(v13 + 16) + 152);
  v42 = v41[2];
  if (!v42)
  {
LABEL_30:
    OUTLINED_FUNCTION_80_2();
    goto LABEL_21;
  }
  if (v42 <= 2)
  {
    OUTLINED_FUNCTION_78_1();
LABEL_21:
    sub_242C480E0();
    goto LABEL_23;
  }
  v43 = v41[4];
  v44 = v41[6];
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_8_1();
  if (v41[2] <= 3uLL)
  {
    OUTLINED_FUNCTION_78_1();
LABEL_23:
    OUTLINED_FUNCTION_4_18();
  }
  v45 = v14 != 0;
  v46 = v41[7];
  OUTLINED_FUNCTION_136();
  *(_QWORD *)a9 = v32;
  OUTLINED_FUNCTION_163_0();
  *(_BYTE *)(a9 + 26) = v45;
  *(_QWORD *)(a9 + 32) = v43;
  *(_QWORD *)(a9 + 40) = v44;
  *(_QWORD *)(a9 + 48) = v46;
  *(_QWORD *)(a9 + 56) = a3;
  *(_QWORD *)(a9 + 64) = a4;
  *(_QWORD *)(a9 + 72) = a5;
  *(_QWORD *)(a9 + 80) = a6;
  *(_QWORD *)(a9 + 88) = v58;
  *(_QWORD *)(a9 + 96) = v59;
  *(_QWORD *)(a9 + 104) = a10;
  *(_QWORD *)(a9 + 112) = v19;
}

void Conv2D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  OUTLINED_FUNCTION_126_1();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v62 = v46;
  v63 = v47;
  v65 = v48;
  v66 = v49;
  v51 = v50;
  v53 = v52;
  v54 = OUTLINED_FUNCTION_226();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222640);
  v55 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v55 + 16) = 0;
  if (v51 < 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_231();
LABEL_17:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
  v56 = v55;
  if (a38 != -1 && (!a38 || v51 % a38))
  {
    OUTLINED_FUNCTION_167_0();
LABEL_16:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_17;
  }
  v64 = v41;
  if (v65 < 1 || v66 <= 0)
  {
    OUTLINED_FUNCTION_93_1();
    goto LABEL_16;
  }
  v58 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_6();
  v59 = swift_retain();
  sub_242A78594(v59);
  v61 = v60;
  OUTLINED_FUNCTION_142_1();
  swift_allocObject();
  OUTLINED_FUNCTION_36_6();
  if (a40)
    sub_242A78594(a40);
  else
    OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_19_5();
  *(_QWORD *)v53 = v61;
  *(_WORD *)(v53 + 8) = 256;
  *(_QWORD *)(v53 + 16) = v58;
  *(_WORD *)(v53 + 24) = 256;
  *(_BYTE *)(v53 + 26) = v54;
  *(_QWORD *)(v53 + 32) = v51;
  *(_QWORD *)(v53 + 40) = v65;
  *(_QWORD *)(v53 + 48) = v66;
  *(_QWORD *)(v53 + 56) = v62;
  *(_QWORD *)(v53 + 64) = v63;
  *(_QWORD *)(v53 + 72) = v45;
  *(_QWORD *)(v53 + 80) = v43;
  *(_QWORD *)(v53 + 88) = v64;
  *(_QWORD *)(v53 + 96) = a37;
  *(_QWORD *)(v53 + 104) = a38;
  *(_QWORD *)(v53 + 112) = v56;
  OUTLINED_FUNCTION_34_5();
}

uint64_t Conv2D.initializeParameters(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  uint64_t v12;
  __n128 v13;

  OUTLINED_FUNCTION_18_8(*a1);
  if (!(!v10 & v4))
  {
LABEL_13:
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_4_18();
  }
  v5 = OUTLINED_FUNCTION_125_1();
  v6 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v7 + 40);
  if (v6 != -1 && v8 % v6)
  {
    OUTLINED_FUNCTION_24_0();
    result = OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    v13 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v9 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v9 + 16) = xmmword_242C4DE40;
    *(_QWORD *)(v9 + 32) = v2;
    v10 = v8 == 0x8000000000000000 && v6 == -1;
    if (v10)
    {
      __break(1u);
      goto LABEL_13;
    }
    *(_QWORD *)(v9 + 40) = v8 / v6;
    *(__n128 *)(v9 + 48) = v13;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_122_1();
    OUTLINED_FUNCTION_17_5();
    result = OUTLINED_FUNCTION_3_6();
    if (v3)
    {
      v12 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v12 + 32) = v2;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_121_0();
      OUTLINED_FUNCTION_8_1();
      return OUTLINED_FUNCTION_34();
    }
  }
  return result;
}

uint64_t Conv2D.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 *v17;
  uint64_t result;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *v2;
  v5 = v2[2];
  v6 = *((_BYTE *)v2 + 26);
  v7 = v2[7];
  v8 = v2[8];
  v9 = v2[9];
  v10 = v2[10];
  v11 = v2[11];
  v12 = v2[12];
  v13 = v2[13];
  v21 = *a1;
  v14 = *(_QWORD *)(v4 + 32);
  if ((~v14 & 0xF000000000000007) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
    {
LABEL_10:
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
      goto LABEL_11;
    }
    v20 = v14 & 0x7FFFFFFFFFFFFFFFLL;
    if ((v6 & 1) == 0)
    {
      v17 = 0;
      goto LABEL_8;
    }
    v15 = OUTLINED_FUNCTION_27_5(v5);
    if (!v16)
    {
      if (v15 < 0)
      {
        v17 = (__int128 *)(v15 & 0x7FFFFFFFFFFFFFFFLL);
        sub_242A7028C();
LABEL_8:
        v19 = v17;
        sub_242A7028C();
        conv2D(_:weight:bias:stride:padding:dilation:groupCount:)(&v21, &v20, &v19, v7, v8, v9, v10, v11, a2, v12, v13);
        OUTLINED_FUNCTION_157_0();
        return sub_242A70294(v14);
      }
      goto LABEL_10;
    }
  }
  OUTLINED_FUNCTION_5_18();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_105_0();
LABEL_11:
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

void sub_242A94AD8()
{
  Conv2D.init(from:)();
}

void Conv2D.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;

  OUTLINED_FUNCTION_18_1();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222648);
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_9();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_242A97F00();
  OUTLINED_FUNCTION_111_1();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
    sub_242A97F3C(&qword_257222660, MEMORY[0x24BEE40E8]);
    OUTLINED_FUNCTION_23_8();
    OUTLINED_FUNCTION_23_8();
    LOBYTE(v22) = 4;
    OUTLINED_FUNCTION_23_8();
    sub_242A97E88();
    OUTLINED_FUNCTION_124_1();
    sub_242C490D0();
    v19 = v22;
    v20 = v23;
    v21 = v24;
    OUTLINED_FUNCTION_124_1();
    sub_242C49094();
    v15 = v17;
    v16 = v18;
    v10 = sub_242C490C4();
    sub_242A93F00(&v19, &v15, v25, v26, v25, v26, v25, v26, (uint64_t)&v25, v10);
    OUTLINED_FUNCTION_84_2(v9, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_63_3(v25, v27, v28);
    *(_OWORD *)(v5 + 64) = v11;
    *(_OWORD *)(v5 + 80) = v12;
    *(_OWORD *)(v5 + 96) = v13;
    *(_QWORD *)(v5 + 112) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  OUTLINED_FUNCTION_0_9();
}

void sub_242A94D80()
{
  Conv2D.encode(to:)();
}

void Conv2D.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_18_1();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222668);
  v3 = OUTLINED_FUNCTION_130_1(v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_20_8();
  sub_242A97F00();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_118_0();
  OUTLINED_FUNCTION_75_2();
  if (v0)
  {
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  }
  else
  {
    OUTLINED_FUNCTION_165_0();
    if (v7)
    {
      if (v5)
        v8 = 256;
      else
        v8 = 0;
      v9 = v8 | v6;
      OUTLINED_FUNCTION_39_0();
    }
    else
    {
      v9 = 0;
    }
    OUTLINED_FUNCTION_98_1();
    OUTLINED_FUNCTION_74_2();
    if (v9)
    {
      swift_release();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_160_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
      sub_242A97F3C(&qword_257222670, MEMORY[0x24BEE40D8]);
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_59_2();
    }
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  }
  OUTLINED_FUNCTION_139_1(v4);
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242A94F04()
{
  return sub_242A97944();
}

uint64_t sub_242A94F20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A97944();
  *a1 = result;
  return result;
}

uint64_t sub_242A94F54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A94F04();
  *a1 = result;
  return result;
}

uint64_t sub_242A94F78()
{
  sub_242A97F00();
  return sub_242C494D8();
}

uint64_t sub_242A94FA0()
{
  sub_242A97F00();
  return sub_242C494E4();
}

uint64_t _s14NeuralNetworks6Conv1DV6weightAA6TensorVvg_0()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

void sub_242A9504C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_14_7(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  *v8 = v11;
  OUTLINED_FUNCTION_18_4();
}

void sub_242A95070()
{
  void (*v0)(_BYTE *);
  _BYTE v1[8];

  OUTLINED_FUNCTION_115_1();
  v0(v1);
  OUTLINED_FUNCTION_30_5();
}

void TransposedConv1D.weight.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_66_3(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_1();
}

void TransposedConv1D.weight.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void _s14NeuralNetworks6Conv1DV4biasAA6TensorVSgvg_0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 26) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void _s14NeuralNetworks6Conv1DV4biasAA6TensorVSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_51_3();
  if (v8)
  {
    if (v0)
    {
      OUTLINED_FUNCTION_72_3(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12);
LABEL_6:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v0)
      goto LABEL_6;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void TransposedConv1D.bias.modify(_QWORD *a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_51_3();
  if (!v3)
  {
    *a1 = 0;
LABEL_6:
    OUTLINED_FUNCTION_30_5();
    return;
  }
  v4 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_31_7(v4);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void _s14NeuralNetworks6Conv1DV5_biasAA9ParameterVSgvg_0(uint64_t a1@<X8>)
{
  __int16 v1;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_3();
  if (v3)
  {
    OUTLINED_FUNCTION_62_2();
    v4 = OUTLINED_FUNCTION_159_1();
  }
  else
  {
    v4 = 0;
    v1 = 0;
  }
  *(_QWORD *)a1 = v4;
  *(_WORD *)(a1 + 8) = v1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t _s14NeuralNetworks6Conv1DV27isEveryParameterInitializedSbvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 80);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    return OUTLINED_FUNCTION_31_1();
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  v5 = !v4;
  v6 = v5 ^ 1u;
  if (v4 && *(_BYTE *)(v0 + 26))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
    v6 = (~v7 & 0xF000000000000007) != 0 && v7 < 0;
  }
  return OUTLINED_FUNCTION_156_1(v6, v1);
}

uint64_t TransposedConv1D.kernelSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t TransposedConv1D.stride.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t TransposedConv1D.padding.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t TransposedConv1D.dilation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t TransposedConv1D.groupCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

#error "242A95550: call analysis failed (funcsize=198)"

void TransposedConv1D.init(weight:bias:stride:padding:dilation:groupCount:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_70_2();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v42 = v7;
  v9 = v8;
  v11 = *v10;
  v13 = *v12;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222678);
  v14 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v14 + 16) = 0;
  v15 = OUTLINED_FUNCTION_19_7(*(_QWORD *)(v11 + 16));
  if (!(!v17 & v16))
  {
LABEL_25:
    OUTLINED_FUNCTION_11_11();
    sub_242C480E0();
    goto LABEL_27;
  }
  if (v2 != -1)
  {
    v18 = *(_QWORD *)(v15 + 40);
    if (v2)
      v18 = *(_QWORD *)(v15 + 40) % v2;
    if (v18)
    {
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_24_0();
      goto LABEL_29;
    }
  }
  v43 = v6;
  if (v13)
  {
    OUTLINED_FUNCTION_68_3();
    if (!v17)
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_56_1();
      while (1)
      {
        OUTLINED_FUNCTION_78_0();
        __break(1u);
LABEL_31:
        OUTLINED_FUNCTION_119_1();
        OUTLINED_FUNCTION_38_4();
        OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_28_8();
        OUTLINED_FUNCTION_132_0();
LABEL_29:
        OUTLINED_FUNCTION_80_1();
      }
    }
    if ((unsigned __int128)(v19 * (__int128)v2) >> 64 != (v19 * v2) >> 63)
    {
      __break(1u);
      goto LABEL_21;
    }
    OUTLINED_FUNCTION_148_1();
    if (!v17)
    {
LABEL_21:
      OUTLINED_FUNCTION_46_2();
      OUTLINED_FUNCTION_64_2();
      OUTLINED_FUNCTION_92_1(34);
      OUTLINED_FUNCTION_38_4();
      v40 = OUTLINED_FUNCTION_44_0();
      MEMORY[0x2494EC0FC](v40, MEMORY[0x24BEE1768]);
      OUTLINED_FUNCTION_38_4();
      OUTLINED_FUNCTION_3_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17_8();
      OUTLINED_FUNCTION_19_7(*(_QWORD *)(v11 + 16));
      if (!v17 & v16)
      {
        OUTLINED_FUNCTION_146_0();
        if (v17)
          goto LABEL_31;
        __break(1u);
      }
      goto LABEL_25;
    }
  }
  v41 = v4;
  OUTLINED_FUNCTION_1_4();
  v20 = OUTLINED_FUNCTION_36_6();
  OUTLINED_FUNCTION_37_5(v20, v21, v22, v23, v24, v25, v26, v27);
  v29 = v28;
  OUTLINED_FUNCTION_17_1();
  if (v13)
  {
    v0 = (_QWORD *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_37_5((uint64_t)v0, v30, v31, v32, v33, v34, v35, v36);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_12_9();
  }
  OUTLINED_FUNCTION_82_2();
  if (!(!v17 & v16))
    goto LABEL_25;
  v37 = v0[5];
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_28_5();
  if (v0[2] <= 2uLL)
  {
    OUTLINED_FUNCTION_11_11();
LABEL_27:
    OUTLINED_FUNCTION_4_18();
  }
  v38 = v13 != 0;
  v39 = v0[6];
  OUTLINED_FUNCTION_136();
  *(_QWORD *)v9 = v29;
  OUTLINED_FUNCTION_163_0();
  *(_BYTE *)(v9 + 26) = v38;
  *(_QWORD *)(v9 + 32) = v37;
  *(_QWORD *)(v9 + 40) = v39;
  *(_QWORD *)(v9 + 48) = v42;
  *(_QWORD *)(v9 + 56) = v43;
  *(_QWORD *)(v9 + 64) = v41;
  *(_QWORD *)(v9 + 72) = v2;
  *(_QWORD *)(v9 + 80) = v14;
  OUTLINED_FUNCTION_21_7();
}

void TransposedConv1D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_154_1();
  v14 = v3;
  v15 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222678);
  v11 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v11 + 16) = 0;
  if (v8 < 1)
  {
    OUTLINED_FUNCTION_147_0();
LABEL_13:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_14;
  }
  if (v6 <= 0)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_161_0();
LABEL_14:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
  v12 = v11;
  if (v0 != -1 && (!v0 || v8 % v0))
  {
    OUTLINED_FUNCTION_93_1();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_151_1();
  v13 = swift_retain();
  sub_242A78594(v13);
  OUTLINED_FUNCTION_142_1();
  swift_allocObject();
  OUTLINED_FUNCTION_36_6();
  if (v2)
    sub_242A78594(v2);
  else
    OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_5();
  swift_release();
  OUTLINED_FUNCTION_112_1();
  v10[4] = v8;
  v10[5] = v6;
  v10[6] = v14;
  v10[7] = v15;
  v10[8] = v1;
  v10[9] = v0;
  v10[10] = v12;
  OUTLINED_FUNCTION_23();
}

void TransposedConv1D.initializeParameters(for:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  OUTLINED_FUNCTION_126_1();
  OUTLINED_FUNCTION_18_8(*v4);
  if (!(!v11 & v5))
  {
LABEL_17:
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_4_18();
  }
  OUTLINED_FUNCTION_144_1();
  v6 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v7 + 40);
  v9 = v8;
  if (v6)
  {
    if (v6 == -1)
      goto LABEL_7;
    v9 = v8 % v6;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v10 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v10 + 32) = v8;
  if (!v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = v1 == 0x8000000000000000 && v6 == -1;
  if (v11)
    goto LABEL_16;
  *(_QWORD *)(v10 + 40) = v1 / v6;
  *(_QWORD *)(v10 + 48) = v3;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_122_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_3_6();
  if (v2)
  {
    v12 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v12 + 32) = v1;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_34();
  }
  OUTLINED_FUNCTION_34_5();
}

uint64_t TransposedConv1D.forward(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  __int128 **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  OUTLINED_FUNCTION_104_1();
  if (!v5)
  {
LABEL_13:
    OUTLINED_FUNCTION_95_1();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_136_1();
  v6 = *v0;
  Tensor.expandingShape(at:)();
  v7 = *(_QWORD *)(v6 + 32);
  if ((~v7 & 0xF000000000000007) == 0)
    goto LABEL_10;
  if ((v7 & 0x8000000000000000) == 0)
  {
LABEL_11:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_12;
  }
  sub_242A7028C();
  Tensor.expandingShape(at:)();
  sub_242A70294(v7);
  if ((v4 & 1) != 0)
  {
    v8 = *(_QWORD *)(v3 + 32);
    if ((~v8 & 0xF000000000000007) != 0)
    {
      if (v8 < 0)
      {
        sub_242A7028C();
        goto LABEL_9;
      }
      goto LABEL_11;
    }
LABEL_10:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_12:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    goto LABEL_13;
  }
LABEL_9:
  OUTLINED_FUNCTION_134_1();
  transposedConv2D(_:weight:bias:stride:padding:outputPadding:dilation:groupCount:)(v9, v10, v11, v12, v13, v14, v15, 0, v16, 0, 1, v1, v2);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_13_0();
  Tensor.squeezingShape(at:)();
  return swift_release();
}

void sub_242A95EF0()
{
  TransposedConv1D.init(from:)();
}

void TransposedConv1D.init(from:)()
{
  sub_242A95F38();
}

void sub_242A95F38()
{
  uint64_t v0;
  void (*v1)(unint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  unint64_t v31;
  __n128 v32;
  __n128 v33;

  OUTLINED_FUNCTION_18_1();
  v19 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v20 = __swift_instantiateConcreteTypeFromMangledName(v8);
  v9 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_4_9();
  v12 = v11 - v10;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3();
  sub_242C49448();
  if (!v0)
  {
    sub_242A97E88();
    sub_242C490D0();
    v25 = v28;
    v26 = v29;
    v27 = v30;
    sub_242C49094();
    v21 = v23;
    v22 = v24;
    v13 = OUTLINED_FUNCTION_32_6(2);
    v18 = OUTLINED_FUNCTION_32_6(3);
    v17 = OUTLINED_FUNCTION_32_6(4);
    v14 = OUTLINED_FUNCTION_32_6(5);
    v19(&v31, &v25, &v21, v13, v18, v17, v14);
    OUTLINED_FUNCTION_84_2(v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    OUTLINED_FUNCTION_63_3(v31, v32, v33);
    *(_OWORD *)(v7 + 64) = v15;
    *(_QWORD *)(v7 + 80) = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  OUTLINED_FUNCTION_0_9();
}

void sub_242A9618C()
{
  TransposedConv1D.encode(to:)();
}

void TransposedConv1D.encode(to:)()
{
  sub_242A961CC();
}

void sub_242A961CC()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  OUTLINED_FUNCTION_18_1();
  v22 = v2;
  v23 = v1;
  v4 = v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  v10 = *((_BYTE *)v0 + 8);
  v28 = *((_BYTE *)v0 + 9);
  v21 = v0[2];
  v11 = *((unsigned __int8 *)v0 + 24);
  v18 = *((unsigned __int8 *)v0 + 25);
  v19 = *((unsigned __int8 *)v0 + 26);
  v20 = v11;
  v12 = v0[6];
  v17[2] = v0[7];
  v17[3] = v12;
  v13 = v0[8];
  v17[0] = v0[9];
  v17[1] = v13;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v22();
  sub_242C49478();
  v25 = v9;
  v26 = v10;
  v27 = v28;
  v14 = v8;
  sub_242A97EC4();
  OUTLINED_FUNCTION_168();
  v15 = v23;
  sub_242C49184();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  }
  else
  {
    v16 = v24;
    if (v19)
      swift_retain();
    OUTLINED_FUNCTION_98_1();
    OUTLINED_FUNCTION_168();
    sub_242C4913C();
    swift_release();
    OUTLINED_FUNCTION_158_1(2);
    OUTLINED_FUNCTION_73_3();
    OUTLINED_FUNCTION_158_1(3);
    OUTLINED_FUNCTION_73_3();
    OUTLINED_FUNCTION_158_1(4);
    OUTLINED_FUNCTION_73_3();
    OUTLINED_FUNCTION_158_1(5);
    OUTLINED_FUNCTION_73_3();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v6);
  }
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242A963D4()
{
  return sub_242A97944();
}

uint64_t sub_242A963F0()
{
  return 6;
}

uint64_t sub_242A963F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242A96428 + 4 * byte_242C4E7D0[a1]))(0x746867696577, 0xE600000000000000);
}

uint64_t sub_242A96428()
{
  return 1935763810;
}

uint64_t sub_242A96438()
{
  return 0x656469727473;
}

uint64_t sub_242A96448()
{
  return 0x676E6964646170;
}

uint64_t sub_242A96460()
{
  return 0x6E6F6974616C6964;
}

uint64_t sub_242A96478()
{
  return 0x756F4370756F7267;
}

uint64_t sub_242A96494(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242A964C4 + 4 * byte_242C4E7D6[a1]))(0x746867696577, 0xE600000000000000);
}

uint64_t sub_242A964C4()
{
  return 1935763810;
}

uint64_t sub_242A964D4()
{
  return 0x656469727473;
}

uint64_t sub_242A964E4()
{
  return 0x676E6964646170;
}

uint64_t sub_242A964FC()
{
  return 0x6E6F6974616C6964;
}

uint64_t sub_242A96514()
{
  return 0x756F4370756F7267;
}

void sub_242A96530()
{
  unsigned __int8 *v0;

  sub_242C44998(*v0);
}

void sub_242A96538(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA91FC(a1, *v1);
}

uint64_t sub_242A96540@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A97944();
  *a1 = result;
  return result;
}

void sub_242A96574(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_242A963F8(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A96598()
{
  unsigned __int8 *v0;

  return sub_242A96494(*v0);
}

uint64_t sub_242A965A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A963D4();
  *a1 = result;
  return result;
}

uint64_t sub_242A965C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A963F0();
  *a1 = result;
  return result;
}

uint64_t sub_242A965E8()
{
  sub_242A97F80();
  return sub_242C494D8();
}

uint64_t sub_242A96610()
{
  sub_242A97F80();
  return sub_242C494E4();
}

uint64_t TransposedConv2D.weight.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

uint64_t sub_242A966B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TransposedConv2D.weight.getter();
  *a1 = v3;
  return result;
}

void sub_242A966F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *a1;
  swift_retain();
  TransposedConv2D.weight.setter(&v8, v1, v2, v3, v4, v5, v6, v7);
}

void TransposedConv2D.weight.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_66_3(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_1();
}

void TransposedConv2D.weight.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void sub_242A967D8(uint64_t *a1, char a2)
{
  uint64_t v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_6();
    Parameter.wrappedValue.setter(&v2);
    swift_release();
  }
  else
  {
    Parameter.wrappedValue.setter(&v2);
    OUTLINED_FUNCTION_30_5();
  }
}

void TransposedConv2D.bias.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 26) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void sub_242A968C4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  TransposedConv2D.bias.getter(&v2);
  *a1 = v2;
}

void sub_242A968FC()
{
  swift_retain();
  TransposedConv2D.bias.setter();
}

void TransposedConv2D.bias.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_51_3();
  if (v8)
  {
    if (v0)
    {
      OUTLINED_FUNCTION_72_3(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12);
LABEL_6:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v0)
      goto LABEL_6;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void TransposedConv2D.bias.modify(_QWORD *a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_51_3();
  if (!v3)
  {
    *a1 = 0;
LABEL_6:
    OUTLINED_FUNCTION_30_5();
    return;
  }
  v4 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_31_7(v4);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void sub_242A96A6C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 26))
    {
      if (v2)
      {
        v3 = *a1;
        OUTLINED_FUNCTION_6();
        Parameter.wrappedValue.setter(&v3);
LABEL_9:
        swift_release();
        return;
      }
      goto LABEL_12;
    }
    if (!v2)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 26))
  {
    if (v2)
    {
      OUTLINED_FUNCTION_8_1();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v2)
  {
    v3 = *a1;
    Parameter.wrappedValue.setter(&v3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void TransposedConv2D.$bias.getter(uint64_t a1@<X8>)
{
  __int16 v1;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_3();
  if (v3)
  {
    OUTLINED_FUNCTION_62_2();
    v4 = OUTLINED_FUNCTION_159_1();
  }
  else
  {
    v4 = 0;
    v1 = 0;
  }
  *(_QWORD *)a1 = v4;
  *(_WORD *)(a1 + 8) = v1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t TransposedConv2D.isEveryParameterInitialized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 128);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    return OUTLINED_FUNCTION_31_1();
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  v5 = !v4;
  v6 = v5 ^ 1u;
  if (v4 && *(_BYTE *)(v0 + 26))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
    v6 = (~v7 & 0xF000000000000007) != 0 && v7 < 0;
  }
  return OUTLINED_FUNCTION_156_1(v6, v1);
}

uint64_t TransposedConv2D.kernelSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t TransposedConv2D.stride.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t TransposedConv2D.padding.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t TransposedConv2D.dilation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t TransposedConv2D.groupCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t TransposedConv2D.outputPadding.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

void *sub_242A96C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_116_1();
  v17 = *v16;
  v18 = *((unsigned __int16 *)v16 + 4);
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222698);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = 0;
  OUTLINED_FUNCTION_26_5();
  if (v21)
    goto LABEL_33;
  if ((v20 & 0x8000000000000000) == 0)
    goto LABEL_34;
  v22 = v19;
  OUTLINED_FUNCTION_82_2();
  if (!(!v21 & v23))
    goto LABEL_37;
  if (a11 != -1)
  {
    v24 = *(_QWORD *)(v12 + 40);
    if (a11)
      v24 = *(_QWORD *)(v12 + 40) % a11;
    if (v24)
    {
      OUTLINED_FUNCTION_54_2();
      goto LABEL_45;
    }
  }
  if (v17)
  {
    v25 = *(_QWORD *)(v17 + 32);
    OUTLINED_FUNCTION_149_1();
    if (v21)
      goto LABEL_33;
    if ((v25 & 0x8000000000000000) == 0)
    {
LABEL_34:
      OUTLINED_FUNCTION_94_1();
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_68_3();
    if (!v21)
    {
      OUTLINED_FUNCTION_53_1();
LABEL_45:
      OUTLINED_FUNCTION_24_0();
LABEL_46:
      OUTLINED_FUNCTION_96_1();
      goto LABEL_36;
    }
    if ((unsigned __int128)(v26 * (__int128)a11) >> 64 != (v26 * a11) >> 63)
    {
      __break(1u);
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_148_1();
    if (!v21)
    {
LABEL_27:
      v49 = 0;
      v50 = 0xE000000000000000;
      OUTLINED_FUNCTION_39_0();
      sub_242A70278(v25);
      sub_242C48C38();
      OUTLINED_FUNCTION_138_1();
      v38 = OUTLINED_FUNCTION_74();
      MEMORY[0x2494EC0FC](v38, MEMORY[0x24BEE1768]);
      OUTLINED_FUNCTION_138_1();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_17_8();
      OUTLINED_FUNCTION_26_5();
      if (!v21)
      {
        if (v39 < 0)
        {
          v40 = OUTLINED_FUNCTION_18_8(v39);
          if (!(!v21 & v23))
            goto LABEL_38;
          v41 = *(_QWORD *)(v40 + 40);
          if ((unsigned __int128)(v41 * (__int128)a11) >> 64 == (v41 * a11) >> 63)
          {
            v49 = v41 * a11;
            sub_242C491CC();
            OUTLINED_FUNCTION_138_1();
            OUTLINED_FUNCTION_4_0();
            OUTLINED_FUNCTION_28_8();
            goto LABEL_46;
          }
          __break(1u);
          goto LABEL_33;
        }
LABEL_35:
        OUTLINED_FUNCTION_6_16();
        OUTLINED_FUNCTION_24_0();
        OUTLINED_FUNCTION_80_1();
        goto LABEL_36;
      }
LABEL_33:
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
LABEL_36:
      OUTLINED_FUNCTION_78_0();
      __break(1u);
LABEL_37:
      v50 = 0;
      v51 = 0;
      v49 = 1;
      OUTLINED_FUNCTION_83_1();
      OUTLINED_FUNCTION_39_0();
      goto LABEL_43;
    }
    v27 = v18 & 1;
    v28 = (v18 >> 8) & 1;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_39_0();
    v29 = v17;
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_15_7();
    v29 = v30;
    v27 = 0;
    LOBYTE(v28) = 1;
  }
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_26_5();
  if (v21)
    goto LABEL_33;
  if ((v31 & 0x8000000000000000) == 0)
    goto LABEL_34;
  v32 = (_QWORD *)OUTLINED_FUNCTION_18_8(v31);
  if (!(!v21 & v23))
  {
LABEL_38:
    v42 = 1;
LABEL_41:
    v51 = 0;
    v49 = v42;
    goto LABEL_42;
  }
  if (v33 == 2)
  {
    v51 = 0;
    v49 = 2;
LABEL_42:
    v50 = 0;
    OUTLINED_FUNCTION_83_1();
LABEL_43:
    sub_242C480E0();
    OUTLINED_FUNCTION_4_18();
  }
  if (v33 <= 3)
  {
    v42 = 3;
    goto LABEL_41;
  }
  v34 = v32[5];
  v35 = v32[6];
  v36 = v32[7];
  v49 = v11;
  LOBYTE(v50) = v44;
  BYTE1(v50) = v43;
  v51 = v29;
  v52 = v27;
  v53 = v28;
  v54 = v17 != 0;
  v55 = v34;
  v56 = v35;
  v57 = v36;
  v58 = v45;
  v59 = v46;
  v60 = a5;
  v61 = a6;
  v62 = a9;
  v63 = a10;
  v64 = a11;
  v65 = a7;
  v66 = a8;
  v67 = v22;
  sub_242A97FBC((uint64_t)&v49);
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_135();
  swift_release();
  sub_242A98004((uint64_t)&v49);
  return OUTLINED_FUNCTION_120_1(v13, &v49);
}

void *TransposedConv2D.init(weight:bias:stride:padding:dilation:groupCount:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[136];

  v11 = *a1;
  v13 = *a2;
  v14 = v11;
  TransposedConv2D.init(weight:bias:stride:padding:outputPadding:dilation:groupCount:)(&v14, &v13, a3, a4, a5, a6, 0, 0, (uint64_t)v15, a7, a8, a10);
  return OUTLINED_FUNCTION_120_1(a9, v15);
}

void TransposedConv2D.init(weight:bias:stride:padding:outputPadding:dilation:groupCount:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v67;

  v16 = *a1;
  v17 = *a2;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222698);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = 0;
  v18 = OUTLINED_FUNCTION_19_7(*(_QWORD *)(v16 + 16));
  if (!(!v21 & v20))
    goto LABEL_25;
  if (a12 != -1)
  {
    v22 = *(_QWORD *)(v18 + 40);
    if (a12)
      v22 = *(_QWORD *)(v18 + 40) % a12;
    if (v22)
    {
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_24_0();
LABEL_32:
      OUTLINED_FUNCTION_80_1();
      goto LABEL_33;
    }
  }
  v67 = a6;
  if (v17)
  {
    OUTLINED_FUNCTION_68_3();
    if (!v21)
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_56_1();
LABEL_33:
      OUTLINED_FUNCTION_78_0();
      __break(1u);
      goto LABEL_34;
    }
    if ((unsigned __int128)(v23 * (__int128)a12) >> 64 != (v23 * a12) >> 63)
    {
      __break(1u);
LABEL_22:
      OUTLINED_FUNCTION_205();
      sub_242C48C38();
      OUTLINED_FUNCTION_92_1(34);
      OUTLINED_FUNCTION_87_1();
      v50 = OUTLINED_FUNCTION_74();
      MEMORY[0x2494EC0FC](v50, MEMORY[0x24BEE1768]);
      OUTLINED_FUNCTION_87_1();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_17_8();
      v51 = OUTLINED_FUNCTION_89_1(*(_QWORD *)(v16 + 16));
      if (!v52)
      {
LABEL_34:
        OUTLINED_FUNCTION_85_2();
        goto LABEL_26;
      }
      if ((unsigned __int128)(*(uint64_t *)(v51 + 32) * (__int128)a12) >> 64 != (*(_QWORD *)(v51 + 32) * a12) >> 63)
      {
        __break(1u);
LABEL_25:
        OUTLINED_FUNCTION_81_2();
LABEL_26:
        OUTLINED_FUNCTION_131_1();
LABEL_28:
        sub_242C480E0();
        goto LABEL_30;
      }
      sub_242C491CC();
      OUTLINED_FUNCTION_87_1();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_28_8();
      goto LABEL_32;
    }
    OUTLINED_FUNCTION_148_1();
    if (!v21)
      goto LABEL_22;
  }
  v62 = v19;
  v63 = a7;
  v24 = (_QWORD *)OUTLINED_FUNCTION_1_4();
  v25 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_101_1(v25, v26, v27, v28, v29, v30, v31, v32, v53, v55, v57, v60);
  v34 = v33;
  OUTLINED_FUNCTION_13_0();
  if (v17)
  {
    v24 = (_QWORD *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_101_1((uint64_t)v24, v35, v36, v37, v38, v39, v40, v41, v54, v56, v58, v61);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_12_9();
  }
  OUTLINED_FUNCTION_82_2();
  if (!(!v21 & v20) || v43 == 2)
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_131_1();
    goto LABEL_28;
  }
  v44 = a8;
  v45 = v42;
  v46 = v34;
  v59 = v44;
  v48 = v24[5];
  v47 = v24[6];
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_8_1();
  if (v24[2] <= 3uLL)
  {
    OUTLINED_FUNCTION_81_2();
    OUTLINED_FUNCTION_131_1();
LABEL_30:
    OUTLINED_FUNCTION_4_18();
  }
  v49 = v24[7];
  OUTLINED_FUNCTION_136();
  *(_QWORD *)a9 = v46;
  *(_WORD *)(a9 + 8) = 256;
  *(_QWORD *)(a9 + 16) = v45;
  *(_WORD *)(a9 + 24) = 256;
  *(_BYTE *)(a9 + 26) = v17 != 0;
  *(_QWORD *)(a9 + 32) = v48;
  *(_QWORD *)(a9 + 40) = v47;
  *(_QWORD *)(a9 + 48) = v49;
  *(_QWORD *)(a9 + 56) = a3;
  *(_QWORD *)(a9 + 64) = a4;
  *(_QWORD *)(a9 + 72) = a5;
  *(_QWORD *)(a9 + 80) = v67;
  *(_QWORD *)(a9 + 88) = a10;
  *(_QWORD *)(a9 + 96) = a11;
  *(_QWORD *)(a9 + 104) = a12;
  *(_QWORD *)(a9 + 112) = v63;
  *(_QWORD *)(a9 + 120) = v59;
  *(_QWORD *)(a9 + 128) = v62;
  OUTLINED_FUNCTION_67_3();
}

void *TransposedConv2D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _BYTE v15[136];

  TransposedConv2D.init(filterCount:kernelSize:stride:padding:outputPadding:dilation:groupCount:weightInitializer:biasInitializer:)(a1, a2, a3, a4, a5, a6, a7, 0, v15, 0, a8, a10, a11, a12, a13);
  return OUTLINED_FUNCTION_120_1(a9, v15);
}

void *TransposedConv2D.init(filterCount:kernelSize:stride:padding:outputPadding:dilation:groupCount:weightInitializer:biasInitializer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char v15;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *result;
  void *v32;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  __int16 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222698);
  v21 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v21 + 16) = 0;
  if (a1 < 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_231();
LABEL_17:
    result = (void *)OUTLINED_FUNCTION_78_0();
    __break(1u);
    return result;
  }
  v22 = v21;
  if (a13 != -1 && (!a13 || a1 % a13))
  {
    OUTLINED_FUNCTION_167_0();
LABEL_16:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_17;
  }
  v32 = a9;
  if (a2 < 1 || a3 <= 0)
  {
    OUTLINED_FUNCTION_93_1();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_6();
  v24 = swift_retain();
  sub_242A78594(v24);
  v26 = v25;
  OUTLINED_FUNCTION_142_1();
  v27 = swift_allocObject();
  OUTLINED_FUNCTION_10();
  if (a15)
    sub_242A78594(a15);
  else
    OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_157_0();
  v34 = v26;
  v35 = 256;
  v36 = v27;
  v37 = 256;
  v38 = v15;
  v39 = a1;
  v40 = a2;
  v41 = a3;
  v42 = a4;
  v43 = a5;
  v44 = a6;
  v45 = a7;
  v46 = a11;
  v47 = a12;
  v48 = a13;
  v49 = a8;
  v50 = a10;
  v51 = v22;
  sub_242A97FBC((uint64_t)&v34);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_8_1();
  sub_242A98004((uint64_t)&v34);
  return OUTLINED_FUNCTION_120_1(v32, &v34);
}

uint64_t TransposedConv2D.initializeParameters(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t result;
  uint64_t v13;
  __n128 v14;

  OUTLINED_FUNCTION_18_8(*a1);
  if (!(!v11 & v4))
  {
LABEL_17:
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_4_18();
  }
  v5 = OUTLINED_FUNCTION_125_1();
  v6 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v7 + 40);
  v9 = v8;
  if (v6)
  {
    if (v6 == -1)
      goto LABEL_7;
    v9 = v8 % v6;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_24_0();
    result = OUTLINED_FUNCTION_78_0();
    __break(1u);
    return result;
  }
LABEL_7:
  v14 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v10 + 16) = xmmword_242C4DE40;
  *(_QWORD *)(v10 + 32) = v8;
  if (!v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = v2 == 0x8000000000000000 && v6 == -1;
  if (v11)
    goto LABEL_16;
  *(_QWORD *)(v10 + 40) = v2 / v6;
  *(__n128 *)(v10 + 48) = v14;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_122_1();
  OUTLINED_FUNCTION_17_5();
  result = OUTLINED_FUNCTION_3_6();
  if (v3)
  {
    v13 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v13 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v13 + 32) = v2;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_8_1();
    return OUTLINED_FUNCTION_34();
  }
  return result;
}

uint64_t TransposedConv2D.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __int128 *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *v2;
  v4 = v2[2];
  v5 = *((_BYTE *)v2 + 26);
  v6 = v2[7];
  v7 = v2[8];
  v8 = v2[9];
  v9 = v2[10];
  v11 = v2[11];
  v10 = v2[12];
  v12 = v2[13];
  v13 = v2[14];
  v14 = v2[15];
  v24 = *a1;
  v15 = *(_QWORD *)(v3 + 32);
  if ((~v15 & 0xF000000000000007) != 0)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
LABEL_10:
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
      goto LABEL_11;
    }
    v23 = v15 & 0x7FFFFFFFFFFFFFFFLL;
    v20 = v13;
    v21 = v10;
    if ((v5 & 1) == 0)
    {
      v17 = a2;
      v18 = 0;
      goto LABEL_8;
    }
    v16 = *(_QWORD *)(v4 + 32);
    if ((~v16 & 0xF000000000000007) != 0)
    {
      if (v16 < 0)
      {
        v17 = a2;
        v18 = (__int128 *)(v16 & 0x7FFFFFFFFFFFFFFFLL);
        sub_242A7028C();
LABEL_8:
        v22 = v18;
        sub_242A7028C();
        transposedConv2D(_:weight:bias:stride:padding:outputPadding:dilation:groupCount:)(&v24, &v23, &v22, v6, v7, v8, v9, v20, v17, v14, v11, v21, v12);
        OUTLINED_FUNCTION_157_0();
        return sub_242A70294(v15);
      }
      goto LABEL_10;
    }
  }
  OUTLINED_FUNCTION_5_18();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_105_0();
LABEL_11:
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

uint64_t sub_242A97944()
{
  unint64_t v0;

  v0 = sub_242C49064();
  OUTLINED_FUNCTION_4_0();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_242A97984()
{
  return sub_242A97944();
}

uint64_t sub_242A979AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A97944();
  *a1 = result;
  return result;
}

uint64_t sub_242A979E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A97984();
  *a1 = result;
  return result;
}

uint64_t sub_242A97A04()
{
  sub_242A9804C();
  return sub_242C494D8();
}

uint64_t sub_242A97A2C()
{
  sub_242A9804C();
  return sub_242C494E4();
}

void TransposedConv2D.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[136];
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;

  OUTLINED_FUNCTION_18_1();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572226A0);
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_9();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_242A9804C();
  OUTLINED_FUNCTION_111_1();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
    sub_242A97F3C(&qword_257222660, MEMORY[0x24BEE40E8]);
    OUTLINED_FUNCTION_25_4();
    v13 = *(_OWORD *)v14;
    OUTLINED_FUNCTION_25_4();
    v12 = *(_OWORD *)v14;
    LOBYTE(v22) = 4;
    OUTLINED_FUNCTION_25_4();
    v11 = *(_OWORD *)v14;
    sub_242A97E88();
    OUTLINED_FUNCTION_106_1();
    sub_242C490D0();
    v19 = v22;
    v20 = v23;
    v21 = v24;
    v14[0] = 1;
    OUTLINED_FUNCTION_106_1();
    sub_242C49094();
    v15 = v17;
    v16 = v18;
    v10 = sub_242C490C4();
    sub_242A96C08((uint64_t)&v19, (uint64_t)&v15, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), 0, 0, v11, *((uint64_t *)&v11 + 1), v10);
    OUTLINED_FUNCTION_84_2(v9, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    memcpy(v5, v14, 0x88uLL);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  OUTLINED_FUNCTION_0_9();
}

void TransposedConv2D.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_18_1();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572226B0);
  v3 = OUTLINED_FUNCTION_130_1(v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_20_8();
  sub_242A9804C();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_118_0();
  OUTLINED_FUNCTION_75_2();
  if (v0)
  {
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  }
  else
  {
    OUTLINED_FUNCTION_165_0();
    if (v7)
    {
      if (v5)
        v8 = 256;
      else
        v8 = 0;
      v9 = v8 | v6;
      OUTLINED_FUNCTION_39_0();
    }
    else
    {
      v9 = 0;
    }
    OUTLINED_FUNCTION_98_1();
    OUTLINED_FUNCTION_74_2();
    if (v9)
    {
      swift_release();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_160_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257222658);
      sub_242A97F3C(&qword_257222670, MEMORY[0x24BEE40D8]);
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_59_2();
    }
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  }
  OUTLINED_FUNCTION_139_1(v4);
  OUTLINED_FUNCTION_0_9();
}

void sub_242A97E24()
{
  TransposedConv2D.init(from:)();
}

void sub_242A97E38()
{
  TransposedConv2D.encode(to:)();
}

unint64_t sub_242A97E4C()
{
  unint64_t result;

  result = qword_257222620;
  if (!qword_257222620)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4F01C, &type metadata for Conv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222620);
  }
  return result;
}

unint64_t sub_242A97E88()
{
  unint64_t result;

  result = qword_257222628;
  if (!qword_257222628)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Parameter, &type metadata for Parameter);
    atomic_store(result, (unint64_t *)&qword_257222628);
  }
  return result;
}

unint64_t sub_242A97EC4()
{
  unint64_t result;

  result = qword_257222638;
  if (!qword_257222638)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Parameter, &type metadata for Parameter);
    atomic_store(result, (unint64_t *)&qword_257222638);
  }
  return result;
}

unint64_t sub_242A97F00()
{
  unint64_t result;

  result = qword_257222650;
  if (!qword_257222650)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EFCC, &type metadata for Conv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222650);
  }
  return result;
}

uint64_t sub_242A97F3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257222658);
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_242A97F80()
{
  unint64_t result;

  result = qword_257222688;
  if (!qword_257222688)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EF7C, &type metadata for TransposedConv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222688);
  }
  return result;
}

uint64_t sub_242A97FBC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_242A98004(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_242A9804C()
{
  unint64_t result;

  result = qword_2572226A8;
  if (!qword_2572226A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EF2C, &type metadata for TransposedConv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572226A8);
  }
  return result;
}

void sub_242A98088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_242A9504C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))Conv1D.weight.getter, a5, a6, a7, a8);
}

void sub_242A980A4()
{
  sub_242A95070();
}

void sub_242A980C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_242A9504C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))Conv1D.bias.getter, a5, a6, a7, a8);
}

void sub_242A980DC()
{
  sub_242A95070();
}

void sub_242A98108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_242A9504C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))TransposedConv1D.weight.getter, a5, a6, a7, a8);
}

void sub_242A98124()
{
  sub_242A95070();
}

void sub_242A98140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_242A9504C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))TransposedConv1D.bias.getter, a5, a6, a7, a8);
}

void sub_242A9815C()
{
  sub_242A95070();
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void type metadata accessor for Conv1D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t destroy for Conv2D()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Conv2D(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v3 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Conv2D(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy120_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for Conv2D(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Conv2D(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Conv2D(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Conv2D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t _s14NeuralNetworks6Conv1DVwxx_0()
{
  swift_release();
  swift_release();
  return swift_release();
}

void _s14NeuralNetworks6Conv1DVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  v2 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v2;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_9();
}

void _s14NeuralNetworks6Conv1DVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_137_1();
  a1[2] = a2[2];
  swift_retain();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_105_1();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_retain();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_9();
}

uint64_t _s14NeuralNetworks6Conv1DVwta_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  OUTLINED_FUNCTION_137_1();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  OUTLINED_FUNCTION_105_1();
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyTensorFunction.Key(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyTensorFunction.Key(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TransposedConv1D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t destroy for TransposedConv2D()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TransposedConv2D(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TransposedConv2D(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for TransposedConv2D(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransposedConv2D(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransposedConv2D(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TransposedConv2D()
{
  OUTLINED_FUNCTION_22_4();
}

ValueMetadata *type metadata accessor for TransposedConv2D.CodingKeys()
{
  return &type metadata for TransposedConv2D.CodingKeys;
}

ValueMetadata *type metadata accessor for TransposedConv1D.CodingKeys()
{
  return &type metadata for TransposedConv1D.CodingKeys;
}

ValueMetadata *type metadata accessor for Conv2D.CodingKeys()
{
  return &type metadata for Conv2D.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LSTM.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s14NeuralNetworks16TransposedConv2DV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_242A98B0C + 4 * byte_242C4E7E1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_242A98B40 + 4 * byte_242C4E7DC[v4]))();
}

uint64_t sub_242A98B40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A98B48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242A98B50);
  return result;
}

uint64_t sub_242A98B5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242A98B64);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_242A98B68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242A98B70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Conv1D.CodingKeys()
{
  return &type metadata for Conv1D.CodingKeys;
}

unint64_t sub_242A98B90()
{
  unint64_t result;

  result = qword_257222818;
  if (!qword_257222818)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EC34, &type metadata for Conv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222818);
  }
  return result;
}

unint64_t sub_242A98BD0()
{
  unint64_t result;

  result = qword_257222820;
  if (!qword_257222820)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4ED24, &type metadata for Conv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222820);
  }
  return result;
}

unint64_t sub_242A98C10()
{
  unint64_t result;

  result = qword_257222828;
  if (!qword_257222828)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EE14, &type metadata for TransposedConv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222828);
  }
  return result;
}

unint64_t sub_242A98C50()
{
  unint64_t result;

  result = qword_257222830;
  if (!qword_257222830)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EF04, &type metadata for TransposedConv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222830);
  }
  return result;
}

unint64_t sub_242A98C90()
{
  unint64_t result;

  result = qword_257222838;
  if (!qword_257222838)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EE3C, &type metadata for TransposedConv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222838);
  }
  return result;
}

unint64_t sub_242A98CD0()
{
  unint64_t result;

  result = qword_257222840;
  if (!qword_257222840)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EE64, &type metadata for TransposedConv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222840);
  }
  return result;
}

unint64_t sub_242A98D10()
{
  unint64_t result;

  result = qword_257222848;
  if (!qword_257222848)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4ED4C, &type metadata for TransposedConv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222848);
  }
  return result;
}

unint64_t sub_242A98D50()
{
  unint64_t result;

  result = qword_257222850;
  if (!qword_257222850)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4ED74, &type metadata for TransposedConv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222850);
  }
  return result;
}

unint64_t sub_242A98D90()
{
  unint64_t result;

  result = qword_257222858;
  if (!qword_257222858)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EC5C, &type metadata for Conv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222858);
  }
  return result;
}

unint64_t sub_242A98DD0()
{
  unint64_t result;

  result = qword_257222860;
  if (!qword_257222860)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EC84, &type metadata for Conv2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222860);
  }
  return result;
}

unint64_t sub_242A98E10()
{
  unint64_t result;

  result = qword_257222868;
  if (!qword_257222868)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EB6C, &type metadata for Conv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222868);
  }
  return result;
}

unint64_t sub_242A98E50()
{
  unint64_t result;

  result = qword_257222870;
  if (!qword_257222870)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4EB94, &type metadata for Conv1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222870);
  }
  return result;
}

void OUTLINED_FUNCTION_4_18()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_9_13()
{
  return sub_242C49184();
}

void OUTLINED_FUNCTION_12_9()
{
  sub_242A785DC(0);
}

uint64_t OUTLINED_FUNCTION_14_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  LOWORD(a10) = *(_WORD *)(a1 + 8);
  return a4(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)a1, a10, *(_QWORD *)(a1 + 16));
}

void OUTLINED_FUNCTION_15_7()
{
  sub_242A785DC(0);
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return sub_242A7028C();
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_18_8@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_19_7@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 152);
}

_QWORD *OUTLINED_FUNCTION_20_8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  __int128 v4;

  *(_QWORD *)(v2 - 120) = *(_QWORD *)(v0 + 16);
  *(_DWORD *)(v2 - 72) = *(unsigned __int8 *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 26);
  *(_DWORD *)(v2 - 128) = *(unsigned __int8 *)(v0 + 25);
  *(_DWORD *)(v2 - 124) = v3;
  v4 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v2 - 176) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v2 - 160) = v4;
  *(_OWORD *)(v2 - 192) = *(_OWORD *)(v0 + 88);
  *(_QWORD *)(v2 - 136) = *(_QWORD *)(v0 + 104);
  return __swift_project_boxed_opaque_existential_1(v1, v1[3]);
}

uint64_t OUTLINED_FUNCTION_22_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_23_8()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_27_5@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_28_8()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_31_7(uint64_t a1)
{
  uint64_t *v1;

  *v1 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  return sub_242A7028C();
}

uint64_t OUTLINED_FUNCTION_32_6@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 241) = a1;
  return sub_242C490C4();
}

void OUTLINED_FUNCTION_35_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)v21 = v24;
  *(_BYTE *)(v21 + 8) = a16;
  *(_BYTE *)(v21 + 9) = a14;
  *(_QWORD *)(v21 + 16) = v18;
  *(_BYTE *)(v21 + 24) = a12;
  *(_BYTE *)(v21 + 25) = v19;
  *(_BYTE *)(v21 + 26) = v22;
  *(_QWORD *)(v21 + 32) = v23;
  *(_QWORD *)(v21 + 40) = v20;
  *(_QWORD *)(v21 + 48) = a17;
  *(_QWORD *)(v21 + 56) = a18;
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_37_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  unsigned __int8 v8;
  va_list va;

  va_start(va, a8);
  sub_242A78538((uint64_t *)va, (unint64_t)v8 << 32);
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_41_5()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 5;
  return sub_242C49178();
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void OUTLINED_FUNCTION_63_3(unint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  unsigned __int8 v3;
  unsigned __int8 v4;
  unint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  __n128 *v9;

  v9->n128_u64[0] = a1;
  v9->n128_u8[8] = v3;
  v9->n128_u8[9] = v4;
  v9[1].n128_u64[0] = v5;
  v9[1].n128_u8[8] = v6;
  v9[1].n128_u8[9] = v7;
  v9[1].n128_u8[10] = v8;
  v9[2] = a2;
  v9[3] = a3;
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_66_3(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = *a1;
  return Parameter.wrappedValue.setter(&a10);
}

uint64_t OUTLINED_FUNCTION_72_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a12 = a1;
  return Parameter.wrappedValue.setter(&a12);
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return sub_242C49178();
}

uint64_t OUTLINED_FUNCTION_74_2()
{
  return sub_242C4913C();
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return sub_242C49478();
}

uint64_t OUTLINED_FUNCTION_84_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_87_1()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_89_1@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 152);
}

unint64_t OUTLINED_FUNCTION_92_1@<X0>(uint64_t a1@<X8>)
{
  return a1 | 0xD000000000000019;
}

void OUTLINED_FUNCTION_98_1()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_WORD *)(v2 - 88) = v0;
  *(_BYTE *)(v2 - 65) = 1;
}

uint64_t OUTLINED_FUNCTION_99_1@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = result & 0x7FFFFFFFFFFFFFFFLL;
  return result;
}

void OUTLINED_FUNCTION_101_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  unsigned __int8 v12;
  va_list va;

  va_start(va, a12);
  sub_242A78538((uint64_t *)va, (unint64_t)v12 << 32);
}

void OUTLINED_FUNCTION_102(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  unsigned __int8 v10;
  va_list va;

  va_start(va, a10);
  sub_242A78538((uint64_t *)va, (unint64_t)v10 << 32);
}

void OUTLINED_FUNCTION_105_1()
{
  _BYTE *v0;
  _BYTE *v1;

  v1[24] = v0[24];
  v1[25] = v0[25];
  v1[26] = v0[26];
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  return sub_242C49448();
}

void OUTLINED_FUNCTION_112_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)v2 = v1;
  *(_WORD *)(v2 + 8) = 256;
  *(_QWORD *)(v2 + 16) = v0;
  *(_WORD *)(v2 + 24) = 256;
  *(_BYTE *)(v2 + 26) = v3;
}

uint64_t OUTLINED_FUNCTION_113_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_115_1()
{
  return swift_retain();
}

unint64_t OUTLINED_FUNCTION_118_0()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 96) = v2;
  *(_BYTE *)(v3 - 88) = v0;
  *(_BYTE *)(v3 - 87) = v1;
  *(_BYTE *)(v3 - 65) = 0;
  return sub_242A97EC4();
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  return sub_242C491CC();
}

void *OUTLINED_FUNCTION_120_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

void OUTLINED_FUNCTION_121_0()
{
  sub_242A78630();
}

void OUTLINED_FUNCTION_122_1()
{
  sub_242A78630();
}

__n128 OUTLINED_FUNCTION_125_1()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 40);
}

uint64_t OUTLINED_FUNCTION_130_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_135_1()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_137_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *(_BYTE *)(v0 + 8);
  *(_BYTE *)(v1 + 9) = *(_BYTE *)(v0 + 9);
}

uint64_t OUTLINED_FUNCTION_138_1()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_139_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_150_1(uint64_t result)
{
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_151_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_153_1()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_155_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_156_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a2 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_158_1(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
}

uint64_t OUTLINED_FUNCTION_159_1()
{
  return swift_retain();
}

__n128 OUTLINED_FUNCTION_160_1()
{
  uint64_t v0;
  __n128 result;

  result = *(__n128 *)(v0 - 160);
  *(__n128 *)(v0 - 96) = result;
  *(_BYTE *)(v0 - 65) = 2;
  return result;
}

void OUTLINED_FUNCTION_163_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v1 + 8) = 256;
  *(_QWORD *)(v1 + 16) = v0;
  *(_WORD *)(v1 + 24) = 256;
}

uint64_t OUTLINED_FUNCTION_168()
{
  uint64_t v0;

  return v0 - 96;
}

void sub_242A99910()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_5_19((uint64_t)v1);
  v2 = (_QWORD *)OUTLINED_FUNCTION_30_6();
  *(_QWORD *)(v0 + 40) = sub_242A9BD24(v2, v3, v4);
  OUTLINED_FUNCTION_7_0();
}

void sub_242A9994C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_5_19((uint64_t)v1);
  v2 = (_QWORD *)OUTLINED_FUNCTION_30_6();
  *(_QWORD *)(v0 + 40) = sub_242A9BDB8(v2, v3, v4);
  OUTLINED_FUNCTION_7_0();
}

void (*sub_242A99984(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1)
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_242A9BE48(v8, a2, a3, a4);
  return sub_242A999E8;
}

void sub_242A999E8(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  OUTLINED_FUNCTION_29_5(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 32));
  OUTLINED_FUNCTION_0_24(v1);
}

void sub_242A99A10()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_5_19((uint64_t)v1);
  v2 = (_QWORD *)OUTLINED_FUNCTION_30_6();
  *(_QWORD *)(v0 + 40) = sub_242A9BF10(v2, v3, v4);
  OUTLINED_FUNCTION_7_0();
}

void sub_242A99A48(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  OUTLINED_FUNCTION_29_5(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 40));
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_0_24(v1);
}

uint64_t sub_242A99A74(SEL *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD v22[5];

  OUTLINED_FUNCTION_0_3();
  sub_242A9BCEC(*(_QWORD *)(v1 + 24), v22);
  v21 = v22[3];
  v4 = v22[4];
  v19 = v22[1];
  v20 = (unint64_t)(v22[2] + 64) >> 6;
  result = OUTLINED_FUNCTION_39();
  v6 = 0;
  while (1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_41_6();
    }
    else
    {
      v7 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_45;
      if (v7 >= v20)
        goto LABEL_42;
      v8 = *(_QWORD *)(v19 + 8 * v7);
      v9 = v21 + 1;
      if (!v8)
      {
        OUTLINED_FUNCTION_39_5();
        if (v10 == v11)
          goto LABEL_42;
        OUTLINED_FUNCTION_37_6();
        if (!v8)
        {
          OUTLINED_FUNCTION_39_5();
          if (v10 == v11)
            goto LABEL_42;
          OUTLINED_FUNCTION_37_6();
          if (!v8)
          {
            OUTLINED_FUNCTION_39_5();
            if (v10 == v11)
              goto LABEL_42;
            OUTLINED_FUNCTION_37_6();
            if (!v8)
            {
              OUTLINED_FUNCTION_39_5();
              if (v10 == v11)
                goto LABEL_42;
              OUTLINED_FUNCTION_37_6();
              if (!v8)
              {
                OUTLINED_FUNCTION_36_7();
                if (v10 == v11)
                  goto LABEL_42;
                v8 = *(_QWORD *)(v19 + 8 * v9);
                if (!v8)
                {
                  while (1)
                  {
                    OUTLINED_FUNCTION_36_7();
                    if (v10 == v11)
                      goto LABEL_42;
                    v8 = *(_QWORD *)(v19 + 8 * v12);
                    v13 = v12 + 1;
                    if (v8)
                    {
                      v9 = v13 - 1;
                      break;
                    }
                  }
                }
              }
            }
          }
        }
      }
      v4 = (v8 - 1) & v8;
      v21 = v9;
    }
    OUTLINED_FUNCTION_61_3();
    if ((v2 & 0x8000000000000000) == 0 && (v2 & 0x4000000000000000) == 0)
    {
      v14 = *(_QWORD *)(v2 + 16);
      result = OUTLINED_FUNCTION_12_10();
      if (v14)
        break;
      goto LABEL_38;
    }
    OUTLINED_FUNCTION_12_10();
    result = sub_242C48FC8();
    v14 = result;
    if (result)
      break;
LABEL_38:
    v16 = 0;
LABEL_39:
    result = OUTLINED_FUNCTION_56_2();
    v11 = __OFADD__(v6, v16);
    v6 += v16;
    if (v11)
    {
      __break(1u);
LABEL_42:
      swift_bridgeObjectRelease();
      swift_release();
      return v6;
    }
  }
  if (v14 >= 1)
  {
    v15 = 0;
    v16 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_60_1();
      v17 = *(_QWORD *)(v2 + 8 * v15 + 32);
      swift_retain();
      v18 = objc_msgSend(*(id *)(v17 + 16), *a1);
      result = swift_release();
      v11 = __OFADD__(v16, v18);
      v16 += (uint64_t)v18;
      if (v11)
        break;
      if (v14 == ++v15)
        goto LABEL_39;
    }
    __break(1u);
  }
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_242A99CAC()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  _QWORD v19[5];

  OUTLINED_FUNCTION_0_3();
  sub_242A9BCEC(*(_QWORD *)(v0 + 24), v19);
  v17 = v19[1];
  v2 = v19[3];
  v3 = v19[4];
  v18 = (unint64_t)(v19[2] + 64) >> 6;
  result = OUTLINED_FUNCTION_39();
  v5 = 0;
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
    }
    else
    {
      v6 = v2 + 1;
      if (__OFADD__(v2, 1))
        goto LABEL_44;
      if (v6 >= v18)
        goto LABEL_41;
      v7 = *(_QWORD *)(v17 + 8 * v6);
      v8 = v2 + 1;
      if (!v7)
      {
        OUTLINED_FUNCTION_38_5();
        if (v9 == v10)
          goto LABEL_41;
        OUTLINED_FUNCTION_46_3();
        if (!v7)
        {
          OUTLINED_FUNCTION_38_5();
          if (v9 == v10)
            goto LABEL_41;
          OUTLINED_FUNCTION_46_3();
          if (!v7)
          {
            OUTLINED_FUNCTION_38_5();
            if (v9 == v10)
              goto LABEL_41;
            OUTLINED_FUNCTION_46_3();
            if (!v7)
            {
              OUTLINED_FUNCTION_38_5();
              if (v9 == v10)
                goto LABEL_41;
              OUTLINED_FUNCTION_46_3();
              if (!v7)
              {
                v8 = v11 + 5;
                if (v11 + 5 >= v18)
                  goto LABEL_41;
                v7 = *(_QWORD *)(v17 + 8 * v8);
                if (!v7)
                {
                  v12 = v2 + 7;
                  while (v12 < v18)
                  {
                    v7 = *(_QWORD *)(v17 + 8 * v12++);
                    if (v7)
                    {
                      v8 = v12 - 1;
                      goto LABEL_25;
                    }
                  }
                  goto LABEL_41;
                }
              }
            }
          }
        }
      }
LABEL_25:
      v3 = (v7 - 1) & v7;
      v2 = v8;
    }
    OUTLINED_FUNCTION_61_3();
    if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
    {
      v13 = *(_QWORD *)(v1 + 16);
      result = OUTLINED_FUNCTION_12_10();
      if (v13)
        break;
      goto LABEL_37;
    }
    OUTLINED_FUNCTION_12_10();
    result = sub_242C48FC8();
    v13 = result;
    if (result)
      break;
LABEL_37:
    v15 = 0;
LABEL_38:
    result = OUTLINED_FUNCTION_56_2();
    v10 = __OFADD__(v5, v15);
    v5 += v15;
    if (v10)
    {
      __break(1u);
LABEL_41:
      swift_bridgeObjectRelease();
      swift_release();
      return v5;
    }
  }
  if (v13 >= 1)
  {
    v14 = 0;
    v15 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_60_1();
      OUTLINED_FUNCTION_43_5();
      v16 = sub_242C44484();
      result = OUTLINED_FUNCTION_135();
      v10 = __OFADD__(v15, v16);
      v15 += v16;
      if (v10)
        break;
      if (v13 == ++v14)
        goto LABEL_38;
    }
    __break(1u);
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_242A99ED0()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;
  char v4;

  if ((*(_BYTE *)(v0 + 41) & 1) == 0)
    return *(_QWORD *)(v0 + 32);
  v1 = MEMORY[0x2494EDB18]();
  v2 = v1 < 1;
  if (v1 >= 1)
    result = v1 - 0x10000000;
  else
    result = 0;
  *(_QWORD *)(v0 + 32) = result;
  v4 = v2;
  *(_BYTE *)(v0 + 40) = v4;
  *(_BYTE *)(v0 + 41) = 0;
  return result;
}

uint64_t sub_242A99F1C()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;
  char v4;

  if ((*(_BYTE *)(v0 + 57) & 1) == 0)
    return *(_QWORD *)(v0 + 48);
  v1 = MEMORY[0x2494EDB18]();
  v2 = v1 < 1;
  result = v1 & ~(v1 >> 63);
  *(_QWORD *)(v0 + 48) = result;
  v4 = v2;
  *(_BYTE *)(v0 + 56) = v4;
  *(_BYTE *)(v0 + 57) = 0;
  return result;
}

void sub_242A99F60(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 256;
  *(_QWORD *)(v1 + 48) = 0;
  *(_WORD *)(v1 + 56) = 256;
  *(_QWORD *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222948);
  sub_242A9CB40();
  *(_QWORD *)(v1 + 24) = sub_242C480BC();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A99FC4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242A99FE8()
{
  sub_242A99FC4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSAllocator()
{
  return objc_opt_self();
}

id sub_242A9A028(NSUInteger a1, int a2)
{
  uint64_t v2;
  int64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t i;
  uint64_t v24;
  char v25;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t j;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  _QWORD *v60;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  unint64_t v113;
  char v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  unint64_t v167;
  _QWORD *v168;
  unint64_t v169;
  _QWORD v170[12];

  v148 = a1;
  v4 = NSRoundUpToMultipleOfPageSize(a1);
  v159 = v2;
  v5 = *(void **)(v2 + 16);
  if (v4 >= (uint64_t)OUTLINED_FUNCTION_47_2(v4, sel_maxBufferLength))
    goto LABEL_143;
  v155 = v4;
  v6 = sub_242C443EC(v4, (char)objc_msgSend(v5, sel_hasUnifiedMemory));
  v7 = v6;
  v161 = v8;
  HIDWORD(v147) = a2;
  v9 = 3;
  if ((a2 & 0xFE) == 0)
    v9 = 0;
  v156 = v6;
  v158 = v9;
  if (v6 > 0x800000)
  {
    v10 = sub_242A99ED0();
    v9 = v158;
    if ((v11 & 1) == 0)
    {
      v12 = v10;
      v13 = OUTLINED_FUNCTION_47_2(v10, sel_currentAllocatedSize);
      v9 = v158;
      if ((uint64_t)v13 >= v12)
      {
        v141 = (uint64_t)v5;
        v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v157 = v2 + 24;
        OUTLINED_FUNCTION_0_3();
        v15 = *(_QWORD *)(v2 + 24);
        v145 = v15 + 64;
        OUTLINED_FUNCTION_23_9();
        v18 = v17 & v16;
        v146 = (unint64_t)(v19 + 63) >> 6;
        OUTLINED_FUNCTION_39();
        v20 = 0;
        v144 = v15;
        if (!v18)
          goto LABEL_9;
LABEL_8:
        OUTLINED_FUNCTION_41_6();
        v162 = v18;
        v163 = v21;
        for (i = v22 | (v21 << 6); ; i = __clz(__rbit64(v27)) + (v28 << 6))
        {
          v31 = *(_QWORD *)(v15 + 48) + 24 * i;
          v32 = *(_QWORD *)v31;
          v33 = *(unsigned __int8 *)(v31 + 8);
          v34 = *(_QWORD *)(v31 + 16);
          OUTLINED_FUNCTION_0_3();
          v35 = *(_QWORD *)v157;
          if (!*(_QWORD *)(*(_QWORD *)v157 + 16) || (v36 = sub_242A61490(v32, v33, v34), (v37 & 1) == 0))
          {
            OUTLINED_FUNCTION_15_8();
            goto LABEL_93;
          }
          v150 = v34;
          HIDWORD(v151) = v33;
          v38 = *(_QWORD *)(v35 + 56) + 24 * v36;
          v39 = *(_QWORD *)v38;
          v153 = v32;
          v154 = *(_QWORD *)(v38 + 16);
          OUTLINED_FUNCTION_15_8();
          v169 = (unint64_t)v14;
          if ((v39 & 0x8000000000000000) != 0 || (v39 & 0x4000000000000000) != 0)
          {
            OUTLINED_FUNCTION_59_3();
            swift_retain();
            v40 = sub_242C48FC8();
            if (v40)
            {
LABEL_42:
              if (v40 < 1)
                goto LABEL_137;
              for (j = 0; j != v40; ++j)
              {
                if ((v39 & 0xC000000000000001) != 0)
                {
                  v42 = MEMORY[0x2494EC84C](j, v39);
                }
                else
                {
                  v42 = *(_QWORD *)(v39 + 8 * j + 32);
                  OUTLINED_FUNCTION_11();
                }
                if (objc_msgSend(*(id *)(v42 + 16), sel_usedSize, v141) || !sub_242C444D0())
                {
                  v43 = OUTLINED_FUNCTION_11();
                  MEMORY[0x2494EC0CC](v43);
                  if (*(_QWORD *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v169 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_242C485A8();
                  sub_242C485F0();
                  sub_242C4856C();
                }
                OUTLINED_FUNCTION_17_1();
              }
              OUTLINED_FUNCTION_50_0();
              v44 = v169;
              v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
              goto LABEL_57;
            }
          }
          else
          {
            v40 = *(_QWORD *)(v39 + 16);
            OUTLINED_FUNCTION_59_3();
            swift_retain();
            if (v40)
              goto LABEL_42;
          }
          OUTLINED_FUNCTION_50_0();
          v44 = (unint64_t)v14;
LABEL_57:
          v170[0] = v14;
          if (v44 >> 62)
          {
            sub_242C480E0();
            v45 = sub_242C48FC8();
            if (v45)
            {
LABEL_59:
              if (v45 < 1)
                goto LABEL_138;
              v46 = v44;
              v47 = 0;
              v166 = (_QWORD *)v39;
              v167 = v46 & 0xC000000000000001;
              v164 = v46;
              v165 = v45;
              while (1)
              {
                if (v167)
                  MEMORY[0x2494EC84C](v47, v164);
                else
                  OUTLINED_FUNCTION_11_6();
                OUTLINED_FUNCTION_11_6();
                sub_242C48D4C();
                sub_242C48D88();
                sub_242C48D94();
                sub_242C48D64();
                v48 = v170[0];
                v49 = *(_QWORD *)(v170[0] + 16);
                if (!v49)
                  goto LABEL_131;
                v50 = v49 - 1;
                v51 = *(_QWORD *)(v170[0] + 32 + 8 * (v49 - 1));
                if (v49 == 1)
                {
                  OUTLINED_FUNCTION_11();
LABEL_67:
                  v52 = 0;
                }
                else
                {
                  v53 = (uint64_t)(v49 - 2) / 2;
                  if (v53 >= v49)
                    goto LABEL_133;
                  v54 = *(_QWORD *)(v170[0] + 32 + 8 * v53);
                  OUTLINED_FUNCTION_11();
                  v55 = sub_242C44484();
                  v56 = v54;
                  v52 = v50;
                  if (sub_242C44484() < v55)
                  {
                    while ((unint64_t)v53 < *(_QWORD *)(v48 + 16))
                    {
                      v52 = v53;
                      OUTLINED_FUNCTION_43_5();
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        sub_242BEDCA0();
                      if (v50 >= *(_QWORD *)(v48 + 16))
                        goto LABEL_129;
                      swift_release();
                      *(_QWORD *)(v48 + 8 * v50 + 32) = v56;
                      sub_242C48D64();
                      v48 = v170[0];
                      v57 = v53 - 1;
                      if (v53 < 1)
                        goto LABEL_67;
                      v53 = v57 >> 1;
                      if (v57 >> 1 >= *(_QWORD *)(v170[0] + 16))
                        goto LABEL_130;
                      v58 = *(_QWORD *)(v170[0] + 8 * v53 + 32);
                      v59 = sub_242C44484();
                      v56 = v58;
                      v50 = v52;
                      if (sub_242C44484() >= v59)
                        goto LABEL_77;
                    }
                    __break(1u);
LABEL_129:
                    __break(1u);
LABEL_130:
                    __break(1u);
LABEL_131:
                    __break(1u);
LABEL_132:
                    __break(1u);
LABEL_133:
                    __break(1u);
LABEL_134:
                    __break(1u);
LABEL_135:
                    __break(1u);
LABEL_136:
                    __break(1u);
LABEL_137:
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    OUTLINED_FUNCTION_19_9();
                    OUTLINED_FUNCTION_9_14();
                    __swift_instantiateConcreteTypeFromMangledName(&qword_257228140);
                    OUTLINED_FUNCTION_51_4();
                    v140 = OUTLINED_FUNCTION_8_8();
                    OUTLINED_FUNCTION_47_2(v140, sel_maxBufferLength);
                    sub_242C491CC();
                    OUTLINED_FUNCTION_25_5();
                    OUTLINED_FUNCTION_4_0();
                    OUTLINED_FUNCTION_34_6();
                    OUTLINED_FUNCTION_14_8();
                    OUTLINED_FUNCTION_17_9();
LABEL_147:
                    sub_242A59170();
                  }
                }
LABEL_77:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  sub_242BEDCA0();
                if (v52 >= *(_QWORD *)(v48 + 16))
                  goto LABEL_132;
                ++v47;
                OUTLINED_FUNCTION_11();
                OUTLINED_FUNCTION_135();
                *(_QWORD *)(v48 + 8 * v52 + 32) = v51;
                sub_242C48D64();
                swift_release();
                OUTLINED_FUNCTION_17_1();
                v39 = (unint64_t)v166;
                if (v47 == v165)
                {
                  swift_bridgeObjectRelease_n();
                  v60 = (_QWORD *)v170[0];
                  goto LABEL_84;
                }
              }
            }
          }
          else
          {
            v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
            OUTLINED_FUNCTION_28_1();
            if (v45)
              goto LABEL_59;
          }
          swift_bridgeObjectRelease_n();
          v60 = v14;
LABEL_84:
          OUTLINED_FUNCTION_0_3();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v168 = *(_QWORD **)v157;
          *(_QWORD *)v157 = 0x8000000000000000;
          v69 = OUTLINED_FUNCTION_26_6(isUniquelyReferenced_nonNull_native, v62, v63, v64, v65, v66, v67, v68, v141, v144, v145, v146, v147, v148, v150, v151, HIDWORD(v151), v153);
          if (__OFADD__(v168[2], (v70 & 1) == 0))
            goto LABEL_136;
          v71 = v69;
          v72 = v70;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257222940);
          v73 = sub_242C48EF0();
          if ((v73 & 1) != 0)
          {
            v81 = OUTLINED_FUNCTION_26_6(v73, v74, v75, v76, v77, v78, v79, v80, v141, v144, v145, v146, v147, v148, v149, v151, HIDWORD(v151), v152);
            if ((v72 & 1) != (v82 & 1))
              goto LABEL_145;
            v71 = v81;
          }
          if ((v72 & 1) != 0)
          {
            v83 = (_QWORD *)(v168[7] + 24 * v71);
            swift_release();
            OUTLINED_FUNCTION_8_1();
            *v83 = v60;
            v83[1] = sub_242A9ADD4;
            v83[2] = 0;
          }
          else
          {
            v168[(v71 >> 6) + 8] |= 1 << v71;
            v84 = v168[6] + 24 * v71;
            *(_QWORD *)v84 = v152;
            *(_BYTE *)(v84 + 8) = BYTE4(v151);
            *(_QWORD *)(v84 + 16) = v149;
            v85 = (_QWORD *)(v168[7] + 24 * v71);
            *v85 = v60;
            v85[1] = sub_242A9ADD4;
            v85[2] = 0;
            v86 = v168[2];
            v26 = __OFADD__(v86, 1);
            v87 = v86 + 1;
            if (v26)
              goto LABEL_140;
            v168[2] = v87;
          }
          *(_QWORD *)v157 = v168;
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_15_8();
          swift_release();
          OUTLINED_FUNCTION_50_0();
          v7 = v156;
          v15 = v144;
          v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_93:
          v18 = v162;
          v20 = v163;
          if (v162)
            goto LABEL_8;
LABEL_9:
          if (__OFADD__(v20, 1))
            goto LABEL_134;
          OUTLINED_FUNCTION_36_7();
          if (v25 == v26)
          {
LABEL_95:
            OUTLINED_FUNCTION_8_1();
            OUTLINED_FUNCTION_4_0();
            v9 = v158;
            v5 = (void *)v141;
            break;
          }
          v27 = *(_QWORD *)(v145 + 8 * v24);
          v28 = v24;
          if (!v27)
          {
            OUTLINED_FUNCTION_20_9();
            if (v25 == v26)
              goto LABEL_95;
            OUTLINED_FUNCTION_18_9();
            if (!v27)
            {
              OUTLINED_FUNCTION_20_9();
              if (v25 == v26)
                goto LABEL_95;
              OUTLINED_FUNCTION_18_9();
              if (!v27)
              {
                OUTLINED_FUNCTION_20_9();
                if (v25 == v26)
                  goto LABEL_95;
                OUTLINED_FUNCTION_18_9();
                if (!v27)
                {
                  OUTLINED_FUNCTION_20_9();
                  if (v25 == v26)
                    goto LABEL_95;
                  OUTLINED_FUNCTION_18_9();
                  if (!v27)
                  {
                    OUTLINED_FUNCTION_20_9();
                    if (v25 == v26)
                      goto LABEL_95;
                    OUTLINED_FUNCTION_18_9();
                    if (!v27)
                    {
                      OUTLINED_FUNCTION_36_7();
                      if (v25 == v26)
                        goto LABEL_95;
                      v27 = *(_QWORD *)(v145 + 8 * v29);
                      if (!v27)
                      {
                        while (!__OFADD__(v29, 1))
                        {
                          OUTLINED_FUNCTION_20_9();
                          if (v25 == v26)
                            goto LABEL_95;
                          OUTLINED_FUNCTION_18_9();
                          v29 = v30 + 1;
                          if (v27)
                            goto LABEL_36;
                        }
                        goto LABEL_142;
                      }
                      v28 = v29;
                    }
                  }
                }
              }
            }
          }
LABEL_36:
          v162 = (v27 - 1) & v27;
          v163 = v28;
        }
      }
    }
  }
  v88 = v9;
  v39 = (unint64_t)v5;
  objc_msgSend(v5, sel_heapBufferSizeAndAlignWithLength_options_, v155, sub_242C2EB38(v9));
  v90 = v89;
  OUTLINED_FUNCTION_0_3();
  sub_242A9E764(v7, v161 & 1, v88, *(_QWORD *)(v159 + 24));
  if (!v91)
  {
    OUTLINED_FUNCTION_15_8();
    goto LABEL_113;
  }
  v92 = v91;
  OUTLINED_FUNCTION_15_8();
  v93 = sub_242A9B774(v92);
  swift_release();
  swift_release();
  if (v93)
  {
    if ((uint64_t)objc_msgSend(*(id *)(v93 + 16), sel_maxAvailableSizeWithAlignment_, v90) >= v155)
    {
      OUTLINED_FUNCTION_0_3();
      sub_242A99984(v170, v7, v161 & 1, v158);
      if (*v94)
      {
        v95 = sub_242A9AFD8();
        OUTLINED_FUNCTION_40_3();
        swift_endAccess();
        OUTLINED_FUNCTION_8_1();
        if (v95)
        {
          if ((v147 & 0xFE00000000) != 0)
            v96 = 48;
          else
            v96 = 0;
          v97 = objc_msgSend(*(id *)(v95 + 16), sel_newBufferWithLength_options_, v148, v96, v141);
          OUTLINED_FUNCTION_0_3();
          swift_isUniquelyReferenced_nonNull_native();
          v98 = OUTLINED_FUNCTION_10_12();
          sub_242A61490(v98, v99, v158);
          OUTLINED_FUNCTION_44_3();
          if (v26)
            goto LABEL_141;
          v102 = v100;
          v103 = v101;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257222940);
          v104 = OUTLINED_FUNCTION_21_8();
          v112 = (_QWORD *)v169;
          if ((v104 & 1) == 0)
          {
LABEL_108:
            OUTLINED_FUNCTION_50_4();
            OUTLINED_FUNCTION_49_3();
            if ((v103 & 1) == 0)
            {
              v115 = v161 & 1;
              v116 = MEMORY[0x24BEE4AF8];
LABEL_126:
              sub_242B8E54C(v102, v156, v115, v158, v116, (uint64_t)sub_242A9ADD4, 0, v112);
              goto LABEL_127;
            }
            goto LABEL_127;
          }
          v113 = OUTLINED_FUNCTION_24_6(v104, v105, v106, v107, v108, v109, v110, v111, v142, v144, v145, v146, v147, v148, v149, v151, v152, v154, v155,
                   v156,
                   v157,
                   v158,
                   v159,
                   v160,
                   v161);
          if ((v103 & 1) == (v114 & 1))
          {
            v102 = v113;
            goto LABEL_108;
          }
          goto LABEL_145;
        }
        goto LABEL_113;
      }
      OUTLINED_FUNCTION_40_3();
      swift_endAccess();
    }
    OUTLINED_FUNCTION_8_1();
  }
LABEL_113:
  v117 = sub_242A99F1C();
  if ((v118 & 1) == 0)
  {
    v119 = v117;
    v120 = sub_242A99A74((SEL *)&selRef_size);
    if (__OFADD__(v120, v7))
      goto LABEL_139;
    if (v120 + v7 >= v119)
      goto LABEL_146;
  }
  v121 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD5F0]), sel_init);
  objc_msgSend(v121, sel_setType_, 0);
  objc_msgSend(v121, sel_setCpuCacheMode_, 0);
  objc_msgSend(v121, sel_setStorageMode_, v158);
  objc_msgSend(v121, sel_setHazardTrackingMode_, 2);
  objc_msgSend(v121, sel_setSize_, v7);
  v122 = objc_msgSend((id)v39, sel_newHeapWithDescriptor_, v121);

  if (!v122)
  {
    v170[0] = 0;
    v170[1] = 0xE000000000000000;
    sub_242C48C38();
    OUTLINED_FUNCTION_8_8();
    sub_242A99A74((SEL *)&selRef_size);
    OUTLINED_FUNCTION_1_18();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242A99A74((SEL *)&selRef_usedSize);
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_25_5();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_8_8();
    OUTLINED_FUNCTION_14_8();
    OUTLINED_FUNCTION_17_9();
    goto LABEL_147;
  }
  type metadata accessor for MPSHeap();
  *(_QWORD *)(swift_allocObject() + 16) = v122;
  if ((v147 & 0xFE00000000) != 0)
    v123 = 48;
  else
    v123 = 0;
  v97 = objc_msgSend(v122, sel_newBufferWithLength_options_, v148, v123, v141);
  OUTLINED_FUNCTION_0_3();
  swift_isUniquelyReferenced_nonNull_native();
  v124 = OUTLINED_FUNCTION_10_12();
  sub_242A61490(v124, v125, v158);
  OUTLINED_FUNCTION_44_3();
  if (v26)
    goto LABEL_135;
  v102 = v126;
  v128 = v127;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222940);
  v129 = OUTLINED_FUNCTION_21_8();
  v112 = (_QWORD *)v169;
  if ((v129 & 1) != 0)
  {
    v137 = OUTLINED_FUNCTION_24_6(v129, v130, v131, v132, v133, v134, v135, v136, v143, v144, v145, v146, v147, v148, v149, v151, v152, v154, v155,
             v156,
             v157,
             v158,
             v159,
             v160,
             v161);
    if ((v128 & 1) != (v138 & 1))
    {
LABEL_145:
      sub_242C492EC();
      __break(1u);
LABEL_146:
      OUTLINED_FUNCTION_19_9();
      OUTLINED_FUNCTION_9_14();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257228140);
      OUTLINED_FUNCTION_51_4();
      OUTLINED_FUNCTION_8_8();
      objc_msgSend((id)v39, sel_maxBufferLength);
      sub_242C491CC();
      OUTLINED_FUNCTION_25_5();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_34_6();
      OUTLINED_FUNCTION_14_8();
      OUTLINED_FUNCTION_17_9();
      goto LABEL_147;
    }
    v102 = v137;
  }
  OUTLINED_FUNCTION_50_4();
  OUTLINED_FUNCTION_49_3();
  if ((v128 & 1) == 0)
  {
    v115 = v161 & 1;
    v116 = MEMORY[0x24BEE4AF8];
    goto LABEL_126;
  }
LABEL_127:
  OUTLINED_FUNCTION_136();
  sub_242A9ADD8();
  OUTLINED_FUNCTION_15_8();
  swift_release();
  return v97;
}

uint64_t sub_242A9ADD8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t *, uint64_t *);
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  swift_retain();
  sub_242C48D4C();
  sub_242C48D88();
  sub_242C48D94();
  sub_242C48D64();
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 16);
  v4 = v3 - 1;
  result = sub_242A9B8E4(v3 - 1, v2);
  v6 = result;
  v15 = result;
  v7 = v3 - 2;
  if (v3 >= 2)
  {
    while (v7 >= -1)
    {
      v8 = v7 / 2;
      if (v7 / 2 >= *(_QWORD *)(*v1 + 16))
        goto LABEL_19;
      v9 = (uint64_t (*)(uint64_t *, uint64_t *))v1[1];
      v14 = *(_QWORD *)(*v1 + 8 * v8 + 32);
      swift_retain();
      swift_retain();
      swift_retain();
      LOBYTE(v9) = v9(&v15, &v14);
      swift_release();
      swift_release();
      result = swift_release();
      if ((v9 & 1) == 0)
        goto LABEL_12;
      v10 = *v1;
      if (v8 >= *(_QWORD *)(*v1 + 16))
        goto LABEL_20;
      v11 = *(_QWORD *)(v10 + 8 * v8 + 32);
      swift_retain();
      result = swift_isUniquelyReferenced_nonNull_native();
      *v1 = v10;
      if ((result & 1) == 0)
        sub_242BEDCA0();
      if (v4 >= *(_QWORD *)(v10 + 16))
        goto LABEL_21;
      swift_release();
      *(_QWORD *)(v10 + 8 * v4 + 32) = v11;
      result = sub_242C48D64();
      v15 = v6;
      v4 = v7 / 2;
      v12 = v7 <= 1;
      v7 = v8 - 1;
      if (v12)
        goto LABEL_13;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_12:
  v8 = v4;
LABEL_13:
  v13 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v13;
  if ((result & 1) == 0)
    sub_242BEDCA0();
  if (v8 < 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((unint64_t)v8 < *(_QWORD *)(v13 + 16))
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v13 + 8 * v8 + 32) = v6;
    sub_242C48D64();
    return swift_release();
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_242A9AFD8()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)(*v0 + 16);
  if (v1 == 1)
    return (uint64_t)sub_242A9B824(sub_242A9CA80, (uint64_t (*)(uint64_t))sub_242A9CA00);
  if (!v1)
    return v1;
  v1 = sub_242A9B8E4(0, *v0);
  v2 = sub_242A9B824(sub_242A9CA80, (uint64_t (*)(uint64_t))sub_242A9CA00);
  v3 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v3;
  if ((result & 1) == 0)
    sub_242BEDCA0();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_release();
    *(_QWORD *)(v3 + 32) = v2;
    sub_242C48D64();
    sub_242A9B908(0, *(_QWORD *)(*v0 + 16));
    return v1;
  }
  __break(1u);
  return result;
}

BOOL sub_242A9B0A0()
{
  int64_t v0;

  v0 = sub_242C44484();
  return sub_242C44484() < v0;
}

uint64_t sub_242A9B0E0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  strcpy((char *)v28, "MPSAllocator");
  BYTE5(v28[1]) = 0;
  HIWORD(v28[1]) = -5120;
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_242C48C38();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_3();
  result = sub_242A9BCEC(*(_QWORD *)(v0 + 24), &v29);
  v2 = 0;
  v3 = v32;
  v4 = v33;
  v5 = (unint64_t)(v31 + 64) >> 6;
  while (v4)
  {
    v6 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v7 = v6 | (v3 << 6);
LABEL_22:
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v29 + 56) + 24 * v7) + 16);
    v13 = __OFADD__(v2, v12);
    v2 += v12;
    if (v13)
    {
      __break(1u);
      goto LABEL_25;
    }
  }
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v8 >= v5)
    goto LABEL_25;
  v9 = *(_QWORD *)(v30 + 8 * v8);
  v10 = v3 + 1;
  if (v9)
    goto LABEL_21;
  v10 = v3 + 2;
  if (v3 + 2 >= v5)
    goto LABEL_25;
  v9 = *(_QWORD *)(v30 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 3;
  if (v3 + 3 >= v5)
    goto LABEL_25;
  v9 = *(_QWORD *)(v30 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 4;
  if (v3 + 4 >= v5)
    goto LABEL_25;
  v9 = *(_QWORD *)(v30 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 5;
  if (v3 + 5 >= v5)
    goto LABEL_25;
  v9 = *(_QWORD *)(v30 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 6;
  if (v3 + 6 >= v5)
    goto LABEL_25;
  v9 = *(_QWORD *)(v30 + 8 * v10);
  if (v9)
  {
LABEL_21:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
    v3 = v10;
    goto LABEL_22;
  }
  v11 = v3 + 7;
  while (v11 < v5)
  {
    v9 = *(_QWORD *)(v30 + 8 * v11++);
    if (v9)
    {
      v10 = v11 - 1;
      goto LABEL_21;
    }
  }
LABEL_25:
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_13_9();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_3_17();
  OUTLINED_FUNCTION_81();
  sub_242C48C38();
  OUTLINED_FUNCTION_45_2();
  sub_242A99A74((SEL *)&selRef_size);
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_13_9();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_3_17();
  OUTLINED_FUNCTION_81();
  sub_242C48C38();
  OUTLINED_FUNCTION_45_2();
  sub_242A99A74((SEL *)&selRef_usedSize);
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_13_9();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_3_17();
  OUTLINED_FUNCTION_81();
  sub_242C48C38();
  OUTLINED_FUNCTION_45_2();
  sub_242A99CAC();
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_13_9();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_3_17();
  OUTLINED_FUNCTION_81();
  sub_242C48314();
  v14 = *(_QWORD *)(v0 + 24);
  v26 = v14 + 64;
  OUTLINED_FUNCTION_23_9();
  v17 = v16 & v15;
  v27 = (unint64_t)(v18 + 63) >> 6;
  result = sub_242C480E0();
  v19 = 0;
  if (!v17)
    goto LABEL_27;
  while (2)
  {
    v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v21 = v20 | (v19 << 6);
LABEL_41:
    v25 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 24 * v21 + 16);
    swift_retain();
    swift_retain();
    sub_242C48C38();
    sub_242C48314();
    OUTLINED_FUNCTION_57_4();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242C2EBF0(v25);
    sub_242C48314();
    OUTLINED_FUNCTION_47();
    sub_242C48314();
    sub_242C48314();
    OUTLINED_FUNCTION_47();
    sub_242C48314();
    OUTLINED_FUNCTION_57_4();
    sub_242C48314();
    OUTLINED_FUNCTION_47();
    sub_242C48314();
    swift_release();
    OUTLINED_FUNCTION_50_0();
    result = OUTLINED_FUNCTION_47();
    if (v17)
      continue;
    break;
  }
LABEL_27:
  v22 = v19 + 1;
  if (__OFADD__(v19, 1))
    goto LABEL_45;
  if (v22 >= v27)
  {
LABEL_43:
    OUTLINED_FUNCTION_17_1();
    return v28[0];
  }
  v23 = *(_QWORD *)(v26 + 8 * v22);
  ++v19;
  if (v23)
    goto LABEL_40;
  v19 = v22 + 1;
  if (v22 + 1 >= v27)
    goto LABEL_43;
  v23 = *(_QWORD *)(v26 + 8 * v19);
  if (v23)
    goto LABEL_40;
  v19 = v22 + 2;
  if (v22 + 2 >= v27)
    goto LABEL_43;
  v23 = *(_QWORD *)(v26 + 8 * v19);
  if (v23)
  {
LABEL_40:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_41;
  }
  v24 = v22 + 3;
  if (v24 >= v27)
    goto LABEL_43;
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_40;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v27)
      goto LABEL_43;
    v23 = *(_QWORD *)(v26 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_40;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_242A9B6A4()
{
  return sub_242A9B0E0();
}

uint64_t sub_242A9B6C4(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;
  int v6;
  char v7;

  result = sub_242A9CC50(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_35_6();
  if (v7)
    return 2;
  else
    return sub_242A9CB7C(v5, v6, 0, a1) & 1;
}

uint64_t sub_242A9B71C(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;
  int v6;
  char v7;

  result = sub_242A9CC50(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_35_6();
  if (v7)
    return 0;
  else
    return sub_242A9CBD0(v5, v6, 0, a1);
}

uint64_t sub_242A9B774(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    return swift_retain();
  else
    return 0;
}

void sub_242A9B79C(void *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD v4[18];

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    sub_242A8FD64(v4);
    if (v4[3] == 1)
    {
      sub_242A929A8((uint64_t)v4, &qword_257222960);
      v3 = OUTLINED_FUNCTION_62_3();
      sub_242A8F950(v3);
    }
    else
    {
      memcpy(a1, v4, 0x88uLL);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_242A9B810())(void)
{
  return sub_242A9B824((uint64_t (*)(void))sub_242A8FF28, (uint64_t (*)(uint64_t))sub_242A8FAC8);
}

uint64_t (*sub_242A9B824(uint64_t (*result)(void), uint64_t (*a2)(uint64_t)))(void)
{
  uint64_t v2;

  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    result = (uint64_t (*)(void))result();
    if (!result)
      return (uint64_t (*)(void))a2(*(_QWORD *)(*(_QWORD *)v2 + 16) - 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_242A9B874(void *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD __src[31];

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    sub_242A8FEC8(__src);
    if (__src[0])
    {
      memcpy(a1, __src, 0xECuLL);
    }
    else
    {
      sub_242A929A8((uint64_t)__src, &qword_257222958);
      v3 = OUTLINED_FUNCTION_62_3();
      sub_242A8FA50(v3);
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_242A9B8E4(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > result)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

unint64_t sub_242A9B908(unint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t (*v9)(unint64_t *, unint64_t *);
  uint64_t v10;
  char v11;
  uint64_t (*v12)(unint64_t *, unint64_t *);
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;

  if ((uint64_t)(result + 0x4000000000000000) < 0)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    v3 = v2;
    v5 = result;
    while (1)
    {
      v6 = (2 * v5) | 1;
      v7 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      v8 = v5;
      if (v6 < a2)
      {
        v9 = (uint64_t (*)(unint64_t *, unint64_t *))v3[1];
        v10 = *v3;
        v16 = sub_242A9B8E4((2 * v5) | 1, *v3);
        v15 = sub_242A9B8E4(v5, v10);
        v11 = v9(&v16, &v15);
        swift_release();
        result = swift_release();
        if ((v11 & 1) != 0)
          v8 = (2 * v5) | 1;
        else
          v8 = v5;
      }
      if (v7 < a2)
      {
        v12 = (uint64_t (*)(unint64_t *, unint64_t *))v3[1];
        v13 = *v3;
        v16 = sub_242A9B8E4(v7, *v3);
        v15 = sub_242A9B8E4(v8, v13);
        v14 = v12(&v16, &v15);
        swift_release();
        result = swift_release();
        if ((v14 & 1) != 0)
          v8 = v7;
      }
      if (v8 == v5)
        return result;
      result = sub_242A9BAC4(v5, v8);
      v5 = v8;
      if ((uint64_t)(v8 + 0x4000000000000000) < 0)
        goto LABEL_13;
    }
    __break(1u);
  }
  return result;
}

void sub_242A9BA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    v4 = TensorShape.subscript.getter(a1);
    v5 = TensorShape.subscript.getter(a2);
    TensorShape.subscript.setter(v5, a1);
    TensorShape.subscript.setter(v4, a2);
  }
}

unint64_t sub_242A9BAC4(unint64_t result, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (result != a2)
  {
    v3 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v4 = *v2;
      v5 = *(_QWORD *)(*v2 + 16);
      if (v5 > result)
      {
        if (v5 > a2)
        {
          v7 = *(_QWORD *)(v4 + 32 + 8 * result);
          v8 = *(_QWORD *)(v4 + 32 + 8 * a2);
          swift_retain();
          swift_retain();
          result = swift_isUniquelyReferenced_nonNull_native();
          *v2 = v4;
          if ((result & 1) == 0)
            sub_242BEDCA0();
          if (*(_QWORD *)(v4 + 16) > v3)
          {
            *(_QWORD *)(v4 + 8 * v3 + 32) = v8;
            swift_release();
            sub_242C48D64();
            v9 = *v2;
            result = swift_isUniquelyReferenced_nonNull_native();
            *v2 = v9;
            if ((result & 1) == 0)
              sub_242BEDCA0();
            if (*(_QWORD *)(v9 + 16) > a2)
            {
              *(_QWORD *)(v9 + 8 * a2 + 32) = v7;
              swift_release();
              return sub_242C48D64();
            }
            goto LABEL_16;
          }
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          return result;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

unint64_t sub_242A9BBDC(unint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (result != a2)
  {
    v6 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v7 = *v3;
      v8 = *(_QWORD *)(*v3 + 16);
      if (v8 > result)
      {
        v2 = a2;
        if (v8 > a2)
        {
          v4 = *(_QWORD *)(v7 + 32 + 8 * result);
          v5 = *(_QWORD *)(v7 + 32 + 8 * a2);
          swift_retain();
          OUTLINED_FUNCTION_11_6();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_6;
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        sub_242B4B580();
        v7 = v9;
LABEL_6:
        *(_QWORD *)(v7 + 32 + 8 * v6) = v5;
        result = swift_release();
        if (*(_QWORD *)(v7 + 16) <= v2)
        {
          __break(1u);
        }
        else
        {
          *(_QWORD *)(v7 + 32 + 8 * v2) = v4;
          result = swift_release();
          *v3 = v7;
        }
        return result;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_19_8()
{
  return 0;
}

BOOL sub_242A9BCB0(_DWORD *a1, int a2)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_242A9BCDC(uint64_t result)
{
  _DWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_242A9BCEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void (*sub_242A9BD24(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_242C480E0();
  v6[9] = sub_242A9C728(v6);
  v6[10] = sub_242A9BFE8(v6 + 4, a2, a3);
  return sub_242A9BDB4;
}

void (*sub_242A9BDB8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_242C480E0();
  v6[9] = sub_242A9C728(v6);
  v6[10] = sub_242A9C184(v6 + 4, a2, a3);
  return sub_242A9BDB4;
}

void (*sub_242A9BE48(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  _QWORD *v8;

  v8 = malloc(0x50uLL);
  *a1 = v8;
  swift_isUniquelyReferenced_nonNull_native();
  v8[8] = sub_242A9C748(v8);
  v8[9] = sub_242A9C390(v8 + 4, a2, a3, a4);
  return sub_242A9BEDC;
}

void sub_242A9BEDC(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  OUTLINED_FUNCTION_29_5(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72));
  v2(v1, 0);
  OUTLINED_FUNCTION_0_24(v1);
}

void (*sub_242A9BF10(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_242C480E0();
  v6[9] = sub_242A9C728(v6);
  v6[10] = sub_242A9C5C0(v6 + 4, a2, a3);
  return sub_242A9BDB4;
}

void sub_242A9BFA0(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  OUTLINED_FUNCTION_29_5(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80));
  OUTLINED_FUNCTION_136();
  v2(v1, 0);
  free(v1);
}

void (*sub_242A9BFE8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[1] = a3;
  v8[2] = v3;
  *v8 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572225D8);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[3] = v10;
  v11 = *v3;
  v12 = sub_242A61310(a2, a3);
  *((_BYTE *)v8 + 40) = v13 & 1;
  if (__OFADD__(*(_QWORD *)(v11 + 16), (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v12;
  v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222980);
  if ((sub_242C48EF0() & 1) != 0)
  {
    v16 = sub_242A61310(a2, a3);
    if ((v15 & 1) == (v17 & 1))
    {
      v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **, uint64_t))sub_242C492EC();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v14;
  if ((v15 & 1) != 0)
  {
    v18 = *(_QWORD *)(*v4 + 56);
    v19 = sub_242C47E64();
    (*(void (**)(void *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v10, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v14, v19);
    v20 = 0;
  }
  else
  {
    v19 = sub_242C47E64();
    v20 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v20, 1, v19);
  return sub_242A9C168;
}

void sub_242A9C168(uint64_t **a1, uint64_t a2)
{
  sub_242A9C320(a1, a2, &qword_2572225D8, (uint64_t (*)(_QWORD, __n128))MEMORY[0x24BE63138], (void (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_242B8E4A4);
}

void (*sub_242A9C184(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[1] = a3;
  v8[2] = v3;
  *v8 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222968);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[3] = v10;
  v11 = *v3;
  v12 = sub_242A61310(a2, a3);
  *((_BYTE *)v8 + 40) = v13 & 1;
  if (__OFADD__(*(_QWORD *)(v11 + 16), (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v12;
  v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257222970);
  if ((sub_242C48EF0() & 1) != 0)
  {
    v16 = sub_242A61310(a2, a3);
    if ((v15 & 1) == (v17 & 1))
    {
      v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **, uint64_t))sub_242C492EC();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v14;
  if ((v15 & 1) != 0)
  {
    v18 = *(_QWORD *)(*v4 + 56);
    v19 = sub_242C47DA4();
    (*(void (**)(void *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v10, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v14, v19);
    v20 = 0;
  }
  else
  {
    v19 = sub_242C47DA4();
    v20 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v20, 1, v19);
  return sub_242A9C304;
}

void sub_242A9C304(uint64_t **a1, uint64_t a2)
{
  sub_242A9C320(a1, a2, &qword_257222968, (uint64_t (*)(_QWORD, __n128))MEMORY[0x24BE62F58], (void (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_242B8E4B0);
}

void sub_242A9C320(uint64_t **a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD, __n128), void (*a5)(uint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t *v6;
  void *v7;

  v6 = *a1;
  v7 = (void *)(*a1)[3];
  sub_242A9C774((uint64_t)v7, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1], a3, a4, a5);
  sub_242A929A8((uint64_t)v7, a3);
  free(v7);
  free(v6);
}

void (*sub_242A9C390(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x40uLL);
  *a1 = v10;
  v10[4] = a4;
  v10[5] = v5;
  *((_BYTE *)v10 + 56) = a3;
  v10[3] = a2;
  v11 = *v5;
  v12 = sub_242A61490(a2, a3, a4);
  *((_BYTE *)v10 + 57) = v13 & 1;
  if (__OFADD__(*(_QWORD *)(v11 + 16), (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v12;
  v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222940);
  if ((sub_242C48EF0() & 1) != 0)
  {
    v16 = sub_242A61490(a2, a3 & 1, a4);
    if ((v15 & 1) == (v17 & 1))
    {
      v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_242C492EC();
    __break(1u);
    return result;
  }
LABEL_5:
  v10[6] = v14;
  if ((v15 & 1) != 0)
  {
    v18 = *(_QWORD *)(*v5 + 56) + 24 * v14;
    v19 = *(_OWORD *)v18;
    v20 = *(_QWORD *)(v18 + 16);
  }
  else
  {
    v20 = 0;
    v19 = 0uLL;
  }
  *(_OWORD *)v10 = v19;
  v10[2] = v20;
  return sub_242A9C4D4;
}

void sub_242A9C4D4(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;

  v1 = *a1;
  v2 = **a1;
  v3 = (*a1)[1];
  v4 = (*a1)[2];
  v5 = *((_BYTE *)*a1 + 57);
  if (v2)
  {
    v6 = v1[6];
    v7 = *(_QWORD **)v1[5];
    if ((v5 & 1) != 0)
    {
      v8 = (uint64_t *)(v7[7] + 24 * v6);
      *v8 = v2;
      v8[1] = v3;
      v8[2] = v4;
    }
    else
    {
      sub_242B8E54C(v6, v1[3], *((_BYTE *)v1 + 56), v1[4], v2, v3, v4, v7);
    }
  }
  else if ((*((_BYTE *)*a1 + 57) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222948);
    sub_242A9CB40();
    sub_242C48F14();
  }
  v9 = *v1;
  sub_242A9CAE8(v2);
  sub_242A9CB14(v9);
  free(v1);
}

void (*sub_242A9C5C0(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = (char *)malloc(0x40uLL);
  *a1 = v8;
  *((_QWORD *)v8 + 4) = a3;
  *((_QWORD *)v8 + 5) = v4;
  *((_QWORD *)v8 + 3) = a2;
  v9 = *v4;
  v10 = sub_242A61310(a2, a3);
  v8[56] = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222988);
  if ((sub_242C48EF0() & 1) != 0)
  {
    v14 = sub_242A61310(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_242C492EC();
    __break(1u);
    return result;
  }
LABEL_5:
  *((_QWORD *)v8 + 6) = v12;
  if ((v13 & 1) != 0)
  {
    v16 = *(_QWORD *)(*v4 + 56) + 24 * v12;
    v17 = *(_QWORD *)v16;
    v18 = *(_OWORD *)(v16 + 8);
  }
  else
  {
    v17 = 0;
    v18 = 0uLL;
  }
  *(_QWORD *)v8 = v17;
  *(_OWORD *)(v8 + 8) = v18;
  return sub_242A9C6EC;
}

void sub_242A9C6EC(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_242A9C928(*a1, *((_BYTE *)*a1 + 56), (uint64_t *)(*a1)[5], (*a1)[6], (*a1)[3], (*a1)[4]);
  sub_242A9CD04(*v1, v1[1]);
  OUTLINED_FUNCTION_0_24(v1);
}

uint64_t (*sub_242A9C728(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_242A9CD64;
}

uint64_t (*sub_242A9C748(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_242A9C768;
}

uint64_t sub_242A9C768(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

void sub_242A9C774(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(_QWORD, __n128), void (*a9)(uint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a5;
  v28 = a6;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a8(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v27 - v24;
  sub_242A9CCC4(a1, (uint64_t)v18, a7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19) == 1)
  {
    sub_242A929A8((uint64_t)v18, a7);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      sub_242C48F14();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v18, v19);
    v26 = *a3;
    if ((a2 & 1) != 0)
    {
      OUTLINED_FUNCTION_48_3(*(_QWORD *)(v26 + 56) + *(_QWORD *)(v20 + 72) * a4);
    }
    else
    {
      OUTLINED_FUNCTION_48_3((uint64_t)v22);
      a9(a4, v27, v28, v22, v26);
      OUTLINED_FUNCTION_28_1();
    }
  }
}

uint64_t sub_242A9C928(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  if (v6)
  {
    v9 = *a3;
    if ((a2 & 1) != 0)
    {
      v10 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * a4);
      *v10 = v7;
      v10[1] = v6;
      v10[2] = v8;
    }
    else
    {
      sub_242B8E77C(a4, a5, a6, v7, v6, v8, v9);
      sub_242C480E0();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_242C48F14();
  }
  return sub_242A9CD34(v7, v6);
}

uint64_t sub_242A9CA00(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((result & 1) == 0)
    sub_242BEDCA0();
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    v7 = v5 - 1 - a1;
    v8 = v3 + 8 * a1;
    v9 = *(_QWORD *)(v8 + 32);
    sub_242BC1AEC((char *)(v8 + 40), v7, (char *)(v8 + 32));
    *(_QWORD *)(*v1 + 16) = v6;
    sub_242C48D64();
    return v9;
  }
  return result;
}

uint64_t sub_242A9CA80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((result & 1) == 0)
    sub_242BEDCA0();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = v3 - 1;
    v5 = *(_QWORD *)(v1 + 8 * v4 + 32);
    *(_QWORD *)(v1 + 16) = v4;
    sub_242C48D64();
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242A9CAE8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_242A9CB14(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_242A9CB40()
{
  unint64_t result;

  result = qword_257222950;
  if (!qword_257222950)
  {
    result = MEMORY[0x2494EDE24](&unk_242C63BE4, &type metadata for MPSHeap.Descriptor);
    atomic_store(result, (unint64_t *)&qword_257222950);
  }
  return result;
}

uint64_t sub_242A9CB7C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_242A9CBD0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
    sub_242C480E0();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_242A9CC50(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
LABEL_3:
    v3 = __clz(__rbit64(v1)) + v2;
    return OUTLINED_FUNCTION_28_9(v3);
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return OUTLINED_FUNCTION_28_9(v3);
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    goto LABEL_3;
  }
  v2 = 64;
  v7 = 9;
  while (v7 - 7 < (unint64_t)(v3 + 63) >> 6)
  {
    v1 = *(_QWORD *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1)
      goto LABEL_3;
  }
  return OUTLINED_FUNCTION_28_9(v3);
}

void sub_242A9CCC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A9CD04(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242A9CD34(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_242C480E0();
    return sub_242C480E0();
  }
  return result;
}

void OUTLINED_FUNCTION_0_24(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_5_19(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = a1;
  *(_QWORD *)(a1 + 32) = v1;
  return sub_242C480E0();
}

void *OUTLINED_FUNCTION_6_17()
{
  return malloc(0x30uLL);
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_9_14()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_10_12()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = *v0;
  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_13_9()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_14_8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 168);
  *(_QWORD *)(v0 - 176) = *(_QWORD *)(v0 - 176);
  *(_QWORD *)(v0 - 168) = v1;
  *(_BYTE *)(v0 - 92) = 3;
}

uint64_t OUTLINED_FUNCTION_15_8()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 176) = 0;
  *(_QWORD *)(v0 - 168) = 0xE000000000000000;
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_21_8()
{
  return sub_242C48EF0();
}

unint64_t OUTLINED_FUNCTION_24_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return sub_242A61490(a20, a25 & 1, a22);
}

uint64_t OUTLINED_FUNCTION_25_5()
{
  return sub_242C48314();
}

unint64_t OUTLINED_FUNCTION_26_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17, uint64_t a18)
{
  return sub_242A61490(a18, a17, a15);
}

uint64_t OUTLINED_FUNCTION_28_9@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_29_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  return a2(a1, 0);
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 176, 0);
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_47_2(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_48_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_50_4()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_4()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_59_3()
{
  return swift_retain_n();
}

void OUTLINED_FUNCTION_60_1()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_62_3()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) - 1;
}

void sub_242A9D044(char a1)
{
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1), 0);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9D0A4()
{
  char *v0;

  sub_242A9D044(*v0);
}

void sub_242A9D0AC(unsigned __int8 a1)
{
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedChar_, a1), 9);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9D10C()
{
  unsigned __int8 *v0;

  sub_242A9D0AC(*v0);
}

void sub_242A9D114(unsigned __int16 a1)
{
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedShort_, a1), 10);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9D174()
{
  unsigned __int16 *v0;

  sub_242A9D114(*v0);
}

void sub_242A9D17C()
{
  unsigned int *v0;

  sub_242A9D28C(*v0, (SEL *)&selRef_initWithUnsignedInt_);
}

void sub_242A9D1A0()
{
  uint64_t *v0;

  sub_242A9D314(*v0);
}

void sub_242A9D1BC(char a1)
{
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithChar_, a1), 5);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9D21C()
{
  char *v0;

  sub_242A9D1BC(*v0);
}

void sub_242A9D224(__int16 a1)
{
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, a1), 6);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9D284()
{
  __int16 *v0;

  sub_242A9D224(*v0);
}

void sub_242A9D28C(uint64_t a1, SEL *a2)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), *a2, a1);
  OUTLINED_FUNCTION_14_9(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_);

  OUTLINED_FUNCTION_9();
}

void sub_242A9D2F0()
{
  unsigned int *v0;

  sub_242A9D28C(*v0, (SEL *)&selRef_initWithInt_);
}

void sub_242A9D314(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInt_, a1);
  OUTLINED_FUNCTION_14_9(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_);

  OUTLINED_FUNCTION_1_0();
}

void sub_242A9D374()
{
  uint64_t *v0;

  sub_242A9D314(*v0);
}

void sub_242A9D390(uint64_t a1)
{
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a1), 7);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9D3F0()
{
  uint64_t *v0;

  sub_242A9D390(*v0);
}

void sub_242A9D3F8(__n128 _Q0)
{
  id v6;
  double v7;

  __asm { FCVT            S8, H0 }
  v6 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, OUTLINED_FUNCTION_9_15(v6, sel_initWithFloat_, v7), 2);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_11_12();
}

void sub_242A9D458(__n128 a1)
{
  unsigned __int16 *v1;

  a1.n128_u16[0] = *v1;
  sub_242A9D3F8(a1);
}

void sub_242A9D460()
{
  id v0;
  double v1;

  v0 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, OUTLINED_FUNCTION_9_15(v0, sel_initWithFloat_, v1), 3);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_11_12();
}

void sub_242A9D4C0()
{
  sub_242A9D460();
}

void sub_242A9D4C8(uint64_t a1)
{
  OUTLINED_FUNCTION_9_9(a1, &qword_257222990);
  sub_242C480E0();
  sub_242A9D518();
  OUTLINED_FUNCTION_9();
}

id sub_242A9D518()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithStringScalar_, v1);

  return v2;
}

void sub_242A9D588()
{
  uint64_t *v0;

  sub_242A9D4C8(*v0);
}

void sub_242A9D590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v3, a2, a3);
  sub_242AFCBF4();
  OUTLINED_FUNCTION_11_3();
}

id sub_242A9D5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  *(_OWORD *)(OUTLINED_FUNCTION_1_4() + 16) = xmmword_242C4BF60;
  MEMORY[0x2494EC198](a1, a2);
  v6 = sub_242C4877C();
  v7 = OUTLINED_FUNCTION_8_9(v6);
  OUTLINED_FUNCTION_9_9(v7, (unint64_t *)&qword_257221F28);
  v8 = sub_242C48E6C();
  sub_242A9D590(v8, a2, a3);
  v10 = v9;
  v11 = objc_allocWithZone((Class)SNNMILDataValue);
  return OUTLINED_FUNCTION_7_14(v13, v8, v10);
}

id sub_242A9D690(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242A9D5CC(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

void sub_242A9D6A4()
{
  __n128 *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v0 = (__n128 *)OUTLINED_FUNCTION_1_4();
  v1 = OUTLINED_FUNCTION_6_18(v0, (__n128)xmmword_242C4BF60);
  OUTLINED_FUNCTION_8_9(v1);
  OUTLINED_FUNCTION_30_3();
  v2 = objc_allocWithZone((Class)SNNMILDataValue);
  v3 = OUTLINED_FUNCTION_13_10();
  OUTLINED_FUNCTION_7_14(v3, v4, v5);
  OUTLINED_FUNCTION_11_3();
}

void sub_242A9D70C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 8))(&v2);
  sub_242AFCBF4();
  OUTLINED_FUNCTION_11_3();
}

uint64_t sub_242A9D73C(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD v7[4];
  uint64_t v8;

  v7[2] = a1;
  v7[3] = a2;
  v4 = *(void (**)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(a2 + 64);
  v5 = OUTLINED_FUNCTION_9_9(a1, &qword_257222990);
  v4(&v8, sub_242A9E068, v7, v5, a1, a2);
  return v8;
}

void sub_242A9D7BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_242C480E0();
  sub_242A5A5E8(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_242A8AA58(0, &qword_257222990);
    v5 = sub_242B1D9FC();
    sub_242B1DC14(v4, a1, v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_242A9D84C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_242C480E0();
  sub_242A5A5E8(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_242A8AA58(0, &qword_257222990);
    v5 = sub_242B1DAAC();
    sub_242B1DC14(v4, a1, v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_242A9D8DC(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 16))(&v12, a2, a3);
  sub_242A5A5E8(v12);
  v9 = v8;
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_242A8AA58(0, &qword_257222990);
    sub_242A9D70C(a2, a3);
    sub_242B1DC14(v9, a1, v10);
    *a4 = v11;
  }
  else
  {
    __break(1u);
  }
}

void sub_242A9D9A4()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_242B1DD80(v0);
  OUTLINED_FUNCTION_11_3();
}

void sub_242A9D9D4()
{
  sub_242A9D9A4();
}

void sub_242A9D9F4()
{
  uint64_t v0;

  sub_242A9E084((uint64_t)sub_242A9E428, v0);
  OUTLINED_FUNCTION_11_3();
}

void sub_242A9DA24()
{
  sub_242A9D9F4();
}

void sub_242A9DA44()
{
  uint64_t v0;

  sub_242A9E1CC((uint64_t)sub_242A9E4A8, v0);
  OUTLINED_FUNCTION_11_3();
}

void sub_242A9DA74()
{
  sub_242A9DA44();
}

uint64_t sub_242A9DA94()
{
  uint64_t v0;
  void *BaseAddress;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_retain();
  sub_242AF7B58(0);
  BaseAddress = IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(v0 + 16));
  sub_242A9DFE8();
  v2 = sub_242C480E0();
  sub_242A5A5E8(v2);
  v4 = v3;
  result = swift_bridgeObjectRelease();
  if (BaseAddress)
  {
    OUTLINED_FUNCTION_9_9(result, &qword_257222990);
    v6 = sub_242B1DAAC();
    sub_242B1DC14(v4, (uint64_t)BaseAddress, v6);
    v8 = v7;
    sub_242AF7C38(0);
    swift_release();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242A9DB54()
{
  return sub_242A9DA94();
}

id sub_242A9DB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) == 1)
  {
    v1 = sub_242C47B4C();
    v3 = v2;
    v4 = sub_242C480E0();
    sub_242A5A5E8(v4);
    v6 = v5;
    swift_bridgeObjectRelease();
    sub_242B1DB5C();
    v8 = v7;
    v9 = (void *)sub_242C49418();
    v10 = objc_allocWithZone((Class)SNNMILBlobValue);
    return sub_242A9E354(v1, v3, v6, v8, v9);
  }
  else
  {
    v12 = swift_retain();
    return (id)sub_242AF8924(v12);
  }
}

id sub_242A9DC70()
{
  return sub_242A9DB74();
}

void sub_242A9DC90()
{
  __asm { BR              X10 }
}

uint64_t sub_242A9DCC8()
{
  char v0;
  uint64_t v1;

  objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v0 & 1), 0);
  OUTLINED_FUNCTION_65_2();
  return v1;
}

void sub_242A9DF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;

  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220F60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222998);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v14 = *((_QWORD *)&a12 + 1);
    v15 = a13;
    __swift_project_boxed_opaque_existential_1(&a11, *((uint64_t *)&a12 + 1));
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&a11);
  }
  else
  {
    a13 = 0;
    a11 = 0u;
    a12 = 0u;
    sub_242A9E4C0((uint64_t)&a11);
    ObjectType = swift_getObjectType();
    sub_242A9D73C(ObjectType, v13);
  }
  JUMPOUT(0x242A9DF20);
}

uint64_t sub_242A9DFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(v1 + 32);
    v4 = 1;
    while (1)
    {
      v5 = *v3++;
      v6 = v4 * v5;
      if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
        break;
      v4 = v6;
      if (!--v2)
        goto LABEL_7;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v6 = 1;
LABEL_7:
  v7 = *(unsigned __int8 *)(v0 + 32) - 1;
  if (v7 > 0xA)
    v8 = 1;
  else
    v8 = qword_242C4F280[(char)v7];
  result = v6 * v8;
  if ((unsigned __int128)(v6 * (__int128)v8) >> 64 != (v6 * v8) >> 63)
    goto LABEL_13;
  return result;
}

void sub_242A9E068(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_242A9D8DC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_242A9E084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t *__return_ptr, _QWORD *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD v15[5];
  uint64_t v16;

  swift_retain();
  v6 = sub_242C080B8();
  objc_msgSend(v6, sel_lock);

  v7 = *(_QWORD *)(v2 + 40);
  if (v7 < 0)
  {
    v9 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    swift_unknownObjectRetain();
  }
  else
  {
    sub_242C0854C();
    v9 = v8;
  }
  v10 = sub_242C080B8();
  objc_msgSend(v10, sel_unlock);
  swift_release();

  ObjectType = swift_getObjectType();
  MEMORY[0x24BDAC7A8](ObjectType);
  v15[2] = a1;
  v15[3] = a2;
  v12 = *(void (**)(uint64_t *__return_ptr, _QWORD *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v9 + 64);
  v13 = sub_242A8AA58(0, &qword_257222990);
  v12(&v16, sub_242A9E468, v15, v13, ObjectType, v9);
  if (v3)
    return swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_242A9E1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v11;

  sub_242B88348();
  v6 = v5;
  ObjectType = swift_getObjectType();
  v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64);
  v9 = sub_242A8AA58(0, &qword_257222990);
  v8(&v11, a1, a2, v9, ObjectType, v6);
  if (v2)
    return swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v11;
}

_QWORD *sub_242A9E278(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;

  result = a3(&v5);
  if (!v3)
    return (_QWORD *)v5;
  return result;
}

id sub_242A9E2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  void *v6;
  id v7;

  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v5 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithShape_scalars_dataType_, v5, v6, a3);

  return v7;
}

id sub_242A9E354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v5;
  void *v8;
  void *v9;
  id v10;

  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
  v9 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v5, sel_initWithFilename_shape_dataType_offset_, v8, v9, a4, a5);

  return v10;
}

void sub_242A9E400(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_242A9D7BC(a1);
  if (!v2)
    *a2 = v4;
}

void sub_242A9E428(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_242A9E400(a1, a2);
}

_QWORD *sub_242A9E440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;

  result = sub_242A9E278(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

_QWORD *sub_242A9E468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_242A9E440(a1, a2, *(_QWORD *(**)(uint64_t *__return_ptr))(v3 + 16), a3);
}

void sub_242A9E480(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_242A9D84C(a1);
  if (!v2)
    *a2 = v4;
}

void sub_242A9E4A8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_242A9E480(a1, a2);
}

uint64_t sub_242A9E4C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572229A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_6_18(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_242C4877C();
}

id OUTLINED_FUNCTION_7_14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242A9E2A8(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_8_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_242C4856C();
}

id OUTLINED_FUNCTION_9_15(id a1, SEL a2, double a3)
{
  int v3;

  LODWORD(a3) = v3;
  return objc_msgSend(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_13_10()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_14_9(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(a1, a2, v3, v2);
}

void sub_242A9E568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16))
    OUTLINED_FUNCTION_4_20(a1, a2);
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9E59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_4_20(a1, a2);
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_24_7();
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A9E5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = OUTLINED_FUNCTION_4_20(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  else
    return 0;
}

void sub_242A9E618(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_45_3();
    if ((v2 & 1) != 0)
      OUTLINED_FUNCTION_9_16();
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A9E650(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  char v6;

  if (*(_QWORD *)(a4 + 16) && (v5 = sub_242A6138C(a1, a2, a3), (v6 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * v5);
  else
    return 0;
}

uint64_t sub_242A9E698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = OUTLINED_FUNCTION_45_3(), (v4 & 1) != 0))
    return *(unsigned __int8 *)(*(_QWORD *)(v2 + 56) + v3);
  else
    return 2;
}

uint64_t sub_242A9E6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_QWORD *)(a3 + 16) && (v6 = OUTLINED_FUNCTION_4_20(a1, a2), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v4 + 56);
    v10 = sub_242C47E64();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8, v10);
    v11 = a4;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = sub_242C47E64();
    v11 = a4;
    v12 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
}

void sub_242A9E764(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v4;

  if (*(_QWORD *)(a4 + 16))
  {
    sub_242A61490(a1, a2 & 1, a3);
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_35_7();
      swift_retain();
      swift_retain();
    }
  }
  OUTLINED_FUNCTION_9();
}

double sub_242A9E7C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_242A614F0(a1), (v6 & 1) != 0))
  {
    sub_242A8ABFC(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_242A9E814(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;

  if (*(_QWORD *)(a4 + 16))
  {
    sub_242A61540(a1, a2, a3);
    if ((v4 & 1) != 0)
      OUTLINED_FUNCTION_24_7();
  }
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9E854(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_242A613F0();
    if ((v2 & 1) != 0)
      OUTLINED_FUNCTION_53_2();
  }
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9E888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_4_20(a1, a2);
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_53_2();
  }
  OUTLINED_FUNCTION_1_0();
}

void sub_242A9E8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_4_20(a1, a2);
    if ((v3 & 1) != 0)
    {
      OUTLINED_FUNCTION_35_7();
      sub_242C480E0();
      sub_242C480E0();
    }
  }
  OUTLINED_FUNCTION_9();
}

unint64_t sub_242A9E910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unsigned __int8 v7;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    goto LABEL_5;
  v5 = OUTLINED_FUNCTION_4_20(a1, a2);
  if ((v6 & 1) == 0)
  {
    v4 = 0;
LABEL_5:
    v7 = 1;
    return v4 | ((unint64_t)v7 << 32);
  }
  v7 = 0;
  v4 = *(unsigned int *)(*(_QWORD *)(v3 + 56) + 4 * v5);
  return v4 | ((unint64_t)v7 << 32);
}

void sub_242A9E964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_4_20(a1, a2);
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_9_16();
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242A9E99C()
{
  return swift_retain();
}

uint64_t Tensor.shape.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 16) + 152);
  return sub_242C480E0();
}

void Tensor.elementType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v1 + 16) + 160);
}

void Array<A>.resolve(descriptor:)(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, __n128 a10)
{
  unint64_t *v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  unint64_t v26;

  v11 = *a1;
  v12 = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a2 + 16);
  if (v13)
  {
    OUTLINED_FUNCTION_37_7((uint64_t)a1, a2);
    sub_242C480E0();
    for (i = 0; i != v13; ++i)
    {
      OUTLINED_FUNCTION_110();
      swift_retain();
      v15 = OUTLINED_FUNCTION_16_9();
      OUTLINED_FUNCTION_39_6(v15);

      v16 = OUTLINED_FUNCTION_15_9();
      v18 = OUTLINED_FUNCTION_46_4(v16, v17);
      if (v25)
      {
        if (v25 == 1)
        {
          OUTLINED_FUNCTION_44_4();
          OUTLINED_FUNCTION_49_4();
          sub_242A6FFE8(v12);
        }
        else
        {
          OUTLINED_FUNCTION_28_10(v18, v19);
        }
        v22 = OUTLINED_FUNCTION_16_9();
        OUTLINED_FUNCTION_6_19(v22);
        OUTLINED_FUNCTION_17_5();
        OUTLINED_FUNCTION_50_5();

      }
      else
      {
        OUTLINED_FUNCTION_28_10(v18, v19);
        v20 = OUTLINED_FUNCTION_16_9();
        OUTLINED_FUNCTION_6_19(v20);
        OUTLINED_FUNCTION_17_5();
        OUTLINED_FUNCTION_17_1();

        v10 = &v26;
        MEMORY[0x2494EC0CC]();
        OUTLINED_FUNCTION_42_5();
        if (v21)
          OUTLINED_FUNCTION_19_10();
        OUTLINED_FUNCTION_48_4();
        sub_242C4856C();
      }
    }
    a1 = (__n128 *)swift_bridgeObjectRelease();
    v12 = v26;
    v11 = v24;
  }
  if (v12 >> 62)
  {
    OUTLINED_FUNCTION_17_10();
    v23 = sub_242C48FC8();
    a1 = (__n128 *)OUTLINED_FUNCTION_34();
    v11 = v24;
    if (!v23)
      goto LABEL_18;
  }
  else if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_18;
  }
  if (qword_2572205A8 != -1)
  {
    v24 = v11;
    a1 = (__n128 *)swift_once();
    v11 = v24;
  }
  OUTLINED_FUNCTION_36_8(v11, (uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v24.n128_i64[0], v24.n128_i64[1], a10);
LABEL_18:
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_10_13();
}

void Tensor.scalarType.getter()
{
  __asm { BR              X10 }
}

void sub_242A9EBA0()
{
  OUTLINED_FUNCTION_1_0();
}

uint64_t Tensor.rank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152) + 16);
}

uint64_t Tensor.computeDevice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242A66290(*(_QWORD *)(*(_QWORD *)v1 + 16) + 168, a1);
}

uint64_t Tensor.placed(on:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v5 = *v2;
  Tensor.scalarType.getter();
  v8 = sub_242B090E0(v6, v7);
  if (v8 != 2)
    sub_242C19848(a1, v8 & 1);
  *a2 = v5;
  swift_retain();
  return Tensor.place(on:)(a1);
}

uint64_t Tensor.scalarCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 1;
  v3 = (uint64_t *)(v1 + 32);
  v4 = 1;
  while (1)
  {
    v5 = *v3++;
    result = v4 * v5;
    if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
      break;
    v4 = result;
    if (!--v2)
      return result;
  }
  __break(1u);
  return result;
}

void Tensor.isScalar.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152) + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v2)
        break;
      if (v1 == 1)
        return;
    }
    __break(1u);
  }
}

void Tensor.scalar<A>(as:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_242C49208();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_4_9();
  v14 = v13 - v12;
  v15 = *v4;
  v16 = *(_QWORD *)(*v4 + 16);
  if (*(_QWORD *)(*(_QWORD *)(v16 + 152) + 16))
  {
    do
    {
      OUTLINED_FUNCTION_1_11();
      if (!v19)
      {
        __break(1u);
        goto LABEL_10;
      }
    }
    while (v17 != 1);
    if (v18 == 1)
      goto LABEL_6;
LABEL_10:
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v23 = sub_242C480E0();
    MEMORY[0x2494EC0FC](v23, MEMORY[0x24BEE1768]);
    sub_242C48314();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34();
    sub_242C48314();
    sub_242C48F5C();
    __break(1u);
  }
  else
  {
LABEL_6:
    v26 = v11;
    v27 = a4;
    OUTLINED_FUNCTION_27_6();
    v29 = v15;
    Tensor.scalarType.getter();
    v21 = (*(_QWORD *(**)(uint64_t *__return_ptr))(v20 + 32))(&v29);
    if (v28 == v29)
    {
      MEMORY[0x24BDAC7A8](v21);
      *(&v25 - 4) = a2;
      *(&v25 - 3) = a3;
      v24 = a1;
      swift_retain();
      sub_242BC99DC((uint64_t)sub_242AA0B8C, (uint64_t)(&v25 - 6), a2);
      swift_release();
    }
    else
    {
      v22 = OUTLINED_FUNCTION_110();
      OUTLINED_FUNCTION_8_10(v22, v16);
      swift_release();
      OUTLINED_FUNCTION_49_4();
      v28 = v15;
      OUTLINED_FUNCTION_27_6();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v14, *MEMORY[0x24BEE38B8], v26);
      Tensor.cast(to:roundingRule:)();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v26);
      v28 = v29;
      Tensor.scalar<A>(as:)(a1, a2, a3);
      swift_release();
    }
    OUTLINED_FUNCTION_13_11();
  }
}

uint64_t Tensor.scalars<A>(as:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[7];
  uint64_t v21;
  uint64_t v22;

  v7 = sub_242C49208();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_9();
  v11 = v10 - v9;
  v12 = *v3;
  OUTLINED_FUNCTION_31_8();
  v22 = v12;
  Tensor.scalarType.getter();
  v14 = (*(_QWORD *(**)(uint64_t *__return_ptr))(v13 + 32))(&v22);
  if (v21 == v22)
  {
    MEMORY[0x24BDAC7A8](v14);
    *(_QWORD *)&v20[-32] = a2;
    *(_QWORD *)&v20[-24] = a3;
    *(_QWORD *)&v20[-16] = v12;
    v15 = sub_242C48650();
    OUTLINED_FUNCTION_91();
    sub_242BC99DC((uint64_t)sub_242AA0BC4, (uint64_t)&v20[-48], v15);
    OUTLINED_FUNCTION_135();
    return v22;
  }
  else
  {
    v17 = *(_QWORD *)(v12 + 16);
    v18 = OUTLINED_FUNCTION_110();
    OUTLINED_FUNCTION_8_10(v18, v17);
    OUTLINED_FUNCTION_135();
    swift_unknownObjectRelease();
    v21 = v12;
    OUTLINED_FUNCTION_31_8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BEE38B8], v7);
    Tensor.cast(to:roundingRule:)();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    v21 = v22;
    v16 = Tensor.scalars<A>(as:)(a1, a2, a3);
    swift_release();
  }
  return v16;
}

uint64_t sub_242A9F238()
{
  sub_242BC999C();
  OUTLINED_FUNCTION_135();
  return swift_deallocClassInstance();
}

uint64_t Tensor.place(on:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  uint64_t v50;
  void *v51;

  v2 = v1;
  sub_242A66290(*(_QWORD *)(*v1 + 16) + 168, (uint64_t)v49);
  if (v50)
  {
    v4 = sub_242B77228(v51, *(_QWORD *)(a1 + 40));
    sub_242A6FE24((uint64_t)v49, (uint64_t)v46);
    sub_242A6FE24(a1, (uint64_t)&v39);
    if ((v4 & 1) != 0)
    {
      v5 = v47;
      v6 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      v7 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v6 + 24))(&v39, v5, v6);
      sub_242A6FDE8((uint64_t)&v39);
      sub_242A6FDE8((uint64_t)v46);
      result = sub_242A6FDE8((uint64_t)v49);
      if ((v7 & 1) != 0)
        return result;
    }
    else
    {
      sub_242A6FDE8((uint64_t)&v39);
      sub_242A6FDE8((uint64_t)v46);
      sub_242A6FDE8((uint64_t)v49);
    }
  }
  else
  {
    sub_242A929A8((uint64_t)v49, (uint64_t *)&unk_257228D70);
  }
  v9 = *v2;
  v10 = *(_QWORD *)(*v2 + 16);
  v11 = OUTLINED_FUNCTION_110();
  v12 = OUTLINED_FUNCTION_8_10(v11, v10);
  v14 = v13;
  v15 = swift_release();
  if (qword_2572205A8 != -1)
    v15 = swift_once();
  v23 = qword_257259A10;
  v24 = *(_QWORD *)(v9 + 16);
  v46[0] = *(_QWORD *)(v24 + 152);
  LOBYTE(v39) = *(_BYTE *)(v24 + 160);
  OUTLINED_FUNCTION_40_4(v15, v16, v17, v18, v19, v20, v21, v22, v39, v40, v41, v42, v43, v44, v45);
  swift_unknownObjectRetain();
  sub_242C480E0();
  sub_242C035A0(v46, &v39, v49, v23, v12, v14);
  v26 = v25;
  sub_242A929A8((uint64_t)v49, (uint64_t *)&unk_257228D70);
  swift_bridgeObjectRelease();
  v27 = type metadata accessor for TensorRepresentation();
  OUTLINED_FUNCTION_40_4(v27, v28, v29, v30, v31, v32, v33, v34, v39, v40, v41, v42, v43, v44, v45);
  ObjectType = swift_getObjectType();
  v36 = swift_unknownObjectRetain();
  LOBYTE(v46[0]) = 1;
  v37 = sub_242BCBE34(v36, (uint64_t)v49, 0x100000000uLL, v27, ObjectType, v26);
  type metadata accessor for TensorHandle();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v37;
  OUTLINED_FUNCTION_91();
  sub_242BC995C();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_135();
  result = swift_release();
  *v2 = v38;
  return result;
}

uint64_t sub_242A9F4C0()
{
  uint64_t v0;
  char v1;

  v0 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_2_19(v0);
  swift_unknownObjectRetain();
  v1 = sub_242BC9ED4();
  OUTLINED_FUNCTION_20_10();
  return v1 & 1;
}

void sub_242A9F52C()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_2_19(v0);
  OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_25_6();
  sub_242BCA10C();
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_26_7();
}

uint64_t sub_242A9F570(uint64_t a1, uint64_t a2)
{
  return sub_242A9F5EC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_242BCA184);
}

void sub_242A9F58C()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_2_19(v0);
  OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_25_6();
  sub_242BCA260();
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_26_7();
}

uint64_t sub_242A9F5D0(uint64_t a1, uint64_t a2)
{
  return sub_242A9F5EC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_242BCA2D4);
}

uint64_t sub_242A9F5EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;

  v9 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_2_19(v9);
  OUTLINED_FUNCTION_21_9();
  v10 = a3(v4, v3, v5, a1, a2);
  swift_unknownObjectRelease();
  return v10;
}

uint64_t Tensor.resolve(descriptor:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  sub_242C480E0();
  v5 = OUTLINED_FUNCTION_110();
  sub_242BC9F84(v5, v4, v2, v3);
  OUTLINED_FUNCTION_135();
  return swift_unknownObjectRelease();
}

void TensorScalar.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 152) + 16))
    goto LABEL_6;
  do
  {
    OUTLINED_FUNCTION_1_11();
    if (!v8)
    {
      __break(1u);
      return;
    }
  }
  while (v6 != 1);
  if (v7 != 1)
  {
    OUTLINED_FUNCTION_17_1();
    v9 = 1;
  }
  else
  {
LABEL_6:
    Tensor.scalar<A>(as:)(a2, a2, a3, a4);
    OUTLINED_FUNCTION_17_1();
    v9 = 0;
  }
  __swift_storeEnumTagSinglePayload(a4, v9, 1, a2);
}

uint64_t sub_242A9F764@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!result)
    goto LABEL_17;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 152);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(v5 + 32);
    v8 = 1;
    v9 = *(_QWORD *)(v5 + 16);
    while (1)
    {
      v10 = *v7++;
      v11 = v8 * v10;
      if ((unsigned __int128)(v8 * (__int128)v10) >> 64 != (v8 * v10) >> 63)
        break;
      v8 = v11;
      if (!--v9)
        goto LABEL_8;
    }
    __break(1u);
  }
  else
  {
    v11 = 1;
LABEL_8:
    if ((unsigned __int128)(*(uint64_t *)(*(_QWORD *)(a3 - 8) + 72) * (__int128)v11) >> 64 != (*(_QWORD *)(*(_QWORD *)(a3 - 8) + 72)
                                                                                               * v11) >> 63)
      goto LABEL_16;
    if (!v6)
    {
LABEL_13:
      sub_242C4820C();
      v16 = sub_242C48218();
      MEMORY[0x2494EDE24](MEMORY[0x24BEE09D8], v16);
      result = sub_242C4865C();
      *a4 = result;
      return result;
    }
    v12 = (uint64_t *)(v5 + 32);
    v13 = 1;
    while (1)
    {
      v14 = *v12++;
      v15 = v13 * v14;
      if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
        break;
      v13 = v15;
      if (!--v6)
        goto LABEL_13;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t Tensor.withUnsafeBytes<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_91();
  v0 = OUTLINED_FUNCTION_55_3();
  sub_242BC99DC(v0, v1, v2);
  return OUTLINED_FUNCTION_135();
}

uint64_t Tensor.withUnsafeMutableBytes<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[7];
  char v22[4];

  v1 = v0;
  OUTLINED_FUNCTION_47_3();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    v3 = OUTLINED_FUNCTION_110();
    v4 = sub_242BC9F84(v3, v2, 0, 0);
    v6 = v5;
    swift_release();
    if (qword_2572205A8 != -1)
      swift_once();
    v7 = qword_257259A10;
    v8 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    v21[0] = *(_QWORD *)(v8 + 152);
    v22[0] = *(_BYTE *)(v8 + 160);
    v9 = v8 + 168;
    swift_unknownObjectRetain();
    sub_242C480E0();
    sub_242C035A0(v21, v22, v9, v7, v4, v6);
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = type metadata accessor for TensorRepresentation();
    sub_242A66290(*(_QWORD *)(*(_QWORD *)v1 + 16) + 168, (uint64_t)v21);
    ObjectType = swift_getObjectType();
    v14 = swift_unknownObjectRetain();
    v22[0] = 1;
    v15 = sub_242BCBE34(v14, (uint64_t)v21, 0x100000000uLL, v12, ObjectType, v11);
    type metadata accessor for TensorHandle();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v15;
    OUTLINED_FUNCTION_91();
    sub_242BC995C();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_135();
    *(_QWORD *)v1 = v16;
    swift_release();
  }
  OUTLINED_FUNCTION_91();
  v17 = OUTLINED_FUNCTION_55_3();
  sub_242BC99F8(v17, v18, v19);
  return OUTLINED_FUNCTION_135();
}

void ContiguousArray<A>.resolve(descriptor:)(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, __n128 a10)
{
  unint64_t *v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  unint64_t v26;

  v11 = *a1;
  v12 = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a2 + 16);
  if (v13)
  {
    OUTLINED_FUNCTION_37_7((uint64_t)a1, a2);
    swift_retain();
    for (i = 0; i != v13; ++i)
    {
      OUTLINED_FUNCTION_110();
      swift_retain();
      v15 = OUTLINED_FUNCTION_16_9();
      OUTLINED_FUNCTION_39_6(v15);

      v16 = OUTLINED_FUNCTION_15_9();
      v18 = OUTLINED_FUNCTION_46_4(v16, v17);
      if (v25)
      {
        if (v25 == 1)
        {
          OUTLINED_FUNCTION_44_4();
          OUTLINED_FUNCTION_49_4();
          sub_242A6FFE8(v12);
        }
        else
        {
          OUTLINED_FUNCTION_28_10(v18, v19);
        }
        v22 = OUTLINED_FUNCTION_16_9();
        OUTLINED_FUNCTION_6_19(v22);
        OUTLINED_FUNCTION_17_5();
        OUTLINED_FUNCTION_50_5();

      }
      else
      {
        OUTLINED_FUNCTION_28_10(v18, v19);
        v20 = OUTLINED_FUNCTION_16_9();
        OUTLINED_FUNCTION_6_19(v20);
        OUTLINED_FUNCTION_17_5();
        OUTLINED_FUNCTION_17_1();

        v10 = &v26;
        MEMORY[0x2494EC0CC]();
        OUTLINED_FUNCTION_42_5();
        if (v21)
          OUTLINED_FUNCTION_19_10();
        OUTLINED_FUNCTION_48_4();
        sub_242C4856C();
      }
    }
    a1 = (__n128 *)swift_release();
    v12 = v26;
    v11 = v24;
  }
  if (v12 >> 62)
  {
    OUTLINED_FUNCTION_17_10();
    v23 = sub_242C48FC8();
    a1 = (__n128 *)OUTLINED_FUNCTION_34();
    v11 = v24;
    if (!v23)
      goto LABEL_18;
  }
  else if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_18;
  }
  if (qword_2572205A8 != -1)
  {
    v24 = v11;
    a1 = (__n128 *)swift_once();
    v11 = v24;
  }
  OUTLINED_FUNCTION_36_8(v11, (uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v24.n128_i64[0], v24.n128_i64[1], a10);
LABEL_18:
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_10_13();
}

void Tensor.customMirror.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_242C493D0();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_9();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572229D8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_9();
  v10 = v9 - v8;
  v11 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FF8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v12 + 32) = 0x6570616873;
  *(_QWORD *)(v12 + 40) = 0xE500000000000000;
  *(_QWORD *)(v12 + 72) = &type metadata for TensorShape;
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(*(_QWORD *)(v11 + 16) + 152);
  *(_QWORD *)(v12 + 80) = 0x795472616C616373;
  *(_QWORD *)(v12 + 88) = 0xEA00000000006570;
  Tensor.scalarType.getter();
  v14 = v13;
  *(_QWORD *)(v12 + 120) = swift_getMetatypeMetadata();
  *(_QWORD *)(v12 + 96) = v14;
  v15 = *MEMORY[0x24BEE4388];
  v16 = sub_242C493C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v10, v15, v16);
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  swift_retain();
  sub_242C480E0();
  sub_242C4940C();
  OUTLINED_FUNCTION_13_11();
}

unint64_t sub_242A9FDF8(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_242A9FE08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x6570616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x795472616C616373 && a2 == 0xEA00000000006570;
    if (v6 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1635017060 && a2 == 0xE400000000000000;
      if (v7 || (sub_242C4925C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x8000000242C675E0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_242C4925C();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_242A9FFA8(uint64_t result)
{
  return result;
}

uint64_t sub_242A9FFB4(uint64_t result)
{
  return result;
}

uint64_t sub_242A9FFBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242A9FFEC + 4 * byte_242C4F2ED[a1]))(0x6570616873, 0xE500000000000000);
}

uint64_t sub_242A9FFEC()
{
  return 0x795472616C616373;
}

uint64_t sub_242AA0008()
{
  return 1635017060;
}

unint64_t sub_242AA0018()
{
  return 0xD000000000000012;
}

uint64_t sub_242AA0038(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A62840(a1, *v1);
}

unint64_t sub_242AA0040@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_242A9FDF8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_242AA0068@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_242A9FFB4(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_242AA0090()
{
  unsigned __int8 *v0;

  return sub_242A9FFBC(*v0);
}

uint64_t sub_242AA0098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242A9FE08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242AA00BC()
{
  unsigned __int8 *v0;

  return sub_242A9FFA8(*v0);
}

unint64_t sub_242AA00D8@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_242A9FDF8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_242AA00FC()
{
  sub_242AA0C00();
  return sub_242C494D8();
}

uint64_t sub_242AA0124()
{
  sub_242AA0C00();
  return sub_242C494E4();
}

uint64_t sub_242AA014C(uint64_t a1)
{
  return sub_242AA0184(a1, qword_2572229A8);
}

uint64_t sub_242AA0168(uint64_t a1)
{
  return sub_242AA0184(a1, qword_2572229C0);
}

uint64_t sub_242AA0184(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B00);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_9();
  v6 = v5 - v4;
  v7 = sub_242C48EB4();
  __swift_allocate_value_buffer(v7, a2);
  v8 = __swift_project_value_buffer(v7, (uint64_t)a2);
  sub_242C48E9C();
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v8, v6, v7);
  __break(1u);
  return result;
}

void Tensor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572229E0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_9();
  v9 = v8 - v7;
  v10 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242AA0C00();
  sub_242C49478();
  v24[0] = *(_QWORD *)(*(_QWORD *)(v10 + 16) + 152);
  LOBYTE(v21) = 0;
  sub_242AA0C3C();
  OUTLINED_FUNCTION_11_13();
  if (!v2)
  {
    v24[0] = v10;
    Tensor.scalarType.getter();
    (*(void (**)(_QWORD *__return_ptr))(v11 + 32))(v24);
    LOBYTE(v21) = 1;
    sub_242AA0C78();
    OUTLINED_FUNCTION_11_13();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v12 = sub_242C4943C();
    if (qword_257220530 != -1)
      swift_once();
    v13 = sub_242C48EB4();
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_2572229A8);
    sub_242A9E7C4(v14, v12, &v19);
    swift_bridgeObjectRelease();
    if (v20)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257222A08);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*((_QWORD *)&v22 + 1))
        {
          sub_242A64518(&v21, (uint64_t)v24);
          v15 = v25;
          v16 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          *(_QWORD *)&v21 = v10;
          v17 = sub_242C4907C();
          (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(v16 + 8))(&v21, v17, v15, v16);
          OUTLINED_FUNCTION_47();
          LOBYTE(v21) = 3;
          sub_242C49154();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
          goto LABEL_11;
        }
      }
      else
      {
        v23 = 0;
        v21 = 0u;
        v22 = 0u;
      }
    }
    else
    {
      sub_242A929A8((uint64_t)&v19, &qword_2572218D8);
      v21 = 0u;
      v22 = 0u;
      v23 = 0;
    }
    sub_242A929A8((uint64_t)&v21, &qword_257222A00);
    MEMORY[0x24BDAC7A8](v18);
    *((_QWORD *)&v19 - 2) = v9;
    OUTLINED_FUNCTION_91();
    sub_242A9F52C();
    OUTLINED_FUNCTION_135();
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9, v5);
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AA0548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v12[2];
  char v13;

  v4 = sub_242C47BA0();
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, _QWORD))(v6 + 104))(v8, *MEMORY[0x24BDCDB98]);
    v9 = MEMORY[0x2494EB754](a1, a2 - a1, v8);
    v11 = v10;
    v12[0] = v9;
    v12[1] = v10;
    v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572229E0);
    sub_242AA1014();
    sub_242C49184();
    return sub_242A69418(v9, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void Tensor.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257222A10);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_9();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242AA0C00();
  sub_242C49448();
  if (v2)
    goto LABEL_3;
  sub_242AA0CCC();
  OUTLINED_FUNCTION_5_20();
  v6 = v35;
  sub_242AA0D08();
  OUTLINED_FUNCTION_5_20();
  v7 = v35;
  LOBYTE(v41[0]) = 2;
  sub_242AA0D44();
  sub_242C49094();
  if (*((_QWORD *)&v35 + 1) >> 60 != 15)
  {
    *(_QWORD *)&v39 = v35;
    LOBYTE(v44) = v35;
    OUTLINED_FUNCTION_43_6();
    Tensor.init(shape:data:scalarType:on:)((uint64_t *)&v39, v19, v20, (unsigned __int8 *)&v44, (uint64_t)&v35);
    OUTLINED_FUNCTION_0_25();
    v21 = v41[0];
    goto LABEL_15;
  }
  LOBYTE(v35) = 3;
  v31 = sub_242C490A0();
  v32 = v7;
  v34 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_242C4943C();
  if (qword_257220538 != -1)
    goto LABEL_26;
  while (1)
  {
    v10 = sub_242C48EB4();
    v11 = __swift_project_value_buffer(v10, (uint64_t)qword_2572229C0);
    sub_242A9E7C4(v11, v9, &v39);
    swift_bridgeObjectRelease();
    if (!v40)
    {
      sub_242A929A8((uint64_t)&v39, &qword_2572218D8);
      v35 = 0u;
      v36 = 0u;
      v37 = 0;
LABEL_18:
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_41_7();
      sub_242A929A8((uint64_t)&v35, &qword_257222A30);
      v22 = sub_242C48CD4();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257222A38);
      *v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222A40);
      OUTLINED_FUNCTION_51_5();
      *(_QWORD *)&v35 = 0;
      *((_QWORD *)&v35 + 1) = 0xE000000000000000;
      sub_242C48C38();
      sub_242C48314();
      sub_242C48EA8();
      sub_242C48314();
      OUTLINED_FUNCTION_47();
      sub_242C48314();
      sub_242C48CC8();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26E0], v22);
      swift_willThrow();
      OUTLINED_FUNCTION_0_25();
      goto LABEL_3;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222A40);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v37 = 0;
      v35 = 0u;
      v36 = 0u;
      goto LABEL_18;
    }
    if (!*((_QWORD *)&v36 + 1))
      goto LABEL_18;
    sub_242A64518(&v35, (uint64_t)v41);
    v9 = v42;
    v12 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    v13 = *(_QWORD *)(v6 + 16);
    if (!v13)
      break;
    v14 = (uint64_t *)(v6 + 32);
    v15 = 1;
    v16 = v32;
    while (1)
    {
      v17 = *v14++;
      v18 = v15 * v17;
      if ((unsigned __int128)(v15 * (__int128)v17) >> 64 != (v15 * v17) >> 63)
        break;
      v15 = v18;
      if (!--v13)
        goto LABEL_20;
    }
    __break(1u);
LABEL_26:
    swift_once();
  }
  v18 = 1;
  v16 = v32;
LABEL_20:
  v30 = v12;
  if ((v16 - 1) > 0xA)
    v25 = 1;
  else
    v25 = qword_242C4F568[(char)(v16 - 1)];
  v26 = v25 * v18;
  if ((unsigned __int128)(v25 * (__int128)v18) >> 64 == (v25 * v18) >> 63)
  {
    OUTLINED_FUNCTION_51_5();
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 8))(v31, v34, v26);
    v29 = v28;
    v33 = v27;
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_41_7();
    v44 = v6;
    v38 = v32;
    OUTLINED_FUNCTION_43_6();
    Tensor.init(shape:data:scalarType:on:)(&v44, v33, v29, &v38, (uint64_t)&v35);
    OUTLINED_FUNCTION_0_25();
    v21 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
LABEL_15:
    *a2 = v21;
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    OUTLINED_FUNCTION_0_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_242AA0B64(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  Tensor.init(from:)(a1, a2);
}

void sub_242AA0B78(_QWORD *a1)
{
  Tensor.encode(to:)(a1);
}

uint64_t sub_242AA0B8C()
{
  return sub_242C484DC();
}

uint64_t sub_242AA0BC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_242A9F764(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16), a2);
}

uint64_t type metadata accessor for TensorHandle()
{
  return objc_opt_self();
}

unint64_t sub_242AA0C00()
{
  unint64_t result;

  result = qword_2572229E8;
  if (!qword_2572229E8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4F510, &type metadata for Tensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572229E8);
  }
  return result;
}

unint64_t sub_242AA0C3C()
{
  unint64_t result;

  result = qword_2572229F0;
  if (!qword_2572229F0)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_2572229F0);
  }
  return result;
}

unint64_t sub_242AA0C78()
{
  unint64_t result;

  result = qword_2572229F8;
  if (!qword_2572229F8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for ScalarType, &type metadata for ScalarType);
    atomic_store(result, (unint64_t *)&qword_2572229F8);
  }
  return result;
}

uint64_t sub_242AA0CB4(uint64_t a1, uint64_t a2)
{
  return sub_242AA0548(a1, a2);
}

unint64_t sub_242AA0CCC()
{
  unint64_t result;

  result = qword_257222A18;
  if (!qword_257222A18)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_257222A18);
  }
  return result;
}

unint64_t sub_242AA0D08()
{
  unint64_t result;

  result = qword_257222A20;
  if (!qword_257222A20)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for ScalarType, &type metadata for ScalarType);
    atomic_store(result, (unint64_t *)&qword_257222A20);
  }
  return result;
}

unint64_t sub_242AA0D44()
{
  unint64_t result;

  result = qword_257222A28;
  if (!qword_257222A28)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_257222A28);
  }
  return result;
}

ValueMetadata *type metadata accessor for Tensor()
{
  return &type metadata for Tensor;
}

uint64_t dispatch thunk of CustomTensorDataEncodingContainer.encode(_:atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CustomTensorDataDecodingContainer.decode(forKey:byteCount:atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t getEnumTagSinglePayload for Tensor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Tensor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242AA0E94 + 4 * byte_242C4F2F6[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242AA0EC8 + 4 * byte_242C4F2F1[v4]))();
}

uint64_t sub_242AA0EC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AA0ED0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AA0ED8);
  return result;
}

uint64_t sub_242AA0EE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AA0EECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242AA0EF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AA0EF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Tensor.CodingKeys()
{
  return &type metadata for Tensor.CodingKeys;
}

unint64_t sub_242AA0F18()
{
  unint64_t result;

  result = qword_257222AE8;
  if (!qword_257222AE8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4F4E8, &type metadata for Tensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222AE8);
  }
  return result;
}

unint64_t sub_242AA0F58()
{
  unint64_t result;

  result = qword_257222AF0;
  if (!qword_257222AF0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4F420, &type metadata for Tensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222AF0);
  }
  return result;
}

unint64_t sub_242AA0F98()
{
  unint64_t result;

  result = qword_257222AF8;
  if (!qword_257222AF8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C4F448, &type metadata for Tensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257222AF8);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_242AA1014()
{
  unint64_t result;

  result = qword_257222B08;
  if (!qword_257222B08)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_257222B08);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

id OUTLINED_FUNCTION_2_19(uint64_t a1)
{
  uint64_t v1;

  return sub_242BC9F84(a1, v1, 0, 0);
}

unint64_t OUTLINED_FUNCTION_4_20(uint64_t a1, uint64_t a2)
{
  return sub_242A61310(a1, a2);
}

uint64_t OUTLINED_FUNCTION_5_20()
{
  return sub_242C490D0();
}

id OUTLINED_FUNCTION_6_19(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1041));
}

id OUTLINED_FUNCTION_8_10(uint64_t a1, uint64_t a2)
{
  return sub_242BC9F84(a1, a2, 0, 0);
}

uint64_t OUTLINED_FUNCTION_9_16()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_16_9()
{
  return sub_242BCA40C();
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_19_10()
{
  return sub_242C485A8();
}

uint64_t OUTLINED_FUNCTION_20_10()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_24_7()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_28_10(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_242A6FF70((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_31_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_8(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __n128 a12)
{
  uint64_t v12;

  a12 = a1;
  return sub_242C049C0(v12, (uint64_t *)&a12);
}

uint64_t OUTLINED_FUNCTION_37_7(uint64_t a1, uint64_t a2)
{
  return a2;
}

id OUTLINED_FUNCTION_39_6(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 2760));
}

uint64_t OUTLINED_FUNCTION_40_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  return sub_242A6FE24(v15, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_41_7()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_43_6()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 - 176) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 208) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  *(_OWORD *)(v0 - 224) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_45_3()
{
  return sub_242A613F0();
}

uint64_t OUTLINED_FUNCTION_46_4(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return sub_242A6FF34(v2, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return sub_242C485F0();
}

uint64_t OUTLINED_FUNCTION_49_4()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_5()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_51_5()
{
  return sub_242C4907C();
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242AA12E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];
  uint64_t v25;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = sub_242B89308();
  sub_242A9E618(v5, a1);
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v24[2] = v8;
    v24[3] = v9;
    v11 = *(void (**)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B18);
    v11(&v25, sub_242AA1B48, v24, v12, ObjectType, v9);
    v13 = v25;
    LOBYTE(v25) = *(_BYTE *)(v2 + 144);
    sub_242C21A14();
    sub_242AA15D0(v14, v2, v13, v14, v15, (uint64_t)&v25);
    swift_bridgeObjectRelease();
    v16 = v25;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
    v17 = *(_QWORD *)(v16 + 16);
    v18 = swift_retain_n();
    v19 = sub_242BC9F84(v18, v17, 0, 0);
    v21 = v20;
    swift_release();
    *(_QWORD *)(v4 + 32) = v19;
    *(_QWORD *)(v4 + 40) = v21;
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v22 = xmmword_242C4F5C0;
    *(_BYTE *)(v22 + 16) = 2;
    swift_willThrow();
  }
  return v4;
}

void sub_242AA14A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t ObjectType;
  void (*v9)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  ObjectType = swift_getObjectType();
  v9 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 8);
  v9(&v12, ObjectType, a3);
  if (v12 != 2)
  {
    v12 = 0;
    v13 = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v9(&v12, ObjectType, a3);
    v12 = 0xD00000000000002CLL;
    v13 = 0x8000000242C676C0;
    v14 = 9;
    sub_242A59170();
  }
  if (a1)
    v10 = (a2 - a1) / 4;
  else
    v10 = 0;
  sub_242C37BCC(a1, v10);
  *a4 = v11;
}

uint64_t sub_242AA15D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int v40;
  char v41;

  v34 = a5;
  v30 = a3;
  v32 = a6;
  v28 = sub_242C48A64();
  v9 = *(_QWORD *)(v28 - 8);
  v10 = MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v27 - v14;
  v16 = *(_QWORD *)(a4 - 8);
  v17 = MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v27 - v20;
  v29 = a2 + 56;
  sub_242A587A8(a2 + 56, (uint64_t)&v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v28);
    goto LABEL_6;
  }
  v33 = a1;
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, a4);
  v31 = v16;
  v22 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v22(v21, v15, a4);
  sub_242A587A8(a2 + 96, (uint64_t)&v37);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v21, a4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v28);
LABEL_6:
    *(_QWORD *)&v37 = 0;
    *((_QWORD *)&v37 + 1) = 0xE000000000000000;
    sub_242C48C38();
    v36 = v37;
    sub_242C48314();
    swift_getMetatypeMetadata();
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242A587A8(v29, (uint64_t)&v37);
    __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v37 = v36;
    v41 = 9;
    sub_242A59170();
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, a4);
  v22(v19, v12, a4);
  *(_QWORD *)&v36 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)&v37 = v30;
  MEMORY[0x24BDAC7A8](v36);
  v23 = v34;
  *(&v27 - 6) = a4;
  *(&v27 - 5) = v23;
  *(&v27 - 4) = a2;
  *(&v27 - 3) = (uint64_t)v21;
  *(&v27 - 2) = (uint64_t)v19;
  sub_242C480E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B18);
  v24 = sub_242C48650();
  sub_242AA1B80();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v24);
  v35 = sub_242C48494();
  v40 = 0;
  v38 = 0u;
  v39 = 0u;
  v37 = 0u;
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12D8], v24);
  Tensor.init<A>(shape:scalars:scalarType:on:)();
  v25 = *(void (**)(char *, uint64_t))(v31 + 8);
  v25(v19, a4);
  return ((uint64_t (*)(char *, uint64_t))v25)(v21, a4);
}

uint64_t sub_242AA19FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a2 + 48);
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    v19 = 0;
    v20 = v5;
    MEMORY[0x24BDAC7A8](result);
    v15[2] = v7;
    v15[3] = v8;
    v16 = v9;
    v17 = v10;
    v18 = v11;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B28);
    v13 = sub_242AA1C14();
    result = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242AA1BC4, (uint64_t)v15, v12, a3, MEMORY[0x24BEE4078], v13, MEMORY[0x24BEE40A8], v14);
    *a4 = result;
  }
  return result;
}

uint64_t sub_242AA1AD0(uint64_t a1)
{
  return sub_242AA12E0(a1);
}

unint64_t sub_242AA1AE4(uint64_t a1)
{
  unint64_t result;

  result = sub_242AA1B08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242AA1B08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257222B10;
  if (!qword_257222B10)
  {
    v1 = type metadata accessor for OneHotOperation();
    result = MEMORY[0x2494EDE24](&unk_242C554DC, v1);
    atomic_store(result, (unint64_t *)&qword_257222B10);
  }
  return result;
}

void sub_242AA1B48(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_242AA14A0(a1, a2, *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_242AA1B60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_242AA19FC(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_242AA1B80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257222B20;
  if (!qword_257222B20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257222B18);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257222B20);
  }
  return result;
}

uint64_t sub_242AA1BC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;

  if (*a1 == *(_DWORD *)(v2 + 32))
    v3 = (_QWORD *)(v2 + 40);
  else
    v3 = (_QWORD *)(v2 + 48);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 16))(a2, *v3);
}

unint64_t sub_242AA1C14()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_257222B30;
  if (!qword_257222B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257222B28);
    v2 = sub_242AA1C80();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE1BD8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257222B30);
  }
  return result;
}

unint64_t sub_242AA1C80()
{
  unint64_t result;

  result = qword_257222B38;
  if (!qword_257222B38)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257222B38);
  }
  return result;
}

void sub_242AA1CBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  unsigned int *v40;
  uint64_t v41;
  uint64_t ObjectType;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 *v55;
  __n128 *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 *v61;
  __n128 *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD v89[4];
  int v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _DWORD *v111;
  uint64_t v112;
  uint64_t v113[3];
  char v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_13_1();
  v100 = v4;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_8_11();
  v101 = v6;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_8_11();
  v102 = v8;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v89 - v10;
  v103 = sub_242C47930();
  v107 = *(_QWORD *)(v103 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_13_1();
  v106 = v13;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_8_11();
  v109 = v15;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_64_0();
  v110 = v17;
  v112 = OUTLINED_FUNCTION_33_6();
  v108 = *(_QWORD *)(v112 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_13_1();
  v98 = v19;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v89 - v21;
  v23 = sub_242C47660();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v111 = (_DWORD *)((char *)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = sub_242B89308();
  sub_242A9E618(v26, a1);
  if (!v27)
    goto LABEL_6;
  v29 = v27;
  v30 = v28;
  v95 = v11;
  v31 = sub_242B89308();
  sub_242A9E618(v31, a1);
  v97 = v33;
  if (!v32)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v38 = 0xD000000000000015;
    v38[1] = 0x8000000242C67700;
    OUTLINED_FUNCTION_5_21((uint64_t)v38, 2);
    goto LABEL_37;
  }
  v34 = v32;
  *v111 = 0;
  (*(void (**)(void))(v24 + 104))();
  v35 = *(_QWORD *)(v1 + 152);
  v36 = *(unsigned __int8 *)(v1 + 160);
  v94 = v24;
  if (v36 == 2)
  {
    v37 = *MEMORY[0x24BEDF670];
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 104);
    v93(v22, v37, v112);
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 104);
    v93 = v39;
    if ((v36 & 1) != 0)
      v40 = (unsigned int *)MEMORY[0x24BEDF668];
    else
      v40 = (unsigned int *)MEMORY[0x24BEDF658];
    v39(v22, *v40, v112);
  }
  v41 = *(_QWORD *)(v1 + 120);
  ObjectType = swift_getObjectType();
  v96 = v41;
  sub_242C480E0();
  OUTLINED_FUNCTION_22_9();
  if (LOBYTE(v113[0]) > 0xCu || (OUTLINED_FUNCTION_40_5(), v43))
  {
    v82 = v111;
    sub_242B521E0();
    v85 = v84;
    v87 = v86;
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v88 = v85;
    v88[1] = v87;
    OUTLINED_FUNCTION_5_21((uint64_t)v88, 3);
    OUTLINED_FUNCTION_23_10();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v22, v112);
  }
  else
  {
    v105 = v22;
    OUTLINED_FUNCTION_22_9();
    v90 = LOBYTE(v113[0]);
    OUTLINED_FUNCTION_21_10();
    v120 = v113[0];
    v92 = TensorShape.subscript.getter(v35);
    v44 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_17(v44, v45, v46);
    v104 = v34;
    v91 = v23;
    if (v47 > 1)
    {
      OUTLINED_FUNCTION_9_17(v47, v48, v49);
      if (v47 < 0)
        goto LABEL_42;
      v51 = v47;
      if (v47)
      {
        v34 = 0;
        v52 = 1;
        while (v51 != v34)
        {
          if (v35 != v34)
          {
            OUTLINED_FUNCTION_21_10();
            v50 = *(_QWORD *)(v120 + 16);
            if (v34 >= v50)
              goto LABEL_43;
            v53 = *(_QWORD *)(v120 + 8 * v34 + 32);
            v47 = swift_bridgeObjectRelease();
            v50 = v52 * v53;
            if ((unsigned __int128)(v52 * (__int128)v53) >> 64 != (v52 * v53) >> 63)
              goto LABEL_41;
            v52 *= v53;
          }
          if (v51 == ++v34)
            goto LABEL_25;
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        v113[1] = 0;
        v113[2] = 0;
        v113[0] = v34;
        v114 = -1;
        v116 = 0;
        v117 = 0;
        v115 = v50;
        v118 = -1;
        v119 = 4;
        OUTLINED_FUNCTION_4_18();
      }
    }
    v52 = 1;
LABEL_25:
    OUTLINED_FUNCTION_9_17(v47, v48, v49);
    if (v54 < 2)
    {
      OUTLINED_FUNCTION_21_10();
      v56 = (__n128 *)v113[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v55 = (__n128 *)OUTLINED_FUNCTION_5_4();
      v56 = OUTLINED_FUNCTION_31_9(v55, (__n128)xmmword_242C4B7F0);
    }
    v57 = v97;
    v113[0] = (uint64_t)v56;
    OUTLINED_FUNCTION_1_7((uint64_t)v113, v110);
    v58 = swift_getObjectType();
    sub_242BC8254(v58, v57, v59);
    if (v60 < 2)
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v57 + 16))(v113, v58, v57);
      v62 = (__n128 *)v113[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v61 = (__n128 *)OUTLINED_FUNCTION_5_4();
      v62 = OUTLINED_FUNCTION_31_9(v61, (__n128)xmmword_242C4B7F0);
    }
    v63 = (uint64_t)v102;
    v113[0] = (uint64_t)v62;
    OUTLINED_FUNCTION_1_7((uint64_t)v113, v109);
    v64 = v98;
    v65 = v112;
    v93(v98, *MEMORY[0x24BEDF670], v112);
    v66 = sub_242C476FC();
    v108 = *(_QWORD *)(v108 + 8);
    ((void (*)(char *, uint64_t))v108)(v64, v65);
    v89[3] = ObjectType;
    v89[2] = v29;
    v89[1] = v30;
    if ((v66 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v67 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v67 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v67 + 32) = v52;
    }
    else
    {
      v67 = MEMORY[0x24BEE4AF8];
    }
    v68 = v101;
    v69 = v106;
    v70 = v96;
    v113[0] = v67;
    OUTLINED_FUNCTION_1_7((uint64_t)v113, v106);
    type metadata accessor for NativeTensorStorage();
    v113[0] = v70;
    LOBYTE(v120) = v90;
    sub_242C480E0();
    v71 = v99;
    sub_242B1D8D0(v113, (uint64_t)&v120, 0);
    v73 = v72;
    v103 = v71;
    v74 = (uint64_t)v95;
    OUTLINED_FUNCTION_47_4((uint64_t)v95, v110);
    OUTLINED_FUNCTION_10_14(v74, 0);
    OUTLINED_FUNCTION_47_4(v63, v109);
    OUTLINED_FUNCTION_10_14(v63, 0);
    OUTLINED_FUNCTION_47_4(v68, v69);
    OUTLINED_FUNCTION_10_14(v68, 0);
    v75 = v100;
    v76 = OUTLINED_FUNCTION_10_14(v100, 1);
    v102 = v89;
    v77 = MEMORY[0x24BDAC7A8](v76);
    v78 = v105;
    v89[-4] = v111;
    v89[-3] = v78;
    v89[-2] = v52;
    MEMORY[0x24BDAC7A8](v77);
    v79 = v97;
    v89[-12] = v104;
    v89[-11] = v79;
    v89[-10] = v63;
    v89[-9] = v73;
    v89[-8] = &off_251387678;
    v89[-7] = v68;
    v89[-6] = 0;
    v89[-5] = 0;
    v89[-4] = v75;
    v89[-3] = sub_242AA3AF8;
    v89[-2] = v80;
    swift_retain();
    v81 = v103;
    sub_242BF6310((uint64_t)sub_242AA3B14, (uint64_t)&v89[-14], MEMORY[0x24BEE4AE0] + 8, (uint64_t)&v121);
    if (!v81)
    {
      swift_release();
      OUTLINED_FUNCTION_20_11();
      sub_242A6AB60(v68);
      sub_242A6AB60(v63);
      sub_242A6AB60(v74);
      OUTLINED_FUNCTION_11_14(v106);
      OUTLINED_FUNCTION_11_14(v109);
      OUTLINED_FUNCTION_11_14(v110);
      OUTLINED_FUNCTION_23_10();
      ((void (*)(char *, uint64_t))v108)(v105, v112);
      (*(void (**)(_DWORD *, uint64_t))(v94 + 8))(v111, v91);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v83 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v83 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v83 + 32) = v73;
      *(_QWORD *)(v83 + 40) = &off_251387678;
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_46_5();
      goto LABEL_37;
    }
    swift_release_n();
    OUTLINED_FUNCTION_20_11();
    sub_242A6AB60(v68);
    sub_242A6AB60(v63);
    sub_242A6AB60(v74);
    OUTLINED_FUNCTION_11_14(v106);
    OUTLINED_FUNCTION_11_14(v109);
    OUTLINED_FUNCTION_11_14(v110);
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_46_5();
    swift_unknownObjectRelease();
    v23 = v91;
    v82 = v111;
    ((void (*)(char *, uint64_t))v108)(v105, v112);
  }
  (*(void (**)(_DWORD *, uint64_t))(v94 + 8))(v82, v23);
LABEL_37:
  OUTLINED_FUNCTION_0_9();
}

void sub_242AA25C0(uint64_t a1)
{
  sub_242AA1CBC(a1);
}

void sub_242AA25D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  void (*v34)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  _DWORD *v39;
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  uint64_t v42;
  void (*v43)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  void (*v44)(void);
  uint64_t v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  unsigned int *v50;
  unint64_t ObjectType;
  void (*v52)(uint64_t *__return_ptr, unint64_t, _DWORD *);
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(uint64_t *__return_ptr, unint64_t, _DWORD *);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  uint64_t v97;
  void (*v98)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  uint64_t v99;
  uint64_t v100;
  void (*v101)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v102;
  char **v103;
  uint64_t v104;
  _QWORD *v105;
  void (*v106)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  char *v107;
  int v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  unsigned int v111;
  void (*v112)(void);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  void (*v117)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  uint64_t v118;
  _DWORD *v119;
  uint64_t v120;
  void (*v121)(uint64_t *__return_ptr, unint64_t, _DWORD *);
  uint64_t v122;
  uint64_t v123;
  _DWORD *v124;
  void (*v125)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t *__return_ptr, uint64_t, _DWORD *);
  uint64_t v131;
  void (*v132)(uint64_t *__return_ptr, unint64_t, _DWORD *);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139[3];
  char v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char v145;
  uint64_t v146;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_1();
  v122 = v3;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_8_11();
  v123 = v5;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_8_11();
  v128 = v7;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_8_11();
  v129 = v9;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_64_0();
  v127 = v11;
  v126 = sub_242C47930();
  v131 = *(_QWORD *)(v126 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_13_1();
  v125 = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v13;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_8_11();
  v133 = v15;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_8_11();
  v134 = v17;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_64_0();
  v135 = v19;
  v20 = OUTLINED_FUNCTION_33_6();
  v136 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_9_3();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_64_0();
  v138 = v25;
  v26 = sub_242C47660();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_13_1();
  v124 = v28;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v106 - v30;
  v32 = sub_242B89308();
  OUTLINED_FUNCTION_45_4(v32);
  if (!v33)
    goto LABEL_9;
  v116 = v34;
  v130 = v33;
  v119 = v31;
  v120 = v27;
  v35 = sub_242B89308();
  OUTLINED_FUNCTION_45_4(v35);
  if (!v36)
  {
LABEL_8:
    swift_unknownObjectRelease();
LABEL_9:
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v48 = 0xD00000000000001ALL;
    v48[1] = 0x8000000242C67720;
    OUTLINED_FUNCTION_5_21((uint64_t)v48, 2);
    goto LABEL_43;
  }
  v38 = v36;
  v39 = v37;
  v40 = sub_242B89308();
  OUTLINED_FUNCTION_45_4(v40);
  if (!v41)
  {
    OUTLINED_FUNCTION_18_10();
    goto LABEL_8;
  }
  v43 = v41;
  v114 = v42;
  *v119 = 0;
  v44 = *(void (**)(void))(v120 + 104);
  v111 = *MEMORY[0x24BEDF5B8];
  v112 = v44;
  v44();
  v45 = *(_QWORD *)(v1 + 136);
  v46 = *(unsigned __int8 *)(v1 + 144);
  v117 = v43;
  if (v46 == 2)
  {
    v47 = *MEMORY[0x24BEDF670];
    v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 104);
    v110(v138, v47, v20);
  }
  else
  {
    v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 104);
    v110 = v49;
    if ((v46 & 1) != 0)
      v50 = (unsigned int *)MEMORY[0x24BEDF668];
    else
      v50 = (unsigned int *)MEMORY[0x24BEDF658];
    v49(v138, *v50, v20);
  }
  v115 = v26;
  ObjectType = swift_getObjectType();
  v52 = (void (*)(uint64_t *__return_ptr, unint64_t, _DWORD *))*((_QWORD *)v39 + 1);
  v52(v139, ObjectType, v39);
  if (LOBYTE(v139[0]) > 0xCu || (OUTLINED_FUNCTION_40_5(), v53))
  {
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_35_8();
    OUTLINED_FUNCTION_24_1();
    *v105 = v24;
    v105[1] = v52;
    OUTLINED_FUNCTION_5_21((uint64_t)v105, 3);
    OUTLINED_FUNCTION_26_8();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_18_10();
    (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v138, v20);
  }
  else
  {
    v106 = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v52;
    v52(v139, ObjectType, v39);
    v108 = LOBYTE(v139[0]);
    v132 = (void (*)(uint64_t *__return_ptr, unint64_t, _DWORD *))*((_QWORD *)v39 + 2);
    v132(v139, ObjectType, v39);
    v146 = v139[0];
    v109 = TensorShape.subscript.getter(v45);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_11(ObjectType, v54, v55);
    v137 = ObjectType;
    v118 = v20;
    if (v58 > 1)
    {
      OUTLINED_FUNCTION_17_11(ObjectType, v56, v57);
      if (v59 < 0)
        goto LABEL_48;
      v61 = v59;
      if (v59)
      {
        ObjectType = 0;
        v62 = 1;
        while (v61 != ObjectType)
        {
          if (v45 != ObjectType)
          {
            OUTLINED_FUNCTION_16_10(v137);
            v60 = *(_QWORD *)(v146 + 16);
            if (ObjectType >= v60)
              goto LABEL_49;
            v63 = *(_QWORD *)(v146 + 8 * ObjectType + 32);
            swift_bridgeObjectRelease();
            v60 = v62 * v63;
            if ((unsigned __int128)(v62 * (__int128)v63) >> 64 != (v62 * v63) >> 63)
              goto LABEL_47;
            v62 *= v63;
          }
          if (v61 == ++ObjectType)
            goto LABEL_28;
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        v139[1] = 0;
        v139[2] = 0;
        v139[0] = ObjectType;
        v140 = -1;
        v142 = 0;
        v143 = 0;
        v141 = v60;
        v144 = -1;
        v145 = 4;
        OUTLINED_FUNCTION_4_18();
      }
    }
    v62 = 1;
LABEL_28:
    v64 = v137;
    OUTLINED_FUNCTION_17_11(v137, v56, v57);
    if (v65 < 2)
    {
      OUTLINED_FUNCTION_16_10(v64);
      v66 = v139[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v66 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v66 + 16) = xmmword_242C4B7F0;
      v67 = v109;
      *(_QWORD *)(v66 + 32) = v62;
      *(_QWORD *)(v66 + 40) = v67;
    }
    v68 = v135;
    v139[0] = v66;
    OUTLINED_FUNCTION_1_7((uint64_t)v139, v135);
    v69 = swift_getObjectType();
    v70 = v114;
    sub_242BC8254(v69, v114, v71);
    if (v72 < 2)
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v70 + 16))(v139, v69, v70);
      v73 = v139[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v73 = OUTLINED_FUNCTION_5_4();
      *(_OWORD *)(v73 + 16) = xmmword_242C4B7F0;
      v74 = v109;
      *(_QWORD *)(v73 + 32) = v62;
      *(_QWORD *)(v73 + 40) = v74;
    }
    v139[0] = v73;
    OUTLINED_FUNCTION_1_7((uint64_t)v139, v134);
    v75 = v118;
    v110((uint64_t)v24, *MEMORY[0x24BEDF670], v118);
    v76 = sub_242C476FC();
    v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 8);
    ((void (*)(char *, uint64_t))v110)(v24, v75);
    v113 = v38;
    v107 = v24;
    if ((v76 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v77 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v77 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v77 + 32) = v62;
    }
    else
    {
      v77 = MEMORY[0x24BEE4AF8];
    }
    v78 = v133;
    v139[0] = v77;
    OUTLINED_FUNCTION_1_7((uint64_t)v139, v133);
    v109 = sub_242C47978();
    OUTLINED_FUNCTION_39_7();
    v79 = (uint64_t)v125;
    v80 = v68;
    v81 = v126;
    OUTLINED_FUNCTION_13_12((uint64_t)v125, v80);
    OUTLINED_FUNCTION_37_8();
    OUTLINED_FUNCTION_39_7();
    OUTLINED_FUNCTION_13_12(v79, v78);
    OUTLINED_FUNCTION_37_8();
    v82 = v124;
    *v124 = 0;
    ((void (*)(_DWORD *, _QWORD, uint64_t))v112)(v82, v111, v115);
    v83 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v107, v138, v118);
    sub_242C48A28();
    sub_242C489B0();
    v136 = sub_242C4796C();
    if (v136)
    {
      type metadata accessor for NativeTensorStorage();
      v84 = v137;
      OUTLINED_FUNCTION_16_10(v137);
      v106(&v146, v84, v39);
      v85 = v121;
      sub_242B1D8D0(v139, (uint64_t)&v146, 0);
      v125 = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v86;
      v132 = v85;
      v87 = v127;
      v88 = v135;
      OUTLINED_FUNCTION_13_12(v127, v135);
      OUTLINED_FUNCTION_4_21(v87);
      v89 = v129;
      OUTLINED_FUNCTION_13_12(v129, v134);
      OUTLINED_FUNCTION_4_21(v89);
      v90 = v128;
      OUTLINED_FUNCTION_13_12(v128, v133);
      OUTLINED_FUNCTION_4_21(v90);
      v91 = v123;
      OUTLINED_FUNCTION_13_12(v123, v88);
      OUTLINED_FUNCTION_4_21(v91);
      v92 = v122;
      v93 = __swift_storeEnumTagSinglePayload(v122, 1, 1, v81);
      v124 = &v106;
      v94 = MEMORY[0x24BDAC7A8](v93);
      *(&v106 - 2) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v136;
      *(&v106 - 1) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v62;
      MEMORY[0x24BDAC7A8](v94);
      v95 = v114;
      *(&v106 - 14) = v117;
      *(&v106 - 13) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v95;
      v96 = v130;
      *(&v106 - 12) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v89;
      *(&v106 - 11) = v96;
      *(&v106 - 10) = v116;
      *(&v106 - 9) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v90;
      v97 = (uint64_t)v125;
      *(&v106 - 8) = v125;
      *(&v106 - 7) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))&off_251387678;
      *(&v106 - 6) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v91;
      *(&v106 - 5) = 0;
      *(&v106 - 4) = 0;
      *(&v106 - 3) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))v92;
      *(&v106 - 2) = (void (*)(uint64_t *__return_ptr, uint64_t, _DWORD *))sub_242AA3C08;
      *(&v106 - 1) = v98;
      v99 = v97;
      swift_retain();
      v100 = v127;
      v101 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v132;
      sub_242BF6310((uint64_t)sub_242AA3C20, (uint64_t)(&v106 - 16), MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
      if (!v101)
      {
        swift_release();
        OUTLINED_FUNCTION_28_11();
        sub_242A6AB60(v91);
        sub_242A6AB60(v128);
        sub_242A6AB60(v129);
        sub_242A6AB60(v100);
        OUTLINED_FUNCTION_42_6(v133);
        OUTLINED_FUNCTION_42_6(v134);
        OUTLINED_FUNCTION_42_6(v135);
        swift_release();
        ((void (*)(uint64_t, uint64_t))v110)(v138, v118);
        (*(void (**)(_DWORD *, uint64_t))(v120 + 8))(v119, v115);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
        v104 = OUTLINED_FUNCTION_5_4();
        *(_OWORD *)(v104 + 16) = xmmword_242C4B7D0;
        *(_QWORD *)(v104 + 32) = v99;
        *(_QWORD *)(v104 + 40) = &off_251387678;
        OUTLINED_FUNCTION_18_10();
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_26_8();
        goto LABEL_43;
      }
      swift_release_n();
      OUTLINED_FUNCTION_28_11();
      sub_242A6AB60(v91);
      sub_242A6AB60(v128);
      sub_242A6AB60(v129);
      sub_242A6AB60(v100);
      OUTLINED_FUNCTION_44_5(v133);
      OUTLINED_FUNCTION_44_5(v134);
      OUTLINED_FUNCTION_44_5(v135);
      OUTLINED_FUNCTION_26_8();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_18_10();
      swift_release();
      v102 = v118;
      v39 = v119;
    }
    else
    {
      OUTLINED_FUNCTION_32_7();
      OUTLINED_FUNCTION_35_8();
      OUTLINED_FUNCTION_24_1();
      *v103 = v83;
      v103[1] = (char *)v79;
      OUTLINED_FUNCTION_5_21((uint64_t)v103, 4);
      OUTLINED_FUNCTION_43_7(v133);
      OUTLINED_FUNCTION_43_7(v134);
      OUTLINED_FUNCTION_43_7(v135);
      OUTLINED_FUNCTION_26_8();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_18_10();
      v102 = v118;
    }
    ((void (*)(uint64_t, uint64_t))v110)(v138, v102);
  }
  (*(void (**)(_DWORD *, uint64_t))(v120 + 8))(v39, v115);
LABEL_43:
  OUTLINED_FUNCTION_0_9();
}

void sub_242AA3030()
{
  sub_242AA25D4();
}

uint64_t sub_242AA3044(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257222B40, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyGradientOperation, (uint64_t)&unk_242C62B2C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA3080(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257222B48, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyOperation, (uint64_t)&unk_242C62B2C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA30BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a7;
  v32 = a6;
  v28 = a4;
  v29 = a2;
  v31 = a1;
  v9 = sub_242C47708();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_242C47660();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C47978();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, v13);
  v17 = v9;
  v18 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v32, v17);
  sub_242C48A28();
  sub_242C489B0();
  v19 = (void *)sub_242C4796C();
  if (v19)
  {
    LOBYTE(v26) = 1;
    sub_242B52420(v19, v30, v18, 0, 1, v29, 0, 1, a3, 0, v26, v28);
    return swift_release();
  }
  else
  {
    sub_242B521E0();
    v22 = v21;
    v24 = v23;
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v25 = v22;
    *(_QWORD *)(v25 + 8) = v24;
    *(_BYTE *)(v25 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_242AA3294(uint64_t a1, uint64_t a2, const void *a3, const void *a4, uint64_t a5, uint64_t a6, size_t a7)
{
  uint64_t v7;
  const void *v15;
  uint64_t v16;
  uint64_t result;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[11];
  uint64_t v22;
  BNNSNDArrayDescriptor v23;
  BNNSNDArrayDescriptor __dst;
  _BYTE v25[8];
  _BYTE v26[8];
  const void *v27;
  const void *v28[3];

  v28[1] = *(const void **)MEMORY[0x24BDAC8D0];
  sub_242AA3D00(a1 + 136, (uint64_t)v26, &qword_257222B58);
  sub_242AA3D00((uint64_t)v26, (uint64_t)&v27, &qword_257222B58);
  v15 = v27;
  if (!v27
    || (v22 = v7,
        sub_242AA3D00(a2 + 136, (uint64_t)v25, &qword_257222B58),
        sub_242AA3D00((uint64_t)v25, (uint64_t)v28, &qword_257222B58),
        !v28[0]))
  {
    v18 = (unsigned int *)MEMORY[0x24BEDFA08];
    goto LABEL_7;
  }
  memcpy(&__dst, a3, sizeof(__dst));
  v21[10] = v21;
  memcpy(&v23, a4, sizeof(v23));
  v21[8] = a3;
  v16 = v22;
  result = sub_242B54B64(&v23, &__dst, a6, a7, v15, 0, 1, a1, (uint64_t)a4, v28[0], 0, 1, a2, a5, 0, 1);
  if (!v16 && (_DWORD)result)
  {
    v18 = (unsigned int *)MEMORY[0x24BEDF9F8];
LABEL_7:
    v19 = sub_242C478DC();
    sub_242A8A510((unint64_t *)&qword_257222B60, (uint64_t (*)(uint64_t))MEMORY[0x24BEDFA10], MEMORY[0x24BEDFA18]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, *v18, v19);
    return swift_willThrow();
  }
  return result;
}

void sub_242AA3480(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[184];

  OUTLINED_FUNCTION_7_15(a1, a2, a3, a4, a5, a6, a7, a8, v23, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44,
    v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62,
    v64,
    v66,
    v68,
    v70[0]);
  v8 = sub_242AA3C00((uint64_t)v70);
  v15 = OUTLINED_FUNCTION_38_6(v8, v9, &qword_257222B50, v10, v11, v12, v13, v14, v24, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45,
          v47,
          v49,
          v51,
          v53,
          v55,
          v57,
          v59,
          v61,
          v63,
          v65,
          v67,
          v69,
          v70[0]);
  OUTLINED_FUNCTION_29_6(v15, v16, v17, v18, v19, v20, v21, v22, v25);
  OUTLINED_FUNCTION_15_10();
}

void sub_242AA34BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_27_7();
  v17 = v16;
  v19 = v18;
  OUTLINED_FUNCTION_25_7();
  v22 = v15;
  v23 = v14;
  v24 = v13;
  v25 = v12;
  v26 = v20;
  v27 = a11;
  v28 = a12;
  v29 = v17;
  OUTLINED_FUNCTION_41_8((uint64_t)sub_242AA3B40, (uint64_t)v21, MEMORY[0x24BEE4AE0] + 8, v19);
}

void sub_242AA3558(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8)
{
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_getObjectType();
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a7;
  v20 = a8;
  v21 = a1;
  sub_242BF6310((uint64_t)sub_242AA3B68, (uint64_t)v14, MEMORY[0x24BEE4AE0] + 8, a6);
}

uint64_t sub_242AA3608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _BYTE *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t ObjectType;
  _QWORD v14[4];
  _QWORD v15[7];
  _BYTE v16[184];
  _BYTE v17[192];

  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  v15[6] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v14[2] = sub_242AA3B8C;
    v14[3] = v15;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3BE8, (uint64_t)v14, MEMORY[0x24BEE4AE0] + 8, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_242AA3BBC(v16);
    sub_242AA3D00((uint64_t)v16, (uint64_t)v17, &qword_257222B50);
    return a3(a5, a6, a1, v17);
  }
}

__n128 sub_242AA3754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 result;
  __int128 v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_27_7();
  v18 = v17;
  v20 = v19;
  OUTLINED_FUNCTION_25_7();
  v24 = v16;
  v25 = v15;
  v26 = v14;
  v27 = v13;
  v28 = v22;
  v29 = a11;
  v30 = a12;
  v31 = a13;
  v32 = v18;
  OUTLINED_FUNCTION_41_8((uint64_t)sub_242AA3C54, (uint64_t)v23, MEMORY[0x24BEE4AE0] + 8, v20);
  return result;
}

__n128 sub_242AA3810@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, __int128 a7, __int128 a8, uint64_t a9)
{
  __n128 result;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  swift_getObjectType();
  v17 = a2;
  v18 = a3;
  v19 = a4;
  v20 = a5;
  v21 = a7;
  v22 = a8;
  v23 = a9;
  v24 = a1;
  sub_242BF6310((uint64_t)sub_242AA3C80, (uint64_t)v16, MEMORY[0x24BEE4AE0] + 8, a6);
  return result;
}

__n128 sub_242AA38E0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, __int128 a7, uint64_t a8)
{
  __n128 result;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  swift_getObjectType();
  v16 = a2;
  v17 = a3;
  v18 = a4;
  v19 = a5;
  v20 = a7;
  v21 = a8;
  v22 = a1;
  sub_242BF6310((uint64_t)sub_242AA3CAC, (uint64_t)v15, MEMORY[0x24BEE4AE0] + 8, a6);
  return result;
}

uint64_t sub_242AA39A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t ObjectType;
  _QWORD v14[5];
  uint64_t v15;
  _QWORD v16[9];
  _BYTE v17[184];
  _BYTE v18[192];

  v15 = a7;
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a8;
  v16[7] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v14[2] = sub_242AA3CD0;
    v14[3] = v16;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v14, MEMORY[0x24BEE4AE0] + 8, v15);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_242AA3BBC(v17);
    sub_242AA3D00((uint64_t)v17, (uint64_t)v18, &qword_257222B50);
    return a3(a5, a6, a8, a1, v18);
  }
}

uint64_t sub_242AA3AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_242AA30BC(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

void sub_242AA3B14()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OUTLINED_FUNCTION_30_7();
  sub_242AA34BC(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

void sub_242AA3B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_48_5();
  sub_242AA3558(v1, v2, v3, v4, v5, v6, v7, *(_QWORD *)(v0 + 80));
}

uint64_t sub_242AA3B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242AA3608(a1, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2);
}

uint64_t sub_242AA3B8C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v1 + 16))(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

void sub_242AA3BBC(_BYTE *a1)
{
  bzero(a1, 0xB0uLL);
  a1[176] = 1;
}

void sub_242AA3BE8(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;

  sub_242AA3480(a1, *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), a4, a5, a6, a7, a8);
}

uint64_t sub_242AA3C00(uint64_t result)
{
  *(_BYTE *)(result + 176) = 0;
  return result;
}

uint64_t sub_242AA3C08(uint64_t a1, uint64_t a2, const void *a3, const void *a4, uint64_t a5)
{
  uint64_t v5;

  return sub_242AA3294(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

double sub_242AA3C20()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  double result;

  v1 = OUTLINED_FUNCTION_24_8();
  *(_QWORD *)&result = sub_242AA3754(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v10, *(_OWORD *)(v0 + 104), *(_QWORD *)(v0 + 120)).n128_u64[0];
  return result;
}

double sub_242AA3C54()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  double result;

  v1 = OUTLINED_FUNCTION_24_8();
  *(_QWORD *)&result = sub_242AA3810(v2, v3, v4, v5, v6, v7, *(_OWORD *)&v1, v8, *(_QWORD *)(v0 + 104)).n128_u64[0];
  return result;
}

double sub_242AA3C80()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v1 = OUTLINED_FUNCTION_30_7();
  *(_QWORD *)&result = sub_242AA38E0(v2, v3, v4, v5, v6, v7, *(_OWORD *)&v1, *(_QWORD *)(v0 + 88)).n128_u64[0];
  return result;
}

uint64_t sub_242AA3CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_48_5();
  return sub_242AA39A4(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_242AA3CD0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(v1 + 16))(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_242AA3D00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_242AA3D44(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_242AA3BE8(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_4_21(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_5_21@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 16) = a2;
  return swift_willThrow();
}

void *OUTLINED_FUNCTION_7_15(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char __dst)
{
  return memcpy(&__dst, __src, 0xB0uLL);
}

void OUTLINED_FUNCTION_9_17(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_242BC8254(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_10_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_11_14(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_13_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_16_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 208))(a1, v2);
}

void OUTLINED_FUNCTION_17_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_242BC8254(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_9()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_24_8()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_27_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_28_11()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_29_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *);

  return v9(&a9);
}

__n128 OUTLINED_FUNCTION_30_7()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 72);
}

__n128 *OUTLINED_FUNCTION_31_9(__n128 *result, __n128 a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  result[1] = a2;
  v4 = *(_QWORD *)(v3 - 368);
  result[2].n128_u64[0] = v2;
  result[2].n128_u64[1] = v4;
  return result;
}

void OUTLINED_FUNCTION_32_7()
{
  sub_242B521E0();
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  return sub_242C47708();
}

unint64_t OUTLINED_FUNCTION_35_8()
{
  return sub_242A6A5B0();
}

uint64_t OUTLINED_FUNCTION_37_8()
{
  return sub_242C489C8();
}

uint64_t OUTLINED_FUNCTION_38_6(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  return sub_242AA3D00((uint64_t)&a32, (uint64_t)&a9, a3);
}

void OUTLINED_FUNCTION_39_7()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 264) = v1;
  sub_242B526F4();
}

void OUTLINED_FUNCTION_41_8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_242BF6310(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_42_6(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_43_7(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_44_5(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_45_4(uint64_t a1)
{
  uint64_t v1;

  sub_242A9E618(a1, v1);
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_47_4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_242AA3F88()
{
  return sub_242C477F8();
}

void sub_242AA3F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v50 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v60 = (uint64_t)v50 - v10;
  v11 = sub_242C47930();
  v63 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_13_1();
  v62 = v12;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v13);
  v61 = (uint64_t)v50 - v14;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v50 - v16;
  v18 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v18);
  if (!v19)
    goto LABEL_7;
  v21 = v19;
  v57 = v1;
  v58 = v6;
  v22 = v20;
  v23 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v23);
  if (!v24)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_7:
    sub_242C0E01C();
    OUTLINED_FUNCTION_18_11();
    v47 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_7_16(v47, v48);
    goto LABEL_8;
  }
  v26 = v24;
  v59 = v25;
  ObjectType = swift_getObjectType();
  v54 = v22;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 16))(&v65, ObjectType, v22);
  v27 = (uint64_t)v17;
  OUTLINED_FUNCTION_1_10((uint64_t)&v65, (uint64_t)v17);
  v28 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v59 + 16))(&v65, v28);
  v56 = v9;
  v29 = v61;
  OUTLINED_FUNCTION_1_10((uint64_t)&v65, v61);
  v65 = *(_QWORD *)(v0 + 56);
  v30 = v65;
  OUTLINED_FUNCTION_0_2();
  v55 = v21;
  v31 = v62;
  OUTLINED_FUNCTION_1_10((uint64_t)&v65, v62);
  type metadata accessor for NativeTensorStorage();
  v65 = v30;
  v64 = *(_BYTE *)(v2 + 64);
  OUTLINED_FUNCTION_0_2();
  v32 = (uint64_t *)OUTLINED_FUNCTION_16_11();
  v33 = v57;
  sub_242B1D8D0(v32, v34, v35);
  v51 = v36;
  v52 = v33;
  v37 = v60;
  v57 = v27;
  v38 = v27;
  v39 = v26;
  v40 = v29;
  v41 = (uint64_t)v56;
  OUTLINED_FUNCTION_5_7(v60, v38);
  OUTLINED_FUNCTION_0_10(v37);
  OUTLINED_FUNCTION_5_7(v41, v40);
  OUTLINED_FUNCTION_0_10(v41);
  v42 = (uint64_t)v58;
  OUTLINED_FUNCTION_5_7((uint64_t)v58, v31);
  v43 = OUTLINED_FUNCTION_0_10(v42);
  v50[1] = v50;
  MEMORY[0x24BDAC7A8](v43);
  v44 = v59;
  v50[-8] = v39;
  v50[-7] = v44;
  v45 = v52;
  v46 = v51;
  v50[-6] = v41;
  v50[-5] = v46;
  v50[-4] = &off_251387678;
  v50[-3] = v42;
  v50[-2] = sub_242AA48E0;
  v50[-1] = v2;
  sub_242BF6310((uint64_t)sub_242AA4900, (uint64_t)&v50[-10], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
  if (v45)
  {
    swift_release();
    OUTLINED_FUNCTION_3_19();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_12_11();
    sub_242A6AB60(v41);
    OUTLINED_FUNCTION_15_11();
  }
  else
  {
    OUTLINED_FUNCTION_12_11();
    sub_242A6AB60(v41);
    OUTLINED_FUNCTION_15_11();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v49 = OUTLINED_FUNCTION_5_4();
    *(_OWORD *)(v49 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v49 + 32) = v46;
    *(_QWORD *)(v49 + 40) = &off_251387678;
    OUTLINED_FUNCTION_3_19();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_15_1(v62);
  OUTLINED_FUNCTION_15_1(v61);
  OUTLINED_FUNCTION_15_1(v57);
LABEL_8:
  OUTLINED_FUNCTION_0_9();
}

void sub_242AA4344()
{
  sub_242AA3F9C();
}

uint64_t sub_242AA4358()
{
  return sub_242C477F8();
}

void sub_242AA436C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void (*v27)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_13_1();
  v61 = v2;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v3);
  v62 = (uint64_t)v55 - v4;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v5);
  v63 = (uint64_t)v55 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_242C47930();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_1();
  v67 = v10;
  OUTLINED_FUNCTION_33_0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v55 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v55 - v15;
  v17 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v17);
  if (!v18)
    goto LABEL_6;
  v20 = v18;
  v65 = v19;
  v21 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v21);
  v64 = v23;
  if (!v22)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_6:
    sub_242C0E05C();
    OUTLINED_FUNCTION_18_11();
    v29 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_7_16(v29, v30);
    goto LABEL_14;
  }
  v56 = v0;
  v57 = v22;
  v58 = v9;
  v24 = v20;
  ObjectType = swift_getObjectType();
  v26 = v65;
  v27 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v65 + 16);
  v27(&v69, ObjectType, v65);
  v28 = *(_QWORD *)(v69 + 16);
  swift_bridgeObjectRelease();
  v66 = v14;
  v55[1] = v24;
  v55[2] = ObjectType;
  if (v28)
    v27(&v69, ObjectType, v26);
  sub_242C47600();
  OUTLINED_FUNCTION_2_20();
  v59 = v16;
  OUTLINED_FUNCTION_9_18();
  v31 = v57;
  v32 = swift_getObjectType();
  v33 = v64;
  v34 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v64 + 16);
  v34(&v69, v32, v64);
  v35 = *(_QWORD *)(v69 + 16);
  swift_bridgeObjectRelease();
  v36 = v56;
  if (v35)
    v34(&v69, v32, v33);
  v37 = v67;
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_9_18();
  v38 = *(_QWORD *)(v36 + 56);
  v39 = (uint64_t)v59;
  if (*(_QWORD *)(v38 + 16))
    OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_9_18();
  type metadata accessor for NativeTensorStorage();
  v69 = v38;
  v68 = *(_BYTE *)(v36 + 64);
  OUTLINED_FUNCTION_0_2();
  v40 = (uint64_t *)OUTLINED_FUNCTION_16_11();
  v41 = v60;
  sub_242B1D8D0(v40, v42, v43);
  v45 = v44;
  v60 = v41;
  v46 = v63;
  OUTLINED_FUNCTION_5_7(v63, v39);
  OUTLINED_FUNCTION_0_10(v46);
  v47 = v62;
  v48 = v37;
  OUTLINED_FUNCTION_5_7(v62, (uint64_t)v66);
  OUTLINED_FUNCTION_0_10(v47);
  v49 = v61;
  OUTLINED_FUNCTION_5_7(v61, v48);
  v50 = OUTLINED_FUNCTION_0_10(v49);
  MEMORY[0x24BDAC7A8](v50);
  v51 = v64;
  v55[-8] = v31;
  v55[-7] = v51;
  v55[-6] = v47;
  v55[-5] = v45;
  v55[-4] = &off_251387678;
  v55[-3] = v49;
  v52 = v56;
  v55[-2] = sub_242AA4914;
  v55[-1] = v52;
  v53 = v60;
  sub_242BF6310((uint64_t)sub_242AA4900, (uint64_t)&v55[-10], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
  if (v53)
  {
    swift_release();
    OUTLINED_FUNCTION_3_19();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_20_12();
    OUTLINED_FUNCTION_15_11();
    sub_242A6AB60(v46);
  }
  else
  {
    OUTLINED_FUNCTION_20_12();
    OUTLINED_FUNCTION_15_11();
    sub_242A6AB60(v46);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v54 = OUTLINED_FUNCTION_5_4();
    *(_OWORD *)(v54 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v54 + 32) = v45;
    *(_QWORD *)(v54 + 40) = &off_251387678;
    OUTLINED_FUNCTION_3_19();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_15_1(v67);
  OUTLINED_FUNCTION_15_1((uint64_t)v66);
  OUTLINED_FUNCTION_15_1((uint64_t)v59);
LABEL_14:
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AA47CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  return sub_242C47954();
}

void sub_242AA4824()
{
  sub_242AA436C();
}

uint64_t sub_242AA4838(uint64_t a1)
{
  uint64_t result;

  result = sub_242AA48A0((unint64_t *)&qword_257222B68, (uint64_t (*)(uint64_t))type metadata accessor for BinaryComparisonOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA486C(uint64_t a1)
{
  uint64_t result;

  result = sub_242AA48A0(&qword_257222B70, (uint64_t (*)(uint64_t))type metadata accessor for BinaryLogicalOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA48A0(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C600A0, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242AA48E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_242AA47CC(a1, a2, a3, v3, (void (*)(void))sub_242AA3F88);
}

void sub_242AA4900(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242A6AD88(a1, a2);
}

uint64_t sub_242AA4914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_242AA47CC(a1, a2, a3, v3, (void (*)(void))sub_242AA4358);
}

uint64_t OUTLINED_FUNCTION_2_20()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_3_19()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  return sub_242C4793C();
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

void OUTLINED_FUNCTION_13_13(uint64_t a1)
{
  uint64_t v1;

  sub_242A9E618(a1, v1);
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  uint64_t v0;

  return v0 - 72;
}

unint64_t OUTLINED_FUNCTION_18_11()
{
  return sub_242A6A5B0();
}

uint64_t OUTLINED_FUNCTION_20_12()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t KeyTensorPairsRepresentable.tensors.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[10];

  v9[9] = (*(uint64_t (**)(void))(a2 + 32))();
  v9[6] = a1;
  v9[7] = a2;
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  v4 = sub_242C48650();
  v5 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v4);
  v7 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242AA4C28, (uint64_t)v9, v4, (uint64_t)&type metadata for Tensor, MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_242AA4AE0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v17 - v10;
  v12 = *(int *)(v9 + 48);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v17 - v10, a1, AssociatedTypeWitness);
  v14 = *(_QWORD *)(a1 + v12);
  v15 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v11, AssociatedTypeWitness);
  *(_QWORD *)&v8[v15] = v14;
  swift_retain();
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, TupleTypeMetadata2);
}

uint64_t sub_242AA4C28(uint64_t a1)
{
  uint64_t v1;

  return sub_242AA4AE0(a1, *(_QWORD *)(v1 + 32));
}

uint64_t dispatch thunk of KeyTensorPairsRepresentable.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of KeyTensorPairsRepresentable.keyTensorPairs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_242AA4C58()
{
  sub_242A59170();
}

uint64_t sub_242AA4CB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  if (v1)
  {
    if (*(_QWORD *)(v0 + 88))
    {
      OUTLINED_FUNCTION_6();
      swift_retain();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_242AA4D00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v2 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v2 + 16) = xmmword_242C4B7C0;
  v3 = v0[7];
  *(_QWORD *)(v2 + 32) = v0[6];
  *(_QWORD *)(v2 + 40) = v3;
  v5 = v2;
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_17_12();
  if (v1)
  {
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_5_22();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  if (v0[9])
  {
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_5_22();
  }
  if (OUTLINED_FUNCTION_24_9())
  {
    OUTLINED_FUNCTION_16_12();
    OUTLINED_FUNCTION_5_22();
  }
  return v5;
}

uint64_t sub_242AA4E24()
{
  _QWORD *v0;
  uint64_t v1;

  if (v0[21])
  {
    v1 = v0[21];
  }
  else
  {
    v1 = (*(uint64_t (**)(void))(*v0 + 368))();
    v0[21] = v1;
    sub_242C480E0();
    swift_bridgeObjectRelease();
  }
  sub_242C480E0();
  return v1;
}

uint64_t sub_242AA4E84(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  uint64_t v11;

  *(_OWORD *)(v11 + 104) = 0u;
  *(_BYTE *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 80) = 0;
  *(_QWORD *)(v11 + 88) = 0;
  *(_OWORD *)(v11 + 120) = 0u;
  *(_OWORD *)(v11 + 136) = 0u;
  *(_OWORD *)(v11 + 145) = 0u;
  *(_BYTE *)(v11 + 161) = 1;
  *(_QWORD *)(v11 + 168) = 0;
  *(_DWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 48) = a4;
  *(_QWORD *)(v11 + 56) = a5;
  *(_QWORD *)(v11 + 64) = a6;
  *(_QWORD *)(v11 + 72) = a7;
  swift_release();
  if (a8)
  {
    *(_QWORD *)(v11 + 80) = a8;
    swift_retain();
    swift_release();
    swift_retain();
    sub_242AA5A34(a8);
    *(_QWORD *)(v11 + 88) = a9;
    swift_release();
  }
  *(_BYTE *)(v11 + 96) = a10 & 1;
  sub_242A56808(a11, v11 + 104);
  return v11;
}

void sub_242AA4F58()
{
  sub_242A59170();
}

uint64_t sub_242AA4FB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242AA5008()
{
  sub_242AA4FB4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseLSTMLayerOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AA5048()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_242AA5054()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

__n128 sub_242AA5064@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 152);
  v3 = *(_BYTE *)(v1 + 160);
  v4 = *(_BYTE *)(v1 + 161);
  v5 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 136);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242AA5094@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v3 + 40);
  return result;
}

uint64_t sub_242AA50D8(char *a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *v1;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 40) = v2;
  return result;
}

uint64_t (*sub_242AA5118())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_242AA5158(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C4F858, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242AA5194()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 168))();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C49358();
  swift_beginAccess();
  return sub_242C4934C();
}

uint64_t sub_242AA5218()
{
  return sub_242AA5194();
}

uint64_t sub_242AA5238()
{
  return 1836348268;
}

void sub_242AA5248(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  _QWORD *v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;

  v15[23] = a15;
  v15[24] = a12;
  v15[22] = a14;
  if (a3)
  {
    v16 = a3;
    OUTLINED_FUNCTION_27_8();
  }
  else
  {
    OUTLINED_FUNCTION_27_8();
    a1 = sub_242BD0204(1836348268, 0xE400000000000000);
    a2 = v19;
    v16 = v20;
  }
  sub_242AA4E84(a1, a2, v16, a4, a5, a6, a7, a9, a10, a11 & 1, a13);
  sub_242A6549C(a14);
  swift_release();
  OUTLINED_FUNCTION_124();
}

uint64_t sub_242AA5314()
{
  return sub_242C480E0();
}

uint64_t sub_242AA531C()
{
  uint64_t v0;

  sub_242A6549C(*(_QWORD *)(v0 + 176));
  return swift_bridgeObjectRelease();
}

uint64_t sub_242AA5338()
{
  uint64_t v0;

  sub_242AA4FB4();
  sub_242A6549C(*(_QWORD *)(v0 + 176));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242AA5360()
{
  sub_242AA5338();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LSTMLayerOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AA53A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242AA53D0()
{
  return OUTLINED_FUNCTION_26_9();
}

uint64_t sub_242AA53E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v2 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v2 + 16) = xmmword_242C4F6D0;
  v3 = v0[23];
  v4 = v0[24];
  *(_QWORD *)(v2 + 32) = v0[22];
  *(_QWORD *)(v2 + 40) = v4;
  v6 = v0[6];
  v5 = v0[7];
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = v6;
  *(_QWORD *)(v2 + 64) = v5;
  v8 = v2;
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_17_12();
  if (v1)
  {
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_123_0();
    swift_retain();
    OUTLINED_FUNCTION_11_6();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_5_22();
  }
  OUTLINED_FUNCTION_123_0();
  swift_retain();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  if (v0[9])
  {
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_5_22();
  }
  if (OUTLINED_FUNCTION_24_9())
  {
    OUTLINED_FUNCTION_16_12();
    OUTLINED_FUNCTION_5_22();
  }
  return v8;
}

void sub_242AA553C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v14[22] = a11;
  v14[23] = a12;
  v14[24] = a13;
  if (a3)
  {
    v15 = a3;
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_6();
    v18 = OUTLINED_FUNCTION_26_9();
    a1 = sub_242BD0204(v18, v19);
    a2 = v20;
    v15 = v21;
  }
  sub_242AA4E84(a1, a2, v15, a4, a5, a6, a7, a8, a9, a10 & 1, a14);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_124();
}

void sub_242AA5610()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v2 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v2 + 16) = xmmword_242C4B7C0;
  v3 = v0[7];
  *(_QWORD *)(v2 + 32) = v0[6];
  *(_QWORD *)(v2 + 40) = v3;
  v12 = v2;
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_17_12();
  if (v1)
  {
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_5_22();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  if (v0[9])
  {
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_5_22();
  }
  if (OUTLINED_FUNCTION_24_9())
  {
    OUTLINED_FUNCTION_16_12();
    OUTLINED_FUNCTION_5_22();
  }
  if (!(v12 >> 62))
  {
    v4 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_28_1();
    if (v4)
      goto LABEL_9;
LABEL_19:
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_4_0();
    return;
  }
  OUTLINED_FUNCTION_28_1();
  v4 = sub_242C48FC8();
  if (!v4)
    goto LABEL_19;
LABEL_9:
  v11 = MEMORY[0x24BEE4AF8];
  sub_242AC3140();
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x2494EC84C](v5, v12);
      }
      else
      {
        v6 = *(_QWORD *)(v12 + 8 * v5 + 32);
        OUTLINED_FUNCTION_11_6();
      }
      v7 = *(_QWORD *)(v6 + 152);
      v8 = *(_BYTE *)(v6 + 160);
      sub_242C480E0();
      swift_release();
      v9 = *(_QWORD *)(v11 + 16);
      if (v9 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_242AC3140();
      ++v5;
      *(_QWORD *)(v11 + 16) = v9 + 1;
      v10 = v11 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v7;
      *(_BYTE *)(v10 + 40) = v8;
    }
    while (v4 != v5);
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_242AA585C()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242AA5880()
{
  uint64_t v0;

  sub_242AA4FB4();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_242AA58B0()
{
  sub_242AA5880();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LSTMLayerGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242AA58F0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450((unint64_t *)&qword_2572230F0, type metadata accessor for LSTMLayerGradientOperation, (uint64_t)&unk_242C4F858);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA592C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_2572230F8, type metadata accessor for LSTMLayerOperation, (uint64_t)&unk_242C4F858);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA5968(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(qword_257223100, type metadata accessor for BaseLSTMLayerOperation, (uint64_t)&unk_242C4F820);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA59A4()
{
  uint64_t v0;

  return 2 * (*(_QWORD *)(v0 + 64) != 0);
}

uint64_t sub_242AA59BC()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 72))
    return 0;
  if (*(_QWORD *)(v0 + 64))
    return 3;
  return 2;
}

uint64_t sub_242AA59E8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_242AA4CB4();
  if (result)
  {
    sub_242AA5A34(result);
    v2 = 2;
    if (*(_QWORD *)(v0 + 64))
      v2 = 3;
    if (*(_QWORD *)(v0 + 72))
      return v2 + 1;
    else
      return v2;
  }
  return result;
}

uint64_t sub_242AA5A34(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_242AA5A60()
{
  uint64_t result;
  char v1;

  result = sub_242AA59E8();
  if ((v1 & 1) == 0)
    ++result;
  return result;
}

void sub_242AA5A7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_13();
  if (!v0)
  {
    OUTLINED_FUNCTION_8_12();
    OUTLINED_FUNCTION_3_20();
  }
  OUTLINED_FUNCTION_13_14();
}

void sub_242AA5ABC()
{
  unint64_t v0;

  OUTLINED_FUNCTION_20_13();
  if (v0 <= 2)
  {
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_3_20();
  }
  OUTLINED_FUNCTION_13_14();
}

void sub_242AA5B04()
{
  unint64_t v0;

  OUTLINED_FUNCTION_20_13();
  if (v0 <= 1)
  {
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_3_20();
  }
  OUTLINED_FUNCTION_13_14();
}

uint64_t sub_242AA5B4C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_242AA4D00();
  v1 = sub_242AA59E8();
  if ((v2 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v1;
  sub_242B4B240(v1, (v0 & 0xC000000000000001) == 0, v0);
  if ((v0 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2494EC84C](v3, v0);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 8 * v3 + 32);
    swift_retain();
  }
  OUTLINED_FUNCTION_4_0();
  v5 = *(_QWORD *)(v4 + 152);
  OUTLINED_FUNCTION_28_1();
  swift_release();
  if (*(_QWORD *)(v5 + 16) <= 1uLL)
LABEL_8:
    OUTLINED_FUNCTION_3_20();
  v6 = *(_QWORD *)(v5 + 40);
  OUTLINED_FUNCTION_4_0();
  return v6;
}

void sub_242AA5C30()
{
  uint64_t v0;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 56) + 152) + 16))
  {
    OUTLINED_FUNCTION_8_12();
    OUTLINED_FUNCTION_3_20();
  }
  OUTLINED_FUNCTION_13_14();
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return sub_242C485A8();
}

uint64_t OUTLINED_FUNCTION_2_21()
{
  return sub_242C485F0();
}

void OUTLINED_FUNCTION_3_20()
{
  sub_242A59264();
}

void OUTLINED_FUNCTION_5_22()
{
  JUMPOUT(0x2494EC0CCLL);
}

uint64_t OUTLINED_FUNCTION_6_20()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return sub_242C485F0();
}

uint64_t OUTLINED_FUNCTION_16_12()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 48) + 152);
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  return sub_242AA4CB4();
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  return 0x6172675F6D74736CLL;
}

uint64_t OUTLINED_FUNCTION_27_8()
{
  uint64_t v0;

  return sub_242A6548C(v0);
}

uint64_t destroy for PReLU()
{
  swift_release();
  return swift_release();
}

uint64_t sub_242AA5DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_242AA5E24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_242AA5E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Heap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Heap);
}

uint64_t sub_242AA5ED0()
{
  return sub_242C48D58();
}

uint64_t sub_242AA5ED8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_242AA5EE0()
{
  return sub_242C48DAC();
}

void sub_242AA5EE8()
{
  JUMPOUT(0x2494EC984);
}

void sub_242AA5EF0()
{
  JUMPOUT(0x2494EC96CLL);
}

uint64_t sub_242AA5EF8()
{
  return sub_242C48608();
}

uint64_t sub_242AA5F14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_242AA5ED0();
  *a1 = result;
  return result;
}

uint64_t sub_242AA5F44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;

  result = sub_242AA5ED8(*v1);
  *a1 = result;
  return result;
}

void (*sub_242AA5F6C(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v3;
  _QWORD *v7;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_242AA5FF8(v7, *a2, *v3, v3[1], v3[2], *(_QWORD *)(a3 + 16));
  return sub_242AA5FD0;
}

void sub_242AA5FD0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  OUTLINED_FUNCTION_0_24(v1);
}

void (*sub_242AA5FF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(_QWORD *a1)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a6 - 8);
  *a1 = a6;
  a1[1] = v6;
  a1[2] = malloc(*(_QWORD *)(v6 + 64));
  sub_242C48E0C();
  return sub_242AA6068;
}

void sub_242AA6068(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  OUTLINED_FUNCTION_0_24(v1);
}

uint64_t sub_242AA6098(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4F9D8, a1);
  return sub_242C487A0();
}

uint64_t sub_242AA60E4()
{
  uint64_t v0;

  v0 = sub_242C48E00();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE2A60], v0);
  return sub_242C4883C() & 1;
}

uint64_t sub_242AA6140()
{
  return sub_242C48DA0();
}

void sub_242AA6150(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_242AA6170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_242AA5EE0();
  *a1 = result;
  return result;
}

uint64_t sub_242AA61A4(uint64_t *a1)
{
  uint64_t result;

  result = sub_242AA5EE0();
  *a1 = result;
  return result;
}

__n128 sub_242AA61D8@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;

  v3 = v1[1].n128_u64[0];
  v6 = *v1;
  swift_retain();
  swift_retain();
  v4 = sub_242AA5ED0();
  swift_release();
  swift_release();
  result = v6;
  *a1 = v6;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_242AA6254(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4FA90, a1);
  return sub_242C487E8();
}

uint64_t sub_242AA6288(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4FA90, a1);
  return sub_242C48818();
}

uint64_t sub_242AA62BC()
{
  return sub_242C48DB8();
}

uint64_t sub_242AA62C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_242AA62BC();
  *a1 = result;
  return result;
}

uint64_t sub_242AA62F8(uint64_t *a1)
{
  uint64_t result;

  result = sub_242AA62BC();
  *a1 = result;
  return result;
}

void sub_242AA632C()
{
  sub_242AA5EF0();
}

uint64_t sub_242AA6350(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_242AA6360@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_242AA5EF8();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_242AA63A0()
{
  sub_242AA5EE8();
}

uint64_t sub_242AA63B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = sub_242C48DA0();
  if (v14 != sub_242C48DA0())
    return 0;
  result = sub_242C48DA0();
  if ((result & 0x8000000000000000) == 0)
  {
    v16 = result;
    if (!result)
      return 1;
    v17 = 0;
    while (v16 != v17)
    {
      v18 = v17;
      result = sub_242AA64B4((uint64_t)&v18, a1, a2, a3, a4, a5, a6, a7);
      if ((result & 1) == 0)
        return 0;
      if (v16 == ++v17)
        return 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242AA64B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v9 = *(_QWORD *)(a8 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v18 - v13;
  sub_242C48E0C();
  sub_242C48E0C();
  v15 = sub_242C48200();
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, a8);
  v16(v14, a8);
  return v15 & 1;
}

uint64_t sub_242AA65A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_242AA63B8(*a1, a1[1], a1[2], *a2, a2[1], a2[2], *(_QWORD *)(a3 + 16));
}

uint64_t sub_242AA65CC()
{
  uint64_t v0;

  v0 = sub_242C48E00();
  swift_retain();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE2A48], v0);
  sub_242C484A0();
  return swift_release();
}

uint64_t sub_242AA6654()
{
  sub_242C49340();
  sub_242AA65CC();
  return sub_242C49394();
}

uint64_t sub_242AA66B0()
{
  return sub_242AA6654();
}

uint64_t sub_242AA66C4()
{
  return sub_242AA65CC();
}

uint64_t sub_242AA66D8()
{
  sub_242C49340();
  sub_242AA65CC();
  return sub_242C49394();
}

uint64_t sub_242AA672C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];

  v8 = sub_242C493D0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572229D8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[3] = a1;
  v20[4] = a2;
  v20[5] = a3;
  v20[0] = a1;
  v20[1] = a2;
  v20[2] = a3;
  v14 = *MEMORY[0x24BEE4370];
  v15 = sub_242C493C4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  v18 = type metadata accessor for Heap(0, a4, v16, v17);
  MEMORY[0x2494EDE24](&unk_242C4FA90, v18);
  sub_242AA68AC((uint64_t)v10);
  swift_retain_n();
  swift_retain_n();
  return sub_242C493F4();
}

uint64_t sub_242AA68AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BEE43C0];
  v3 = sub_242C493D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_242AA68F0(uint64_t a1)
{
  uint64_t *v1;

  return sub_242AA672C(*v1, v1[1], v1[2], *(_QWORD *)(a1 + 16));
}

uint64_t sub_242AA6904()
{
  uint64_t v0;

  v0 = sub_242C48E00();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE2A70], v0);
  sub_242C49220();
  return 0;
}

uint64_t sub_242AA6968()
{
  return sub_242AA6904();
}

uint64_t sub_242AA6978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x2494EDE24](&unk_242C4F944, a1, &v4);
}

void sub_242AA69B0()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242AA69C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242AA6AB0(a1, a2, a3, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_242AA69CC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2494EDE24](&unk_242C4F978);
  return MEMORY[0x2494EDE24](MEMORY[0x24BEE4218], a1, &v3);
}

void sub_242AA6A14()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242AA6A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242AA6AB0(a1, a2, a3, MEMORY[0x24BEE1BD0]);
}

uint64_t sub_242AA6A30(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2494EDE24](&unk_242C4F9D8);
  return MEMORY[0x2494EDE24](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_242AA6A78()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242AA6A88()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242AA6A98()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_242AA6AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242AA6AB0(a1, a2, a3, MEMORY[0x24BEE1BD8]);
}

uint64_t sub_242AA6AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  _QWORD v8[2];

  v6 = sub_242AA1C80();
  v8[0] = MEMORY[0x24BEE17A8];
  v8[1] = v6;
  return MEMORY[0x2494EDE24](a4, a1, v8);
}

void sub_242AA6AF8()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242AA6B08()
{
  return sub_242C48170();
}

void sub_242AA6B48()
{
  __asm { BR              X10 }
}

uint64_t sub_242AA6B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x24BEDF740];
  v2 = sub_242C477B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

void sub_242AA6BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;

  OUTLINED_FUNCTION_54_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_14_10(v6, v50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v16 = OUTLINED_FUNCTION_24_10(v8, v9, v10, v11, v12, v13, v14, v15, v51);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_26_10();
  v19 = MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_34_7(v19, v20, v21, v22, v23, v24, v25, v26, v52);
  v28 = MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_23_11(v28, v29, v30, v31, v32, v33, v34, v35, v53);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v37);
  v38 = OUTLINED_FUNCTION_32_8();
  OUTLINED_FUNCTION_59_4(v38);
  if (v39)
  {
    OUTLINED_FUNCTION_53_3();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
    sub_242AA6B48();
    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_28_12();
    if (v55 > 0xCu || (OUTLINED_FUNCTION_40_5(), v40) || v4 > 0xC || (OUTLINED_FUNCTION_58_2(), v40))
    {
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_35_8();
      OUTLINED_FUNCTION_24_1();
      *v49 = v1;
      v49[1] = v2;
      OUTLINED_FUNCTION_5_21((uint64_t)v49, 3);
      OUTLINED_FUNCTION_15_12();
    }
    else
    {
      OUTLINED_FUNCTION_22_10();
      OUTLINED_FUNCTION_12_12();
      OUTLINED_FUNCTION_51_6();
      OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_49_5();
      OUTLINED_FUNCTION_7_18();
      v41 = OUTLINED_FUNCTION_63_4();
      OUTLINED_FUNCTION_13_15(v41);
      OUTLINED_FUNCTION_46_6();
      OUTLINED_FUNCTION_1_20();
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_46_6();
      OUTLINED_FUNCTION_31_10();
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_60_2();
      OUTLINED_FUNCTION_48_6(v42, v43, &qword_257222B50);
      sub_242C48A28();
      OUTLINED_FUNCTION_36_9();
      if (OUTLINED_FUNCTION_2_22())
      {
        OUTLINED_FUNCTION_64_3();
        OUTLINED_FUNCTION_18_12();
        OUTLINED_FUNCTION_19_11();
        OUTLINED_FUNCTION_9_19();
        OUTLINED_FUNCTION_0_27();
        v44 = __swift_storeEnumTagSinglePayload(v1, 0, 1, v16);
        MEMORY[0x24BDAC7A8](v44);
        OUTLINED_FUNCTION_8_13();
        MEMORY[0x24BDAC7A8](v45);
        OUTLINED_FUNCTION_57_5();
        *(_QWORD *)(v46 - 48) = v3;
        *(_QWORD *)(v46 - 40) = &off_251387678;
        OUTLINED_FUNCTION_37_9(v46);
        OUTLINED_FUNCTION_10_15((uint64_t)sub_242AA785C, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
        if (!v0)
        {
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_33_7();
          OUTLINED_FUNCTION_25_8();
          OUTLINED_FUNCTION_13_2();
          OUTLINED_FUNCTION_6_21();
          OUTLINED_FUNCTION_16_13(v54);
          OUTLINED_FUNCTION_15_12();
          OUTLINED_FUNCTION_45_5();
          OUTLINED_FUNCTION_41_9();
          OUTLINED_FUNCTION_40_6();
          goto LABEL_13;
        }
        OUTLINED_FUNCTION_50_6();
        OUTLINED_FUNCTION_33_7();
        OUTLINED_FUNCTION_25_8();
        OUTLINED_FUNCTION_13_2();
        OUTLINED_FUNCTION_6_21();
        OUTLINED_FUNCTION_16_13(v54);
        OUTLINED_FUNCTION_15_12();
        OUTLINED_FUNCTION_45_5();
      }
      else
      {
        OUTLINED_FUNCTION_33_7();
        OUTLINED_FUNCTION_20_14();
        OUTLINED_FUNCTION_35_8();
        OUTLINED_FUNCTION_24_1();
        *v48 = v1;
        v48[1] = v2;
        OUTLINED_FUNCTION_5_21((uint64_t)v48, 4);
        OUTLINED_FUNCTION_30_8();
        OUTLINED_FUNCTION_47_5(v54);
        OUTLINED_FUNCTION_15_12();
      }
    }
    OUTLINED_FUNCTION_42_7();
    OUTLINED_FUNCTION_39_8();
    OUTLINED_FUNCTION_17_1();
  }
  else
  {
    sub_242BF52CC();
    OUTLINED_FUNCTION_35_8();
    OUTLINED_FUNCTION_24_1();
    *v47 = v1;
    v47[1] = v2;
    OUTLINED_FUNCTION_5_21((uint64_t)v47, 2);
  }
LABEL_13:
  OUTLINED_FUNCTION_55_4();
  OUTLINED_FUNCTION_0_9();
}

void sub_242AA6F14()
{
  sub_242AA6BD8();
}

void sub_242AA6F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;

  OUTLINED_FUNCTION_54_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_14_10(v6, v50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v16 = OUTLINED_FUNCTION_24_10(v8, v9, v10, v11, v12, v13, v14, v15, v51);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_26_10();
  v19 = MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_34_7(v19, v20, v21, v22, v23, v24, v25, v26, v52);
  v28 = MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_23_11(v28, v29, v30, v31, v32, v33, v34, v35, v53);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v37);
  v38 = OUTLINED_FUNCTION_32_8();
  OUTLINED_FUNCTION_59_4(v38);
  if (v39)
  {
    OUTLINED_FUNCTION_53_3();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
    OUTLINED_FUNCTION_56_3(MEMORY[0x24BEDF768], MEMORY[0x24BEDF760]);
    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_28_12();
    if (v55 > 0xCu || (OUTLINED_FUNCTION_40_5(), v40) || v4 > 0xC || (OUTLINED_FUNCTION_58_2(), v40))
    {
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_35_8();
      OUTLINED_FUNCTION_24_1();
      *v49 = v1;
      v49[1] = v2;
      OUTLINED_FUNCTION_5_21((uint64_t)v49, 3);
      OUTLINED_FUNCTION_15_12();
    }
    else
    {
      OUTLINED_FUNCTION_22_10();
      OUTLINED_FUNCTION_12_12();
      OUTLINED_FUNCTION_51_6();
      OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_49_5();
      OUTLINED_FUNCTION_7_18();
      v41 = OUTLINED_FUNCTION_63_4();
      OUTLINED_FUNCTION_13_15(v41);
      OUTLINED_FUNCTION_46_6();
      OUTLINED_FUNCTION_1_20();
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_46_6();
      OUTLINED_FUNCTION_31_10();
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_60_2();
      OUTLINED_FUNCTION_48_6(v42, v43, &qword_257222B50);
      sub_242C48A28();
      OUTLINED_FUNCTION_36_9();
      if (OUTLINED_FUNCTION_2_22())
      {
        OUTLINED_FUNCTION_64_3();
        OUTLINED_FUNCTION_18_12();
        OUTLINED_FUNCTION_19_11();
        OUTLINED_FUNCTION_9_19();
        OUTLINED_FUNCTION_0_27();
        v44 = __swift_storeEnumTagSinglePayload(v1, 0, 1, v16);
        MEMORY[0x24BDAC7A8](v44);
        OUTLINED_FUNCTION_8_13();
        MEMORY[0x24BDAC7A8](v45);
        OUTLINED_FUNCTION_57_5();
        *(_QWORD *)(v46 - 48) = v3;
        *(_QWORD *)(v46 - 40) = &off_251387678;
        OUTLINED_FUNCTION_37_9(v46);
        OUTLINED_FUNCTION_10_15((uint64_t)sub_242AA785C, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
        if (!v0)
        {
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_33_7();
          OUTLINED_FUNCTION_25_8();
          OUTLINED_FUNCTION_13_2();
          OUTLINED_FUNCTION_6_21();
          OUTLINED_FUNCTION_16_13(v54);
          OUTLINED_FUNCTION_15_12();
          OUTLINED_FUNCTION_45_5();
          OUTLINED_FUNCTION_41_9();
          OUTLINED_FUNCTION_40_6();
          goto LABEL_13;
        }
        OUTLINED_FUNCTION_50_6();
        OUTLINED_FUNCTION_33_7();
        OUTLINED_FUNCTION_25_8();
        OUTLINED_FUNCTION_13_2();
        OUTLINED_FUNCTION_6_21();
        OUTLINED_FUNCTION_16_13(v54);
        OUTLINED_FUNCTION_15_12();
        OUTLINED_FUNCTION_45_5();
      }
      else
      {
        OUTLINED_FUNCTION_33_7();
        OUTLINED_FUNCTION_20_14();
        OUTLINED_FUNCTION_35_8();
        OUTLINED_FUNCTION_24_1();
        *v48 = v1;
        v48[1] = v2;
        OUTLINED_FUNCTION_5_21((uint64_t)v48, 4);
        OUTLINED_FUNCTION_30_8();
        OUTLINED_FUNCTION_47_5(v54);
        OUTLINED_FUNCTION_15_12();
      }
    }
    OUTLINED_FUNCTION_42_7();
    OUTLINED_FUNCTION_39_8();
    OUTLINED_FUNCTION_17_1();
  }
  else
  {
    sub_242BF5318();
    OUTLINED_FUNCTION_35_8();
    OUTLINED_FUNCTION_24_1();
    *v47 = v1;
    v47[1] = v2;
    OUTLINED_FUNCTION_5_21((uint64_t)v47, 2);
  }
LABEL_13:
  OUTLINED_FUNCTION_55_4();
  OUTLINED_FUNCTION_0_9();
}

void sub_242AA7268()
{
  sub_242AA6F28();
}

uint64_t sub_242AA727C@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v7;
  uint64_t v8;
  unsigned int *v9;

  v7 = *(unsigned __int8 *)(v3 + 130);
  v8 = sub_242C477B0();
  if (v7)
    v9 = a1;
  else
    v9 = a2;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, *v9, v8);
}

void sub_242AA72D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;

  OUTLINED_FUNCTION_54_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_14_10(v6, v50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v16 = OUTLINED_FUNCTION_24_10(v8, v9, v10, v11, v12, v13, v14, v15, v51);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_26_10();
  v19 = MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_34_7(v19, v20, v21, v22, v23, v24, v25, v26, v52);
  v28 = MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_23_11(v28, v29, v30, v31, v32, v33, v34, v35, v53);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v37);
  v38 = OUTLINED_FUNCTION_32_8();
  OUTLINED_FUNCTION_59_4(v38);
  if (v39)
  {
    OUTLINED_FUNCTION_53_3();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
    OUTLINED_FUNCTION_56_3(MEMORY[0x24BEDF798], MEMORY[0x24BEDF710]);
    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_28_12();
    if (v55 > 0xCu || (OUTLINED_FUNCTION_40_5(), v40) || v4 > 0xC || (OUTLINED_FUNCTION_58_2(), v40))
    {
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_35_8();
      OUTLINED_FUNCTION_24_1();
      *v49 = v1;
      v49[1] = v2;
      OUTLINED_FUNCTION_5_21((uint64_t)v49, 3);
      OUTLINED_FUNCTION_15_12();
    }
    else
    {
      OUTLINED_FUNCTION_22_10();
      OUTLINED_FUNCTION_12_12();
      OUTLINED_FUNCTION_51_6();
      OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_49_5();
      OUTLINED_FUNCTION_7_18();
      v41 = OUTLINED_FUNCTION_63_4();
      OUTLINED_FUNCTION_13_15(v41);
      OUTLINED_FUNCTION_46_6();
      OUTLINED_FUNCTION_1_20();
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_46_6();
      OUTLINED_FUNCTION_31_10();
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_60_2();
      OUTLINED_FUNCTION_48_6(v42, v43, &qword_257222B50);
      sub_242C48A28();
      OUTLINED_FUNCTION_36_9();
      if (OUTLINED_FUNCTION_2_22())
      {
        OUTLINED_FUNCTION_64_3();
        OUTLINED_FUNCTION_18_12();
        OUTLINED_FUNCTION_19_11();
        OUTLINED_FUNCTION_9_19();
        OUTLINED_FUNCTION_0_27();
        v44 = __swift_storeEnumTagSinglePayload(v1, 0, 1, v16);
        MEMORY[0x24BDAC7A8](v44);
        OUTLINED_FUNCTION_8_13();
        MEMORY[0x24BDAC7A8](v45);
        OUTLINED_FUNCTION_57_5();
        *(_QWORD *)(v46 - 48) = v3;
        *(_QWORD *)(v46 - 40) = &off_251387678;
        OUTLINED_FUNCTION_37_9(v46);
        OUTLINED_FUNCTION_10_15((uint64_t)sub_242AA785C, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
        if (!v0)
        {
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_33_7();
          OUTLINED_FUNCTION_25_8();
          OUTLINED_FUNCTION_13_2();
          OUTLINED_FUNCTION_6_21();
          OUTLINED_FUNCTION_16_13(v54);
          OUTLINED_FUNCTION_15_12();
          OUTLINED_FUNCTION_45_5();
          OUTLINED_FUNCTION_41_9();
          OUTLINED_FUNCTION_40_6();
          goto LABEL_13;
        }
        OUTLINED_FUNCTION_50_6();
        OUTLINED_FUNCTION_33_7();
        OUTLINED_FUNCTION_25_8();
        OUTLINED_FUNCTION_13_2();
        OUTLINED_FUNCTION_6_21();
        OUTLINED_FUNCTION_16_13(v54);
        OUTLINED_FUNCTION_15_12();
        OUTLINED_FUNCTION_45_5();
      }
      else
      {
        OUTLINED_FUNCTION_33_7();
        OUTLINED_FUNCTION_20_14();
        OUTLINED_FUNCTION_35_8();
        OUTLINED_FUNCTION_24_1();
        *v48 = v1;
        v48[1] = v2;
        OUTLINED_FUNCTION_5_21((uint64_t)v48, 4);
        OUTLINED_FUNCTION_30_8();
        OUTLINED_FUNCTION_47_5(v54);
        OUTLINED_FUNCTION_15_12();
      }
    }
    OUTLINED_FUNCTION_42_7();
    OUTLINED_FUNCTION_39_8();
    OUTLINED_FUNCTION_17_1();
  }
  else
  {
    sub_242BF5344();
    OUTLINED_FUNCTION_35_8();
    OUTLINED_FUNCTION_24_1();
    *v47 = v1;
    v47[1] = v2;
    OUTLINED_FUNCTION_5_21((uint64_t)v47, 2);
  }
LABEL_13:
  OUTLINED_FUNCTION_55_4();
  OUTLINED_FUNCTION_0_9();
}

void sub_242AA7610()
{
  sub_242AA72D0();
}

uint64_t sub_242AA7624(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257223188, (uint64_t (*)(uint64_t))type metadata accessor for LogicalReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA7660(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_257223190, (uint64_t (*)(uint64_t))type metadata accessor for ArgumentReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA769C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257223198, (uint64_t (*)(uint64_t))type metadata accessor for ReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242AA76D8(uint64_t a1, uint64_t a2, uint64_t a3, size_t a4, uint64_t a5, uint64_t a6)
{
  size_t v10;
  size_t v11;
  const void *v12;
  void *v13;
  void *v14;
  uint64_t result;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[8];
  _BYTE v20[8];
  const void *v21;
  void *v22;

  v10 = sub_242B52BC0(a5, 0);
  v11 = sub_242B52BC0(a6, 0);
  sub_242AA3D00(a1 + 136, (uint64_t)v20, &qword_257222B58);
  sub_242AA3D00((uint64_t)v20, (uint64_t)&v21, &qword_257222B58);
  v12 = v21;
  if (v21
    && (sub_242AA3D00(a2 + 136, (uint64_t)v19, &qword_257222B58),
        sub_242AA3D00((uint64_t)v19, (uint64_t)&v22, &qword_257222B58),
        (v13 = v22) != 0))
  {
    v14 = (void *)sub_242C478E8();
    result = BNNSFilterApplyBatch(v14, a4, v12, v10, v13, v11);
    if (!(_DWORD)result)
      return result;
    v16 = (unsigned int *)MEMORY[0x24BEDF9F8];
  }
  else
  {
    v16 = (unsigned int *)MEMORY[0x24BEDFA08];
  }
  v17 = sub_242C478DC();
  sub_242A8A510((unint64_t *)&qword_257222B60, (uint64_t (*)(uint64_t))MEMORY[0x24BEDFA10], MEMORY[0x24BEDFA18]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v18, *v16, v17);
  return swift_willThrow();
}

uint64_t sub_242AA7840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242AA76D8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_242AA785C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242A6AB40(a1, a2);
}

uint64_t sub_242AA7870(uint64_t a1, uint64_t a2)
{
  return sub_242AA7840(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_storeEnumTagSinglePayload(v4, 0, 1, v3);
  return v1(*(_QWORD *)(v0 + 64), v2, v3);
}

uint64_t OUTLINED_FUNCTION_1_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 16))(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_2_22()
{
  return sub_242C47720();
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 96), v1);
}

void OUTLINED_FUNCTION_7_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8) = v1;
  sub_242B51AEC(v2 - 72, 0, 0, *(_QWORD *)(v0 + 96));
}

uint64_t OUTLINED_FUNCTION_9_19()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _QWORD, uint64_t);
  uint64_t v3;

  v0[7] = v1;
  return v2(v0[9], v0[17], v3);
}

void OUTLINED_FUNCTION_10_15(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_242BF6310(a1, v3, a2, a3);
}

void OUTLINED_FUNCTION_11_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 32) = v1;
  sub_242B51AEC(v2 - 72, 0, 0, *(_QWORD *)(v0 + 136));
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  *v0 = v1;
  return v3(v2, v1);
}

uint64_t OUTLINED_FUNCTION_13_15(uint64_t a1)
{
  _QWORD *v1;

  v1[3] = a1;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1[15] + 16))(v1[5], v1[11], v1[16]);
}

void OUTLINED_FUNCTION_14_10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_15_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_16_13(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_17_13()
{
  return sub_242C489C8();
}

uint64_t OUTLINED_FUNCTION_18_12()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = *(_QWORD *)(v0 + 112);
  *(_BYTE *)(v0 + 151) = v1;
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_19_11()
{
  uint64_t v0;
  uint64_t v1;

  sub_242B1D8D0((uint64_t *)(v1 - 72), v0 + 151, 0);
}

void OUTLINED_FUNCTION_20_14()
{
  sub_242B52844();
}

uint64_t OUTLINED_FUNCTION_22_10()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_DWORD *)(v0 + 20) = v4;
  return v1(v3, v2);
}

uint64_t OUTLINED_FUNCTION_23_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 136) = (char *)&a9 - v9;
  return sub_242C477B0();
}

uint64_t OUTLINED_FUNCTION_24_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 72) = (char *)&a9 - v9;
  return sub_242C47930();
}

uint64_t OUTLINED_FUNCTION_25_8()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_28_12()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_29_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 112) = v1;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_31_10()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_32_8()
{
  return sub_242B89308();
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_34_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 96) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_36_9()
{
  return sub_242C489B0();
}

uint64_t OUTLINED_FUNCTION_37_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 - 32) = v3;
  *(_QWORD *)(a1 - 24) = v1;
  *(_QWORD *)(a1 - 16) = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_39_8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16) = 0;
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_41_9()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[15] + 8))(v0[11], v0[16]);
}

uint64_t OUTLINED_FUNCTION_42_7()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(v1, *(_QWORD *)(v0 + 128));
}

uint64_t OUTLINED_FUNCTION_45_5()
{
  return swift_release();
}

void OUTLINED_FUNCTION_46_6()
{
  sub_242B526F4();
}

uint64_t OUTLINED_FUNCTION_47_5(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_48_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_242AA3D00(v3 + 152, v3 + 688, a3);
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = *(_QWORD *)(v0 + 112);
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 - 72);
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_53_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 40) = v1;
}

void OUTLINED_FUNCTION_54_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 56) = v1;
}

uint64_t OUTLINED_FUNCTION_55_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_3(unsigned int *a1, unsigned int *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 88) = v3;
  return sub_242AA727C(a1, a2, v3);
}

void OUTLINED_FUNCTION_59_4(uint64_t a1)
{
  uint64_t v1;

  sub_242A9E618(a1, v1);
}

void OUTLINED_FUNCTION_60_2()
{
  uint64_t v0;

  sub_242AA3BBC((_BYTE *)(v0 + 152));
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  return sub_242C4772C();
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  return type metadata accessor for NativeTensorStorage();
}

void OptimizerStateDictionary.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a3;
  v17 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_242C48E30();
  v12 = MEMORY[0x2494EDE24](&unk_242C52AB0, v5);
  v15 = *(_QWORD *)(type metadata accessor for RecursiveStoredPropertiesIterator(0, v5, v12, v6) - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_13_1();
  v13 = v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33_8();
  type metadata accessor for AnyLayerVariablePathCache();
  sub_242BA21DC(a2);
}

void sub_242AA8028()
{
  void (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242BA23F8();
  v4 = v3;
  OUTLINED_FUNCTION_29_8();
  sub_242BA2464();
  sub_242BA246C(v4);
  v0(*(_QWORD *)(v2 - 168), v1);
  JUMPOUT(0x242AA8094);
}

void OptimizerStateDictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  swift_retain();
  sub_242C48B6C();
  type metadata accessor for OptimizerStateDictionary.ParameterKey(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v5);
  OUTLINED_FUNCTION_201();
}

void sub_242AA81F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  void (*v12)(uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x2494EBCA0](&a12, &a10, v15, v13, &type metadata for Tensor, a1);
  v16 = swift_release();
  if (a12)
    *v14 = a12;
  else
    v12(v16);
  OUTLINED_FUNCTION_14_11();
}

uint64_t OptimizerStateDictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v5 = *v2;
  swift_retain();
  v10[0] = a1;
  v10[1] = sub_242C48B6C();
  v7 = type metadata accessor for OptimizerStateDictionary.ParameterKey(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v6);
  v8 = MEMORY[0x2494EDE24](&unk_242C4FE30, v7);
  MEMORY[0x2494EBCA0](v10, v5, v7, &type metadata for Tensor, v8);
  return swift_release();
}

void OptimizerStateDictionary.subscript.setter(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*a1)
  {
    sub_242C480E0();
    swift_retain();
    sub_242C48B6C();
    v4 = *(_QWORD *)(a3 + 24);
    swift_bridgeObjectRelease();
    type metadata accessor for OptimizerStateDictionary.ParameterKey(255, *(_QWORD *)(a3 + 16), v4, v5);
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_201();
  }
  swift_retain();
  sub_242C480E0();
  sub_242C48B6C();
  v6 = *(_QWORD *)(a3 + 24);
  swift_bridgeObjectRelease();
  type metadata accessor for OptimizerStateDictionary.ParameterKey(255, *(_QWORD *)(a3 + 16), v6, v7);
  OUTLINED_FUNCTION_201();
}

void sub_242AA83E0()
{
  OUTLINED_FUNCTION_36_10();
  sub_242C48098();
  swift_release_n();
  JUMPOUT(0x242AA8414);
}

uint64_t sub_242AA8420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;

  v7 = type metadata accessor for OptimizerStateDictionary.ParameterKey(255, a2, a3, a4);
  swift_getTupleTypeMetadata2();
  sub_242C485C0();
  MEMORY[0x2494EDE24](&unk_242C4FE30, v7);
  v18 = sub_242C480BC();
  sub_242C48E30();
  sub_242C480EC();
  sub_242C480F8();
  result = sub_242C480B0();
  v9 = 0;
  v10 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  for (v13 &= v13 - 1; ; v13 = (v16 - 1) & v16)
  {
    swift_retain_n();
    swift_retain();
    sub_242C48B6C();
    swift_retain();
    swift_retain();
    sub_242C48110();
    swift_release();
    result = swift_release_n();
    if (v13)
      goto LABEL_4;
LABEL_5:
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v15 >= v14)
      goto LABEL_19;
    v16 = *(_QWORD *)(v10 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v14)
        goto LABEL_19;
      v16 = *(_QWORD *)(v10 + 8 * v9);
      if (!v16)
        break;
    }
LABEL_16:
    ;
  }
  v17 = v15 + 2;
  if (v17 >= v14)
  {
LABEL_19:
    result = swift_release();
    *a5 = v18;
    return result;
  }
  v16 = *(_QWORD *)(v10 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v14)
      goto LABEL_19;
    v16 = *(_QWORD *)(v10 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_242AA8680@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = *a1;
  v6 = type metadata accessor for OptimizerStateDictionary(0, *(uint64_t *)((char *)a1 + a2 - 16), *(uint64_t *)((char *)a1 + a2 - 8), a3);
  sub_242C480E0();
  OptimizerStateDictionary.subscript.getter(v5, v6);
  result = swift_bridgeObjectRelease();
  *a4 = v8;
  return result;
}

void sub_242AA8704(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(uint64_t *)((char *)a3 + a4 - 16);
  v5 = *(uint64_t *)((char *)a3 + a4 - 8);
  v6 = *a3;
  v8 = *a1;
  v7 = type metadata accessor for OptimizerStateDictionary(0, v4, v5, a4);
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&v8, v6, v7);
}

void (*OptimizerStateDictionary.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  OptimizerStateDictionary.subscript.getter(a2, a3);
  return sub_242AA87C8;
}

void sub_242AA87C8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11();
    v2 = swift_retain();
    OUTLINED_FUNCTION_28_13(v2);
  }
  v3 = swift_retain();
  OUTLINED_FUNCTION_28_13(v3);
}

uint64_t sub_242AA8838()
{
  return sub_242C4934C();
}

uint64_t sub_242AA885C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a4)
    return 0;
  if (a1 == a3)
    return 1;
  sub_242C48B78();
  return MEMORY[0x2494EC6FC](a1, a3) & 1;
}

uint64_t sub_242AA88BC()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242AA8900()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_242AA8954(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C61566574617473;
  else
    return 0x79654B6574617473;
}

uint64_t sub_242AA8998()
{
  return sub_242AA88BC();
}

uint64_t sub_242AA89A8()
{
  return sub_242AA8838();
}

uint64_t sub_242AA89B8()
{
  sub_242C49340();
  sub_242AA8838();
  return sub_242C49394();
}

uint64_t sub_242AA89FC(uint64_t *a1, uint64_t *a2)
{
  return sub_242AA885C(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_242AA8A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2494EDE24](&unk_242C4FD40, a3);
  return sub_242C49298();
}

uint64_t sub_242AA8A6C(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4FD40, a1);
  return sub_242C48500();
}

uint64_t sub_242AA8AB8()
{
  MEMORY[0x2494EDE24](&unk_242C4FD40);
  return sub_242C48518();
}

uint64_t sub_242AA8B08()
{
  MEMORY[0x2494EDE24](&unk_242C4FD40);
  return sub_242C4850C();
}

uint64_t sub_242AA8B58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242AA8900();
  *a1 = result;
  return result;
}

uint64_t sub_242AA8B8C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242AA8954(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242AA8BBC()
{
  char *v0;

  return sub_242AA8954(*v0);
}

uint64_t sub_242AA8BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_242AA8950(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_242AA8BF8()
{
  return sub_242A65800();
}

uint64_t sub_242AA8C1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242A63ECC();
  *a1 = result;
  return result;
}

uint64_t sub_242AA8C48(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4FDE0, a1);
  return sub_242C494D8();
}

uint64_t sub_242AA8C7C(uint64_t a1)
{
  MEMORY[0x2494EDE24](&unk_242C4FDE0, a1);
  return sub_242C494E4();
}

void OptimizerStateDictionary.init(from:)()
{
  sub_242C48E30();
  OUTLINED_FUNCTION_28_0();
}

void OptimizerStateDictionary.encode(to:)()
{
  sub_242C48E30();
  OUTLINED_FUNCTION_28_0();
}

void sub_242AAA7D4()
{
  OptimizerStateDictionary.init(from:)();
}

void sub_242AAA7F0()
{
  OptimizerStateDictionary.encode(to:)();
}

uint64_t sub_242AAA808(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;

  return sub_242BA22F4(a1, a2, *(_BYTE *)(v2 + 32), *(_DWORD *)(v2 + 36));
}

uint64_t type metadata accessor for OptimizerStateDictionary.ParameterKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptimizerStateDictionary.ParameterKey);
}

uint64_t type metadata accessor for OptimizerStateDictionary.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptimizerStateDictionary.CodingKeys);
}

uint64_t sub_242AAA844(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_242AAA888(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221158);
    v7 = a2;
    atomic_store(MEMORY[0x2494EDE24](a3, v6, &v7), a1);
  }
  OUTLINED_FUNCTION_21_1();
}

void sub_242AAA8DC(unint64_t *a1, void (*a2)(void))
{
  uint64_t v4;

  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2572231A8);
    a2();
    v4 = OUTLINED_FUNCTION_41_10();
    atomic_store(MEMORY[0x2494EDE24](v4), a1);
  }
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AAA93C()
{
  return 16;
}

__n128 sub_242AAA948(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_242AAA954()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for OptimizerStateDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptimizerStateDictionary);
}

uint64_t sub_242AAA968(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242AAA9B4 + 4 * byte_242C4FBD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242AAA9E8 + 4 * byte_242C4FBD0[v4]))();
}

uint64_t sub_242AAA9E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AAA9F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242AAA9F8);
  return result;
}

uint64_t sub_242AAAA04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242AAAA0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242AAAA10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AAAA18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_QWORD *sub_242AAAA24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *sub_242AAAA50(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_242AAAA9C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for LSTM.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LSTM.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_242AAAB54()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242AAAB64()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242AAAB74()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242AAAB84()
{
  JUMPOUT(0x2494EDE24);
}

void OUTLINED_FUNCTION_1_21()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_2_23()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_3_21()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 240) + 8))(*(_QWORD *)(v0 - 376), *(_QWORD *)(v0 - 200));
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return sub_242C48E9C();
}

void OUTLINED_FUNCTION_9_20()
{
  sub_242A5E764();
}

void OUTLINED_FUNCTION_11_18(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_12_13()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 352);
}

uint64_t OUTLINED_FUNCTION_18_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return sub_242C48650();
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_11()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_27_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void OUTLINED_FUNCTION_28_13(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  OptimizerStateDictionary.subscript.setter((uint64_t *)va, v2, v1);
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 288);
}

uint64_t OUTLINED_FUNCTION_31_11()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_32_9()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 152);
  *(_QWORD *)(v0 - 160) = *(_QWORD *)(v0 - 160);
  *(_QWORD *)(v0 - 152) = v1;
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_34_8()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_35_9()
{
  return sub_242C48C8C();
}

uint64_t OUTLINED_FUNCTION_36_10()
{
  return sub_242C480F8();
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_42_8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_43_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_47_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_48_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  return swift_willThrow();
}

uint64_t sub_242AAAD74()
{
  uint64_t result;

  sub_242AAB050();
  result = sub_242C48A40();
  qword_257223350 = result;
  return result;
}

id static OS_os_log.backend.getter()
{
  return sub_242AAAE4C(&qword_257220540, (id *)&qword_257223350);
}

uint64_t sub_242AAADEC()
{
  uint64_t result;

  sub_242AAB050();
  OUTLINED_FUNCTION_0_28();
  result = sub_242C48A40();
  qword_257223358 = result;
  return result;
}

id static OS_os_log.runtime.getter()
{
  return sub_242AAAE4C(&qword_257220548, (id *)&qword_257223358);
}

id sub_242AAAE4C(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_242AAAE84()
{
  uint64_t v0;

  v0 = sub_242C47F90();
  __swift_allocate_value_buffer(v0, qword_257259988);
  __swift_project_value_buffer(v0, (uint64_t)qword_257259988);
  OUTLINED_FUNCTION_0_28();
  return sub_242C47F84();
}

uint64_t sub_242AAAEE0(uint64_t a1)
{
  return sub_242AAAF44(a1, qword_257223360, &qword_257220548, (id *)&qword_257223358);
}

uint64_t static OSSignposter.runtime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242AAAFE8(&qword_257220558, (uint64_t)qword_257223360, a1);
}

uint64_t sub_242AAAF20(uint64_t a1)
{
  return sub_242AAAF44(a1, qword_257223378, &qword_257220540, (id *)&qword_257223350);
}

uint64_t sub_242AAAF44(uint64_t a1, uint64_t *a2, _QWORD *a3, id *a4)
{
  uint64_t v7;
  id v8;

  v7 = sub_242C47F30();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v8 = *a4;
  return sub_242C47F18();
}

uint64_t static OSSignposter.backend.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242AAAFE8(&qword_257220560, (uint64_t)qword_257223378, a1);
}

uint64_t sub_242AAAFE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_242C47F30();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

unint64_t sub_242AAB050()
{
  unint64_t result;

  result = qword_257223390;
  if (!qword_257223390)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257223390);
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_0_28()
{
  return 0xD000000000000019;
}

void sub_242AAB0AC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v8;
  id v9;
  uint64_t v10;
  void *v11;
  int v12;
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v5 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_22(v8, (__n128)xmmword_242C4BF60);
  if (v3)
    OUTLINED_FUNCTION_16_6();
  v9 = *(id *)(a2 + 32);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v10 + 16) = xmmword_242C4B7C0;
  *(_QWORD *)(v10 + 32) = sub_242C4877C();
  *(_QWORD *)(v10 + 40) = sub_242C4877C();
  OUTLINED_FUNCTION_5_23();
  sub_242AAB33C();
  v11 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v12 = *(unsigned __int8 *)(v5 + 64);
  v13 = v12 != 2;
  LOBYTE(v10) = v12 & 1;
  OUTLINED_FUNCTION_2_24();
  v15 = *(_QWORD *)(v5 + 24);
  v14 = *(_QWORD *)(v5 + 32);
  sub_242C480E0();
  v16 = sub_242AAB378((uint64_t)v9, (uint64_t)v11, v13, 1, v10, v4, v15, v14, a1, (SEL *)&selRef_resizeTensor_size_mode_centerResult_alignCorners_layout_name_);

  v8[2].n128_u64[0] = (unint64_t)v16;
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_0_29();
}

void sub_242AAB1FC(void *a1, uint64_t a2)
{
  sub_242AAB0AC(a1, a2);
}

void sub_242AAB210(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v7;
  id v8;
  id v9;
  int v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v7 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_22(v7, (__n128)xmmword_242C4BF60);
  if (v3)
    OUTLINED_FUNCTION_16_6();
  v8 = *(id *)(a2 + 32);
  sub_242B4B240(1, 1, a2);
  v9 = *(id *)(a2 + 40);
  v10 = *(unsigned __int8 *)(v2 + 64);
  v11 = v10 != 2;
  v12 = v10 & 1;
  OUTLINED_FUNCTION_2_24();
  v14 = *(_QWORD *)(v2 + 24);
  v13 = *(_QWORD *)(v2 + 32);
  sub_242C480E0();
  v15 = sub_242AAB378((uint64_t)v8, (uint64_t)v9, v11, 1, v12, v4, v14, v13, a1, (SEL *)&selRef_resizeWithGradientTensor_input_mode_centerResult_alignCorners_layout_name_);

  v7[2].n128_u64[0] = (unint64_t)v15;
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_0_29();
}

void sub_242AAB328(void *a1, uint64_t a2)
{
  sub_242AAB210(a1, a2);
}

unint64_t sub_242AAB33C()
{
  unint64_t result;

  result = qword_257221F28;
  if (!qword_257221F28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257221F28);
  }
  return result;
}

id sub_242AAB378(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, SEL *a10)
{
  void *v16;
  id v17;

  v16 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(a9, *a10, a1, a2, a3, a4 & 1, a5 & 1, a6, v16);

  return v17;
}

uint64_t OUTLINED_FUNCTION_1_22(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return sub_242B4B240(0, (v2 & 0xC000000000000001) == 0, v2);
}

uint64_t OUTLINED_FUNCTION_5_23()
{
  return sub_242C4856C();
}

uint64_t sub_242AAB47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 1)
    goto LABEL_10;
  v13 = sub_242C487B8();
  v14 = v13 + a1;
  if (__OFADD__(v13, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    result = sub_242C48F5C();
    __break(1u);
    return result;
  }
  if (v16 / a1 > 1)
  {
    v20[0] = a4;
    v20[1] = a5;
    v21 = a6;
    v22 = MEMORY[0x24BDAC7A8](v13);
    v23 = v19;
    v24 = v6;
    v25 = a2;
    v26 = a3;
    return sub_242AC7E0C();
  }
  else
  {
    MEMORY[0x24BDAC7A8](v13);
    v21 = a4;
    v22 = a5;
    v23 = a6;
    v24 = a2;
    v25 = a3;
    return sub_242A7DAD0((void (*)(char *, uint64_t))sub_242AABC00, (uint64_t)v20, a4, a5, MEMORY[0x24BEE4078], a6, MEMORY[0x24BEE40A8], v17);
  }
}

uint64_t sub_242AAB5F0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t result;
  unint64_t v4;

  *a2 = a3;
  result = sub_242C48A7C();
  if (result)
  {
    v4 = sub_242AABC28();
    MEMORY[0x24BDAC7A8](v4);
    return sub_242C48950();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242AAB6C4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242AAB5F0(a1, a2, *(_QWORD *)(v2 + 40));
}

uint64_t sub_242AAB6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(__int128 *, _QWORD);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t (*v50)(char *, uint64_t);
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t AssociatedTypeWitness;
  void (*v61)(char *);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  __int128 v70;
  _QWORD v71[4];
  _QWORD v72[2];
  uint64_t v73;
  __int128 v74;

  v62 = a7;
  v61 = a6;
  v66 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v59 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v58 = (char *)&v50 - v16;
  v64 = a9;
  v63 = *(_QWORD *)(a9 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v57 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a10;
  v67 = a8;
  v51 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v51 - 8);
  v19 = MEMORY[0x24BDAC7A8](v51);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v19);
  v68 = (char *)&v50 - v23;
  v24 = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!a3)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v24 == 0x8000000000000000 && a3 == -1)
    goto LABEL_25;
  v26 = a1 + 1;
  if (__OFADD__(a1, 1))
    goto LABEL_22;
  v27 = v26 * a2;
  if ((unsigned __int128)(v26 * (__int128)a2) >> 64 == (v26 * a2) >> 63)
  {
    if (v27 == 0x8000000000000000 && a3 == -1)
      goto LABEL_26;
    v29 = v24 / a3;
    v30 = v27 / a3;
    sub_242C487AC();
    sub_242C487C4();
    v31 = *(void (**)(char *, uint64_t))(v18 + 8);
    v31(v21, v51);
    v32 = *(_QWORD *)(v63 + 72);
    v33 = a5 + v32 * v29;
    v56 = v32;
    v34 = a5 + v32 * v30;
    *(_QWORD *)&v70 = v33;
    *(_QWORD *)&v74 = v34;
    v35 = sub_242C48A58();
    v36 = MEMORY[0x2494EDE24](MEMORY[0x24BEE1C38], v35);
    result = sub_242C481D0();
    if ((result & 1) == 0)
      goto LABEL_24;
    v50 = (uint64_t (*)(char *, uint64_t))v31;
    *(_QWORD *)&v70 = v33;
    *((_QWORD *)&v70 + 1) = v34;
    v37 = sub_242C48890();
    v38 = MEMORY[0x2494EDE24](MEMORY[0x24BEE1C48], v35);
    v39 = sub_242AA1C80();
    sub_242C4889C();
    v40 = v74;
    *(_QWORD *)&v74 = v33;
    *((_QWORD *)&v74 + 1) = v34;
    v73 = v40;
    sub_242C488A8();
    if (v40 == (_QWORD)v70)
      return v50(v68, v51);
    v55 = v35;
    v54 = v37;
    v53 = v38;
    v52 = v39;
    v41 = AssociatedTypeWitness;
    v42 = v57;
    while (1)
    {
      v70 = v74;
      sub_242C4889C();
      sub_242C488A8();
      result = sub_242C481D0();
      if ((result & 1) == 0)
        break;
      v72[0] = v71[3];
      v72[1] = v71[2];
      v71[0] = v38;
      v71[1] = v39;
      v43 = MEMORY[0x2494EDE24](MEMORY[0x24BEE1BD8], v37, v71);
      MEMORY[0x2494EC39C](&v73, v72, v37, v43);
      v73 = v40 + v56;
      v69 = v40;
      v44 = (void (*)(__int128 *, _QWORD))sub_242C48854();
      v45 = v36;
      v46 = v59;
      v47 = v58;
      (*(void (**)(char *))(v59 + 16))(v58);
      v44(&v70, 0);
      v61(v47);
      v48 = *(void (**)(char *, uint64_t))(v46 + 8);
      v36 = v45;
      v37 = v54;
      v49 = v47;
      v38 = v53;
      v48(v49, v41);
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v69, v42, v64);
      v39 = v52;
      sub_242C487DC();
      v40 = v73;
      sub_242C488A8();
      if (v40 == (_QWORD)v70)
        return v50(v68, v51);
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_242AABC00()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

unint64_t sub_242AABC28()
{
  unint64_t result;

  result = qword_257223398;
  if (!qword_257223398)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257223398);
  }
  return result;
}

uint64_t sub_242AABC64(uint64_t a1)
{
  uint64_t v1;

  return sub_242AAB6F4(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void (**)(char *))(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_242AABC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t ObjectType;
  void (*v64)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[15];

  OUTLINED_FUNCTION_18_1();
  a22 = v26;
  a23 = v27;
  v28 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_36_11();
  OUTLINED_FUNCTION_61_4();
  MEMORY[0x24BDAC7A8](v30);
  v99 = (uint64_t)&v85 - v31;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_64_0();
  v100 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_4_9();
  v37 = v36 - v35;
  v38 = OUTLINED_FUNCTION_14_1();
  v103 = *(_QWORD *)(v38 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_13_1();
  v101 = v40;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_8_11();
  v102 = v42;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v85 - v44;
  v46 = *(_QWORD *)(v23 + 40);
  v47 = sub_242B89308();
  OUTLINED_FUNCTION_59_4(v47);
  if (!v48)
    goto LABEL_6;
  v50 = v48;
  v96 = v25;
  v51 = v49;
  v97 = v45;
  v52 = *(_QWORD *)(v23 + 48);
  v53 = sub_242B89308();
  OUTLINED_FUNCTION_59_4(v53);
  if (!v54)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_6:
    sub_242A6A5B0();
    v59 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C4FED0, v59, v60);
    goto LABEL_12;
  }
  v93 = v55;
  v95 = v54;
  if (*(_QWORD *)(v23 + 56))
  {
    v56 = sub_242B89308();
    OUTLINED_FUNCTION_59_4(v56);
    v92 = v58;
  }
  else
  {
    v57 = 0;
    v92 = 0;
  }
  v94 = v57;
  OUTLINED_FUNCTION_64_3();
  v104[0] = *(_QWORD *)(v23 + 64);
  a13 = *(_BYTE *)(v23 + 72);
  sub_242C480E0();
  sub_242B1D8D0(v104, (uint64_t)&a13, 0);
  v98 = v61;
  v91 = v24;
  v62 = *(_QWORD *)(v46 + 152);
  if (!*(_QWORD *)(v62 + 16))
  {
    OUTLINED_FUNCTION_5_24();
    goto LABEL_16;
  }
  v88 = *(_QWORD *)(v62 + 32);
  ObjectType = swift_getObjectType();
  v64 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v51 + 16);
  v89 = ObjectType;
  v90 = v51;
  v64(v104, ObjectType, v51);
  v65 = (uint64_t)v97;
  OUTLINED_FUNCTION_1_7((uint64_t)v104, (uint64_t)v97);
  v66 = *(_QWORD *)(v52 + 152);
  v67 = OUTLINED_FUNCTION_0_2();
  sub_242B05F74(v67);
  v68 = *MEMORY[0x24BEDF508];
  v69 = sub_242C47600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v37, v68, v69);
  OUTLINED_FUNCTION_81_3(v37, 0);
  v70 = v102;
  OUTLINED_FUNCTION_54_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v71 = OUTLINED_FUNCTION_2_0();
  v85 = xmmword_242C4B7D0;
  *(_OWORD *)(v71 + 16) = xmmword_242C4B7D0;
  v72 = *(_QWORD *)(v66 + 16);
  v87 = v50;
  if (!v72)
  {
    OUTLINED_FUNCTION_20_15();
LABEL_16:
    sub_242C480E0();
    OUTLINED_FUNCTION_10_16();
  }
  *(_QWORD *)(v71 + 32) = *(_QWORD *)(v66 + 32);
  OUTLINED_FUNCTION_81_3(v37, 1);
  v73 = v101;
  OUTLINED_FUNCTION_54_4();
  v74 = v100;
  OUTLINED_FUNCTION_5_7(v100, v65);
  OUTLINED_FUNCTION_0_10(v74);
  v75 = v99;
  OUTLINED_FUNCTION_5_7(v99, v70);
  OUTLINED_FUNCTION_0_10(v75);
  v76 = v65;
  v77 = v96;
  OUTLINED_FUNCTION_5_7(v96, v73);
  v78 = __swift_storeEnumTagSinglePayload(v77, 0, 1, v38);
  v86 = &v85;
  v79 = MEMORY[0x24BDAC7A8](v78);
  *((_QWORD *)&v85 - 4) = v98;
  *((_QWORD *)&v85 - 3) = v28;
  *((_QWORD *)&v85 - 2) = v88;
  MEMORY[0x24BDAC7A8](v79);
  v80 = v93;
  *((_QWORD *)&v85 - 8) = v95;
  *((_QWORD *)&v85 - 7) = v80;
  v81 = v94;
  *((_QWORD *)&v85 - 6) = v75;
  *((_QWORD *)&v85 - 5) = v81;
  *((_QWORD *)&v85 - 4) = v92;
  *((_QWORD *)&v85 - 3) = v77;
  *((_QWORD *)&v85 - 2) = sub_242AB08A4;
  *((_QWORD *)&v85 - 1) = v82;
  OUTLINED_FUNCTION_71_3((uint64_t)sub_242AB08C0, (uint64_t)(&v85 - 5), MEMORY[0x24BEE4AE0] + 8, (uint64_t)&a16);
  if (v24)
  {
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_37_10();
    sub_242A6AB60(v74);
    OUTLINED_FUNCTION_15_1(v101);
    OUTLINED_FUNCTION_15_1(v102);
    OUTLINED_FUNCTION_15_1(v76);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_37_10();
    sub_242A6AB60(v74);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v83 = v76;
    v84 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v84 + 16) = v85;
    *(_QWORD *)(v84 + 32) = v98;
    *(_QWORD *)(v84 + 40) = &off_251387678;
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_15_1(v101);
    OUTLINED_FUNCTION_15_1(v102);
    OUTLINED_FUNCTION_15_1(v83);
  }
LABEL_12:
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AAC1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_242C47930();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a4 + 16);
  sub_242C480E0();
  sub_242B51AEC((uint64_t)&v16, 0, 2, (uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v13, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  swift_retain();
  sub_242BF6484();
  sub_242A6AB60((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_242AAC320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;

  OUTLINED_FUNCTION_18_1();
  v1 = sub_242C477C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_48_8();
  sub_242C47810();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x24BEDF7E0], v1);
  sub_242C48A28();
  OUTLINED_FUNCTION_36_9();
  if (sub_242C47804())
  {
    sub_242C47618();
    OUTLINED_FUNCTION_76_2();
  }
  else
  {
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v3 = xmmword_242C4FED0;
    OUTLINED_FUNCTION_5_21((uint64_t)v3, 4);
  }
  OUTLINED_FUNCTION_0_9();
}

#error "242AAC438: call analysis failed (funcsize=5)"

void sub_242AAC444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  void (*v21)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t ObjectType;
  void (*v61)(uint64_t *__return_ptr);
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 *v68;
  uint64_t v69;
  void (*v70)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137[15];

  OUTLINED_FUNCTION_18_1();
  a19 = v24;
  a20 = v25;
  v127 = v21;
  v26 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_13_1();
  v128 = v28;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_8_11();
  v129 = v30;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_8_11();
  v131 = v32;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_64_0();
  v132 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_4_9();
  v38 = v37 - v36;
  v39 = OUTLINED_FUNCTION_14_1();
  v134 = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_36_11();
  v43 = v41 - v42;
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_8_11();
  v133 = v45;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_61_4();
  MEMORY[0x24BDAC7A8](v47);
  v48 = OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_13_13(v48);
  if (!v49)
    goto LABEL_10;
  v51 = v49;
  v130 = v50;
  v126 = v43;
  v52 = *(_QWORD *)(v20 + 48);
  v53 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v53);
  v135 = v55;
  if (!v55)
  {
LABEL_9:
    OUTLINED_FUNCTION_21_12();
LABEL_10:
    sub_242A6A5B0();
    v67 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C4FEE0, v67, v68);
    goto LABEL_11;
  }
  v117 = v52;
  v125 = v54;
  v56 = *(uint64_t **)(v26 + 56);
  v57 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v57);
  v123 = v59;
  if (!v58)
  {
    OUTLINED_FUNCTION_21_12();
    goto LABEL_9;
  }
  v122 = v58;
  ObjectType = swift_getObjectType();
  v61 = *(void (**)(uint64_t *__return_ptr))(v130 + 8);
  v120 = ObjectType;
  v61(v137);
  if (LOBYTE(v137[0]) > 0xCu || (OUTLINED_FUNCTION_40_5(), v62))
  {
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v107 = 0xD000000000000014;
    v107[1] = 0x8000000242C67C30;
    OUTLINED_FUNCTION_5_21((uint64_t)v107, 3);
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_51_7();
    OUTLINED_FUNCTION_43_9();
    goto LABEL_11;
  }
  v63 = *(_QWORD *)(v26 + 64);
  v121 = v22;
  v124 = v23;
  v113 = v56;
  if (v63)
  {
    v64 = sub_242B89308();
    OUTLINED_FUNCTION_13_13(v64);
    v119 = v65;
    v115 = v66;
  }
  else
  {
    v119 = 0;
    v115 = 0;
  }
  OUTLINED_FUNCTION_64_3();
  v69 = OUTLINED_FUNCTION_65_3();
  v110 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v125 + 16);
  v110(v137, v69, v125);
  v70 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v125 + 8);
  v109 = v69;
  v70(&a10, v69, v125);
  OUTLINED_FUNCTION_30_10(v137, (uint64_t)&a10);
  v116 = v71;
  v72 = OUTLINED_FUNCTION_65_3();
  OUTLINED_FUNCTION_75_3(v72);
  OUTLINED_FUNCTION_75_3(v72);
  sub_242B1D8D0(v137, (uint64_t)&a10, 0);
  a10 = 0;
  v118 = v73;
  v127 = v21;
  if (v119)
  {
    v74 = swift_getObjectType();
    v21 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(v115 + 16);
    swift_unknownObjectRetain();
    v21(v137, v74, v115);
    OUTLINED_FUNCTION_75_3(v74);
    OUTLINED_FUNCTION_30_10(v137, (uint64_t)&v136);
    v76 = v75;
    v127 = v21;
    swift_unknownObjectRelease();
    a10 = v76;
  }
  v77 = v121;
  v78 = *(_QWORD *)(v117 + 152);
  if (!*(_QWORD *)(v78 + 16))
  {
    OUTLINED_FUNCTION_5_24();
    goto LABEL_26;
  }
  v114 = v39;
  v111 = v26;
  v112 = *(_QWORD *)(v78 + 32);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v130 + 16))(v137, v120);
  OUTLINED_FUNCTION_1_7((uint64_t)v137, v121);
  v110(v137, v109, v125);
  OUTLINED_FUNCTION_1_7((uint64_t)v137, v124);
  v79 = v113[19];
  v80 = OUTLINED_FUNCTION_0_2();
  sub_242B05F74(v80);
  v117 = v51;
  v81 = *MEMORY[0x24BEDF508];
  v82 = sub_242C47600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(v38, v81, v82);
  OUTLINED_FUNCTION_10_14(v38, 0);
  v83 = v133;
  OUTLINED_FUNCTION_54_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v84 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v84 + 16) = xmmword_242C4B7D0;
  if (!*(_QWORD *)(v79 + 16))
  {
    OUTLINED_FUNCTION_20_15();
LABEL_26:
    sub_242C480E0();
    OUTLINED_FUNCTION_10_16();
  }
  *(_QWORD *)(v84 + 32) = *(_QWORD *)(v79 + 32);
  OUTLINED_FUNCTION_10_14(v38, 1);
  v85 = v126;
  OUTLINED_FUNCTION_54_4();
  OUTLINED_FUNCTION_62_4(v132, v77);
  OUTLINED_FUNCTION_18_14(v132);
  v86 = v131;
  v87 = v124;
  OUTLINED_FUNCTION_62_4(v131, v124);
  OUTLINED_FUNCTION_18_14(v131);
  v88 = v129;
  OUTLINED_FUNCTION_62_4(v129, v83);
  OUTLINED_FUNCTION_18_14(v129);
  v89 = v128;
  OUTLINED_FUNCTION_62_4(v128, v126);
  v90 = OUTLINED_FUNCTION_18_14(v128);
  v113 = &v108;
  v91 = MEMORY[0x24BDAC7A8](v90);
  *(&v108 - 12) = v116;
  *(&v108 - 11) = v87;
  *(&v108 - 10) = v118;
  *(&v108 - 9) = v83;
  *(&v108 - 8) = (uint64_t)&a10;
  *(&v108 - 7) = v85;
  v92 = v130;
  *(&v108 - 6) = v117;
  *(&v108 - 5) = v92;
  v93 = v121;
  v94 = v111;
  *(&v108 - 4) = v121;
  *(&v108 - 3) = v94;
  *(&v108 - 2) = v112;
  MEMORY[0x24BDAC7A8](v91);
  v95 = v125;
  *(&v108 - 12) = v135;
  *(&v108 - 11) = v95;
  *(&v108 - 10) = v86;
  v96 = v123;
  *(&v108 - 9) = v122;
  *(&v108 - 8) = v96;
  v97 = v119;
  *(&v108 - 7) = v88;
  *(&v108 - 6) = v97;
  *(&v108 - 5) = v115;
  *(&v108 - 4) = v89;
  *(&v108 - 3) = (uint64_t)sub_242AB0968;
  *(&v108 - 2) = v98;
  OUTLINED_FUNCTION_71_3((uint64_t)sub_242AB09A4, (uint64_t)(&v108 - 14), MEMORY[0x24BEE4AE0] + 8, (uint64_t)&a16);
  if (v21)
  {
    OUTLINED_FUNCTION_17_2();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_43_9();
    OUTLINED_FUNCTION_23_13();
    OUTLINED_FUNCTION_41_11();
    OUTLINED_FUNCTION_15_11();
    sub_242A6AB60(v131);
    sub_242A6AB60(v132);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_47_5(v126);
    OUTLINED_FUNCTION_47_5(v133);
    OUTLINED_FUNCTION_47_5(v124);
    OUTLINED_FUNCTION_47_5(v93);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_41_11();
    OUTLINED_FUNCTION_15_11();
    sub_242A6AB60(v131);
    sub_242A6AB60(v132);
    v99 = a10;
    if (a10)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v100 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v100 + 16) = xmmword_242C4B810;
      v101 = OUTLINED_FUNCTION_80_3((_QWORD *)v100, (uint64_t)&off_251387678);
      v101[8] = v99;
      v101[9] = v102;
      swift_retain();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v103 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v103 + 16) = xmmword_242C4B7F0;
      OUTLINED_FUNCTION_80_3((_QWORD *)v103, (uint64_t)&off_251387678);
    }
    v104 = v134;
    v105 = v114;
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_51_7();
    OUTLINED_FUNCTION_43_9();
    OUTLINED_FUNCTION_23_13();
    v106 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
    OUTLINED_FUNCTION_44_6((uint64_t)&a15);
    v106(v133, v105);
    OUTLINED_FUNCTION_44_6((uint64_t)&a13);
    OUTLINED_FUNCTION_44_6((uint64_t)&a10);
    swift_release();
  }
LABEL_11:
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AACCCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, __int128 a12, __int128 a13, uint64_t a14)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  _UNKNOWN **v28;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  _UNKNOWN **v42;
  char *v43;
  uint64_t v44;
  _UNKNOWN **v45;
  char *v46;
  uint64_t (*v47)(uint64_t, const void *, uint64_t);
  char *v48;
  char v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v37 = a7;
  v39 = a5;
  v36 = a4;
  v35 = a3;
  v34 = a2;
  v33 = a1;
  v38 = a9;
  v32 = a14;
  v31 = a13;
  v30 = a12;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v30 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  v25 = sub_242C47930();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v26(v24, a6, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v25);
  v26(v22, a8, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v25);
  v27 = *a10;
  if (*a10)
    v28 = &off_251387678;
  else
    v28 = 0;
  v26(v19, a11, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v25);
  v50 = v30;
  v51 = v31;
  v52 = v32;
  v53 = v33;
  v54 = v34;
  v55 = v35;
  v56 = v36;
  v41 = v37;
  v42 = &off_251387678;
  v43 = v22;
  v44 = v27;
  v45 = v28;
  v46 = v19;
  v47 = sub_242AB09B8;
  v48 = &v49;
  swift_retain();
  sub_242A6A608((uint64_t)v24, (uint64_t (*)(_BYTE *))sub_242AB08C0, (uint64_t)v40, v38);
  swift_release();
  sub_242A6AB60((uint64_t)v19);
  sub_242A6AB60((uint64_t)v22);
  return sub_242A6AB60((uint64_t)v24);
}

uint64_t sub_242AACF48(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t ObjectType;
  uint64_t v23;
  _QWORD v24[5];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[45];
  uint64_t v28;
  _BYTE v29[176];
  uint64_t v30;

  v24[2] = a8;
  v25 = a6;
  v24[0] = a1;
  v24[1] = a3;
  v24[4] = a10;
  v30 = a11;
  v26 = a12;
  memcpy(v29, a2, sizeof(v29));
  v13 = sub_242C477C8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_242C47930();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 8))(v27, ObjectType, a5);
  sub_242B526F4();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v25, v17);
  sub_242C489C8();
  sub_242C47810();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEDF7E0], v13);
  sub_242C48A28();
  sub_242C489B0();
  if (sub_242C47804())
  {
    memcpy(v27, v29, 0xB0uLL);
    sub_242AA3C00((uint64_t)v27);
    sub_242AB0920((uint64_t)v27, (uint64_t)&v28);
    sub_242C47774();
    return swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v23 = xmmword_242C4FEE0;
    *(_BYTE *)(v23 + 16) = 4;
    return swift_willThrow();
  }
}

#error "242AAD18C: call analysis failed (funcsize=5)"

uint64_t sub_242AAD198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t *a15)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  void (*v37)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;

  v85 = a8;
  v84 = a7;
  v87 = a6;
  v86 = a5;
  v94 = a3;
  v95 = a4;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v88 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v71 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v71 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v25);
  v82 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_242C47930();
  v93 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v91 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v92 = (char *)&v71 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v97 = (char *)&v71 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v96 = (char *)&v71 - v34;
  v35 = *a15;
  ObjectType = swift_getObjectType();
  v81 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
  v81(&v98, ObjectType, a2);
  if (v98 > 0xCu || ((1 << v98) & 0x1777) == 0)
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v70 = xmmword_242C4FF00;
    *(_BYTE *)(v70 + 16) = 3;
    return swift_willThrow();
  }
  v79 = v22;
  v80 = v24;
  if (!*(_QWORD *)(v35 + 16))
  {
    v98 = 0;
    v99 = 0;
    v100 = 0;
    v101 = -1;
    v103 = 0;
    v104 = 0;
    v102 = 0;
    v105 = -1;
    v106 = 4;
    sub_242C480E0();
    goto LABEL_12;
  }
  v78 = *(_QWORD *)(v35 + 32);
  v37 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  v76 = ObjectType;
  v90 = a2;
  v37(&v98, ObjectType, a2);
  sub_242B51AEC((uint64_t)&v98, 0, 2, (uint64_t)v96);
  v98 = v35;
  sub_242C480E0();
  sub_242B51AEC((uint64_t)&v98, 0, 2, (uint64_t)v97);
  v38 = swift_getObjectType();
  v89 = a1;
  v39 = v38;
  v40 = v95;
  v41 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v95 + 16);
  v41(&v98, v38, v95);
  v42 = v92;
  v77 = a13;
  sub_242AAEC84(v98);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_242C4B7D0;
  v41(&v107, v39, v40);
  if (!*(_QWORD *)(v107 + 16))
  {
    v98 = 0;
    v99 = 0;
    v100 = 0;
    v101 = -1;
    v103 = 0;
    v104 = 0;
    v102 = 0;
    v105 = -1;
    v106 = 4;
LABEL_12:
    sub_242A59264();
  }
  v72 = a14;
  v75 = a12;
  v74 = a11;
  v73 = a10;
  v71 = a9;
  v44 = *(_QWORD *)(v107 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 32) = v44;
  v45 = *MEMORY[0x24BEDF518];
  v46 = sub_242C47600();
  v47 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v82, v45, v46);
  __swift_storeEnumTagSinglePayload(v47, 0, 1, v46);
  v48 = v91;
  sub_242C4793C();
  type metadata accessor for NativeTensorStorage();
  v98 = v35;
  sub_242C480E0();
  v81(&v107, v76, v90);
  v49 = v83;
  sub_242B1D8D0(&v98, (uint64_t)&v107, 0);
  v51 = v50;
  v82 = v49;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
  v53 = (uint64_t)v80;
  v52(v80, (uint64_t)v96, v27);
  __swift_storeEnumTagSinglePayload(v53, 0, 1, v27);
  v54 = (uint64_t)v79;
  v52(v79, (uint64_t)v42, v27);
  __swift_storeEnumTagSinglePayload(v54, 0, 1, v27);
  v55 = (uint64_t)v88;
  v52(v88, (uint64_t)v48, v27);
  v56 = __swift_storeEnumTagSinglePayload(v55, 0, 1, v27);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v83 = v51;
  v58 = (uint64_t)v97;
  *(&v71 - 12) = (uint64_t)v51;
  *(&v71 - 11) = v58;
  *((_BYTE *)&v71 - 80) = v72 & 1;
  v59 = v73;
  *(&v71 - 9) = v71;
  *(&v71 - 8) = v59;
  v60 = v84;
  *(&v71 - 7) = v77;
  *(&v71 - 6) = v60;
  v61 = v74;
  *(&v71 - 5) = v85;
  *(&v71 - 4) = v61;
  v62 = v78;
  *(&v71 - 3) = v75;
  *(&v71 - 2) = v62;
  MEMORY[0x24BDAC7A8](v57);
  v63 = v95;
  *(&v71 - 8) = v94;
  *(&v71 - 7) = v63;
  v64 = v86;
  *(&v71 - 6) = v54;
  *(&v71 - 5) = v64;
  *(&v71 - 4) = v87;
  *(&v71 - 3) = v55;
  *(&v71 - 2) = (uint64_t)sub_242AB09F0;
  *(&v71 - 1) = v65;
  v66 = v82;
  sub_242BF6310((uint64_t)sub_242AB08C0, (uint64_t)(&v71 - 10), MEMORY[0x24BEE4AE0] + 8, (uint64_t)&v107);
  if (v66)
  {
    sub_242A6AB60(v55);
    sub_242A6AB60(v54);
    sub_242A6AB60(v53);
    v67 = *(void (**)(char *, uint64_t))(v93 + 8);
    v67(v91, v27);
    v67(v92, v27);
    v67(v96, v27);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v67)(v97, v27);
  }
  else
  {
    sub_242A6AB60(v55);
    sub_242A6AB60(v54);
    sub_242A6AB60(v53);
    v69 = *(void (**)(char *, uint64_t))(v93 + 8);
    v69(v91, v27);
    v69(v92, v27);
    v69(v96, v27);
    v69(v97, v27);
    return (uint64_t)v83;
  }
}

uint64_t sub_242AAD920(uint64_t a1)
{
  return sub_242AAE444(a1, 0, (__n128)xmmword_242C4FEF0);
}

void sub_242AAD940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v2 = OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_5_10(v2);
  if (!v3)
    goto LABEL_8;
  v4 = OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_5_10(v4);
  if (!v5)
  {
LABEL_7:
    OUTLINED_FUNCTION_145();
LABEL_8:
    sub_242A6A5B0();
    v12 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C4FF10, v12, v13);
LABEL_9:
    OUTLINED_FUNCTION_25_9();
    return;
  }
  v6 = OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_5_10(v6);
  if (!v8)
  {
    OUTLINED_FUNCTION_145();
    goto LABEL_7;
  }
  v60 = v7;
  if (*(_QWORD *)(v1 + 56))
  {
    v9 = sub_242B89308();
    OUTLINED_FUNCTION_5_10(v9);
    v64 = v10;
    v58 = v11;
  }
  else
  {
    v64 = 0;
    v58 = 0;
  }
  if (*(_QWORD *)(OUTLINED_FUNCTION_13_16() + 16))
  {
    OUTLINED_FUNCTION_53_4();
    v14 = swift_bridgeObjectRelease();
    v65 = v1;
    OUTLINED_FUNCTION_4_22(v14, v15, v16, v17, v18, v19, v20, v21, v30, v32, v34, v36, v38, v40, v42, 0, &v65, v46, v48,
      v50,
      v52,
      v54,
      v56,
      v58,
      v60,
      v62,
      v63,
      v64);
    if (v0)
    {
      OUTLINED_FUNCTION_21_12();
      OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_145();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_32_10();
    }
    else
    {
      OUTLINED_FUNCTION_26_12();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v22 = (__n128 *)OUTLINED_FUNCTION_2_0();
      if ((_QWORD)v61)
      {
        OUTLINED_FUNCTION_16_14((uint64_t)v22, (__n128)xmmword_242C4B810, v23, v24, v25, v26, v27, v28, v29, v31, v33, v35, v37, v39, v41, v43, v44, v45, v47,
          v49,
          v51,
          v53,
          v55,
          v57,
          v59,
          v61);
        swift_unknownObjectRetain();
        OUTLINED_FUNCTION_58_3();
        OUTLINED_FUNCTION_83_2();
      }
      else
      {
        OUTLINED_FUNCTION_34_9(v22, (__n128)xmmword_242C4B7F0, v23, v24, v25, v26, v27, v28, v29, v31, v33, v35, v37, v39, v41, v43, v44, v45, v47,
          v49,
          v51,
          v53,
          v55,
          v57,
          v59);
        OUTLINED_FUNCTION_58_3();
      }
      OUTLINED_FUNCTION_23_13();
      OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_145();
      OUTLINED_FUNCTION_32_10();
    }
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_242AADAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, uint64_t *a18)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v53)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v54)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v55)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v56)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v79)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v84)(char *, uint64_t);
  uint64_t result;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  _UNKNOWN **v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  char *v94;
  void (*v95)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v96)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  void (*v109)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  uint64_t v134;

  v113 = a8;
  v120 = a7;
  v117 = a6;
  v116 = a5;
  v111 = a4;
  v110 = a3;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v112 = (char *)v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v91 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v91 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_242C47930();
  v119 = *(_QWORD *)(v32 - 8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v115 = (char *)v91 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v118 = (char *)v91 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v122 = (char *)v91 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v123 = (char *)v91 - v39;
  v40 = *a18;
  ObjectType = swift_getObjectType();
  v109 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
  v109(&v125, ObjectType, a2);
  if (v125 > 0xCu || ((1 << v125) & 0x1777) == 0)
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v90 = 0xD000000000000014;
    *(_QWORD *)(v90 + 8) = 0x8000000242C67C30;
    *(_BYTE *)(v90 + 16) = 3;
    return swift_willThrow();
  }
  v94 = v31;
  v106 = v32;
  v107 = v26;
  v108 = v28;
  if (!*(_QWORD *)(v40 + 16))
  {
    v125 = 0;
    v126 = 0;
    v127 = 0;
    v128 = -1;
    v130 = 0;
    v131 = 0;
    v129 = 0;
    v132 = -1;
    v133 = 4;
    sub_242C480E0();
    goto LABEL_18;
  }
  v91[0] = a9;
  v105 = *(_QWORD *)(v40 + 32);
  v96 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  v96(&v125, ObjectType, a2);
  sub_242B51AEC((uint64_t)&v125, 0, 2, (uint64_t)v123);
  v125 = v40;
  sub_242C480E0();
  sub_242B51AEC((uint64_t)&v125, 0, 2, (uint64_t)v122);
  v42 = swift_getObjectType();
  v121 = a1;
  v43 = v117;
  v44 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v117 + 16);
  v44(&v125, v42, v117);
  v104 = a16;
  sub_242AAEC84(v125);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_242C4B7D0;
  v93 = v42;
  v95 = v44;
  v44(&v134, v42, v43);
  if (!*(_QWORD *)(v134 + 16))
  {
    v125 = 0;
    v126 = 0;
    v127 = 0;
    v128 = -1;
    v130 = 0;
    v131 = 0;
    v129 = 0;
    v132 = -1;
    v133 = 4;
LABEL_18:
    sub_242A59264();
  }
  v99 = a17;
  v103 = a15;
  v102 = a14;
  v100 = a13;
  v97 = a12;
  v101 = a11;
  v98 = a10;
  v46 = *(_QWORD *)(v134 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 32) = v46;
  v47 = *MEMORY[0x24BEDF518];
  v48 = sub_242C47600();
  v49 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v94, v47, v48);
  __swift_storeEnumTagSinglePayload(v49, 0, 1, v48);
  sub_242C4793C();
  type metadata accessor for NativeTensorStorage();
  v96(&v125, ObjectType, a2);
  v50 = a2;
  v51 = a2;
  v52 = v109;
  v109(&v134, ObjectType, v50);
  v53 = v114;
  sub_242B1D8D0(&v125, (uint64_t)&v134, 0);
  v114 = v54;
  v95(&v125, v93, v43);
  v52(&v134, ObjectType, v51);
  sub_242B1D8D0(&v125, (uint64_t)&v134, 0);
  v55 = v53;
  v125 = 0;
  v96 = v56;
  v92 = v51;
  v91[1] = ObjectType;
  if (v120)
  {
    v57 = ObjectType;
    v58 = swift_getObjectType();
    v59 = v113;
    v60 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v113 + 16);
    swift_unknownObjectRetain();
    v60(&v134, v58, v59);
    v52((uint64_t *)&v124, v57, v51);
    sub_242B1D8D0(&v134, (uint64_t)&v124, 0);
    v62 = v61;
    v109 = v55;
    swift_unknownObjectRelease();
    v125 = v62;
    v63 = (uint64_t)v108;
    v64 = (uint64_t)v107;
    v65 = v106;
  }
  else
  {
    v63 = (uint64_t)v108;
    v64 = (uint64_t)v107;
    v65 = v106;
    v109 = v53;
  }
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16);
  v67 = (uint64_t)v123;
  v66(v63, (uint64_t)v123, v65);
  __swift_storeEnumTagSinglePayload(v63, 0, 1, v65);
  v68 = v118;
  v66(v64, (uint64_t)v118, v65);
  __swift_storeEnumTagSinglePayload(v64, 0, 1, v65);
  v69 = (uint64_t)v112;
  v70 = v115;
  v66((uint64_t)v112, (uint64_t)v115, v65);
  v71 = __swift_storeEnumTagSinglePayload(v69, 0, 1, v65);
  v72 = MEMORY[0x24BDAC7A8](v71);
  v73 = v92;
  v91[-20] = v121;
  v91[-19] = v73;
  v91[-18] = v122;
  LOBYTE(v91[-17]) = v99 & 1;
  v74 = v100;
  v91[-16] = v97;
  v91[-15] = v74;
  v75 = v98;
  v91[-14] = v104;
  v91[-13] = v75;
  v76 = v102;
  v91[-12] = v101;
  v91[-11] = v76;
  v77 = v110;
  v91[-10] = v103;
  v91[-9] = v77;
  v78 = v114;
  v91[-8] = v111;
  v91[-7] = v78;
  v91[-6] = v67;
  v79 = v96;
  v91[-5] = v96;
  v91[-4] = v68;
  v91[-3] = &v125;
  v91[-2] = v70;
  v91[-1] = v105;
  MEMORY[0x24BDAC7A8](v72);
  v80 = v117;
  v91[-8] = v116;
  v91[-7] = v80;
  v81 = v120;
  v91[-6] = v64;
  v91[-5] = v81;
  v91[-4] = v113;
  v91[-3] = v69;
  v91[-2] = sub_242AB0A2C;
  v91[-1] = v82;
  v83 = v109;
  sub_242BF6310((uint64_t)sub_242AB08C0, (uint64_t)&v91[-10], MEMORY[0x24BEE4AE0] + 8, (uint64_t)&v134);
  if (v83)
  {
    sub_242A6AB60(v69);
    sub_242A6AB60(v64);
    sub_242A6AB60(v63);
    swift_release();
    swift_release();
    v84 = *(void (**)(char *, uint64_t))(v119 + 8);
    v84(v70, v65);
    v84(v68, v65);
    v84(v122, v65);
    v84(v123, v65);
    return swift_release();
  }
  else
  {
    sub_242A6AB60(v69);
    sub_242A6AB60(v64);
    sub_242A6AB60(v63);
    v86 = *(void (**)(char *, uint64_t))(v119 + 8);
    v86(v70, v65);
    v86(v68, v65);
    v86(v122, v65);
    result = ((uint64_t (*)(char *, uint64_t))v86)(v123, v65);
    v87 = v125;
    if (v125)
      v88 = &off_251387678;
    else
      v88 = 0;
    v89 = (_QWORD *)v91[0];
    *(_QWORD *)v91[0] = v114;
    v89[1] = &off_251387678;
    v89[2] = v79;
    v89[3] = &off_251387678;
    v89[4] = v87;
    v89[5] = v88;
  }
  return result;
}

void sub_242AAE430()
{
  sub_242AAD940();
}

uint64_t sub_242AAE444(uint64_t a1, char a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v6 = v4;
  v7 = v3;
  v9 = sub_242B89308();
  OUTLINED_FUNCTION_45_4(v9);
  if (!v10)
    goto LABEL_6;
  v12 = v10;
  v13 = v11;
  v14 = sub_242B89308();
  OUTLINED_FUNCTION_45_4(v14);
  if (!v15)
  {
    OUTLINED_FUNCTION_145();
LABEL_6:
    sub_242A6A5B0();
    v21 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30(a3, v21, v22);
    return a1;
  }
  v17 = v15;
  v33 = v16;
  if (*(_QWORD *)(v3 + 56))
  {
    v18 = sub_242B89308();
    OUTLINED_FUNCTION_45_4(v18);
    v35 = v19;
    v32 = v20;
  }
  else
  {
    v35 = 0;
    v32 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
  a1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(a1 + 16) = xmmword_242C4B7D0;
  v23 = *(_QWORD *)(v3 + 64);
  v24 = *(_QWORD *)(v3 + 72);
  v30 = *(_OWORD *)(v3 + 96);
  v31 = *(_OWORD *)(v3 + 80);
  v25 = *(_QWORD *)(v3 + 112);
  v36 = *(_QWORD *)(v7 + 192);
  sub_242C480E0();
  v26 = sub_242AAD198(v12, v13, v17, v33, v35, v32, v23, v24, v31, *((uint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), v25, a2 & 1, &v36);
  v28 = v27;
  swift_bridgeObjectRelease();
  if (v6)
  {
    *(_QWORD *)(a1 + 16) = 0;
    OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_145();
    swift_release();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v26;
    *(_QWORD *)(a1 + 40) = v28;
    OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_145();
  }
  OUTLINED_FUNCTION_23_13();
  return a1;
}

uint64_t sub_242AAE5F0(uint64_t a1)
{
  return sub_242AAE444(a1, 1, (__n128)xmmword_242C4FF20);
}

void sub_242AAE610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_5_10(v2);
  if (!v3)
    goto LABEL_8;
  v4 = OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_5_10(v4);
  if (!v5)
  {
LABEL_7:
    OUTLINED_FUNCTION_145();
LABEL_8:
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v12 = 0xD000000000000013;
    v12[1] = 0x8000000242C67C50;
    OUTLINED_FUNCTION_5_21((uint64_t)v12, 2);
LABEL_9:
    OUTLINED_FUNCTION_25_9();
    return;
  }
  v6 = OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_5_10(v6);
  if (!v8)
  {
    OUTLINED_FUNCTION_145();
    goto LABEL_7;
  }
  v59 = v7;
  if (*(_QWORD *)(v1 + 56))
  {
    v9 = sub_242B89308();
    OUTLINED_FUNCTION_5_10(v9);
    v63 = v10;
    v57 = v11;
  }
  else
  {
    v63 = 0;
    v57 = 0;
  }
  if (*(_QWORD *)(OUTLINED_FUNCTION_13_16() + 16))
  {
    OUTLINED_FUNCTION_53_4();
    v13 = swift_bridgeObjectRelease();
    v64 = v1;
    OUTLINED_FUNCTION_4_22(v13, v14, v15, v16, v17, v18, v19, v20, v29, v31, v33, v35, v37, v39, v41, 1u, &v64, v45, v47,
      v49,
      v51,
      v53,
      v55,
      v57,
      v59,
      v61,
      v62,
      v63);
    if (v0)
    {
      OUTLINED_FUNCTION_21_12();
      OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_145();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_32_10();
    }
    else
    {
      OUTLINED_FUNCTION_26_12();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v21 = (__n128 *)OUTLINED_FUNCTION_2_0();
      if ((_QWORD)v60)
      {
        OUTLINED_FUNCTION_16_14((uint64_t)v21, (__n128)xmmword_242C4B810, v22, v23, v24, v25, v26, v27, v28, v30, v32, v34, v36, v38, v40, v42, v43, v44, v46,
          v48,
          v50,
          v52,
          v54,
          v56,
          v58,
          v60);
        swift_unknownObjectRetain();
        OUTLINED_FUNCTION_58_3();
        OUTLINED_FUNCTION_83_2();
      }
      else
      {
        OUTLINED_FUNCTION_34_9(v21, (__n128)xmmword_242C4B7F0, v22, v23, v24, v25, v26, v27, v28, v30, v32, v34, v36, v38, v40, v42, v43, v44, v46,
          v48,
          v50,
          v52,
          v54,
          v56,
          v58);
        OUTLINED_FUNCTION_58_3();
      }
      OUTLINED_FUNCTION_23_13();
      OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_145();
      OUTLINED_FUNCTION_32_10();
    }
    goto LABEL_9;
  }
  __break(1u);
}

void sub_242AAE7AC()
{
  sub_242AAE610();
}

void sub_242AAE7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 *v67;
  uint64_t v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t ObjectType;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;

  OUTLINED_FUNCTION_18_1();
  a19 = v24;
  a20 = v25;
  v76 = v21;
  v26 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_36_11();
  v30 = v28 - v29;
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_61_4();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v69 - v33;
  v35 = OUTLINED_FUNCTION_14_1();
  v80 = *(_QWORD *)(v35 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v36);
  v78 = (uint64_t)v69 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_8_11();
  v79 = v39;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v40);
  v41 = OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_13_13(v41);
  if (!v43)
    goto LABEL_7;
  v77 = v42;
  v44 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v44);
  if (!v45)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_7:
    sub_242A6A5B0();
    v66 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C4FF30, v66, v67);
    goto LABEL_8;
  }
  v47 = v45;
  v75 = v46;
  type metadata accessor for NativeTensorStorage();
  a10 = *(_QWORD *)(v20 + 64);
  v81 = *(_BYTE *)(v20 + 72);
  sub_242C480E0();
  v48 = (uint64_t *)OUTLINED_FUNCTION_18_2();
  v49 = v76;
  sub_242B1D8D0(v48, v50, v51);
  v72 = v52;
  v74 = v49;
  OUTLINED_FUNCTION_84_3(v52);
  v71 = v30;
  OUTLINED_FUNCTION_50_7((uint64_t)&a10, v22);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr))(v77 + 16))(&a10);
  v53 = v47;
  v54 = v79;
  OUTLINED_FUNCTION_50_7((uint64_t)&a10, v79);
  v55 = OUTLINED_FUNCTION_65_3();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v75 + 16))(&a10, v55);
  v70 = v26;
  v56 = v78;
  OUTLINED_FUNCTION_50_7((uint64_t)&a10, v78);
  v57 = v54;
  v58 = v53;
  OUTLINED_FUNCTION_77_2((uint64_t)v34, v57);
  OUTLINED_FUNCTION_0_10((uint64_t)v34);
  OUTLINED_FUNCTION_77_2(v23, v56);
  OUTLINED_FUNCTION_0_10(v23);
  v59 = v71;
  v76 = v22;
  v60 = v23;
  v61 = v72;
  OUTLINED_FUNCTION_77_2(v71, v22);
  v62 = __swift_storeEnumTagSinglePayload(v59, 0, 1, v35);
  v69[1] = v69;
  MEMORY[0x24BDAC7A8](v62);
  v63 = v75;
  v69[-8] = v58;
  v69[-7] = v63;
  v69[-6] = v60;
  v69[-5] = v61;
  v69[-4] = &off_251387678;
  v69[-3] = v59;
  v64 = v70;
  v69[-2] = sub_242AB0ADC;
  v69[-1] = v64;
  swift_retain();
  v65 = v74;
  sub_242BF6310((uint64_t)sub_242AB0AF4, (uint64_t)&v69[-10], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
  if (v65)
  {
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_37_10();
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_15_11();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_37_10();
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_15_11();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v68 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v68 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v68 + 32) = v61;
    *(_QWORD *)(v68 + 40) = &off_251387678;
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_17_2();
  }
  OUTLINED_FUNCTION_15_1(v78);
  OUTLINED_FUNCTION_15_1(v79);
  OUTLINED_FUNCTION_15_1(v76);
LABEL_8:
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AAEB50()
{
  uint64_t v1;

  sub_242C478B8();
  sub_242C48A28();
  sub_242C489B0();
  if (sub_242C478AC())
  {
    sub_242C478A0();
    return swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v1 = xmmword_242C4FF30;
    *(_BYTE *)(v1 + 16) = 4;
    return swift_willThrow();
  }
}

#error "242AAEC78: call analysis failed (funcsize=5)"

uint64_t sub_242AAEC84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  sub_242C480E0();
  if (v5 == 3)
  {
    sub_242C35F4C(2, 2, 1);
    a1 = v10;
  }
  sub_242B05F74(a1);
  v6 = *MEMORY[0x24BEDF510];
  v7 = sub_242C47600();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v4, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v7);
  return sub_242C4793C();
}

uint64_t sub_242AAED88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _OWORD v16[2];
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a7;
  v20 = a8;
  v17 = a6;
  v18 = a3;
  v16[0] = a10;
  v16[1] = a9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_242C47930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a5, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v14);
  sub_242BF651C();
  return sub_242A6AB60((uint64_t)v13);
}

void sub_242AAEEC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  _OWORD *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_18_1();
  v20 = v1;
  v3 = v2;
  v5 = v4;
  v6 = sub_242C477C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_9();
  v10 = v9 - v8;
  v11 = sub_242C477D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_48_8();
  v13 = sub_242C4775C();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_4_9();
  v17 = v16 - v15;
  v18 = (unsigned int *)MEMORY[0x24BEDF6C0];
  if ((v5 & 1) == 0)
    v18 = (unsigned int *)MEMORY[0x24BEDF6C8];
  (*(void (**)(uint64_t, _QWORD))(v14 + 104))(v17, *v18);
  sub_242C4778C();
  *v0 = v3;
  v0[1] = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v0, *MEMORY[0x24BEDF7F0], v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEDF7E0], v6);
  sub_242C48A28();
  OUTLINED_FUNCTION_36_9();
  if (sub_242C47780())
  {
    sub_242C47618();
    OUTLINED_FUNCTION_76_2();
  }
  else
  {
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v19 = xmmword_242C4FF00;
    OUTLINED_FUNCTION_5_21((uint64_t)v19, 4);
  }
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AAF0C4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, char **a6, int a7, _UNKNOWN **a8, uint64_t a9, char *a10, uint64_t a11, _UNKNOWN **a12, _UNKNOWN **a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17, char **a18, char *a19, char **a20,uint64_t *a21,_UNKNOWN **a22,_UNKNOWN **a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t ObjectType;
  void (*v44)(char *, char **, uint64_t);
  unsigned int *v45;
  _UNKNOWN **v46;
  unsigned int v47;
  uint64_t *v48;
  char *v49;
  uint64_t (*v50)(int, int, void *);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _UNKNOWN **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v62;
  _UNKNOWN **v63;
  uint64_t v64;
  uint64_t v65;
  _UNKNOWN **v66;
  uint64_t v67;
  uint64_t (*v68)(int, int, void *);
  uint64_t *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _UNKNOWN **v81;
  _UNKNOWN **v82;
  uint64_t v83;
  uint64_t v84;
  _UNKNOWN **v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char **v89;
  uint64_t v90;
  char v91;
  char v92[8];
  int v93;
  uint64_t v94;

  v81 = a8;
  v93 = a7;
  v89 = a6;
  v77 = a5;
  v88 = a3;
  v87 = a2;
  v90 = a1;
  v85 = a12;
  v84 = a11;
  v83 = a14;
  v82 = a13;
  v86 = a10;
  v80 = a9;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v74 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v73 = (char *)&v71 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v72 = (char *)&v71 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v71 = (char *)&v71 - v30;
  v79 = sub_242C477C8();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v76 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_242C477D4();
  v32 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v34 = (char **)((char *)&v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = sub_242C4775C();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v71 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_242C47930();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v71 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v77 + 8))(&v94, ObjectType);
  sub_242B526F4();
  v44 = *(void (**)(char *, char **, uint64_t))(v40 + 16);
  v44(v42, v89, v39);
  sub_242C489C8();
  v45 = (unsigned int *)MEMORY[0x24BEDF6C0];
  if ((v93 & 1) == 0)
    v45 = (unsigned int *)MEMORY[0x24BEDF6C8];
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v38, *v45, v35);
  sub_242C4778C();
  v46 = v81;
  *v34 = v80;
  v34[1] = v46;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x24BEDF7F0], v75);
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v76, *MEMORY[0x24BEDF7E0], v79);
  sub_242C48A28();
  v47 = sub_242C489B0();
  v69 = v48;
  v70 = v49;
  v67 = v47;
  v68 = v50;
  v66 = v82;
  v65 = v83;
  v64 = v84;
  v63 = v85;
  v51 = sub_242C47780();
  if (v51)
  {
    v85 = a23;
    v82 = a22;
    v87 = a19;
    v86 = a17;
    v88 = a16;
    v84 = a15;
    v52 = (uint64_t)v71;
    v83 = v51;
    v44(v71, v89, v39);
    __swift_storeEnumTagSinglePayload(v52, 0, 1, v39);
    v53 = (uint64_t)v72;
    v44(v72, a18, v39);
    __swift_storeEnumTagSinglePayload(v53, 0, 1, v39);
    v54 = (uint64_t)v73;
    v44(v73, a20, v39);
    __swift_storeEnumTagSinglePayload(v54, 0, 1, v39);
    v55 = *a21;
    if (*a21)
      v56 = &off_251387678;
    else
      v56 = 0;
    v81 = v56;
    v57 = (uint64_t)v74;
    v44(v74, (char **)v82, v39);
    v58 = __swift_storeEnumTagSinglePayload(v57, 0, 1, v39);
    v89 = &v71;
    MEMORY[0x24BDAC7A8](v58);
    v70 = &v91;
    v59 = swift_getObjectType();
    MEMORY[0x24BDAC7A8](v59);
    *(&v71 - 12) = v86;
    *(&v71 - 11) = (char *)&off_251387678;
    v60 = v87;
    *(&v71 - 10) = (char *)v53;
    *(&v71 - 9) = v60;
    v63 = &off_251387678;
    v64 = v54;
    v65 = v55;
    v66 = v81;
    v67 = v57;
    v68 = sub_242AB0A8C;
    v69 = &v65;
    swift_retain();
    sub_242BF6310((uint64_t)sub_242AB09A4, (uint64_t)(&v71 - 14), MEMORY[0x24BEE4AE0] + 8, (uint64_t)v92);
    swift_release();
    sub_242A6AB60(v57);
    sub_242A6AB60(v54);
    sub_242A6AB60(v53);
    sub_242A6AB60(v52);
    return swift_release();
  }
  else
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v62 = 0xD000000000000014;
    *(_QWORD *)(v62 + 8) = 0x8000000242C67C30;
    *(_BYTE *)(v62 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_242AAF75C(int a1, int a2, void *__src)
{
  uint64_t v4;
  _BYTE __dst[184];

  memcpy(__dst, __src, 0xB0uLL);
  sub_242AA3C00((uint64_t)__dst);
  sub_242AB0920((uint64_t)__dst, (uint64_t)&v4);
  return sub_242C47774();
}

uint64_t sub_242AAF808@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  unsigned int *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t DynamicType;
  unint64_t v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  int v16;
  _QWORD v17[5];
  __int128 v18;
  uint64_t v19;

  sub_242A8A798(v1, (uint64_t)&v18);
  if (v19)
  {
    if (v19 == 1)
    {
      v3 = (unsigned int *)MEMORY[0x24BEDF558];
    }
    else
    {
      if (v19 == 2)
      {
        DynamicType = 0xD00000000000004BLL;
        v9 = 0x8000000242C67C70;
        v14 = 0;
        OUTLINED_FUNCTION_64_4();
        sub_242A59170();
      }
      sub_242A64518(&v18, (uint64_t)v17);
      sub_242A587A8((uint64_t)v17, (uint64_t)&DynamicType);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
      if (!swift_dynamicCast())
      {
        __swift_project_boxed_opaque_existential_1(v17, v17[3]);
        DynamicType = swift_getDynamicType();
        v9 = v17[4];
        v10 = xmmword_242C4FF40;
        v11 = 0;
        v12 = 10;
        v13 = 0;
        v15 = 3;
        OUTLINED_FUNCTION_64_4();
        sub_242A59264();
      }
      v4 = v16;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      *a1 = v4;
      v3 = (unsigned int *)MEMORY[0x24BEDF548];
    }
  }
  else
  {
    v3 = (unsigned int *)MEMORY[0x24BEDF550];
  }
  v5 = *v3;
  v6 = sub_242C47624();
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a1, v5, v6);
}

void sub_242AAF9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 *v44;
  uint64_t *v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t ObjectType;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;

  OUTLINED_FUNCTION_18_1();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_36_11();
  v28 = v26 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v60 - v30;
  v68 = *(_QWORD *)(OUTLINED_FUNCTION_14_1() - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v32);
  v66 = (uint64_t)&v60 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_64_0();
  v67 = v35;
  v36 = sub_242B89308();
  OUTLINED_FUNCTION_13_13(v36);
  if (v38)
  {
    v39 = *(_QWORD *)(v20 + 96);
    v40 = *(_BYTE *)(v24 + 104);
    v41 = *(_QWORD *)(v39 + 16);
    v64 = v31;
    v65 = v37;
    if (v41 < 2)
      v42 = 1;
    else
      v42 = *(_QWORD *)(v39 + 32);
    v61 = v42;
    OUTLINED_FUNCTION_64_3();
    a10 = v39;
    v69 = v40;
    OUTLINED_FUNCTION_0_2();
    v45 = (uint64_t *)OUTLINED_FUNCTION_18_2();
    sub_242B1D8D0(v45, v46, v47);
    v49 = v48;
    v63 = v21;
    OUTLINED_FUNCTION_84_3(v48);
    v50 = v67;
    OUTLINED_FUNCTION_1_7((uint64_t)&a10, v67);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v65 + 16))(&a10, ObjectType, v65);
    v51 = v66;
    OUTLINED_FUNCTION_1_7((uint64_t)&a10, v66);
    v52 = v51;
    v53 = (uint64_t)v64;
    OUTLINED_FUNCTION_5_7((uint64_t)v64, v52);
    OUTLINED_FUNCTION_0_10(v53);
    OUTLINED_FUNCTION_5_7(v28, v50);
    v54 = OUTLINED_FUNCTION_0_10(v28);
    v55 = MEMORY[0x24BDAC7A8](v54);
    v56 = v61;
    *(&v60 - 2) = v24;
    *(&v60 - 1) = v56;
    MEMORY[0x24BDAC7A8](v55);
    *(&v60 - 6) = v49;
    *(&v60 - 5) = (uint64_t)&off_251387678;
    *(&v60 - 4) = v28;
    *(&v60 - 3) = (uint64_t)sub_242AB0B10;
    *(&v60 - 2) = v57;
    swift_retain();
    v58 = v63;
    sub_242BF6310((uint64_t)sub_242A6AB40, (uint64_t)(&v60 - 8), MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
    if (v58)
    {
      OUTLINED_FUNCTION_21_12();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_37_10();
      OUTLINED_FUNCTION_15_11();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_37_10();
      OUTLINED_FUNCTION_15_11();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v59 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v59 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v59 + 32) = v49;
      *(_QWORD *)(v59 + 40) = &off_251387678;
      OUTLINED_FUNCTION_21_12();
    }
    OUTLINED_FUNCTION_15_1(v66);
    OUTLINED_FUNCTION_15_1(v67);
  }
  else
  {
    sub_242A6A5B0();
    v43 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C4FF50, v43, v44);
  }
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_0_9();
}

void sub_242AAFC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_242C47624();
  MEMORY[0x24BDAC7A8](v6);
  sub_242AAF808((__int128 *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0)));
  v8 = *(_QWORD *)(a3 + 88);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v17 = a4;
    v18 = MEMORY[0x24BEE4AF8];
    sub_242C480E0();
    sub_242AC38B0();
    v10 = v18;
    v11 = v9 + 1;
    while (1)
    {
      v12 = v11 - 1;
      if (v11 == 1)
        break;
      if ((unint64_t)(v11 - 2) >= *(_QWORD *)(v8 + 16))
        goto LABEL_13;
      v13 = *(_OWORD *)(v8 + 16 * v11);
      v18 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      if (v14 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        v16 = v13;
        sub_242AC38B0();
        v13 = v16;
        v10 = v18;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      *(_OWORD *)(v10 + 16 * v14 + 32) = v13;
      v11 = v12;
      if (v12 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_242C47678();
    sub_242C48A28();
    sub_242C489B0();
    if (sub_242C4766C())
    {
      sub_242C47618();
      swift_release();
    }
    else
    {
      sub_242A6A5B0();
      swift_allocError();
      *(_OWORD *)v15 = xmmword_242C4FF50;
      *(_BYTE *)(v15 + 16) = 4;
      swift_willThrow();
    }
  }
}

#error "242AAFEBC: call analysis failed (funcsize=5)"

void sub_242AAFEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  void (*v51)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  __n128 *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[15];

  OUTLINED_FUNCTION_18_1();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_13_1();
  v91 = v28;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v29);
  v90 = (uint64_t)&v76 - v30;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_64_0();
  v92 = v32;
  v33 = OUTLINED_FUNCTION_14_1();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_13_1();
  v94 = v35;
  OUTLINED_FUNCTION_33_0();
  v37 = MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v76 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v76 - v40;
  v42 = sub_242B89308();
  sub_242A9E618(v42, v26);
  if (!v43)
    goto LABEL_9;
  v88 = v44;
  v89 = v39;
  v93 = v43;
  v45 = sub_242B89308();
  sub_242A9E618(v45, v26);
  if (!v46)
  {
    OUTLINED_FUNCTION_51_7();
LABEL_9:
    sub_242A6A5B0();
    v55 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_0_30((__n128)xmmword_242C4FF60, v55, v56);
    goto LABEL_14;
  }
  v48 = v46;
  v49 = v47;
  v87 = v34;
  ObjectType = swift_getObjectType();
  v51 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v49 + 8);
  v51(v95, ObjectType, v49);
  if (LOBYTE(v95[0]) > 0xCu || (OUTLINED_FUNCTION_40_5(), v53))
  {
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v75 = xmmword_242C4FF60;
    OUTLINED_FUNCTION_5_21((uint64_t)v75, 3);
    OUTLINED_FUNCTION_51_7();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_242BC8254(ObjectType, v49, v52);
    v86 = v41;
    v84 = (uint64_t *)v51;
    v85 = v48;
    v82 = v49;
    if (v54 < 2)
    {
      v83 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v49 + 16))(&a10, ObjectType, v49);
      if (!*(_QWORD *)(a10 + 16))
      {
        OUTLINED_FUNCTION_5_24();
        OUTLINED_FUNCTION_10_16();
      }
      v83 = *(_QWORD *)(a10 + 32);
      swift_bridgeObjectRelease();
    }
    v57 = *(_QWORD *)(v24 + 96);
    v58 = *(_BYTE *)(v24 + 104);
    OUTLINED_FUNCTION_64_3();
    v95[0] = v57;
    LOBYTE(a10) = v58;
    OUTLINED_FUNCTION_0_2();
    sub_242B1D8D0(v95, (uint64_t)&a10, 0);
    v79 = v59;
    v81 = v21;
    v95[0] = *(_QWORD *)(v59 + 16);
    sub_242C480E0();
    v60 = (uint64_t)v86;
    OUTLINED_FUNCTION_1_7((uint64_t)v95, (uint64_t)v86);
    v80 = OUTLINED_FUNCTION_65_3();
    (*(void (**)(uint64_t *__return_ptr))(v88 + 16))(v95);
    v78 = v24;
    v61 = (uint64_t)v89;
    OUTLINED_FUNCTION_1_7((uint64_t)v95, (uint64_t)v89);
    v62 = v82;
    v63 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v82 + 16);
    v64 = v85;
    v77 = ObjectType;
    v63(v95, ObjectType, v82);
    v65 = v94;
    OUTLINED_FUNCTION_1_7((uint64_t)v95, v94);
    v66 = v92;
    OUTLINED_FUNCTION_73_4(v92, v61);
    OUTLINED_FUNCTION_28_14(v66);
    v67 = v90;
    OUTLINED_FUNCTION_73_4(v90, v65);
    OUTLINED_FUNCTION_28_14(v67);
    v68 = v91;
    OUTLINED_FUNCTION_73_4(v91, v60);
    OUTLINED_FUNCTION_28_14(v68);
    v69 = v79;
    swift_retain();
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v84)(v95, v77, v62);
    sub_242B526F4();
    v84 = &v76;
    v71 = MEMORY[0x24BDAC7A8](v70);
    *((_DWORD *)&v76 - 8) = v71;
    v72 = v78;
    *(&v76 - 3) = v61;
    *(&v76 - 2) = v72;
    *(&v76 - 1) = v83;
    MEMORY[0x24BDAC7A8](v71);
    *(&v76 - 8) = v64;
    *(&v76 - 7) = v62;
    *(&v76 - 6) = v67;
    *(&v76 - 5) = v69;
    *(&v76 - 4) = (uint64_t)&off_251387678;
    *(&v76 - 3) = v68;
    *(&v76 - 2) = (uint64_t)sub_242AB0B28;
    *(&v76 - 1) = v73;
    OUTLINED_FUNCTION_71_3((uint64_t)sub_242AB0AF4, (uint64_t)(&v76 - 10), MEMORY[0x24BEE4AE0] + 8, (uint64_t)&a12);
    if (v21)
    {
      OUTLINED_FUNCTION_43_9();
      OUTLINED_FUNCTION_23_13();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_42_9();
      sub_242A6AB60(v67);
      OUTLINED_FUNCTION_52_3();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_42_9();
      sub_242A6AB60(v67);
      OUTLINED_FUNCTION_52_3();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v74 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v74 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v74 + 32) = v69;
      *(_QWORD *)(v74 + 40) = &off_251387678;
      OUTLINED_FUNCTION_43_9();
      OUTLINED_FUNCTION_23_13();
    }
    OUTLINED_FUNCTION_31_12();
    OUTLINED_FUNCTION_38_8((uint64_t)v89);
    OUTLINED_FUNCTION_38_8((uint64_t)v86);
  }
LABEL_14:
  OUTLINED_FUNCTION_0_9();
}

void sub_242AB03FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a3;
  v35 = a2;
  v33 = a1;
  v12 = sub_242C47624();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (_DWORD *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_242C47930();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v31 = a5;
  v30(v17, a5, v15);
  v32 = a4;
  sub_242C489C8();
  sub_242AAF808(v14);
  v19 = *(_QWORD *)(a6 + 88);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v28 = a7;
    v29 = v7;
    v36 = MEMORY[0x24BEE4AF8];
    sub_242C480E0();
    sub_242AC38B0();
    v21 = v36;
    v22 = v20 + 1;
    while (1)
    {
      v23 = v22 - 1;
      if (v22 == 1)
        break;
      if ((unint64_t)(v22 - 2) >= *(_QWORD *)(v19 + 16))
        goto LABEL_13;
      v24 = *(_OWORD *)(v19 + 16 * v22);
      v36 = v21;
      v25 = *(_QWORD *)(v21 + 16);
      if (v25 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        v27 = v24;
        sub_242AC38B0();
        v24 = v27;
        v21 = v36;
      }
      *(_QWORD *)(v21 + 16) = v25 + 1;
      *(_OWORD *)(v21 + 16 * v25 + 32) = v24;
      v22 = v23;
      if (v23 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_242C47678();
    sub_242C48A28();
    sub_242C489B0();
    if (sub_242C4766C())
    {
      v30(v17, v31, v15);
      sub_242C489C8();
      sub_242C4760C();
      swift_release();
    }
    else
    {
      sub_242A6A5B0();
      swift_allocError();
      *(_OWORD *)v26 = xmmword_242C4FF60;
      *(_BYTE *)(v26 + 16) = 4;
      swift_willThrow();
    }
  }
}

#error "242AB06AC: call analysis failed (funcsize=5)"

void sub_242AB06B8(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_getObjectType();
  v14 = a2;
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a7;
  v19 = a1;
  sub_242BF6310((uint64_t)sub_242AB08DC, (uint64_t)v13, MEMORY[0x24BEE4AE0] + 8, a6);
}

uint64_t sub_242AB076C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _BYTE *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t ObjectType;
  _QWORD v12[4];
  _QWORD v13[7];
  _BYTE v14[184];
  _BYTE v15[192];

  v13[2] = a3;
  v13[3] = a4;
  v13[4] = a5;
  v13[5] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v12[2] = sub_242AB08F4;
    v12[3] = v13;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3BE8, (uint64_t)v12, MEMORY[0x24BEE4AE0] + 8, a6);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_242AA3BBC(v14);
    sub_242AB0920((uint64_t)v14, (uint64_t)v15);
    return a3(a5, a1, v15);
  }
}

uint64_t sub_242AB08A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_242AAC1C8(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_242AB08C0()
{
  return sub_242AB0B48();
}

uint64_t sub_242AB08DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, _BYTE *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_60_3();
  return sub_242AB076C(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_242AB08F4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v1 + 16))(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_242AB0920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_242AB0968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;

  return sub_242AACCCC(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), a5, *(uint64_t **)(v5 + 48), *(_QWORD *)(v5 + 56), *(_OWORD *)(v5 + 64), *(_OWORD *)(v5 + 80), *(_QWORD *)(v5 + 96));
}

void sub_242AB09A4()
{
  sub_242AB0AA8();
}

uint64_t sub_242AB09B8(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_242AACF48(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[10]);
}

uint64_t sub_242AB09F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_242AAED88(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_OWORD *)(v3 + 56), *(_OWORD *)(v3 + 72));
}

uint64_t sub_242AB0A2C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_242AAF0C4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(char ***)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(_UNKNOWN ***)(v3 + 48), *(_QWORD *)(v3 + 56), *(char **)(v3 + 64), *(_QWORD *)(v3 + 72), *(_UNKNOWN ***)(v3 + 80), *(_UNKNOWN ***)(v3 + 88), *(_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 104), *(_QWORD *)(v3 + 112), *(char **)(v3 + 120), *(char ***)(v3 + 128), *(char **)(v3 + 136),
           *(char ***)(v3 + 144),
           *(uint64_t **)(v3 + 152),
           *(_UNKNOWN ***)(v3 + 160),
           *(_UNKNOWN ***)(v3 + 168));
}

uint64_t sub_242AB0A8C(int a1, int a2, void *a3)
{
  return sub_242AAF75C(a1, a2, a3);
}

void sub_242AB0AA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_60_3();
  sub_242AA34BC(v1, v2, v3, v4, v5, v6, v7, v0[8], v0[9], v0[10], v0[11], v0[12]);
}

uint64_t sub_242AB0ADC()
{
  return sub_242AAEB50();
}

uint64_t sub_242AB0AF4()
{
  return sub_242AB0B48();
}

void sub_242AB0B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242AAFC9C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_242AB0B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_242AB03FC(a1, a2, a3, *(_DWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_242AB0B48()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_60_3();
  return v1(v0);
}

uint64_t OUTLINED_FUNCTION_0_30(__n128 a1, uint64_t a2, __n128 *a3)
{
  *a3 = a1;
  a3[1].n128_u8[0] = 2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_4_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  return sub_242AADAC0(v29, v32, v28, v31, *(_QWORD *)(v34 - 144), a25, a28, a24, v34 - 136, a23, a22, a21, a20, a19, v30, v33, a16, a17);
}

void OUTLINED_FUNCTION_5_24()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 200) = 0;
  *(_QWORD *)(v0 - 192) = 0;
  *(_QWORD *)(v0 - 184) = 0;
  *(_BYTE *)(v0 - 176) = -1;
  *(_QWORD *)(v0 - 160) = 0;
  *(_QWORD *)(v0 - 152) = 0;
  *(_QWORD *)(v0 - 168) = 0;
  *(_BYTE *)(v0 - 144) = -1;
  *(_BYTE *)(v0 - 92) = 4;
}

void OUTLINED_FUNCTION_10_16()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return sub_242B01BC8();
}

uint64_t OUTLINED_FUNCTION_16_14(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,__int128 a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(__n128 *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 32) = v26;
  *(_QWORD *)(a1 + 40) = v27;
  *(_QWORD *)(a1 + 48) = v28;
  *(_QWORD *)(a1 + 56) = a25;
  *(_OWORD *)(a1 + 64) = a26;
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_18_14(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_20_15()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = 0;
  *(_QWORD *)(v1 - 192) = 0;
  *(_QWORD *)(v1 - 184) = 0;
  *(_BYTE *)(v1 - 176) = -1;
  *(_QWORD *)(v1 - 160) = 0;
  *(_QWORD *)(v1 - 152) = 0;
  *(_QWORD *)(v1 - 168) = 0;
  *(_BYTE *)(v1 - 144) = -1;
  *(_BYTE *)(v1 - 92) = 4;
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_12()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_13()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_28_14(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

void OUTLINED_FUNCTION_30_10(uint64_t *a1, uint64_t a2)
{
  sub_242B1D8D0(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_31_12()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(*(_QWORD *)(v1 - 208), v0);
}

uint64_t OUTLINED_FUNCTION_32_10()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_34_9(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25)
{
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  a1[1] = a2;
  a1[2].n128_u64[0] = v25;
  a1[2].n128_u64[1] = v26;
  a1[3].n128_u64[0] = v27;
  a1[3].n128_u64[1] = a25;
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_37_10()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_38_8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_39_9()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_40_7()
{
  return sub_242B89308();
}

uint64_t OUTLINED_FUNCTION_41_11()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_42_9()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_43_9()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_44_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);

  return v2(*(_QWORD *)(a1 - 256), v1);
}

uint64_t OUTLINED_FUNCTION_47_7()
{
  return sub_242B89308();
}

uint64_t OUTLINED_FUNCTION_48_8()
{
  return 0;
}

void OUTLINED_FUNCTION_50_7(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242B51AEC(a1, 0, 1, a2);
}

uint64_t OUTLINED_FUNCTION_51_7()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_3()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  return sub_242C4793C();
}

uint64_t OUTLINED_FUNCTION_55_5()
{
  return sub_242B89308();
}

uint64_t OUTLINED_FUNCTION_57_6()
{
  return sub_242B89308();
}

uint64_t OUTLINED_FUNCTION_58_3()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_62_4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_65_3()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_71_3(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_242BF6310(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_73_4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_75_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_76_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_77_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

_QWORD *OUTLINED_FUNCTION_80_3@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  result[4] = *(_QWORD *)(v3 - 368);
  result[5] = a2;
  result[6] = v2;
  result[7] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_81_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_83_2()
{
  return swift_unknownObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_84_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = *(_QWORD *)(a1 + 16);
  return sub_242C480E0();
}

void sub_242AB0F20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  float *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  char v11;
  BOOL v12;

  OUTLINED_FUNCTION_23_14();
  if (v0 == 10)
  {
    if (v3)
      v4 = (v2 - (uint64_t)v3) / 4;
    else
      v4 = 0;
    v6 = *(_QWORD *)(v1 + 16);
    if (!v6)
      goto LABEL_15;
    if (v4 >= v6)
    {
      if (v3)
      {
        OUTLINED_FUNCTION_26_13();
        if (v11)
          v12 = 0;
        else
          v12 = v10 > (unint64_t)v9;
        if (!v12)
        {
          OUTLINED_FUNCTION_16_15(v9, v7, 4 * v8);
          return;
        }
        goto LABEL_18;
      }
LABEL_15:
      OUTLINED_FUNCTION_7_19();
      return;
    }
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 16);
    if (!(v5 >> 61))
    {
      sub_242AB3A1C((const float *)(v1 + 32), v1 + 32 + 4 * v5, v3, v2, v0, v1, 10);
      goto LABEL_15;
    }
    __break(1u);
  }
  __break(1u);
LABEL_18:
  OUTLINED_FUNCTION_17_14();
  OUTLINED_FUNCTION_15_13();
  __break(1u);
}

uint64_t sub_242AB0FE8(const float *a1, uint64_t a2, _BYTE *a3, float *a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t result;
  uint64_t v11;
  unsigned __int8 v12;

  v8 = *a3;
  v9 = *a6;
  LOBYTE(v11) = *a3;
  v12 = v9;
  result = sub_242AB3B10(a1, a2, (unsigned __int8 *)&v11, a4, a5, &v12, a7, a8);
  if ((result & 1) == 0)
    __asm { BR              X9 }
  return result;
}

void sub_242AB38A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_23_14();
  if (v0 == 3)
  {
    if (v3)
      v4 = (v2 - (uint64_t)v3) / 8;
    else
      v4 = 0;
    v6 = *(_QWORD *)(v1 + 16);
    if (!v6)
      goto LABEL_15;
    if (v4 >= v6)
    {
      if (v3)
      {
        if (v1 + 32 >= (unint64_t)v3 + 8 * v6 || v1 + 32 + 8 * v6 <= (unint64_t)v3)
        {
          OUTLINED_FUNCTION_16_15(v3, (const void *)(v1 + 32), 8 * v6);
          return;
        }
        goto LABEL_18;
      }
LABEL_15:
      OUTLINED_FUNCTION_7_19();
      return;
    }
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 16);
    if (!(v5 >> 60))
    {
      OUTLINED_FUNCTION_24_12((const float *)(v1 + 32), v1 + 32 + 8 * v5, v0, v1, v2);
      goto LABEL_15;
    }
    __break(1u);
  }
  __break(1u);
LABEL_18:
  OUTLINED_FUNCTION_17_14();
  OUTLINED_FUNCTION_15_13();
  __break(1u);
}

void sub_242AB3964()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  char v11;
  BOOL v12;

  OUTLINED_FUNCTION_23_14();
  if (v0 == 2)
  {
    if (v3)
      v4 = (v2 - v3) / 4;
    else
      v4 = 0;
    v6 = *(_QWORD *)(v1 + 16);
    if (!v6)
      goto LABEL_15;
    if (v4 >= v6)
    {
      if (v3)
      {
        OUTLINED_FUNCTION_26_13();
        if (v11)
          v12 = 0;
        else
          v12 = v10 > (unint64_t)v9;
        if (!v12)
        {
          OUTLINED_FUNCTION_16_15(v9, v7, 4 * v8);
          return;
        }
        goto LABEL_18;
      }
LABEL_15:
      OUTLINED_FUNCTION_7_19();
      return;
    }
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 16);
    if (!(v5 >> 61))
    {
      OUTLINED_FUNCTION_24_12((const float *)(v1 + 32), v1 + 32 + 4 * v5, v0, v1, v2);
      goto LABEL_15;
    }
    __break(1u);
  }
  __break(1u);
LABEL_18:
  OUTLINED_FUNCTION_17_14();
  OUTLINED_FUNCTION_15_13();
  __break(1u);
}

uint64_t sub_242AB3A1C(const float *a1, uint64_t a2, float *a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, char a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  unsigned __int8 v20;
  char v21;

  v19 = a4;
  v13 = sub_242C49208();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a7;
  v20 = a5;
  v17 = *(_QWORD *)(a6 + 16);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE38B8], v13);
  sub_242AB0FE8(a1, a2, &v21, a3, v19, &v20, v17, (uint64_t)v16);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_242AB3B10(const float *a1, uint64_t a2, unsigned __int8 *a3, float *a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  unsigned int *v48;
  uint64_t v49;
  uint64_t v50;
  const __int16 *v51;
  const int *v52;
  const unsigned __int16 *v53;
  const unsigned int *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const __int16 *v61;
  const int *v62;
  const unsigned __int16 *v63;
  vDSP_Length v64;
  const unsigned int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  vDSP_Length v83;
  vDSP_Length v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  double *v108;
  const float *v109;
  uint64_t v110;
  const float *v111;
  uint64_t v112;
  double *v113;
  uint64_t v114;

  v109 = a1;
  v110 = a8;
  v106 = a5;
  v107 = a2;
  v108 = (double *)a4;
  v10 = sub_242C47984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v105 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v104 = (char *)&v94 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v102 = (char *)&v94 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v103 = (char *)&v94 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v101 = (char *)&v94 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v99 = (char *)&v94 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v100 = (char *)&v94 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v98 = (char *)&v94 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v96 = (char *)&v94 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v97 = (char *)&v94 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v95 = (char *)&v94 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v94 = (char *)&v94 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572233A0);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_242C49208();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v94 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572233A8);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v94 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *a3;
  v46 = *a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v41, v110, v38);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v41, v38);
  if (v47 == *MEMORY[0x24BEE38C8])
  {
    v48 = (unsigned int *)MEMORY[0x24BEDFAB8];
  }
  else
  {
    if (v47 != *MEMORY[0x24BEE38B8])
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 1, 1, v10);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
      goto LABEL_7;
    }
    v48 = (unsigned int *)MEMORY[0x24BEDFAB0];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v44, *v48, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v10);
LABEL_7:
  v49 = (uint64_t)&v37[*(int *)(v35 + 64)];
  *v37 = v45;
  v37[1] = v46;
  sub_242AB8EC8((uint64_t)v44, v49);
  switch(v45)
  {
    case 0:
      if (v46 == 10)
        goto LABEL_49;
      if (v46 != 11)
        goto LABEL_152;
LABEL_51:
      sub_242AB8F10(v49, &qword_2572233A8);
      if (v108)
        v50 = (v106 - (uint64_t)v108) / 8;
      else
        v50 = 0;
      if (v109)
        v68 = v107 - (_QWORD)v109;
      else
        v68 = 0;
      if (v68 != v50)
        goto LABEL_258;
      if (v68 < 0)
        goto LABEL_260;
      if (!v109)
        goto LABEL_275;
      if (!v108)
        goto LABEL_276;
      v67 = 1;
      vDSP_vflt8D((const char *)v109, 1, v108, 1, v107 - (_QWORD)v109);
      return v67;
    case 1:
      if (v46 == 11)
      {
        if (v108)
        {
          v50 = v106 - (_QWORD)v108;
          v61 = (const __int16 *)v109;
          if (!v109)
            goto LABEL_301;
          v50 /= 8;
        }
        else
        {
          v61 = (const __int16 *)v109;
          if (!v109)
          {
LABEL_302:
            __break(1u);
            goto LABEL_303;
          }
          v50 = 0;
        }
        if ((v107 - (uint64_t)v61) / 2 != v50)
          goto LABEL_303;
        if (v107 - (uint64_t)v61 >= -1)
        {
          if (v108)
          {
            v67 = 1;
            vDSP_vflt16D(v61, 1, v108, 1, (v107 - (uint64_t)v61) / 2);
            goto LABEL_206;
          }
          goto LABEL_283;
        }
        goto LABEL_265;
      }
      if (v46 == 10)
      {
        if (v108)
        {
          v50 = v106 - (_QWORD)v108;
          v51 = (const __int16 *)v109;
          if (!v109)
            goto LABEL_289;
          v50 /= 4;
        }
        else
        {
          v51 = (const __int16 *)v109;
          if (!v109)
          {
LABEL_290:
            __break(1u);
            goto LABEL_291;
          }
          v50 = 0;
        }
        if ((v107 - (uint64_t)v51) / 2 != v50)
          goto LABEL_291;
        if (v107 - (uint64_t)v51 >= -1)
        {
          if (v108)
          {
            v67 = 1;
            vDSP_vflt16(v51, 1, (float *)v108, 1, (v107 - (uint64_t)v51) / 2);
LABEL_206:
            sub_242AB8F10(v49, &qword_2572233A8);
            return v67;
          }
          goto LABEL_277;
        }
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
        goto LABEL_273;
      }
LABEL_152:
      sub_242AB8F10((uint64_t)v37, &qword_2572233A0);
      return 0;
    case 2:
      if (v46 == 11)
      {
        if (v108)
        {
          v50 = v106 - (_QWORD)v108;
          v62 = (const int *)v109;
          if (!v109)
            goto LABEL_304;
          v50 /= 8;
        }
        else
        {
          v62 = (const int *)v109;
          if (!v109)
          {
LABEL_305:
            __break(1u);
            goto LABEL_306;
          }
          v50 = 0;
        }
        if ((v107 - (uint64_t)v62) / 4 != v50)
          goto LABEL_306;
        if (v107 - (uint64_t)v62 >= -3)
        {
          if (v108)
          {
            v67 = 1;
            vDSP_vflt32D(v62, 1, v108, 1, (v107 - (uint64_t)v62) / 4);
            goto LABEL_206;
          }
          goto LABEL_284;
        }
        goto LABEL_266;
      }
      if (v46 != 10)
        goto LABEL_152;
      if (v108)
      {
        v50 = v106 - (_QWORD)v108;
        v52 = (const int *)v109;
        if (!v109)
          goto LABEL_292;
        v50 /= 4;
      }
      else
      {
        v52 = (const int *)v109;
        if (!v109)
        {
LABEL_293:
          __break(1u);
          goto LABEL_294;
        }
        v50 = 0;
      }
      if ((v107 - (uint64_t)v52) / 4 != v50)
        goto LABEL_294;
      if (v107 - (uint64_t)v52 >= -3)
      {
        if (v108)
        {
          v67 = 1;
          vDSP_vflt32(v52, 1, (float *)v108, 1, (v107 - (uint64_t)v52) / 4);
          goto LABEL_206;
        }
        goto LABEL_278;
      }
      goto LABEL_262;
    case 4:
      if (v46 == 11)
      {
        if (v108)
          v50 = (v106 - (uint64_t)v108) / 8;
        else
          v50 = 0;
        if (v109)
          v81 = v107 - (_QWORD)v109;
        else
          v81 = 0;
        if (v81 == v50)
        {
          if ((v50 & 0x8000000000000000) == 0)
          {
            if (v109)
            {
              if (v108)
              {
                v67 = 1;
                vDSP_vfltu8D((const unsigned __int8 *)v109, 1, v108, 1, v107 - (_QWORD)v109);
                goto LABEL_206;
              }
              goto LABEL_286;
            }
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            v50 += 3;
            if ((unint64_t)v50 < 7)
              goto LABEL_290;
LABEL_291:
            __break(1u);
LABEL_292:
            v50 += 3;
            if ((unint64_t)v50 < 7)
              goto LABEL_293;
LABEL_294:
            __break(1u);
LABEL_295:
            v50 += 3;
            if ((unint64_t)v50 < 7)
              goto LABEL_296;
LABEL_297:
            __break(1u);
LABEL_298:
            v50 += 3;
            if ((unint64_t)v50 < 7)
              goto LABEL_299;
LABEL_300:
            __break(1u);
LABEL_301:
            v50 += 7;
            if ((unint64_t)v50 < 0xF)
              goto LABEL_302;
LABEL_303:
            __break(1u);
LABEL_304:
            v50 += 7;
            if ((unint64_t)v50 < 0xF)
              goto LABEL_305;
LABEL_306:
            __break(1u);
LABEL_307:
            v50 += 7;
            if ((unint64_t)v50 < 0xF)
              goto LABEL_308;
LABEL_309:
            __break(1u);
LABEL_310:
            v50 += 7;
            if ((unint64_t)v50 >= 0xF)
              goto LABEL_312;
            goto LABEL_311;
          }
          goto LABEL_272;
        }
        goto LABEL_270;
      }
      if (v46 != 10)
        goto LABEL_152;
      if (v108)
        v50 = (v106 - (uint64_t)v108) / 4;
      else
        v50 = 0;
      if (v109)
        v69 = v107 - (_QWORD)v109;
      else
        v69 = 0;
      if (v69 == v50)
      {
        if ((v69 & 0x8000000000000000) == 0)
        {
          if (v109)
          {
            if (v108)
            {
              v67 = 1;
              vDSP_vfltu8((const unsigned __int8 *)v109, 1, (float *)v108, 1, v107 - (_QWORD)v109);
              goto LABEL_206;
            }
            goto LABEL_280;
          }
LABEL_279:
          __break(1u);
LABEL_280:
          __break(1u);
LABEL_281:
          __break(1u);
LABEL_282:
          __break(1u);
LABEL_283:
          __break(1u);
LABEL_284:
          __break(1u);
          goto LABEL_285;
        }
        goto LABEL_271;
      }
      goto LABEL_269;
    case 5:
      if (v46 == 11)
      {
        if (v108)
        {
          v50 = v106 - (_QWORD)v108;
          v63 = (const unsigned __int16 *)v109;
          if (!v109)
            goto LABEL_307;
          v64 = v50 / 8;
        }
        else
        {
          v63 = (const unsigned __int16 *)v109;
          if (!v109)
          {
LABEL_308:
            __break(1u);
            goto LABEL_309;
          }
          v64 = 0;
        }
        v50 = v107 - (_QWORD)v63;
        if ((v107 - (uint64_t)v63) / 2 != v64)
          goto LABEL_309;
        if (v50 >= -1)
        {
          if (v108)
          {
            v67 = 1;
            vDSP_vfltu16D(v63, 1, v108, 1, v64);
            goto LABEL_206;
          }
          goto LABEL_287;
        }
        goto LABEL_267;
      }
      if (v46 != 10)
        goto LABEL_152;
      if (v108)
      {
        v50 = v106 - (_QWORD)v108;
        v53 = (const unsigned __int16 *)v109;
        if (!v109)
          goto LABEL_295;
        v50 /= 4;
      }
      else
      {
        v53 = (const unsigned __int16 *)v109;
        if (!v109)
        {
LABEL_296:
          __break(1u);
          goto LABEL_297;
        }
        v50 = 0;
      }
      if ((v107 - (uint64_t)v53) / 2 != v50)
        goto LABEL_297;
      if (v107 - (uint64_t)v53 >= -1)
      {
        if (v108)
        {
          v67 = 1;
          vDSP_vfltu16(v53, 1, (float *)v108, 1, (v107 - (uint64_t)v53) / 2);
          goto LABEL_206;
        }
        goto LABEL_281;
      }
      goto LABEL_263;
    case 6:
      if (v46 == 11)
      {
        if (v108)
        {
          v50 = v106 - (_QWORD)v108;
          v65 = (const unsigned int *)v109;
          if (!v109)
            goto LABEL_310;
          v50 /= 8;
        }
        else
        {
          v65 = (const unsigned int *)v109;
          if (!v109)
          {
LABEL_311:
            __break(1u);
LABEL_312:
            __break(1u);
LABEL_313:
            if ((v50 & 0x8000000000000000) == 0)
              __break(1u);
LABEL_315:
            __break(1u);
LABEL_316:
            __break(1u);
LABEL_317:
            if ((v50 & 0x8000000000000000) == 0)
              __break(1u);
LABEL_319:
            __break(1u);
LABEL_320:
            __break(1u);
            JUMPOUT(0x242AB51F8);
          }
          v50 = 0;
        }
        if ((v107 - (uint64_t)v65) / 4 != v50)
          goto LABEL_312;
        if (v107 - (uint64_t)v65 >= -3)
        {
          if (v108)
          {
            v67 = 1;
            vDSP_vfltu32D(v65, 1, v108, 1, (v107 - (uint64_t)v65) / 4);
            goto LABEL_206;
          }
          goto LABEL_288;
        }
        goto LABEL_268;
      }
      if (v46 != 10)
        goto LABEL_152;
      if (v108)
      {
        v50 = v106 - (_QWORD)v108;
        v54 = (const unsigned int *)v109;
        if (!v109)
          goto LABEL_298;
        v50 /= 4;
      }
      else
      {
        v54 = (const unsigned int *)v109;
        if (!v109)
        {
LABEL_299:
          __break(1u);
          goto LABEL_300;
        }
        v50 = 0;
      }
      if ((v107 - (uint64_t)v54) / 4 != v50)
        goto LABEL_300;
      if (v107 - (uint64_t)v54 >= -3)
      {
        if (v108)
        {
          v67 = 1;
          vDSP_vfltu32(v54, 1, (float *)v108, 1, (v107 - (uint64_t)v54) / 4);
          goto LABEL_206;
        }
        goto LABEL_282;
      }
      goto LABEL_264;
    case 10:
      switch(v46)
      {
        case 0:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v94;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v94, v49, v10);
          v56 = v106 - (_QWORD)v108;
          if (!v108)
            v56 = 0;
          v113 = v108;
          v114 = v56;
          v57 = v10;
          if (v109)
            v58 = (v107 - (uint64_t)v109) / 4;
          else
            v58 = 0;
          v111 = v109;
          v112 = v58;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223420);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223410);
          sub_242A7AF34(&qword_257223428, &qword_257223420, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_257223418, &qword_257223410, MEMORY[0x24BEDFE18]);
          sub_242C479D8();
          goto LABEL_256;
        case 1:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v95;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v95, v49, v10);
          if (v108)
            v70 = (v106 - (uint64_t)v108) / 2;
          else
            v70 = 0;
          v113 = v108;
          v114 = v70;
          v57 = v10;
          if (v109)
            v86 = (v107 - (uint64_t)v109) / 4;
          else
            v86 = 0;
          v111 = v109;
          v112 = v86;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223420);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223400);
          sub_242A7AF34(&qword_257223428, &qword_257223420, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_257223408, &qword_257223400, MEMORY[0x24BEDFE18]);
          sub_242C479E4();
          goto LABEL_256;
        case 2:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v97;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v97, v49, v10);
          if (v108)
            v71 = (v106 - (uint64_t)v108) / 4;
          else
            v71 = 0;
          v113 = v108;
          v114 = v71;
          v57 = v10;
          if (v109)
            v87 = (v107 - (uint64_t)v109) / 4;
          else
            v87 = 0;
          v111 = v109;
          v112 = v87;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223420);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233F0);
          sub_242A7AF34(&qword_257223428, &qword_257223420, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233F8, &qword_2572233F0, MEMORY[0x24BEDFE18]);
          sub_242C479F0();
          goto LABEL_256;
        case 4:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v96;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v96, v49, v10);
          v72 = v106 - (_QWORD)v108;
          if (!v108)
            v72 = 0;
          v113 = v108;
          v114 = v72;
          v57 = v10;
          if (v109)
            v73 = (v107 - (uint64_t)v109) / 4;
          else
            v73 = 0;
          v111 = v109;
          v112 = v73;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223420);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233E0);
          sub_242A7AF34(&qword_257223428, &qword_257223420, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233E8, &qword_2572233E0, MEMORY[0x24BEDFE18]);
          sub_242C479FC();
          goto LABEL_256;
        case 5:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v98;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v98, v49, v10);
          if (v108)
            v74 = (v106 - (uint64_t)v108) / 2;
          else
            v74 = 0;
          v113 = v108;
          v114 = v74;
          v57 = v10;
          if (v109)
            v88 = (v107 - (uint64_t)v109) / 4;
          else
            v88 = 0;
          v111 = v109;
          v112 = v88;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223420);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233D0);
          sub_242A7AF34(&qword_257223428, &qword_257223420, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233D8, &qword_2572233D0, MEMORY[0x24BEDFE18]);
          sub_242C47A08();
          goto LABEL_256;
        case 6:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v100;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v100, v49, v10);
          if (v108)
            v75 = (v106 - (uint64_t)v108) / 4;
          else
            v75 = 0;
          v113 = v108;
          v114 = v75;
          v57 = v10;
          if (v109)
            v89 = (v107 - (uint64_t)v109) / 4;
          else
            v89 = 0;
          v111 = v109;
          v112 = v89;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223420);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B8);
          sub_242A7AF34(&qword_257223428, &qword_257223420, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233C8, &qword_2572233B8, MEMORY[0x24BEDFE18]);
          sub_242C47A14();
          goto LABEL_256;
        case 11:
          if (v108)
            v50 = (v106 - (uint64_t)v108) / 8;
          else
            v50 = 0;
          if (!v109)
            goto LABEL_313;
          if (v50 >= (v107 - (uint64_t)v109) / 4)
            v83 = (v107 - (uint64_t)v109) / 4;
          else
            v83 = v50;
          if ((v83 & 0x8000000000000000) != 0)
            goto LABEL_315;
          if (!v108)
            goto LABEL_316;
          v67 = 1;
          vDSP_vspdp(v109, 1, v108, 1, v83);
          break;
        default:
          goto LABEL_152;
      }
      goto LABEL_206;
    case 11:
      switch(v46)
      {
        case 0:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v99;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v99, v49, v10);
          v59 = v106 - (_QWORD)v108;
          if (!v108)
            v59 = 0;
          v113 = v108;
          v114 = v59;
          v57 = v10;
          if (v109)
            v60 = (v107 - (uint64_t)v109) / 8;
          else
            v60 = 0;
          v111 = v109;
          v112 = v60;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223410);
          sub_242A7AF34(&qword_2572233C0, &qword_2572233B0, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_257223418, &qword_257223410, MEMORY[0x24BEDFE18]);
          sub_242C47990();
          goto LABEL_256;
        case 1:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v101;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v101, v49, v10);
          if (v108)
            v76 = (v106 - (uint64_t)v108) / 2;
          else
            v76 = 0;
          v113 = v108;
          v114 = v76;
          v57 = v10;
          if (v109)
            v90 = (v107 - (uint64_t)v109) / 8;
          else
            v90 = 0;
          v111 = v109;
          v112 = v90;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257223400);
          sub_242A7AF34(&qword_2572233C0, &qword_2572233B0, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_257223408, &qword_257223400, MEMORY[0x24BEDFE18]);
          sub_242C4799C();
          goto LABEL_256;
        case 2:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v103;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v103, v49, v10);
          if (v108)
            v77 = (v106 - (uint64_t)v108) / 4;
          else
            v77 = 0;
          v113 = v108;
          v114 = v77;
          v57 = v10;
          if (v109)
            v91 = (v107 - (uint64_t)v109) / 8;
          else
            v91 = 0;
          v111 = v109;
          v112 = v91;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233F0);
          sub_242A7AF34(&qword_2572233C0, &qword_2572233B0, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233F8, &qword_2572233F0, MEMORY[0x24BEDFE18]);
          sub_242C479A8();
          goto LABEL_256;
        case 4:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v102;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v102, v49, v10);
          v78 = v106 - (_QWORD)v108;
          if (!v108)
            v78 = 0;
          v113 = v108;
          v114 = v78;
          v57 = v10;
          if (v109)
            v79 = (v107 - (uint64_t)v109) / 8;
          else
            v79 = 0;
          v111 = v109;
          v112 = v79;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233E0);
          sub_242A7AF34(&qword_2572233C0, &qword_2572233B0, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233E8, &qword_2572233E0, MEMORY[0x24BEDFE18]);
          sub_242C479B4();
          goto LABEL_256;
        case 5:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v104;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v104, v49, v10);
          if (v108)
            v80 = (v106 - (uint64_t)v108) / 2;
          else
            v80 = 0;
          v113 = v108;
          v114 = v80;
          v57 = v10;
          if (v109)
            v92 = (v107 - (uint64_t)v109) / 8;
          else
            v92 = 0;
          v111 = v109;
          v112 = v92;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233D0);
          sub_242A7AF34(&qword_2572233C0, &qword_2572233B0, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233D8, &qword_2572233D0, MEMORY[0x24BEDFE18]);
          sub_242C479C0();
          goto LABEL_256;
        case 6:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1)
            goto LABEL_152;
          v55 = v105;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v105, v49, v10);
          if (v108)
            v82 = (v106 - (uint64_t)v108) / 4;
          else
            v82 = 0;
          v113 = v108;
          v114 = v82;
          v57 = v10;
          if (v109)
            v93 = (v107 - (uint64_t)v109) / 8;
          else
            v93 = 0;
          v111 = v109;
          v112 = v93;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572233B8);
          sub_242A7AF34(&qword_2572233C0, &qword_2572233B0, MEMORY[0x24BEDFD20]);
          sub_242A7AF34(&qword_2572233C8, &qword_2572233B8, MEMORY[0x24BEDFE18]);
          sub_242C479CC();
LABEL_256:
          (*(void (**)(char *, uint64_t))(v11 + 8))(v55, v57);
          return 1;
        case 10:
          if (v108)
            v50 = (v106 - (uint64_t)v108) / 4;
          else
            v50 = 0;
          if (!v109)
            goto LABEL_317;
          if (v50 >= (v107 - (uint64_t)v109) / 8)
            v84 = (v107 - (uint64_t)v109) / 8;
          else
            v84 = v50;
          if ((v84 & 0x8000000000000000) != 0)
            goto LABEL_319;
          if (!v108)
            goto LABEL_320;
          v67 = 1;
          vDSP_vdpsp((const double *)v109, 1, (float *)v108, 1, v84);
          break;
        default:
          goto LABEL_152;
      }
      goto LABEL_206;
    case 12:
      if (v46 == 11)
        goto LABEL_51;
      if (v46 != 10)
        goto LABEL_152;
LABEL_49:
      sub_242AB8F10(v49, &qword_2572233A8);
      if (v108)
        v50 = (v106 - (uint64_t)v108) / 4;
      else
        v50 = 0;
      if (v109)
        v66 = v107 - (_QWORD)v109;
      else
        v66 = 0;
      if (v66 != v50)
      {
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
        goto LABEL_261;
      }
      if (v66 < 0)
        goto LABEL_259;
      if (!v109)
      {
LABEL_273:
        __break(1u);
        goto LABEL_274;
      }
      if (!v108)
      {
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
        goto LABEL_279;
      }
      v67 = 1;
      vDSP_vflt8((const char *)v109, 1, (float *)v108, 1, v107 - (_QWORD)v109);
      return v67;
    default:
      goto LABEL_152;
  }
}

unsigned __int8 *sub_242AB5288@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_242AB5294@<X0>(unsigned __int8 *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_242AB52A0@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB52AC@<H0>(unsigned __int8 *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = (float)*a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB52C0@<S0>(unsigned __int8 *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB52D8@<S0>(unsigned __int8 *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_242AB52E8@<D0>(unsigned __int8 *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = (double)*a1;
  *a2 = result;
  return result;
}

_BYTE *sub_242AB52F8@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

char *sub_242AB530C@<X0>(char *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

char *sub_242AB5318@<X0>(char *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

char *sub_242AB5324@<X0>(char *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB5330@<H0>(char *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = (float)*a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB5344@<S0>(char *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB535C@<S0>(char *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_242AB536C@<D0>(char *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = (double)*a1;
  *a2 = result;
  return result;
}

_WORD *sub_242AB537C@<X0>(_WORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

_BYTE *sub_242AB5390@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 *sub_242AB539C@<X0>(__int16 *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 *sub_242AB53A8@<X0>(__int16 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB53B4@<H0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = (float)*a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB53C8@<S0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB53E0@<S0>(__int16 *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_242AB53F0@<D0>(__int16 *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = (double)*a1;
  *a2 = result;
  return result;
}

_DWORD *sub_242AB5400@<X0>(_DWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

_DWORD *sub_242AB5414@<X0>(_DWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_242AB5420@<X0>(_DWORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

int *sub_242AB542C@<X0>(int *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB5438@<H0>(int *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = (float)*a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB544C@<S0>(int *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB5464@<S0>(int *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_242AB5474@<D0>(int *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = (double)*a1;
  *a2 = result;
  return result;
}

_QWORD *sub_242AB5484@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

_QWORD *sub_242AB5498@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_242AB54A4@<X0>(_QWORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_242AB54B0@<X0>(_QWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB54BC@<H0>(uint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = (float)*a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB54D0@<S0>(uint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB54E8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_242AB54F8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = (double)*a1;
  *a2 = result;
  return result;
}

__int16 sub_242AB5508@<H0>(_BYTE *a1@<X0>, _WORD *a2@<X8>, unsigned int a3@<S0>)
{
  __int16 result;

  LOBYTE(a3) = *a1;
  _S0 = (float)a3;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB551C@<S0>(_BYTE *a1@<X0>, _WORD *a2@<X8>, unsigned int a3@<S0>)
{
  float result;

  LOBYTE(a3) = *a1;
  result = (float)a3;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB5534@<S0>(_BYTE *a1@<X0>, float *a2@<X8>, unsigned int a3@<S0>)
{
  float result;

  LOBYTE(a3) = *a1;
  result = (float)a3;
  *a2 = result;
  return result;
}

double sub_242AB5544@<D0>(_BYTE *a1@<X0>, double *a2@<X8>, unint64_t a3@<D0>)
{
  double result;

  LOBYTE(a3) = *a1;
  result = (double)a3;
  *a2 = result;
  return result;
}

_WORD *sub_242AB5554@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int16 *sub_242AB5560@<X0>(unsigned __int16 *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int16 *sub_242AB556C@<X0>(unsigned __int16 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB5578@<H0>(_WORD *a1@<X0>, _WORD *a2@<X8>, unsigned int a3@<S0>)
{
  __int16 result;

  LOWORD(a3) = *a1;
  _S0 = (float)a3;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB558C@<S0>(_WORD *a1@<X0>, _WORD *a2@<X8>, unsigned int a3@<S0>)
{
  float result;

  LOWORD(a3) = *a1;
  result = (float)a3;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB55A4@<S0>(_WORD *a1@<X0>, float *a2@<X8>, unsigned int a3@<S0>)
{
  float result;

  LOWORD(a3) = *a1;
  result = (float)a3;
  *a2 = result;
  return result;
}

double sub_242AB55B4@<D0>(_WORD *a1@<X0>, double *a2@<X8>, unint64_t a3@<D0>)
{
  double result;

  LOWORD(a3) = *a1;
  result = (double)a3;
  *a2 = result;
  return result;
}

_DWORD *sub_242AB55C4@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned int *sub_242AB55D0@<X0>(unsigned int *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB55DC@<H0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = (float)*a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB55F0@<S0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB5608@<S0>(unsigned int *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_242AB5618@<D0>(_DWORD *a1@<X0>, double *a2@<X8>, unint64_t a3@<D0>)
{
  double result;

  LODWORD(a3) = *a1;
  result = (double)a3;
  *a2 = result;
  return result;
}

_QWORD *sub_242AB5628@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 sub_242AB5634@<H0>(unint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = (float)*a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

float sub_242AB5648@<S0>(unint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB5660@<S0>(unint64_t *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_242AB5670@<D0>(unint64_t *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = (double)*a1;
  *a2 = result;
  return result;
}

_WORD *sub_242AB5680@<X0>(_WORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x7FFF) != 0;
  return result;
}

uint64_t sub_242AB5694@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  __asm { FCVT            S0, H0 }
  if (_S0 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (_S0 < 128.0)
  {
    *a3 = (int)_S0;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB5868@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  __asm { FCVT            S0, H0 }
  if (_S0 <= -32800.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (_S0 < 32768.0)
  {
    *a3 = (int)_S0;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB5A3C@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    *a3 = (int)_S0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242AB5BEC@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    *a3 = (uint64_t)_S0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242AB5D9C@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  __asm { FCVT            S0, H0 }
  if (_S0 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (_S0 < 256.0)
  {
    *a3 = (int)_S0;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB5F70@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    if (_S0 > -1.0)
    {
      *a3 = (int)_S0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242AB6130@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    if (_S0 > -1.0)
    {
      *a3 = _S0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242AB62F0@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C494A8();
    if ((result & 1) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_242C49484();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    if (_S0 > -1.0)
    {
      *a3 = (unint64_t)_S0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

float sub_242AB64B0@<S0>(__int16 *a1@<X0>, float *a2@<X8>)
{
  float result;

  _H0 = *a1;
  __asm { FCVT            S0, H0 }
  *a2 = result;
  return result;
}

double sub_242AB64C0@<D0>(__int16 *a1@<X0>, double *a2@<X8>)
{
  double result;

  _H0 = *a1;
  __asm { FCVT            D0, H0 }
  *a2 = result;
  return result;
}

_DWORD *sub_242AB64D0@<X0>(_DWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x7FFFFFFF) != 0;
  return result;
}

uint64_t sub_242AB64E4@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 128.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB66A8@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -32769.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 32768.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB686C@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -2147500000.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 2147500000.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB6A30@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -9.2234e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 9.2234e18)
  {
    *a3 = (uint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB6BF4@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 256.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB6DB8@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 65536.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB6F7C@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 4295000000.0)
  {
    *a3 = v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB7140@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486F8();
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C486D4();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 1.8447e19)
  {
    *a3 = (unint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

__int16 sub_242AB7304@<H0>(int *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _S0 = *a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

uint64_t sub_242AB7314@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(result + 2);
  return result;
}

double sub_242AB7320@<D0>(float *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = result;
  return result;
}

_QWORD *sub_242AB7330@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x7FFFFFFFFFFFFFFFLL) != 0;
  return result;
}

uint64_t sub_242AB7344@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 128.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB750C@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -32769.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 32768.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB76D4@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -2147483650.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 2147483650.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB789C@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 9.22337204e18)
  {
    *a3 = (uint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB7A64@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 256.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB7C28@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 65536.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB7DEC@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 4294967300.0)
  {
    *a3 = v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242AB7FB0@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE38C0])
  {
    result = sub_242C486A4();
    v12 = ceil(v10);
    v13 = floor(v10);
    if ((result & 1) != 0)
      v12 = v13;
  }
  else
  {
    sub_242C4868C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 1.84467441e19)
  {
    *a3 = (unint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

__int16 sub_242AB8174@<H0>(uint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 result;

  _D0 = *a1;
  __asm { FCVT            H0, D0 }
  *a2 = result;
  return result;
}

float sub_242AB8184@<S0>(double *a1@<X0>, _WORD *a2@<X8>)
{
  float result;

  result = *a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_242AB819C@<S0>(double *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *a1;
  *a2 = result;
  return result;
}

void sub_242AB81AC(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;

  v10 = *(double *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_22_11(v2, v3, v4, v5, v6, v7, v8, v9, v10, *(float *)&v11, *((float *)&v11 + 1));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB81EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_13_17(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SWORD2(v11), SHIWORD(v11));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB822C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_21_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SWORD2(v11), SHIWORD(v11));
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB826C@<X0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB7FB0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8278@<X0>(double *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB7DEC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8284@<X0>(double *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB7C28(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8290@<X0>(double *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB7A64(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB829C@<X0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB789C(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB82A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB82E4@<X0>(double *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB76D4(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB82EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_18_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SHIDWORD(v11));
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB832C@<X0>(double *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB750C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8334@<X0>(double *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB7344(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB833C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_14_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB837C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  HIDWORD(v10) = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_20_16(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB83BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_13_17(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SHIWORD(v12));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB83FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_21_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SHIWORD(v12));
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB843C@<X0>(float *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB7140(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8448@<X0>(float *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB6F7C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8454@<X0>(float *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB6DB8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8460@<X0>(float *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB6BF4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB846C@<X0>(float *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB6A30(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB8474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  HIDWORD(v10) = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB84B4@<X0>(float *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB686C(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB84BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_18_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB84FC@<X0>(float *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB66A8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB8504@<X0>(float *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB64E4(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB850C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_14_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SBYTE2(v12), SHIBYTE(v12));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB854C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  HIWORD(v10) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_20_16(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB858C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  float v11;
  float v12;

  HIWORD(v11) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_22_11(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB85CC@<X0>(__int16 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB62F0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB85D8@<X0>(__int16 *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB6130(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB85E4@<X0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB5F70(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB85F0@<X0>(__int16 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB5D9C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242AB85FC@<X0>(__int16 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB5BEC(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB8604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  HIWORD(v10) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB8644@<X0>(__int16 *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB5A3C(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB864C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  HIWORD(v11) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_18_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB868C@<X0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB5868(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB8694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  __int16 v13;

  v12 = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_13_17(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242AB86D4@<X0>(__int16 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_242AB5694(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242AB86DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  __int16 v13;

  v12 = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_14_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, SHIBYTE(v13));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB878C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  v10 = *(double *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_20_16(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB87CC(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;

  v10 = *(double *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_22_11(v2, v3, v4, v5, v6, v7, v8, v9, v10, *(float *)&v11, *((float *)&v11 + 1));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB880C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_13_17(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SWORD2(v11), SHIWORD(v11));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB884C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_21_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SWORD2(v11), SHIWORD(v11));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB888C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB88CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_18_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SHIDWORD(v11));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB890C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_14_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB894C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  HIDWORD(v10) = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_20_16(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB898C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  float v11;
  float v12;

  v11 = *(float *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_22_11(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB89CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_13_17(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SHIWORD(v12));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8A0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_21_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SHIWORD(v12));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8A4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_18_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  HIDWORD(v10) = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v11 = *(_DWORD *)(*(_QWORD *)(v1 + 40) + 4 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_14_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SBYTE2(v12), SHIBYTE(v12));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8B0C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  HIWORD(v10) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_20_16(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8B4C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  float v11;
  float v12;

  HIWORD(v11) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_22_11(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  __int16 v13;

  v12 = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_13_17(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  __int16 v13;

  v12 = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_21_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8C0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  HIWORD(v10) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  HIWORD(v11) = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_18_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  __int16 v13;

  v12 = *(_WORD *)(*(_QWORD *)(v1 + 40) + 2 * a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_14_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, SHIBYTE(v13));
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8CCC(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  HIBYTE(v10) = *(_BYTE *)(*(_QWORD *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_20_16(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8D0C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  float v11;
  float v12;

  HIBYTE(v11) = *(_BYTE *)(*(_QWORD *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_22_11(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[6];
  __int16 v12;

  v11[5] = *(_BYTE *)(*(_QWORD *)(v1 + 40) + a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_13_17(v2, v3, v4, v5, v6, v7, v8, v9, v10, *(int *)v11, *(__int16 *)&v11[4], v12);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8D8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[6];
  __int16 v12;

  v11[5] = *(_BYTE *)(*(_QWORD *)(v1 + 40) + a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_21_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, *(int *)v11, *(__int16 *)&v11[4], v12);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[6];
  char v12;
  char v13;

  v12 = *(_BYTE *)(*(_QWORD *)(v1 + 40) + a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_14_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, *(int *)v11, *(__int16 *)&v11[4], v12, v13);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  HIBYTE(v10) = *(_BYTE *)(*(_QWORD *)(v1 + 40) + a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_13(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_21_1();
}

void sub_242AB8E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  HIBYTE(v11) = *(_BYTE *)(*(_QWORD *)(v1 + 40) + a1);
  v2 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_18_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_21_1();
}

unint64_t sub_242AB8E8C()
{
  unint64_t result;

  result = qword_257229080;
  if (!qword_257229080)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BDCFB88], MEMORY[0x24BEE0F88]);
    atomic_store(result, (unint64_t *)&qword_257229080);
  }
  return result;
}

uint64_t sub_242AB8EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572233A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_242AB8F10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void OUTLINED_FUNCTION_2_25(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a1 - 48) = v3;
  *(_QWORD *)(a1 - 40) = v1;
  *(_QWORD *)(a1 - 32) = 0;
  *(_QWORD *)(a1 - 24) = v2;
  *(_QWORD *)(a1 - 16) = v4;
}

unint64_t OUTLINED_FUNCTION_4_23()
{
  return sub_242AABC28();
}

uint64_t OUTLINED_FUNCTION_10_17()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_11_19(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 - 48) = v3;
  *(_QWORD *)(a1 - 40) = v1;
  *(_QWORD *)(a1 - 32) = v5;
  *(_QWORD *)(a1 - 24) = v2;
  *(_QWORD *)(a1 - 16) = v4;
}

void OUTLINED_FUNCTION_13_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, __int16 a12)
{
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v13 + 2 * v12) = a12;
}

void OUTLINED_FUNCTION_14_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v14 + v13) = a13;
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  return sub_242C4901C();
}

void *OUTLINED_FUNCTION_16_15(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

void OUTLINED_FUNCTION_18_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)(v12 + 4 * v11) = a11;
}

void OUTLINED_FUNCTION_19_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v11 + 8 * v10) = a10;
}

double OUTLINED_FUNCTION_20_16(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v10;
  uint64_t v11;
  double result;

  result = a10;
  *(double *)(v11 + 8 * v10) = a10;
  return result;
}

__int16 OUTLINED_FUNCTION_21_13@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9, int a10, __int16 a11, __int16 a12)
{
  uint64_t v12;
  uint64_t v13;
  __int16 result;

  result = a12;
  *(_WORD *)(v13 + 2 * v12) = a12;
  return result;
}

float OUTLINED_FUNCTION_22_11(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, float a10, float a11)
{
  uint64_t v11;
  uint64_t v12;
  float result;

  result = a11;
  *(float *)(v12 + 4 * v11) = a11;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_12@<X0>(const float *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  float *v5;

  return sub_242AB3A1C(a1, a2, v5, a5, a3, a4, 3);
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  return sub_242C48950();
}

NeuralNetworks::ZeroPad1D __swiftcall ZeroPad1D.init(size:)(NeuralNetworks::ZeroPad1D size)
{
  if (size.size.left < 0 || size.size.right < 0)
  {
    OUTLINED_FUNCTION_5_26();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_64_5();
    size.size.left = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ZeroPad1D __swiftcall ZeroPad1D.init(size:)(Swift::Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  NeuralNetworks::ZeroPad1D result;

  if (size < 0)
  {
    OUTLINED_FUNCTION_10_18();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_64_5();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_59_5(size, size);
  }
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

void ZeroPad1D.forward(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[14];

  v4 = OUTLINED_FUNCTION_6_24();
  OUTLINED_FUNCTION_20_17((uint64_t)v4);
  OUTLINED_FUNCTION_30_11();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_25_11();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v9[0] = v0;
    v9[1] = v1;
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257223438);
  v5 = OUTLINED_FUNCTION_29_9();
  *(_OWORD *)(v5 + 16) = xmmword_242C4B810;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  v6 = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v1;
  v9[3] = v6;
  v9[4] = &protocol witness table for Float;
  LODWORD(v9[0]) = 0;
  OUTLINED_FUNCTION_49_7(v5, v7, v8);
  OUTLINED_FUNCTION_3_6();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  OUTLINED_FUNCTION_19_14();
}

BOOL sub_242AB9324()
{
  return sub_242ABAB7C();
}

void sub_242AB9344()
{
  ZeroPad1D.forward(_:)();
}

BOOL sub_242AB935C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABAB7C();
  *a1 = result;
  return result;
}

BOOL sub_242AB9398@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242AB9324();
  *a1 = result;
  return result;
}

uint64_t sub_242AB93C0()
{
  sub_242ABBC0C();
  return sub_242C494D8();
}

uint64_t sub_242AB93E8()
{
  sub_242ABBC0C();
  return sub_242C494E4();
}

_QWORD *ZeroPad1D.init(from:)()
{
  return sub_242AB9B98();
}

void ZeroPad1D.encode(to:)()
{
  sub_242AB9D34();
}

uint64_t sub_242AB9470@<X0>(uint64_t *a1@<X8>)
{
  return sub_242ABA8AC((uint64_t (*)(void))ZeroPad1D.init(from:), a1);
}

void sub_242AB948C()
{
  ZeroPad1D.encode(to:)();
}

NeuralNetworks::ZeroPad2D __swiftcall ZeroPad2D.init(size:)(NeuralNetworks::ZeroPad2D size)
{
  if (size.size.left < 0 || size.size.right < 0 || size.size.top < 0 || size.size.bottom < 0)
  {
    OUTLINED_FUNCTION_3_22();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_67_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_45_6();
    size.size.left = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ZeroPad2D __swiftcall ZeroPad2D.init(size:)(Swift::tuple_height_Int_width_Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  NeuralNetworks::ZeroPad2D result;

  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_18_16();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_60_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_45_6();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_36_12(size.height, size.width);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

NeuralNetworks::ZeroPad2D __swiftcall ZeroPad2D.init(size:)(Swift::Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  NeuralNetworks::ZeroPad2D result;

  if (size < 0)
  {
    OUTLINED_FUNCTION_17_15();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_57_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_45_6();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_24_13(size, size);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

void ZeroPad2D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t *a23,uint64_t a24,uint64_t a25,uint64_t a26,_UNKNOWN **a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;

  OUTLINED_FUNCTION_70_2();
  a47 = v52;
  a48 = v53;
  v54 = OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_32_11((uint64_t)v54);
  OUTLINED_FUNCTION_40_8();
  if ((v51 & 1) == 0)
  {
    OUTLINED_FUNCTION_37_11();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    a23 = v48;
    a24 = v49;
    OUTLINED_FUNCTION_8_15();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FC0);
  v55 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_15_14(v55, (__n128)xmmword_242C4DE40);
  OUTLINED_FUNCTION_39_10();
  a26 = MEMORY[0x24BEE14E8];
  a27 = &protocol witness table for Float;
  LODWORD(a23) = 0;
  Tensor.padded(forSizes:with:)(v50, &a23, v48);
  OUTLINED_FUNCTION_34();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a23);
  OUTLINED_FUNCTION_21_7();
}

BOOL sub_242AB9744()
{
  return sub_242ABAB7C();
}

void sub_242AB9764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t *a23,uint64_t a24,uint64_t a25,uint64_t a26,_UNKNOWN **a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t *v48;

  ZeroPad2D.forward(_:)(a1, *v48, v48[1], v48[2], v48[3], a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48);
}

BOOL sub_242AB9770@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABAB7C();
  *a1 = result;
  return result;
}

BOOL sub_242AB97A8@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242AB9744();
  *a1 = result;
  return result;
}

uint64_t sub_242AB97D0()
{
  sub_242ABBCA8();
  return sub_242C494D8();
}

uint64_t sub_242AB97F8()
{
  sub_242ABBCA8();
  return sub_242C494E4();
}

uint64_t ZeroPad2D.init(from:)()
{
  return sub_242ABA200();
}

void ZeroPad2D.encode(to:)()
{
  sub_242ABA3B4();
}

uint64_t sub_242AB9880@<X0>(uint64_t *a1@<X8>)
{
  return sub_242ABACFC(ZeroPad2D.init(from:), a1);
}

void sub_242AB989C()
{
  ZeroPad2D.encode(to:)();
}

NeuralNetworks::ReflectionPad1D __swiftcall ReflectionPad1D.init(size:)(NeuralNetworks::ReflectionPad1D size)
{
  if (size.size.left < 0 || size.size.right < 0)
  {
    OUTLINED_FUNCTION_5_26();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_63_5();
    size.size.left = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ReflectionPad1D __swiftcall ReflectionPad1D.init(size:)(Swift::Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  NeuralNetworks::ReflectionPad1D result;

  if (size < 0)
  {
    OUTLINED_FUNCTION_10_18();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_63_5();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_59_5(size, size);
  }
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

void ReflectionPad1D.forward(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_6_24();
  OUTLINED_FUNCTION_20_17((uint64_t)v3);
  OUTLINED_FUNCTION_30_11();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_25_11();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    *(_QWORD *)&v7[0] = v0;
    *((_QWORD *)&v7[0] + 1) = v1;
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257223438);
  v4 = OUTLINED_FUNCTION_29_9();
  v5 = OUTLINED_FUNCTION_66_4(v4, (__n128)xmmword_242C4B810);
  v8 = 0;
  v7[0] = v6;
  v7[1] = v6;
  OUTLINED_FUNCTION_48_9(v5);
  OUTLINED_FUNCTION_3_6();
  sub_242A8A7D4((uint64_t)v7);
  OUTLINED_FUNCTION_19_14();
}

BOOL sub_242AB9A8C()
{
  return sub_242ABAB7C();
}

void sub_242AB9AAC()
{
  ReflectionPad1D.forward(_:)();
}

BOOL sub_242AB9AB4@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABAB7C();
  *a1 = result;
  return result;
}

BOOL sub_242AB9AEC@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242AB9A8C();
  *a1 = result;
  return result;
}

uint64_t sub_242AB9B14()
{
  sub_242ABBCE4();
  return sub_242C494D8();
}

uint64_t sub_242AB9B3C()
{
  sub_242ABBCE4();
  return sub_242C494E4();
}

_QWORD *ReflectionPad1D.init(from:)()
{
  return sub_242AB9B98();
}

_QWORD *sub_242AB9B98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;

  OUTLINED_FUNCTION_41_12();
  v13 = v2;
  v4 = v3;
  v14 = OUTLINED_FUNCTION_71_4(v5, v6);
  v7 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v4();
  OUTLINED_FUNCTION_70_4();
  if (v1)
  {
    OUTLINED_FUNCTION_23_15();
    return v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242ABBC48(&qword_257223450, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
  OUTLINED_FUNCTION_50_8();
  result = v15;
  v10 = v15[2];
  if (v10)
  {
    if (v10 != 1)
    {
      v11 = v15[4];
      v12 = v15[5];
      swift_bridgeObjectRelease();
      v8 = (_QWORD *)v13(v11, v12);
      OUTLINED_FUNCTION_74_3(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      OUTLINED_FUNCTION_23_15();
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void ReflectionPad1D.encode(to:)()
{
  sub_242AB9D34();
}

void sub_242AB9D34()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_41_12();
  v2 = v1;
  v12 = v3;
  v5 = v4;
  v7 = v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_56();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v2();
  OUTLINED_FUNCTION_65_4();
  sub_242C49478();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v11 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v11 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242ABBC48(&qword_257223460, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  OUTLINED_FUNCTION_28_15();
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_51_8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242AB9E38@<X0>(uint64_t *a1@<X8>)
{
  return sub_242ABA8AC((uint64_t (*)(void))ReflectionPad1D.init(from:), a1);
}

void sub_242AB9E54()
{
  ReflectionPad1D.encode(to:)();
}

NeuralNetworks::ReflectionPad2D __swiftcall ReflectionPad2D.init(size:)(NeuralNetworks::ReflectionPad2D size)
{
  if (size.size.left < 0 || size.size.right < 0 || size.size.top < 0 || size.size.bottom < 0)
  {
    OUTLINED_FUNCTION_3_22();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_67_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_43_10();
    size.size.left = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ReflectionPad2D __swiftcall ReflectionPad2D.init(size:)(Swift::tuple_height_Int_width_Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  NeuralNetworks::ReflectionPad2D result;

  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_18_16();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_60_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_43_10();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_36_12(size.height, size.width);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

NeuralNetworks::ReflectionPad2D __swiftcall ReflectionPad2D.init(size:)(Swift::Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  NeuralNetworks::ReflectionPad2D result;

  if (size < 0)
  {
    OUTLINED_FUNCTION_17_15();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_57_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_43_10();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_24_13(size, size);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

void ReflectionPad2D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23,__int128 a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;

  OUTLINED_FUNCTION_70_2();
  a45 = v49;
  a46 = v50;
  v51 = OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_32_11((uint64_t)v51);
  OUTLINED_FUNCTION_40_8();
  if ((v48 & 1) == 0)
  {
    OUTLINED_FUNCTION_37_11();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    *(_QWORD *)&a23 = v46;
    *((_QWORD *)&a23 + 1) = v47;
    OUTLINED_FUNCTION_8_15();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FC0);
  v52 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_15_14(v52, (__n128)xmmword_242C4DE40);
  OUTLINED_FUNCTION_39_10();
  a25 = 0;
  a23 = 0u;
  a24 = 0u;
  OUTLINED_FUNCTION_38_9();
  OUTLINED_FUNCTION_34();
  sub_242A8A7D4((uint64_t)&a23);
  OUTLINED_FUNCTION_21_7();
}

BOOL sub_242ABA0F0()
{
  return sub_242ABAB7C();
}

void sub_242ABA110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23,__int128 a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t *v46;

  ReflectionPad2D.forward(_:)(a1, *v46, v46[1], v46[2], v46[3], a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46);
}

BOOL sub_242ABA11C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABAB7C();
  *a1 = result;
  return result;
}

BOOL sub_242ABA154@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABA0F0();
  *a1 = result;
  return result;
}

uint64_t sub_242ABA17C()
{
  sub_242ABBD20();
  return sub_242C494D8();
}

uint64_t sub_242ABA1A4()
{
  sub_242ABBD20();
  return sub_242C494E4();
}

uint64_t ReflectionPad2D.init(from:)()
{
  return sub_242ABA200();
}

uint64_t sub_242ABA200()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_41_12();
  v10 = v2;
  v4 = v3;
  v11 = OUTLINED_FUNCTION_71_4(v5, v6);
  MEMORY[0x24BDAC7A8](v11);
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v4();
  OUTLINED_FUNCTION_70_4();
  if (v1)
  {
    OUTLINED_FUNCTION_23_15();
    return OUTLINED_FUNCTION_68_4();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242ABBC48(&qword_257223450, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
  sub_242C490D0();
  result = v12;
  v8 = *(_QWORD *)(v12 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v8 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 < 3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 != 3)
  {
    swift_bridgeObjectRelease();
    v9 = OUTLINED_FUNCTION_68_4();
    v10(v9);
    OUTLINED_FUNCTION_2_6();
    OUTLINED_FUNCTION_23_15();
    return OUTLINED_FUNCTION_68_4();
  }
LABEL_13:
  __break(1u);
  return result;
}

void ReflectionPad2D.encode(to:)()
{
  sub_242ABA3B4();
}

void sub_242ABA3B4()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_41_12();
  v2 = v1;
  v16 = v3;
  v14 = v4;
  v15 = v5;
  v7 = v6;
  v9 = v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_56();
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v2();
  OUTLINED_FUNCTION_65_4();
  sub_242C49478();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v13 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v13 + 16) = xmmword_242C4DE40;
  *(_QWORD *)(v13 + 32) = v7;
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 56) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242ABBC48(&qword_257223460, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  OUTLINED_FUNCTION_28_15();
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_51_8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242ABA4C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_242ABACFC(ReflectionPad2D.init(from:), a1);
}

void sub_242ABA4E4()
{
  ReflectionPad2D.encode(to:)();
}

NeuralNetworks::SymmetricPad1D __swiftcall SymmetricPad1D.init(size:)(NeuralNetworks::SymmetricPad1D size)
{
  if (size.size._0 < 0 || size.size._1 < 0)
  {
    OUTLINED_FUNCTION_5_26();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_62_5();
    size.size._0 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  return size;
}

NeuralNetworks::SymmetricPad1D __swiftcall SymmetricPad1D.init(size:)(Swift::Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  NeuralNetworks::SymmetricPad1D result;

  if (size < 0)
  {
    OUTLINED_FUNCTION_10_18();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_62_5();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_59_5(size, size);
  }
  result.size._1 = v2;
  result.size._0 = v1;
  return result;
}

void SymmetricPad1D.forward(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = OUTLINED_FUNCTION_6_24();
  OUTLINED_FUNCTION_20_17((uint64_t)v3);
  OUTLINED_FUNCTION_30_11();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_25_11();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v6 = v0;
    v7 = v1;
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257223438);
  v4 = OUTLINED_FUNCTION_29_9();
  v5 = OUTLINED_FUNCTION_66_4(v4, (__n128)xmmword_242C4B810);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = xmmword_242C501F0;
  OUTLINED_FUNCTION_48_9(v5);
  OUTLINED_FUNCTION_3_6();
  sub_242A8A7D4((uint64_t)&v6);
  OUTLINED_FUNCTION_19_14();
}

BOOL sub_242ABA6E4()
{
  return sub_242ABAB7C();
}

uint64_t sub_242ABA704()
{
  return 1702521203;
}

void sub_242ABA714()
{
  SymmetricPad1D.forward(_:)();
}

BOOL sub_242ABA71C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABAB7C();
  *a1 = result;
  return result;
}

uint64_t sub_242ABA754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_242ABA704();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_242ABA778@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABA6E4();
  *a1 = result;
  return result;
}

uint64_t sub_242ABA7A0()
{
  return sub_242A65800();
}

uint64_t sub_242ABA7B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_31_1();
  *a1 = result & 1;
  return result;
}

uint64_t sub_242ABA7E0()
{
  sub_242ABBD5C();
  return sub_242C494D8();
}

uint64_t sub_242ABA808()
{
  sub_242ABBD5C();
  return sub_242C494E4();
}

_QWORD *SymmetricPad1D.init(from:)()
{
  return sub_242AB9B98();
}

void SymmetricPad1D.encode(to:)()
{
  sub_242AB9D34();
}

uint64_t sub_242ABA890@<X0>(uint64_t *a1@<X8>)
{
  return sub_242ABA8AC((uint64_t (*)(void))SymmetricPad1D.init(from:), a1);
}

uint64_t sub_242ABA8AC@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_242ABA8D4()
{
  SymmetricPad1D.encode(to:)();
}

NeuralNetworks::SymmetricPad2D __swiftcall SymmetricPad2D.init(size:)(NeuralNetworks::SymmetricPad2D size)
{
  if (size.size.left < 0 || size.size.right < 0 || size.size.top < 0 || size.size.bottom < 0)
  {
    OUTLINED_FUNCTION_3_22();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_67_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_44_7();
    size.size.left = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  return size;
}

NeuralNetworks::SymmetricPad2D __swiftcall SymmetricPad2D.init(size:)(Swift::tuple_height_Int_width_Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  NeuralNetworks::SymmetricPad2D result;

  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_18_16();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_60_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_44_7();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_36_12(size.height, size.width);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

NeuralNetworks::SymmetricPad2D __swiftcall SymmetricPad2D.init(size:)(Swift::Int size)
{
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  NeuralNetworks::SymmetricPad2D result;

  if (size < 0)
  {
    OUTLINED_FUNCTION_17_15();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_57_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_44_7();
    v1 = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    v1 = OUTLINED_FUNCTION_24_13(size, size);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

void SymmetricPad2D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,__int128 a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;

  OUTLINED_FUNCTION_70_2();
  a46 = v50;
  a47 = v51;
  v52 = OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_32_11((uint64_t)v52);
  OUTLINED_FUNCTION_40_8();
  if ((v49 & 1) == 0)
  {
    OUTLINED_FUNCTION_37_11();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    a23 = v47;
    a24 = v48;
    OUTLINED_FUNCTION_8_15();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FC0);
  v53 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_15_14(v53, (__n128)xmmword_242C4DE40);
  OUTLINED_FUNCTION_39_10();
  a23 = 0;
  a24 = 0;
  a25 = 0;
  a26 = xmmword_242C501F0;
  OUTLINED_FUNCTION_38_9();
  OUTLINED_FUNCTION_34();
  sub_242A8A7D4((uint64_t)&a23);
  OUTLINED_FUNCTION_21_7();
}

BOOL sub_242ABAB7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_35_10();
  OUTLINED_FUNCTION_40_0();
  return v0 != 0;
}

BOOL sub_242ABABA4()
{
  return sub_242ABAB7C();
}

void sub_242ABABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,__int128 a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t *v47;

  SymmetricPad2D.forward(_:)(a1, *v47, v47[1], v47[2], v47[3], a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47);
}

BOOL sub_242ABABD0@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABAB7C();
  *a1 = result;
  return result;
}

BOOL sub_242ABAC08@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242ABABA4();
  *a1 = result;
  return result;
}

uint64_t sub_242ABAC30()
{
  sub_242ABBD98();
  return sub_242C494D8();
}

uint64_t sub_242ABAC58()
{
  sub_242ABBD98();
  return sub_242C494E4();
}

uint64_t SymmetricPad2D.init(from:)()
{
  return sub_242ABA200();
}

void SymmetricPad2D.encode(to:)()
{
  sub_242ABA3B4();
}

uint64_t sub_242ABACE0@<X0>(uint64_t *a1@<X8>)
{
  return sub_242ABACFC(SymmetricPad2D.init(from:), a1);
}

uint64_t sub_242ABACFC@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_242ABAD28()
{
  SymmetricPad2D.encode(to:)();
}

NeuralNetworks::ConstantPad1D __swiftcall ConstantPad1D.init(size:value:)(Swift::tuple_left_Int_right_Int size, Swift::Float value)
{
  NeuralNetworks::ConstantPad1D result;

  if (size.left < 0 || size.right < 0)
  {
    OUTLINED_FUNCTION_5_26();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_61_5();
    size.left = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  result.size = size;
  result.value = value;
  return result;
}

NeuralNetworks::ConstantPad1D __swiftcall ConstantPad1D.init(size:value:)(Swift::Int size, Swift::Float value)
{
  Swift::Int v2;
  NeuralNetworks::ConstantPad1D result;

  v2 = size;
  if (size < 0)
  {
    OUTLINED_FUNCTION_10_18();
    OUTLINED_FUNCTION_0_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223430);
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_61_5();
    size = OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  result.size.right = v2;
  result.size.left = size;
  result.value = value;
  return result;
}

uint64_t ConstantPad1D.forward(_:)(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[14];

  v6 = OUTLINED_FUNCTION_6_24();
  OUTLINED_FUNCTION_20_17((uint64_t)v6);
  OUTLINED_FUNCTION_30_11();
  if ((v4 & 1) == 0)
  {
    OUTLINED_FUNCTION_25_11();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v12[0] = v1;
    v12[1] = v2;
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257223438);
  v7 = OUTLINED_FUNCTION_29_9();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B810;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  v8 = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v7 + 64) = v3;
  *(_QWORD *)(v7 + 72) = v2;
  v12[3] = v8;
  v12[4] = &protocol witness table for Float;
  *(float *)v12 = a1;
  OUTLINED_FUNCTION_49_7(v7, v9, v10);
  OUTLINED_FUNCTION_3_6();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_242ABAF60()
{
  return sub_242ABB78C();
}

uint64_t sub_242ABAF7C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 1702521203;
}

uint64_t sub_242ABAFA8()
{
  uint64_t v0;

  return ConstantPad1D.forward(_:)(*(float *)(v0 + 16));
}

uint64_t sub_242ABAFB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B3F788(*a1, *a2);
}

uint64_t sub_242ABAFC0()
{
  char *v0;

  return sub_242C449A8(*v0);
}

uint64_t sub_242ABAFC8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A5CB7C(a1, *v1);
}

uint64_t sub_242ABAFD0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242BA930C(a1, *v1);
}

uint64_t sub_242ABAFD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242ABB78C();
  *a1 = result;
  return result;
}

uint64_t sub_242ABB00C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242ABAF7C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242ABB034()
{
  char *v0;

  return sub_242ABAF7C(*v0);
}

uint64_t sub_242ABB03C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242ABAF60();
  *a1 = result;
  return result;
}

uint64_t sub_242ABB060()
{
  sub_242ABBDD4();
  return sub_242C494D8();
}

uint64_t sub_242ABB088()
{
  sub_242ABBDD4();
  return sub_242C494E4();
}

uint64_t ConstantPad1D.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t result;
  float v12;
  uint64_t v13;
  Swift::Float v14;
  Swift::Int v15;
  Swift::Int v16;
  Swift::tuple_left_Int_right_Int v17;
  _BYTE v18[16];
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_41_12();
  v20 = v1;
  v21 = v2;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572234E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_242ABBDD4();
  sub_242C49448();
  if (v0)
  {
    OUTLINED_FUNCTION_23_15();
    return (uint64_t)v9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  v18[15] = 0;
  sub_242ABBC48(&qword_257223450, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
  sub_242C490D0();
  v10 = v19;
  v18[14] = 1;
  result = sub_242C490B8();
  v13 = v10[2];
  if (v13)
  {
    if (v13 != 1)
    {
      v14 = v12;
      v15 = v10[4];
      v16 = v10[5];
      OUTLINED_FUNCTION_108();
      v17.left = v15;
      v17.right = v16;
      v9 = (_QWORD *)ConstantPad1D.init(size:value:)(v17, v14);
      OUTLINED_FUNCTION_84_2((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      OUTLINED_FUNCTION_23_15();
      return (uint64_t)v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void ConstantPad1D.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_41_12();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572234F8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_11();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  sub_242ABBDD4();
  sub_242C49478();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v10 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242ABBC48(&qword_257223460, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  sub_242C49184();
  OUTLINED_FUNCTION_80();
  if (!v0)
    sub_242C4916C();
  OUTLINED_FUNCTION_51_8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  OUTLINED_FUNCTION_26_14();
}

uint64_t sub_242ABB3E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  int v5;

  result = ConstantPad1D.init(from:)();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 16) = v5;
  }
  return result;
}

void sub_242ABB40C()
{
  ConstantPad1D.encode(to:)();
}

uint64_t ConstantPad2D.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

float ConstantPad2D.value.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void __swiftcall ConstantPad2D.init(size:value:)(NeuralNetworks::ConstantPad2D *__return_ptr retstr, Swift::tuple_left_Int_right_Int_top_Int_bottom_Int size, Swift::Float value)
{
  if (size.left < 0 || size.right < 0 || size.top < 0 || size.bottom < 0)
  {
    OUTLINED_FUNCTION_3_22();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_67_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_46_7();
    OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    retstr->size = size;
    retstr->value = value;
  }
}

void __swiftcall ConstantPad2D.init(size:value:)(NeuralNetworks::ConstantPad2D *__return_ptr retstr, Swift::tuple_height_Int_width_Int size, Swift::Float value)
{
  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_54_5();
    sub_242C48C38();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_60_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_12_15();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_46_7();
    OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    retstr->size.left = size.width;
    retstr->size.right = size.width;
    retstr->size.top = size.height;
    retstr->size.bottom = size.height;
    retstr->value = value;
  }
}

void __swiftcall ConstantPad2D.init(size:value:)(NeuralNetworks::ConstantPad2D *__return_ptr retstr, Swift::Int size, Swift::Float value)
{
  if (size < 0)
  {
    OUTLINED_FUNCTION_54_5();
    sub_242C48C38();
    OUTLINED_FUNCTION_0_32();
    OUTLINED_FUNCTION_57_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257223468);
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_2_26();
    OUTLINED_FUNCTION_46_7();
    OUTLINED_FUNCTION_1_24();
    __break(1u);
  }
  else
  {
    retstr->size.left = size;
    retstr->size.right = size;
    retstr->size.top = size;
    retstr->size.bottom = size;
    retstr->value = value;
  }
}

uint64_t ConstantPad2D.forward(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 *v2;
  unsigned __int8 v4;
  void *v5;
  BOOL v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  int v11;
  _QWORD v13[14];

  v4 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 160);
  v5 = static ScalarType.floatingPointTypes.getter();
  v6 = sub_242B64794(v4, (uint64_t)v5);
  OUTLINED_FUNCTION_3_6();
  if (!v6)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v13[0] = a2;
    v13[1] = v13;
    OUTLINED_FUNCTION_8_15();
    OUTLINED_FUNCTION_4_24();
    sub_242A59264();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FC0);
  v7 = (_OWORD *)OUTLINED_FUNCTION_47_8();
  v7[1] = xmmword_242C4DE40;
  v7[2] = 0u;
  v9 = *v2;
  v8 = v2[1];
  v7[3] = 0u;
  v7[4] = v8;
  v7[5] = v9;
  v10 = sub_242A5AC38((uint64_t)v7);
  OUTLINED_FUNCTION_34();
  v11 = *((_DWORD *)v2 + 8);
  v13[3] = MEMORY[0x24BEE14E8];
  v13[4] = &protocol witness table for Float;
  LODWORD(v13[0]) = v11;
  Tensor.padded(forSizes:with:)(v10, v13, a2);
  OUTLINED_FUNCTION_3_6();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_242ABB78C()
{
  uint64_t v0;
  unsigned int v1;

  OUTLINED_FUNCTION_35_10();
  OUTLINED_FUNCTION_40_0();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_242ABB7C0()
{
  return sub_242ABB78C();
}

uint64_t sub_242ABB7E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242ABB78C();
  *a1 = result;
  return result;
}

uint64_t sub_242ABB814@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242ABB7C0();
  *a1 = result;
  return result;
}

uint64_t sub_242ABB838()
{
  sub_242ABBE10();
  return sub_242C494D8();
}

uint64_t sub_242ABB860()
{
  sub_242ABBE10();
  return sub_242C494E4();
}

void ConstantPad2D.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  unint64_t v9;
  Swift::Float v10;
  Swift::Int v11;
  Swift::Int v12;
  __int128 v13;
  Swift::Int v14;
  Swift::Int v15;
  _QWORD *v16;
  NeuralNetworks::ConstantPad2D v17;
  uint64_t v18;
  uint64_t v19;
  Swift::tuple_left_Int_right_Int_top_Int_bottom_Int v20;

  OUTLINED_FUNCTION_41_12();
  v18 = v1;
  v19 = v2;
  v4 = v3;
  v6 = v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257223500);
  MEMORY[0x24BDAC7A8](v7);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_242ABBE10();
  sub_242C49448();
  if (v0)
  {
    OUTLINED_FUNCTION_23_15();
LABEL_4:
    OUTLINED_FUNCTION_26_14();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242ABBC48(&qword_257223450, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
  OUTLINED_FUNCTION_50_8();
  sub_242C490B8();
  v9 = v16[2];
  if (!v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v9 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v9 < 3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v9 != 3)
  {
    v10 = v8;
    v11 = v16[6];
    v14 = v16[5];
    v15 = v16[4];
    v12 = v16[7];
    OUTLINED_FUNCTION_80();
    v20.right = v14;
    v20.left = v15;
    v20.top = v11;
    v20.bottom = v12;
    ConstantPad2D.init(size:value:)(&v17, v20, v10);
    OUTLINED_FUNCTION_2_6();
    OUTLINED_FUNCTION_23_15();
    v13 = *(_OWORD *)&v17.size.top;
    *(_OWORD *)v6 = *(_OWORD *)&v17.size.left;
    *(_OWORD *)(v6 + 16) = v13;
    *(Swift::Float *)(v6 + 32) = v17.value;
    goto LABEL_4;
  }
LABEL_13:
  __break(1u);
}

uint64_t ConstantPad2D.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;

  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257223510);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242ABBE10();
  sub_242C49478();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v8 = (_OWORD *)OUTLINED_FUNCTION_2_0();
  v9 = *v4;
  v10 = v4[1];
  v8[1] = xmmword_242C4DE40;
  v8[2] = v9;
  v8[3] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242ABBC48(&qword_257223460, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  sub_242C49184();
  OUTLINED_FUNCTION_108();
  if (!v2)
    sub_242C4916C();
  return OUTLINED_FUNCTION_51_8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
}

double sub_242ABBBB4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  int v6;

  ConstantPad2D.init(from:)();
  if (!v1)
  {
    result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    *(_DWORD *)(a1 + 32) = v6;
  }
  return result;
}

uint64_t sub_242ABBBF8(_QWORD *a1)
{
  return ConstantPad2D.encode(to:)(a1);
}

unint64_t sub_242ABBC0C()
{
  unint64_t result;

  result = qword_257223448;
  if (!qword_257223448)
  {
    result = MEMORY[0x2494EDE24](&unk_242C511E8, &type metadata for ZeroPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223448);
  }
  return result;
}

uint64_t sub_242ABBC48(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257220EA0);
    v8 = a2;
    result = MEMORY[0x2494EDE24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_242ABBCA8()
{
  unint64_t result;

  result = qword_257223478;
  if (!qword_257223478)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51198, &type metadata for ZeroPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223478);
  }
  return result;
}

unint64_t sub_242ABBCE4()
{
  unint64_t result;

  result = qword_257223490;
  if (!qword_257223490)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51148, &type metadata for ReflectionPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223490);
  }
  return result;
}

unint64_t sub_242ABBD20()
{
  unint64_t result;

  result = qword_2572234A8;
  if (!qword_2572234A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C510F8, &type metadata for ReflectionPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572234A8);
  }
  return result;
}

unint64_t sub_242ABBD5C()
{
  unint64_t result;

  result = qword_2572234C0;
  if (!qword_2572234C0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C510A8, &type metadata for SymmetricPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572234C0);
  }
  return result;
}

unint64_t sub_242ABBD98()
{
  unint64_t result;

  result = qword_2572234D8;
  if (!qword_2572234D8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51058, &type metadata for SymmetricPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572234D8);
  }
  return result;
}

unint64_t sub_242ABBDD4()
{
  unint64_t result;

  result = qword_2572234F0;
  if (!qword_2572234F0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51008, &type metadata for ConstantPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572234F0);
  }
  return result;
}

unint64_t sub_242ABBE10()
{
  unint64_t result;

  result = qword_257223508;
  if (!qword_257223508)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50FB8, &type metadata for ConstantPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223508);
  }
  return result;
}

void type metadata accessor for ZeroPad1D()
{
  OUTLINED_FUNCTION_22_4();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for ZeroPad2D()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for ReflectionPad1D()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for ReflectionPad2D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t getEnumTagSinglePayload for SymmetricPad1D(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SymmetricPad1D(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for SymmetricPad1D()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t getEnumTagSinglePayload for SymmetricPad2D(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SymmetricPad2D(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for SymmetricPad2D()
{
  OUTLINED_FUNCTION_22_4();
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConstantPad1D(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConstantPad1D(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

void type metadata accessor for ConstantPad1D()
{
  OUTLINED_FUNCTION_22_4();
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ConstantPad2D(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 36))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConstantPad2D(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 36) = v3;
  return result;
}

void type metadata accessor for ConstantPad2D()
{
  OUTLINED_FUNCTION_22_4();
}

ValueMetadata *type metadata accessor for ConstantPad2D.CodingKeys()
{
  return &type metadata for ConstantPad2D.CodingKeys;
}

uint64_t _s14NeuralNetworks13ConstantPad2DV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242ABC070 + 4 * byte_242C50205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242ABC0A4 + 4 * byte_242C50200[v4]))();
}

uint64_t sub_242ABC0A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242ABC0AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242ABC0B4);
  return result;
}

uint64_t sub_242ABC0C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242ABC0C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242ABC0CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242ABC0D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConstantPad1D.CodingKeys()
{
  return &type metadata for ConstantPad1D.CodingKeys;
}

ValueMetadata *type metadata accessor for SymmetricPad2D.CodingKeys()
{
  return &type metadata for SymmetricPad2D.CodingKeys;
}

ValueMetadata *type metadata accessor for SymmetricPad1D.CodingKeys()
{
  return &type metadata for SymmetricPad1D.CodingKeys;
}

ValueMetadata *type metadata accessor for ReflectionPad2D.CodingKeys()
{
  return &type metadata for ReflectionPad2D.CodingKeys;
}

ValueMetadata *type metadata accessor for ReflectionPad1D.CodingKeys()
{
  return &type metadata for ReflectionPad1D.CodingKeys;
}

ValueMetadata *type metadata accessor for ZeroPad2D.CodingKeys()
{
  return &type metadata for ZeroPad2D.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Reshape.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s14NeuralNetworks14SymmetricPad2DV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_242ABC1DC + 4 * byte_242C5020A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_242ABC1FC + 4 * byte_242C5020F[v4]))();
}

_BYTE *sub_242ABC1DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_242ABC1FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242ABC204(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242ABC20C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242ABC214(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242ABC21C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ZeroPad1D.CodingKeys()
{
  return &type metadata for ZeroPad1D.CodingKeys;
}

unint64_t sub_242ABC23C()
{
  unint64_t result;

  result = qword_2572237D8;
  if (!qword_2572237D8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50900, &type metadata for ZeroPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572237D8);
  }
  return result;
}

unint64_t sub_242ABC27C()
{
  unint64_t result;

  result = qword_2572237E0;
  if (!qword_2572237E0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C509F0, &type metadata for ZeroPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572237E0);
  }
  return result;
}

unint64_t sub_242ABC2BC()
{
  unint64_t result;

  result = qword_2572237E8;
  if (!qword_2572237E8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50AE0, &type metadata for ReflectionPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572237E8);
  }
  return result;
}

unint64_t sub_242ABC2FC()
{
  unint64_t result;

  result = qword_2572237F0;
  if (!qword_2572237F0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50BD0, &type metadata for ReflectionPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572237F0);
  }
  return result;
}

unint64_t sub_242ABC33C()
{
  unint64_t result;

  result = qword_2572237F8;
  if (!qword_2572237F8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50CC0, &type metadata for SymmetricPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2572237F8);
  }
  return result;
}

unint64_t sub_242ABC37C()
{
  unint64_t result;

  result = qword_257223800;
  if (!qword_257223800)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50DB0, &type metadata for SymmetricPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223800);
  }
  return result;
}

unint64_t sub_242ABC3BC()
{
  unint64_t result;

  result = qword_257223808;
  if (!qword_257223808)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50EA0, &type metadata for ConstantPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223808);
  }
  return result;
}

unint64_t sub_242ABC3FC()
{
  unint64_t result;

  result = qword_257223810;
  if (!qword_257223810)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50F90, &type metadata for ConstantPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223810);
  }
  return result;
}

unint64_t sub_242ABC43C()
{
  unint64_t result;

  result = qword_257223818;
  if (!qword_257223818)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50EC8, &type metadata for ConstantPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223818);
  }
  return result;
}

unint64_t sub_242ABC47C()
{
  unint64_t result;

  result = qword_257223820;
  if (!qword_257223820)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50EF0, &type metadata for ConstantPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223820);
  }
  return result;
}

unint64_t sub_242ABC4BC()
{
  unint64_t result;

  result = qword_257223828;
  if (!qword_257223828)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50DD8, &type metadata for ConstantPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223828);
  }
  return result;
}

unint64_t sub_242ABC4FC()
{
  unint64_t result;

  result = qword_257223830;
  if (!qword_257223830)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50E00, &type metadata for ConstantPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223830);
  }
  return result;
}

unint64_t sub_242ABC53C()
{
  unint64_t result;

  result = qword_257223838;
  if (!qword_257223838)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50CE8, &type metadata for SymmetricPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223838);
  }
  return result;
}

unint64_t sub_242ABC57C()
{
  unint64_t result;

  result = qword_257223840;
  if (!qword_257223840)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50D10, &type metadata for SymmetricPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223840);
  }
  return result;
}

unint64_t sub_242ABC5BC()
{
  unint64_t result;

  result = qword_257223848;
  if (!qword_257223848)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50BF8, &type metadata for SymmetricPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223848);
  }
  return result;
}

unint64_t sub_242ABC5FC()
{
  unint64_t result;

  result = qword_257223850;
  if (!qword_257223850)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50C20, &type metadata for SymmetricPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223850);
  }
  return result;
}

unint64_t sub_242ABC63C()
{
  unint64_t result;

  result = qword_257223858;
  if (!qword_257223858)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50B08, &type metadata for ReflectionPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223858);
  }
  return result;
}

unint64_t sub_242ABC67C()
{
  unint64_t result;

  result = qword_257223860;
  if (!qword_257223860)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50B30, &type metadata for ReflectionPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223860);
  }
  return result;
}

unint64_t sub_242ABC6BC()
{
  unint64_t result;

  result = qword_257223868;
  if (!qword_257223868)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50A18, &type metadata for ReflectionPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223868);
  }
  return result;
}

unint64_t sub_242ABC6FC()
{
  unint64_t result;

  result = qword_257223870;
  if (!qword_257223870)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50A40, &type metadata for ReflectionPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223870);
  }
  return result;
}

unint64_t sub_242ABC73C()
{
  unint64_t result;

  result = qword_257223878;
  if (!qword_257223878)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50928, &type metadata for ZeroPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223878);
  }
  return result;
}

unint64_t sub_242ABC77C()
{
  unint64_t result;

  result = qword_257223880;
  if (!qword_257223880)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50950, &type metadata for ZeroPad2D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223880);
  }
  return result;
}

unint64_t sub_242ABC7BC()
{
  unint64_t result;

  result = qword_257223888;
  if (!qword_257223888)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50838, &type metadata for ZeroPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223888);
  }
  return result;
}

unint64_t sub_242ABC7FC()
{
  unint64_t result;

  result = qword_257223890;
  if (!qword_257223890)
  {
    result = MEMORY[0x2494EDE24](&unk_242C50860, &type metadata for ZeroPad1D.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257223890);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_32()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_2_26()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_3_22()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_5_26()
{
  return sub_242C48C38();
}

void *OUTLINED_FUNCTION_6_24()
{
  return static ScalarType.floatingPointTypes.getter();
}

void *OUTLINED_FUNCTION_9_22()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_10_18()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_12_15()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_15_14(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(__n128 *)(a1 + 16) = a2;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v3;
  *(_QWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 88) = v2;
  return sub_242A5AC38(a1);
}

uint64_t OUTLINED_FUNCTION_17_15()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_18_16()
{
  return sub_242C48C38();
}

BOOL OUTLINED_FUNCTION_20_17(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

uint64_t OUTLINED_FUNCTION_23_15()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_24_13(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_25_11()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_27_11()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_28_15()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_30_11()
{
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_32_11(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

uint64_t OUTLINED_FUNCTION_35_10()
{
  return sub_242C49064();
}

uint64_t OUTLINED_FUNCTION_36_12(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_37_11()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_38_9()
{
  uint64_t *v0;
  uint64_t v1;

  return Tensor.padded(forSizes:mode:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_39_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_47_8()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_48_9(uint64_t a1)
{
  uint64_t *v1;

  return Tensor.padded(forSizes:mode:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_49_7(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t *v3;
  va_list va;

  va_start(va, a3);
  return Tensor.padded(forSizes:with:)(a1, (uint64_t *)va, v3);
}

uint64_t OUTLINED_FUNCTION_50_8()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_51_8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_54_5()
{
  return 34;
}

uint64_t OUTLINED_FUNCTION_59_5(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_4(uint64_t result, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(result + 16) = a2;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_QWORD *)(result + 64) = v3;
  *(_QWORD *)(result + 72) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_69_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  return sub_242C49448();
}

uint64_t OUTLINED_FUNCTION_71_4(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_74_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_242ABCCA0()
{
  unint64_t v0;

  v0 = sub_242C492A4();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19)
    return 25;
  else
    return v0;
}

uint64_t sub_242ABCCF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242ABCD1C + 4 * byte_242C51240[a1]))(7561825, 0xE300000000000000);
}

uint64_t sub_242ABCD1C()
{
  return 1936679777;
}

uint64_t sub_242ABCD2C()
{
  return 0x68736F6361;
}

uint64_t sub_242ABCD80()
{
  return 1818846563;
}

uint64_t sub_242ABCD90(uint64_t a1)
{
  return a1 + 3330;
}

uint64_t sub_242ABCD98()
{
  return 1752395619;
}

uint64_t sub_242ABCDA8()
{
  return 7370853;
}

uint64_t sub_242ABCDB4()
{
  return 846231653;
}

uint64_t sub_242ABCDC4()
{
  return 0x726F6F6C66;
}

uint64_t sub_242ABCDD8()
{
  return 0x797469746E656469;
}

uint64_t sub_242ABCDF0()
{
  return 6778732;
}

uint64_t sub_242ABCDFC()
{
  return 0x636F727069636572;
}

uint64_t sub_242ABCE18()
{
  return 0x646E756F72;
}

uint64_t sub_242ABCE2C()
{
  return 0x7472717372;
}

uint64_t sub_242ABCE40()
{
  return 1852270963;
}

uint64_t sub_242ABCE50()
{
  return 7235955;
}

uint64_t sub_242ABCE60()
{
  return 1752066419;
}

uint64_t sub_242ABCE74()
{
  return 1953657203;
}

uint64_t sub_242ABCE84()
{
  return 0x657261757173;
}

uint64_t sub_242ABCE98()
{
  return 7233908;
}

uint64_t sub_242ABCEA4()
{
  return 1752064372;
}

void sub_242ABCEB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_242B3F1C8(*a1, *a2);
}

void sub_242ABCEC0()
{
  unsigned __int8 *v0;

  sub_242C449B4(*v0);
}

uint64_t sub_242ABCEC8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_242A5C824(a1, *v1);
}

void sub_242ABCED0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA9094(a1, *v1);
}

uint64_t sub_242ABCED8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242ABCCA0();
  *a1 = result;
  return result;
}

uint64_t sub_242ABCF04@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242ABCCF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_242ABCF2C(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137C570;
}

uint64_t sub_242ABCF3C()
{
  uint64_t v0;

  return sub_242ABCCF0(*(_BYTE *)(v0 + 128));
}

uint64_t sub_242ABCF44(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;
  char v26;

  v12 = *a6;
  v13 = *((unsigned __int8 *)a6 + 16);
  v14 = *(__int128 *)((char *)a6 + 24);
  v15 = *(__int128 *)((char *)a6 + 40);
  v16 = *((_BYTE *)a6 + 56);
  *(_BYTE *)(v8 + 128) = a4;
  if (!a3)
  {
    v19 = v14;
    v20 = v12;
    v18 = v15;
    sub_242C0E0B0(a4);
    v15 = v18;
    v14 = v19;
    v12 = v20;
  }
  v21 = v12;
  v22 = v13;
  v23 = v14;
  v24 = v15;
  v25 = v16;
  v26 = 0;
  *(_QWORD *)(v8 + 112) = a7;
  *(_QWORD *)(v8 + 120) = a8;
  return sub_242B056CC(a1, a2, a3, a5, (uint64_t)&v21);
}

uint64_t sub_242ABCFDC()
{
  uint64_t v0;

  v0 = sub_242B056F8();
  sub_242A6549C(*(_QWORD *)(v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnaryArithmeticOperation()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for UnaryArithmeticOperation.Operator(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE8)
  {
    if (a2 + 24 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 24) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 25;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v5 = v6 - 25;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UnaryArithmeticOperation.Operator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_242ABD108 + 4 * byte_242C5125E[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_242ABD13C + 4 * byte_242C51259[v4]))();
}

uint64_t sub_242ABD13C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242ABD144(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242ABD14CLL);
  return result;
}

uint64_t sub_242ABD158(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242ABD160);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_242ABD164(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242ABD16C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnaryArithmeticOperation.Operator()
{
  return &type metadata for UnaryArithmeticOperation.Operator;
}

unint64_t sub_242ABD18C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257223988;
  if (!qword_257223988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257223990);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257223988);
  }
  return result;
}

unint64_t sub_242ABD1D4()
{
  unint64_t result;

  result = qword_257223998;
  if (!qword_257223998)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51344, &type metadata for UnaryArithmeticOperation.Operator);
    atomic_store(result, (unint64_t *)&qword_257223998);
  }
  return result;
}

uint64_t sub_242ABD210()
{
  uint64_t v0;

  sub_242ABCCF0(*(_BYTE *)(v0 + 128));
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242ABD250()
{
  return sub_242ABD210();
}

unint64_t sub_242ABD270(uint64_t a1)
{
  unint64_t result;

  result = sub_242A70094();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABD294()
{
  return 6578544;
}

uint64_t sub_242ABD2A4()
{
  return 0x646172675F646170;
}

void sub_242ABD2BC()
{
  sub_242A59170();
}

uint64_t sub_242ABD318()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 104);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 96);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

uint64_t sub_242ABD368(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  char v12;

  v11 = *a7;
  v12 = *((_BYTE *)a7 + 8);
  *(_DWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  sub_242ABDA34(a5, v8 + 48);
  *(_QWORD *)(v8 + 88) = a6;
  *(_QWORD *)(v8 + 96) = v11;
  *(_BYTE *)(v8 + 104) = v12;
  sub_242A56808(a8, v8 + 112);
  return v8;
}

uint64_t sub_242ABD3D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_242A8A7D4(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242ABD40C()
{
  sub_242ABD3D0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BasePadOperation()
{
  return objc_opt_self();
}

uint64_t sub_242ABD44C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

__n128 sub_242ABD45C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_BYTE *)(v1 + 168);
  v4 = *(_BYTE *)(v1 + 169);
  v5 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 144);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242ABD488(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C514B4, a1);
  return sub_242BD01E4(a1, v2);
}

void sub_242ABD4C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[40];
  _BYTE v19[40];
  __int128 v20;
  unint64_t v21;

  (*(void (**)(void))(*v0 + 128))();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242A8A798((uint64_t)(v0 + 6), (uint64_t)&v20);
  if (v21 > 2)
  {
    sub_242A64518(&v20, (uint64_t)v19);
    sub_242A587A8((uint64_t)v19, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if (OUTLINED_FUNCTION_1_25())
    {
      sub_242C49370();
    }
    else if (OUTLINED_FUNCTION_1_25())
    {
      sub_242C4937C();
    }
    else
    {
      sub_242C4817C();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_242C4817C();
  }
  v1 = v0[11];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    sub_242C480E0();
    v3 = (uint64_t *)(v1 + 40);
    v4 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 + 2;
      if (__OFADD__(v5, 2))
        break;
      v7 = *(v3 - 1);
      v8 = *v3;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native
        || (v10 = *(_QWORD *)(v4 + 24), v11 = v10 >> 1, (uint64_t)(v10 >> 1) < v6))
      {
        if (v5 <= v6)
          v12 = v5 + 2;
        else
          v12 = v5;
        OUTLINED_FUNCTION_2_27(isUniquelyReferenced_nonNull_native, v12);
        v4 = v13;
        v10 = *(_QWORD *)(v13 + 24);
        v11 = v10 >> 1;
      }
      v14 = *(_QWORD *)(v4 + 16);
      v15 = v14 + 1;
      if (v11 <= v14)
      {
        OUTLINED_FUNCTION_2_27(v10 > 1, v14 + 1);
        v4 = v16;
        v10 = *(_QWORD *)(v16 + 24);
        v11 = v10 >> 1;
      }
      *(_QWORD *)(v4 + 16) = v15;
      *(_QWORD *)(v4 + 8 * v14 + 32) = v7;
      if ((uint64_t)v11 < (uint64_t)(v14 + 2))
      {
        OUTLINED_FUNCTION_2_27(v10 > 1, v14 + 2);
        v4 = v17;
      }
      v3 += 2;
      *(_QWORD *)(v4 + 16) = v14 + 2;
      *(_QWORD *)(v4 + 8 * v15 + 32) = v8;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_24:
    sub_242C02D08();
    swift_bridgeObjectRelease();
  }
}

void sub_242ABD768()
{
  sub_242ABD4C4();
}

void sub_242ABD788(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v15 = *(_QWORD *)a7;
  v16 = *(_BYTE *)(a7 + 8);
  *(_QWORD *)(v10 + 176) = a9;
  *(_QWORD *)(v10 + 184) = a10;
  if (!a3)
    a1 = sub_242BD0204(6578544, 0xE300000000000000);
  v17 = v15;
  v18 = v16;
  sub_242ABD368(a1, a2, a3, a4, a5, a6, &v17, a8);
  OUTLINED_FUNCTION_0_33();
}

uint64_t sub_242ABD800()
{
  uint64_t v0;

  return sub_242A6549C(*(_QWORD *)(v0 + 176));
}

uint64_t sub_242ABD808()
{
  uint64_t v0;

  sub_242ABD3D0();
  sub_242A6549C(*(_QWORD *)(v0 + 176));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PadOperation()
{
  return objc_opt_self();
}

uint64_t sub_242ABD850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  swift_retain();
  return v0;
}

void sub_242ABD8B4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  v13 = *(_QWORD *)a8;
  v14 = *(_BYTE *)(a8 + 8);
  *(_QWORD *)(v9 + 176) = a4;
  if (!a3)
    a1 = sub_242BD0204(0x646172675F646170, 0xE800000000000000);
  v15 = v13;
  v16 = v14;
  sub_242ABD368(a1, a2, a3, a5, a6, a7, &v15, a9);
  OUTLINED_FUNCTION_0_33();
}

uint64_t sub_242ABD930()
{
  return swift_release();
}

uint64_t sub_242ABD938()
{
  sub_242ABD3D0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PadGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242ABD980(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257221F10, type metadata accessor for PadGradientOperation, (uint64_t)&unk_242C514B4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABD9BC(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257221F18, type metadata accessor for PadOperation, (uint64_t)&unk_242C514B4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABD9F8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257223C58, type metadata accessor for BasePadOperation, (uint64_t)&unk_242C5148C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABDA34(uint64_t a1, uint64_t a2)
{
  __swift_memcpy40_8(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_25()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_2_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DFBC(a1, a2, 1, v2);
}

uint64_t sub_242ABDAAC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[112];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  _QWORD v19[3];
  uint64_t v20;
  char v21;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v2 = sub_242C48FC8();
    if (!v2)
      return swift_bridgeObjectRelease_n();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v2)
      return swift_bridgeObjectRelease_n();
  }
  if (v2 < 1)
  {
    __break(1u);
LABEL_21:
    *(_QWORD *)&v14 = 0xD000000000000026;
    *((_QWORD *)&v14 + 1) = 0x8000000242C67F80;
    v17 = 9;
    sub_242A59170();
  }
  v3 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = MEMORY[0x2494EC84C](v3, v1);
    }
    else
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      swift_retain();
    }
    swift_retain();
    v5 = sub_242BCA40C();
    objc_msgSend(v5, sel_lock);

    swift_beginAccess();
    sub_242A6FF34(v4 + 40, (uint64_t)v19);
    if (v21 && v21 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_242A6FF34(v4 + 40, (uint64_t)v13);
      sub_242A6FF34((uint64_t)v13, (uint64_t)&v8);
      if (v12 == 1)
      {
        v14 = v8;
        v15 = v9;
        v16 = v10;
        v18 = 2;
        sub_242A6FFE8((uint64_t)&v11);
      }
      else
      {
        if (v12 != 2)
          goto LABEL_21;
        sub_242A6FF70((uint64_t)&v8);
        sub_242A6FF34((uint64_t)v13, (uint64_t)&v14);
      }
      sub_242A6FF70((uint64_t)v13);
      swift_beginAccess();
      sub_242A8D65C((uint64_t)&v14, v4 + 40);
      swift_endAccess();
      sub_242A6FFE8((uint64_t)&v20);
    }
    else
    {
      sub_242A6FF70((uint64_t)v19);
    }
    ++v3;
    v6 = sub_242BCA40C();
    objc_msgSend(v6, sel_unlock);
    swift_release_n();

  }
  while (v2 != v3);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_242ABDD40()
{
  sub_242ABDAAC();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentGraphScope()
{
  return objc_opt_self();
}

void sub_242ABDD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_3_23();
  if (!v4)
    v2 = sub_242BD0204(0x74726F735F677261, 0xE800000000000000);
  OUTLINED_FUNCTION_1_26(v2, v3, v4);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 152);
  OUTLINED_FUNCTION_2_28(2);
  sub_242C480E0();
  OUTLINED_FUNCTION_7_0();
}

uint64_t type metadata accessor for ArgumentSortOperation()
{
  return objc_opt_self();
}

uint64_t sub_242ABDE0C()
{
  return 0x74726F735F677261;
}

uint64_t sub_242ABDE24()
{
  return sub_242ABDE84();
}

uint64_t sub_242ABDE38()
{
  return sub_242ABDEEC();
}

uint64_t sub_242ABDE50()
{
  return sub_242ABE040();
}

uint64_t sub_242ABDE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  v3 = v1;
  sub_242C4856C();
  swift_retain();
  return v3;
}

uint64_t sub_242ABDEEC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 72);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  return v1;
}

void sub_242ABDF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_3_23();
  if (!v4)
    v2 = sub_242BD0204(1953656691, 0xE400000000000000);
  OUTLINED_FUNCTION_1_26(v2, v3, v4);
  v5 = *(_BYTE *)(v1 + 160);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 152);
  OUTLINED_FUNCTION_2_28(v5);
  sub_242C480E0();
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242ABDF98()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242ABDFC4()
{
  sub_242ABDF98();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SortOperation()
{
  return objc_opt_self();
}

uint64_t sub_242ABE004()
{
  return 1953656691;
}

__n128 sub_242ABE014@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_BYTE *)(v1 + 136);
  v4 = *(_BYTE *)(v1 + 137);
  v5 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 112);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242ABE040()
{
  sub_242C4817C();
  sub_242C4934C();
  return sub_242C49358();
}

uint64_t sub_242ABE074()
{
  return sub_242ABE040();
}

uint64_t sub_242ABE0A0(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257222190, type metadata accessor for SortOperation, (uint64_t)&unk_242C51630);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABE0DC(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257222188, type metadata accessor for ArgumentSortOperation, (uint64_t)&unk_242C5164C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABE118(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_257223EA8, type metadata accessor for SortOperation, (uint64_t)&unk_242C51598);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABE154(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(qword_257223EB0, type metadata accessor for ArgumentSortOperation, (uint64_t)&unk_242C515EC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_26(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_DWORD *)(v3 + 16) = result;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = v6;
  *(_BYTE *)(v3 + 56) = v5 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_28@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 72) = a1;
  return sub_242A56808(v1, v2 + 80);
}

uint64_t sub_242ABE1D0(void *a1, uint64_t a2)
{
  uint64_t v2;
  int v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v5 = *(unsigned __int8 *)(v2 + 160);
  v6 = a2 & 0xC000000000000001;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v6)
    v7 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v7 = *(id *)(a2 + 32);
  v8 = v7;
  sub_242B4B240(1, v6 == 0, a2);
  if (v6)
    v9 = (id)MEMORY[0x2494EC84C](1, a2);
  else
    v9 = *(id *)(a2 + 40);
  v10 = v9;
  v11 = a1;
  v12 = *(_QWORD *)(v2 + 152);
  if (v5 == 2)
  {
    v13 = *(_QWORD *)(v2 + 32);
    v24 = *(_QWORD *)(v2 + 24);
    sub_242C480E0();
    sub_242C48314();
    v14 = 0;
  }
  else
  {
    if ((v5 & 1) != 0)
      v14 = 1;
    else
      v14 = 2;
    v16 = *(_QWORD *)(v2 + 24);
    v15 = *(_QWORD *)(v2 + 32);
    sub_242C480E0();
    v24 = v16;
    v13 = v15;
  }
  v17 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v11, sel_softMaxCrossEntropyWithSourceTensor_labelsTensor_axis_reductionType_name_, v8, v10, v12, v14, v17);

  if (v5 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v19 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v19 + 16) = xmmword_242C4BF60;
    v20 = v18;
    *(_QWORD *)(v19 + 32) = sub_242C4877C();
    sub_242C4856C();
    sub_242AAB33C();
    v21 = (void *)sub_242C4853C();
    swift_bridgeObjectRelease();
    sub_242C480E0();
    v18 = sub_242ABE640((uint64_t)v20, (uint64_t)v21, v24, v13, v11);

  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v22 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v22 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v22 + 32) = v18;
  v25 = v22;
  sub_242C4856C();
  return v25;
}

uint64_t sub_242ABE414(void *a1, uint64_t a2)
{
  return sub_242ABE1D0(a1, a2);
}

uint64_t sub_242ABE428(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v5 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v5 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_17_6(0, (a2 & 0xC000000000000001) == 0);
  if ((a2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_16_6();
  v6 = *(id *)(a2 + 32);
  OUTLINED_FUNCTION_17_6(1, 1);
  v7 = *(id *)(a2 + 40);
  OUTLINED_FUNCTION_17_6(2, 1);
  v8 = *(id *)(a2 + 48);
  v9 = *(_QWORD *)(v2 + 136);
  v10 = *(unsigned __int8 *)(v2 + 144);
  v11 = 1;
  if ((v10 & 1) == 0)
    v11 = 2;
  if (v10 == 2)
    v12 = 0;
  else
    v12 = v11;
  v14 = *(_QWORD *)(v2 + 24);
  v13 = *(_QWORD *)(v2 + 32);
  sub_242C480E0();
  v15 = sub_242ABE6C0((uint64_t)v6, (uint64_t)v7, (uint64_t)v8, v9, v12, v14, v13, a1);

  *(_QWORD *)(v5 + 32) = v15;
  sub_242C4856C();
  return v5;
}

uint64_t sub_242ABE584(void *a1, unint64_t a2)
{
  return sub_242ABE428(a1, a2);
}

uint64_t sub_242ABE598(uint64_t a1)
{
  uint64_t result;

  result = sub_242ABE600(&qword_257222B40, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyGradientOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABE5CC(uint64_t a1)
{
  uint64_t result;

  result = sub_242ABE600(&qword_257222B48, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242ABE600(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C62B2C, v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_242ABE640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_squeezeTensor_axes_name_, a1, a2, v8);

  return v9;
}

id sub_242ABE6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v14;
  id v15;

  v14 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a8, sel_softMaxCrossEntropyGradientWithIncomingGradientTensor_sourceTensor_labelsTensor_axis_reductionType_name_, a1, a2, a3, a4, a5, v14);

  return v15;
}

uint64_t DataSample.features.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_34(*(_QWORD *)(a1 + 16), a2);
}

uint64_t DataSample.features.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_1_27(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*DataSample.features.modify())()
{
  return nullsub_1;
}

uint64_t DataSample.labels.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_34(*(_QWORD *)(a1 + 24), a2);
}

uint64_t DataSample.labels.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_1_27(v2 + *(int *)(a2 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*DataSample.labels.modify())()
{
  return nullsub_1;
}

uint64_t DataSample.init(features:labels:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for DataSample(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v10, a2, a4);
}

uint64_t type metadata accessor for DataSample(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataSample);
}

uint64_t sub_242ABE854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return DataSample.init(features:labels:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t static DataSample<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if ((sub_242C48200() & 1) == 0)
    return 0;
  type metadata accessor for DataSample(0, a3, a4, v6);
  return sub_242C48200() & 1;
}

uint64_t sub_242ABE8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DataSample<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t DataSample<>.init<A>(collating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v59 = a8;
  v60 = a1;
  v12 = *(_QWORD *)(a7 + 8);
  v58 = sub_242C48E24();
  OUTLINED_FUNCTION_2_29();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v56 = (char *)&v46 - v17;
  v52 = a3;
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_5_6();
  v57 = v18;
  v51 = sub_242C48C5C();
  v55 = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v46 - v20;
  v53 = v12;
  v54 = sub_242C48E24();
  OUTLINED_FUNCTION_2_29();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v47 = (char *)&v46 - v24;
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_5_6();
  v61 = v25;
  sub_242C48428();
  v68 = a2;
  v69 = a3;
  v70 = a4;
  v71 = a5;
  v26 = a5;
  v48 = a6;
  v72 = a6;
  v73 = a7;
  KeyPath = swift_getKeyPath();
  v28 = (_QWORD *)OUTLINED_FUNCTION_27_0();
  v28[2] = a4;
  v28[3] = a5;
  v28[4] = a6;
  v28[5] = a7;
  v29 = a7;
  v28[6] = KeyPath;
  v30 = v51;
  v49 = MEMORY[0x2494EDE24](MEMORY[0x24BEE25B0], v51);
  v31 = v47;
  sub_242C4904C();
  swift_release();
  v55 = *(_QWORD *)(v55 + 8);
  ((void (*)(char *, uint64_t))v55)(v21, v30);
  v32 = v26;
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8);
  v75 = v29;
  v34 = v54;
  v35 = MEMORY[0x2494EDE24](MEMORY[0x24BEE2B50], v54, &v75);
  v50 = a2;
  v33(v31, v34, v35, a2, v26);
  sub_242C48428();
  v36 = v52;
  v62 = a2;
  v63 = v52;
  v64 = a4;
  v65 = v32;
  v37 = v48;
  v66 = v48;
  v67 = v29;
  v38 = swift_getKeyPath();
  v39 = (_QWORD *)OUTLINED_FUNCTION_27_0();
  v39[2] = a4;
  v39[3] = v32;
  v39[4] = v37;
  v39[5] = v29;
  v39[6] = v38;
  v40 = v56;
  sub_242C4904C();
  swift_release();
  ((void (*)(char *, uint64_t))v55)(v21, v30);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8);
  v74 = v29;
  v42 = v58;
  v43 = MEMORY[0x2494EDE24](MEMORY[0x24BEE2B50], v58, &v74);
  v44 = v57;
  v41(v40, v42, v43, v36, v37);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(v60, a4);
  return DataSample.init(features:labels:)(v61, v44, v50, v36, v59);
}

uint64_t sub_242ABECAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242ABECD0()
{
  return swift_getAtKeyPath();
}

uint64_t sub_242ABECD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return DataSample<>.init<A>(collating:)(a1, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a2, *(_QWORD *)(a5 - 8), *(_QWORD *)(a5 - 16), a3, a6);
}

uint64_t dispatch thunk of DataSampleProtocol.features.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataSampleProtocol.labels.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DataSampleProtocol.init(features:labels:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_242ABED0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_242ABED98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_242ABEE68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_242ABEEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_242ABEF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_242ABEF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_242ABF004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_242ABF070(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_242ABF14C + 4 * byte_242C516A0[v21 - 1]))();
}

void sub_242ABF1C0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_0_34@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2);
}

uint64_t OUTLINED_FUNCTION_1_27@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

uint64_t sub_242ABF3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  void (*v3)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v3 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);
  return swift_unknownObjectRelease();
}

void sub_242ABF444()
{
  OUTLINED_FUNCTION_1_28();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_0_9();
}

void sub_242ABF488()
{
  OUTLINED_FUNCTION_1_28();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242ABF4CC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242ABF4F0()
{
  sub_242ABF4CC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewingTensorStorage()
{
  return objc_opt_self();
}

uint64_t sub_242ABF534@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return sub_242C480E0();
}

void sub_242ABF540()
{
  sub_242ABF444();
}

void sub_242ABF554()
{
  sub_242ABF488();
}

uint64_t OUTLINED_FUNCTION_0_35()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v0(v3, v2, v1, v5, v4);
}

uint64_t OUTLINED_FUNCTION_1_28()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return swift_unknownObjectRelease();
}

void sub_242ABF5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v25;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!v5)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v25 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  v7 = a1;
  if (a2 >= a1 && (v5 & 0x8000000000000000) == 0)
  {
    v8 = a3;
    v10 = a5;
    v9 = a4;
    v11 = a1;
    while (a2 != v11)
    {
      if (v7 < 0)
        goto LABEL_23;
      if (v11 >= *(_QWORD *)(v8 + 16))
        goto LABEL_24;
      if (v11 >= *(_QWORD *)(v9 + 16))
        goto LABEL_25;
      v12 = *(_QWORD *)(a3 + 32 + 8 * v11);
      v13 = *(_QWORD *)(a4 + 32 + 8 * v11);
      v14 = __OFSUB__(v12, v13);
      v15 = v12 - v13;
      if (v14)
        goto LABEL_26;
      v14 = __OFSUB__(v15, 1);
      v16 = v15 - 1;
      if (v14)
        goto LABEL_27;
      if (v11 >= *(_QWORD *)(v10 + 16))
        goto LABEL_28;
      v17 = *(_QWORD *)(a5 + 32 + 8 * v11);
      if (v17 < 0)
      {
        v14 = __OFSUB__(0, v17);
        v17 = -v17;
        if (v14)
          goto LABEL_31;
      }
      else if (!v17)
      {
        goto LABEL_30;
      }
      v18 = v16 / v17;
      v19 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_29;
      v20 = *(_QWORD *)(v25 + 16);
      if (v20 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_242AC3124();
        v8 = a3;
        v7 = a1;
        v10 = a5;
        v9 = a4;
      }
      *(_QWORD *)(v25 + 16) = v20 + 1;
      *(_QWORD *)(v25 + 8 * v20 + 32) = v19;
      if (a2 == ++v11)
        goto LABEL_21;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_242ABF794(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242AC3124();
    result = v8;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *v4;
      v4 += 3;
      v5 = v6;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_242AC3124();
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_242ABF850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v22;
  uint64_t v23;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_22;
  if (v5)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_242AC38E8();
    if (a2 < a1 || v5 < 0)
      goto LABEL_23;
    v8 = v22;
    v9 = a1 + 4;
    v11 = a4;
    v10 = a5;
    v12 = a3;
    while (v9 - a2 != 4)
    {
      if (a1 < 0)
        goto LABEL_17;
      v13 = v9 - 4;
      if ((unint64_t)(v9 - 4) >= *(_QWORD *)(*(_QWORD *)v12 + 16))
        goto LABEL_18;
      if (v13 >= *(_QWORD *)(*(_QWORD *)v11 + 16))
        goto LABEL_19;
      v14 = *(_QWORD *)(*(_QWORD *)v12 + 8 * v9);
      v15 = *(_QWORD *)(*(_QWORD *)v11 + 8 * v9);
      if (v15 < v14)
        goto LABEL_20;
      if (v13 >= *(_QWORD *)(*(_QWORD *)v10 + 16))
        goto LABEL_21;
      v16 = *(_QWORD *)(*(_QWORD *)v10 + 8 * v9);
      v23 = v8;
      v17 = *(_QWORD *)(v8 + 16);
      if (v17 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_242AC38E8();
        v12 = a3;
        v11 = a4;
        v10 = a5;
        v8 = v23;
      }
      *(_QWORD *)(v8 + 16) = v17 + 1;
      v18 = (_QWORD *)(v8 + 24 * v17);
      v18[4] = v14;
      v18[5] = v15;
      v18[6] = v16;
      if (++v9 - a2 == 4)
        return;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
}

void sub_242ABF9DC(uint64_t a1, uint64_t a2)
{
  sub_242ABF9F0(a1, a2);
}

void sub_242ABF9F0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v30 = MEMORY[0x24BEE4AF8];
  sub_242AC3904();
  v7 = v6;
  v29 = a1;
  if (v6)
  {
    v8 = (uint64_t *)(a1 + 32);
    v9 = (uint64_t *)(a2 + 32);
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_32_0();
    v10 = v4;
    v11 = v5;
    while (v10)
    {
      if (!v11)
        goto LABEL_26;
      v12 = *v8;
      v13 = *v9;
      if (*v9 < *v8)
        goto LABEL_27;
      v14 = *(_QWORD *)(v30 + 16);
      v15 = v14 + 1;
      if (v14 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        sub_242AC3904();
        v15 = v14 + 1;
      }
      *(_QWORD *)(v30 + 16) = v15;
      v16 = v30 + 16 * v14;
      --v11;
      *(_QWORD *)(v16 + 32) = v12;
      *(_QWORD *)(v16 + 40) = v13;
      OUTLINED_FUNCTION_73_5();
      if (v20)
        goto LABEL_15;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_32_0();
    v17 = a2;
    v18 = v4;
    v19 = v5;
LABEL_15:
    if (v18 <= v19)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v21 = v17 + 32;
    while (v7 < v18)
    {
      if (v19 == v7)
        goto LABEL_24;
      if (v7 >= v19)
        goto LABEL_29;
      v22 = *(_QWORD *)(v29 + 32 + 8 * v7);
      v23 = *(_QWORD *)(v21 + 8 * v7);
      if (v23 < v22)
        goto LABEL_30;
      v24 = *(_QWORD *)(v30 + 16);
      if (v24 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        v26 = v17;
        v27 = v19;
        v28 = v18;
        sub_242AC3904();
        v19 = v27;
        v18 = v28;
        v17 = v26;
      }
      ++v7;
      *(_QWORD *)(v30 + 16) = v24 + 1;
      v25 = v30 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v22;
      *(_QWORD *)(v25 + 40) = v23;
      if (v18 == v7)
        goto LABEL_24;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_242ABFC10(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v24 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  v7 = v6;
  v22 = a2;
  v23 = a1;
  if (v6)
  {
    v8 = (_QWORD *)(a1 + 32);
    v9 = (_QWORD *)(a2 + 32);
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_37_0();
    v10 = v5;
    while (v4)
    {
      if (!v10)
        goto LABEL_25;
      v11 = *v8 + *v9;
      if (__OFADD__(*v8, *v9))
        goto LABEL_26;
      v12 = *(_QWORD *)(v24 + 16);
      if (v12 >= *(_QWORD *)(v24 + 24) >> 1)
        sub_242AC3124();
      --v10;
      *(_QWORD *)(v24 + 16) = v12 + 1;
      *(_QWORD *)(v24 + 8 * v12 + 32) = v11;
      OUTLINED_FUNCTION_73_5();
      if (v15)
        goto LABEL_15;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_37_0();
    v13 = v4;
    v14 = v5;
LABEL_15:
    if (v13 <= v14)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v13)
    {
      if (v14 == v7)
        goto LABEL_23;
      if (v7 >= v14)
        goto LABEL_28;
      v16 = *(_QWORD *)(v23 + 32 + 8 * v7);
      v17 = *(_QWORD *)(v22 + 32 + 8 * v7);
      v18 = v16 + v17;
      if (__OFADD__(v16, v17))
        goto LABEL_29;
      v19 = *(_QWORD *)(v24 + 16);
      if (v19 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        v20 = v13;
        v21 = v14;
        sub_242AC3124();
        v14 = v21;
        v13 = v20;
      }
      ++v7;
      *(_QWORD *)(v24 + 16) = v19 + 1;
      *(_QWORD *)(v24 + 8 * v19 + 32) = v18;
      if (v13 == v7)
        goto LABEL_23;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_242ABFE14(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  v7 = v6;
  v24 = a2;
  v25 = a1;
  if (v6)
  {
    v8 = (_QWORD *)(a1 + 32);
    v9 = (_QWORD *)(a2 + 32);
    sub_242C480E0();
    sub_242C480E0();
    v10 = v7;
    v11 = v4;
    v12 = v5;
    v13 = v5;
    while (v4)
    {
      if (!v12)
        goto LABEL_24;
      v14 = *v8 - *v9;
      if (__OFSUB__(*v8, *v9))
        goto LABEL_25;
      v15 = *(_QWORD *)(v26 + 16);
      if (v15 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v21 = v11;
        v22 = v13;
        sub_242AC3124();
        v13 = v22;
        v11 = v21;
      }
      --v12;
      *(_QWORD *)(v26 + 16) = v15 + 1;
      *(_QWORD *)(v26 + 8 * v15 + 32) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v10)
        goto LABEL_14;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
    v11 = v4;
    v13 = v5;
LABEL_14:
    if (v11 <= v13)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v11)
    {
      if (v13 == v7)
        goto LABEL_22;
      if (v7 >= v13)
        goto LABEL_27;
      v16 = *(_QWORD *)(v25 + 32 + 8 * v7);
      v17 = *(_QWORD *)(v24 + 32 + 8 * v7);
      v18 = v16 - v17;
      if (__OFSUB__(v16, v17))
        goto LABEL_28;
      v19 = *(_QWORD *)(v26 + 16);
      if (v19 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v20 = v11;
        v23 = v13;
        sub_242AC3124();
        v13 = v23;
        v11 = v20;
      }
      ++v7;
      *(_QWORD *)(v26 + 16) = v19 + 1;
      *(_QWORD *)(v26 + 8 * v19 + 32) = v18;
      if (v11 == v7)
        goto LABEL_22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t Tensor.slice(lowerBounds:upperBounds:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  int64x2_t *v6;
  int64x2_t *v7;
  uint64_t result;

  OUTLINED_FUNCTION_75_4();
  if (v4 && (v5 = *v1, OUTLINED_FUNCTION_11_20(), v4))
  {
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_37_0();
    sub_242ABF9F0(v3, v2);
    v7 = v6;
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_35();
    sub_242AC00F4(v7, v5, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = OUTLINED_FUNCTION_2_30();
    __break(1u);
  }
  return result;
}

void sub_242AC00F4(int64x2_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t *v6;
  int64x2_t *v8;
  int64x2_t v9;
  unint64_t v10;
  int64x2_t *v11;
  int64x2_t v12;
  uint64_t *v13;

  v5 = a1[1].i64[0];
  v6 = (uint64_t *)MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v13 = (uint64_t *)MEMORY[0x24BEE4AF8];
    sub_242AC38E8();
    v6 = v13;
    v8 = a1 + 2;
    while (1)
    {
      v9 = *v8;
      if ((vmovn_s64(vcgtq_s64(*v8, vdupq_laneq_s64(*v8, 1))).u32[0] & 1) != 0)
        break;
      v10 = v13[2];
      if (v10 >= (unint64_t)v13[3] >> 1)
      {
        v12 = *v8;
        sub_242AC38E8();
        v9 = v12;
      }
      v13[2] = v10 + 1;
      v11 = (int64x2_t *)&v13[3 * v10];
      v11[2] = v9;
      v11[3].i64[0] = 1;
      ++v8;
      if (!--v5)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    sub_242AC039C(v6, a2, a3);
    swift_bridgeObjectRelease();
  }
}

uint64_t Tensor.slice<A>(at:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v7 = *v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257224018);
  v10 = (uint64_t *)sub_242A7DAD0((void (*)(char *, uint64_t))sub_242AC037C, 0, a1, v8, MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], v9);
  sub_242AC039C(v10, v7, a3);
  return swift_bridgeObjectRelease();
}

{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (**v56)(_QWORD, _QWORD);
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[6];
  _OWORD v61[3];
  uint64_t v62;
  __int16 v63;

  v5 = *v3;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v3 + 16) + 152) + 16))
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
LABEL_14:
    result = OUTLINED_FUNCTION_2_30();
    __break(1u);
    return result;
  }
  if ((sub_242C484AC() & 1) != 0)
  {
    v15 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242AC0D24, 0, a1, MEMORY[0x24BEE1768], MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], v14);
    LODWORD(v62) = 0;
    memset(v61, 0, sizeof(v61));
    if ((sub_242B64764(0, v15) & 1) != 0)
    {
      sub_242A62684((uint64_t)v61, (uint64_t)&v59, (uint64_t *)&unk_257228D70);
      sub_242B65F7C();
      result = sub_242AB8F10((uint64_t)v61, (uint64_t *)&unk_257228D70);
      *a3 = v58;
      return result;
    }
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_35_11();
    goto LABEL_14;
  }
  v57 = a3;
  v17 = OUTLINED_FUNCTION_8_16((void (*)(char *, uint64_t))sub_242AB5628, v8, v9, v10, v11, v12, v13, v14);
  v25 = OUTLINED_FUNCTION_8_16((void (*)(char *, uint64_t))sub_242AC0D3C, v18, v19, v20, v21, v22, v23, v24);
  v33 = OUTLINED_FUNCTION_8_16((void (*)(char *, uint64_t))sub_242AC0D48, v26, v27, v28, v29, v30, v31, v32);
  v34 = *(_QWORD *)(v17 + 16);
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_32_0();
  sub_242ABF5B8(0, v34, v25, v17, v33);
  v36 = v35;
  if ((sub_242C00B0C(v35, &unk_25137C5B0) & 1) != 0)
  {
    OUTLINED_FUNCTION_108();
    v36 = MEMORY[0x24BEE4AF8];
  }
  v37 = *(_QWORD *)(v5 + 16);
  OUTLINED_FUNCTION_53_5();
  v39 = v38;
  v41 = v40;
  v42 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v40 + 32);
  OUTLINED_FUNCTION_5();
  v42(v60, v39, v41);
  v59 = v36;
  OUTLINED_FUNCTION_53_5();
  (*(void (**)(_OWORD *__return_ptr))(v43 + 32))(v61);
  LOBYTE(v39) = v61[0];
  v44 = static ScalarType.floatingPointTypes.getter();
  LOBYTE(v39) = sub_242B64794(v39, (uint64_t)v44);
  OUTLINED_FUNCTION_108();
  if ((v39 & 1) != 0)
  {
    v45 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 152);
    OUTLINED_FUNCTION_53_5();
    v47 = v46;
    v49 = v48;
    v50 = (_QWORD *)swift_allocObject();
    v50[2] = v17;
    v50[3] = v25;
    v50[4] = v33;
    v50[5] = v45;
    v50[6] = v47;
    v50[7] = v49;
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_32_0();
    sub_242C480E0();
    v51 = sub_242BD0D40((uint64_t)sub_242AC3104);
    v53 = v52;
    swift_release();
  }
  else
  {
    v51 = 0;
    v53 = 0;
  }
  *(_QWORD *)&v61[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SliceOps.swift";
  *(_OWORD *)((char *)v61 + 8) = xmmword_242C4CA40;
  *(_OWORD *)((char *)&v61[1] + 8) = xmmword_242C51810;
  *((_QWORD *)&v61[2] + 1) = "init(id:operand:starts:ends:strides:resultDescriptor:creationSite:backward:)";
  v62 = 76;
  v63 = 2;
  type metadata accessor for SliceOperation();
  swift_allocObject();
  sub_242C33878(0, 0, 0, v37, v17, v25, v33, (uint64_t)&v59, (uint64_t)v61, v51, v53);
  v55 = v54;
  v56 = (uint64_t (**)(_QWORD, _QWORD))sub_242AC30C0();
  sub_242A62684(*(_QWORD *)(v5 + 16) + 168, (uint64_t)&v59, (uint64_t *)&unk_257228D70);
  return sub_242BC9830(v55, v56, 0, (uint64_t)&v59, v57);
}

uint64_t Tensor.slice(lowerBounds:sizes:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64x2_t *v9;
  int64x2_t *v10;
  uint64_t result;

  OUTLINED_FUNCTION_75_4();
  if (v4 && (v5 = *v1, OUTLINED_FUNCTION_11_20(), v4))
  {
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_37_0();
    sub_242ABFC10(v3, v2);
    v7 = v6;
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_35();
    v8 = OUTLINED_FUNCTION_32_0();
    sub_242ABF9F0(v8, v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_35();
    sub_242AC00F4(v10, v5, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = OUTLINED_FUNCTION_2_30();
    __break(1u);
  }
  return result;
}

_QWORD *sub_242AC037C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  if (v2 < *result)
  {
    __break(1u);
  }
  else
  {
    *a2 = *result;
    a2[1] = v2;
    a2[2] = 1;
  }
  return result;
}

uint64_t sub_242AC039C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)(_QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[6];
  _OWORD v59[3];
  uint64_t v60;
  __int16 v61;

  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(*(_QWORD *)(v4 + 152) + 16))
  {
LABEL_34:
    result = sub_242C48F5C();
    __break(1u);
    return result;
  }
  v6 = a1[2];
  v7 = MEMORY[0x24BEE4AF8];
  if (!v6)
  {
    v53 = a2;
    v15 = MEMORY[0x24BEE4AF8];
    goto LABEL_26;
  }
  v8 = a1 + 4;
  if (a1[4] != a1[5])
  {
    if (v6 != 1)
    {
      v16 = a1 + 8;
      v17 = 1;
      while (1)
      {
        v18 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        if (*(v16 - 1) == *v16)
          goto LABEL_4;
        ++v17;
        v16 += 3;
        if (v18 == v6)
          goto LABEL_17;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_17:
    v52 = *(_QWORD *)(a2 + 16);
    v53 = a2;
    v54 = a3;
    *(_QWORD *)&v59[0] = MEMORY[0x24BEE4AF8];
    sub_242AC3124();
    v15 = *(_QWORD *)&v59[0];
    v19 = *(_QWORD *)(*(_QWORD *)&v59[0] + 16);
    v20 = v6;
    do
    {
      v22 = *v8;
      v8 += 3;
      v21 = v22;
      *(_QWORD *)&v59[0] = v15;
      if (v19 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_242AC3124();
        v15 = *(_QWORD *)&v59[0];
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      *(_QWORD *)(v15 + 8 * v19++ + 32) = v21;
      --v20;
    }
    while (v20);
    *(_QWORD *)&v59[0] = v7;
    sub_242AC3124();
    v23 = *(_QWORD *)(v7 + 16);
    v24 = a1 + 5;
    a3 = v54;
    do
    {
      v26 = *v24;
      v24 += 3;
      v25 = v26;
      *(_QWORD *)&v59[0] = v7;
      if (v23 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_242AC3124();
        v7 = *(_QWORD *)&v59[0];
      }
      *(_QWORD *)(v7 + 16) = v23 + 1;
      *(_QWORD *)(v7 + 8 * v23++ + 32) = v25;
      --v6;
    }
    while (v6);
    v4 = v52;
LABEL_26:
    v27 = sub_242ABF794((uint64_t)a1);
    v28 = *(_QWORD *)(v15 + 16);
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    sub_242ABF5B8(0, v28, v7, v15, v27);
    v30 = v29;
    v55 = a3;
    v31 = v4;
    if ((sub_242C00B0C(v29, &unk_25137B860) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v30 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)&v59[0] = v53;
    Tensor.scalarType.getter();
    v33 = v32;
    v35 = v34;
    v36 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 32);
    swift_retain();
    v36(v58, v33, v35);
    v57 = v30;
    *(_QWORD *)&v59[0] = v53;
    Tensor.scalarType.getter();
    (*(void (**)(_OWORD *__return_ptr))(v37 + 32))(v59);
    LOBYTE(v33) = v59[0];
    v38 = static ScalarType.floatingPointTypes.getter();
    LOBYTE(v33) = sub_242B64794(v33, (uint64_t)v38);
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
    {
      v39 = *(_QWORD *)(v31 + 152);
      *(_QWORD *)&v59[0] = v53;
      Tensor.scalarType.getter();
      v41 = v40;
      v43 = v42;
      v44 = (_QWORD *)swift_allocObject();
      v44[2] = v15;
      v44[3] = v7;
      v44[4] = v27;
      v44[5] = v39;
      v44[6] = v41;
      v44[7] = v43;
      v45 = v55;
      sub_242C480E0();
      sub_242C480E0();
      sub_242C480E0();
      sub_242C480E0();
      v46 = sub_242BD0D40((uint64_t)sub_242AC3104);
      v48 = v47;
      swift_release();
    }
    else
    {
      v46 = 0;
      v48 = 0;
      v45 = a3;
    }
    *(_QWORD *)&v59[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SliceOps.swift";
    *(_OWORD *)((char *)v59 + 8) = xmmword_242C4CA40;
    *(_OWORD *)((char *)&v59[1] + 8) = xmmword_242C51810;
    *((_QWORD *)&v59[2] + 1) = "init(id:operand:starts:ends:strides:resultDescriptor:creationSite:backward:)";
    v60 = 76;
    v61 = 2;
    type metadata accessor for SliceOperation();
    swift_allocObject();
    sub_242C33878(0, 0, 0, v31, v15, v7, v27, (uint64_t)&v57, (uint64_t)v59, v46, v48);
    v50 = v49;
    v51 = (uint64_t (**)(_QWORD, _QWORD))sub_242AC30C0();
    sub_242A62684(v31 + 168, (uint64_t)&v57, (uint64_t *)&unk_257228D70);
    return sub_242BC9830(v50, v51, 0, (uint64_t)&v57, v45);
  }
LABEL_4:
  *(_QWORD *)&v59[0] = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  v9 = *(_QWORD *)&v59[0];
  v10 = a1 + 5;
  do
  {
    v11 = *(v10 - 1);
    v12 = *v10 - v11;
    if (__OFSUB__(*v10, v11))
    {
      __break(1u);
      goto LABEL_33;
    }
    *(_QWORD *)&v59[0] = v9;
    v13 = *(_QWORD *)(v9 + 16);
    if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      sub_242AC3124();
      v9 = *(_QWORD *)&v59[0];
    }
    v10 += 3;
    *(_QWORD *)(v9 + 16) = v13 + 1;
    *(_QWORD *)(v9 + 8 * v13 + 32) = v12;
    --v6;
  }
  while (v6);
  LODWORD(v60) = 0;
  memset(v59, 0, sizeof(v59));
  if ((sub_242B64764(0, v9) & 1) == 0)
    goto LABEL_34;
  sub_242A62684((uint64_t)v59, (uint64_t)&v57, (uint64_t *)&unk_257228D70);
  sub_242B65F7C();
  result = sub_242AB8F10((uint64_t)v59, (uint64_t *)&unk_257228D70);
  *a3 = v56;
  return result;
}

BOOL sub_242AC0D14(_QWORD *a1)
{
  return *a1 == a1[1];
}

_QWORD *sub_242AC0D24@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  if (__OFSUB__(v2, *result))
    __break(1u);
  else
    *a2 = v2 - *result;
  return result;
}

uint64_t sub_242AC0D3C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  return result;
}

uint64_t sub_242AC0D48@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 16);
  return result;
}

uint64_t sub_242AC0D54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[17];
  _BYTE v29[56];
  _BYTE v30[56];
  const char *v31;
  __int128 v32;
  __int128 v33;
  const char *v34;
  uint64_t v35;
  __int16 v36;

  if (*(_QWORD *)(a2 + 16))
  {
    if (*(_QWORD *)(result + 16))
    {
      v11 = *(_QWORD *)(*(_QWORD *)(result + 32) + 16);
      v25 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a8 + 32);
      v26 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_242C480E0();
      sub_242C480E0();
      sub_242C480E0();
      sub_242C480E0();
      v25(v28, a7, a8);
      v27 = a6;
      v32 = xmmword_242C4CA40;
      v33 = xmmword_242C51820;
      v31 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SliceOps.swift";
      v34 = "init(id:gradientOperand:operand:starts:ends:strides:resultDescriptor:creationSite:)";
      v35 = 83;
      v36 = 2;
      type metadata accessor for SliceGradientOperation();
      swift_allocObject();
      sub_242C33974(0, 0, 0, v11, v26, a3, a4, a5);
      v16 = v15;
      sub_242A62684(v11 + 168, (uint64_t)v30, (uint64_t *)&unk_257228D70);
      sub_242A62684((uint64_t)v30, (uint64_t)v29, (uint64_t *)&unk_257228D70);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_242B93328();
      sub_242B933C0((uint64_t)&v27);
      swift_release();
      v17 = v28[9];
      swift_retain();
      sub_242A5DC30((uint64_t)&v27);
      sub_242B93328();
      sub_242B933C0((uint64_t)&v27);
      swift_release();
      v18 = v28[8];
      swift_retain();
      sub_242A5DC30((uint64_t)&v27);
      type metadata accessor for TensorRepresentation();
      v19 = swift_allocObject();
      LOBYTE(v27) = 1;
      v20 = sub_242B4C248(v16, 0, v29, 0x100000000, v17, v18, v19);
      type metadata accessor for TensorHandle();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v20;
      swift_retain();
      sub_242BC995C();
      swift_release();
      sub_242AB8F10((uint64_t)v30, (uint64_t *)&unk_257228D70);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v23 = sub_242AC4964();
      *(_QWORD *)(v22 + 32) = v21;
      *(_QWORD *)(v22 + 40) = v23;
      *(_QWORD *)(v22 + 48) = v24;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v22;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

__n128 TensorRange.tensorRange.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[1].n128_u64[0];
  v3 = v1[1].n128_u8[8];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t static TensorRange.== infix(_:_:)(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_242AC10AC + 4 * byte_242C51830[*(unsigned __int8 *)(a1 + 24)]))();
}

BOOL sub_242AC10AC@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  return !v2 && v1 == a1;
}

uint64_t Int.tensorRange.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_242AC1180@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return Int.tensorRange.getter(*v1, a1);
}

uint64_t Range<>.tensorRange.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 1;
  *(_BYTE *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_242AC119C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return Range<>.tensorRange.getter(*v1, v1[1], a1);
}

void ClosedRange<>.tensorRange.getter(_QWORD *a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = 1;
  OUTLINED_FUNCTION_65_5((uint64_t)a1);
}

void sub_242AC11B8(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  ClosedRange<>.tensorRange.getter(a1, *v1, v1[1]);
}

void PartialRangeFrom<>.tensorRange.getter(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_242C501F0;
  OUTLINED_FUNCTION_65_5(a1);
}

void sub_242AC11D8(uint64_t a1@<X8>)
{
  uint64_t *v1;

  PartialRangeFrom<>.tensorRange.getter(a1, *v1);
}

void PartialRangeUpTo<>.tensorRange.getter(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_242C501F0;
  OUTLINED_FUNCTION_65_5(a1);
}

void sub_242AC11F8(uint64_t a1@<X8>)
{
  uint64_t *v1;

  PartialRangeUpTo<>.tensorRange.getter(a1, *v1);
}

void PartialRangeThrough<>.tensorRange.getter(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_242C501F0;
  OUTLINED_FUNCTION_65_5(a1);
}

void sub_242AC1218(uint64_t a1@<X8>)
{
  uint64_t *v1;

  PartialRangeThrough<>.tensorRange.getter(a1, *v1);
}

uint64_t Tensor.IndexPath.start.getter()
{
  return sub_242C480E0();
}

uint64_t Tensor.IndexPath.end.getter()
{
  return sub_242C480E0();
}

uint64_t Tensor.IndexPath.strides.getter()
{
  return sub_242C480E0();
}

uint64_t Tensor.IndexPath.beginMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t Tensor.IndexPath.endMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t Tensor.IndexPath.ellipsisMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Tensor.IndexPath.newAxisMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t Tensor.IndexPath.squeezeAxisMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t Tensor.IndexPath.init(begin:end:strides:beginMask:endMask:ellipsisMask:newAxisMask:squeezeAxisMask:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

void Tensor.subscript.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  OUTLINED_FUNCTION_80_4();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4;
    v46 = v2;
    v48 = v1;
    v56 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_50_9();
    v7 = v6 + 32;
    do
    {
      sub_242A62684(v7, (uint64_t)&v57, &qword_257224028);
      sub_242A62684((uint64_t)&v57, (uint64_t)v54, &qword_257224028);
      if (v55)
      {
        __swift_project_boxed_opaque_existential_1(v54, v55);
        v8 = OUTLINED_FUNCTION_27_12();
        OUTLINED_FUNCTION_46_8(v8, v9, v10, v11, v12, v13, v14, v15, v40);
      }
      else
      {
        sub_242AB8F10((uint64_t)v54, &qword_257224028);
        OUTLINED_FUNCTION_76_3();
      }
      sub_242AB8F10((uint64_t)&v57, &qword_257224028);
      v16 = v56;
      if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_36();
        v16 = v56;
      }
      v17 = *(_QWORD *)(v16 + 16);
      if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
      {
        OUTLINED_FUNCTION_0_36();
        v16 = v56;
      }
      *(_QWORD *)(v16 + 16) = v17 + 1;
      v18 = v16 + 32 * v17;
      *(_QWORD *)(v18 + 32) = v2;
      *(_QWORD *)(v18 + 40) = v3;
      *(_QWORD *)(v18 + 48) = v1;
      *(_BYTE *)(v18 + 56) = v0;
      v7 += 40;
      --v5;
    }
    while (v5);
  }
  v57 = &unk_25137C5D8;
  sub_242B6527C();
  if (v57[2])
  {
    OUTLINED_FUNCTION_44_0();
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      OUTLINED_FUNCTION_59_6();
      if (v20)
      {
        OUTLINED_FUNCTION_10_19();
        if (!v21)
        {
          v22 = OUTLINED_FUNCTION_42();
          v57 = v19;
          if ((v22 & 1) == 0)
          {
            OUTLINED_FUNCTION_0_36();
            v19 = v57;
          }
          OUTLINED_FUNCTION_20_18();
          if (v23)
          {
            OUTLINED_FUNCTION_0_36();
            v19 = v57;
          }
          OUTLINED_FUNCTION_4_25();
        }
      }
      OUTLINED_FUNCTION_57_8();
    }
    while (!v20);
    OUTLINED_FUNCTION_3_6();
  }
  v24 = OUTLINED_FUNCTION_13_19();
  if (v0 > 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_9_23();
  }
  else
  {
    OUTLINED_FUNCTION_70_5(v24, v25, v26, v27, v28, v29, v30, v31, v40, v42, v44, v46, v48, v50, v52);
    OUTLINED_FUNCTION_11_20();
    if (v20)
    {
      OUTLINED_FUNCTION_11_20();
      if (v20)
      {
        v54[0] = v1;
        v32 = OUTLINED_FUNCTION_5();
        OUTLINED_FUNCTION_62_6(v32, v33, v34, v35, v36, v37, v38, v39, v41, v43, v45, v47, v49, v51, v53);
        sub_242AC393C((uint64_t)&v57);
        OUTLINED_FUNCTION_28_5();
        OUTLINED_FUNCTION_26_15();
        return;
      }
    }
    OUTLINED_FUNCTION_1_29();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_2_30();
  __break(1u);
}

{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_80_4();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4;
    v48 = v2;
    v50 = v1;
    v57 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_50_9();
    v7 = v6 + 32;
    do
    {
      sub_242A62684(v7, (uint64_t)&v58, &qword_257224028);
      sub_242A62684((uint64_t)&v58, (uint64_t)v54, &qword_257224028);
      v8 = v55;
      if (v55)
      {
        v9 = v56;
        __swift_project_boxed_opaque_existential_1(v54, v55);
        v10 = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 8))(&v52, v8, v9);
        OUTLINED_FUNCTION_46_8((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v42);
      }
      else
      {
        sub_242AB8F10((uint64_t)v54, &qword_257224028);
        OUTLINED_FUNCTION_76_3();
      }
      sub_242AB8F10((uint64_t)&v58, &qword_257224028);
      v18 = v57;
      if ((OUTLINED_FUNCTION_28_16() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_36();
        v18 = v57;
      }
      v19 = *(_QWORD *)(v18 + 16);
      if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        OUTLINED_FUNCTION_0_36();
        v18 = v57;
      }
      *(_QWORD *)(v18 + 16) = v19 + 1;
      v20 = v18 + 32 * v19;
      *(_QWORD *)(v20 + 32) = v2;
      *(_QWORD *)(v20 + 40) = v3;
      *(_QWORD *)(v20 + 48) = v1;
      *(_BYTE *)(v20 + 56) = v0;
      v7 += 40;
      --v5;
    }
    while (v5);
  }
  else if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_44_0();
  v21 = MEMORY[0x24BEE4AF8];
  do
  {
    OUTLINED_FUNCTION_59_6();
    if (v22)
    {
      OUTLINED_FUNCTION_10_19();
      if (!v23)
      {
        v24 = OUTLINED_FUNCTION_42();
        v58 = v21;
        if ((v24 & 1) == 0)
        {
          OUTLINED_FUNCTION_0_36();
          v21 = v58;
        }
        OUTLINED_FUNCTION_20_18();
        if (v25)
        {
          OUTLINED_FUNCTION_0_36();
          v21 = v58;
        }
        OUTLINED_FUNCTION_4_25();
      }
    }
    OUTLINED_FUNCTION_57_8();
  }
  while (!v22);
  OUTLINED_FUNCTION_3_6();
LABEL_25:
  v26 = OUTLINED_FUNCTION_13_19();
  if (v0 > 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_9_23();
  }
  else
  {
    OUTLINED_FUNCTION_70_5(v26, v27, v28, v29, v30, v31, v32, v33, v42, v44, v46, v48, v50, v52, v53);
    OUTLINED_FUNCTION_11_20();
    if (v22)
    {
      OUTLINED_FUNCTION_11_20();
      if (v22)
      {
        v54[0] = v1;
        v34 = OUTLINED_FUNCTION_5();
        OUTLINED_FUNCTION_62_6(v34, v35, v36, v37, v38, v39, v40, v41, v43, v45, v47, v49, v51, v52, v53);
        sub_242AC393C((uint64_t)&v58);
        OUTLINED_FUNCTION_28_5();
        OUTLINED_FUNCTION_26_15();
        return;
      }
    }
    OUTLINED_FUNCTION_1_29();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_2_30();
  __break(1u);
}

uint64_t sub_242AC1510@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
LABEL_119:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_35_11();
LABEL_121:
    OUTLINED_FUNCTION_2_30();
    __break(1u);
    JUMPOUT(0x242AC1A5CLL);
  }
  v4 = (_BYTE *)(a1 + 56);
  v5 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a1 + 16);
  do
  {
    if (*v4 == 6 && !(*((_QWORD *)v4 - 2) | *((_QWORD *)v4 - 1) | *((_QWORD *)v4 - 3)))
    {
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
        OUTLINED_FUNCTION_0_36();
      v7 = *(_QWORD *)(v5 + 16);
      if (v7 >= *(_QWORD *)(v5 + 24) >> 1)
        OUTLINED_FUNCTION_0_36();
      *(_QWORD *)(v5 + 16) = v7 + 1;
      v8 = v5 + 32 * v7;
      *(_QWORD *)(v8 + 40) = 0;
      *(_QWORD *)(v8 + 48) = 0;
      *(_QWORD *)(v8 + 32) = 0;
      *(_BYTE *)(v8 + 56) = 6;
    }
    v4 += 32;
    --v6;
  }
  while (v6);
  OUTLINED_FUNCTION_13_19();
  if ((unint64_t)v4 >= 2)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_121;
  }
  v9 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_71_5();
  v11 = v10;
  OUTLINED_FUNCTION_71_5();
  v13 = v12;
  sub_242BC0874(1, v9);
  v15 = v14;
  v58 = 0;
  v55 = 0;
  v56 = 0;
  v57 = 0;
  v16 = 0;
  v17 = (_BYTE *)(a1 + 56);
  while (2)
  {
    v19 = *((_QWORD *)v17 - 3);
    v18 = *((_QWORD *)v17 - 2);
    v20 = *((_QWORD *)v17 - 1);
    switch(*v17)
    {
      case 0:
        if ((OUTLINED_FUNCTION_42() & 1) == 0)
        {
          OUTLINED_FUNCTION_43_11();
          v11 = v39;
        }
        OUTLINED_FUNCTION_58_4();
        if (v21)
          goto LABEL_105;
        OUTLINED_FUNCTION_78_2();
        if (__OFADD__(v19, 1))
          goto LABEL_109;
        if ((OUTLINED_FUNCTION_28_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_49_8();
          v13 = v48;
        }
        OUTLINED_FUNCTION_61_6();
        if (v21)
          goto LABEL_113;
        *(_QWORD *)(v13 + 8 * v16 + 32) = v19 + 1;
        v22 = 1 << v16;
        if (v16 >= 0x40)
          v22 = 0;
        v58 |= v22;
        goto LABEL_99;
      case 1:
        if ((OUTLINED_FUNCTION_42() & 1) == 0)
        {
          OUTLINED_FUNCTION_43_11();
          v11 = v43;
        }
        OUTLINED_FUNCTION_58_4();
        if (v21)
          goto LABEL_107;
        OUTLINED_FUNCTION_78_2();
        if ((OUTLINED_FUNCTION_28_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_49_8();
          v13 = v46;
        }
        OUTLINED_FUNCTION_61_6();
        if (v21)
          goto LABEL_111;
        *(_QWORD *)(v13 + 8 * v16 + 32) = v18;
        if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_52_4();
          v15 = v49;
        }
        OUTLINED_FUNCTION_60_5();
        if (!v21)
          goto LABEL_98;
        goto LABEL_115;
      case 2:
        if ((OUTLINED_FUNCTION_42() & 1) == 0)
        {
          OUTLINED_FUNCTION_43_11();
          v11 = v40;
        }
        OUTLINED_FUNCTION_58_4();
        if (v21)
          goto LABEL_102;
        OUTLINED_FUNCTION_78_2();
        v23 = __OFADD__(v18, 1);
        v24 = v18 + 1;
        if (v24)
        {
          if (v23)
            goto LABEL_117;
          if ((OUTLINED_FUNCTION_28_16() & 1) == 0)
          {
            OUTLINED_FUNCTION_49_8();
            v13 = v52;
          }
          OUTLINED_FUNCTION_61_6();
          if (v21)
            goto LABEL_118;
          *(_QWORD *)(v13 + 8 * v16 + 32) = v24;
        }
        else
        {
          OUTLINED_FUNCTION_48_10();
        }
        if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_52_4();
          v15 = v51;
        }
        OUTLINED_FUNCTION_60_5();
        if (v21)
          goto LABEL_116;
LABEL_98:
        *(_QWORD *)(v15 + 8 * v16 + 32) = v20;
        goto LABEL_99;
      case 3:
        if ((OUTLINED_FUNCTION_42() & 1) == 0)
        {
          OUTLINED_FUNCTION_43_11();
          v11 = v41;
        }
        OUTLINED_FUNCTION_58_4();
        if (v21)
          goto LABEL_103;
        OUTLINED_FUNCTION_78_2();
        if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_52_4();
          v15 = v45;
        }
        OUTLINED_FUNCTION_60_5();
        if (v21)
          goto LABEL_110;
        *(_QWORD *)(v15 + 8 * v16 + 32) = v18;
LABEL_52:
        OUTLINED_FUNCTION_48_10();
        goto LABEL_99;
      case 4:
        if ((OUTLINED_FUNCTION_28_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_49_8();
          v13 = v38;
        }
        OUTLINED_FUNCTION_61_6();
        if (v21)
        {
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
          goto LABEL_119;
        }
        *(_QWORD *)(v13 + 8 * v16 + 32) = v19;
        if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_52_4();
          v15 = v44;
        }
        OUTLINED_FUNCTION_60_5();
        if (v21)
          goto LABEL_108;
LABEL_71:
        *(_QWORD *)(v15 + 8 * v16 + 32) = v18;
        v25 = 1 << v16;
        if (v16 >= 0x40)
          v25 = 0;
        v57 |= v25;
LABEL_99:
        ++v16;
        v17 += 32;
        if (v2 != v16)
          continue;
        result = swift_bridgeObjectRelease();
        *a2 = v11;
        a2[1] = v13;
        a2[2] = v15;
        a2[3] = v57;
        a2[4] = 0;
        a2[5] = v55;
        a2[6] = v56;
        a2[7] = v58;
        return result;
      case 5:
        if (__OFADD__(v19, 1))
          goto LABEL_104;
        if ((OUTLINED_FUNCTION_28_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_49_8();
          v13 = v47;
        }
        OUTLINED_FUNCTION_61_6();
        if (v21)
          goto LABEL_112;
        *(_QWORD *)(v13 + 8 * v16 + 32) = v19 + 1;
        if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_52_4();
          v15 = v50;
        }
        OUTLINED_FUNCTION_60_5();
        if (!v21)
          goto LABEL_71;
        goto LABEL_114;
      case 6:
        v26 = v20 | v18 | v19;
        v27 = 1 << v16;
        if (v16 >= 0x40)
          v27 = 0;
        v29 = v55;
        v28 = v56;
        v30 = v27 | v55;
        v31 = 1 << v16;
        if (v16 >= 0x40)
          v31 = 0;
        v32 = v31 | v56;
        v33 = 1 << v16;
        if (v16 >= 0x40)
          v33 = 0;
        v34 = v58;
        v35 = v33 | v58;
        v36 = v19 == 1 && (v20 | v18) == 0;
        if (v36)
          v37 = v58;
        else
          v37 = v35;
        if (!v36)
          v32 = v56;
        if (v26)
          v34 = v37;
        v58 = v34;
        if (v26)
          v28 = v32;
        else
          v29 = v30;
        v55 = v29;
        v56 = v28;
        goto LABEL_99;
      default:
        if ((OUTLINED_FUNCTION_42() & 1) == 0)
        {
          OUTLINED_FUNCTION_43_11();
          v11 = v42;
        }
        OUTLINED_FUNCTION_58_4();
        if (v21)
          goto LABEL_106;
        *(_QWORD *)(v11 + 8 * v16 + 32) = 0;
        goto LABEL_52;
    }
  }
}

uint64_t Tensor.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  OUTLINED_FUNCTION_80_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221128);
  v7 = OUTLINED_FUNCTION_69_4();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7F0;
  v9 = OUTLINED_FUNCTION_67_5(v7, v8, &qword_257224028);
  if (v71)
  {
    v10 = __swift_project_boxed_opaque_existential_1(&v70, v71);
    v18 = OUTLINED_FUNCTION_31_14((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v55, v57);
    OUTLINED_FUNCTION_5_27((uint64_t)v18, v19, v20, v21, v22, v23, v24, v25, v56, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67,
      v68,
      v69);
  }
  else
  {
    v4 = v7 + 32;
    OUTLINED_FUNCTION_32_12(v9, &qword_257224028);
    OUTLINED_FUNCTION_42_10();
  }
  *(_QWORD *)(v7 + 64) = 0;
  *(_QWORD *)(v7 + 72) = 0;
  *(_QWORD *)(v7 + 80) = 0;
  *(_BYTE *)(v7 + 88) = 6;
  if (*(_QWORD *)(a4 + 16))
  {
    OUTLINED_FUNCTION_22_12();
    v26 = a4 + 32;
    do
    {
      v27 = OUTLINED_FUNCTION_36_13(v26, (uint64_t)&v70);
      OUTLINED_FUNCTION_25_12(v27, v28, v29, v30, v31, v32, v33, v34, v55, v57);
      if (v69)
      {
        v35 = __swift_project_boxed_opaque_existential_1(&v67, v69);
        v41 = OUTLINED_FUNCTION_17_16((uint64_t)v35, v36, v37, v38, v39, v40);
        OUTLINED_FUNCTION_18_17((uint64_t)v41, v42, v43, v44, v45, v46, v47, v48, v55, v57);
      }
      else
      {
        OUTLINED_FUNCTION_33_9((uint64_t)&v67);
        OUTLINED_FUNCTION_37_12();
      }
      OUTLINED_FUNCTION_33_9((uint64_t)&v70);
      if ((OUTLINED_FUNCTION_51_9() & 1) == 0)
        OUTLINED_FUNCTION_0_36();
      OUTLINED_FUNCTION_63_6();
      if (v49)
        OUTLINED_FUNCTION_0_36();
      OUTLINED_FUNCTION_40_9();
    }
    while (!v50);
    v5 = v62;
  }
  OUTLINED_FUNCTION_30_12();
  if (*(_QWORD *)(v70 + 16))
  {
    OUTLINED_FUNCTION_44_0();
    v51 = MEMORY[0x24BEE4AF8];
    do
    {
      OUTLINED_FUNCTION_59_6();
      if (v50)
      {
        OUTLINED_FUNCTION_10_19();
        if (!v52)
        {
          v53 = OUTLINED_FUNCTION_42();
          v70 = v51;
          if ((v53 & 1) == 0)
          {
            OUTLINED_FUNCTION_0_36();
            v51 = v70;
          }
          OUTLINED_FUNCTION_20_18();
          if (v49)
          {
            OUTLINED_FUNCTION_0_36();
            v51 = v70;
          }
          OUTLINED_FUNCTION_4_25();
        }
      }
      OUTLINED_FUNCTION_57_8();
    }
    while (!v50);
    OUTLINED_FUNCTION_3_6();
  }
  OUTLINED_FUNCTION_13_19();
  if (v4 > 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_9_23();
  }
  else
  {
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_11_20();
    if (v50)
    {
      OUTLINED_FUNCTION_11_20();
      if (v50)
      {
        *(_QWORD *)&v67 = v5;
        OUTLINED_FUNCTION_5();
        OUTLINED_FUNCTION_56_4();
        OUTLINED_FUNCTION_66_5();
        return OUTLINED_FUNCTION_28_5();
      }
    }
    OUTLINED_FUNCTION_1_29();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_2_30();
  __break(1u);
  return result;
}

uint64_t Tensor.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  OUTLINED_FUNCTION_80_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221128);
  v8 = OUTLINED_FUNCTION_69_4();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B810;
  v10 = OUTLINED_FUNCTION_68_5(v8, v9, &qword_257224028);
  if (v83)
  {
    __swift_project_boxed_opaque_existential_1(&v82, v83);
    v11 = OUTLINED_FUNCTION_27_12();
    v19 = OUTLINED_FUNCTION_5_27(v11, v12, v13, v14, v15, v16, v17, v18, v67, v69, v71, v72, v73, v74, v75, v76, v77, v78, v79,
            v80,
            v81);
  }
  else
  {
    v5 = v8 + 32;
    OUTLINED_FUNCTION_32_12(v10, &qword_257224028);
    OUTLINED_FUNCTION_42_10();
  }
  v21 = OUTLINED_FUNCTION_67_5(v19, v20, &qword_257224028);
  if (v83)
  {
    v22 = __swift_project_boxed_opaque_existential_1(&v82, v83);
    v30 = OUTLINED_FUNCTION_31_14((uint64_t)v22, v23, v24, v25, v26, v27, v28, v29, v67, v69);
    OUTLINED_FUNCTION_19_15((uint64_t)v30, v31, v32, v33, v34, v35, v36, v37, v68, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79,
      v80,
      v81);
  }
  else
  {
    v5 = v8 + 64;
    OUTLINED_FUNCTION_32_12(v21, &qword_257224028);
    OUTLINED_FUNCTION_81_4();
  }
  *(_QWORD *)(v8 + 96) = 0;
  *(_QWORD *)(v8 + 104) = 0;
  *(_QWORD *)(v8 + 112) = 0;
  *(_BYTE *)(v8 + 120) = 6;
  if (*(_QWORD *)(a5 + 16))
  {
    OUTLINED_FUNCTION_22_12();
    v38 = a5 + 32;
    do
    {
      v39 = OUTLINED_FUNCTION_36_13(v38, (uint64_t)&v82);
      OUTLINED_FUNCTION_25_12(v39, v40, v41, v42, v43, v44, v45, v46, v67, v69);
      if (v81)
      {
        v47 = __swift_project_boxed_opaque_existential_1(&v79, v81);
        v53 = OUTLINED_FUNCTION_17_16((uint64_t)v47, v48, v49, v50, v51, v52);
        OUTLINED_FUNCTION_18_17((uint64_t)v53, v54, v55, v56, v57, v58, v59, v60, v67, v69);
      }
      else
      {
        OUTLINED_FUNCTION_33_9((uint64_t)&v79);
        OUTLINED_FUNCTION_37_12();
      }
      OUTLINED_FUNCTION_33_9((uint64_t)&v82);
      if ((OUTLINED_FUNCTION_51_9() & 1) == 0)
        OUTLINED_FUNCTION_0_36();
      OUTLINED_FUNCTION_63_6();
      if (v61)
        OUTLINED_FUNCTION_0_36();
      OUTLINED_FUNCTION_40_9();
    }
    while (!v62);
    v6 = v74;
  }
  OUTLINED_FUNCTION_30_12();
  if (*(_QWORD *)(v82 + 16))
  {
    OUTLINED_FUNCTION_44_0();
    v63 = MEMORY[0x24BEE4AF8];
    do
    {
      OUTLINED_FUNCTION_59_6();
      if (v62)
      {
        OUTLINED_FUNCTION_10_19();
        if (!v64)
        {
          v65 = OUTLINED_FUNCTION_42();
          v82 = v63;
          if ((v65 & 1) == 0)
          {
            OUTLINED_FUNCTION_0_36();
            v63 = v82;
          }
          OUTLINED_FUNCTION_20_18();
          if (v61)
          {
            OUTLINED_FUNCTION_0_36();
            v63 = v82;
          }
          OUTLINED_FUNCTION_4_25();
        }
      }
      OUTLINED_FUNCTION_57_8();
    }
    while (!v62);
    OUTLINED_FUNCTION_3_6();
  }
  OUTLINED_FUNCTION_13_19();
  if (v5 > 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_9_23();
  }
  else
  {
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_11_20();
    if (v62)
    {
      OUTLINED_FUNCTION_11_20();
      if (v62)
      {
        *(_QWORD *)&v79 = v6;
        OUTLINED_FUNCTION_5();
        OUTLINED_FUNCTION_56_4();
        OUTLINED_FUNCTION_66_5();
        return OUTLINED_FUNCTION_28_5();
      }
    }
    OUTLINED_FUNCTION_1_29();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_2_30();
  __break(1u);
  return result;
}

uint64_t Tensor.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, unint64_t *a4@<X8>)
{
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221128);
  v12 = OUTLINED_FUNCTION_69_4();
  *(_OWORD *)(v12 + 16) = xmmword_242C4DE40;
  v13 = sub_242A62684(a1, (uint64_t)&v86, &qword_257224028);
  v14 = v87;
  if (v87)
  {
    v6 = v88;
    __swift_project_boxed_opaque_existential_1(&v86, v87);
    v15 = (*(_QWORD *(**)(__int128 *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v81, v14, v6);
    v23 = OUTLINED_FUNCTION_5_27((uint64_t)v15, v16, v17, v18, v19, v20, v21, v22, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
            v82,
            v83);
  }
  else
  {
    v4 = v12 + 32;
    OUTLINED_FUNCTION_32_12(v13, &qword_257224028);
    OUTLINED_FUNCTION_42_10();
  }
  v25 = OUTLINED_FUNCTION_68_5(v23, v24, &qword_257224028);
  if (v87)
  {
    __swift_project_boxed_opaque_existential_1(&v86, v87);
    v26 = OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_19_15(v26, v27, v28, v29, v30, v31, v32, v33, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
      v82,
      v83);
  }
  else
  {
    v4 = v12 + 64;
    OUTLINED_FUNCTION_32_12(v25, &qword_257224028);
    OUTLINED_FUNCTION_81_4();
  }
  v34 = sub_242A62684(a2, (uint64_t)&v86, &qword_257224028);
  v35 = v87;
  if (v87)
  {
    v36 = v88;
    __swift_project_boxed_opaque_existential_1(&v86, v87);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v36 + 8))(&v81, v35, v36);
    v37 = v82;
    v38 = v83;
    *(_OWORD *)(v12 + 96) = v81;
    *(_QWORD *)(v12 + 112) = v37;
    *(_BYTE *)(v12 + 120) = v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
  }
  else
  {
    v4 = v12 + 96;
    OUTLINED_FUNCTION_32_12(v34, &qword_257224028);
    *(_QWORD *)(v12 + 96) = 0;
    *(_QWORD *)(v12 + 104) = 0;
    *(_QWORD *)(v12 + 112) = 0;
    *(_BYTE *)(v12 + 120) = -1;
  }
  *(_QWORD *)(v12 + 128) = 0;
  *(_QWORD *)(v12 + 136) = 0;
  *(_QWORD *)(v12 + 144) = 0;
  *(_BYTE *)(v12 + 152) = 6;
  v39 = *(_QWORD *)(a3 + 16);
  if (v39)
  {
    v85 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_50_9();
    v40 = a3 + 32;
    do
    {
      v41 = OUTLINED_FUNCTION_36_13(v40, (uint64_t)&v86);
      OUTLINED_FUNCTION_25_12(v41, v42, v43, v44, v45, v46, v47, v48, v71, v72);
      v49 = v83;
      if (v83)
      {
        v6 = v84;
        v50 = __swift_project_boxed_opaque_existential_1(&v81, v83);
        v56 = OUTLINED_FUNCTION_17_16((uint64_t)v50, v51, v52, v53, v54, v55);
        OUTLINED_FUNCTION_18_17((uint64_t)v56, v57, v58, v59, v60, v61, v62, v63, v71, v72);
      }
      else
      {
        OUTLINED_FUNCTION_33_9((uint64_t)&v81);
        OUTLINED_FUNCTION_37_12();
      }
      OUTLINED_FUNCTION_33_9((uint64_t)&v86);
      if ((OUTLINED_FUNCTION_51_9() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_36();
        v49 = v85;
      }
      OUTLINED_FUNCTION_63_6();
      if (v64)
      {
        OUTLINED_FUNCTION_0_36();
        v49 = v85;
      }
      *(_QWORD *)(v49 + 16) = v6;
      v65 = v49 + 32 * (_QWORD)&qword_257224028;
      *(_QWORD *)(v65 + 32) = a4;
      *(_QWORD *)(v65 + 40) = v11;
      *(_QWORD *)(v65 + 48) = v4;
      *(_BYTE *)(v65 + 56) = v12;
      v40 += 40;
      --v39;
    }
    while (v39);
  }
  OUTLINED_FUNCTION_30_12();
  if (*(_QWORD *)(v86 + 16))
  {
    OUTLINED_FUNCTION_44_0();
    v66 = MEMORY[0x24BEE4AF8];
    do
    {
      OUTLINED_FUNCTION_59_6();
      if (v67)
      {
        OUTLINED_FUNCTION_10_19();
        if (!v68)
        {
          v69 = OUTLINED_FUNCTION_42();
          v86 = v66;
          if ((v69 & 1) == 0)
          {
            OUTLINED_FUNCTION_0_36();
            v66 = v86;
          }
          OUTLINED_FUNCTION_20_18();
          if (v64)
          {
            OUTLINED_FUNCTION_0_36();
            v66 = v86;
          }
          OUTLINED_FUNCTION_4_25();
        }
      }
      OUTLINED_FUNCTION_57_8();
    }
    while (!v67);
    OUTLINED_FUNCTION_3_6();
  }
  OUTLINED_FUNCTION_13_19();
  if (v4 > 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_9_23();
  }
  else
  {
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_11_20();
    if (v67)
    {
      OUTLINED_FUNCTION_11_20();
      if (v67)
      {
        *(_QWORD *)&v81 = v11;
        OUTLINED_FUNCTION_5();
        sub_242AC26D0(&v86, a4);
        OUTLINED_FUNCTION_66_5();
        return OUTLINED_FUNCTION_28_5();
      }
    }
    OUTLINED_FUNCTION_1_29();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_2_30();
  __break(1u);
  return result;
}

uint64_t sub_242AC26D0@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t result;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v6 = MEMORY[0x24BEE4AF8];
  v112 = *(_QWORD *)v2;
  v129 = MEMORY[0x24BEE4AF8];
  v130 = MEMORY[0x24BEE4AF8];
  v128 = MEMORY[0x24BEE4AF8];
  v7 = *(_QWORD *)(*a1 + 16);
  if (v7)
  {
    v8 = a1;
    v113 = *(_QWORD *)(*a1 + 16);
    v114 = a1[5];
    v109 = *a1 + 32;
    v115 = 0;
    v116 = -v7;
    OUTLINED_FUNCTION_79_2();
    while (1)
    {
      v117 = v10;
      if (v10 <= 0x40)
      {
        v12 = 0x8000000000000000;
        if (v10 != 64)
          v12 = 1 << v10;
        if ((v114 & v12) == 0)
        {
          v33 = v8[6];
          if (v10 != 64)
          {
            v11 = v10;
            if ((v33 & (1 << v10)) != 0)
              goto LABEL_34;
            goto LABEL_39;
          }
          if (v33 < 0)
          {
LABEL_34:
            v34 = *(_QWORD *)(v5 + 16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_242A5DFBC(0, *(_QWORD *)(v111 + 16) + 1, 1, v111);
              v111 = v76;
            }
            v36 = *(_QWORD *)(v111 + 16);
            v35 = *(_QWORD *)(v111 + 24);
            if (v36 >= v35 >> 1)
            {
              sub_242A5DFBC(v35 > 1, v36 + 1, 1, v111);
              v111 = v77;
            }
            *(_QWORD *)(v111 + 16) = v36 + 1;
            *(_QWORD *)(v111 + 8 * v36 + 32) = v34;
            goto LABEL_99;
          }
LABEL_6:
          v11 = 63;
LABEL_39:
          if (((v8[7] >> v11) & 1) != 0)
          {
            v37 = *(_QWORD *)(v5 + 16);
            if ((OUTLINED_FUNCTION_28_16() & 1) == 0)
            {
              OUTLINED_FUNCTION_72_4(0, *(_QWORD *)(v3 + 16) + 1);
              v3 = v78;
            }
            v39 = *(_QWORD *)(v3 + 16);
            v38 = *(_QWORD *)(v3 + 24);
            if (v39 >= v38 >> 1)
            {
              OUTLINED_FUNCTION_72_4(v38 > 1, v39 + 1);
              v3 = v79;
            }
            *(_QWORD *)(v3 + 16) = v39 + 1;
            *(_QWORD *)(v3 + 8 * v39 + 32) = v37;
            v10 = v117;
          }
          if (v10 > 0x40 || (v40 = v10, v10 == 64))
            v40 = 63;
          if (((v8[3] >> v40) & 1) != 0)
          {
            if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
            {
              OUTLINED_FUNCTION_3_25();
              v5 = v80;
            }
            v41 = v3;
            v43 = *(_QWORD *)(v5 + 16);
            v42 = *(_QWORD *)(v5 + 24);
            v44 = v43 + 1;
            if (v43 >= v42 >> 1)
            {
              OUTLINED_FUNCTION_6_25(v42 > 1, v43 + 1);
              v5 = v81;
            }
            v45 = 0;
          }
          else
          {
            if (__OFADD__(v10, v115))
              goto LABEL_145;
            OUTLINED_FUNCTION_45_7();
            if (v50 != v18 || v46 >= v47)
              goto LABEL_158;
            v52 = (v47 & (v46 >> 63)) + v46;
            if (v52 >= v47)
              goto LABEL_146;
            v53 = *(_QWORD *)(v48 + 8 * v52 + 32);
            v54 = -v53;
            if (__OFSUB__(0, v53))
              goto LABEL_148;
            if (v53 < v54)
              goto LABEL_150;
            v41 = v3;
            v45 = *(_QWORD *)(v109 + 8 * v49);
            if (v45 >= v53 || v45 < v54)
            {
              v120 = 0;
              v121 = 0;
              v119 = v45;
              OUTLINED_FUNCTION_24_14();
LABEL_160:
              v127 = 4;
LABEL_155:
              sub_242A59264();
            }
            if (v45 < 0)
            {
              v18 = __OFADD__(v53, v45);
              v45 += v53;
              if (v18)
                goto LABEL_151;
            }
            if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
            {
              OUTLINED_FUNCTION_3_25();
              v5 = v82;
            }
            v43 = *(_QWORD *)(v5 + 16);
            v56 = *(_QWORD *)(v5 + 24);
            v44 = v43 + 1;
            if (v43 >= v56 >> 1)
            {
              OUTLINED_FUNCTION_6_25(v56 > 1, v43 + 1);
              v5 = v83;
            }
          }
          *(_QWORD *)(v5 + 16) = v44;
          *(_QWORD *)(v5 + 32 + 8 * v43) = v45;
          v130 = v5;
          v57 = v117;
          if (v117 >= 0x40)
            v57 = 63;
          if (((v8[4] >> v57) & 1) != 0)
          {
            if (__OFADD__(v117, v115))
              goto LABEL_143;
            OUTLINED_FUNCTION_45_7();
            if (v50 != v18 || v46 >= v47)
            {
LABEL_158:
              v120 = 0;
              v121 = 0;
              v119 = v46;
              v122 = -1;
              v124 = 0;
              v125 = 0;
              v123 = v47;
              v126 = -1;
              goto LABEL_160;
            }
            v60 = (v47 & (v46 >> 63)) + v46;
            if (v60 >= v47)
              goto LABEL_144;
            v61 = *(_QWORD *)(v58 + 8 * v60 + 32);
          }
          else
          {
            v62 = v8[1];
            if (v117 >= *(_QWORD *)(v62 + 16))
              goto LABEL_147;
            v63 = *(_QWORD *)(v5 + 32 + 8 * v43);
            v18 = __OFADD__(v63, 1);
            v64 = v63 + 1;
            if (v18)
              goto LABEL_149;
            v65 = *(_QWORD *)(v62 + 8 * v117 + 32);
            if (v64 <= v65)
              v61 = v65;
            else
              v61 = v64;
          }
          if ((OUTLINED_FUNCTION_77_3() & 1) == 0)
          {
            OUTLINED_FUNCTION_14_13(0, *(_QWORD *)(v4 + 16) + 1);
            v4 = v72;
          }
          v67 = *(_QWORD *)(v4 + 16);
          v66 = *(_QWORD *)(v4 + 24);
          if (v67 >= v66 >> 1)
          {
            OUTLINED_FUNCTION_14_13(v66 > 1, v67 + 1);
            v4 = v73;
          }
          *(_QWORD *)(v4 + 16) = v67 + 1;
          *(_QWORD *)(v4 + 8 * v67 + 32) = v61;
          v129 = v4;
          v68 = v8[2];
          if (v117 >= *(_QWORD *)(v68 + 16))
            goto LABEL_142;
          v69 = *(_QWORD *)(v68 + 8 * v117 + 32);
          if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
          {
            OUTLINED_FUNCTION_15_15(0, *(_QWORD *)(v6 + 16) + 1);
            v6 = v74;
          }
          v3 = v41;
          v71 = *(_QWORD *)(v6 + 16);
          v70 = *(_QWORD *)(v6 + 24);
          if (v71 >= v70 >> 1)
          {
            OUTLINED_FUNCTION_15_15(v70 > 1, v71 + 1);
            v6 = v75;
          }
          *(_QWORD *)(v6 + 16) = v71 + 1;
          *(_QWORD *)(v6 + 8 * v71 + 32) = v69;
          v128 = v6;
          goto LABEL_99;
        }
      }
      else if ((v114 & 0x8000000000000000) == 0)
      {
        if ((v8[6] & 0x8000000000000000) != 0)
          goto LABEL_34;
        goto LABEL_6;
      }
      v13 = *(_QWORD *)(*(_QWORD *)(v112 + 16) + 152);
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v5 + 16);
      v16 = v9 - v10;
      v17 = v14 - v15 - v16;
      if (__OFSUB__(v14 - v15, v16))
        goto LABEL_139;
      v18 = __OFADD__(v115, v17);
      v115 += v17;
      if (v18)
      {
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        v120 = 0;
        v121 = 0;
        v119 = v2;
        OUTLINED_FUNCTION_24_14();
LABEL_153:
        v127 = 4;
        goto LABEL_154;
      }
      if (v17 < 0)
        goto LABEL_141;
      v19 = 0;
      v20 = v14 + v116 - v15;
      while (1)
      {
        if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
        {
          OUTLINED_FUNCTION_3_25();
          v5 = v27;
        }
        v22 = *(_QWORD *)(v5 + 16);
        v21 = *(_QWORD *)(v5 + 24);
        if (v22 >= v21 >> 1)
        {
          OUTLINED_FUNCTION_6_25(v21 > 1, v22 + 1);
          v5 = v28;
        }
        *(_QWORD *)(v5 + 16) = v22 + 1;
        *(_QWORD *)(v5 + 8 * v22 + 32) = 0;
        v2 = *(_QWORD *)(v4 + 16);
        if (v2 >= *(_QWORD *)(v13 + 16))
          goto LABEL_152;
        v23 = *(_QWORD *)(v13 + 32 + 8 * v2);
        if ((OUTLINED_FUNCTION_77_3() & 1) == 0)
        {
          OUTLINED_FUNCTION_14_13(0, v2 + 1);
          v4 = v29;
        }
        v2 = *(_QWORD *)(v4 + 16);
        v24 = *(_QWORD *)(v4 + 24);
        if (v2 >= v24 >> 1)
        {
          OUTLINED_FUNCTION_14_13(v24 > 1, v2 + 1);
          v4 = v30;
        }
        *(_QWORD *)(v4 + 16) = v2 + 1;
        *(_QWORD *)(v4 + 8 * v2 + 32) = v23;
        v129 = v4;
        if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_15_15(0, *(_QWORD *)(v6 + 16) + 1);
          v6 = v31;
        }
        v26 = *(_QWORD *)(v6 + 16);
        v25 = *(_QWORD *)(v6 + 24);
        if (v26 >= v25 >> 1)
        {
          OUTLINED_FUNCTION_15_15(v25 > 1, v26 + 1);
          v6 = v32;
        }
        *(_QWORD *)(v6 + 16) = v26 + 1;
        *(_QWORD *)(v6 + 8 * v26 + 32) = 1;
        v128 = v6;
        if (v20 == v19)
          break;
        v18 = __OFADD__(v19++, 1);
        if (v18)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
      }
      v130 = v5;
      v8 = a1;
LABEL_99:
      v10 = v117 + 1;
      ++v116;
      v9 = v113;
      if (v117 + 1 == v113)
        goto LABEL_104;
    }
  }
  OUTLINED_FUNCTION_79_2();
LABEL_104:
  v84 = *(_QWORD *)(*(_QWORD *)(v112 + 16) + 152);
  if (*(_QWORD *)(v5 + 16) < *(_QWORD *)(v84 + 16))
  {
    v2 = v84 + 32;
    do
    {
      if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
      {
        OUTLINED_FUNCTION_3_25();
        v5 = v94;
      }
      v86 = *(_QWORD *)(v5 + 16);
      v85 = *(_QWORD *)(v5 + 24);
      if (v86 >= v85 >> 1)
      {
        OUTLINED_FUNCTION_6_25(v85 > 1, v86 + 1);
        v5 = v95;
      }
      *(_QWORD *)(v5 + 16) = v86 + 1;
      *(_QWORD *)(v5 + 8 * v86 + 32) = 0;
      v87 = *(_QWORD *)(v4 + 16);
      if (v87 >= *(_QWORD *)(v84 + 16))
        goto LABEL_157;
      v88 = *(_QWORD *)(v2 + 8 * v87);
      if ((OUTLINED_FUNCTION_77_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_14_13(0, v87 + 1);
        v4 = v96;
      }
      v90 = *(_QWORD *)(v4 + 16);
      v89 = *(_QWORD *)(v4 + 24);
      if (v90 >= v89 >> 1)
      {
        OUTLINED_FUNCTION_14_13(v89 > 1, v90 + 1);
        v4 = v97;
      }
      *(_QWORD *)(v4 + 16) = v90 + 1;
      *(_QWORD *)(v4 + 8 * v90 + 32) = v88;
      v129 = v4;
      if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
      {
        OUTLINED_FUNCTION_15_15(0, *(_QWORD *)(v6 + 16) + 1);
        v6 = v98;
      }
      v92 = *(_QWORD *)(v6 + 16);
      v91 = *(_QWORD *)(v6 + 24);
      if (v92 >= v91 >> 1)
      {
        OUTLINED_FUNCTION_15_15(v91 > 1, v92 + 1);
        v6 = v99;
      }
      *(_QWORD *)(v6 + 16) = v92 + 1;
      *(_QWORD *)(v6 + 8 * v92 + 32) = 1;
      v128 = v6;
      OUTLINED_FUNCTION_11_20();
    }
    while (!v93);
    v130 = v5;
  }
  OUTLINED_FUNCTION_32_0();
  sub_242C480E0();
  sub_242ABFE14(v4, v5);
  v87 = v100;
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_35();
  v101 = *(_QWORD *)(v87 + 16);
  if (v101)
  {
    v102 = *(_QWORD *)(*(_QWORD *)(v112 + 16) + 152);
    v103 = *(_QWORD *)(v102 + 16);
    if (!v103)
    {
LABEL_129:
      sub_242C480E0();
      v120 = 0;
      v121 = 0;
      v119 = v103;
      v122 = -1;
      v124 = 0;
      v125 = 0;
      v123 = v103;
      v126 = -1;
      goto LABEL_153;
    }
    v104 = 0;
    v105 = v101 - 1;
    while (1)
    {
      if (v103 == v104)
        goto LABEL_138;
      if (*(_QWORD *)(v102 + 32 + 8 * v104) < *(_QWORD *)(v87 + 8 * v104 + 32))
        break;
      if (v105 == v104)
        goto LABEL_130;
      if (v103 == ++v104)
        goto LABEL_129;
    }
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_35_11();
    OUTLINED_FUNCTION_2_30();
    __break(1u);
LABEL_157:
    v120 = 0;
    v121 = 0;
    v119 = v87;
    OUTLINED_FUNCTION_24_14();
    v127 = 4;
LABEL_154:
    sub_242C480E0();
    goto LABEL_155;
  }
LABEL_130:
  swift_bridgeObjectRelease();
  sub_242ABF850(0, *(_QWORD *)(v5 + 16), (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
  sub_242AC039C(v106, v112, (uint64_t *)&v119);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v111 + 16))
  {
    OUTLINED_FUNCTION_5();
    Tensor.expandingShape(at:)();
    OUTLINED_FUNCTION_74_4();
    swift_bridgeObjectRelease();
    v119 = v118;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v3 + 16) && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 + 16) + 152) + 16) > 1uLL)
  {
    OUTLINED_FUNCTION_5();
    Tensor.squeezingShape(at:)();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_74_4();
    result = OUTLINED_FUNCTION_3_6();
    v119 = v118;
  }
  else
  {
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_81();
    result = OUTLINED_FUNCTION_3_6();
  }
  *a2 = v119;
  return result;
}

unint64_t sub_242AC30C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257224020;
  if (!qword_257224020)
  {
    v1 = type metadata accessor for SliceOperation();
    result = MEMORY[0x2494EDE24](&unk_242C62D44, v1);
    atomic_store(result, (unint64_t *)&qword_257224020);
  }
  return result;
}

void sub_242AC3108()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA588();
  *v0 = v1;
}

void sub_242AC3124()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA5A4();
  *v0 = v1;
}

void sub_242AC3140()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA5C0();
  *v0 = v1;
}

void sub_242AC315C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA5DC();
  *v0 = v1;
}

void sub_242AC3178()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA5F8();
  *v0 = v1;
}

void sub_242AC3194()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA614();
  *v0 = v1;
}

void sub_242AC31B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA630();
  *v0 = v1;
}

void sub_242AC31CC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA64C();
  *v0 = v1;
}

void sub_242AC31E8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA668();
  *v0 = v1;
}

void sub_242AC3204()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA684();
  *v0 = v1;
}

void sub_242AC3220()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA6A0();
  *v0 = v1;
}

void sub_242AC323C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA6BC();
  *v0 = v1;
}

void sub_242AC3258()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA6D8();
  *v0 = v1;
}

void sub_242AC3274()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA6F4();
  *v0 = v1;
}

void sub_242AC3290()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA710();
  *v0 = v1;
}

void sub_242AC32AC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA72C();
  *v0 = v1;
}

void sub_242AC32C8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA7D4();
  *v0 = v1;
}

void sub_242AC32E4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA878();
  *v0 = v1;
}

void sub_242AC3300()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA894();
  *v0 = v1;
}

void sub_242AC331C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA8B0();
  *v0 = v1;
}

void sub_242AC3338()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA8CC();
  *v0 = v1;
}

void sub_242AC3354()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA8E8();
  *v0 = v1;
}

void sub_242AC3370()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA904();
  *v0 = v1;
}

void sub_242AC338C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA920();
  *v0 = v1;
}

void sub_242AC33A8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA93C();
  *v0 = v1;
}

void sub_242AC33C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA958();
  *v0 = v1;
}

void sub_242AC33E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA974();
  *v0 = v1;
}

void sub_242AC33FC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA990();
  *v0 = v1;
}

void sub_242AC3418()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA9AC();
  *v0 = v1;
}

void sub_242AC3434()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA9C8();
  *v0 = v1;
}

void sub_242AC3450()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEA9E4();
  *v0 = v1;
}

void sub_242AC346C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAA00();
  *v0 = v1;
}

void sub_242AC3488()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAA1C();
  *v0 = v1;
}

void sub_242AC34A4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAA38();
  *v0 = v1;
}

void sub_242AC34C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAA54();
  *v0 = v1;
}

void sub_242AC34DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAA70();
  *v0 = v1;
}

void sub_242AC34F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAA8C();
  *v0 = v1;
}

void sub_242AC3514()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAAA8();
  *v0 = v1;
}

void sub_242AC3530()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAAC4();
  *v0 = v1;
}

void sub_242AC354C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAAE0();
  *v0 = v1;
}

void sub_242AC3568()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAAFC();
  *v0 = v1;
}

void sub_242AC3584()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAB18();
  *v0 = v1;
}

void sub_242AC35A0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAB34();
  *v0 = v1;
}

void sub_242AC35BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAB50();
  *v0 = v1;
}

void sub_242AC35D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAB6C();
  *v0 = v1;
}

void sub_242AC35F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAB88();
  *v0 = v1;
}

void sub_242AC3610()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEABA4();
  *v0 = v1;
}

void sub_242AC362C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEABC0();
  *v0 = v1;
}

void sub_242AC3648()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEABDC();
  *v0 = v1;
}

void sub_242AC3664()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEABF8();
  *v0 = v1;
}

void sub_242AC3680()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAC14();
  *v0 = v1;
}

void sub_242AC369C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAC30();
  *v0 = v1;
}

void sub_242AC36B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAC4C();
  *v0 = v1;
}

void sub_242AC36D4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAC68();
  *v0 = v1;
}

void sub_242AC36F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAC84();
  *v0 = v1;
}

void sub_242AC370C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEACA0();
  *v0 = v1;
}

void sub_242AC3728()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEACBC();
  *v0 = v1;
}

void sub_242AC3744()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEACD8();
  *v0 = v1;
}

void sub_242AC3760()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEACF4();
  *v0 = v1;
}

void sub_242AC377C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAD10();
  *v0 = v1;
}

void sub_242AC3798()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAD2C();
  *v0 = v1;
}

void sub_242AC37B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAD48();
  *v0 = v1;
}

void sub_242AC37D0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAD64();
  *v0 = v1;
}

void sub_242AC37EC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAD80();
  *v0 = v1;
}

void sub_242AC3808()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAD9C();
  *v0 = v1;
}

void sub_242AC3824()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEADB8();
  *v0 = v1;
}

void sub_242AC3840()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEADD4();
  *v0 = v1;
}

void sub_242AC385C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEADF0();
  *v0 = v1;
}

void sub_242AC3878()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAE94();
  *v0 = v1;
}

void sub_242AC3894()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEAF70();
  *v0 = v1;
}

void sub_242AC38B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB044();
  *v0 = v1;
}

void sub_242AC38CC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB060();
  *v0 = v1;
}

void sub_242AC38E8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB07C();
  *v0 = v1;
}

void sub_242AC3904()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB098();
  *v0 = v1;
}

void sub_242AC3920()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB0B4();
  *v0 = v1;
}

uint64_t sub_242AC393C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TensorRange(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_242AC3A1C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 5u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_242AC3A34(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 6;
  if (a2 >= 6)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 6;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TensorRange()
{
  return &type metadata for TensorRange;
}

uint64_t dispatch thunk of TensorRangeExpression.tensorRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t _s9IndexPathVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s9IndexPathVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

_QWORD *_s9IndexPathVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s9IndexPathVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t _s9IndexPathVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9IndexPathVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Tensor.IndexPath()
{
  return &type metadata for Tensor.IndexPath;
}

void sub_242AC3CB0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB0D0();
  *v0 = v1;
}

void sub_242AC3CCC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB0EC();
  *v0 = v1;
}

void sub_242AC3CE8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB108();
  *v0 = v1;
}

void sub_242AC3D04()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB124();
  *v0 = v1;
}

void sub_242AC3D20()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB140();
  *v0 = v1;
}

void sub_242AC3D3C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB1F0();
  *v0 = v1;
}

void sub_242AC3D58()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB20C();
  *v0 = v1;
}

void sub_242AC3D74()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB228();
  *v0 = v1;
}

void sub_242AC3D90()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB244();
  *v0 = v1;
}

void sub_242AC3DAC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB260();
  *v0 = v1;
}

void sub_242AC3DC8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB310();
  *v0 = v1;
}

void sub_242AC3DE4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB3C8();
  *v0 = v1;
}

void sub_242AC3E00()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB3E4();
  *v0 = v1;
}

void sub_242AC3E1C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB49C();
  *v0 = v1;
}

void sub_242AC3E38()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB550();
  *v0 = v1;
}

void sub_242AC3E54()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB5F4();
  *v0 = v1;
}

void sub_242AC3E70()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB6A4();
  *v0 = v1;
}

void sub_242AC3E8C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB6C0();
  *v0 = v1;
}

void sub_242AC3EA8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB6DC();
  *v0 = v1;
}

void sub_242AC3EC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB6F8();
  *v0 = v1;
}

void sub_242AC3EE0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB714();
  *v0 = v1;
}

void sub_242AC3EFC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB730();
  *v0 = v1;
}

void sub_242AC3F18()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB74C();
  *v0 = v1;
}

void sub_242AC3F34()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB768();
  *v0 = v1;
}

void sub_242AC3F50()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB784();
  *v0 = v1;
}

void sub_242AC3F6C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB7A0();
  *v0 = v1;
}

void sub_242AC3F88()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB7BC();
  *v0 = v1;
}

void sub_242AC3FA4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB7D8();
  *v0 = v1;
}

void sub_242AC3FC0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB7F4();
  *v0 = v1;
}

void sub_242AC3FDC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB810();
  *v0 = v1;
}

void sub_242AC3FF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB82C();
  *v0 = v1;
}

void sub_242AC4014()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB848();
  *v0 = v1;
}

void sub_242AC4030()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB864();
  *v0 = v1;
}

void sub_242AC404C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB880();
  *v0 = v1;
}

void sub_242AC4068()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB89C();
  *v0 = v1;
}

void sub_242AC4084()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB8B8();
  *v0 = v1;
}

void sub_242AC40A0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB8D4();
  *v0 = v1;
}

void sub_242AC40BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB8F0();
  *v0 = v1;
}

void sub_242AC40D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB90C();
  *v0 = v1;
}

void sub_242AC40F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB928();
  *v0 = v1;
}

void sub_242AC4110()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB944();
  *v0 = v1;
}

void sub_242AC412C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB960();
  *v0 = v1;
}

void sub_242AC4148()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB97C();
  *v0 = v1;
}

void sub_242AC4164()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB998();
  *v0 = v1;
}

void sub_242AC4180()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB9B4();
  *v0 = v1;
}

void sub_242AC419C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB9D0();
  *v0 = v1;
}

void sub_242AC41B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEB9EC();
  *v0 = v1;
}

void sub_242AC41D4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBA08();
  *v0 = v1;
}

void sub_242AC41F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBA24();
  *v0 = v1;
}

void sub_242AC420C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBA40();
  *v0 = v1;
}

void sub_242AC4228()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBA5C();
  *v0 = v1;
}

void sub_242AC4244()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBA78();
  *v0 = v1;
}

void sub_242AC4260()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBA94();
  *v0 = v1;
}

void sub_242AC427C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBAB0();
  *v0 = v1;
}

void sub_242AC4298()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBACC();
  *v0 = v1;
}

void sub_242AC42B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBAE8();
  *v0 = v1;
}

void sub_242AC42D0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBB04();
  *v0 = v1;
}

void sub_242AC42EC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_242BEBB20();
  *v0 = v1;
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242AC4348(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242AC0D54(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

void OUTLINED_FUNCTION_0_36()
{
  sub_242AC3920();
}

uint64_t OUTLINED_FUNCTION_2_30()
{
  return sub_242C48F5C();
}

void OUTLINED_FUNCTION_3_25()
{
  uint64_t v0;

  sub_242A5DFBC(0, *(_QWORD *)(v0 + 16) + 1, 1, v0);
}

void OUTLINED_FUNCTION_4_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = v2;
  v4 = v1 + 32 * v0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 56) = v3;
}

uint64_t OUTLINED_FUNCTION_5_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 a19, uint64_t a20,char a21)
{
  uint64_t v21;
  uint64_t v22;

  *(_OWORD *)(v21 + 32) = a19;
  *(_QWORD *)(v21 + 48) = a20;
  *(_BYTE *)(v21 + 56) = a21;
  return __swift_destroy_boxed_opaque_existential_1(v22 - 152);
}

void OUTLINED_FUNCTION_6_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DFBC(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_8_16(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return sub_242A7DAD0(a1, 0, v9, v10, v11, v8, v12, a8);
}

uint64_t OUTLINED_FUNCTION_13_19()
{
  return swift_release();
}

void OUTLINED_FUNCTION_14_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DFBC(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_15_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DFBC(a1, a2, 1, v2);
}

_QWORD *OUTLINED_FUNCTION_17_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  return (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 8))((uint64_t *)va, v6, v7);
}

uint64_t OUTLINED_FUNCTION_18_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_19_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 a19, uint64_t a20,char a21)
{
  uint64_t v21;
  uint64_t v22;

  *(_OWORD *)(v21 + 64) = a19;
  *(_QWORD *)(v21 + 80) = a20;
  *(_BYTE *)(v21 + 88) = a21;
  return __swift_destroy_boxed_opaque_existential_1(v22 - 152);
}

void OUTLINED_FUNCTION_22_12()
{
  sub_242AC3920();
}

uint64_t OUTLINED_FUNCTION_23_16()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_25_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t *v10;
  uint64_t v11;
  va_list va;

  va_start(va, a10);
  return sub_242A62684(v11 - 152, (uint64_t)va, v10);
}

uint64_t OUTLINED_FUNCTION_27_12()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_28_16()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_30_12()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = v0;
  sub_242B6527C();
}

_QWORD *OUTLINED_FUNCTION_31_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a10);
  return (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 8))((uint64_t *)va, v10, v11);
}

uint64_t OUTLINED_FUNCTION_32_12(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_242AB8F10(v2 - 152, a2);
}

uint64_t OUTLINED_FUNCTION_33_9(uint64_t a1)
{
  uint64_t *v1;

  return sub_242AB8F10(a1, v1);
}

uint64_t OUTLINED_FUNCTION_36_13(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242A62684(a1, a2, v2);
}

void OUTLINED_FUNCTION_40_9()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = v5;
  v7 = v4 + 32 * v3;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v0;
  *(_BYTE *)(v7 + 56) = v2;
}

void OUTLINED_FUNCTION_42_10()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0;
  v0[1] = 0;
  v0[2] = 0;
  *(_BYTE *)(v1 + 56) = -1;
}

void OUTLINED_FUNCTION_43_11()
{
  sub_242B4B43C();
}

uint64_t OUTLINED_FUNCTION_46_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_47_9()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242AC1510(v0, (_QWORD *)(v1 - 152));
}

void OUTLINED_FUNCTION_49_8()
{
  sub_242B4B43C();
}

void OUTLINED_FUNCTION_50_9()
{
  sub_242AC3920();
}

uint64_t OUTLINED_FUNCTION_51_9()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_52_4()
{
  sub_242B4B43C();
}

void OUTLINED_FUNCTION_53_5()
{
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_54_6()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_56_4()
{
  unint64_t *v0;
  uint64_t v1;

  return sub_242AC26D0((_QWORD *)(v1 - 152), v0);
}

uint64_t OUTLINED_FUNCTION_62_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  unint64_t *v15;
  va_list va;

  va_start(va, a15);
  return sub_242AC26D0((uint64_t *)va, v15);
}

void OUTLINED_FUNCTION_65_5(uint64_t a1@<X8>)
{
  char v1;

  *(_BYTE *)(a1 + 24) = v1;
}

uint64_t OUTLINED_FUNCTION_66_5()
{
  uint64_t v0;

  return sub_242AC393C(v0 - 152);
}

uint64_t OUTLINED_FUNCTION_67_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_242A62684(v3, v4 - 152, a3);
}

uint64_t OUTLINED_FUNCTION_68_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_242A62684(v3, v4 - 152, a3);
}

uint64_t OUTLINED_FUNCTION_69_4()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_70_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  return sub_242AC1510(v15, (uint64_t *)va);
}

void OUTLINED_FUNCTION_71_5()
{
  uint64_t v0;

  sub_242BC0874(0, v0);
}

void OUTLINED_FUNCTION_72_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DFBC(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_74_4()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_77_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_78_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8 * v1 + 32) = v2;
}

void OUTLINED_FUNCTION_81_4()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0;
  v0[1] = 0;
  v0[2] = 0;
  *(_BYTE *)(v1 + 88) = -1;
}

uint64_t OUTLINED_FUNCTION_82_3()
{
  return sub_242C480E0();
}

ValueMetadata *type metadata accessor for GradientSourceID()
{
  return &type metadata for GradientSourceID;
}

uint64_t destroy for InputGradient()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14NeuralNetworks13InputGradientVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  sub_242C480E0();
  return a1;
}

_QWORD *assignWithCopy for InputGradient(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for InputGradient(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InputGradient()
{
  return &type metadata for InputGradient;
}

uint64_t sub_242AC4908()
{
  swift_beginAccess();
  return sub_242C480E0();
}

uint64_t sub_242AC4940()
{
  return sub_242C480E0();
}

uint64_t sub_242AC4954(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 32))();
}

uint64_t sub_242AC4964()
{
  void *v0;
  __objc2_class *Class;
  uint64_t v2;
  uint64_t v3;

  sub_242BC97A8();
  if (v0
    && (Class = (__objc2_class *)object_getClass(v0),
        swift_unknownObjectRelease(),
        Class == _TtC14NeuralNetworks16TrackedOperation))
  {
    sub_242BC9724();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242B89308();
    sub_242C48E78();
    swift_release();
    return 0;
  }
  else
  {
    sub_242BC9724();
    v3 = v2;
    swift_release();
  }
  return v3;
}

uint64_t sub_242AC4A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return OUTLINED_FUNCTION_31_1();
  else
    return sub_242C4925C();
}

uint64_t sub_242AC4A6C()
{
  sub_242C480E0();
  OUTLINED_FUNCTION_3_26();
  return swift_bridgeObjectRelease();
}

void sub_242AC4AAC()
{
  sub_242C49340();
  sub_242C480E0();
  OUTLINED_FUNCTION_3_26();
  swift_bridgeObjectRelease();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

void sub_242AC4AF8()
{
  sub_242AC4AAC();
}

uint64_t sub_242AC4B00()
{
  return sub_242AC4A6C();
}

void sub_242AC4B08()
{
  sub_242C49340();
  sub_242C480E0();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242AC4B54(uint64_t *a1, uint64_t *a2)
{
  return sub_242AC4A54(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_242AC4B6C()
{
  unint64_t result;

  result = qword_257224030;
  if (!qword_257224030)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51A00, &type metadata for GradientSourceID);
    atomic_store(result, (unint64_t *)&qword_257224030);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_26()
{
  return sub_242C4817C();
}

uint64_t sub_242AC4BD0(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double v13;
  _QWORD *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_242C4BF60;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v7 = *(id *)(a2 + 32);
  v8 = v7;
  v9 = v3[6];
  sub_242BF51CC();
  v11 = v10;
  v12 = __swift_project_boxed_opaque_existential_1(v3 + 7, v3[10]);
  v13 = OUTLINED_FUNCTION_0_37((uint64_t)v12);
  v14 = __swift_project_boxed_opaque_existential_1(v3 + 12, v3[15]);
  v15 = OUTLINED_FUNCTION_0_37((uint64_t)v14);
  v17 = v3[3];
  v16 = v3[4];
  sub_242C480E0();
  v18 = sub_242AC50A0((uint64_t)v8, v9, v11, v13, v15, v17, v16, a1);

  *(_QWORD *)(v6 + 32) = v18;
  sub_242C4856C();
  return v6;
}

double sub_242AC4D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  double v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23[5];
  char v24;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224038);
  if (swift_dynamicCast())
  {
    sub_242AC517C(v23, &v21);
    v7 = v22;
    v8 = __swift_project_boxed_opaque_existential_1(&v21, v22);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x24BDAC7A8](v8);
    v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    if (sub_242C48B30() < 65)
    {
      v16 = sub_242C48B3C();
      v17 = sub_242C48B24();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
      if ((v16 & 1) != 0)
        v12 = (double)v17;
      else
        v12 = (double)(unint64_t)v17;
    }
    else
    {
      sub_242AC5140();
      sub_242AC5194();
      sub_242C48068();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
      v12 = v20;
    }
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224040);
  if (swift_dynamicCast())
  {
    sub_242AC517C(v23, &v21);
    v13 = __swift_project_boxed_opaque_existential_1(&v21, v22);
    MEMORY[0x24BDAC7A8](v13);
    (*(void (**)(char *))(v15 + 16))((char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_242AC5140();
    sub_242C48050();
    v12 = v20;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    goto LABEL_12;
  }
  if (!swift_dynamicCast())
  {
    *(_QWORD *)&v23[0] = 0;
    *((_QWORD *)&v23[0] + 1) = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v23[0] = 0xD000000000000020;
    *((_QWORD *)&v23[0] + 1) = 0x8000000242C68380;
    swift_getDynamicType();
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    v24 = 9;
    sub_242A59170();
  }
  v12 = (double)LOBYTE(v23[0]);
LABEL_12:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  return v12;
}

uint64_t sub_242AC508C(void *a1, uint64_t a2)
{
  return sub_242AC4BD0(a1, a2);
}

id sub_242AC50A0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v14;
  id v15;

  v14 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a8, sel_oneHotWithIndicesTensor_depth_dataType_onValue_offValue_name_, a1, a2, a3, v14, a4, a5);

  return v15;
}

unint64_t sub_242AC5140()
{
  unint64_t result;

  result = qword_257224048;
  if (!qword_257224048)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_257224048);
  }
  return result;
}

_OWORD *sub_242AC517C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_242AC5194()
{
  unint64_t result;

  result = qword_257224050[0];
  if (!qword_257224050[0])
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE45A8], MEMORY[0x24BEE4568]);
    atomic_store(result, qword_257224050);
  }
  return result;
}

double OUTLINED_FUNCTION_0_37(uint64_t a1)
{
  uint64_t v1;

  return sub_242AC4D1C(a1, v1);
}

uint64_t sub_242AC51E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_2_31();
  if (v19 < 1 || a2 < 0)
  {
    result = sub_242C48F5C();
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v8, v17, a5);
    if (a2)
      v20 = a1;
    else
      v20 = 1;
    sub_242AC534C(v8, v20, a2, a3, a4, a5, a6, *(_QWORD *)(a7 + 8), a8);
    return swift_retain();
  }
  return result;
}

int *sub_242AC534C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *result;
  _QWORD *v18;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a9, a1, a6);
  result = (int *)type metadata accessor for LazyPrefetchingMapSequence(0, a6, a7, a8);
  *(_QWORD *)(a9 + result[11]) = a2;
  *(_QWORD *)(a9 + result[12]) = a3;
  v18 = (_QWORD *)(a9 + result[13]);
  *v18 = a4;
  v18[1] = a5;
  return result;
}

uint64_t sub_242AC53E4()
{
  swift_beginAccess();
  return sub_242C480E0();
}

uint64_t sub_242AC542C()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_3_27(*(_QWORD *)(*(_QWORD *)v0 + 136));
}

uint64_t sub_242AC5438()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_3_27(*(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_242AC5444(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144)) = result;
  return result;
}

uint64_t sub_242AC5454()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t sub_242AC546C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

id sub_242AC5488()
{
  uint64_t v0;

  return *(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
}

uint64_t sub_242AC5498()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_3_27(*(_QWORD *)(*(_QWORD *)v0 + 168));
}

uint64_t sub_242AC54A4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168)) = result;
  return result;
}

uint64_t sub_242AC54B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_242AC5520(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t *sub_242AC5520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = v5;
  v36 = a4;
  v37 = a5;
  v32 = a1;
  v33 = a3;
  v38 = a2;
  v7 = *v5;
  v34 = *(_QWORD *)(*v5 + 88);
  v35 = sub_242C48A64();
  OUTLINED_FUNCTION_6_26();
  MEMORY[0x24BDAC7A8](v8);
  v31 = (uint64_t)&v28 - v9;
  v10 = sub_242C4895C();
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_4_9();
  v13 = v12 - v11;
  v14 = sub_242C48944();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_4_9();
  v16 = sub_242C47FF0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_2_31();
  *(uint64_t *)((char *)v5 + *(_QWORD *)(v7 + 136)) = 0;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 144)) = 0;
  v17 = (uint64_t)v6 + *(_QWORD *)(*v6 + 152);
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  v18 = *(_QWORD *)(*v5 + 160);
  *(uint64_t *)((char *)v5 + v18) = (uint64_t)dispatch_semaphore_create(0);
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 168)) = -1;
  v28 = *(_QWORD *)(*v5 + 176);
  sub_242AABC28();
  sub_242C47FCC();
  v39 = MEMORY[0x24BEE4AF8];
  sub_242AC7938((unint64_t *)&qword_257227870, v15, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224158);
  sub_242AC7974((unint64_t *)&qword_257227880, &qword_257224158);
  sub_242C48B9C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v13, *MEMORY[0x24BEE5750], v30);
  *(uint64_t *)((char *)v5 + v28) = sub_242C48980();
  v19 = (uint64_t)v6 + *(_QWORD *)(*v6 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v22 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v32, AssociatedTypeWitness);
  v23 = v34;
  *(uint64_t *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = v33;
  v24 = (uint64_t *)((char *)v6 + *(_QWORD *)(*v6 + 120));
  v25 = v37;
  *v24 = v36;
  v24[1] = v25;
  __swift_storeEnumTagSinglePayload(v31, 1, 1, v23);
  v26 = sub_242C48644();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, AssociatedTypeWitness);
  *(uint64_t *)((char *)v6 + *(_QWORD *)(*v6 + 128)) = v26;
  return v6;
}

void LazyPrefetchingMapSequence.Iterator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_release();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_1_0();
}

uint64_t LazyPrefetchingMapSequence.Iterator.__deallocating_deinit()
{
  LazyPrefetchingMapSequence.Iterator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_242AC58D8()
{
  unsigned __int8 v1;

  sub_242C48968();
  return v1;
}

uint64_t sub_242AC5928(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  void *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v3 = v2;
  v21[0] = a2;
  v5 = (_QWORD *)*v2;
  v6 = sub_242C47FB4();
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C47FF0();
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v5[11];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)((char *)v3 + v5[22]);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v5[10];
  *((_QWORD *)v18 + 3) = v13;
  *((_QWORD *)v18 + 4) = v5[12];
  *((_QWORD *)v18 + 5) = v3;
  *((_QWORD *)v18 + 6) = v21[0];
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v18[v17], v16, v13);
  aBlock[4] = sub_242AC7AE4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_242AC5D48;
  aBlock[3] = &block_descriptor_28;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_242C47FCC();
  v25 = MEMORY[0x24BEE4AF8];
  sub_242AC7938(&qword_257224160, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224168);
  sub_242AC7974(&qword_257224170, &qword_257224168);
  sub_242C48B9C();
  MEMORY[0x2494EC510](0, v12, v8, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
  return swift_release();
}

void sub_242AC5B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v6 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v7 = sub_242C48A64();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - v9;
  sub_242AC53E4();
  v11 = MEMORY[0x2494EC198]();
  swift_bridgeObjectRelease();
  if (!v11)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (a2 == 0x8000000000000000 && v11 == -1)
    goto LABEL_10;
  v13 = a2 % v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v10, a3, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  v14 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 128));
  swift_beginAccess();
  v15 = sub_242C48650();
  sub_242C485B4();
  v16 = *v14;
  sub_242B78444(v13, *v14);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 40))(v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v13, v10, v7);
  nullsub_1(v15, v17, v18);
  swift_endAccess();
  v19 = *(_QWORD *)(*(_QWORD *)a1 + 168);
  if (*(_QWORD *)(a1 + v19) == a2)
  {
    *(_QWORD *)(a1 + v19) = -1;
    v20 = sub_242AC5488();
    sub_242C489E0();

  }
}

uint64_t sub_242AC5D48(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_242AC5D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v20 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = sub_242C48A64();
  v6 = *(_QWORD *)(v18 - 8);
  v7 = MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - v8;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - v10;
  result = sub_242AC58D8();
  if ((result & 1) == 0)
  {
    v16 = v3;
    v17 = v2;
    swift_beginAccess();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_242C48A94();
    swift_endAccess();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, AssociatedTypeWitness) == 1)
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v18);
      v13 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
      *(_QWORD *)v13 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
      *(_BYTE *)(v13 + 8) = 0;
    }
    else
    {
      v14 = v19;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v11, v9, AssociatedTypeWitness);
      v15 = (uint64_t)v20;
      (*(void (**)(char *))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)))(v11);
      sub_242AC5928(v15, *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144)));
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, AssociatedTypeWitness);
      return sub_242AC5FCC(v1);
    }
  }
  return result;
}

uint64_t sub_242AC5FCC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)result + 144);
  v2 = *(_QWORD *)(result + v1);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(result + v1) = v4;
  return result;
}

uint64_t sub_242AC5FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  _QWORD v11[2];
  _QWORD aBlock[6];

  v1 = sub_242C47FB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_242C47FF0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_242AC58D8();
  if ((result & 1) == 0)
  {
    v11[0] = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
    aBlock[4] = sub_242AC7930;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_242AC5D48;
    aBlock[3] = &block_descriptor_16;
    v10 = _Block_copy(aBlock);
    swift_retain();
    sub_242C47FCC();
    v11[1] = MEMORY[0x24BEE4AF8];
    sub_242AC7938(&qword_257224160, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257224168);
    sub_242AC7974(&qword_257224170, &qword_257224168);
    sub_242C48B9C();
    MEMORY[0x2494EC510](0, v8, v4, v10);
    _Block_release(v10);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_242AC61C8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  if (*(_BYTE *)(result + *(_QWORD *)(*(_QWORD *)result + 152) + 8) != 1)
    return result;
  v1 = result;
  v2 = sub_242AC53E4();
  v3 = sub_242C48A64();
  v4 = MEMORY[0x2494EC198](v2, v3);
  result = swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  v6 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v7 = __OFSUB__(v5, v6);
  v8 = v5 - v6;
  if (v7)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = __OFSUB__(v4, v8);
  v9 = v4 - v8;
  if (v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112)) >= v9)
    v10 = v9;
  else
    v10 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  if (v10 < 1)
    return result;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B28);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_242AC79C8();
  v12 = sub_242C4841C();
  v13 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  result = MEMORY[0x2494EC198](v12, AssociatedTypeWitness);
  v14 = v13 + result;
  if (__OFADD__(v13, result))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144)) = v14;
  if (result < v10)
  {
    v15 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    *(_QWORD *)v15 = v14;
    *(_BYTE *)(v15 + 8) = 0;
    if (*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168)) == v14)
    {
      v16 = sub_242AC5488();
      sub_242C489E0();

    }
  }
  sub_242AC643C(v13, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242AC6370()
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_242C48A94();
  return swift_endAccess();
}

uint64_t sub_242AC643C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v21 = a1;
  v4 = sub_242C47FB4();
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_242C47FF0();
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_242C47FC0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = a2;
  swift_getAssociatedTypeWitness();
  v14 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v14);
  result = sub_242C4883C();
  if ((result & 1) == 0)
  {
    sub_242AABC28();
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5490], v10);
    v16 = (void *)sub_242C4898C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v17 = (_QWORD *)swift_allocObject();
    v18 = v21;
    v17[2] = a2;
    v17[3] = v18;
    v17[4] = v2;
    aBlock[4] = sub_242AC7A60;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_242AC5D48;
    aBlock[3] = &block_descriptor_22;
    v19 = _Block_copy(aBlock);
    sub_242C480E0();
    swift_retain();
    sub_242C47FCC();
    v25 = MEMORY[0x24BEE4AF8];
    sub_242AC7938(&qword_257224160, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257224168);
    sub_242AC7974(&qword_257224170, &qword_257224168);
    sub_242C48B9C();
    MEMORY[0x2494EC510](0, v9, v6, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_242AC6710(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  sub_242AABC28();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x2494EC198](a1, AssociatedTypeWitness);
  return sub_242C48950();
}

uint64_t sub_242AC67A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *);
  uint64_t v20;
  _QWORD v21[2];

  v21[1] = a4;
  v7 = *a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)v21 - v11;
  v13 = *(_QWORD *)(v7 + 88);
  v14 = *(_QWORD *)(v13 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2 + a1;
  if (__OFADD__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    v19 = *(void (**)(char *))((char *)a3 + *(_QWORD *)(v7 + 120));
    v20 = v18;
    sub_242C48680();
    v19(v12);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
    sub_242AC5928((uint64_t)v17, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  return result;
}

uint64_t sub_242AC68E0(uint64_t a1)
{
  uint64_t v1;

  if (*(uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112)) < 1)
    return sub_242AC5D74(a1);
  else
    return sub_242AC5FEC();
}

uint64_t sub_242AC68FC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t v19;
  uint64_t aBlock;
  uint64_t v21;
  void (*v22)(uint64_t);
  void *v23;
  void (*v24)();
  uint64_t v25;
  char v26;

  v2 = v1;
  v19 = a1;
  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 88);
  v5 = sub_242C48A64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - v7;
  v26 = 0;
  v9 = *(NSObject **)((char *)v2 + *(_QWORD *)(v3 + 176));
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = &v26;
  *(_QWORD *)(v10 + 24) = v2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_242AC78E4;
  *(_QWORD *)(v11 + 24) = v10;
  v24 = sub_242AC78F0;
  v25 = v11;
  aBlock = MEMORY[0x24BDAC760];
  v21 = 1107296256;
  v22 = sub_242AC6D20;
  v23 = &block_descriptor;
  v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((v26 & 1) == 0 && (sub_242AC58D8() & 1) == 0)
    {
      v14 = sub_242AC5488();
      sub_242C489D4();

    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v4);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v8;
    *(_QWORD *)(v15 + 24) = v2;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_242AC7924;
    *(_QWORD *)(v16 + 24) = v15;
    v24 = sub_242AC7B60;
    v25 = v16;
    aBlock = MEMORY[0x24BDAC760];
    v21 = 1107296256;
    v22 = sub_242AC6D20;
    v23 = &block_descriptor_13;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v17);
    _Block_release(v17);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v19, v8, v5);
      swift_release();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_242AC6BCC(BOOL *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int EnumTagSinglePayload;
  uint64_t v15;

  v4 = *a2;
  v5 = *(_QWORD *)(*a2 + 88);
  v6 = sub_242C48A64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - v8;
  v10 = *(uint64_t *)((char *)a2 + *(_QWORD *)(v4 + 136));
  sub_242AC53E4();
  v11 = MEMORY[0x2494EC198]();
  result = swift_bridgeObjectRelease();
  if (!v11)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (v10 == 0x8000000000000000 && v11 == -1)
    goto LABEL_10;
  sub_242AC53E4();
  sub_242C48680();
  swift_bridgeObjectRelease();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a1 = EnumTagSinglePayload != 1;
  if (EnumTagSinglePayload == 1)
    *(uint64_t *)((char *)a2 + *(_QWORD *)(*a2 + 168)) = *(uint64_t *)((char *)a2 + *(_QWORD *)(*a2 + 136));
  return result;
}

void sub_242AC6D04(void (*a1)(void))
{
  a1();
  OUTLINED_FUNCTION_1_0();
}

void sub_242AC6D20(uint64_t a1)
{
  (*(void (**)(void))(a1 + 32))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AC6D3C(unint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void (*v14)(unint64_t, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *a2;
  v5 = *(_QWORD *)(*a2 + 88);
  v6 = sub_242C48A64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - v8;
  v10 = *(uint64_t *)((char *)a2 + *(_QWORD *)(v4 + 136));
  sub_242AC53E4();
  v11 = MEMORY[0x2494EC198]();
  result = swift_bridgeObjectRelease();
  if (v11)
  {
    if (v10 == 0x8000000000000000 && v11 == -1)
      goto LABEL_16;
    sub_242AC53E4();
    sub_242C48680();
    swift_bridgeObjectRelease();
    v14 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 40);
    v14(a1, v9, v6);
    v15 = *(uint64_t *)((char *)a2 + *(_QWORD *)(*a2 + 136));
    sub_242AC53E4();
    v16 = MEMORY[0x2494EC198]();
    result = swift_bridgeObjectRelease();
    if (v16)
    {
      if (v15 == 0x8000000000000000 && v16 == -1)
        goto LABEL_17;
      v18 = v15 % v16;
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v5);
      v19 = (uint64_t *)((char *)a2 + *(_QWORD *)(*a2 + 128));
      swift_beginAccess();
      v20 = sub_242C48650();
      sub_242C485B4();
      v21 = *v19;
      sub_242B78444(v18, *v19);
      v14(v21+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v18, v9, v6);
      nullsub_1(v20, v22, v23);
      result = swift_endAccess();
      v24 = *(_QWORD *)(*a2 + 136);
      v25 = *(uint64_t *)((char *)a2 + v24);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (!v26)
      {
        *(uint64_t *)((char *)a2 + v24) = v27;
        return result;
      }
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t LazyPrefetchingMapSequence.Iterator.next()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = sub_242AC58D8();
  if ((v4 & 1) != 0)
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, *(_QWORD *)(v3 + 88));
  sub_242AC68E0(v4);
  return sub_242AC68FC(a1);
}

uint64_t sub_242AC6FA8@<X0>(uint64_t a1@<X8>)
{
  return LazyPrefetchingMapSequence.Iterator.next()(a1);
}

uint64_t LazyPrefetchingMapSequence.makeIterator()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_4_9();
  v8 = v7 - v6;
  v10 = *(_QWORD *)(v9 + 32);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6_26();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - v12;
  type metadata accessor for LazyPrefetchingMapSequence.Iterator(0, v4, *(_QWORD *)(a1 + 24), v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  sub_242C483D4();
  v14 = *(_QWORD *)(v2 + *(int *)(a1 + 44));
  v15 = *(_QWORD *)(v2 + *(int *)(a1 + 48));
  v16 = (uint64_t *)(v2 + *(int *)(a1 + 52));
  v17 = *v16;
  v18 = v16[1];
  swift_retain();
  v19 = sub_242AC54B4((uint64_t)v13, v14, v15, v17, v18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  return v19;
}

uint64_t type metadata accessor for LazyPrefetchingMapSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyPrefetchingMapSequence.Iterator);
}

uint64_t LazyPrefetchingMapSequence.underestimatedCount.getter()
{
  return sub_242C483EC();
}

void sub_242AC711C()
{
  JUMPOUT(0x2494EDE24);
}

void sub_242AC712C()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242AC713C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = LazyPrefetchingMapSequence.makeIterator()(a1);
  *a2 = result;
  return result;
}

uint64_t sub_242AC7164()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_242AC71EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    v16 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v16 = *v14;
    v16[1] = v15;
  }
  swift_retain();
  return v4;
}

uint64_t sub_242AC72CC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_242AC731C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  return a1;
}

uint64_t sub_242AC739C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_242AC7428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_242AC74A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_242AC7528(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((((((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_242AC75B4 + 4 * byte_242C51A90[v11]))();
  }
}

void sub_242AC7644(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_242AC7740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for LazyPrefetchingMapSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyPrefetchingMapSequence);
}

uint64_t sub_242AC77EC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t method lookup function for LazyPrefetchingMapSequence.Iterator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_242AC78C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242AC78E4()
{
  uint64_t v0;

  return sub_242AC6BCC(*(BOOL **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

void sub_242AC78F0()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_242AC7924()
{
  uint64_t v0;

  return sub_242AC6D3C(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_242AC7930()
{
  uint64_t v0;

  return sub_242AC61C8(v0);
}

void sub_242AC7938(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2494EDE24](a3, v5), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

void sub_242AC7974(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v3), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AC79B0()
{
  return sub_242AC6370();
}

unint64_t sub_242AC79C8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_257224178;
  if (!qword_257224178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257222B28);
    v2 = sub_242AA1C80();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE1BB8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257224178);
  }
  return result;
}

uint64_t sub_242AC7A34()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242AC7A60()
{
  uint64_t v0;

  return sub_242AC6710(*(_QWORD *)(v0 + 16));
}

uint64_t sub_242AC7A6C(uint64_t a1)
{
  uint64_t v1;

  return sub_242AC67A4(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_242AC7A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_242AC7AE4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0[3] - 8) + 80);
  sub_242AC5B9C(v0[5], v0[6], (uint64_t)v0 + ((v1 + 56) & ~v1));
}

void sub_242AC7B04(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152) + 8) & 1) == 0;
}

void sub_242AC7B24(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
  v3 = (*(_BYTE *)(v2 + 8) & 1) == 0 && *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136)) >= *(_QWORD *)v2;
  *a1 = v3;
}

uint64_t OUTLINED_FUNCTION_0_38()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_3_27@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t sub_242AC7BCC()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, *(_QWORD *)(v0 + 40));
  v1 = sub_242C4814C();
  swift_endAccess();
  return v1;
}

void sub_242AC7C3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v10;
  v13 = sub_242C48B30();
  if (v13 < -7)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v22 = a5;
  v23 = a2;
  v24 = v5;
  v25 = a4;
  if ((unint64_t)(v13 + 7) >= 0xF)
  {
    v15 = v13 / 8;
    v14 = MEMORY[0x24BEE4AF8];
    v16 = 0x1000000000000000;
    v26 = sub_242ACA978();
    v17 = 0;
    while (v16)
    {
      v29 = v17;
      sub_242C48B18();
      v18 = sub_242C48B24();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, a3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_6_27();
        v14 = v20;
      }
      v19 = *(_QWORD *)(v14 + 16);
      if (v19 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        OUTLINED_FUNCTION_6_27();
        v14 = v21;
      }
      *(_QWORD *)(v14 + 16) = v19 + 1;
      *(_BYTE *)(v14 + v19 + 32) = v18;
      --v16;
      v17 += 8;
      if (!--v15)
        goto LABEL_4;
    }
    __break(1u);
    goto LABEL_14;
  }
  v14 = MEMORY[0x24BEE4AF8];
LABEL_4:
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v14, v23);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, a3);
}

uint64_t sub_242AC7E0C()
{
  return sub_242C485D8();
}

uint64_t sub_242AC7E20(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  __int128 v3;
  _DWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  __int128 v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 0uLL;
    do
    {
      if (v1 - 5 < 0xFFFFFFFFFFFFFFFCLL)
      {
        __break(1u);
        goto LABEL_8;
      }
      v4 = (_DWORD *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
      v5 = v2 + 1;
      v6 = *(_DWORD *)(a1 + 4 * v2 + 32);
      v8 = v3;
      *v4 = v6;
      v3 = v8;
      v2 = v5;
    }
    while (v1 != v5);
    result = swift_bridgeObjectRelease();
    if (v1 < 4)
      goto LABEL_9;
  }
  else
  {
LABEL_8:
    result = swift_bridgeObjectRelease();
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t sub_242AC7EA8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 0uLL;
    do
    {
      if (v1 - 3 < 0xFFFFFFFFFFFFFFFELL)
      {
        __break(1u);
        goto LABEL_8;
      }
      v4 = (_QWORD *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFF7 | (8 * (v2 & 1)));
      v5 = v2 + 1;
      v6 = *(_QWORD *)(a1 + 8 * v2 + 32);
      v8 = v3;
      *v4 = v6;
      v3 = v8;
      v2 = v5;
    }
    while (v1 != v5);
    result = swift_bridgeObjectRelease();
    if (v1 < 2)
      goto LABEL_9;
  }
  else
  {
LABEL_8:
    result = swift_bridgeObjectRelease();
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t sub_242AC7F30(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 0;
    do
    {
      if (v1 - 3 < 0xFFFFFFFFFFFFFFFELL)
      {
        __break(1u);
        goto LABEL_8;
      }
      v4 = (_DWORD *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v2 & 1)));
      v5 = v2 + 1;
      v6 = *(_DWORD *)(a1 + 4 * v2 + 32);
      v8 = v3;
      *v4 = v6;
      v3 = v8;
      v2 = v5;
    }
    while (v1 != v5);
    result = swift_bridgeObjectRelease();
    if (v1 < 2)
      goto LABEL_9;
  }
  else
  {
LABEL_8:
    result = swift_bridgeObjectRelease();
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t sub_242AC7FB8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_242AC7FDC()
{
  sub_242AC7BCC();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242AC7FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[10];
  __int128 v19[2];
  uint64_t v20;
  _BYTE v21[40];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  swift_beginAccess();
  sub_242A587A8(v5 + 16, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224240);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224248);
  if (swift_dynamicCast())
  {
    sub_242A64518(v19, (uint64_t)v22);
    v11 = v23;
    v12 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 24))(a1, a2, a3, a4, a5, v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return v13;
  }
  v20 = 0;
  memset(v19, 0, sizeof(v19));
  result = sub_242ACA914((uint64_t)v19);
  if ((a1 & 0x8000000000000000) == 0)
  {
    v22[0] = 0;
    v22[1] = a1;
    MEMORY[0x24BDAC7A8](result);
    v18[2] = a3;
    v18[3] = a4;
    v18[4] = a5;
    v18[5] = v5;
    v18[6] = a2;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B28);
    v16 = sub_242AA1C14();
    return sub_242A7DAD0((void (*)(char *, uint64_t))sub_242ACA954, (uint64_t)v18, v15, a3, MEMORY[0x24BEE4078], v16, MEMORY[0x24BEE40A8], v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_242AC8194(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a2 + 16;
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1(v3, *(_QWORD *)(a2 + 40));
  sub_242C48158();
  return swift_endAccess();
}

