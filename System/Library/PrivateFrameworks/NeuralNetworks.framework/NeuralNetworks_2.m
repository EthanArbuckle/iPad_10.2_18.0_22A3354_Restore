void sub_242B3F22C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x65756C6176;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x65756C6176;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F29C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 6581857;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 29295;
    else
      v4 = 7499640;
    if (v3 == 1)
      v5 = 0xE200000000000000;
    else
      v5 = 0xE300000000000000;
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 6581857;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 29295;
    else
      v2 = 7499640;
    if (a2 == 1)
      v6 = 0xE200000000000000;
    else
      v6 = 0xE300000000000000;
  }
  else
  {
    v6 = 0xE300000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F34C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 6713957;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x64696F6D676973;
    else
      v4 = 0x4C6552796B61656CLL;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xE900000000000055;
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 6713957;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x64696F6D676973;
    else
      v2 = 0x4C6552796B61656CLL;
    if (a2 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xE900000000000055;
  }
  else
  {
    v6 = 0xE300000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F42C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242B3F47C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3F4E0 + 4 * byte_242C57909[a2]))(0x6D756D696E696DLL);
}

void sub_242B3F4E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x6D756D696E696DLL && v1 == v2)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F554(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242B3F59C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3F618 + 4 * byte_242C57914[a2]))(1935763810);
}

void sub_242B3F618(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 1935763810 && v1 == 0xE400000000000000)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242B3F6A4(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_242B3F6CC + 4 * byte_242C5791A[a1 >> 6]))();
}

uint64_t sub_242B3F6CC()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_242B3F708 + 4 * byte_242C5791E[v0 >> 6]))();
}

BOOL sub_242B3F708@<W0>(int a1@<W8>)
{
  int v1;

  return a1 == v1;
}

void sub_242B3F730(char a1, char a2)
{
  if (qword_242C57940[a1] != qword_242C57940[a2])
    OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B3F78C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x65756C6176;
  else
    v3 = 1702521203;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x65756C6176;
  else
    v5 = 1702521203;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F800(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v2 = 0xEA0000000000657ALL;
  v3 = 0x69536C656E72656BLL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x656469727473;
    else
      v5 = 0x676E6964646170;
    if (v4 == 1)
      v6 = 0xE600000000000000;
    else
      v6 = 0xE700000000000000;
  }
  else
  {
    v5 = 0x69536C656E72656BLL;
    v6 = 0xEA0000000000657ALL;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 0x656469727473;
    else
      v3 = 0x676E6964646170;
    if (a2 == 1)
      v2 = 0xE600000000000000;
    else
      v2 = 0xE700000000000000;
  }
  if (v5 == v3 && v6 == v2)
    OUTLINED_FUNCTION_353();
  else
    OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F8EC()
{
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_213_0();
  __asm { BR              X10 }
}

uint64_t sub_242B3F91C()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_211_0();
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3F974 + 4 * byte_242C57929[v1]))(v0);
}

void sub_242B3F974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_208_1();
  if (v1 == v2 && v0 == 0xE500000000000000)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3F9DC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64656C6C6966;
  else
    v3 = 0;
  if (v2)
    v4 = 0xE000000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x64656C6C6966;
  else
    v5 = 0;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE000000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void sub_242B3FA48(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242B3FA88(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242B3FB30 + 4 * byte_242C57938[a2]))(1818326639);
}

void sub_242B3FB30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 1818326639 && v1 == v2)
    OUTLINED_FUNCTION_100_2();
  else
    OUTLINED_FUNCTION_29_20();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_9();
}

void Tensor.init<A>(repeating:shape:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  _QWORD v20[17];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int v24;
  _OWORD v25[3];
  int v26;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = *v8;
  sub_242A66290(v4, (uint64_t)&v21);
  if (*((_QWORD *)&v22 + 1))
  {
    v25[0] = v21;
    v25[1] = v22;
    v25[2] = v23;
    v26 = v24;
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    sub_242B933C0((uint64_t)v20);
    OUTLINED_FUNCTION_135();
    sub_242A66290((uint64_t)v20, (uint64_t)v25);
    sub_242A5DC30((uint64_t)v20);
    sub_242A662D8((uint64_t)&v21);
  }
  if (qword_2572205A8 != -1)
    swift_once();
  v20[0] = v9;
  v10 = (*(_QWORD *(**)(__int128 *__return_ptr, uint64_t, uint64_t))(v1 + 32))(&v21, v3, v1);
  MEMORY[0x24BDAC7A8](v10);
  sub_242C0484C(v20, &v21, v25, sub_242B490E8);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = OUTLINED_FUNCTION_165_2();
  sub_242A66290((uint64_t)v25, (uint64_t)v20);
  ObjectType = swift_getObjectType();
  v15 = swift_unknownObjectRetain();
  LOBYTE(v21) = 1;
  v16 = sub_242BCBE34(v15, (uint64_t)v20, 0x100000000uLL, v13, ObjectType, v12);
  OUTLINED_FUNCTION_23_2();
  v17 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v17 + 16) = v16;
  OUTLINED_FUNCTION_91();
  sub_242BC995C();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_135();
  sub_242A662D8(v5);
  OUTLINED_FUNCTION_209_1();
  v18 = OUTLINED_FUNCTION_362();
  v19(v18);
  *v7 = v17;
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init<A>(randomUniform:in:seed:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  __n128 v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  os_unfair_lock_s *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  int v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  int v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v52[1] = v6;
  v8 = v7;
  v10 = v9;
  v55 = v11;
  v56 = v12;
  v14 = v13;
  v53 = sub_242C481F4();
  v57 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v52 - v16;
  v52[0] = *v14;
  v54 = v5;
  sub_242A66290(v5, (uint64_t)&v67);
  if (!(_QWORD)v69)
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_104_3();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_243_0((uint64_t)&v63);
    OUTLINED_FUNCTION_153_3();
    OUTLINED_FUNCTION_209_1();
    if ((v8 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    OUTLINED_FUNCTION_22_2();
    v18 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_2_34();
    v19 = *(_QWORD *)(*(_QWORD *)v18 + 16);
    OUTLINED_FUNCTION_0_3();
    v20 = *(_QWORD *)v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v18 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v19)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v20 = v51;
      *(_QWORD *)v18 = v51;
      if (v19)
      {
LABEL_7:
        if (v19 <= *(_QWORD *)(v20 + 16))
        {
          v10 = OUTLINED_FUNCTION_240();
          OUTLINED_FUNCTION_334();
          OUTLINED_FUNCTION_13_0();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_246_0();
  if ((v8 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v22 = sub_242B40ACC(v10);
  OUTLINED_FUNCTION_110_2(v22, v23, v24, v25);
  v26 = *(_QWORD *)(v58 + 16);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_135();
  v62 = v52[0];
  v27 = v55;
  v28 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v17, v55, v53);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v1 + 8) + 32))(&v67, v3);
  sub_242B918C0((uint64_t)v17, (char *)&v67, v3, v1, (uint64_t)&v63);
  v68 = xmmword_242C4CA40;
  v69 = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  OUTLINED_FUNCTION_2_0();
  v29 = OUTLINED_FUNCTION_128_3();
  v35 = sub_242B91B60(v29, v30, v31, v26, v32, v33, v34);
  OUTLINED_FUNCTION_135_3();
  if (!*((_QWORD *)&v59 + 1))
  {
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_195_1();
LABEL_16:
    OUTLINED_FUNCTION_194_1();
    goto LABEL_17;
  }
  v63 = v58;
  v64 = v59;
  v65 = v60;
  v66 = v61;
  sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  v36 = qword_2572205A0;
  OUTLINED_FUNCTION_123_0();
  if (v36 != -1)
    swift_once();
  v37 = (uint64_t *)(qword_25722D2A8 + 16);
  v38 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  OUTLINED_FUNCTION_11();
  os_unfair_lock_lock(v38);
  OUTLINED_FUNCTION_150_3(v37, &v58);
  os_unfair_lock_unlock(v38);
  v39 = v58;
  OUTLINED_FUNCTION_17_1();
  if ((v66 & ~v39) != 0)
  {
    OUTLINED_FUNCTION_204_0();
    goto LABEL_16;
  }
  v58 = v63;
  v59 = v64;
  v60 = v65;
  v61 = v66;
LABEL_17:
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_320();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_165_2();
  v40 = OUTLINED_FUNCTION_2_0();
  LOBYTE(v63) = 1;
  OUTLINED_FUNCTION_119_3(v35, v41, (uint64_t)&v58, 0x100000000, v42, v43, v40);
  v45 = v44;
  OUTLINED_FUNCTION_23_2();
  v46 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v46 + 16) = v45;
  OUTLINED_FUNCTION_11();
  sub_242BC995C();
  OUTLINED_FUNCTION_135_3();
  if (*((_QWORD *)&v59 + 1))
  {
    v63 = v58;
    v64 = v59;
    v65 = v60;
    OUTLINED_FUNCTION_151_3();
    OUTLINED_FUNCTION_264(v47, v48);
    OUTLINED_FUNCTION_302();
    if (!v49)
    {
      OUTLINED_FUNCTION_159_3();
      OUTLINED_FUNCTION_97_4((uint64_t)&v63, v50);
    }
    *(_QWORD *)&v58 = v46;
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_244_0();
    OUTLINED_FUNCTION_204_0();
  }
  else
  {
    OUTLINED_FUNCTION_195_1();
    *(_QWORD *)&v58 = v46;
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_17_1();
  sub_242A662D8(v54);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v27, v28);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_62_10();
  OUTLINED_FUNCTION_158_2(v58);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init<A>(randomNormal:mean:standardDeviation:seed:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  char v46;
  unint64_t v47;
  __n128 v48;
  double v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  _OWORD v85[3];
  int v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;

  OUTLINED_FUNCTION_17_17();
  v24 = v23;
  v78 = v25;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = (uint64_t *)v85;
  v80 = *(_QWORD *)(v23 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_298();
  v76 = *v39;
  v77 = v40;
  sub_242A66290(v40, (uint64_t)&v87);
  if ((_QWORD)v89)
  {
    OUTLINED_FUNCTION_246_0();
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_104_3();
    v36 = (uint64_t *)v85;
    swift_release();
    OUTLINED_FUNCTION_243_0((uint64_t)v85);
    OUTLINED_FUNCTION_153_3();
    OUTLINED_FUNCTION_209_1();
  }
  v79 = v31;
  if ((v27 & 1) == 0)
    goto LABEL_9;
  v74 = v33;
  v41 = v35;
  OUTLINED_FUNCTION_22_2();
  v42 = (char *)OUTLINED_FUNCTION_105_3() + 16;
  OUTLINED_FUNCTION_2_34();
  v43 = *(_QWORD *)(*(_QWORD *)v42 + 16);
  OUTLINED_FUNCTION_0_3();
  v44 = *(_QWORD *)v42;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v42 = v44;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if (v43)
      goto LABEL_7;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_242B4B510();
  v44 = v73;
  *(_QWORD *)v42 = v73;
  if (!v43)
    goto LABEL_23;
LABEL_7:
  if (v43 > *(_QWORD *)(v44 + 16))
  {
LABEL_24:
    __break(1u);
    return;
  }
  v29 = OUTLINED_FUNCTION_240();
  OUTLINED_FUNCTION_334();
  OUTLINED_FUNCTION_13_0();
  v35 = v41;
  v33 = v74;
  v31 = v79;
LABEL_9:
  v75 = v35;
  v46 = sub_242B40ACC(v29);
  OUTLINED_FUNCTION_110_2(v46, v47, v48, v49);
  v50 = *(_QWORD *)(v81 + 16);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_135();
  v84 = v76;
  OUTLINED_FUNCTION_273_0(v22, v33);
  OUTLINED_FUNCTION_273_0(v21, v31);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(a21 + 8) + 32))(&v87, v24);
  sub_242B91960(v22, v21, (char *)&v87, v24, a21, v85);
  v88 = xmmword_242C4CA40;
  v89 = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  OUTLINED_FUNCTION_2_0();
  v51 = OUTLINED_FUNCTION_128_3();
  v57 = sub_242B91B60(v51, v52, v53, v50, v54, v55, v56);
  OUTLINED_FUNCTION_135_3();
  if (*((_QWORD *)&v82 + 1))
  {
    OUTLINED_FUNCTION_236_0();
    sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
    v58 = qword_2572205A0;
    OUTLINED_FUNCTION_158_0();
    if (v58 != -1)
      swift_once();
    v36 = &v74;
    v59 = (uint64_t *)(qword_25722D2A8 + 16);
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_361();
    OUTLINED_FUNCTION_150_3(v59, &v81);
    OUTLINED_FUNCTION_360();
    v60 = v81;
    OUTLINED_FUNCTION_17_1();
    if ((v86 & ~v60) != 0)
    {
      OUTLINED_FUNCTION_204_0();
      OUTLINED_FUNCTION_284();
    }
    else
    {
      OUTLINED_FUNCTION_196_1();
    }
  }
  else
  {
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_195_1();
    OUTLINED_FUNCTION_194_1();
  }
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_320();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_165_2();
  v61 = OUTLINED_FUNCTION_2_0();
  LOBYTE(v85[0]) = 1;
  OUTLINED_FUNCTION_119_3(v57, v62, (uint64_t)&v81, 0x100000000, v63, v64, v61);
  v66 = v65;
  OUTLINED_FUNCTION_23_2();
  v67 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v67 + 16) = v66;
  swift_retain();
  sub_242BC995C();
  OUTLINED_FUNCTION_135_3();
  if (*((_QWORD *)&v82 + 1))
  {
    v85[0] = v81;
    v85[1] = v82;
    *((_OWORD *)v36 + 2) = v83;
    OUTLINED_FUNCTION_151_3();
    OUTLINED_FUNCTION_264(v68, v69);
    OUTLINED_FUNCTION_302();
    if (!v70)
    {
      OUTLINED_FUNCTION_159_3();
      OUTLINED_FUNCTION_97_4((uint64_t)v85, v71);
    }
    *(_QWORD *)&v81 = v67;
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_244_0();
    OUTLINED_FUNCTION_204_0();
    OUTLINED_FUNCTION_19_5();
    swift_release();
    v72 = v81;
  }
  else
  {
    OUTLINED_FUNCTION_195_1();
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_19_5();
    swift_release();
    v72 = v67;
  }
  sub_242A662D8(v77);
  OUTLINED_FUNCTION_269_0(v79);
  OUTLINED_FUNCTION_269_0(v33);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_62_10();
  *v75 = v72;
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init<A>(randomTruncatedNormal:mean:standardDeviation:seed:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  char v46;
  unint64_t v47;
  __n128 v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  _OWORD v88[3];
  int v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  int v93;
  _OWORD v94[3];
  int v95;

  OUTLINED_FUNCTION_17_17();
  v24 = v23;
  v81 = v26;
  v82 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v80 = v33;
  v83 = *(_QWORD *)(v23 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_268_0();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v77 - v37;
  v40 = *v39;
  v79 = v41;
  sub_242A66290(v41, (uint64_t)v94);
  if (*((_QWORD *)&v94[1] + 1))
  {
    v90 = v94[0];
    v91 = v94[1];
    v92 = v94[2];
    v93 = v95;
    if ((v28 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    v78 = v32;
    OUTLINED_FUNCTION_22_2();
    v42 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_2_34();
    v43 = *(_QWORD *)(*(_QWORD *)v42 + 16);
    OUTLINED_FUNCTION_0_3();
    v44 = *(_QWORD *)v42;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v42 = v44;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v43)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v44 = v76;
      *(_QWORD *)v42 = v76;
      if (v43)
      {
LABEL_7:
        if (v43 <= *(_QWORD *)(v44 + 16))
        {
          v30 = OUTLINED_FUNCTION_240();
          OUTLINED_FUNCTION_334();
          OUTLINED_FUNCTION_50_0();
          v32 = v78;
          goto LABEL_9;
        }
LABEL_24:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_243_0((uint64_t)v88);
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_209_1();
  if ((v28 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v46 = sub_242B40ACC(v30);
  OUTLINED_FUNCTION_110_2(v46, v47, v48, v49);
  v50 = *(_QWORD *)(v84 + 16);
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_135();
  v87 = v40;
  v51 = v80;
  OUTLINED_FUNCTION_273_0((uint64_t)v38, v80);
  OUTLINED_FUNCTION_273_0(v22, v32);
  (*(void (**)(_OWORD *__return_ptr, uint64_t))(*(_QWORD *)(a21 + 8) + 32))(v94, v24);
  sub_242B48FC8(v24, a21);
  sub_242B91A0C((uint64_t)v38, v22, v21, (char *)v94, v24, a21, v88);
  v52 = (uint64_t *)v88;
  *(_OWORD *)((char *)v94 + 8) = xmmword_242C4CA40;
  *(_OWORD *)((char *)&v94[1] + 8) = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  OUTLINED_FUNCTION_2_0();
  v53 = OUTLINED_FUNCTION_128_3();
  v59 = sub_242B91B60(v53, v54, v55, v50, v56, v57, v58);
  OUTLINED_FUNCTION_135_3();
  if (*((_QWORD *)&v85 + 1))
  {
    v60 = v32;
    OUTLINED_FUNCTION_236_0();
    sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
    v61 = qword_2572205A0;
    OUTLINED_FUNCTION_158_0();
    if (v61 != -1)
      swift_once();
    v52 = &v77;
    v62 = (uint64_t *)(qword_25722D2A8 + 16);
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_361();
    OUTLINED_FUNCTION_150_3(v62, &v84);
    OUTLINED_FUNCTION_360();
    v63 = v84;
    OUTLINED_FUNCTION_17_1();
    if ((v89 & ~v63) != 0)
    {
      OUTLINED_FUNCTION_204_0();
      OUTLINED_FUNCTION_284();
    }
    else
    {
      OUTLINED_FUNCTION_196_1();
    }
  }
  else
  {
    v60 = v32;
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_195_1();
    OUTLINED_FUNCTION_194_1();
  }
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_320();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_165_2();
  v64 = OUTLINED_FUNCTION_2_0();
  LOBYTE(v88[0]) = 1;
  OUTLINED_FUNCTION_119_3(v59, v65, (uint64_t)&v84, 0x100000000, v66, v67, v64);
  v69 = v68;
  OUTLINED_FUNCTION_23_2();
  v70 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v70 + 16) = v69;
  OUTLINED_FUNCTION_11();
  sub_242BC995C();
  OUTLINED_FUNCTION_135_3();
  if (*((_QWORD *)&v85 + 1))
  {
    v88[0] = v84;
    v88[1] = v85;
    *((_OWORD *)v52 + 2) = v86;
    OUTLINED_FUNCTION_151_3();
    OUTLINED_FUNCTION_264(v71, v72);
    OUTLINED_FUNCTION_302();
    if (!v73)
    {
      OUTLINED_FUNCTION_159_3();
      OUTLINED_FUNCTION_97_4((uint64_t)v88, v74);
    }
    *(_QWORD *)&v84 = v70;
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_244_0();
    OUTLINED_FUNCTION_204_0();
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_17_1();
    v75 = v84;
  }
  else
  {
    OUTLINED_FUNCTION_195_1();
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_17_1();
    v75 = v70;
  }
  sub_242A662D8(v79);
  OUTLINED_FUNCTION_269_0(v60);
  OUTLINED_FUNCTION_269_0(v51);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_62_10();
  *v81 = v75;
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B40ACC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  uint64_t v6;

  sub_242A5E098();
  v3 = v2;
  for (i = 0; i != 64; i += 8)
  {
    v5 = *(_QWORD *)(v3 + 16);
    if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      sub_242A5E098();
      v3 = v6;
    }
    *(_QWORD *)(v3 + 16) = v5 + 1;
    *(_BYTE *)(v3 + v5 + 32) = a1 >> i;
  }
  return sub_242AC83F8(v3);
}

uint64_t sub_242B40B60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  if (!v1)
    return 0;
  result = a1[4];
  v4 = v1 - 1;
  if (v1 != 1)
  {
    v5 = a1 + 5;
    do
    {
      v7 = *v5++;
      v6 = v7;
      if (result <= v7)
        result = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_242B40BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v3 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1) + 16);
  swift_bridgeObjectRelease();
  return v3;
}

void Tensor.init<A>(shape:scalars:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[6];
  char v20;
  _QWORD v21[2];
  _QWORD v22[7];

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = *v8;
  v10 = *(_QWORD *)(*v8 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v9 + 32);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v10)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_10;
  }
  v14 = 1;
LABEL_7:
  if (v14 != OUTLINED_FUNCTION_281_0())
  {
LABEL_10:
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_37_20();
    if (*(_QWORD *)(v9 + 16))
    {
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v18)
          break;
        OUTLINED_FUNCTION_358();
        if (v18)
          goto LABEL_15;
      }
      __break(1u);
    }
LABEL_15:
    OUTLINED_FUNCTION_306();
    sub_242C48314();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_103_3();
    v19[0] = OUTLINED_FUNCTION_281_0();
    OUTLINED_FUNCTION_306();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = OUTLINED_FUNCTION_218_1(AssociatedTypeWitness, (uint64_t)v22);
  MEMORY[0x24BDAC7A8](v16);
  v21[0] = v9;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v1 + 32))(&v20, AssociatedTypeWitness, v1);
  sub_242A66290((uint64_t)v22, (uint64_t)v19);
  Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)v21, (uint64_t)&v20, (uint64_t)v19, (uint64_t)sub_242B4E414);
  sub_242A662D8((uint64_t)v22);
  v17 = v21[1];
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_51_8(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  *v7 = v17;
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B40E20(unsigned int a1, int a2)
{
  return a2 & a1;
}

uint64_t sub_242B40E28(uint64_t result)
{
  _DWORD *v1;

  *v1 &= result;
  return result;
}

BOOL sub_242B40E38(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_242B40E44(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_242B40E50()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_34();
  v1 = *(_QWORD *)(v0 + 40);
  if (!(v1 >> 62))
    return *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_253_0();
  v2 = sub_242C48FC8();
  OUTLINED_FUNCTION_4_0();
  return v2;
}

uint64_t sub_242B40EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
  if (v3 >> 62)
    v4 = sub_242C48FC8();
  else
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_242B40F20(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, float a9, float a10)
{
  uint64_t v10;
  uint64_t v18;

  if (!a3)
    a1 = sub_242BD0204(0x746F685F656E6FLL, 0xE700000000000000);
  *(_DWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  v18 = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 80) = v18;
  *(_QWORD *)(v10 + 88) = &protocol witness table for Float;
  *(float *)(v10 + 56) = a9;
  *(_QWORD *)(v10 + 120) = v18;
  *(_QWORD *)(v10 + 128) = &protocol witness table for Float;
  *(float *)(v10 + 96) = a10;
  *(_QWORD *)(v10 + 136) = a6;
  *(_BYTE *)(v10 + 144) = a7;
  sub_242B4F25C(a8, v10 + 152, &qword_257220B30);
  return v10;
}

void sub_242B40FD4(void (*a1)(uint64_t *__return_ptr, os_unfair_lock_s *), uint64_t a2, os_unfair_lock_s *a3)
{
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = a3 + 4;
  v5 = a3 + 6;
  os_unfair_lock_lock(a3 + 6);
  a1(&v6, v4);
  os_unfair_lock_unlock(v5);
}

void Tensor.init(coercing:scalarType:on:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _WORD *v41;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  _WORD *v52;
  uint64_t *v53;
  int v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int16 v100;
  char v101;
  char v102;
  _BYTE *v103;
  float v104;
  uint64_t v105;
  int v106;
  char v107;
  char v108;
  _BYTE *v109;
  float v110;
  uint64_t v111;
  uint64_t v112;
  float v113;
  uint64_t v114;
  _BYTE *v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  float v119;
  uint64_t v120;
  uint64_t v121;
  float v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  float v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  __int16 v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t *v163;
  int v164;
  uint64_t v165;
  _BYTE *v166;
  float v167;
  int v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  float v174;
  uint64_t v175;
  float v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  double v182;
  uint64_t v183;
  float v184;
  uint64_t v185;
  float v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  double v193;
  uint64_t v194;
  float v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  double v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t *v228;
  uint64_t *v229;
  uint64_t *v230;
  uint64_t *v231;
  _QWORD *v232;
  uint64_t v233;
  __int128 v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD v240[3];
  uint64_t v241;
  _QWORD *v242;
  __int128 v243[3];
  __int128 v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247[3];
  uint64_t v248;
  _QWORD v249[6];

  OUTLINED_FUNCTION_178_1();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = (uint64_t *)v7;
  v10 = v9;
  sub_242A587A8(v7, (uint64_t)v249);
  if (v6)
  {
    v233 = v4;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_177_1(v249);
    v233 = v249[4];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
  v11 = sub_242C48A64();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v226 - v13);
  if (OUTLINED_FUNCTION_177_1(v8) == v6)
  {
    OUTLINED_FUNCTION_56_11();
    v16 = &qword_257221F30;
LABEL_50:
    __swift_instantiateConcreteTypeFromMangledName(v16);
    v78 = OUTLINED_FUNCTION_44_8();
    OUTLINED_FUNCTION_117_1(v78);
    goto LABEL_51;
  }
  if (OUTLINED_FUNCTION_138_3())
  {
    OUTLINED_FUNCTION_56_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v15 = 0;
      LOWORD(_S8) = v234;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
        sub_242A64518(&v234, (uint64_t)v240);
        v232 = v10;
        v10 = v242;
        __swift_project_boxed_opaque_existential_1(v240, v241);
        v230 = v8;
        v231 = (uint64_t *)v6;
        v6 = v2;
        v2 = v12;
        v12 = v11;
        v14 = &v226;
        OUTLINED_FUNCTION_94_4();
        MEMORY[0x24BDAC7A8](v21);
        OUTLINED_FUNCTION_87_4(v22, v23, v226);
        OUTLINED_FUNCTION_163_2();
        sub_242B4EC58();
        OUTLINED_FUNCTION_199_0();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
        if (!OUTLINED_FUNCTION_0_67())
        {
          if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
          {
            v15 = 0;
            _S0 = (float)v234;
            __asm { FCVT            H8, S0 }
          }
          else
          {
            LOWORD(_S8) = 0;
            v15 = 1;
          }
          goto LABEL_49;
        }
        v228 = (uint64_t *)v12;
        v229 = &v226;
        v230 = v14;
        v232 = v10;
        sub_242A64518(&v234, (uint64_t)v240);
        v24 = __swift_project_boxed_opaque_existential_1(v240, v241);
        OUTLINED_FUNCTION_145_3((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, v226);
        MEMORY[0x24BDAC7A8](v32);
        OUTLINED_FUNCTION_98_3(v33, v34, v226);
        if (OUTLINED_FUNCTION_112_3() <= 64)
        {
          v227 = (uint64_t *)v2;
          v62 = OUTLINED_FUNCTION_122_3();
          v63 = OUTLINED_FUNCTION_131_3();
          OUTLINED_FUNCTION_106_3();
          if ((v62 & 1) != 0)
            _S0 = (float)v63;
          else
            _S0 = (float)(unint64_t)v63;
          __asm { FCVT            H8, S0 }
          v10 = v232;
          v2 = (uint64_t)v227;
        }
        else
        {
          sub_242AF3280();
          sub_242AF32BC();
          OUTLINED_FUNCTION_120_3();
          OUTLINED_FUNCTION_106_3();
          LOWORD(_S8) = v238;
          v10 = v232;
        }
        v14 = v230;
        v12 = (uint64_t)v228;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
      v15 = 0;
    }
LABEL_49:
    OUTLINED_FUNCTION_245_0();
    LOWORD(v243[0]) = LOWORD(_S8);
    BYTE2(v243[0]) = v15;
    v16 = (uint64_t *)&unk_257225470;
    goto LABEL_50;
  }
  v17 = OUTLINED_FUNCTION_138_3();
  if (v17)
  {
    OUTLINED_FUNCTION_102_1(v17, (uint64_t)v240);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    v18 = OUTLINED_FUNCTION_1_52();
    v232 = v10;
    if ((v18 & 1) != 0)
    {
      v19 = 0;
      LOWORD(v20) = v243[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224040);
      if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
      {
        sub_242AC517C(v243, &v234);
        v231 = (uint64_t *)v236;
        v229 = v237;
        __swift_project_boxed_opaque_existential_1(&v234, v235);
        v230 = v14;
        v228 = &v226;
        OUTLINED_FUNCTION_94_4();
        MEMORY[0x24BDAC7A8](v36);
        v19 = (char)v8;
        v8 = &v226;
        OUTLINED_FUNCTION_86_4(v38, (v37 + 15) & 0xFFFFFFFFFFFFFFF0);
        v39 = OUTLINED_FUNCTION_198_1();
        BFloat16.init<A>(_:)(v39, v40, v41);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257224038);
        if (!OUTLINED_FUNCTION_1_52())
        {
          if (OUTLINED_FUNCTION_1_52())
          {
            v19 = 0;
            v20 = HIWORD(COERCE_UNSIGNED_INT((float)LOBYTE(v243[0])));
          }
          else
          {
            LOWORD(v20) = 0;
            v19 = 1;
          }
          goto LABEL_27;
        }
        sub_242AC517C(v243, &v234);
        v231 = (uint64_t *)v236;
        v229 = v237;
        __swift_project_boxed_opaque_existential_1(&v234, v235);
        v230 = v14;
        v228 = &v226;
        OUTLINED_FUNCTION_94_4();
        MEMORY[0x24BDAC7A8](v46);
        v19 = (char)v8;
        v8 = &v226;
        OUTLINED_FUNCTION_86_4(v48, (v47 + 15) & 0xFFFFFFFFFFFFFFF0);
        v49 = OUTLINED_FUNCTION_198_1();
        BFloat16.init<A>(_:)(v49, v50, v51, v52);
      }
      v14 = v230;
      LOWORD(v20) = v238;
      OUTLINED_FUNCTION_57_15((uint64_t)&v234);
    }
LABEL_27:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
    LOWORD(v243[0]) = v20;
    BYTE2(v243[0]) = v19;
    v53 = (uint64_t *)&unk_257228420;
LABEL_28:
    __swift_instantiateConcreteTypeFromMangledName(v53);
    v54 = OUTLINED_FUNCTION_44_8();
    OUTLINED_FUNCTION_117_1(v54);
    v10 = v232;
    goto LABEL_51;
  }
  if (OUTLINED_FUNCTION_138_3())
  {
    OUTLINED_FUNCTION_56_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      LOBYTE(v35) = 0;
      _S8 = *(float *)&v234;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
        sub_242A64518(&v234, (uint64_t)v240);
        v232 = v10;
        v10 = v242;
        __swift_project_boxed_opaque_existential_1(v240, v241);
        v230 = v8;
        v231 = (uint64_t *)v6;
        v6 = v2;
        v2 = v12;
        v12 = v11;
        v14 = &v226;
        OUTLINED_FUNCTION_94_4();
        MEMORY[0x24BDAC7A8](v57);
        OUTLINED_FUNCTION_87_4(v58, v59, v226);
        v60 = OUTLINED_FUNCTION_163_2();
        sub_242B4B5B0(v60, v61);
        OUTLINED_FUNCTION_199_0();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
        LOBYTE(v35) = 0;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
        if (OUTLINED_FUNCTION_0_67())
        {
          v228 = (uint64_t *)v12;
          v229 = &v226;
          v230 = v14;
          v232 = v10;
          sub_242A64518(&v234, (uint64_t)v240);
          v12 = v241;
          v10 = v242;
          v65 = __swift_project_boxed_opaque_existential_1(v240, v241);
          OUTLINED_FUNCTION_145_3((uint64_t)v65, v66, v67, v68, v69, v70, v71, v72, v226);
          MEMORY[0x24BDAC7A8](v73);
          OUTLINED_FUNCTION_98_3(v74, v75, v226);
          if (OUTLINED_FUNCTION_112_3() <= 64)
          {
            v101 = OUTLINED_FUNCTION_122_3();
            v227 = (uint64_t *)v2;
            v102 = v101;
            v35 = OUTLINED_FUNCTION_131_3();
            OUTLINED_FUNCTION_106_3();
            _ZF = (v102 & 1) == 0;
            v2 = (uint64_t)v227;
            if (_ZF)
              _S8 = (float)(unint64_t)v35;
            else
              _S8 = (float)v35;
          }
          else
          {
            LOBYTE(v35) = sub_242A77290();
            sub_242B4E430();
            OUTLINED_FUNCTION_120_3();
            OUTLINED_FUNCTION_106_3();
            _S8 = *(float *)&v238;
          }
          OUTLINED_FUNCTION_332();
        }
        else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          LOBYTE(v35) = 0;
          _S8 = (float)v234;
        }
        else
        {
          _S8 = 0.0;
          LOBYTE(v35) = 1;
        }
      }
    }
    OUTLINED_FUNCTION_245_0();
    *(float *)v243 = _S8;
    BYTE4(v243[0]) = v35;
    v16 = (uint64_t *)&unk_257228418;
    goto LABEL_50;
  }
  if (OUTLINED_FUNCTION_138_3())
  {
    OUTLINED_FUNCTION_56_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      LOBYTE(v55) = 0;
      v56 = *(double *)&v234;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
        sub_242A64518(&v234, (uint64_t)v240);
        v232 = v10;
        v10 = v242;
        __swift_project_boxed_opaque_existential_1(v240, v241);
        v230 = v8;
        v231 = (uint64_t *)v6;
        OUTLINED_FUNCTION_94_4();
        MEMORY[0x24BDAC7A8](v84);
        OUTLINED_FUNCTION_87_4(v85, v86, v226);
        v87 = OUTLINED_FUNCTION_163_2();
        v56 = sub_242B4E5D4(v87, v88);
        v8 = v230;
        v6 = (uint64_t)v231;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
        LOBYTE(v55) = 0;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
        if (OUTLINED_FUNCTION_0_67())
        {
          v228 = (uint64_t *)v12;
          v229 = &v226;
          v230 = v14;
          v232 = v10;
          sub_242A64518(&v234, (uint64_t)v240);
          v12 = v241;
          v10 = v242;
          v89 = __swift_project_boxed_opaque_existential_1(v240, v241);
          OUTLINED_FUNCTION_145_3((uint64_t)v89, v90, v91, v92, v93, v94, v95, v96, v226);
          MEMORY[0x24BDAC7A8](v97);
          OUTLINED_FUNCTION_98_3(v98, v99, v226);
          if (OUTLINED_FUNCTION_112_3() <= 64)
          {
            v107 = OUTLINED_FUNCTION_122_3();
            v227 = (uint64_t *)v2;
            v108 = v107;
            v55 = OUTLINED_FUNCTION_131_3();
            OUTLINED_FUNCTION_106_3();
            _ZF = (v108 & 1) == 0;
            v2 = (uint64_t)v227;
            if (_ZF)
              v56 = (double)(unint64_t)v55;
            else
              v56 = (double)v55;
          }
          else
          {
            LOBYTE(v55) = sub_242AC5140();
            sub_242AC5194();
            OUTLINED_FUNCTION_120_3();
            OUTLINED_FUNCTION_106_3();
            v56 = *(double *)&v238;
          }
          OUTLINED_FUNCTION_332();
        }
        else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          LOBYTE(v55) = 0;
          v56 = (double)v234;
        }
        else
        {
          v56 = 0.0;
          LOBYTE(v55) = 1;
        }
      }
    }
    OUTLINED_FUNCTION_245_0();
    *(double *)v243 = v56;
    BYTE8(v243[0]) = v55;
    v16 = (uint64_t *)&unk_257228410;
    goto LABEL_50;
  }
  v76 = OUTLINED_FUNCTION_138_3();
  v232 = v10;
  if (v76)
  {
    OUTLINED_FUNCTION_56_11();
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
LABEL_44:
      OUTLINED_FUNCTION_160_3();
LABEL_68:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v243);
      LOBYTE(v243[0]) = v77;
      BYTE1(v243[0]) = (_BYTE)v10;
      v53 = (uint64_t *)&unk_257228400;
      goto LABEL_28;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v77 = OUTLINED_FUNCTION_70_10();
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_68;
    }
    if (OUTLINED_FUNCTION_0_67())
    {
      v103 = (_BYTE *)OUTLINED_FUNCTION_81_6();
      sub_242B4B03C(v103, v104);
      if ((BYTE1(v234) & 1) == 0)
        goto LABEL_44;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v105;
      OUTLINED_FUNCTION_15_30();
      goto LABEL_107;
    }
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v109 = (_BYTE *)OUTLINED_FUNCTION_142_3();
      sub_242B4AE88(v109, v110);
      if ((BYTE1(v234) & 1) == 0)
        goto LABEL_44;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v111;
      OUTLINED_FUNCTION_25_27();
      goto LABEL_107;
    }
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v115 = (_BYTE *)OUTLINED_FUNCTION_140_1();
      sub_242B4ACD4(v115, v116);
      if ((BYTE1(v234) & 1) == 0)
        goto LABEL_44;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v117;
      OUTLINED_FUNCTION_24_28();
LABEL_107:
      sub_242C48314();
      OUTLINED_FUNCTION_13_37();
      OUTLINED_FUNCTION_314();
      goto LABEL_327;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
    if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
    {
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        OUTLINED_FUNCTION_133_2();
        goto LABEL_68;
      }
      goto LABEL_44;
    }
    v229 = &v226;
    v230 = v14;
    v227 = (uint64_t *)v2;
    sub_242A64518(&v234, (uint64_t)v240);
    LOBYTE(v10) = v241;
    __swift_project_boxed_opaque_existential_1(v240, v241);
    OUTLINED_FUNCTION_65_11();
    MEMORY[0x24BDAC7A8](v125);
    v127 = (char *)&v226 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
    OUTLINED_FUNCTION_2_33((uint64_t)v127, v128, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    sub_242B4E598();
    OUTLINED_FUNCTION_28_27();
    if ((v238 & 0x100) == 0)
    {
      OUTLINED_FUNCTION_7_24((uint64_t)v127, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      v77 = v238;
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      v2 = (uint64_t)v227;
      v14 = v230;
      goto LABEL_68;
    }
    v238 = OUTLINED_FUNCTION_12_32();
    v239 = v216;
    OUTLINED_FUNCTION_40_18();
    OUTLINED_FUNCTION_91_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_13_37();
    OUTLINED_FUNCTION_314();
LABEL_327:
    sub_242C48314();
    OUTLINED_FUNCTION_14_14();
    sub_242C48314();
    OUTLINED_FUNCTION_354();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
  if (OUTLINED_FUNCTION_138_3())
  {
    OUTLINED_FUNCTION_56_11();
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      goto LABEL_65;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v100 = OUTLINED_FUNCTION_70_10();
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_85;
    }
    if (OUTLINED_FUNCTION_0_67())
    {
      v112 = OUTLINED_FUNCTION_81_6();
      sub_242B4AB54(v112, v113);
      if ((BYTE2(v234) & 1) == 0)
        goto LABEL_65;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v114;
      OUTLINED_FUNCTION_15_30();
    }
    else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v118 = OUTLINED_FUNCTION_142_3();
      sub_242B4A9A0(v118, v119);
      if ((BYTE2(v234) & 1) == 0)
        goto LABEL_65;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v120;
      OUTLINED_FUNCTION_25_27();
    }
    else
    {
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        OUTLINED_FUNCTION_311();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          sub_242A64518(&v234, (uint64_t)v240);
          LOBYTE(v10) = v241;
          __swift_project_boxed_opaque_existential_1(v240, v241);
          v229 = &v226;
          OUTLINED_FUNCTION_65_11();
          MEMORY[0x24BDAC7A8](v139);
          v141 = (char *)&v226 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0);
          OUTLINED_FUNCTION_2_33((uint64_t)v141, v142, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242B4E55C();
          OUTLINED_FUNCTION_28_27();
          if ((v238 & 0x10000) != 0)
          {
            v238 = OUTLINED_FUNCTION_12_32();
            v239 = v217;
            OUTLINED_FUNCTION_40_18();
            OUTLINED_FUNCTION_91_2();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_13_37();
            OUTLINED_FUNCTION_185_1();
            goto LABEL_327;
          }
          OUTLINED_FUNCTION_7_24((uint64_t)v141, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
          v100 = v238;
          OUTLINED_FUNCTION_57_15((uint64_t)v240);
        }
        else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          OUTLINED_FUNCTION_160_3();
        }
        else
        {
          OUTLINED_FUNCTION_133_2();
        }
        v2 = (uint64_t)v14;
        OUTLINED_FUNCTION_267_0();
LABEL_85:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v243);
        LOWORD(v243[0]) = v100;
        BYTE2(v243[0]) = (_BYTE)v10;
        v53 = (uint64_t *)&unk_2572283F0;
        goto LABEL_28;
      }
      v129 = OUTLINED_FUNCTION_140_1();
      sub_242B4A7EC(v129, v130);
      if ((BYTE2(v234) & 1) == 0)
      {
LABEL_65:
        LOBYTE(v10) = 0;
        v100 = v234;
        goto LABEL_85;
      }
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v131;
      OUTLINED_FUNCTION_24_28();
    }
    sub_242C48314();
    OUTLINED_FUNCTION_13_37();
    OUTLINED_FUNCTION_185_1();
    goto LABEL_327;
  }
  if (OUTLINED_FUNCTION_138_3())
  {
    OUTLINED_FUNCTION_56_11();
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
LABEL_82:
      LOBYTE(v10) = 0;
      v106 = v234;
LABEL_103:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v243);
      LODWORD(v243[0]) = v106;
      BYTE4(v243[0]) = (_BYTE)v10;
      v53 = (uint64_t *)&unk_257225458;
      goto LABEL_28;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v106 = OUTLINED_FUNCTION_70_10();
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_103;
    }
    if (OUTLINED_FUNCTION_0_67())
    {
      v121 = OUTLINED_FUNCTION_81_6();
      sub_242B4A678(v121, v122);
      if ((BYTE4(v234) & 1) == 0)
        goto LABEL_82;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v123;
      OUTLINED_FUNCTION_15_30();
    }
    else
    {
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        OUTLINED_FUNCTION_311();
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          v143 = OUTLINED_FUNCTION_140_1();
          sub_242B4A3C0(v143, v144);
          if ((BYTE4(v234) & 1) != 0)
          {
            *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
            *((_QWORD *)&v234 + 1) = v218;
            OUTLINED_FUNCTION_24_28();
            goto LABEL_326;
          }
          LOBYTE(v10) = 0;
          v106 = v234;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
          if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
          {
            sub_242A64518(&v234, (uint64_t)v240);
            LOBYTE(v10) = v241;
            __swift_project_boxed_opaque_existential_1(v240, v241);
            v229 = &v226;
            OUTLINED_FUNCTION_65_11();
            MEMORY[0x24BDAC7A8](v148);
            v150 = (char *)&v226 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0);
            OUTLINED_FUNCTION_2_33((uint64_t)v150, v151, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
            sub_242AF3244();
            OUTLINED_FUNCTION_28_27();
            if ((v238 & 0x100000000) != 0)
            {
              v238 = OUTLINED_FUNCTION_12_32();
              v239 = v219;
              OUTLINED_FUNCTION_40_18();
              OUTLINED_FUNCTION_91_2();
              OUTLINED_FUNCTION_34();
              OUTLINED_FUNCTION_13_37();
              OUTLINED_FUNCTION_186_1();
              goto LABEL_327;
            }
            OUTLINED_FUNCTION_7_24((uint64_t)v150, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
            v106 = v238;
            OUTLINED_FUNCTION_57_15((uint64_t)v240);
          }
          else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
          {
            OUTLINED_FUNCTION_160_3();
          }
          else
          {
            OUTLINED_FUNCTION_133_2();
          }
        }
        v2 = (uint64_t)v14;
        OUTLINED_FUNCTION_267_0();
        goto LABEL_103;
      }
      v132 = OUTLINED_FUNCTION_142_3();
      sub_242B4A548(v132, v133);
      if ((BYTE4(v234) & 1) == 0)
        goto LABEL_82;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v134;
      OUTLINED_FUNCTION_25_27();
    }
LABEL_326:
    sub_242C48314();
    OUTLINED_FUNCTION_13_37();
    OUTLINED_FUNCTION_186_1();
    goto LABEL_327;
  }
  if (OUTLINED_FUNCTION_138_3())
  {
    OUTLINED_FUNCTION_56_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      OUTLINED_FUNCTION_337();
LABEL_168:
      OUTLINED_FUNCTION_289();
      v53 = (uint64_t *)&unk_2572283E0;
      goto LABEL_28;
    }
    v229 = &v226;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      OUTLINED_FUNCTION_22_22();
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_168;
    }
    v228 = (uint64_t *)v12;
    v231 = (uint64_t *)v11;
    if (OUTLINED_FUNCTION_0_67())
    {
      OUTLINED_FUNCTION_189_0();
      if ((BYTE8(v234) & 1) != 0)
      {
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v135;
        OUTLINED_FUNCTION_15_30();
LABEL_330:
        sub_242C48314();
        OUTLINED_FUNCTION_13_37();
        OUTLINED_FUNCTION_188_1();
        goto LABEL_327;
      }
    }
    else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      OUTLINED_FUNCTION_274_0();
      if ((BYTE8(v234) & 1) != 0)
      {
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v145;
        OUTLINED_FUNCTION_25_27();
        goto LABEL_330;
      }
    }
    else
    {
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          sub_242A64518(&v234, (uint64_t)v240);
          v157 = __swift_project_boxed_opaque_existential_1(v240, v241);
          v230 = &v226;
          MEMORY[0x24BDAC7A8](v157);
          OUTLINED_FUNCTION_4_9();
          v160 = v159 - v158;
          v227 = (uint64_t *)v161;
          (*(void (**)(uint64_t))(v161 + 16))(v159 - v158);
          sub_242B4E520();
          sub_242C48ED8();
          if ((v239 & 1) != 0)
          {
            v238 = OUTLINED_FUNCTION_12_32();
            v239 = v221;
            sub_242C494F0();
            OUTLINED_FUNCTION_91_2();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_13_37();
            OUTLINED_FUNCTION_188_1();
            goto LABEL_327;
          }
          OUTLINED_FUNCTION_84_2(v160, (uint64_t (*)(uint64_t, uint64_t))v227[1]);
          OUTLINED_FUNCTION_57_15((uint64_t)v240);
        }
        else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          OUTLINED_FUNCTION_160_3();
        }
        else
        {
          OUTLINED_FUNCTION_220_1();
        }
        goto LABEL_167;
      }
      OUTLINED_FUNCTION_270();
      if ((BYTE8(v234) & 1) != 0)
      {
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v220;
        OUTLINED_FUNCTION_24_28();
        goto LABEL_330;
      }
    }
    OUTLINED_FUNCTION_337();
LABEL_167:
    v12 = (uint64_t)v228;
    goto LABEL_168;
  }
  if (OUTLINED_FUNCTION_138_3())
  {
    OUTLINED_FUNCTION_56_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v124 = v10;
      LOBYTE(v10) = 0;
      v229 = (uint64_t *)v234;
LABEL_194:
      OUTLINED_FUNCTION_245_0();
      *(_QWORD *)&v243[0] = v229;
      BYTE8(v243[0]) = (_BYTE)v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572283D0);
      v164 = OUTLINED_FUNCTION_44_8();
      OUTLINED_FUNCTION_117_1(v164);
      v10 = v124;
      goto LABEL_51;
    }
    v228 = (uint64_t *)v12;
    v230 = v14;
    v231 = (uint64_t *)v11;
    v12 = (uint64_t)v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v229 = (uint64_t *)OUTLINED_FUNCTION_22_22();
LABEL_142:
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
LABEL_193:
      v124 = (_QWORD *)v12;
      OUTLINED_FUNCTION_267_0();
      goto LABEL_194;
    }
    if (OUTLINED_FUNCTION_0_67())
    {
      OUTLINED_FUNCTION_190_0();
      if ((BYTE8(v234) & 1) != 0)
      {
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v146;
        OUTLINED_FUNCTION_15_30();
LABEL_333:
        sub_242C48314();
        OUTLINED_FUNCTION_13_37();
        OUTLINED_FUNCTION_364();
        goto LABEL_327;
      }
    }
    else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      OUTLINED_FUNCTION_275_0();
      if ((BYTE8(v234) & 1) != 0)
      {
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v154;
        OUTLINED_FUNCTION_25_27();
        goto LABEL_333;
      }
    }
    else
    {
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          sub_242A64518(&v234, (uint64_t)v240);
          LOBYTE(v10) = v241;
          v169 = __swift_project_boxed_opaque_existential_1(v240, v241);
          v227 = &v226;
          MEMORY[0x24BDAC7A8](v169);
          OUTLINED_FUNCTION_47_13();
          v14 = (uint64_t *)v170;
          OUTLINED_FUNCTION_2_33((uint64_t)&v226, v171, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v170 + 16));
          sub_242B4E4E4();
          OUTLINED_FUNCTION_28_27();
          if ((v239 & 1) != 0)
          {
            v238 = OUTLINED_FUNCTION_12_32();
            v239 = v223;
            OUTLINED_FUNCTION_40_18();
            OUTLINED_FUNCTION_91_2();
            OUTLINED_FUNCTION_34();
            OUTLINED_FUNCTION_13_37();
            OUTLINED_FUNCTION_364();
            goto LABEL_327;
          }
          OUTLINED_FUNCTION_7_24((uint64_t)&v226, (uint64_t (*)(uint64_t, uint64_t))v14[1]);
          v229 = (uint64_t *)v238;
          goto LABEL_142;
        }
        if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
        {
          v229 = 0;
          LOBYTE(v10) = 1;
          goto LABEL_193;
        }
        LOBYTE(v10) = 0;
        v163 = (uint64_t *)v234;
LABEL_192:
        v229 = v163;
        goto LABEL_193;
      }
      OUTLINED_FUNCTION_271_0();
      if ((BYTE8(v234) & 1) != 0)
      {
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v222;
        OUTLINED_FUNCTION_24_28();
        goto LABEL_333;
      }
    }
    LOBYTE(v10) = 0;
    v163 = (uint64_t *)v234;
    goto LABEL_192;
  }
  v228 = (uint64_t *)v12;
  v229 = &v226;
  v230 = v14;
  v136 = v10;
  v137 = OUTLINED_FUNCTION_138_3();
  if (v137)
  {
    v138 = v8;
    OUTLINED_FUNCTION_102_1(v137, (uint64_t)v243);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
LABEL_136:
      OUTLINED_FUNCTION_337();
LABEL_163:
      OUTLINED_FUNCTION_289();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572283C0);
      v152 = (uint64_t)v230;
      v153 = OUTLINED_FUNCTION_44_8();
      __swift_storeEnumTagSinglePayload(v152, v153 ^ 1u, 1, v6);
      v12 = (uint64_t)v228;
      v8 = v138;
      v14 = (uint64_t *)v152;
      goto LABEL_51;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      OUTLINED_FUNCTION_22_22();
LABEL_162:
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_163;
    }
    if (OUTLINED_FUNCTION_0_67())
    {
      OUTLINED_FUNCTION_189_0();
      if ((BYTE8(v234) & 1) == 0)
        goto LABEL_136;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v155;
      OUTLINED_FUNCTION_15_30();
    }
    else if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      OUTLINED_FUNCTION_274_0();
      if ((BYTE8(v234) & 1) == 0)
        goto LABEL_136;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v165;
      OUTLINED_FUNCTION_25_27();
    }
    else
    {
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
        {
          if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
            OUTLINED_FUNCTION_160_3();
          else
            OUTLINED_FUNCTION_220_1();
          goto LABEL_163;
        }
        sub_242A64518(&v234, (uint64_t)v240);
        v177 = __swift_project_boxed_opaque_existential_1(v240, v241);
        v231 = &v226;
        MEMORY[0x24BDAC7A8](v177);
        OUTLINED_FUNCTION_47_13();
        v179 = v178;
        OUTLINED_FUNCTION_2_33((uint64_t)&v226, v180, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v178 + 16));
        sub_242B4E4A8();
        OUTLINED_FUNCTION_28_27();
        if ((v239 & 1) != 0)
        {
          v238 = OUTLINED_FUNCTION_12_32();
          v239 = v224;
          OUTLINED_FUNCTION_40_18();
          OUTLINED_FUNCTION_91_2();
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_13_37();
          OUTLINED_FUNCTION_187_1();
          goto LABEL_327;
        }
        OUTLINED_FUNCTION_7_24((uint64_t)&v226, *(uint64_t (**)(uint64_t, uint64_t))(v179 + 8));
        goto LABEL_162;
      }
      OUTLINED_FUNCTION_270();
      if ((BYTE8(v234) & 1) == 0)
        goto LABEL_136;
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v172;
      OUTLINED_FUNCTION_24_28();
    }
    sub_242C48314();
    OUTLINED_FUNCTION_13_37();
    OUTLINED_FUNCTION_187_1();
    goto LABEL_327;
  }
  v231 = (uint64_t *)v6;
  if (!OUTLINED_FUNCTION_138_3())
  {
    if (OUTLINED_FUNCTION_266_0())
    {
      OUTLINED_FUNCTION_56_11();
      v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
LABEL_181:
        LOBYTE(v10) = 0;
        v156 = v234;
LABEL_214:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v243);
        LOWORD(v243[0]) = v156;
        BYTE2(v243[0]) = (_BYTE)v10;
        v162 = &qword_2572283A8;
        goto LABEL_310;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
        v156 = OUTLINED_FUNCTION_22_22();
LABEL_213:
        OUTLINED_FUNCTION_57_15((uint64_t)v240);
        goto LABEL_214;
      }
      if (OUTLINED_FUNCTION_0_67())
      {
        v175 = OUTLINED_FUNCTION_81_6();
        sub_242B497AC(v175, v176);
        if ((BYTE2(v234) & 1) == 0)
          goto LABEL_181;
LABEL_271:
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v196;
        OUTLINED_FUNCTION_15_30();
LABEL_294:
        sub_242C48314();
        OUTLINED_FUNCTION_13_37();
        OUTLINED_FUNCTION_193_1();
        goto LABEL_327;
      }
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
        v183 = OUTLINED_FUNCTION_142_3();
        sub_242B49650(v183, v184);
        if ((BYTE2(v234) & 1) == 0)
          goto LABEL_181;
LABEL_283:
        *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
        *((_QWORD *)&v234 + 1) = v203;
        OUTLINED_FUNCTION_25_27();
        goto LABEL_294;
      }
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
        {
          if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
            OUTLINED_FUNCTION_160_3();
          else
            OUTLINED_FUNCTION_133_2();
          goto LABEL_214;
        }
        sub_242A64518(&v234, (uint64_t)v240);
        LOBYTE(v10) = v241;
        __swift_project_boxed_opaque_existential_1(v240, v241);
        OUTLINED_FUNCTION_129_2();
        MEMORY[0x24BDAC7A8](v197);
        v199 = (char *)&v226 - ((v198 + 15) & 0xFFFFFFFFFFFFFFF0);
        OUTLINED_FUNCTION_2_33((uint64_t)v199, v200, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
        sub_242AF32BC();
        OUTLINED_FUNCTION_28_27();
        if ((v238 & 0x10000) != 0)
          goto LABEL_336;
        OUTLINED_FUNCTION_7_24((uint64_t)v199, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        v156 = v238;
        goto LABEL_213;
      }
      v192 = OUTLINED_FUNCTION_140_1();
      sub_242B494F4(v192, v193);
      if ((BYTE2(v234) & 1) == 0)
        goto LABEL_181;
LABEL_293:
      *(_QWORD *)&v234 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v234 + 1) = v209;
      OUTLINED_FUNCTION_24_28();
      goto LABEL_294;
    }
    if (OUTLINED_FUNCTION_266_0())
    {
      OUTLINED_FUNCTION_56_11();
      v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
LABEL_207:
        LOBYTE(v10) = 0;
        v168 = v234;
LABEL_237:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v243);
        LODWORD(v243[0]) = v168;
        BYTE4(v243[0]) = (_BYTE)v10;
        v162 = (uint64_t *)&unk_257228398;
        goto LABEL_310;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
        v168 = OUTLINED_FUNCTION_22_22();
      }
      else
      {
        if (OUTLINED_FUNCTION_0_67())
        {
          v185 = OUTLINED_FUNCTION_81_6();
          sub_242B49390(v185, v186);
          if ((BYTE4(v234) & 1) != 0)
            goto LABEL_271;
          goto LABEL_207;
        }
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          v194 = OUTLINED_FUNCTION_142_3();
          sub_242B49278(v194, v195);
          if ((BYTE4(v234) & 1) != 0)
            goto LABEL_283;
          goto LABEL_207;
        }
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          v201 = OUTLINED_FUNCTION_140_1();
          sub_242B49120(v201, v202);
          if ((BYTE4(v234) & 1) != 0)
            goto LABEL_293;
          goto LABEL_207;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
        {
          if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
            OUTLINED_FUNCTION_160_3();
          else
            OUTLINED_FUNCTION_133_2();
          goto LABEL_237;
        }
        sub_242A64518(&v234, (uint64_t)v240);
        LOBYTE(v10) = v241;
        __swift_project_boxed_opaque_existential_1(v240, v241);
        OUTLINED_FUNCTION_129_2();
        MEMORY[0x24BDAC7A8](v205);
        v207 = (char *)&v226 - ((v206 + 15) & 0xFFFFFFFFFFFFFFF0);
        OUTLINED_FUNCTION_2_33((uint64_t)v207, v208, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
        sub_242B4E430();
        OUTLINED_FUNCTION_28_27();
        if ((v238 & 0x100000000) != 0)
          goto LABEL_336;
        OUTLINED_FUNCTION_7_24((uint64_t)v207, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        v168 = v238;
      }
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_237;
    }
    if (OUTLINED_FUNCTION_266_0())
    {
      OUTLINED_FUNCTION_56_11();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
LABEL_230:
        OUTLINED_FUNCTION_337();
LABEL_259:
        OUTLINED_FUNCTION_289();
        v162 = (uint64_t *)&unk_257228390;
        goto LABEL_310;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
      if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
      {
        OUTLINED_FUNCTION_22_22();
      }
      else
      {
        if (OUTLINED_FUNCTION_0_67())
        {
          OUTLINED_FUNCTION_190_0();
          if ((BYTE8(v234) & 1) != 0)
            goto LABEL_271;
          goto LABEL_230;
        }
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          OUTLINED_FUNCTION_275_0();
          if ((BYTE8(v234) & 1) != 0)
            goto LABEL_283;
          goto LABEL_230;
        }
        if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
        {
          OUTLINED_FUNCTION_271_0();
          if ((BYTE8(v234) & 1) != 0)
            goto LABEL_293;
          goto LABEL_230;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
        {
          if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
            OUTLINED_FUNCTION_160_3();
          else
            OUTLINED_FUNCTION_220_1();
          goto LABEL_259;
        }
        sub_242A64518(&v234, (uint64_t)v240);
        __swift_project_boxed_opaque_existential_1(v240, v241);
        OUTLINED_FUNCTION_129_2();
        MEMORY[0x24BDAC7A8](v210);
        v212 = (char *)&v226 - ((v211 + 15) & 0xFFFFFFFFFFFFFFF0);
        OUTLINED_FUNCTION_2_33((uint64_t)v212, v213, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
        sub_242AC5194();
        OUTLINED_FUNCTION_28_27();
        if ((v239 & 1) != 0)
          goto LABEL_336;
        OUTLINED_FUNCTION_7_24((uint64_t)v212, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      }
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_259;
    }
    if (!OUTLINED_FUNCTION_266_0())
    {
      v14 = v230;
      v6 = (uint64_t)v231;
      __swift_storeEnumTagSinglePayload((uint64_t)v230, 1, 1, (uint64_t)v231);
      v12 = (uint64_t)v228;
      goto LABEL_52;
    }
    OUTLINED_FUNCTION_56_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v187 = v234;
LABEL_309:
      OUTLINED_FUNCTION_245_0();
      LOBYTE(v243[0]) = v187;
      v162 = (uint64_t *)&unk_257225468;
      goto LABEL_310;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      sub_242A64518(&v234, (uint64_t)v240);
      v187 = (OUTLINED_FUNCTION_300(v240) & 1) == 0;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
      goto LABEL_309;
    }
    if (OUTLINED_FUNCTION_0_67())
      goto LABEL_287;
    if (OUTLINED_FUNCTION_0_67())
      goto LABEL_297;
    if (OUTLINED_FUNCTION_0_67())
      goto LABEL_304;
    if (!OUTLINED_FUNCTION_0_67() && !OUTLINED_FUNCTION_0_67())
    {
      if (OUTLINED_FUNCTION_0_67())
      {
LABEL_287:
        v204 = v234;
LABEL_305:
        _ZF = v204 == 0;
        goto LABEL_306;
      }
      if (OUTLINED_FUNCTION_0_67())
      {
LABEL_297:
        v204 = (unsigned __int16)v234;
        goto LABEL_305;
      }
      if (OUTLINED_FUNCTION_0_67())
      {
LABEL_304:
        v204 = v234;
        goto LABEL_305;
      }
      if (!OUTLINED_FUNCTION_0_67())
      {
        v187 = 2;
        goto LABEL_309;
      }
    }
    _ZF = (_QWORD)v234 == 0;
LABEL_306:
    v187 = !_ZF;
    goto LABEL_309;
  }
  OUTLINED_FUNCTION_56_11();
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
  if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v147 = OUTLINED_FUNCTION_22_22();
LABEL_187:
      OUTLINED_FUNCTION_57_15((uint64_t)v240);
      goto LABEL_188;
    }
    if (OUTLINED_FUNCTION_0_67())
    {
      v166 = (_BYTE *)OUTLINED_FUNCTION_81_6();
      sub_242B49B84(v166, v167);
      if ((BYTE1(v234) & 1) == 0)
        goto LABEL_156;
      goto LABEL_271;
    }
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v173 = (_BYTE *)OUTLINED_FUNCTION_142_3();
      sub_242B49A28(v173, v174);
      if ((BYTE1(v234) & 1) == 0)
        goto LABEL_156;
      goto LABEL_283;
    }
    if ((OUTLINED_FUNCTION_0_67() & 1) != 0)
    {
      v181 = (_BYTE *)OUTLINED_FUNCTION_140_1();
      sub_242B498CC(v181, v182);
      if ((BYTE1(v234) & 1) == 0)
        goto LABEL_156;
      goto LABEL_293;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
    if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
    {
      if ((OUTLINED_FUNCTION_0_67() & 1) == 0)
      {
        OUTLINED_FUNCTION_133_2();
        goto LABEL_188;
      }
      goto LABEL_156;
    }
    sub_242A64518(&v234, (uint64_t)v240);
    LOBYTE(v10) = v241;
    __swift_project_boxed_opaque_existential_1(v240, v241);
    OUTLINED_FUNCTION_129_2();
    MEMORY[0x24BDAC7A8](v188);
    v190 = (char *)&v226 - ((v189 + 15) & 0xFFFFFFFFFFFFFFF0);
    OUTLINED_FUNCTION_2_33((uint64_t)v190, v191, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    sub_242B4E46C();
    OUTLINED_FUNCTION_28_27();
    if ((v238 & 0x100) == 0)
    {
      OUTLINED_FUNCTION_7_24((uint64_t)v190, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      v147 = v238;
      goto LABEL_187;
    }
LABEL_336:
    v238 = OUTLINED_FUNCTION_12_32();
    v239 = v225;
    OUTLINED_FUNCTION_40_18();
    OUTLINED_FUNCTION_91_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_13_37();
    OUTLINED_FUNCTION_219_0();
    goto LABEL_327;
  }
LABEL_156:
  OUTLINED_FUNCTION_160_3();
LABEL_188:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v243);
  LOBYTE(v243[0]) = v147;
  BYTE1(v243[0]) = (_BYTE)v10;
  v162 = (uint64_t *)&unk_2572283B0;
LABEL_310:
  __swift_instantiateConcreteTypeFromMangledName(v162);
  v14 = v230;
  v6 = (uint64_t)v231;
  v215 = OUTLINED_FUNCTION_44_8();
  OUTLINED_FUNCTION_117_1(v215);
  v10 = v136;
  v12 = (uint64_t)v228;
LABEL_51:
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6) != 1)
  {
    v245 = v6;
    v246 = v233;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v244);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(boxed_opaque_existential_0, v14, v6);
    sub_242A64518(&v244, (uint64_t)v247);
    v82 = v248;
    v83 = __swift_project_boxed_opaque_existential_1(v247, v248);
    sub_242B437CC((uint64_t)v83, v2, v82);
    OUTLINED_FUNCTION_316();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v80 = *(_QWORD *)&v243[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v247);
    goto LABEL_54;
  }
LABEL_52:
  OUTLINED_FUNCTION_325((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  v247[0] = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257228388);
  v79 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v79 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_102_1(v79, v79 + 32);
  sub_242A66290(v2, (uint64_t)v243);
  Tensor.init(shape:coercingScalars:scalarType:on:)(v247, v79, v6, v233, (uint64_t)v243, &v234);
  OUTLINED_FUNCTION_316();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  v80 = v234;
LABEL_54:
  *v10 = v80;
  OUTLINED_FUNCTION_81_1();
}

uint64_t Tensor.init<A>(_:scalarType:on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[10];

  v13[8] = MEMORY[0x24BEE4AF8];
  sub_242B4B200(a3, a3);
  v8 = *(_QWORD *)(a3 - 8);
  swift_allocObject();
  v9 = sub_242C48578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  sub_242B3E490();
  v13[7] = v9;
  sub_242A66290(a2, (uint64_t)v13);
  v11 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12D8], v11);
  sub_242B437A4();
  Tensor.init<A>(shape:scalars:scalarType:on:)();
  OUTLINED_FUNCTION_258_0();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, a3);
  *a4 = v13[9];
  return result;
}

uint64_t Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  _BYTE v11[55];
  char v12;
  _QWORD v13[2];

  v13[0] = *a1;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v12, a2, a3);
  sub_242A66290(a4, (uint64_t)v11);
  Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)v13, (uint64_t)&v12, (uint64_t)v11, a5);
  result = sub_242A662D8(a4);
  if (!v6)
    *a6 = v13[1];
  return result;
}

uint64_t sub_242B437A4()
{
  return swift_getAssociatedTypeWitness();
}

void sub_242B437CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[56];
  uint64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  sub_242B4B200(a3, a3);
  v6 = *(_QWORD *)(a3 - 8);
  swift_allocObject();
  v7 = sub_242C48578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  sub_242B3E490();
  v11 = v7;
  sub_242A66290(a2, (uint64_t)v10);
  v9 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12D8], v9);
  sub_242B437A4();
  Tensor.init<A>(shape:scalars:scalarType:on:)();
}

uint64_t Tensor.init(shape:coercingScalars:scalarType:on:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t DynamicType;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  _QWORD v23[6];
  char v24;
  uint64_t v25;
  uint64_t v26;

  v9 = a3;
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  if (v13)
  {
    v14 = (uint64_t *)(v12 + 32);
    v15 = 1;
    while (1)
    {
      v16 = *v14++;
      v17 = v15 * v16;
      if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63)
        break;
      v15 = v17;
      if (!--v13)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_15;
  }
  v17 = 1;
LABEL_7:
  v6 = *(_QWORD *)(a2 + 16);
  if (v17 != v6)
    goto LABEL_16;
  if (!(v17 | a3))
  {
    while (1)
    {
LABEL_22:
      OUTLINED_FUNCTION_78_0();
      __break(1u);
LABEL_23:
      OUTLINED_FUNCTION_294();
      sub_242C48314();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_103_3();
      v26 = v6;
      OUTLINED_FUNCTION_294();
      sub_242C48314();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_101_2();
    }
  }
  if (!v17)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    v23[0] = 0;
    v23[1] = 0xE000000000000000;
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_14_14();
    OUTLINED_FUNCTION_37_20();
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_23;
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v22)
        break;
      OUTLINED_FUNCTION_358();
      if (v22)
        goto LABEL_23;
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_242A587A8(a2 + 32, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  DynamicType = swift_getDynamicType();
  v19 = v23[4];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  if (v9)
  {
    v20 = a4;
  }
  else
  {
    v9 = DynamicType;
    v20 = v19;
  }
  v25 = v12;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v20 + 32))(&v24, v9, v20);
  sub_242A66290(a5, (uint64_t)v23);
  OUTLINED_FUNCTION_44_0();
  sub_242B6624C(&v26, &v25, &v24, v23, a2, v9, v20);
  OUTLINED_FUNCTION_66_11();
  result = OUTLINED_FUNCTION_3_6();
  *a6 = v26;
  return result;
}

void Tensor.init<A>(_:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_47_13();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = sub_242C487B8();
  OUTLINED_FUNCTION_2_33(v0, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  OUTLINED_FUNCTION_249_0();
  sub_242B437A4();
  Tensor.init<A>(shape:scalars:scalarType:on:)();
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_7_24(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  *v4 = v8;
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init(coercing:scalarType:on:)(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v6 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_180_1(v6);
  OUTLINED_FUNCTION_368();
  Tensor.init(shape:coercingScalars:scalarType:on:)(v7, v8, v9, a2, v10, v11);
  OUTLINED_FUNCTION_303();
  *a3 = v12;
  OUTLINED_FUNCTION_52_6();
}

uint64_t sub_242B43CB8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v5 - v2;
  swift_getAssociatedTypeWitness();
  sub_242C48AAC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
}

void sub_242B43DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  int v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  float v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _WORD *v60;
  char v61;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  _WORD *v72;
  uint64_t *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  _BYTE *v116;
  float v117;
  char v118;
  _BYTE *v119;
  float v120;
  uint64_t v121;
  float v122;
  _BYTE *v123;
  double v124;
  uint64_t v125;
  float v126;
  uint64_t v127;
  float v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  double v134;
  uint64_t v135;
  float v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  _BYTE *v152;
  float v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  _BYTE *v158;
  float v159;
  uint64_t v160;
  float v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t *v166;
  _BYTE *v167;
  double v168;
  uint64_t v169;
  float v170;
  uint64_t v171;
  float v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  double v178;
  int v179;
  uint64_t v180;
  float v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  double v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  BOOL v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233[2];
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void (*v237)(char *, uint64_t);
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  __int128 *v247;
  double v248;
  _QWORD v249[3];
  uint64_t v250;
  uint64_t v251;
  _QWORD v252[3];
  uint64_t v253;
  __int128 v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258[3];
  uint64_t v259;
  _QWORD v260[6];

  OUTLINED_FUNCTION_178_1();
  v1 = v0;
  v246 = v2;
  v4 = v3;
  v6 = v5;
  v241 = sub_242C48A64();
  v240 = *(_QWORD *)(v241 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_36_11();
  v10 = v8 - v9;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v233 - v13;
  v15 = *(char **)(v1 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_13_1();
  v239 = v16;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v17);
  v238 = (char *)v233 - v18;
  if (v6)
  {
    v19 = *((_QWORD *)v15 + 9);
    if (!v19)
    {
LABEL_336:
      __break(1u);
      goto LABEL_337;
    }
    _ZF = v4 - v6 == 0x8000000000000000 && v19 == -1;
    if (_ZF)
    {
LABEL_337:
      __break(1u);
LABEL_338:
      *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
      *((_QWORD *)&v254 + 1) = v197;
      OUTLINED_FUNCTION_15_30();
      goto LABEL_341;
    }
  }
  v21 = *(_QWORD *)(v246 + 16);
  v244 = v246 + 32;
  v243 = (uint64_t)&v254 + 8;
  v242 = (uint64_t)v258 + 8;
  v247 = (__int128 *)v260;
  sub_242C480E0();
  v22 = 0;
  v23 = (uint64_t *)&unk_257228440;
  v235 = v6;
  v236 = v10;
  v245 = v21;
  while (1)
  {
    if (v22 == v21)
    {
      v22 = v21;
      memset(v258, 0, sizeof(v258));
      goto LABEL_12;
    }
    sub_242B4B268(v22, 1, v246);
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_336;
    }
    v24 = v23;
    v25 = v243;
    sub_242A587A8(v244 + 40 * v22, v243);
    *(_QWORD *)&v258[0] = v22;
    v26 = (__int128 *)v25;
    v23 = v24;
    sub_242A64518(v26, v242);
    ++v22;
LABEL_12:
    sub_242B4F25C((uint64_t)v258, (uint64_t)&v259, v23);
    if (!v260[3])
      break;
    v27 = v259;
    sub_242A64518(v247, (uint64_t)v252);
    OUTLINED_FUNCTION_51_18();
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221F30);
    if (OUTLINED_FUNCTION_44_8())
    {
      OUTLINED_FUNCTION_16_22((uint64_t)v14, 0);
      v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v15 + 4);
      v30 = (uint64_t)v238;
      v31 = (uint64_t)v238;
      v32 = (uint64_t)v14;
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_16_22((uint64_t)v14, 1);
    v237 = *(void (**)(char *, uint64_t))(v240 + 8);
    v237(v14, v241);
    v21 = v253;
    __swift_project_boxed_opaque_existential_1(v252, v253);
    if (swift_getDynamicType() == v1)
    {
      OUTLINED_FUNCTION_51_18();
LABEL_43:
      v74 = OUTLINED_FUNCTION_44_8();
      OUTLINED_FUNCTION_116_2(v74);
      OUTLINED_FUNCTION_144_3();
      goto LABEL_44;
    }
    v21 = MEMORY[0x24BEE4678];
    if (!OUTLINED_FUNCTION_251_0())
    {
      if (OUTLINED_FUNCTION_251_0())
      {
        sub_242A587A8((uint64_t)v252, (uint64_t)v249);
        if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
        {
          v21 = 0;
          LOWORD(v35) = v258[0];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257224040);
          if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
          {
            sub_242AC517C(v258, &v254);
            v234 = v256;
            v10 = v257;
            __swift_project_boxed_opaque_existential_1(&v254, v255);
            OUTLINED_FUNCTION_94_4();
            MEMORY[0x24BDAC7A8](v55);
            v21 = (uint64_t)v14;
            v14 = v15;
            OUTLINED_FUNCTION_86_4(v57, (v56 + 15) & 0xFFFFFFFFFFFFFFF0);
            v58 = OUTLINED_FUNCTION_143_2();
            BFloat16.init<A>(_:)(v58, v59, v60);
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_257224038);
            if (!OUTLINED_FUNCTION_1_52())
            {
              if (OUTLINED_FUNCTION_2_39())
              {
                v21 = 0;
                v35 = HIWORD(COERCE_UNSIGNED_INT((float)LOBYTE(v258[0])));
              }
              else
              {
                LOWORD(v35) = 0;
                v21 = 1;
              }
              goto LABEL_41;
            }
            sub_242AC517C(v258, &v254);
            v234 = v256;
            v10 = v257;
            __swift_project_boxed_opaque_existential_1(&v254, v255);
            OUTLINED_FUNCTION_94_4();
            MEMORY[0x24BDAC7A8](v66);
            v21 = (uint64_t)v14;
            v14 = v15;
            OUTLINED_FUNCTION_86_4(v68, (v67 + 15) & 0xFFFFFFFFFFFFFFF0);
            v69 = OUTLINED_FUNCTION_143_2();
            BFloat16.init<A>(_:)(v69, v70, v71, v72);
          }
          v6 = v235;
          LOWORD(v35) = LOWORD(v248);
          OUTLINED_FUNCTION_57_15((uint64_t)&v254);
        }
LABEL_41:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
        LOWORD(v258[0]) = v35;
        BYTE2(v258[0]) = v21;
        v73 = (uint64_t *)&unk_257228420;
        goto LABEL_42;
      }
      v21 = MEMORY[0x24BEE14E8];
      if (OUTLINED_FUNCTION_251_0())
      {
        OUTLINED_FUNCTION_51_18();
        OUTLINED_FUNCTION_2_39();
        OUTLINED_FUNCTION_144_3();
        if ((v52 & 1) != 0)
        {
          LOBYTE(v53) = 0;
          v54 = *(float *)&v254;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
          if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
          {
            sub_242A64518(&v254, (uint64_t)v249);
            LOBYTE(v53) = v250;
            v21 = v251;
            __swift_project_boxed_opaque_existential_1(v249, v250);
            OUTLINED_FUNCTION_94_4();
            MEMORY[0x24BDAC7A8](v78);
            OUTLINED_FUNCTION_99_3(v79, v80, v233[0]);
            v10 = v236;
            OUTLINED_FUNCTION_144_3();
            v54 = sub_242B4B5B0(v81, v82);
            v6 = v235;
            OUTLINED_FUNCTION_197_1();
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
            if (OUTLINED_FUNCTION_1_52())
            {
              v234 = v27;
              sub_242A64518(&v254, (uint64_t)v249);
              v21 = v250;
              v10 = v251;
              v85 = __swift_project_boxed_opaque_existential_1(v249, v250);
              OUTLINED_FUNCTION_130_3((uint64_t)v85, v86, v87, v88, v89, v90, v91, v92, v233[0]);
              MEMORY[0x24BDAC7A8](v93);
              v27 = (uint64_t)v233 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
              OUTLINED_FUNCTION_2_33(v27, v95, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
              if (OUTLINED_FUNCTION_179_1() <= 64)
              {
                v115 = OUTLINED_FUNCTION_168_1();
                v53 = OUTLINED_FUNCTION_124_3();
                OUTLINED_FUNCTION_7_24(v27, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
                _ZF = (v115 & 1) == 0;
                v23 = (uint64_t *)&unk_257228440;
                if (_ZF)
                  v54 = (float)(unint64_t)v53;
                else
                  v54 = (float)v53;
              }
              else
              {
                LOBYTE(v53) = sub_242A77290();
                sub_242B4E430();
                OUTLINED_FUNCTION_278_0();
                OUTLINED_FUNCTION_152_1();
                OUTLINED_FUNCTION_7_24(v27, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
                v54 = *(float *)&v248;
              }
              OUTLINED_FUNCTION_197_1();
              OUTLINED_FUNCTION_82_5();
              OUTLINED_FUNCTION_113_3();
            }
            else
            {
              OUTLINED_FUNCTION_32_24();
              if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
              {
                LOBYTE(v53) = 0;
                v54 = (float)v254;
              }
              else
              {
                v54 = 0.0;
                LOBYTE(v53) = 1;
              }
            }
          }
        }
        OUTLINED_FUNCTION_285();
        *(float *)v258 = v54;
        BYTE4(v258[0]) = v53;
        v39 = (uint64_t *)&unk_257228418;
        goto LABEL_27;
      }
      v234 = v27;
      v27 = MEMORY[0x24BEE13C8];
      OUTLINED_FUNCTION_182_1();
      OUTLINED_FUNCTION_144_3();
      if (!v75)
      {
        v21 = MEMORY[0x24BEE3E50];
        if (OUTLINED_FUNCTION_251_0())
        {
          OUTLINED_FUNCTION_51_18();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            OUTLINED_FUNCTION_136_3();
            goto LABEL_63;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
          OUTLINED_FUNCTION_1_52();
          OUTLINED_FUNCTION_113_3();
          if ((v114 & 1) != 0)
          {
            LOBYTE(v28) = OUTLINED_FUNCTION_16_30();
            OUTLINED_FUNCTION_57_15((uint64_t)v249);
            goto LABEL_123;
          }
          OUTLINED_FUNCTION_36_20();
          if (OUTLINED_FUNCTION_2_39())
          {
            v116 = (_BYTE *)OUTLINED_FUNCTION_60_10();
            sub_242B4B03C(v116, v117);
            if ((BYTE1(v254) & 1) != 0)
              goto LABEL_338;
            goto LABEL_122;
          }
          OUTLINED_FUNCTION_36_20();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            v119 = (_BYTE *)OUTLINED_FUNCTION_109_2();
            sub_242B4AE88(v119, v120);
            if ((BYTE1(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v198;
              OUTLINED_FUNCTION_25_27();
LABEL_341:
              sub_242C48314();
              OUTLINED_FUNCTION_10_22();
              OUTLINED_FUNCTION_314();
              goto LABEL_365;
            }
            goto LABEL_122;
          }
          OUTLINED_FUNCTION_36_20();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            v123 = (_BYTE *)OUTLINED_FUNCTION_108_1();
            sub_242B4ACD4(v123, v124);
            if ((BYTE1(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v200;
              OUTLINED_FUNCTION_24_28();
              goto LABEL_341;
            }
LABEL_122:
            OUTLINED_FUNCTION_136_3();
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
            if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
            {
              sub_242A64518(&v254, (uint64_t)v249);
              __swift_project_boxed_opaque_existential_1(v249, v250);
              OUTLINED_FUNCTION_47_16();
              MEMORY[0x24BDAC7A8](v129);
              OUTLINED_FUNCTION_17_29(v130, v131, v233[0]);
              sub_242B4E598();
              OUTLINED_FUNCTION_92_4();
              OUTLINED_FUNCTION_28_27();
              if ((BYTE1(v248) & 1) != 0)
              {
                v203 = OUTLINED_FUNCTION_12_32();
                OUTLINED_FUNCTION_27_25(v203, v204);
                OUTLINED_FUNCTION_90_2();
                OUTLINED_FUNCTION_4_0();
                OUTLINED_FUNCTION_10_22();
                OUTLINED_FUNCTION_314();
                goto LABEL_365;
              }
              OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
              LOBYTE(v28) = LOBYTE(v248);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
              v21 = 0;
              OUTLINED_FUNCTION_76_7();
LABEL_63:
              OUTLINED_FUNCTION_113_3();
            }
            else
            {
              OUTLINED_FUNCTION_32_24();
              if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                goto LABEL_122;
              OUTLINED_FUNCTION_133_2();
            }
          }
LABEL_123:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v258);
          LOBYTE(v258[0]) = v28;
          BYTE1(v258[0]) = v21;
          v73 = (uint64_t *)&unk_257228400;
LABEL_42:
          __swift_instantiateConcreteTypeFromMangledName(v73);
          goto LABEL_43;
        }
        v27 = MEMORY[0x24BEE3F30];
        v113 = OUTLINED_FUNCTION_182_1();
        v21 = MEMORY[0x24BEE4678];
        if (v113)
        {
          OUTLINED_FUNCTION_51_18();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            goto LABEL_77;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
          if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
          {
            LOWORD(v28) = OUTLINED_FUNCTION_16_30();
            OUTLINED_FUNCTION_57_15((uint64_t)v249);
            goto LABEL_96;
          }
          if (OUTLINED_FUNCTION_2_39())
          {
            v121 = OUTLINED_FUNCTION_60_10();
            sub_242B4AB54(v121, v122);
            v27 = v234;
            if ((BYTE2(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v199;
              OUTLINED_FUNCTION_15_30();
              goto LABEL_344;
            }
            OUTLINED_FUNCTION_336();
            goto LABEL_97;
          }
          OUTLINED_FUNCTION_36_20();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            v125 = OUTLINED_FUNCTION_109_2();
            sub_242B4A9A0(v125, v126);
            if ((BYTE2(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v201;
              OUTLINED_FUNCTION_25_27();
LABEL_344:
              sub_242C48314();
              OUTLINED_FUNCTION_10_22();
              OUTLINED_FUNCTION_185_1();
              goto LABEL_365;
            }
          }
          else
          {
            if ((OUTLINED_FUNCTION_1_52() & 1) == 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
              if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
              {
                sub_242A64518(&v254, (uint64_t)v249);
                __swift_project_boxed_opaque_existential_1(v249, v250);
                OUTLINED_FUNCTION_47_16();
                MEMORY[0x24BDAC7A8](v137);
                OUTLINED_FUNCTION_17_29(v138, v139, v233[0]);
                sub_242B4E55C();
                OUTLINED_FUNCTION_92_4();
                OUTLINED_FUNCTION_28_27();
                if ((BYTE2(v248) & 1) != 0)
                {
                  v208 = OUTLINED_FUNCTION_12_32();
                  OUTLINED_FUNCTION_27_25(v208, v209);
                  OUTLINED_FUNCTION_90_2();
                  OUTLINED_FUNCTION_4_0();
                  OUTLINED_FUNCTION_10_22();
                  OUTLINED_FUNCTION_185_1();
                  goto LABEL_365;
                }
                OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
                LOWORD(v28) = LOWORD(v248);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
                v21 = 0;
                OUTLINED_FUNCTION_76_7();
              }
              else
              {
                OUTLINED_FUNCTION_32_24();
                if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                  OUTLINED_FUNCTION_136_3();
                else
                  OUTLINED_FUNCTION_133_2();
              }
LABEL_96:
              OUTLINED_FUNCTION_113_3();
LABEL_97:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v258);
              LOWORD(v258[0]) = v28;
              BYTE2(v258[0]) = v21;
              v73 = (uint64_t *)&unk_2572283F0;
              goto LABEL_42;
            }
            v133 = OUTLINED_FUNCTION_108_1();
            sub_242B4A7EC(v133, v134);
            if ((BYTE2(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v205;
              OUTLINED_FUNCTION_24_28();
              goto LABEL_344;
            }
          }
LABEL_77:
          OUTLINED_FUNCTION_336();
          goto LABEL_96;
        }
        v27 = MEMORY[0x24BEE3F88];
        if (OUTLINED_FUNCTION_182_1())
        {
          OUTLINED_FUNCTION_51_18();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            goto LABEL_93;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
          if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
          {
            v28 = OUTLINED_FUNCTION_16_30();
            OUTLINED_FUNCTION_57_15((uint64_t)v249);
            goto LABEL_118;
          }
          if (OUTLINED_FUNCTION_2_39())
          {
            v127 = OUTLINED_FUNCTION_60_10();
            sub_242B4A678(v127, v128);
            v27 = v234;
            if ((BYTE4(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v202;
              OUTLINED_FUNCTION_15_30();
              goto LABEL_346;
            }
            v21 = 0;
            v28 = v254;
            goto LABEL_119;
          }
          OUTLINED_FUNCTION_36_20();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            v135 = OUTLINED_FUNCTION_109_2();
            sub_242B4A548(v135, v136);
            if ((BYTE4(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v206;
              OUTLINED_FUNCTION_25_27();
LABEL_346:
              sub_242C48314();
              OUTLINED_FUNCTION_10_22();
              OUTLINED_FUNCTION_186_1();
              goto LABEL_365;
            }
          }
          else
          {
            if ((OUTLINED_FUNCTION_1_52() & 1) == 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
              if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
              {
                sub_242A64518(&v254, (uint64_t)v249);
                __swift_project_boxed_opaque_existential_1(v249, v250);
                OUTLINED_FUNCTION_47_16();
                MEMORY[0x24BDAC7A8](v143);
                OUTLINED_FUNCTION_17_29(v144, v145, v233[0]);
                sub_242AF3244();
                OUTLINED_FUNCTION_92_4();
                OUTLINED_FUNCTION_28_27();
                if ((BYTE4(v248) & 1) != 0)
                {
                  v213 = OUTLINED_FUNCTION_12_32();
                  OUTLINED_FUNCTION_27_25(v213, v214);
                  OUTLINED_FUNCTION_90_2();
                  OUTLINED_FUNCTION_4_0();
                  OUTLINED_FUNCTION_10_22();
                  OUTLINED_FUNCTION_186_1();
                  goto LABEL_365;
                }
                OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
                v28 = LODWORD(v248);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
                v21 = 0;
                OUTLINED_FUNCTION_76_7();
              }
              else
              {
                OUTLINED_FUNCTION_32_24();
                if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                  OUTLINED_FUNCTION_136_3();
                else
                  OUTLINED_FUNCTION_133_2();
              }
LABEL_118:
              OUTLINED_FUNCTION_113_3();
LABEL_119:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v258);
              LODWORD(v258[0]) = v28;
              BYTE4(v258[0]) = v21;
              v73 = (uint64_t *)&unk_257225458;
              goto LABEL_42;
            }
            v141 = OUTLINED_FUNCTION_108_1();
            sub_242B4A3C0(v141, v142);
            if ((BYTE4(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v210;
              OUTLINED_FUNCTION_24_28();
              goto LABEL_346;
            }
          }
LABEL_93:
          v21 = 0;
          v28 = v254;
          goto LABEL_118;
        }
        v27 = MEMORY[0x24BEE1768];
        if (OUTLINED_FUNCTION_182_1())
        {
          OUTLINED_FUNCTION_51_18();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            OUTLINED_FUNCTION_175_0();
            goto LABEL_110;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
          OUTLINED_FUNCTION_1_52();
          OUTLINED_FUNCTION_113_3();
          if ((v132 & 1) != 0)
          {
            OUTLINED_FUNCTION_16_30();
            OUTLINED_FUNCTION_57_15((uint64_t)v249);
            goto LABEL_181;
          }
          if (OUTLINED_FUNCTION_2_39())
          {
            OUTLINED_FUNCTION_171_1();
            if ((BYTE8(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v207;
              OUTLINED_FUNCTION_15_30();
LABEL_349:
              sub_242C48314();
              OUTLINED_FUNCTION_10_22();
              OUTLINED_FUNCTION_188_1();
              goto LABEL_365;
            }
          }
          else
          {
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              OUTLINED_FUNCTION_234_0();
              if ((BYTE8(v254) & 1) != 0)
              {
                *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                *((_QWORD *)&v254 + 1) = v211;
                OUTLINED_FUNCTION_25_27();
                goto LABEL_349;
              }
            }
            else
            {
              if ((OUTLINED_FUNCTION_1_52() & 1) == 0)
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
                if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
                {
                  sub_242A64518(&v254, (uint64_t)v249);
                  __swift_project_boxed_opaque_existential_1(v249, v250);
                  OUTLINED_FUNCTION_47_16();
                  MEMORY[0x24BDAC7A8](v148);
                  OUTLINED_FUNCTION_17_29(v149, v150, v233[0]);
                  sub_242B4E520();
                  OUTLINED_FUNCTION_92_4();
                  OUTLINED_FUNCTION_28_27();
                  OUTLINED_FUNCTION_340();
                  if ((v151 & 1) != 0)
                  {
                    v218 = OUTLINED_FUNCTION_12_32();
                    OUTLINED_FUNCTION_27_25(v218, v219);
                    OUTLINED_FUNCTION_90_2();
                    OUTLINED_FUNCTION_4_0();
                    OUTLINED_FUNCTION_10_22();
                    OUTLINED_FUNCTION_188_1();
                    goto LABEL_365;
                  }
                  OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
                  v21 = 0;
                  OUTLINED_FUNCTION_76_7();
LABEL_110:
                  OUTLINED_FUNCTION_113_3();
                }
                else
                {
                  OUTLINED_FUNCTION_32_24();
                  if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                    OUTLINED_FUNCTION_136_3();
                  else
                    OUTLINED_FUNCTION_220_1();
                }
LABEL_181:
                OUTLINED_FUNCTION_173_0();
                v73 = (uint64_t *)&unk_2572283E0;
                goto LABEL_42;
              }
              OUTLINED_FUNCTION_232_1();
              if ((BYTE8(v254) & 1) != 0)
              {
                *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                *((_QWORD *)&v254 + 1) = v215;
                OUTLINED_FUNCTION_24_28();
                goto LABEL_349;
              }
            }
          }
          OUTLINED_FUNCTION_175_0();
          goto LABEL_181;
        }
        v27 = MEMORY[0x24BEE1E88];
        if (OUTLINED_FUNCTION_182_1())
        {
          OUTLINED_FUNCTION_51_18();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            OUTLINED_FUNCTION_175_0();
            goto LABEL_133;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
          OUTLINED_FUNCTION_1_52();
          OUTLINED_FUNCTION_113_3();
          if ((v140 & 1) != 0)
          {
            OUTLINED_FUNCTION_16_30();
            OUTLINED_FUNCTION_57_15((uint64_t)v249);
            goto LABEL_203;
          }
          if (OUTLINED_FUNCTION_2_39())
          {
            OUTLINED_FUNCTION_172_0();
            if ((BYTE8(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v212;
              OUTLINED_FUNCTION_15_30();
LABEL_353:
              sub_242C48314();
              OUTLINED_FUNCTION_10_22();
              OUTLINED_FUNCTION_364();
              goto LABEL_365;
            }
          }
          else
          {
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              OUTLINED_FUNCTION_235_0();
              if ((BYTE8(v254) & 1) != 0)
              {
                *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                *((_QWORD *)&v254 + 1) = v216;
                OUTLINED_FUNCTION_25_27();
                goto LABEL_353;
              }
            }
            else
            {
              if ((OUTLINED_FUNCTION_1_52() & 1) == 0)
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
                if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
                {
                  sub_242A64518(&v254, (uint64_t)v249);
                  v21 = v250;
                  __swift_project_boxed_opaque_existential_1(v249, v250);
                  OUTLINED_FUNCTION_47_16();
                  MEMORY[0x24BDAC7A8](v154);
                  OUTLINED_FUNCTION_17_29(v155, v156, v233[0]);
                  sub_242B4E4E4();
                  OUTLINED_FUNCTION_92_4();
                  OUTLINED_FUNCTION_28_27();
                  OUTLINED_FUNCTION_340();
                  if ((v157 & 1) != 0)
                  {
                    v222 = OUTLINED_FUNCTION_12_32();
                    OUTLINED_FUNCTION_27_25(v222, v223);
                    OUTLINED_FUNCTION_90_2();
                    OUTLINED_FUNCTION_4_0();
                    OUTLINED_FUNCTION_10_22();
                    OUTLINED_FUNCTION_364();
                    goto LABEL_365;
                  }
                  OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
                  OUTLINED_FUNCTION_57_15((uint64_t)v249);
                }
                else
                {
                  OUTLINED_FUNCTION_32_24();
                  if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                    OUTLINED_FUNCTION_136_3();
                  else
                    OUTLINED_FUNCTION_220_1();
                }
                OUTLINED_FUNCTION_76_7();
                v23 = (uint64_t *)&unk_257228440;
LABEL_133:
                OUTLINED_FUNCTION_113_3();
LABEL_203:
                OUTLINED_FUNCTION_173_0();
                v73 = (uint64_t *)&unk_2572283D0;
                goto LABEL_42;
              }
              OUTLINED_FUNCTION_233_1();
              if ((BYTE8(v254) & 1) != 0)
              {
                *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                *((_QWORD *)&v254 + 1) = v220;
                OUTLINED_FUNCTION_24_28();
                goto LABEL_353;
              }
            }
          }
          OUTLINED_FUNCTION_175_0();
          goto LABEL_203;
        }
        v27 = MEMORY[0x24BEE4008];
        if (OUTLINED_FUNCTION_182_1())
        {
          OUTLINED_FUNCTION_51_18();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            OUTLINED_FUNCTION_175_0();
            goto LABEL_153;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
          OUTLINED_FUNCTION_1_52();
          OUTLINED_FUNCTION_113_3();
          if ((v146 & 1) != 0)
          {
            OUTLINED_FUNCTION_16_30();
            OUTLINED_FUNCTION_57_15((uint64_t)v249);
            goto LABEL_191;
          }
          if (OUTLINED_FUNCTION_2_39())
          {
            OUTLINED_FUNCTION_171_1();
            if ((BYTE8(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v217;
              OUTLINED_FUNCTION_15_30();
              goto LABEL_356;
            }
            OUTLINED_FUNCTION_175_0();
            goto LABEL_191;
          }
          OUTLINED_FUNCTION_36_20();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            OUTLINED_FUNCTION_234_0();
            if ((BYTE8(v254) & 1) != 0)
            {
              *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
              *((_QWORD *)&v254 + 1) = v221;
              OUTLINED_FUNCTION_25_27();
LABEL_356:
              sub_242C48314();
              OUTLINED_FUNCTION_10_22();
              OUTLINED_FUNCTION_187_1();
              goto LABEL_365;
            }
LABEL_224:
            OUTLINED_FUNCTION_175_0();
          }
          else
          {
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              OUTLINED_FUNCTION_232_1();
              if ((BYTE8(v254) & 1) != 0)
              {
                *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                *((_QWORD *)&v254 + 1) = v224;
                OUTLINED_FUNCTION_24_28();
                goto LABEL_356;
              }
              goto LABEL_224;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
            if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
            {
              sub_242A64518(&v254, (uint64_t)v249);
              v21 = v250;
              __swift_project_boxed_opaque_existential_1(v249, v250);
              OUTLINED_FUNCTION_47_16();
              MEMORY[0x24BDAC7A8](v162);
              OUTLINED_FUNCTION_17_29(v163, v164, v233[0]);
              sub_242B4E4A8();
              OUTLINED_FUNCTION_92_4();
              OUTLINED_FUNCTION_28_27();
              OUTLINED_FUNCTION_340();
              if ((v165 & 1) != 0)
              {
                v226 = OUTLINED_FUNCTION_12_32();
                OUTLINED_FUNCTION_27_25(v226, v227);
                OUTLINED_FUNCTION_90_2();
                OUTLINED_FUNCTION_4_0();
                OUTLINED_FUNCTION_10_22();
                OUTLINED_FUNCTION_187_1();
                goto LABEL_365;
              }
              OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
              OUTLINED_FUNCTION_57_15((uint64_t)v249);
            }
            else
            {
              OUTLINED_FUNCTION_32_24();
              if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                OUTLINED_FUNCTION_136_3();
              else
                OUTLINED_FUNCTION_220_1();
            }
          }
          OUTLINED_FUNCTION_76_7();
          v23 = (uint64_t *)&unk_257228440;
LABEL_153:
          OUTLINED_FUNCTION_113_3();
LABEL_191:
          OUTLINED_FUNCTION_173_0();
          v73 = (uint64_t *)&unk_2572283C0;
          goto LABEL_42;
        }
        v27 = MEMORY[0x24BEE4260];
        if (!OUTLINED_FUNCTION_182_1())
        {
          v147 = MEMORY[0x24BEE4478];
          if (OUTLINED_FUNCTION_251_0())
          {
            OUTLINED_FUNCTION_51_18();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              OUTLINED_FUNCTION_336();
              goto LABEL_274;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
            if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
            {
              LOWORD(v28) = OUTLINED_FUNCTION_42_19();
              goto LABEL_221;
            }
            OUTLINED_FUNCTION_36_20();
            if (OUTLINED_FUNCTION_2_39())
            {
              v160 = OUTLINED_FUNCTION_60_10();
              sub_242B497AC(v160, v161);
              if ((BYTE2(v254) & 1) != 0)
                goto LABEL_234;
              goto LABEL_272;
            }
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              v169 = OUTLINED_FUNCTION_109_2();
              sub_242B49650(v169, v170);
              if ((BYTE2(v254) & 1) != 0)
                goto LABEL_296;
              goto LABEL_272;
            }
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              v177 = OUTLINED_FUNCTION_108_1();
              sub_242B494F4(v177, v178);
              if ((BYTE2(v254) & 1) != 0)
                goto LABEL_362;
LABEL_272:
              OUTLINED_FUNCTION_336();
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
              if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
              {
                sub_242A64518(&v254, (uint64_t)v249);
                v147 = v250;
                __swift_project_boxed_opaque_existential_1(v249, v250);
                OUTLINED_FUNCTION_47_16();
                MEMORY[0x24BDAC7A8](v182);
                OUTLINED_FUNCTION_17_29(v183, v184, v233[0]);
                sub_242AF32BC();
                OUTLINED_FUNCTION_92_4();
                OUTLINED_FUNCTION_28_27();
                if ((BYTE2(v248) & 1) != 0)
                  goto LABEL_364;
                OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
                LOWORD(v28) = LOWORD(v248);
LABEL_221:
                OUTLINED_FUNCTION_57_15((uint64_t)v249);
              }
              else
              {
                OUTLINED_FUNCTION_32_24();
                if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                  OUTLINED_FUNCTION_136_3();
                else
                  OUTLINED_FUNCTION_133_2();
              }
            }
            OUTLINED_FUNCTION_76_7();
            v23 = (uint64_t *)&unk_257228440;
LABEL_274:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v258);
            LOWORD(v258[0]) = v28;
            BYTE2(v258[0]) = v147;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2572283A8);
            v179 = OUTLINED_FUNCTION_44_8();
            OUTLINED_FUNCTION_116_2(v179);
LABEL_318:
            v21 = v245;
            OUTLINED_FUNCTION_113_3();
            goto LABEL_44;
          }
          if (swift_dynamicCastMetatype())
          {
            OUTLINED_FUNCTION_51_18();
            OUTLINED_FUNCTION_32_24();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
              goto LABEL_215;
            __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
            if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
            {
              v28 = OUTLINED_FUNCTION_42_19();
              goto LABEL_243;
            }
            OUTLINED_FUNCTION_36_20();
            if (OUTLINED_FUNCTION_2_39())
            {
              v171 = OUTLINED_FUNCTION_60_10();
              sub_242B49390(v171, v172);
              if ((BYTE4(v254) & 1) != 0)
                goto LABEL_234;
              goto LABEL_215;
            }
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              v180 = OUTLINED_FUNCTION_109_2();
              sub_242B49278(v180, v181);
              if ((BYTE4(v254) & 1) != 0)
                goto LABEL_296;
              goto LABEL_215;
            }
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              v185 = OUTLINED_FUNCTION_108_1();
              sub_242B49120(v185, v186);
              if ((BYTE4(v254) & 1) != 0)
                goto LABEL_362;
LABEL_215:
              v147 = 0;
              v28 = v254;
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
              if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
              {
                sub_242A64518(&v254, (uint64_t)v249);
                v147 = v250;
                __swift_project_boxed_opaque_existential_1(v249, v250);
                OUTLINED_FUNCTION_47_16();
                MEMORY[0x24BDAC7A8](v188);
                OUTLINED_FUNCTION_17_29(v189, v190, v233[0]);
                sub_242B4E430();
                OUTLINED_FUNCTION_92_4();
                OUTLINED_FUNCTION_28_27();
                if ((BYTE4(v248) & 1) != 0)
                  goto LABEL_364;
                OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
                v28 = LODWORD(v248);
LABEL_243:
                OUTLINED_FUNCTION_57_15((uint64_t)v249);
              }
              else
              {
                OUTLINED_FUNCTION_32_24();
                if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                  OUTLINED_FUNCTION_136_3();
                else
                  OUTLINED_FUNCTION_133_2();
              }
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v258);
            LODWORD(v258[0]) = v28;
            BYTE4(v258[0]) = v147;
            v166 = (uint64_t *)&unk_257228398;
LABEL_317:
            __swift_instantiateConcreteTypeFromMangledName(v166);
            v10 = v236;
            v192 = OUTLINED_FUNCTION_44_8();
            OUTLINED_FUNCTION_116_2(v192);
            v6 = v235;
            goto LABEL_318;
          }
          if (swift_dynamicCastMetatype())
          {
            OUTLINED_FUNCTION_51_18();
            OUTLINED_FUNCTION_32_24();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
              goto LABEL_237;
            __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
            if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
            {
              OUTLINED_FUNCTION_42_19();
              goto LABEL_268;
            }
            OUTLINED_FUNCTION_36_20();
            if (OUTLINED_FUNCTION_2_39())
            {
              OUTLINED_FUNCTION_172_0();
              if ((BYTE8(v254) & 1) != 0)
              {
LABEL_234:
                *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                *((_QWORD *)&v254 + 1) = v225;
                OUTLINED_FUNCTION_15_30();
LABEL_363:
                sub_242C48314();
                OUTLINED_FUNCTION_10_22();
                goto LABEL_365;
              }
              goto LABEL_237;
            }
            OUTLINED_FUNCTION_36_20();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              OUTLINED_FUNCTION_235_0();
              if ((BYTE8(v254) & 1) != 0)
              {
LABEL_296:
                *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                *((_QWORD *)&v254 + 1) = v230;
                OUTLINED_FUNCTION_25_27();
                goto LABEL_363;
              }
LABEL_237:
              OUTLINED_FUNCTION_175_0();
            }
            else
            {
              OUTLINED_FUNCTION_36_20();
              if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
              {
                OUTLINED_FUNCTION_233_1();
                if ((BYTE8(v254) & 1) != 0)
                {
LABEL_362:
                  *(_QWORD *)&v254 = OUTLINED_FUNCTION_12_32();
                  *((_QWORD *)&v254 + 1) = v229;
                  OUTLINED_FUNCTION_24_28();
                  goto LABEL_363;
                }
                goto LABEL_237;
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
              if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
              {
                sub_242A64518(&v254, (uint64_t)v249);
                __swift_project_boxed_opaque_existential_1(v249, v250);
                OUTLINED_FUNCTION_47_16();
                MEMORY[0x24BDAC7A8](v193);
                OUTLINED_FUNCTION_17_29(v194, v195, v233[0]);
                sub_242AC5194();
                OUTLINED_FUNCTION_92_4();
                OUTLINED_FUNCTION_28_27();
                OUTLINED_FUNCTION_340();
                if ((v196 & 1) != 0)
                {
LABEL_364:
                  v231 = OUTLINED_FUNCTION_12_32();
                  OUTLINED_FUNCTION_27_25(v231, v232);
                  OUTLINED_FUNCTION_90_2();
                  OUTLINED_FUNCTION_4_0();
                  OUTLINED_FUNCTION_10_22();
LABEL_365:
                  sub_242C48314();
                  OUTLINED_FUNCTION_8_8();
                  sub_242C482C0();
                  OUTLINED_FUNCTION_354();
LABEL_366:
                  OUTLINED_FUNCTION_78_0();
                  OUTLINED_FUNCTION_100_0();
                }
                OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
LABEL_268:
                OUTLINED_FUNCTION_57_15((uint64_t)v249);
              }
              else
              {
                OUTLINED_FUNCTION_32_24();
                if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
                  OUTLINED_FUNCTION_136_3();
                else
                  OUTLINED_FUNCTION_220_1();
              }
            }
            OUTLINED_FUNCTION_173_0();
            v166 = (uint64_t *)&unk_257228390;
            goto LABEL_317;
          }
          if (!swift_dynamicCastMetatype())
          {
            v10 = v236;
            OUTLINED_FUNCTION_16_22(v236, 1);
LABEL_360:
            v237((char *)v10, v241);
            *(_QWORD *)&v258[0] = sub_242C49238();
            *((_QWORD *)&v258[0] + 1) = v228;
            OUTLINED_FUNCTION_14_14();
            sub_242C4922C();
            OUTLINED_FUNCTION_177_1(v252);
            sub_242A76068();
            sub_242C4922C();
            sub_242A76068();
            sub_242C4922C();
            sub_242C482C0();
            OUTLINED_FUNCTION_42_2();
            v233[0] = 188;
            goto LABEL_366;
          }
          OUTLINED_FUNCTION_51_18();
          OUTLINED_FUNCTION_32_24();
          if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
          {
            v173 = v254;
LABEL_316:
            OUTLINED_FUNCTION_285();
            LOBYTE(v258[0]) = v173;
            v166 = (uint64_t *)&unk_257225468;
            goto LABEL_317;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
          if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
          {
            sub_242A64518(&v254, (uint64_t)v249);
            v173 = (OUTLINED_FUNCTION_300(v249) & 1) == 0;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
            goto LABEL_316;
          }
          OUTLINED_FUNCTION_32_24();
          if (OUTLINED_FUNCTION_2_39())
          {
LABEL_293:
            v187 = v254;
            goto LABEL_312;
          }
          OUTLINED_FUNCTION_32_24();
          if (OUTLINED_FUNCTION_2_39())
          {
LABEL_303:
            v187 = (unsigned __int16)v254;
            goto LABEL_312;
          }
          OUTLINED_FUNCTION_32_24();
          if (OUTLINED_FUNCTION_2_39())
          {
LABEL_311:
            v187 = v254;
LABEL_312:
            v191 = v187 == 0;
          }
          else
          {
            OUTLINED_FUNCTION_32_24();
            if (!OUTLINED_FUNCTION_2_39())
            {
              OUTLINED_FUNCTION_32_24();
              if (!OUTLINED_FUNCTION_2_39())
              {
                OUTLINED_FUNCTION_32_24();
                if (OUTLINED_FUNCTION_2_39())
                  goto LABEL_293;
                OUTLINED_FUNCTION_32_24();
                if (OUTLINED_FUNCTION_2_39())
                  goto LABEL_303;
                OUTLINED_FUNCTION_32_24();
                if (OUTLINED_FUNCTION_2_39())
                  goto LABEL_311;
                OUTLINED_FUNCTION_32_24();
                if (!OUTLINED_FUNCTION_2_39())
                {
                  v173 = 2;
                  goto LABEL_316;
                }
              }
            }
            v191 = (_QWORD)v254 == 0;
          }
          v173 = !v191;
          goto LABEL_316;
        }
        OUTLINED_FUNCTION_51_18();
        if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
        {
          OUTLINED_FUNCTION_136_3();
LABEL_249:
          OUTLINED_FUNCTION_113_3();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v258);
          LOBYTE(v258[0]) = v28;
          BYTE1(v258[0]) = v21;
          v73 = (uint64_t *)&unk_2572283B0;
          goto LABEL_42;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
        if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
        {
          LOBYTE(v28) = OUTLINED_FUNCTION_42_19();
          OUTLINED_FUNCTION_57_15((uint64_t)v249);
          v10 = v236;
          goto LABEL_249;
        }
        if (OUTLINED_FUNCTION_2_39())
        {
          v152 = (_BYTE *)OUTLINED_FUNCTION_60_10();
          sub_242B49B84(v152, v153);
          if ((BYTE1(v254) & 1) != 0)
            goto LABEL_234;
          goto LABEL_247;
        }
        OUTLINED_FUNCTION_36_20();
        if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
        {
          v158 = (_BYTE *)OUTLINED_FUNCTION_109_2();
          sub_242B49A28(v158, v159);
          if ((BYTE1(v254) & 1) != 0)
            goto LABEL_296;
          goto LABEL_247;
        }
        OUTLINED_FUNCTION_36_20();
        if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
        {
          v167 = (_BYTE *)OUTLINED_FUNCTION_108_1();
          sub_242B498CC(v167, v168);
          if ((BYTE1(v254) & 1) != 0)
            goto LABEL_362;
LABEL_247:
          OUTLINED_FUNCTION_136_3();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
          if ((OUTLINED_FUNCTION_1_52() & 1) != 0)
          {
            sub_242A64518(&v254, (uint64_t)v249);
            v21 = v250;
            __swift_project_boxed_opaque_existential_1(v249, v250);
            OUTLINED_FUNCTION_47_16();
            MEMORY[0x24BDAC7A8](v174);
            OUTLINED_FUNCTION_17_29(v175, v176, v233[0]);
            sub_242B4E46C();
            OUTLINED_FUNCTION_92_4();
            OUTLINED_FUNCTION_28_27();
            if ((BYTE1(v248) & 1) != 0)
              goto LABEL_364;
            OUTLINED_FUNCTION_7_24(v10, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
            LOBYTE(v28) = LOBYTE(v248);
            OUTLINED_FUNCTION_57_15((uint64_t)v249);
          }
          else
          {
            OUTLINED_FUNCTION_32_24();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
              goto LABEL_247;
            OUTLINED_FUNCTION_133_2();
          }
        }
        OUTLINED_FUNCTION_76_7();
        v23 = (uint64_t *)&unk_257228440;
        goto LABEL_249;
      }
      OUTLINED_FUNCTION_51_18();
      if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
      {
        LOBYTE(v76) = 0;
        v77 = *(double *)&v254;
        OUTLINED_FUNCTION_113_3();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
        OUTLINED_FUNCTION_1_52();
        OUTLINED_FUNCTION_113_3();
        if ((v96 & 1) != 0)
        {
          sub_242A64518(&v254, (uint64_t)v249);
          LOBYTE(v76) = v250;
          v21 = v251;
          __swift_project_boxed_opaque_existential_1(v249, v250);
          OUTLINED_FUNCTION_94_4();
          MEMORY[0x24BDAC7A8](v97);
          OUTLINED_FUNCTION_99_3(v98, v99, v233[0]);
          v10 = v236;
          OUTLINED_FUNCTION_144_3();
          v77 = sub_242B4E5D4(v100, v101);
          v6 = v235;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
          if (!OUTLINED_FUNCTION_1_52())
          {
            OUTLINED_FUNCTION_32_24();
            if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
            {
              LOBYTE(v76) = 0;
              v77 = (double)v254;
            }
            else
            {
              v77 = 0.0;
              LOBYTE(v76) = 1;
            }
            goto LABEL_115;
          }
          sub_242A64518(&v254, (uint64_t)v249);
          v21 = v250;
          v10 = v251;
          v102 = __swift_project_boxed_opaque_existential_1(v249, v250);
          OUTLINED_FUNCTION_130_3((uint64_t)v102, v103, v104, v105, v106, v107, v108, v109, v233[0]);
          MEMORY[0x24BDAC7A8](v110);
          v27 = (uint64_t)v233 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
          OUTLINED_FUNCTION_2_33(v27, v112, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
          if (OUTLINED_FUNCTION_179_1() <= 64)
          {
            v118 = OUTLINED_FUNCTION_168_1();
            v76 = OUTLINED_FUNCTION_124_3();
            OUTLINED_FUNCTION_7_24(v27, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
            if ((v118 & 1) != 0)
              v77 = (double)v76;
            else
              v77 = (double)(unint64_t)v76;
            OUTLINED_FUNCTION_82_5();
            v23 = (uint64_t *)&unk_257228440;
          }
          else
          {
            LOBYTE(v76) = sub_242AC5140();
            sub_242AC5194();
            OUTLINED_FUNCTION_278_0();
            OUTLINED_FUNCTION_152_1();
            OUTLINED_FUNCTION_7_24(v27, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
            v77 = v248;
            OUTLINED_FUNCTION_82_5();
          }
          OUTLINED_FUNCTION_286();
        }
        OUTLINED_FUNCTION_197_1();
      }
LABEL_115:
      OUTLINED_FUNCTION_285();
      *(double *)v258 = v77;
      BYTE8(v258[0]) = v76;
      v39 = (uint64_t *)&unk_257228410;
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_51_18();
    if ((OUTLINED_FUNCTION_2_39() & 1) != 0)
    {
      LOBYTE(v33) = 0;
      _H8 = v254;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257225450);
      if ((OUTLINED_FUNCTION_1_52() & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257225448);
        if (OUTLINED_FUNCTION_1_52())
        {
          v234 = v27;
          sub_242A64518(&v254, (uint64_t)v249);
          v21 = v250;
          v10 = v251;
          v41 = __swift_project_boxed_opaque_existential_1(v249, v250);
          OUTLINED_FUNCTION_130_3((uint64_t)v41, v42, v43, v44, v45, v46, v47, v48, v233[0]);
          MEMORY[0x24BDAC7A8](v49);
          v27 = (uint64_t)v233 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
          OUTLINED_FUNCTION_2_33(v27, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
          if (OUTLINED_FUNCTION_179_1() <= 64)
          {
            v83 = OUTLINED_FUNCTION_168_1();
            v33 = OUTLINED_FUNCTION_124_3();
            OUTLINED_FUNCTION_7_24(v27, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
            if ((v83 & 1) != 0)
              _S0 = (float)v33;
            else
              _S0 = (float)(unint64_t)v33;
            __asm { FCVT            H8, S0 }
            OUTLINED_FUNCTION_82_5();
            v23 = (uint64_t *)&unk_257228440;
          }
          else
          {
            LOBYTE(v33) = sub_242AF3280();
            sub_242AF32BC();
            OUTLINED_FUNCTION_278_0();
            OUTLINED_FUNCTION_152_1();
            OUTLINED_FUNCTION_7_24(v27, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
            _H8 = LOWORD(v248);
            OUTLINED_FUNCTION_82_5();
          }
          OUTLINED_FUNCTION_286();
          OUTLINED_FUNCTION_197_1();
        }
        else
        {
          OUTLINED_FUNCTION_32_24();
          OUTLINED_FUNCTION_2_39();
          OUTLINED_FUNCTION_144_3();
          if ((v61 & 1) != 0)
          {
            LOBYTE(v33) = 0;
            _S0 = (float)v254;
            __asm { FCVT            H8, S0 }
          }
          else
          {
            _H8 = 0;
            LOBYTE(v33) = 1;
          }
        }
        goto LABEL_26;
      }
      sub_242A64518(&v254, (uint64_t)v249);
      LOBYTE(v33) = v250;
      v21 = v251;
      __swift_project_boxed_opaque_existential_1(v249, v250);
      OUTLINED_FUNCTION_94_4();
      MEMORY[0x24BDAC7A8](v36);
      OUTLINED_FUNCTION_99_3(v37, v38, v233[0]);
      v10 = v236;
      _H8 = COERCE_UNSIGNED_INT(sub_242B4EC58());
      v6 = v235;
      OUTLINED_FUNCTION_197_1();
    }
    OUTLINED_FUNCTION_144_3();
LABEL_26:
    OUTLINED_FUNCTION_285();
    LOWORD(v258[0]) = _H8;
    BYTE2(v258[0]) = v33;
    v39 = (uint64_t *)&unk_257225470;
LABEL_27:
    __swift_instantiateConcreteTypeFromMangledName(v39);
    v40 = OUTLINED_FUNCTION_44_8();
    OUTLINED_FUNCTION_116_2(v40);
LABEL_44:
    if (__swift_getEnumTagSinglePayload(v10, 1, v1) == 1)
      goto LABEL_360;
    v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v15 + 4);
    v30 = v239;
    v31 = v239;
    v32 = v10;
LABEL_46:
    OUTLINED_FUNCTION_26_22(v31, v32, v29);
    OUTLINED_FUNCTION_26_22(v6 + *((_QWORD *)v15 + 9) * v27, v30, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v15 + 5));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v252);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_81_1();
}

void Tensor.init(shape:data:scalarType:on:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;

  v7 = OUTLINED_FUNCTION_352(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_180_1(v7);
  OUTLINED_FUNCTION_368();
  Tensor.init(shape:data:scalarType:on:)(v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_303();
  *a6 = v13;
  OUTLINED_FUNCTION_52_6();
}

void Tensor.init(bytesNoCopy:shape:scalarType:deallocator:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE v16[9];
  uint64_t v17;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_242C47BA0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  *(_QWORD *)&v16[1] = *v7;
  (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t, __n128))(v3 + 32))(v16, v5, v3, v12);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v14, v1, v10);
  Tensor.init(bytesNoCopy:shape:scalarType:deallocator:)();
  OUTLINED_FUNCTION_325(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  *v9 = v17;
  OUTLINED_FUNCTION_13_11();
}

{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];
  int v30;
  char v31[4];

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_242C47BA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_4_9();
  v16 = v15 - v14;
  v17 = *v5;
  v18 = *v3;
  v19 = v7 - v9;
  if (!v9)
    v19 = 0;
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v21 = (uint64_t *)(v17 + 32);
    v22 = 1;
    while (1)
    {
      v23 = *v21++;
      v24 = v22 * v23;
      if ((unsigned __int128)(v22 * (__int128)v23) >> 64 != (v22 * v23) >> 63)
        break;
      v22 = v24;
      if (!--v20)
        goto LABEL_9;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_2_30();
    OUTLINED_FUNCTION_100_0();
  }
  v24 = 1;
LABEL_9:
  if ((v18 - 1) > 0xA)
    v25 = 1;
  else
    v25 = qword_242C585C0[(char)(v18 - 1)];
  if ((unsigned __int128)(v24 * (__int128)v25) >> 64 != (v24 * v25) >> 63)
    goto LABEL_16;
  if (v19 < v24 * v25)
    goto LABEL_17;
  v29[0] = *v5;
  v31[0] = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v1, v12);
  type metadata accessor for NativeTensorStorage();
  swift_allocObject();
  sub_242B1DE4C(v29, v31, v9, v7, v25, v16);
  OUTLINED_FUNCTION_165_2();
  memset(v29, 0, sizeof(v29));
  v30 = 0;
  v26 = OUTLINED_FUNCTION_2_0();
  v27 = OUTLINED_FUNCTION_10();
  v31[0] = 1;
  sub_242B6CBB0(v27, (uint64_t)v29, 0x100000000, v26);
  OUTLINED_FUNCTION_47_20();
  v28 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_16_34(v28);
  sub_242BC995C();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v12);
  *v11 = v28;
  OUTLINED_FUNCTION_13_11();
}

uint64_t Tensor.init(contentsOfFile:shape:scalarType:on:)@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[56];
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_4_9();
  v12 = *a1;
  sub_242C47B28();
  swift_bridgeObjectRelease();
  v15 = v12;
  sub_242A66290(a4, (uint64_t)v14);
  Tensor.init(contentsOf:shape:scalarType:on:)(&v15, a2, a3, (uint64_t)v14, &v16);
  result = sub_242A662D8(a4);
  if (!v5)
    *a5 = v16;
  return result;
}

uint64_t Tensor.init(contentsOf:shape:scalarType:on:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[55];
  unsigned __int8 v20;
  uint64_t v21;
  _BYTE v22[56];
  uint64_t v23;

  v10 = *a1;
  v11 = sub_242C47B94();
  if (v5)
  {
    swift_bridgeObjectRelease();
    sub_242A662D8(a4);
    v13 = OUTLINED_FUNCTION_16_1();
    return OUTLINED_FUNCTION_242_0(v13);
  }
  else
  {
    v15 = v11;
    v16 = v12;
    sub_242A66290(a4, (uint64_t)v22);
    v21 = v10;
    (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v20, a2, a3);
    sub_242A66290((uint64_t)v22, (uint64_t)v19);
    Tensor.init(shape:data:scalarType:on:)(&v21, v15, v16, &v20, (uint64_t)v19);
    sub_242A662D8((uint64_t)v22);
    v17 = v23;
    sub_242A662D8(a4);
    v18 = OUTLINED_FUNCTION_16_1();
    result = OUTLINED_FUNCTION_242_0(v18);
    *a5 = v17;
  }
  return result;
}

void _s14NeuralNetworks6TensorV5zeros10scalarType2onAcA0C5ShapeV_AA0C13IntegerScalar_pXpAA13ComputeDeviceVSgtcfC_0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[55];
  char v12;
  uint64_t v13;
  uint64_t v14;

  v13 = *a1;
  v5 = (*(_QWORD *(**)(char *__return_ptr, uint64_t))(*(_QWORD *)(a3 + 8) + 32))(&v12, a2);
  OUTLINED_FUNCTION_180_1((uint64_t)v5);
  Tensor.init(zeros:scalarType:on:)(&v13, &v12, (uint64_t)v11, v6, v7, v8, v9, v10, &v14);
  OUTLINED_FUNCTION_303();
  *a4 = v14;
  OUTLINED_FUNCTION_309();
}

uint64_t Tensor.init(ones:scalarType:on:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_242B46818(a1, a2, a3, a4, (uint64_t)sub_242B4F244, a5);
}

{
  return sub_242B46818(a1, a2, a3, a4, (uint64_t)sub_242B4F22C, a5);
}

uint64_t sub_242B46730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(int *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v13;
  int v14;

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 1;
  v10 = *(void (**)(int *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(v9 + 16);
  v11 = sub_242B4F184();
  v10(&v14, MEMORY[0x24BEE3F88], &protocol witness table for Int32, v11, a3, a4);
  sub_242C48AB8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
}

uint64_t sub_242B46818@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[136];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int v18;
  _OWORD v19[3];
  int v20;

  v10 = *a1;
  sub_242A66290(a4, (uint64_t)&v15);
  if (*((_QWORD *)&v16 + 1))
  {
    v19[0] = v15;
    v19[1] = v16;
    v19[2] = v17;
    v20 = v18;
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    sub_242B933C0((uint64_t)v14);
    OUTLINED_FUNCTION_135();
    sub_242A66290((uint64_t)v14, (uint64_t)v19);
    sub_242A5DC30((uint64_t)v14);
    sub_242A662D8((uint64_t)&v15);
  }
  v11 = sub_242B46930(a2, v10, a2, a3, (uint64_t)v19, a2, a3, a5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_2();
  v12 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v12 + 16) = v11;
  OUTLINED_FUNCTION_91();
  sub_242BC995C();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_356();
  result = sub_242A662D8((uint64_t)v19);
  *a6 = v12;
  return result;
}

uint64_t sub_242B46930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[8];
  uint64_t v21;

  if (qword_2572205A8 != -1)
    swift_once();
  v20[0] = a2;
  v13 = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(a4 + 8) + 32))(&v21, a3);
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_242C0484C(v20, &v21, a5, a8);
  v16 = v15;
  v17 = OUTLINED_FUNCTION_165_2();
  sub_242A66290(a5, (uint64_t)v20);
  v18 = OUTLINED_FUNCTION_65_3();
  LOBYTE(v21) = 1;
  return sub_242BCBE34(v14, (uint64_t)v20, 0x100000000uLL, v17, v18, v16);
}

uint64_t sub_242B46A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(int *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v13;
  int v14;

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 1065353216;
  v10 = *(void (**)(int *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(v9 + 16);
  v11 = sub_242A77290();
  v10(&v14, MEMORY[0x24BEE14E8], &protocol witness table for Float, v11, a3, a4);
  sub_242C48AB8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
}

uint64_t Tensor.init<A>(identity:scalarType:on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t result;
  uint64_t v9;
  __int128 v10;
  char v11;
  __int128 v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16) < 2uLL)
  {
    v9 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    v10 = xmmword_242C57980;
    v11 = 0;
    v12 = xmmword_242C4CA60;
    v13 = 2;
    v14 = 7;
    sub_242A59264();
  }
  v17 = *(_QWORD *)a1;
  OUTLINED_FUNCTION_352(a1, a2, a3, a4, a5);
  sub_242A66290(a3, (uint64_t)&v9);
  Tensor.init(ones:scalarType:on:)(&v17, &v16, (uint64_t)&v9, &v15);
  Tensor.bandPart(lowerBandCount:upperBandCount:)(0, 0, &v9);
  OUTLINED_FUNCTION_356();
  result = swift_release();
  *a6 = v9;
  return result;
}

void Tensor.init<A>(oneHotAtIndex:depth:onValue:offValue:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_257_0(v2, v3, v4, v5, v6, v7, v8, v9);
  v11 = v10;
  OUTLINED_FUNCTION_217_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_298();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v14 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v14 + 32) = v11;
  OUTLINED_FUNCTION_216_1(v14);
  v15 = OUTLINED_FUNCTION_272();
  OUTLINED_FUNCTION_218_1(v15, (uint64_t)&v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242B4F124((unint64_t *)&qword_257227220, &qword_257220EA0);
  v16 = OUTLINED_FUNCTION_134_3();
  Tensor.init<A, B>(oneHotAtIndices:depth:onValue:offValue:scalarType:on:)(v16);
  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_214_1(v1);
  OUTLINED_FUNCTION_214_1(v0);
  swift_release();
  OUTLINED_FUNCTION_158_2(v17);
  OUTLINED_FUNCTION_13_11();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_257_0(v2, v3, v4, v5, v6, v7, v8, v9);
  v11 = v10;
  OUTLINED_FUNCTION_217_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_298();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
  v14 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(v14 + 32) = v11;
  OUTLINED_FUNCTION_216_1(v14);
  v15 = OUTLINED_FUNCTION_272();
  OUTLINED_FUNCTION_218_1(v15, (uint64_t)&v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B18);
  sub_242B4F124(&qword_257228428, &qword_257222B18);
  v16 = OUTLINED_FUNCTION_134_3();
  Tensor.init<A, B>(oneHotAtIndices:depth:onValue:offValue:scalarType:on:)(v16);
  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_214_1(v1);
  OUTLINED_FUNCTION_214_1(v0);
  swift_release();
  OUTLINED_FUNCTION_158_2(v17);
  OUTLINED_FUNCTION_13_11();
}

#error "242B46D4C: call analysis failed (funcsize=12)"

#error "242B46E74: call analysis failed (funcsize=12)"

void sub_242B46E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD *))
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[6];
  int v66;
  uint64_t v67;

  OUTLINED_FUNCTION_17_17();
  v27 = v26;
  v58 = v28;
  v59 = v29;
  v61 = v30;
  v62 = v31;
  v33 = v32;
  v63 = v34;
  v60 = a21;
  v56 = a25;
  v57 = v35;
  v55 = a24;
  OUTLINED_FUNCTION_217_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_36_11();
  v39 = (char *)(v37 - v38);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v55 - v41;
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_4_9();
  v48 = v47 - v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v49 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v49 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v49 + 32) = sub_242C487B8();
  OUTLINED_FUNCTION_26_22(v48, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 16));
  v50 = sub_242C4865C();
  v66 = 0;
  memset(v65, 0, sizeof(v65));
  v56(&v64, v49, v50, v65);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v51(v42, v57, v27);
  v52 = v58;
  v51(v39, v58, v27);
  sub_242A66290(v59, (uint64_t)v65);
  Tensor.init<A>(oneHotAtIndices:depth:onValue:offValue:scalarType:on:)();
  OUTLINED_FUNCTION_66_11();
  v53 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v53(v52, v27);
  v54 = OUTLINED_FUNCTION_362();
  ((void (*)(uint64_t))v53)(v54);
  OUTLINED_FUNCTION_51_8(v33, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
  OUTLINED_FUNCTION_158_2(v67);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B47048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[6];
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v6)
        break;
      OUTLINED_FUNCTION_358();
      if (v6)
        goto LABEL_8;
    }
    __break(1u);
LABEL_10:
    v10 = a2;
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    v11 = a1;
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_37_20();
    if (*(_QWORD *)(v11 + 16))
    {
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v6)
          break;
        OUTLINED_FUNCTION_358();
        if (v6)
          goto LABEL_17;
      }
      __break(1u);
    }
    v12 = 1;
LABEL_17:
    v16 = v12;
    OUTLINED_FUNCTION_155_0();
    sub_242C48314();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_103_3();
    v16 = *(_QWORD *)(v10 + 16);
    OUTLINED_FUNCTION_155_0();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
  v7 = 1;
LABEL_8:
  if (v7 != *(_QWORD *)(a2 + 16))
    goto LABEL_10;
  v15 = a1;
  v14 = 3;
  v8 = sub_242A66290(a3, (uint64_t)v13);
  MEMORY[0x24BDAC7A8](v8);
  Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)&v15, (uint64_t)&v14, (uint64_t)v13, (uint64_t)sub_242B4F214);
  sub_242A662D8(a3);
  result = swift_bridgeObjectRelease();
  *a4 = v16;
  return result;
}

void Tensor.init<A>(oneHotAtIndices:depth:onValue:offValue:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char **v9;
  const char **v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  unsigned __int8 v17;
  void *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  _BYTE v56[56];
  _OWORD v57[3];
  int v58;
  const char *v59;
  __int128 v60;
  __int128 v61;
  const char *v62;
  uint64_t v63;
  __int16 v64;

  OUTLINED_FUNCTION_178_1();
  v1 = v0;
  v46 = v3;
  v47 = v2;
  v43 = v4;
  v44 = v5;
  v48 = v6;
  v8 = v7;
  v10 = v9;
  v45 = v11;
  v12 = OUTLINED_FUNCTION_370();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v10;
  v17 = *(_BYTE *)(*((_QWORD *)*v10 + 2) + 160);
  v18 = static ScalarType.integerTypes.getter();
  v19 = sub_242B64794(v17, (uint64_t)v18);
  swift_bridgeObjectRelease();
  if (!v19)
  {
    LOBYTE(v49) = v17;
    sub_242C21A14();
    v39 = v38;
    v41 = v40;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    *(_QWORD *)&v49 = v39;
    *((_QWORD *)&v49 + 1) = v41;
    v50 = xmmword_242C57990;
    LOBYTE(v51) = 0;
    *((_QWORD *)&v51 + 1) = v42;
    LOBYTE(v52) = 2;
    v55 = 3;
    sub_242A59264();
  }
  if (v8 <= 0)
  {
    OUTLINED_FUNCTION_42_2();
    v43 = 637;
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
  v59 = v16;
  LOBYTE(v57[0]) = 2;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE38B8], v12);
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_84_2((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_13_0();
  v20 = v49;
  v21 = *(_QWORD *)(v49 + 16);
  v22 = *(_QWORD *)(v21 + 152);
  sub_242C480E0();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_363(0, *(_QWORD *)(v22 + 16) + 1);
    v22 = v36;
  }
  v24 = *(_QWORD *)(v22 + 16);
  v23 = *(_QWORD *)(v22 + 24);
  if (v24 >= v23 >> 1)
  {
    OUTLINED_FUNCTION_363(v23 > 1, v24 + 1);
    v22 = v37;
  }
  *(_QWORD *)(v22 + 16) = v24 + 1;
  *(_QWORD *)(v22 + 8 * v24 + 32) = v8;
  OUTLINED_FUNCTION_10();
  v25 = v46;
  v26 = sub_242B91580();
  v27 = sub_242B91580();
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v1 + 32))(&v49, v25, v1);
  v28 = v49;
  v60 = xmmword_242C4C080;
  v61 = xmmword_242C579A0;
  v59 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorCreationOps.swift";
  v62 = "init(id:indices:depth:onValue:offValue:resultDescriptor:creationSite:)";
  v63 = 70;
  v64 = 2;
  type metadata accessor for OneHotOperation();
  OUTLINED_FUNCTION_2_0();
  v29 = sub_242B40F20(0, 0, 0, v21, v8, v22, v28, (uint64_t)&v59, v26, v27);
  sub_242A66290(v44, (uint64_t)&v49);
  if (*((_QWORD *)&v50 + 1))
  {
    v57[0] = v49;
    v57[1] = v50;
    v57[2] = v51;
    v58 = v52;
  }
  else
  {
    sub_242A66290(*(_QWORD *)(v20 + 16) + 168, (uint64_t)v57);
    sub_242A662D8((uint64_t)&v49);
  }
  v30 = v45;
  sub_242A66290((uint64_t)v57, (uint64_t)v56);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_11();
  sub_242B93328();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_135();
  v31 = v54;
  OUTLINED_FUNCTION_10();
  sub_242A5DC30((uint64_t)&v49);
  sub_242B93328();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_135();
  v32 = v53;
  OUTLINED_FUNCTION_91();
  sub_242A5DC30((uint64_t)&v49);
  OUTLINED_FUNCTION_165_2();
  v33 = OUTLINED_FUNCTION_2_0();
  LOBYTE(v49) = 1;
  v34 = sub_242B4D018(v29, 0, v56, 0x100000000, v31, v32, v33);
  OUTLINED_FUNCTION_23_2();
  v35 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v35 + 16) = v34;
  OUTLINED_FUNCTION_91();
  sub_242BC995C();
  OUTLINED_FUNCTION_135();
  sub_242A662D8((uint64_t)v57);
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_316();
  OUTLINED_FUNCTION_214_1(v47);
  OUTLINED_FUNCTION_214_1(v48);
  *v30 = v35;
  OUTLINED_FUNCTION_81_1();
}

void Tensor.init<A>(rangeFrom:to:stride:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_242C494CC();
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v9);
  sub_242C49424();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE49C8], v8);
  v14 = sub_242C4865C();
  OUTLINED_FUNCTION_218_1(v14, (uint64_t)&v13);
  v10 = OUTLINED_FUNCTION_369();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12D8], v10);
  Tensor.init<A>(_:scalarType:on:)();
  OUTLINED_FUNCTION_259_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v3, AssociatedTypeWitness);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8);
  v12(v5, v1);
  v12(v7, v1);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init<A>(linearSpaceFrom:through:count:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[10];

  OUTLINED_FUNCTION_17_17();
  v23 = v22;
  v56 = v25;
  v57 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v58 = v32;
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_36_11();
  v35 = v33 - v34;
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_338();
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v53 - v39;
  if (v41 < 2)
  {
    OUTLINED_FUNCTION_42_2();
    v53 = 708;
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
  v54 = a21;
  v55 = v38;
  sub_242C48F8C();
  sub_242C48140();
  OUTLINED_FUNCTION_362();
  sub_242C4811C();
  OUTLINED_FUNCTION_256_0(v35);
  v42 = OUTLINED_FUNCTION_256_0(v21);
  v59[0] = 0;
  v59[1] = v29;
  MEMORY[0x24BDAC7A8](v42);
  v43 = v56;
  *(&v53 - 6) = v27;
  *(&v53 - 5) = v43;
  v44 = v54;
  *(&v53 - 4) = v23;
  *(&v53 - 3) = v44;
  *(&v53 - 2) = v31;
  *(&v53 - 1) = (uint64_t)v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B28);
  sub_242AA1C14();
  OUTLINED_FUNCTION_368();
  v59[7] = sub_242A7DAD0(v45, v46, v47, v27, v48, v49, v50, v51);
  sub_242A66290(v57, (uint64_t)v59);
  v52 = OUTLINED_FUNCTION_369();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12D8], v52);
  Tensor.init<A>(_:scalarType:on:)();
  OUTLINED_FUNCTION_356();
  OUTLINED_FUNCTION_256_0(v55);
  OUTLINED_FUNCTION_256_0(v31);
  OUTLINED_FUNCTION_256_0((uint64_t)v40);
  OUTLINED_FUNCTION_158_2(v59[8]);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B479B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];

  v5 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v13 - v9;
  sub_242C48140();
  sub_242C48794();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, a4);
  sub_242C48F80();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, a4);
}

void Tensor.init<A, B>(randomUniform:in:using:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD v11[14];

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_169_0(v3, v4, v5, v6);
  v7 = sub_242C481F4();
  OUTLINED_FUNCTION_318();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11[12] = *v2;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v1 + 16))((char *)v11 - v10, v0, v7, v9);
  OUTLINED_FUNCTION_317();
  OUTLINED_FUNCTION_249_0();
  OUTLINED_FUNCTION_324();
  Tensor.init<A>(randomUniform:in:seed:scalarType:on:)();
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_84_2(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_158_2(v11[13]);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init<A, B>(randomUniform:in:using:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[14];

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_169_0(v24, v25, v26, v27);
  sub_242C481F4();
  OUTLINED_FUNCTION_318();
  MEMORY[0x24BDAC7A8](v28);
  v39[12] = *v23;
  OUTLINED_FUNCTION_26_22((uint64_t)v39 - v29, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  OUTLINED_FUNCTION_317();
  OUTLINED_FUNCTION_249_0();
  OUTLINED_FUNCTION_324();
  Tensor.init<A>(randomUniform:in:seed:scalarType:on:)(v30, v31, v32, v33, v34, v35, v36, v37, a21, v38, v39[0], v39[1], v39[2], v39[3], v39[4], v39[5], v39[6], v39[7], v39[8],
    v39[9],
    v39[10]);
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_51_8(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_158_2(v39[13]);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init<A>(randomUniform:in:seed:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  char v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t i;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  BOOL v143;
  BOOL v144;
  BOOL v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  int v151;
  uint64_t v152;
  _BYTE v153[4];
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t AssociatedTypeWitness;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  int v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  int v189;
  uint64_t v190;
  _UNKNOWN **v191;
  __int16 v192;
  int v193;
  __int128 v194;
  __int128 v195;

  OUTLINED_FUNCTION_17_17();
  v165 = v22;
  v166 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v179 = v31;
  v33 = v32;
  v171 = v34;
  v35 = OUTLINED_FUNCTION_370();
  v168 = *(_QWORD *)(v35 - 8);
  v169 = v35;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_5_6();
  v167 = v37;
  v38 = *(_QWORD *)(a21 + 8);
  v159 = *(_QWORD *)(*(_QWORD *)(v38 + 24) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v39);
  v158 = &v153[-v40];
  v177 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_13_1();
  v155 = v42;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_8_11();
  v175 = v44;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_8_11();
  v174 = v46;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_8_11();
  v161 = v48;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_8_11();
  v156 = v50;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_8_11();
  v160 = v52;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_8_11();
  v172 = v54;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_8_11();
  v178 = v56;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_8_11();
  v176 = v58;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_8_11();
  v173 = v60;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_8_11();
  v163 = v62;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_8_11();
  v162 = v64;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v65);
  v67 = &v153[-v66];
  MEMORY[0x24BDAC7A8](v68);
  v70 = &v153[-v69];
  v71 = *v33;
  v170 = v26;
  OUTLINED_FUNCTION_218_1(v72, (uint64_t)&v193);
  if (!(_QWORD)v195)
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_262_0();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_243_0((uint64_t)&v186);
    OUTLINED_FUNCTION_313();
    OUTLINED_FUNCTION_209_1();
    if ((v28 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    OUTLINED_FUNCTION_22_2();
    v73 = (uint64_t)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_2_34();
    v74 = *(_QWORD *)(*(_QWORD *)v73 + 16);
    OUTLINED_FUNCTION_0_3();
    v75 = *(_QWORD *)v73;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v73 = v75;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v74)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v75 = v152;
      *(_QWORD *)v73 = v152;
      if (v74)
      {
LABEL_7:
        if (v74 <= *(_QWORD *)(v75 + 16))
        {
          v30 = OUTLINED_FUNCTION_240();
          swift_endAccess();
          OUTLINED_FUNCTION_50_0();
          goto LABEL_9;
        }
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
    }
    __break(1u);
    goto LABEL_90;
  }
  OUTLINED_FUNCTION_228_1();
  if ((v28 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v77 = sub_242B40ACC(v30);
  v186 = v78;
  *(_QWORD *)&v187 = v79;
  BYTE8(v187) = v77 & 1;
  *(_QWORD *)&v188 = v80;
  sub_242AC87F0(&v181);
  v164 = *(_QWORD *)(v181 + 16);
  swift_retain();
  OUTLINED_FUNCTION_135();
  v185 = v71;
  OUTLINED_FUNCTION_148_2((uint64_t)v70, v179);
  v81 = OUTLINED_FUNCTION_54_10();
  OUTLINED_FUNCTION_148_2((uint64_t)v67, (uint64_t)v70);
  v82 = v173;
  if ((v81 & 1) == 0)
  {
    OUTLINED_FUNCTION_50_14((uint64_t)v67);
    goto LABEL_15;
  }
  v83 = OUTLINED_FUNCTION_69_7();
  OUTLINED_FUNCTION_50_14((uint64_t)v67);
  if (v83 <= 32)
  {
LABEL_15:
    v86 = v178;
    goto LABEL_16;
  }
  v84 = v162;
  OUTLINED_FUNCTION_148_2(v162, (uint64_t)v70);
  LODWORD(v186) = 0x80000000;
  v85 = OUTLINED_FUNCTION_54_10();
  v86 = v178;
  if ((v85 & 1) != 0)
  {
    if (OUTLINED_FUNCTION_69_7() < 32)
    {
LABEL_72:
      v73 = OUTLINED_FUNCTION_96_3();
      OUTLINED_FUNCTION_50_14(v84);
      OUTLINED_FUNCTION_310();
      if (!(v144 ^ v145 | v143))
        goto LABEL_93;
      goto LABEL_16;
    }
LABEL_63:
    sub_242B4F184();
    v133 = v163;
    OUTLINED_FUNCTION_89_3();
    v73 = OUTLINED_FUNCTION_184_1();
    OUTLINED_FUNCTION_50_14(v133);
    OUTLINED_FUNCTION_50_14(v162);
    if ((v73 & 1) != 0)
      goto LABEL_93;
    goto LABEL_16;
  }
  v131 = OUTLINED_FUNCTION_54_10();
  v132 = OUTLINED_FUNCTION_69_7();
  if ((v131 & 1) == 0)
  {
    if (v132 >= 32)
    {
      OUTLINED_FUNCTION_50_14(v162);
      goto LABEL_16;
    }
    v84 = v162;
    goto LABEL_72;
  }
  if (v132 > 32)
    goto LABEL_63;
  OUTLINED_FUNCTION_227_1();
  OUTLINED_FUNCTION_359();
  v146 = v163;
  sub_242C49250();
  v154 = OUTLINED_FUNCTION_184_1();
  OUTLINED_FUNCTION_50_14(v146);
  v73 = v156;
  OUTLINED_FUNCTION_61_8(v156, v162, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v177 + 32));
  if ((v154 & 1) != 0)
  {
LABEL_92:
    OUTLINED_FUNCTION_50_14(v73);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  LODWORD(v162) = v186;
  v147 = OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_50_14(v73);
  if ((int)v162 > v147)
    goto LABEL_93;
LABEL_16:
  v87 = OUTLINED_FUNCTION_69_7();
  OUTLINED_FUNCTION_148_2(v82, (uint64_t)v70);
  if (v87 < 33)
  {
    v88 = OUTLINED_FUNCTION_69_7();
    OUTLINED_FUNCTION_50_14(v82);
    if (v88 != 32 || (OUTLINED_FUNCTION_54_10() & 1) != 0)
      goto LABEL_29;
  }
  else
  {
    OUTLINED_FUNCTION_50_14(v82);
  }
  OUTLINED_FUNCTION_148_2(v176, (uint64_t)v70);
  LODWORD(v186) = 0x7FFFFFFF;
  v89 = OUTLINED_FUNCTION_54_10();
  v90 = OUTLINED_FUNCTION_69_7();
  if ((v89 & 1) == 0)
  {
    if (v90 > 31)
      goto LABEL_27;
LABEL_24:
    v95 = v176;
    OUTLINED_FUNCTION_96_3();
    OUTLINED_FUNCTION_50_14(v95);
    OUTLINED_FUNCTION_310();
    if (v144 != v145)
      goto LABEL_26;
    goto LABEL_29;
  }
  if (v90 <= 32)
    goto LABEL_24;
  sub_242B4F184();
  v91 = v163;
  OUTLINED_FUNCTION_89_3();
  v92 = v176;
  v93 = sub_242C481AC();
  OUTLINED_FUNCTION_50_14(v91);
  for (i = v92; ; i = v96)
  {
    OUTLINED_FUNCTION_50_14(i);
    if ((v93 & 1) == 0)
      break;
LABEL_26:
    __break(1u);
LABEL_27:
    v193 = 0x7FFFFFFF;
    v96 = v163;
    OUTLINED_FUNCTION_61_8(v163, v176, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v177 + 32));
    sub_242B4F184();
    v97 = v160;
    OUTLINED_FUNCTION_89_3();
    OUTLINED_FUNCTION_362();
    v93 = sub_242C481AC();
    OUTLINED_FUNCTION_50_14(v97);
  }
LABEL_29:
  v98 = OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_50_14((uint64_t)v70);
  v173 = *(_QWORD *)(*(_QWORD *)(v38 + 32) + 8);
  v176 = sub_242C481F4();
  OUTLINED_FUNCTION_148_2(v86, v179 + *(int *)(v176 + 36));
  v99 = OUTLINED_FUNCTION_54_10();
  v100 = v172;
  OUTLINED_FUNCTION_148_2(v172, v86);
  if ((v99 & 1) == 0)
  {
    OUTLINED_FUNCTION_50_14(v100);
    v102 = v174;
    goto LABEL_36;
  }
  v101 = OUTLINED_FUNCTION_69_7();
  OUTLINED_FUNCTION_50_14(v100);
  v102 = v174;
  if (v101 <= 32)
    goto LABEL_36;
  v103 = v161;
  OUTLINED_FUNCTION_148_2(v161, v86);
  LODWORD(v186) = 0x80000000;
  if ((OUTLINED_FUNCTION_54_10() & 1) == 0)
  {
    v134 = OUTLINED_FUNCTION_54_10();
    v135 = OUTLINED_FUNCTION_69_7();
    if ((v134 & 1) != 0)
    {
      if (v135 > 32)
      {
        sub_242B4F184();
        v136 = v163;
        OUTLINED_FUNCTION_89_3();
        v137 = v161;
        v138 = OUTLINED_FUNCTION_167_2();
        OUTLINED_FUNCTION_50_14(v136);
        OUTLINED_FUNCTION_50_14(v137);
        v86 = v178;
        if ((v138 & 1) != 0)
          goto LABEL_95;
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_227_1();
      OUTLINED_FUNCTION_359();
      v148 = v163;
      sub_242C49250();
      v149 = v161;
      LODWORD(v172) = OUTLINED_FUNCTION_167_2();
      OUTLINED_FUNCTION_50_14(v148);
      v73 = v155;
      OUTLINED_FUNCTION_61_8(v155, v149, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v177 + 32));
      if ((v172 & 1) != 0)
      {
LABEL_94:
        OUTLINED_FUNCTION_50_14(v73);
LABEL_95:
        __break(1u);
        return;
      }
      v150 = v186;
      v151 = OUTLINED_FUNCTION_96_3();
      OUTLINED_FUNCTION_50_14(v73);
      v145 = __OFSUB__(v150, v151);
      v143 = v150 == v151;
      v144 = v150 - v151 < 0;
    }
    else
    {
      if (v135 >= 32)
      {
        OUTLINED_FUNCTION_50_14(v161);
        v86 = v178;
        goto LABEL_36;
      }
      v142 = v161;
      OUTLINED_FUNCTION_96_3();
      OUTLINED_FUNCTION_50_14(v142);
      OUTLINED_FUNCTION_310();
    }
    v86 = v178;
    if (!(v144 ^ v145 | v143))
      goto LABEL_95;
    goto LABEL_36;
  }
  if (OUTLINED_FUNCTION_69_7() >= 32)
  {
    sub_242B4F184();
    v139 = v163;
    OUTLINED_FUNCTION_89_3();
    v140 = sub_242C481AC();
    v141 = v139;
    v102 = v174;
    OUTLINED_FUNCTION_50_14(v141);
    OUTLINED_FUNCTION_50_14(v103);
    if ((v140 & 1) != 0)
      goto LABEL_95;
  }
  else
  {
    OUTLINED_FUNCTION_96_3();
    OUTLINED_FUNCTION_50_14(v103);
    OUTLINED_FUNCTION_310();
    if (!(v144 ^ v145 | v143))
      goto LABEL_95;
  }
LABEL_36:
  v104 = OUTLINED_FUNCTION_69_7();
  OUTLINED_FUNCTION_148_2(v102, v86);
  if (v104 >= 33)
  {
    OUTLINED_FUNCTION_50_14(v102);
    goto LABEL_40;
  }
  v105 = OUTLINED_FUNCTION_69_7();
  OUTLINED_FUNCTION_50_14(v102);
  if (v105 == 32 && (OUTLINED_FUNCTION_54_10() & 1) == 0)
  {
LABEL_40:
    OUTLINED_FUNCTION_148_2(v175, v86);
    LODWORD(v186) = 0x7FFFFFFF;
    v106 = OUTLINED_FUNCTION_54_10();
    v107 = OUTLINED_FUNCTION_69_7();
    if ((v106 & 1) != 0)
    {
      if (v107 > 32)
      {
        sub_242B4F184();
        v108 = v163;
        OUTLINED_FUNCTION_89_3();
        v109 = v175;
        goto LABEL_46;
      }
    }
    else if (v107 > 31)
    {
      v193 = 0x7FFFFFFF;
      v109 = v163;
      OUTLINED_FUNCTION_61_8(v163, v175, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v177 + 32));
      sub_242B4F184();
      v108 = v160;
      OUTLINED_FUNCTION_89_3();
LABEL_46:
      v73 = OUTLINED_FUNCTION_167_2();
      OUTLINED_FUNCTION_50_14(v108);
      OUTLINED_FUNCTION_50_14(v109);
      v86 = v178;
      if ((v73 & 1) == 0)
        goto LABEL_47;
      goto LABEL_91;
    }
    v110 = v175;
    OUTLINED_FUNCTION_96_3();
    OUTLINED_FUNCTION_50_14(v110);
    v86 = v178;
  }
LABEL_47:
  v111 = OUTLINED_FUNCTION_96_3();
  OUTLINED_FUNCTION_50_14(v86);
  if (v111 < (int)v98)
  {
    __break(1u);
LABEL_87:
    swift_once();
    goto LABEL_50;
  }
  *((_QWORD *)&v187 + 1) = MEMORY[0x24BEE3F88];
  *(_QWORD *)&v188 = &protocol witness table for Int32;
  LODWORD(v186) = v98;
  v190 = MEMORY[0x24BEE3F88];
  v191 = &protocol witness table for Int32;
  DWORD2(v188) = v111;
  v192 = 514;
  v194 = xmmword_242C4CA40;
  v195 = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  OUTLINED_FUNCTION_2_0();
  v112 = OUTLINED_FUNCTION_128_3();
  v98 = sub_242B91B60(v112, v113, v114, v164, v115, v116, v117);
  OUTLINED_FUNCTION_326();
  if (!*((_QWORD *)&v182 + 1))
  {
    OUTLINED_FUNCTION_11();
    sub_242A662D8((uint64_t)&v181);
LABEL_54:
    v181 = 0u;
    v182 = 0u;
    v183 = 0u;
    v184 = 0;
    goto LABEL_55;
  }
  OUTLINED_FUNCTION_265_0();
  sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  v118 = qword_2572205A0;
  OUTLINED_FUNCTION_11();
  if (v118 != -1)
    goto LABEL_87;
LABEL_50:
  v119 = (uint64_t *)(qword_25722D2A8 + 16);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_150_3(v119, &v181);
  OUTLINED_FUNCTION_360();
  v120 = v181;
  OUTLINED_FUNCTION_17_5();
  if ((v189 & ~v120) != 0)
  {
    sub_242A6FDE8((uint64_t)&v186);
    goto LABEL_54;
  }
  v181 = v186;
  v182 = v187;
  v183 = v188;
  v184 = v189;
LABEL_55:
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_313();
  sub_242B93328();
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_165_2();
  v121 = OUTLINED_FUNCTION_2_0();
  LOBYTE(v186) = 1;
  OUTLINED_FUNCTION_119_3(v98, v122, (uint64_t)&v181, 0x100000000, v123, v124, v121);
  v126 = v125;
  OUTLINED_FUNCTION_23_2();
  v127 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v127 + 16) = v126;
  OUTLINED_FUNCTION_10();
  sub_242BC995C();
  OUTLINED_FUNCTION_326();
  if (*((_QWORD *)&v182 + 1))
  {
    OUTLINED_FUNCTION_265_0();
    *(_QWORD *)&v181 = v127;
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_264(v128, v129);
    OUTLINED_FUNCTION_302();
    if (!v143)
    {
      OUTLINED_FUNCTION_159_3();
      OUTLINED_FUNCTION_97_4((uint64_t)&v186, v130);
    }
    *(_QWORD *)&v181 = v127;
    OUTLINED_FUNCTION_5();
    Tensor.place(on:)((uint64_t)&v186);
    sub_242A6FDE8((uint64_t)&v186);
    OUTLINED_FUNCTION_28_5();
    v127 = v181;
  }
  else
  {
    sub_242A662D8((uint64_t)&v181);
    *(_QWORD *)&v181 = v127;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v168 + 104))(v167, *MEMORY[0x24BEE38B8], v169);
  v185 = v127;
  (*(void (**)(char *__return_ptr, uint64_t))(*(_QWORD *)(v165 + 8) + 32))(&v180, v24);
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  sub_242A662D8(v170);
  (*(void (**)(uint64_t))(*(_QWORD *)(v176 - 8) + 8))(v179);
  OUTLINED_FUNCTION_276();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_62_10();
  OUTLINED_FUNCTION_158_2(v186);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init<A>(randomUniform:using:scalarType:on:)(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_242C4814C();
  OUTLINED_FUNCTION_180_1(v2);
  Tensor.init(randomUniform:seed:scalarType:on:)();
  OUTLINED_FUNCTION_303();
  *a1 = v3;
  OUTLINED_FUNCTION_309();
}

void Tensor.init(randomUniform:seed:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  os_unfair_lock_s *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  int v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  int v55;
  uint64_t v56;
  _UNKNOWN **v57;
  __int16 v58;
  _BYTE v59[24];
  __int128 v60;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_5_6();
  v46 = v12;
  v13 = *v7;
  sub_242A66290(v1, (uint64_t)v59);
  if ((_QWORD)v60)
  {
    OUTLINED_FUNCTION_228_1();
    if ((v3 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    OUTLINED_FUNCTION_22_2();
    v14 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_2_34();
    v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    OUTLINED_FUNCTION_0_3();
    v16 = *(_QWORD *)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v16 = v45;
      *(_QWORD *)v14 = v45;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(_QWORD *)(v16 + 16))
        {
          v5 = OUTLINED_FUNCTION_240();
          swift_endAccess();
          OUTLINED_FUNCTION_157_0();
          goto LABEL_9;
        }
LABEL_24:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_263_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_243_0((uint64_t)&v52);
  OUTLINED_FUNCTION_333();
  OUTLINED_FUNCTION_209_1();
  if ((v3 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v18 = sub_242B40ACC(v5);
  v52 = v19;
  *(_QWORD *)&v53 = v20;
  BYTE8(v53) = v18 & 1;
  *(_QWORD *)&v54 = v21;
  sub_242AC87F0(&v47);
  v22 = *(_QWORD *)(v47 + 16);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_28_5();
  v51 = v13;
  *((_QWORD *)&v53 + 1) = MEMORY[0x24BEE1768];
  *(_QWORD *)&v54 = &protocol witness table for Int;
  *(_QWORD *)&v52 = 0;
  v56 = MEMORY[0x24BEE1768];
  v57 = &protocol witness table for Int;
  *((_QWORD *)&v54 + 1) = 1;
  v58 = 514;
  *(_OWORD *)&v59[8] = xmmword_242C4CA40;
  v60 = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  OUTLINED_FUNCTION_2_0();
  v23 = OUTLINED_FUNCTION_128_3();
  v29 = sub_242B91B60(v23, v24, v25, v22, v26, v27, v28);
  OUTLINED_FUNCTION_327();
  if (*((_QWORD *)&v48 + 1))
  {
    OUTLINED_FUNCTION_255_0();
    sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
    v30 = qword_2572205A0;
    OUTLINED_FUNCTION_123_0();
    if (v30 != -1)
      swift_once();
    v31 = (uint64_t *)(qword_25722D2A8 + 16);
    v32 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
    OUTLINED_FUNCTION_158_0();
    os_unfair_lock_lock(v32);
    OUTLINED_FUNCTION_150_3(v31, &v47);
    os_unfair_lock_unlock(v32);
    v33 = v47;
    OUTLINED_FUNCTION_19_5();
    if ((v55 & ~v33) != 0)
    {
      sub_242A6FDE8((uint64_t)&v52);
      OUTLINED_FUNCTION_321();
    }
    else
    {
      v47 = v52;
      v48 = v53;
      v49 = v54;
      v50 = v55;
    }
  }
  else
  {
    OUTLINED_FUNCTION_123_0();
    sub_242A662D8((uint64_t)&v47);
    OUTLINED_FUNCTION_321();
  }
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_263_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_333();
  sub_242B93328();
  OUTLINED_FUNCTION_263_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_333();
  OUTLINED_FUNCTION_165_2();
  v34 = OUTLINED_FUNCTION_2_0();
  LOBYTE(v52) = 1;
  OUTLINED_FUNCTION_119_3(v29, v35, (uint64_t)&v47, 0x100000000, v36, v37, v34);
  v39 = v38;
  OUTLINED_FUNCTION_23_2();
  v40 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v40 + 16) = v39;
  OUTLINED_FUNCTION_5();
  sub_242BC995C();
  OUTLINED_FUNCTION_327();
  if (*((_QWORD *)&v48 + 1))
  {
    OUTLINED_FUNCTION_255_0();
    *(_QWORD *)&v47 = v40;
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_264(v41, v42);
    OUTLINED_FUNCTION_302();
    if (!v43)
    {
      OUTLINED_FUNCTION_159_3();
      OUTLINED_FUNCTION_97_4((uint64_t)&v52, v44);
    }
    *(_QWORD *)&v47 = v40;
    OUTLINED_FUNCTION_158_0();
    Tensor.place(on:)((uint64_t)&v52);
    sub_242A6FDE8((uint64_t)&v52);
    OUTLINED_FUNCTION_19_5();
    v40 = v47;
  }
  else
  {
    sub_242A662D8((uint64_t)&v47);
    *(_QWORD *)&v47 = v40;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v46, *MEMORY[0x24BEE38B8], v10);
  v51 = v40;
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_276();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_62_10();
  *v9 = v52;
  OUTLINED_FUNCTION_13_11();
}

#error "242B48E78: call analysis failed (funcsize=9)"

#error "242B48EA0: call analysis failed (funcsize=9)"

void sub_242B48EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t *__return_ptr, uint64_t *, char *, uint64_t, uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, uint64_t))
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  void (*v42)(char *, __n128);
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *__return_ptr, uint64_t *, char *, uint64_t, uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_17_17();
  v28 = v27;
  v48 = v29;
  v49 = v30;
  v32 = v31;
  v34 = v33;
  v47 = a25;
  v45 = v35;
  v46 = a21;
  OUTLINED_FUNCTION_217_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_36_11();
  OUTLINED_FUNCTION_268_0();
  v38 = MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v45 - v39;
  v51 = *v41;
  v42 = *(void (**)(char *, __n128))(v25 + 16);
  v42((char *)&v45 - v39, v38);
  ((void (*)(uint64_t, uint64_t, uint64_t))v42)(v26, v32, v28);
  v43 = sub_242C4814C();
  OUTLINED_FUNCTION_218_1(v43, (uint64_t)v50);
  v47(&v52, &v51, v40, v26, v43, 0, v48, v50, v28, v46);
  OUTLINED_FUNCTION_259_0();
  v44 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v44(v32, v28);
  v44(v34, v28);
  OUTLINED_FUNCTION_158_2(v52);
  OUTLINED_FUNCTION_13_11();
}

void sub_242B48FC8(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v5;
  uint64_t v6;

  v6 = 2;
  v4 = *(void (**)(uint64_t *, _QWORD, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(a2 + 24);
  v5 = sub_242ACA978();
  v4(&v6, MEMORY[0x24BEE1768], &protocol witness table for Int, v5, a1, a2);
  OUTLINED_FUNCTION_7_19();
}

void *sub_242B49030(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (result)
    v3 = (a2 - (uint64_t)result) / 8;
  else
    v3 = 0;
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    if (v3 < v4)
    {
      __break(1u);
LABEL_14:
      result = (void *)sub_242C4901C();
      __break(1u);
      return result;
    }
    if (result)
    {
      if (a3 + 32 >= (unint64_t)result + 8 * v4 || a3 + 32 + 8 * v4 <= (unint64_t)result)
        return memcpy(result, (const void *)(a3 + 32), 8 * v4);
      goto LABEL_14;
    }
  }
  return result;
}

uint64_t sub_242B490E8()
{
  return sub_242C48AB8();
}

BOOL sub_242B49120(uint64_t a1, double a2)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v3 = LODWORD(a2);
  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    v10 = sub_242C486B0();
    if (v10 <= 31)
    {
      v11 = v10;
      v12 = sub_242C48698();
      v13 = v12 + __clz(__rbit64(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 31)
        {
          if (v14 < -32 || v14 > 32)
          {
LABEL_13:
            LODWORD(v14) = 0;
            v15 = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_26;
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFE0)
              goto LABEL_13;
            LODWORD(v14) = v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 0x20)
              goto LABEL_13;
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            v15 = 1 << v11;
            goto LABEL_27;
          }
          v15 = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          v8 = v14 | v15;
          result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) < 0xFFFFFFFFFFFFFF7FLL)
        {
          LODWORD(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40)
            LODWORD(v14) = 0;
          else
            v14 = v5 << v14;
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0)
        LODWORD(v14) = 0;
      else
        v14 = v5 >> (v13 - v11);
      goto LABEL_24;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *(_DWORD *)a1 = v8;
  *(_BYTE *)(a1 + 4) = v6;
  return result;
}

BOOL sub_242B49278(uint64_t a1, float a2)
{
  int v3;
  unsigned int v4;
  int v5;
  int v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;

  v3 = (LODWORD(a2) >> 23);
  v4 = LODWORD(a2) & 0x7FFFFF;
  v5 = v3 | LODWORD(a2) & 0x7FFFFF;
  if (v5)
  {
    if (v3 != 255 && a2 > -1.0)
    {
      v9 = sub_242C48710();
      if (v9 <= 31)
      {
        v10 = v9;
        v11 = sub_242C486E0();
        v12 = v11 + __clz(__rbit32(v4));
        v13 = v10 - v12;
        if (__OFSUB__(v10, v12))
        {
          __break(1u);
        }
        else
        {
          if (v13 < -32 || v13 > 32)
          {
LABEL_12:
            v14 = 0;
            v15 = 0;
            if ((v10 & 0x8000000000000000) == 0)
              goto LABEL_22;
LABEL_23:
            LOBYTE(v5) = 0;
            v7 = v14 | v15;
            result = v10 >= v11;
            goto LABEL_24;
          }
          if ((v13 & 0x8000000000000000) == 0)
          {
            if ((unint64_t)v13 >= 0x20)
              goto LABEL_12;
            v14 = v4 << v13;
            if (v10 < 0)
              goto LABEL_17;
            goto LABEL_22;
          }
        }
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFE0)
          goto LABEL_12;
        v14 = v4 >> (v12 - v10);
        if (v10 < 0)
        {
LABEL_17:
          v15 = 0;
          goto LABEL_23;
        }
LABEL_22:
        v15 = 1 << v10;
        goto LABEL_23;
      }
    }
    v7 = 0;
    result = 0;
    LOBYTE(v5) = 1;
  }
  else
  {
    v7 = 0;
    result = 1;
  }
LABEL_24:
  *(_DWORD *)a1 = v7;
  *(_BYTE *)(a1 + 4) = v5;
  return result;
}

BOOL sub_242B49390(uint64_t a1, float a2)
{
  unsigned int v4;
  int v5;
  BOOL v11;
  int v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;

  _H8 = LOWORD(a2);
  v4 = LOWORD(a2) & 0x3FF;
  v5 = (LODWORD(a2) >> 10) & 0x1F | v4;
  if (!v5)
  {
    v12 = 0;
    result = 1;
    goto LABEL_25;
  }
  __asm { FCVT            S0, H8 }
  if (_ZF)
    v11 = 1;
  else
    v11 = _S0 <= -1.0;
  if (!v11)
  {
    v14 = sub_242C494B4();
    if (v14 <= 31)
    {
      v15 = v14;
      v16 = sub_242C49490();
      v17 = v16 + __clz(__rbit32(v4 | 0x10000));
      v18 = v15 - v17;
      if (__OFSUB__(v15, v17))
      {
        __break(1u);
      }
      else
      {
        if (v17 <= 31)
        {
          if (v18 < -32 || v18 > 32)
          {
LABEL_13:
            v19 = 0;
            v20 = 0;
            if ((v15 & 0x8000000000000000) == 0)
              goto LABEL_23;
            goto LABEL_24;
          }
          if (v18 < 0)
          {
            if ((unint64_t)v18 <= 0xFFFFFFFFFFFFFFE0)
              goto LABEL_13;
            v19 = v4 >> (v17 - v15);
          }
          else
          {
            if ((unint64_t)v18 >= 0x20)
              goto LABEL_13;
            v19 = v4 << v18;
          }
LABEL_21:
          if ((v15 & 0x8000000000000000) == 0)
          {
LABEL_23:
            v20 = 1 << v15;
            goto LABEL_24;
          }
          v20 = 0;
LABEL_24:
          LOBYTE(v5) = 0;
          v12 = v19 | v20;
          result = v15 >= v16;
          goto LABEL_25;
        }
        if ((unint64_t)(v18 - 17) < 0xFFFFFFFFFFFFFFDFLL)
          goto LABEL_16;
        if ((v18 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v18 < 0x10)
          {
            v19 = v4 << v18;
            goto LABEL_20;
          }
LABEL_16:
          LOWORD(v19) = 0;
LABEL_20:
          v19 = (unsigned __int16)v19;
          goto LABEL_21;
        }
      }
      if ((unint64_t)v18 > 0xFFFFFFFFFFFFFFF0)
      {
        v19 = v4 >> (v17 - v15);
        goto LABEL_20;
      }
      goto LABEL_16;
    }
  }
  v12 = 0;
  result = 0;
  LOBYTE(v5) = 1;
LABEL_25:
  *(_DWORD *)a1 = v12;
  *(_BYTE *)(a1 + 4) = v5;
  return result;
}

BOOL sub_242B494F4(uint64_t a1, double a2)
{
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int16 v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v3 = LODWORD(a2);
  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    v10 = sub_242C486B0();
    if (v10 <= 15)
    {
      v11 = v10;
      v12 = sub_242C48698();
      v13 = v12 + __clz(__rbit64(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 15)
        {
          if (v14 < -16 || v14 > 16)
          {
LABEL_13:
            LOWORD(v14) = 0;
            LOWORD(v15) = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_26;
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF0)
              goto LABEL_13;
            LODWORD(v14) = (unsigned __int16)v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 0x10)
              goto LABEL_13;
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            v15 = 1 << v11;
            goto LABEL_27;
          }
          LOWORD(v15) = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          v8 = v14 | v15;
          result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) < 0xFFFFFFFFFFFFFF7FLL)
        {
          LOWORD(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40)
            LOWORD(v14) = 0;
          else
            v14 = v5 << v14;
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0)
        LOWORD(v14) = 0;
      else
        v14 = v5 >> (v13 - v11);
      goto LABEL_24;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *(_WORD *)a1 = v8;
  *(_BYTE *)(a1 + 2) = v6;
  return result;
}

BOOL sub_242B49650(uint64_t a1, float a2)
{
  int v4;
  unsigned int v5;
  int v6;
  __int16 v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v4 = (LODWORD(a2) >> 23);
  v5 = LODWORD(a2) & 0x7FFFFF;
  v6 = v4 | LODWORD(a2) & 0x7FFFFF;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_27;
  }
  if (v4 != 255 && a2 > -1.0)
  {
    v10 = sub_242C48710();
    if (v10 <= 15)
    {
      v11 = v10;
      v12 = sub_242C486E0();
      v13 = v12 + __clz(__rbit32(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 15)
        {
          if (v14 < -16 || v14 > 16)
          {
LABEL_13:
            LOWORD(v15) = 0;
            LOWORD(v16) = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_25;
            goto LABEL_26;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF0)
              goto LABEL_13;
            v15 = LOWORD(a2) >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 0x10)
              goto LABEL_13;
            v15 = LODWORD(a2) << v14;
          }
LABEL_23:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_25:
            v16 = 1 << v11;
            goto LABEL_26;
          }
          LOWORD(v16) = 0;
LABEL_26:
          LOBYTE(v6) = 0;
          v8 = v15 | v16;
          result = v11 >= v12;
          goto LABEL_27;
        }
        if ((unint64_t)(v14 - 33) < 0xFFFFFFFFFFFFFFBFLL)
        {
LABEL_16:
          LOWORD(v15) = 0;
          goto LABEL_23;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 < 0x20)
          {
            v15 = v5 << v14;
            goto LABEL_23;
          }
          goto LABEL_16;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFE0)
        LOWORD(v15) = 0;
      else
        v15 = v5 >> (v13 - v11);
      goto LABEL_23;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_27:
  *(_WORD *)a1 = v8;
  *(_BYTE *)(a1 + 2) = v6;
  return result;
}

BOOL sub_242B497AC(uint64_t a1, float a2)
{
  unsigned int v4;
  int v5;
  BOOL v11;
  __int16 v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;

  _H8 = LOWORD(a2);
  v4 = LOWORD(a2) & 0x3FF;
  v5 = (LODWORD(a2) >> 10) & 0x1F | v4;
  if (v5)
  {
    __asm { FCVT            S0, H8 }
    if (_ZF)
      v11 = 1;
    else
      v11 = _S0 <= -1.0;
    if (!v11)
    {
      v14 = sub_242C494B4();
      if (v14 <= 15)
      {
        v15 = v14;
        v16 = sub_242C49490();
        v17 = v16 + __clz(__rbit32(v4 | 0x10000));
        v18 = v15 - v17;
        if (__OFSUB__(v15, v17))
        {
          __break(1u);
        }
        else
        {
          if (v18 < -16 || v18 > 16)
          {
LABEL_12:
            LOWORD(v19) = 0;
            LOWORD(v20) = 0;
            if ((v15 & 0x8000000000000000) == 0)
              goto LABEL_22;
LABEL_23:
            LOBYTE(v5) = 0;
            v12 = v19 | v20;
            result = v15 >= v16;
            goto LABEL_24;
          }
          if ((v18 & 0x8000000000000000) == 0)
          {
            if ((unint64_t)v18 >= 0x10)
              goto LABEL_12;
            v19 = v4 << v18;
            if (v15 < 0)
              goto LABEL_17;
            goto LABEL_22;
          }
        }
        if ((unint64_t)v18 <= 0xFFFFFFFFFFFFFFF0)
          goto LABEL_12;
        v19 = v4 >> (v17 - v15);
        if (v15 < 0)
        {
LABEL_17:
          LOWORD(v20) = 0;
          goto LABEL_23;
        }
LABEL_22:
        v20 = 1 << v15;
        goto LABEL_23;
      }
    }
    v12 = 0;
    result = 0;
    LOBYTE(v5) = 1;
  }
  else
  {
    v12 = 0;
    result = 1;
  }
LABEL_24:
  *(_WORD *)a1 = v12;
  *(_BYTE *)(a1 + 2) = v5;
  return result;
}

BOOL sub_242B498CC(_BYTE *a1, double a2)
{
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v3 = LODWORD(a2);
  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    v10 = sub_242C486B0();
    if (v10 <= 7)
    {
      v11 = v10;
      v12 = sub_242C48698();
      v13 = v12 + __clz(__rbit64(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 7)
        {
          if (v14 < -8 || v14 > 8)
          {
LABEL_13:
            LOBYTE(v14) = 0;
            LOBYTE(v15) = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_26;
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF8)
              goto LABEL_13;
            LODWORD(v14) = v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 8)
              goto LABEL_13;
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            v15 = 1 << v11;
            goto LABEL_27;
          }
          LOBYTE(v15) = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          v8 = v14 | v15;
          result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) < 0xFFFFFFFFFFFFFF7FLL)
        {
          LOBYTE(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40)
            LOBYTE(v14) = 0;
          else
            v14 = v5 << v14;
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0)
        LOBYTE(v14) = 0;
      else
        v14 = v5 >> (v13 - v11);
      goto LABEL_24;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *a1 = v8;
  a1[1] = v6;
  return result;
}

BOOL sub_242B49A28(_BYTE *a1, float a2)
{
  int v4;
  unsigned int v5;
  int v6;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v4 = (LODWORD(a2) >> 23);
  v5 = LODWORD(a2) & 0x7FFFFF;
  v6 = v4 | LODWORD(a2) & 0x7FFFFF;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_27;
  }
  if (v4 != 255 && a2 > -1.0)
  {
    v10 = sub_242C48710();
    if (v10 <= 7)
    {
      v11 = v10;
      v12 = sub_242C486E0();
      v13 = v12 + __clz(__rbit32(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 7)
        {
          if (v14 < -8 || v14 > 8)
          {
LABEL_13:
            LOBYTE(v15) = 0;
            LOBYTE(v16) = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_25;
            goto LABEL_26;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF8)
              goto LABEL_13;
            v15 = LOBYTE(a2) >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 8)
              goto LABEL_13;
            v15 = LODWORD(a2) << v14;
          }
LABEL_23:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_25:
            v16 = 1 << v11;
            goto LABEL_26;
          }
          LOBYTE(v16) = 0;
LABEL_26:
          LOBYTE(v6) = 0;
          v8 = v15 | v16;
          result = v11 >= v12;
          goto LABEL_27;
        }
        if ((unint64_t)(v14 - 33) < 0xFFFFFFFFFFFFFFBFLL)
        {
LABEL_16:
          LOBYTE(v15) = 0;
          goto LABEL_23;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 < 0x20)
          {
            v15 = v5 << v14;
            goto LABEL_23;
          }
          goto LABEL_16;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFE0)
        LOBYTE(v15) = 0;
      else
        v15 = v5 >> (v13 - v11);
      goto LABEL_23;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_27:
  *a1 = v8;
  a1[1] = v6;
  return result;
}

BOOL sub_242B49B84(_BYTE *a1, float a2)
{
  unsigned int v5;
  int v6;
  BOOL v12;
  char v13;
  _BOOL8 result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;

  _H8 = LOWORD(a2);
  v5 = LOWORD(a2) & 0x3FF;
  v6 = (LODWORD(a2) >> 10) & 0x1F | v5;
  if (!v6)
  {
    v13 = 0;
    result = 1;
    goto LABEL_28;
  }
  __asm { FCVT            S0, H8 }
  if (_ZF)
    v12 = 1;
  else
    v12 = _S0 <= -1.0;
  if (!v12)
  {
    v15 = sub_242C494B4();
    if (v15 <= 7)
    {
      v16 = v15;
      v17 = sub_242C49490();
      v18 = v17 + __clz(__rbit32(v5 | 0x10000));
      v19 = v16 - v18;
      if (__OFSUB__(v16, v18))
      {
        __break(1u);
      }
      else
      {
        if (v18 <= 7)
        {
          if (v19 < -8 || v19 > 8)
          {
LABEL_13:
            LOBYTE(v20) = 0;
            LOBYTE(v21) = 0;
            if ((v16 & 0x8000000000000000) == 0)
              goto LABEL_26;
            goto LABEL_27;
          }
          if (v19 < 0)
          {
            if ((unint64_t)v19 <= 0xFFFFFFFFFFFFFFF8)
              goto LABEL_13;
            v20 = LOBYTE(a2) >> (v18 - v16);
          }
          else
          {
            if ((unint64_t)v19 >= 8)
              goto LABEL_13;
            v20 = LODWORD(a2) << v19;
          }
LABEL_24:
          if ((v16 & 0x8000000000000000) == 0)
          {
LABEL_26:
            v21 = 1 << v16;
            goto LABEL_27;
          }
          LOBYTE(v21) = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          v13 = v20 | v21;
          result = v16 >= v17;
          goto LABEL_28;
        }
        if ((unint64_t)(v19 - 17) < 0xFFFFFFFFFFFFFFDFLL)
        {
LABEL_16:
          LOBYTE(v20) = 0;
          goto LABEL_24;
        }
        if ((v19 & 0x8000000000000000) == 0)
        {
          _CF = (unint64_t)v19 >= 0x10;
          v20 = LODWORD(a2) << v19;
          if (_CF)
            LOBYTE(v20) = 0;
          goto LABEL_24;
        }
      }
      if ((unint64_t)v19 > 0xFFFFFFFFFFFFFFF0)
      {
        v20 = v5 >> (v18 - v16);
        goto LABEL_24;
      }
      goto LABEL_16;
    }
  }
  v13 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *a1 = v13;
  a1[1] = v6;
  return result;
}

void sub_242B49CE8()
{
  uint64_t v0;
  unint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_230_1();
  if (v4)
  {
    v5 = v3 == 2047 || v2 <= -1.0;
    if (!v5 && OUTLINED_FUNCTION_343() <= 63)
    {
      v7 = OUTLINED_FUNCTION_261_0() + __clz(__rbit64(v1));
      v8 = v0 - v7;
      if (__OFSUB__(v0, v7))
      {
        __break(1u);
      }
      else if (v8 < -64 || v8 > 64 || (v8 & 0x8000000000000000) == 0)
      {
LABEL_19:
        OUTLINED_FUNCTION_290();
        goto LABEL_20;
      }
      if ((unint64_t)v8 > 0xFFFFFFFFFFFFFFC0)
        OUTLINED_FUNCTION_247_0();
      goto LABEL_19;
    }
    OUTLINED_FUNCTION_147_1();
  }
  else
  {
    OUTLINED_FUNCTION_250_0();
  }
LABEL_20:
  OUTLINED_FUNCTION_248_0(v6);
  OUTLINED_FUNCTION_62_12();
}

void sub_242B49DB8()
{
  uint64_t v0;
  unsigned int v1;
  float v2;
  int v3;
  int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_239_0();
  if (v4)
  {
    v5 = v3 == 255 || v2 <= -1.0;
    if (v5 || OUTLINED_FUNCTION_328() > 63)
    {
      OUTLINED_FUNCTION_147_1();
    }
    else
    {
      v7 = OUTLINED_FUNCTION_260_0() + __clz(__rbit32(v1));
      v8 = v0 - v7;
      if (__OFSUB__(v0, v7))
      {
        __break(1u);
      }
      else if (v7 <= 63 && v8 >= -64 && v8 <= 64 && v8 < 0 && (unint64_t)v8 > 0xFFFFFFFFFFFFFFC0)
      {
        OUTLINED_FUNCTION_247_0();
      }
      OUTLINED_FUNCTION_290();
    }
  }
  else
  {
    OUTLINED_FUNCTION_250_0();
  }
  OUTLINED_FUNCTION_248_0(v6);
  OUTLINED_FUNCTION_62_12();
}

void sub_242B49ECC()
{
  int v0;
  int v2;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_241_0();
  if (v2)
  {
    __asm { FCVT            S0, H8 }
    if (_ZF)
      v8 = 1;
    else
      v8 = _S0 <= -1.0;
    if (v8 || (v10 = OUTLINED_FUNCTION_329(), v10 > 63))
    {
      OUTLINED_FUNCTION_147_1();
    }
    else
    {
      v11 = v10;
      v12 = sub_242C49490() + __clz(__rbit32(v0 | 0x10000));
      v13 = v11 - v12;
      if (__OFSUB__(v11, v12))
      {
        __break(1u);
      }
      else if (v12 <= 63 && v13 >= -64 && v13 <= 64 && v13 < 0 && (unint64_t)v13 > 0xFFFFFFFFFFFFFFC0)
      {
        OUTLINED_FUNCTION_247_0();
      }
      OUTLINED_FUNCTION_290();
    }
  }
  else
  {
    OUTLINED_FUNCTION_250_0();
  }
  OUTLINED_FUNCTION_248_0(v9);
  OUTLINED_FUNCTION_62_12();
}

void sub_242B49FF0()
{
  uint64_t v0;
  unint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;

  OUTLINED_FUNCTION_230_1();
  if (!v4)
  {
    OUTLINED_FUNCTION_250_0();
    goto LABEL_21;
  }
  if (v3 != 2047 && OUTLINED_FUNCTION_343() <= 63)
  {
    v5 = OUTLINED_FUNCTION_261_0() + __clz(__rbit64(v1));
    v6 = v0 - v5;
    if (__OFSUB__(v0, v5))
    {
      __break(1u);
    }
    else
    {
      if (v6 >= -64 && v6 <= 64)
      {
        if (v6 < 0)
          goto LABEL_28;
        if ((unint64_t)v6 < 0x40)
        {
          v8 = v1 << v6;
          goto LABEL_13;
        }
      }
LABEL_7:
      if (v0 != 63)
      {
        i = 0;
        v8 = 0;
        if (v0 < 0)
          goto LABEL_17;
LABEL_16:
        for (i = 1 << v0; ; i = 0)
        {
LABEL_17:
          v6 = v8 | i;
          if (v2 >= 0.0)
          {
            if ((v6 & 0x8000000000000000) == 0)
              goto LABEL_21;
          }
          else
          {
            if ((v6 & 0x8000000000000000) == 0)
            {
              v6 = -v6;
              goto LABEL_21;
            }
            __break(1u);
          }
          __break(1u);
LABEL_28:
          if ((unint64_t)v6 <= 0xFFFFFFFFFFFFFFC0)
            goto LABEL_7;
          OUTLINED_FUNCTION_247_0();
LABEL_13:
          if (v0 == 63)
            break;
          if ((v0 & 0x8000000000000000) == 0)
            goto LABEL_16;
        }
        if (v2 < 0.0 && !v8)
          goto LABEL_32;
        goto LABEL_24;
      }
    }
    if (v2 < 0.0)
    {
LABEL_32:
      v6 = 0x8000000000000000;
      goto LABEL_21;
    }
  }
LABEL_24:
  OUTLINED_FUNCTION_147_1();
LABEL_21:
  OUTLINED_FUNCTION_248_0(v6);
  OUTLINED_FUNCTION_62_12();
}

void sub_242B4A118()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_239_0();
  if (!v4)
  {
    OUTLINED_FUNCTION_250_0();
    goto LABEL_25;
  }
  if (v3 == 255 || OUTLINED_FUNCTION_328() > 63)
  {
LABEL_37:
    OUTLINED_FUNCTION_147_1();
    goto LABEL_25;
  }
  v5 = OUTLINED_FUNCTION_260_0();
  OUTLINED_FUNCTION_221_1(v5);
  if (v8)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v7 > 63)
  {
    if ((unint64_t)(v6 - 33) < 0xFFFFFFFFFFFFFFBFLL)
      goto LABEL_12;
    if (v6 < 0)
    {
      if ((unint64_t)v6 <= 0xFFFFFFFFFFFFFFE0)
        LODWORD(v6) = 0;
      else
        LODWORD(v6) = v1 >> -(char)v6;
      goto LABEL_16;
    }
    if ((unint64_t)v6 >= 0x20)
LABEL_12:
      LODWORD(v6) = 0;
    else
      LODWORD(v6) = (_DWORD)v1 << v6;
LABEL_16:
    v6 = v6;
LABEL_17:
    if (v0 != 63)
    {
      if (v0 < 0)
      {
        v9 = 0;
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_30:
    if (v2 >= 0.0 || v6)
      goto LABEL_37;
    goto LABEL_32;
  }
  if (v6 >= -64 && v6 <= 64)
  {
    if (v6 < 0)
    {
      if ((unint64_t)v6 <= 0xFFFFFFFFFFFFFFC0)
        goto LABEL_8;
      OUTLINED_FUNCTION_247_0();
    }
    else
    {
      if ((unint64_t)v6 >= 0x40)
        goto LABEL_8;
      v6 = v1 << v6;
    }
    goto LABEL_17;
  }
LABEL_8:
  if (v0 == 63)
    goto LABEL_36;
  v9 = 0;
  v6 = 0;
  if ((v0 & 0x8000000000000000) == 0)
LABEL_20:
    v9 = 1 << v0;
LABEL_21:
  v10 = v6 | v9;
  if (v2 >= 0.0)
  {
    if ((v10 & 0x8000000000000000) == 0)
      goto LABEL_25;
    goto LABEL_35;
  }
  if (v10 < 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (v2 >= 0.0)
      goto LABEL_37;
LABEL_32:
    v10 = 0x8000000000000000;
    goto LABEL_25;
  }
  v10 = -v10;
LABEL_25:
  OUTLINED_FUNCTION_248_0(v10);
  OUTLINED_FUNCTION_62_12();
}

void sub_242B4A26C()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_241_0();
  if (!v2)
  {
    OUTLINED_FUNCTION_250_0();
    goto LABEL_16;
  }
  if (v1 == 31 || OUTLINED_FUNCTION_329() > 63)
  {
LABEL_29:
    OUTLINED_FUNCTION_147_1();
    goto LABEL_16;
  }
  v3 = OUTLINED_FUNCTION_366();
  OUTLINED_FUNCTION_183_1(v3);
  if (v6)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v5 > 63)
  {
LABEL_10:
    if (v0 != 63)
      goto LABEL_11;
LABEL_21:
    OUTLINED_FUNCTION_238_0();
    if (!v8 || v9)
      goto LABEL_29;
    goto LABEL_24;
  }
  if (v4 >= -64 && v4 <= 64)
  {
    if (v4 < 0)
    {
      if ((unint64_t)v4 <= 0xFFFFFFFFFFFFFFC0)
        goto LABEL_8;
      OUTLINED_FUNCTION_247_0();
    }
    else if ((unint64_t)v4 >= 0x40)
    {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
LABEL_8:
  if (v0 == 63)
    goto LABEL_28;
LABEL_11:
  OUTLINED_FUNCTION_238_0();
  if (!v8)
  {
    if ((v7 & 0x8000000000000000) == 0)
      goto LABEL_16;
    goto LABEL_27;
  }
  if (v7 < 0)
  {
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_238_0();
    if (!v8)
      goto LABEL_29;
LABEL_24:
    v7 = 0x8000000000000000;
    goto LABEL_16;
  }
  v7 = -v7;
LABEL_16:
  OUTLINED_FUNCTION_248_0(v7);
  OUTLINED_FUNCTION_62_12();
}

void sub_242B4A3C0(uint64_t a1, double a2)
{
  uint64_t v2;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v5 = LODWORD(a2);
  v6 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v7 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v8 = v6 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v8)
  {
    v12 = 0;
    goto LABEL_29;
  }
  if (v6 == 2047 || OUTLINED_FUNCTION_343() > 31)
  {
LABEL_38:
    OUTLINED_FUNCTION_288();
    goto LABEL_29;
  }
  v9 = OUTLINED_FUNCTION_261_0() + __clz(__rbit64(v7));
  v10 = v2 - v9;
  if (__OFSUB__(v2, v9))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v9 > 31)
  {
    if ((unint64_t)(v10 - 65) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      if (v10 < 0)
      {
        if ((unint64_t)v10 <= 0xFFFFFFFFFFFFFFC0)
          LODWORD(v10) = 0;
        else
          v10 = v7 >> (v9 - v2);
      }
      else if ((unint64_t)v10 >= 0x40)
      {
        LODWORD(v10) = 0;
      }
      else
      {
        v10 = v7 << v10;
      }
    }
    else
    {
      LODWORD(v10) = 0;
    }
LABEL_20:
    if (v2 != 31)
    {
      if (v2 < 0)
      {
        v11 = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_DWORD)v10)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v10 >= -32 && v10 <= 32)
  {
    if (v10 < 0)
    {
      if ((unint64_t)v10 <= 0xFFFFFFFFFFFFFFE0)
        goto LABEL_8;
      LODWORD(v10) = v5 >> (v9 - v2);
    }
    else
    {
      if ((unint64_t)v10 >= 0x20)
        goto LABEL_8;
      LODWORD(v10) = v5 << v10;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v2 == 31)
    goto LABEL_37;
  v11 = 0;
  LODWORD(v10) = 0;
  if ((v2 & 0x8000000000000000) == 0)
LABEL_23:
    v11 = 1 << v2;
LABEL_24:
  v12 = v10 | v11;
  if (a2 >= 0.0)
  {
    if ((v12 & 0x80000000) == 0)
    {
      LOBYTE(v8) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v12 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0)
      goto LABEL_38;
LABEL_33:
    LOBYTE(v8) = 0;
    v12 = 0x80000000;
    goto LABEL_29;
  }
  LOBYTE(v8) = 0;
  v12 = -v12;
LABEL_29:
  *(_DWORD *)a1 = v12;
  *(_BYTE *)(a1 + 4) = v8;
  OUTLINED_FUNCTION_62_12();
}

void sub_242B4A548(uint64_t a1, float a2)
{
  uint64_t v2;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int i;
  unsigned int v12;

  v5 = (LODWORD(a2) >> 23);
  v6 = LODWORD(a2) & 0x7FFFFF;
  v7 = v5 | LODWORD(a2) & 0x7FFFFF;
  if (!v7)
  {
    LODWORD(v9) = 0;
    goto LABEL_22;
  }
  if (v5 != 255 && OUTLINED_FUNCTION_328() <= 31)
  {
    v8 = OUTLINED_FUNCTION_260_0();
    OUTLINED_FUNCTION_221_1(v8);
    if (v10)
    {
      __break(1u);
    }
    else
    {
      if (v9 >= -32 && v9 <= 32)
      {
        if (v9 < 0)
          goto LABEL_29;
        if ((unint64_t)v9 < 0x20)
        {
          v12 = v6 << v9;
          goto LABEL_13;
        }
      }
LABEL_7:
      if (v2 != 31)
      {
        i = 0;
        v12 = 0;
        if (v2 < 0)
          goto LABEL_17;
LABEL_16:
        for (i = 1 << v2; ; i = 0)
        {
LABEL_17:
          v9 = v12 | i;
          if (a2 >= 0.0)
          {
            if ((v9 & 0x80000000) == 0)
            {
              LOBYTE(v7) = 0;
              goto LABEL_22;
            }
          }
          else
          {
            if ((v9 & 0x80000000) == 0)
            {
              LOBYTE(v7) = 0;
              LODWORD(v9) = -(int)v9;
              goto LABEL_22;
            }
            __break(1u);
          }
          __break(1u);
LABEL_29:
          if ((unint64_t)v9 <= 0xFFFFFFFFFFFFFFE0)
            goto LABEL_7;
          v12 = v6 >> -(char)v9;
LABEL_13:
          if (v2 == 31)
            break;
          if ((v2 & 0x8000000000000000) == 0)
            goto LABEL_16;
        }
        if (a2 < 0.0 && !v12)
          goto LABEL_33;
        goto LABEL_25;
      }
    }
    if (a2 < 0.0)
    {
LABEL_33:
      LOBYTE(v7) = 0;
      LODWORD(v9) = 0x80000000;
      goto LABEL_22;
    }
  }
LABEL_25:
  OUTLINED_FUNCTION_288();
LABEL_22:
  *(_DWORD *)a1 = v9;
  *(_BYTE *)(a1 + 4) = v7;
  OUTLINED_FUNCTION_62_12();
}

void sub_242B4A678(uint64_t a1, float a2)
{
  uint64_t v2;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  int v12;

  v4 = (LODWORD(a2) >> 10) & 0x1F;
  v5 = v4 | LOWORD(a2) & 0x3FF;
  if (!v5)
  {
    v10 = 0;
    goto LABEL_17;
  }
  if (v4 == 31 || OUTLINED_FUNCTION_329() > 31)
  {
LABEL_30:
    OUTLINED_FUNCTION_288();
    goto LABEL_17;
  }
  v6 = OUTLINED_FUNCTION_366();
  OUTLINED_FUNCTION_183_1(v6);
  if (v9)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v8 > 31)
  {
LABEL_10:
    if (v2 != 31)
      goto LABEL_11;
LABEL_22:
    OUTLINED_FUNCTION_238_0();
    if (!v11 || v12)
      goto LABEL_30;
    goto LABEL_25;
  }
  if (v7 >= -32 && v7 <= 32)
  {
    if (v7 < 0)
    {
      if ((unint64_t)v7 <= 0xFFFFFFFFFFFFFFE0)
        goto LABEL_8;
    }
    else if ((unint64_t)v7 >= 0x20)
    {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
LABEL_8:
  if (v2 == 31)
    goto LABEL_29;
LABEL_11:
  OUTLINED_FUNCTION_238_0();
  if (!v11)
  {
    if ((v10 & 0x80000000) == 0)
    {
      LOBYTE(v5) = 0;
      goto LABEL_17;
    }
    goto LABEL_28;
  }
  if (v10 < 0)
  {
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    OUTLINED_FUNCTION_238_0();
    if (!v11)
      goto LABEL_30;
LABEL_25:
    LOBYTE(v5) = 0;
    v10 = 0x80000000;
    goto LABEL_17;
  }
  LOBYTE(v5) = 0;
  v10 = -v10;
LABEL_17:
  *(_DWORD *)a1 = v10;
  *(_BYTE *)(a1 + 4) = v5;
  OUTLINED_FUNCTION_62_12();
}

BOOL sub_242B4A7EC(uint64_t a1, double a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  v4 = LODWORD(a2);
  v5 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v6 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v7 = v5 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOWORD(v15) = 0;
    result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (v8 = sub_242C486B0(), v8 > 15))
  {
LABEL_38:
    LOWORD(v15) = 0;
    result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  v9 = v8;
  v10 = sub_242C48698();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit64(v6));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 15)
  {
    if ((unint64_t)(v13 - 65) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0)
          LOWORD(v13) = 0;
        else
          v13 = v6 >> (v12 - v9);
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LOWORD(v13) = 0;
      }
      else
      {
        v13 = v6 << v13;
      }
    }
    else
    {
      LOWORD(v13) = 0;
    }
LABEL_20:
    if (v9 != 15)
    {
      if (v9 < 0)
      {
        LOWORD(v14) = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_WORD)v13)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v13 >= -16 && v13 <= 16)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF0)
        goto LABEL_8;
      LODWORD(v13) = (unsigned __int16)v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 0x10)
        goto LABEL_8;
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 15)
    goto LABEL_37;
  LOWORD(v14) = 0;
  LOWORD(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_23:
    v14 = 1 << v9;
LABEL_24:
  v15 = (__int16)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0)
      goto LABEL_38;
LABEL_33:
    LOBYTE(v7) = 0;
    LOWORD(v15) = 0x8000;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  v15 = -v15;
LABEL_29:
  *(_WORD *)a1 = v15;
  *(_BYTE *)(a1 + 2) = v7;
  return result;
}

BOOL sub_242B4A9A0(uint64_t a1, float a2)
{
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;

  v5 = (LODWORD(a2) >> 23);
  v6 = LODWORD(a2) & 0x7FFFFF;
  v7 = v5 | LODWORD(a2) & 0x7FFFFF;
  if (!v7)
  {
    LOWORD(v15) = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v5 == 255 || (v8 = sub_242C48710(), v8 > 15))
  {
LABEL_37:
    LOWORD(v15) = 0;
    result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_28;
  }
  v9 = v8;
  v10 = sub_242C486E0();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit32(v6));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 > 15)
  {
    if ((unint64_t)(v13 - 33) < 0xFFFFFFFFFFFFFFBFLL)
    {
LABEL_12:
      LOWORD(v13) = 0;
      goto LABEL_19;
    }
    if (v13 < 0)
    {
      v16 = v6 >> (v12 - v9);
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFE0)
        LOWORD(v13) = 0;
      else
        LOWORD(v13) = v16;
    }
    else
    {
      if ((unint64_t)v13 >= 0x20)
        goto LABEL_12;
      LODWORD(v13) = v6 << v13;
    }
LABEL_19:
    if (v9 != 15)
    {
      if (v9 < 0)
      {
        LOWORD(v14) = 0;
        goto LABEL_23;
      }
      goto LABEL_22;
    }
LABEL_30:
    if (a2 >= 0.0 || (_WORD)v13)
      goto LABEL_37;
    goto LABEL_32;
  }
  if (v13 >= -16 && v13 <= 16)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF0)
        goto LABEL_8;
      LODWORD(v13) = LOWORD(a2) >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 0x10)
        goto LABEL_8;
      LODWORD(v13) = LODWORD(a2) << v13;
    }
    goto LABEL_19;
  }
LABEL_8:
  if (v9 == 15)
    goto LABEL_36;
  LOWORD(v14) = 0;
  LOWORD(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_22:
    v14 = 1 << v9;
LABEL_23:
  v15 = (__int16)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (a2 >= 0.0)
      goto LABEL_37;
LABEL_32:
    LOBYTE(v7) = 0;
    LOWORD(v15) = 0x8000;
    goto LABEL_28;
  }
  LOBYTE(v7) = 0;
  v15 = -v15;
LABEL_28:
  *(_WORD *)a1 = v15;
  *(_BYTE *)(a1 + 2) = v7;
  return result;
}

BOOL sub_242B4AB54(uint64_t a1, float a2)
{
  int v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  int i;
  unsigned int v14;

  _H8 = LOWORD(a2);
  v4 = (LODWORD(a2) >> 10) & 0x1F;
  v5 = LOWORD(a2) & 0x3FF;
  v6 = v4 | v5;
  if (!(v4 | v5))
  {
    LOWORD(v12) = 0;
    result = 1;
    goto LABEL_22;
  }
  if (v4 != 31)
  {
    v7 = sub_242C494B4();
    if (v7 <= 15)
    {
      v8 = v7;
      v9 = sub_242C49490();
      result = v8 >= v9;
      v11 = v9 + __clz(__rbit32(v5 | 0x10000));
      v12 = v8 - v11;
      if (__OFSUB__(v8, v11))
      {
        __break(1u);
      }
      else
      {
        if (v12 >= -16 && v12 <= 16)
        {
          if (v12 < 0)
            goto LABEL_29;
          if ((unint64_t)v12 < 0x10)
          {
            v14 = v5 << v12;
            goto LABEL_13;
          }
        }
LABEL_7:
        if (v8 != 15)
        {
          LOWORD(i) = 0;
          LOWORD(v14) = 0;
          if (v8 < 0)
            goto LABEL_17;
LABEL_16:
          for (i = 1 << v8; ; LOWORD(i) = 0)
          {
LABEL_17:
            v12 = (__int16)(v14 | i);
            __asm { FCVT            S0, H8 }
            if (_S0 >= 0.0)
            {
              if ((v12 & 0x80000000) == 0)
              {
                v6 = 0;
                goto LABEL_22;
              }
            }
            else
            {
              if ((v12 & 0x80000000) == 0)
              {
                v6 = 0;
                LODWORD(v12) = -(int)v12;
                goto LABEL_22;
              }
              __break(1u);
            }
            __break(1u);
LABEL_29:
            if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFF0)
              goto LABEL_7;
            v14 = v5 >> -(char)v12;
LABEL_13:
            if (v8 == 15)
              break;
            if ((v8 & 0x8000000000000000) == 0)
              goto LABEL_16;
          }
          __asm { FCVT            S0, H8 }
          if (_S0 < 0.0 && !(_WORD)v14)
            goto LABEL_33;
          goto LABEL_25;
        }
      }
      __asm { FCVT            S0, H8 }
      if (_S0 < 0.0)
      {
LABEL_33:
        v6 = 0;
        LOWORD(v12) = 0x8000;
        goto LABEL_22;
      }
    }
  }
LABEL_25:
  LOWORD(v12) = 0;
  result = 0;
  v6 = 1;
LABEL_22:
  *(_WORD *)a1 = v12;
  *(_BYTE *)(a1 + 2) = v6;
  return result;
}

BOOL sub_242B4ACD4(_BYTE *a1, double a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  v4 = LODWORD(a2);
  v5 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v6 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v7 = v5 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v15) = 0;
    result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (v8 = sub_242C486B0(), v8 > 7))
  {
LABEL_38:
    LOBYTE(v15) = 0;
    result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  v9 = v8;
  v10 = sub_242C48698();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit64(v6));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 7)
  {
    if ((unint64_t)(v13 - 65) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0)
          LOBYTE(v13) = 0;
        else
          v13 = v6 >> (v12 - v9);
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LOBYTE(v13) = 0;
      }
      else
      {
        v13 = v6 << v13;
      }
    }
    else
    {
      LOBYTE(v13) = 0;
    }
LABEL_20:
    if (v9 != 7)
    {
      if (v9 < 0)
      {
        LOBYTE(v14) = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_BYTE)v13)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v13 >= -8 && v13 <= 8)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF8)
        goto LABEL_8;
      LODWORD(v13) = v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 8)
        goto LABEL_8;
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 7)
    goto LABEL_37;
  LOBYTE(v14) = 0;
  LOBYTE(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_23:
    v14 = 1 << v9;
LABEL_24:
  v15 = (char)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0)
      goto LABEL_38;
LABEL_33:
    LOBYTE(v7) = 0;
    LOBYTE(v15) = 0x80;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  v15 = -v15;
LABEL_29:
  *a1 = v15;
  a1[1] = v7;
  return result;
}

BOOL sub_242B4AE88(_BYTE *a1, float a2)
{
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;

  v5 = (LODWORD(a2) >> 23);
  v6 = LODWORD(a2) & 0x7FFFFF;
  v7 = v5 | LODWORD(a2) & 0x7FFFFF;
  if (!v7)
  {
    LOBYTE(v15) = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v5 == 255 || (v8 = sub_242C48710(), v8 > 7))
  {
LABEL_37:
    LOBYTE(v15) = 0;
    result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_28;
  }
  v9 = v8;
  v10 = sub_242C486E0();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit32(v6));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 > 7)
  {
    if ((unint64_t)(v13 - 33) < 0xFFFFFFFFFFFFFFBFLL)
    {
LABEL_12:
      LOBYTE(v13) = 0;
      goto LABEL_19;
    }
    if (v13 < 0)
    {
      v16 = v6 >> (v12 - v9);
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFE0)
        LOBYTE(v13) = 0;
      else
        LOBYTE(v13) = v16;
    }
    else
    {
      if ((unint64_t)v13 >= 0x20)
        goto LABEL_12;
      LODWORD(v13) = v6 << v13;
    }
LABEL_19:
    if (v9 != 7)
    {
      if (v9 < 0)
      {
        LOBYTE(v14) = 0;
        goto LABEL_23;
      }
      goto LABEL_22;
    }
LABEL_30:
    if (a2 >= 0.0 || (_BYTE)v13)
      goto LABEL_37;
    goto LABEL_32;
  }
  if (v13 >= -8 && v13 <= 8)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF8)
        goto LABEL_8;
      LODWORD(v13) = LOBYTE(a2) >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 8)
        goto LABEL_8;
      LODWORD(v13) = LODWORD(a2) << v13;
    }
    goto LABEL_19;
  }
LABEL_8:
  if (v9 == 7)
    goto LABEL_36;
  LOBYTE(v14) = 0;
  LOBYTE(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_22:
    v14 = 1 << v9;
LABEL_23:
  v15 = (char)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (a2 >= 0.0)
      goto LABEL_37;
LABEL_32:
    LOBYTE(v7) = 0;
    LOBYTE(v15) = 0x80;
    goto LABEL_28;
  }
  LOBYTE(v7) = 0;
  v15 = -v15;
LABEL_28:
  *a1 = v15;
  a1[1] = v7;
  return result;
}

BOOL sub_242B4B03C(_BYTE *a1, float a2)
{
  int v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v16;
  unsigned int v23;

  _H8 = LOWORD(a2);
  v5 = (LODWORD(a2) >> 10) & 0x1F;
  v6 = LOWORD(a2) & 0x3FF;
  v7 = v5 | v6;
  if (!(v5 | v6))
  {
    LOBYTE(v16) = 0;
    result = 1;
    goto LABEL_29;
  }
  if (v5 == 31 || (v8 = sub_242C494B4(), v8 > 7))
  {
LABEL_38:
    LOBYTE(v16) = 0;
    result = 0;
    v7 = 1;
    goto LABEL_29;
  }
  v9 = v8;
  v10 = sub_242C49490();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit32(v6 | 0x10000));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 7)
  {
    if ((unint64_t)(v13 - 17) >= 0xFFFFFFFFFFFFFFDFLL)
    {
      if (v13 < 0)
      {
        v23 = v6 >> (v12 - v9);
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF0)
          LOBYTE(v13) = 0;
        else
          LOBYTE(v13) = v23;
      }
      else
      {
        _CF = (unint64_t)v13 >= 0x10;
        LODWORD(v13) = LODWORD(a2) << v13;
        if (_CF)
          LOBYTE(v13) = 0;
      }
    }
    else
    {
      LOBYTE(v13) = 0;
    }
LABEL_20:
    if (v9 != 7)
    {
      if (v9 < 0)
      {
        LOBYTE(v14) = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    __asm { FCVT            S0, H8 }
    if (_S0 >= 0.0 || (_BYTE)v13)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v13 >= -8 && v13 <= 8)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF8)
        goto LABEL_8;
      LODWORD(v13) = LOBYTE(a2) >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 8)
        goto LABEL_8;
      LODWORD(v13) = LODWORD(a2) << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 7)
    goto LABEL_37;
  LOBYTE(v14) = 0;
  LOBYTE(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_23:
    v14 = 1 << v9;
LABEL_24:
  v16 = (char)(v13 | v14);
  __asm { FCVT            S0, H8 }
  if (_S0 >= 0.0)
  {
    if ((v16 & 0x80000000) == 0)
    {
      v7 = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v16 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __asm { FCVT            S0, H8 }
    if (_S0 >= 0.0)
      goto LABEL_38;
LABEL_33:
    v7 = 0;
    LOBYTE(v16) = 0x80;
    goto LABEL_29;
  }
  v7 = 0;
  v16 = -v16;
LABEL_29:
  *a1 = v16;
  a1[1] = v7;
  return result;
}

uint64_t sub_242B4B200(uint64_t a1, uint64_t a2)
{
  if (dynamic_cast_existential_0_class_conditional(a2))
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  else
    return sub_242C491D8();
}

unint64_t sub_242B4B244(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_242B4B268(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_242B4B288(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  sub_242AAB33C();
  if (a2 >> 62)
  {
    v4 = sub_242C48FE0();
    objc_opt_self();
    if (OUTLINED_FUNCTION_331())
      return v4;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!OUTLINED_FUNCTION_331())
        goto LABEL_10;
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_242C48C38();
  sub_242C48314();
  OUTLINED_FUNCTION_40_18();
  sub_242C48314();
  OUTLINED_FUNCTION_34();
  sub_242C48314();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_242C494F0();
  sub_242C48314();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_80_1();
  result = sub_242C48F68();
  __break(1u);
  return result;
}

void sub_242B4B43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_107_1();
  sub_242A5DFBC(v0, v1, v2, v3);
}

void sub_242B4B44C()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E194();
}

void sub_242B4B45C()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E358();
}

void sub_242B4B46C()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E518();
}

void sub_242B4B47C(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_253_0();
    sub_242C48FC8();
    OUTLINED_FUNCTION_4_0();
  }
  JUMPOUT(0x2494EC858);
}

void sub_242B4B4D0()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E590();
}

void sub_242B4B4E0()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E45C();
}

void sub_242B4B4F0()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E630();
}

void sub_242B4B500()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E0B4();
}

void sub_242B4B510()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E9D8();
}

void sub_242B4B520()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5DEC4();
}

uint64_t sub_242B4B530()
{
  OUTLINED_FUNCTION_107_1();
  return sub_242A5EABC();
}

void sub_242B4B540()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5DEF4();
}

void sub_242B4B550()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E3A0();
}

void sub_242B4B560()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5EC14();
}

void sub_242B4B570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_107_1();
  sub_242A5DEE0(v0, v1, v2, v3);
}

void sub_242B4B580()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5E1D4();
}

uint64_t sub_242B4B590()
{
  OUTLINED_FUNCTION_107_1();
  return sub_242A5EEC8();
}

void sub_242B4B5A0()
{
  OUTLINED_FUNCTION_107_1();
  sub_242A5F18C();
}

float sub_242B4B5B0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  char *v31;
  uint64_t v32;
  int v33;
  double v34;
  uint64_t v35;
  int v36;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  __int16 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  float v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;

  v68 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v66 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v67 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v65 = (char *)&v60 - v4;
  v5 = swift_getAssociatedTypeWitness();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v60 - v7;
  v8 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v60 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v60 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v60 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v60 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v60 - v23;
  v25 = sub_242C48014();
  v26 = sub_242C4802C();
  if (v25 == 11)
  {
    if (v26 == 52)
    {
      v32 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v24, v68, a2);
      v33 = swift_dynamicCast();
      v34 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v22, v32, a2);
      if (v33)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, a2);
      }
      else
      {
        v48 = sub_242C48128();
        v49 = v62;
        sub_242C48020();
        v50 = v64;
        swift_getAssociatedConformanceWitness();
        v51 = sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v50);
        v52 = v65;
        sub_242C48038();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, a2);
        v53 = v67;
        swift_getAssociatedConformanceWitness();
        v54 = sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v52, v53);
        *(_QWORD *)&v34 = (v48 << 63) | ((unint64_t)(v51 & 0x7FF) << 52) | v54 & 0xFFFFFFFFFFFFFLL;
      }
      return v34;
    }
LABEL_16:
    sub_242A77290();
    v38 = v68;
    sub_242C48044();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v38, a2);
    return *(float *)&v69;
  }
  if (v25 == 8)
  {
    if (v26 == 23)
    {
      v35 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v19, v68, a2);
      v36 = swift_dynamicCast();
      _S8 = *(float *)&v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v16, v35, a2);
      if (v36)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v16, a2);
      }
      else
      {
        sub_242C48128();
        v55 = v62;
        sub_242C48020();
        v56 = v64;
        swift_getAssociatedConformanceWitness();
        sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v56);
        v57 = v65;
        sub_242C48038();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v16, a2);
        v58 = v67;
        swift_getAssociatedConformanceWitness();
        sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v58);
        sub_242C486EC();
        return v59;
      }
      return _S8;
    }
    goto LABEL_16;
  }
  if (v25 != 5 || v26 != 10)
    goto LABEL_16;
  v28 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v68, a2);
  v29 = swift_dynamicCast();
  _H8 = LOWORD(v69);
  v31 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v61, v28, a2);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, a2);
  }
  else
  {
    sub_242C48128();
    v40 = v62;
    sub_242C48020();
    v41 = v64;
    swift_getAssociatedConformanceWitness();
    sub_242C48B24();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v41);
    v42 = v65;
    sub_242C48038();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, a2);
    v43 = v67;
    swift_getAssociatedConformanceWitness();
    sub_242C48B24();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v43);
    sub_242C4949C();
    _H8 = v44;
  }
  __asm { FCVT            S8, H8 }
  return _S8;
}

void sub_242B4BC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[56];
  _BYTE v22[80];

  OUTLINED_FUNCTION_4_44();
  sub_242AC7938(&qword_257228228, (uint64_t (*)(uint64_t))type metadata accessor for ConcatOperation, (uint64_t)&unk_242C5AA0C);
  v20 = v6;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 224) = 0;
  *(_QWORD *)(v0 + 232) = 0;
  sub_242B9DD08();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_49_15();
  if (!(!v8 & v7))
    goto LABEL_20;
  v19 = v3;
  v9 = v4;
  v10 = v1;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_31_28();
  v11 = (uint64_t *)(v2 + 40);
  if (sub_242B40E50() != 1)
  {
    OUTLINED_FUNCTION_2_34();
    v12 = *v11;
    v14 = OUTLINED_FUNCTION_0_2();
    sub_242B3E4C8(v14);
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_8_31();
    OUTLINED_FUNCTION_319();
LABEL_9:
    v15 = __OFADD__(v12, 1);
    v16 = v12 + 1;
    if (v15)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_34_21();
    }
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_11_6();
    OUTLINED_FUNCTION_39_0();
    sub_242BCA5F8(v2, v20, v5, v16, v10, (uint64_t)v22);
    sub_242B4F1C0((uint64_t)v22, v0 + 40);
    *(_BYTE *)(v0 + 145) = 0;
    OUTLINED_FUNCTION_20_33((uint64_t)v21);
    sub_242B4F25C((uint64_t)v21, v0 + 168, (uint64_t *)&unk_257228D70);
    OUTLINED_FUNCTION_19_26();
    OUTLINED_FUNCTION_74_7();
    if (v17 != v15 && (sub_242B9DD08(), OUTLINED_FUNCTION_85_5(), v2 == 1))
    {
      if (!v19)
      {
        v18 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_18_33(v18);
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_157_0();
        OUTLINED_FUNCTION_49_4();
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_50_0();
    }
    else
    {
      OUTLINED_FUNCTION_13_0();
    }
    swift_release();
    OUTLINED_FUNCTION_157_0();
LABEL_17:
    OUTLINED_FUNCTION_66_11();
    sub_242A6FFE8((uint64_t)v22);
    return;
  }
  OUTLINED_FUNCTION_2_34();
  v12 = *v11;
  if ((v12 & 0xC000000000000001) != 0)
    goto LABEL_22;
  OUTLINED_FUNCTION_75_7();
  if (v13)
  {
    v10 = v9;
    OUTLINED_FUNCTION_44_16();
    OUTLINED_FUNCTION_88_1();
    OUTLINED_FUNCTION_45_15();
    goto LABEL_9;
  }
  __break(1u);
}

void sub_242B4BE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  __n128 *inited;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  char v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __n128 *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[7];
  char v53[96];

  OUTLINED_FUNCTION_277();
  sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  v44 = v13;
  OUTLINED_FUNCTION_191_0();
  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_280_0(inited, (__n128)xmmword_242C4B7D0);
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v45 = a5;
    a5 = a6;
    v15 = inited[2].n128_u64[0];
    v16 = inited[2].n128_u8[8];
    OUTLINED_FUNCTION_305();
    sub_242C480E0();
    OUTLINED_FUNCTION_217();
    if ((v9 & 0x100000000) != 0)
      LODWORD(v9) = *(_DWORD *)(v7 + 16);
    *(_DWORD *)(a7 + 24) = v9;
    *(_QWORD *)(a7 + 152) = v15;
    *(_BYTE *)(a7 + 160) = v16;
    sub_242B91AFC();
    OUTLINED_FUNCTION_83_5();
    if (!v17)
    {
      OUTLINED_FUNCTION_80_8();
      goto LABEL_6;
    }
  }
  OUTLINED_FUNCTION_23_29();
LABEL_6:
  OUTLINED_FUNCTION_136();
  sub_242B91AFC();
  OUTLINED_FUNCTION_78_5();
  v18 = a5;
  if (!v19)
  {
    OUTLINED_FUNCTION_341();
    v24 = v23;
    OUTLINED_FUNCTION_136();
    v25 = sub_242B40B60(v24);
    v27 = v26;
    OUTLINED_FUNCTION_3_6();
    if ((v27 & 1) != 0)
      v25 = 0;
    v20 = v45;
    goto LABEL_14;
  }
  v20 = v45;
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_25;
  OUTLINED_FUNCTION_75_7();
  if (v21)
  {
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_283();
    v25 = v22;
    OUTLINED_FUNCTION_17_1();
LABEL_14:
    v28 = __OFADD__(v25, 1);
    v29 = v25 + 1;
    if (!v28)
    {
      OUTLINED_FUNCTION_158_0();
      OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_39_0();
      v30 = sub_242BCA5F8(v7, v44, 0, v29, v18, (uint64_t)v53);
      OUTLINED_FUNCTION_315(v30, v31, v32, v33, v34, v35, v36, v37, 1, 2, v42, v43, v44, v45, v46, v47, v48, v49, v50,
        v51,
        v52[0],
        v52[1],
        v52[2],
        v52[3],
        v52[4],
        v52[5],
        v52[6],
        v53[0]);
      *(_BYTE *)(a7 + 145) = 0;
      OUTLINED_FUNCTION_20_33((uint64_t)v52);
      sub_242B4F25C((uint64_t)v52, a7 + 168, (uint64_t *)&unk_257228D70);
      OUTLINED_FUNCTION_19_26();
      OUTLINED_FUNCTION_74_7();
      if (v38 != v28)
      {
        v39 = (__n128 *)swift_initStackObject();
        OUTLINED_FUNCTION_280_0(v39, v41);
        OUTLINED_FUNCTION_305();
        OUTLINED_FUNCTION_217();
        if (!v20)
        {
          v40 = OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_18_33(v40);
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_19_5();
          OUTLINED_FUNCTION_49_4();
          goto LABEL_20;
        }
        OUTLINED_FUNCTION_50_0();
      }
      else
      {
        OUTLINED_FUNCTION_13_0();
      }
      swift_release();
      OUTLINED_FUNCTION_19_5();
LABEL_20:
      OUTLINED_FUNCTION_66_11();
      sub_242A6FFE8((uint64_t)v53);
      OUTLINED_FUNCTION_166_2();
      return;
    }
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_34_21();
  }
  __break(1u);
}

#error "242B4C18C: call analysis failed (funcsize=95)"

#error "242B4C324: call analysis failed (funcsize=95)"

#error "242B4C524: call analysis failed (funcsize=131)"

#error "242B4C6E8: call analysis failed (funcsize=95)"

#error "242B4C878: call analysis failed (funcsize=93)"

#error "242B4CA10: call analysis failed (funcsize=95)"

#error "242B4CBA4: call analysis failed (funcsize=94)"

#error "242B4CD38: call analysis failed (funcsize=94)"

void sub_242B4CDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_242B4D6A8(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&qword_2572216C8, (uint64_t (*)(uint64_t))type metadata accessor for UnaryArithmeticOperation, (void (*)(uint64_t))sub_242ABDE84);
}

#error "242B4CF68: call analysis failed (funcsize=115)"

#error "242B4D0F4: call analysis failed (funcsize=95)"

#error "242B4D28C: call analysis failed (funcsize=95)"

#error "242B4D424: call analysis failed (funcsize=95)"

#error "242B4D5B4: call analysis failed (funcsize=93)"

void sub_242B4D670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_242B4D6A8(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&qword_257221328, (uint64_t (*)(uint64_t))type metadata accessor for ReLUGradientOperation, (void (*)(uint64_t))sub_242B0F514);
}

void sub_242B4D6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), void (*a10)(uint64_t))
{
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v18;
  uint64_t v19;
  __n128 *inited;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  char v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __n128 *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[7];
  char v60[96];

  OUTLINED_FUNCTION_277();
  sub_242AC7938(v18, a9, (uint64_t)&unk_242C54FA0);
  v50 = v19;
  OUTLINED_FUNCTION_191_0();
  v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_279_0(inited, (__n128)xmmword_242C4B7D0);
  if (v13)
  {
    __break(1u);
  }
  else
  {
    v51 = v10;
    v52 = a6;
    v10 = a5;
    v11 = a10;
    v21 = inited[2].n128_u64[0];
    v22 = inited[2].n128_u8[8];
    OUTLINED_FUNCTION_305();
    sub_242C480E0();
    v23 = OUTLINED_FUNCTION_217();
    if ((v14 & 0x100000000) != 0)
      LODWORD(v14) = *(_DWORD *)(v12 + 16);
    *(_DWORD *)(a7 + 24) = v14;
    *(_QWORD *)(a7 + 152) = v21;
    *(_BYTE *)(a7 + 160) = v22;
    a10(v23);
    OUTLINED_FUNCTION_83_5();
    if (!v24)
    {
      OUTLINED_FUNCTION_80_8();
      goto LABEL_6;
    }
  }
  OUTLINED_FUNCTION_23_29();
LABEL_6:
  v25 = OUTLINED_FUNCTION_136();
  v11(v25);
  OUTLINED_FUNCTION_78_5();
  if (!v26)
  {
    OUTLINED_FUNCTION_341();
    v31 = v30;
    OUTLINED_FUNCTION_136();
    v32 = sub_242B40B60(v31);
    v34 = v33;
    OUTLINED_FUNCTION_3_6();
    if ((v34 & 1) != 0)
      v32 = 0;
    v27 = v52;
    goto LABEL_14;
  }
  if ((v12 & 0xC000000000000001) != 0)
    goto LABEL_25;
  OUTLINED_FUNCTION_75_7();
  v27 = v52;
  if (v28)
  {
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_283();
    v32 = v29;
    OUTLINED_FUNCTION_17_1();
LABEL_14:
    v35 = __OFADD__(v32, 1);
    v36 = v32 + 1;
    if (!v35)
    {
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_158_0();
      v37 = sub_242BCA5F8(v12, v50, 0, v36, v27, (uint64_t)v60);
      OUTLINED_FUNCTION_315(v37, v38, v39, v40, v41, v42, v43, v44, 1, 2, v49, v50, v51, v52, v53, v54, v55, v56, v57,
        v58,
        v59[0],
        v59[1],
        v59[2],
        v59[3],
        v59[4],
        v59[5],
        v59[6],
        v60[0]);
      *(_BYTE *)(a7 + 145) = 0;
      OUTLINED_FUNCTION_20_33((uint64_t)v59);
      sub_242B4F25C((uint64_t)v59, a7 + 168, (uint64_t *)&unk_257228D70);
      OUTLINED_FUNCTION_19_26();
      OUTLINED_FUNCTION_74_7();
      if (v45 != v35)
      {
        v46 = (__n128 *)swift_initStackObject();
        OUTLINED_FUNCTION_279_0(v46, v48);
        OUTLINED_FUNCTION_305();
        OUTLINED_FUNCTION_217();
        if (!v10)
        {
          v47 = OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_18_33(v47);
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_49_4();
          goto LABEL_20;
        }
        OUTLINED_FUNCTION_19_5();
      }
      else
      {
        OUTLINED_FUNCTION_13_0();
      }
      swift_release();
      OUTLINED_FUNCTION_50_0();
LABEL_20:
      OUTLINED_FUNCTION_66_11();
      sub_242A6FFE8((uint64_t)v60);
      OUTLINED_FUNCTION_166_2();
      return;
    }
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_34_21();
  }
  __break(1u);
}

void sub_242B4D904()
{
  uint64_t v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_26_29();
  OUTLINED_FUNCTION_4_44();
  sub_242AC7938(&qword_2572281D8, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormOperation, (uint64_t)&unk_242C5E3B0);
  OUTLINED_FUNCTION_225_1();
  if (v0 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_49_15();
    if (!v2 & v1)
    {
      OUTLINED_FUNCTION_5_49();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_31_28();
      sub_242BC8D54();
    }
  }
  __break(1u);
  JUMPOUT(0x242B4DA78);
}

void sub_242B4DA8C()
{
  JUMPOUT(0x242B4D9A0);
}

void sub_242B4DA98()
{
  uint64_t v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_26_29();
  OUTLINED_FUNCTION_4_44();
  sub_242AC7938(&qword_2572281D0, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormGradientOperation, (uint64_t)&unk_242C5E3B0);
  OUTLINED_FUNCTION_225_1();
  if (v0 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_49_15();
    if (!v2 & v1)
    {
      OUTLINED_FUNCTION_5_49();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_31_28();
      sub_242BC92C8();
    }
  }
  __break(1u);
  JUMPOUT(0x242B4DC0CLL);
}

void sub_242B4DC20()
{
  JUMPOUT(0x242B4DB34);
}

#error "242B4DD04: call analysis failed (funcsize=94)"

#error "242B4DE98: call analysis failed (funcsize=94)"

#error "242B4E030: call analysis failed (funcsize=95)"

#error "242B4E1C4: call analysis failed (funcsize=94)"

#error "242B4E358: call analysis failed (funcsize=94)"

uint64_t sub_242B4E414()
{
  return sub_242B43CB8();
}

unint64_t sub_242B4E430()
{
  unint64_t result;

  result = qword_2572283A0;
  if (!qword_2572283A0)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE4540], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_2572283A0);
  }
  return result;
}

unint64_t sub_242B4E46C()
{
  unint64_t result;

  result = qword_2572283B8;
  if (!qword_2572283B8)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE42A0], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_2572283B8);
  }
  return result;
}

unint64_t sub_242B4E4A8()
{
  unint64_t result;

  result = qword_2572283C8;
  if (!qword_2572283C8)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE4048], MEMORY[0x24BEE4008]);
    atomic_store(result, (unint64_t *)&qword_2572283C8);
  }
  return result;
}

unint64_t sub_242B4E4E4()
{
  unint64_t result;

  result = qword_2572283D8;
  if (!qword_2572283D8)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE1EC8], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_2572283D8);
  }
  return result;
}

unint64_t sub_242B4E520()
{
  unint64_t result;

  result = qword_2572283E8;
  if (!qword_2572283E8)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2572283E8);
  }
  return result;
}

unint64_t sub_242B4E55C()
{
  unint64_t result;

  result = qword_2572283F8;
  if (!qword_2572283F8)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE3F60], MEMORY[0x24BEE3F30]);
    atomic_store(result, (unint64_t *)&qword_2572283F8);
  }
  return result;
}

unint64_t sub_242B4E598()
{
  unint64_t result;

  result = qword_257228408;
  if (!qword_257228408)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE3E80], MEMORY[0x24BEE3E50]);
    atomic_store(result, (unint64_t *)&qword_257228408);
  }
  return result;
}

double sub_242B4E5D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v35;
  int v36;
  float v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  __int16 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  float v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;

  v68 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v66 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v67 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v65 = (char *)&v60 - v4;
  v5 = swift_getAssociatedTypeWitness();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v60 - v7;
  v8 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v60 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v60 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v60 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v60 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v60 - v23;
  v25 = sub_242C48014();
  v26 = sub_242C4802C();
  if (v25 == 11)
  {
    if (v26 == 52)
    {
      v32 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v24, v68, a2);
      v33 = swift_dynamicCast();
      _D8 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v22, v32, a2);
      if (v33)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, a2);
      }
      else
      {
        v48 = sub_242C48128();
        v49 = v62;
        sub_242C48020();
        v50 = v64;
        swift_getAssociatedConformanceWitness();
        v51 = sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v50);
        v52 = v65;
        sub_242C48038();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, a2);
        v53 = v67;
        swift_getAssociatedConformanceWitness();
        v54 = sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v52, v53);
        *(_QWORD *)&_D8 = (v48 << 63) | ((unint64_t)(v51 & 0x7FF) << 52) | v54 & 0xFFFFFFFFFFFFFLL;
      }
      return _D8;
    }
    goto LABEL_16;
  }
  if (v25 == 8)
  {
    if (v26 == 23)
    {
      v35 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v19, v68, a2);
      v36 = swift_dynamicCast();
      v37 = *(float *)&v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v16, v35, a2);
      if (v36)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v16, a2);
      }
      else
      {
        sub_242C48128();
        v55 = v62;
        sub_242C48020();
        v56 = v64;
        swift_getAssociatedConformanceWitness();
        sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v56);
        v57 = v65;
        sub_242C48038();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v16, a2);
        v58 = v67;
        swift_getAssociatedConformanceWitness();
        sub_242C48B24();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v58);
        sub_242C486EC();
        return v59;
      }
      return v37;
    }
LABEL_16:
    sub_242AC5140();
    v38 = v68;
    sub_242C48044();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v38, a2);
    return v69;
  }
  if (v25 != 5 || v26 != 10)
    goto LABEL_16;
  v28 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v68, a2);
  v29 = swift_dynamicCast();
  _H8 = LOWORD(v69);
  v31 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v61, v28, a2);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, a2);
  }
  else
  {
    sub_242C48128();
    v40 = v62;
    sub_242C48020();
    v41 = v64;
    swift_getAssociatedConformanceWitness();
    sub_242C48B24();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v41);
    v42 = v65;
    sub_242C48038();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, a2);
    v43 = v67;
    swift_getAssociatedConformanceWitness();
    sub_242C48B24();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v43);
    sub_242C4949C();
    _H8 = v44;
  }
  __asm { FCVT            D8, H8 }
  return _D8;
}

float sub_242B4EC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v40;
  uint64_t v41;
  uint64_t v42;
  __int16 v43;
  uint64_t v44;
  uint64_t v45;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;

  OUTLINED_FUNCTION_178_1();
  v60 = v2;
  v61 = v4;
  v6 = v5;
  v58 = v7;
  v8 = OUTLINED_FUNCTION_330();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v50 - v10;
  v11 = OUTLINED_FUNCTION_330();
  v53 = *(_QWORD *)(v11 - 8);
  v54 = v11;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v12);
  v52 = (char *)&v50 - v13;
  v14 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_1();
  v51 = v16;
  OUTLINED_FUNCTION_33_0();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v50 - v19;
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_268_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_338();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v50 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v50 - v26;
  v28 = sub_242C48014();
  v29 = sub_242C4802C();
  if (v28 == 11)
  {
    if (v29 == 52)
    {
      v34 = v58;
      OUTLINED_FUNCTION_2_33((uint64_t)v27, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
      v35 = OUTLINED_FUNCTION_44_8();
      _D8 = v59;
      OUTLINED_FUNCTION_2_33((uint64_t)v25, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
      if (v35)
      {
        OUTLINED_FUNCTION_7_24((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
      }
      else
      {
        v41 = sub_242C48128();
        v42 = (uint64_t)v52;
        sub_242C48020();
        swift_getAssociatedConformanceWitness();
        v43 = sub_242C48B24();
        OUTLINED_FUNCTION_325(v42, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
        v44 = (uint64_t)v55;
        sub_242C48038();
        OUTLINED_FUNCTION_7_24((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
        swift_getAssociatedConformanceWitness();
        v45 = sub_242C48B24();
        OUTLINED_FUNCTION_7_24(v44, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
        _D8 = (v41 << 63) | ((unint64_t)(v43 & 0x7FF) << 52) | v45 & 0xFFFFFFFFFFFFFLL;
      }
      __asm { FCVT            H8, D8 }
      return *(float *)&_D8;
    }
LABEL_16:
    sub_242AF3280();
    v38 = v58;
    sub_242C48044();
    OUTLINED_FUNCTION_7_24(v38, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    LOWORD(_D8) = v59;
    return *(float *)&_D8;
  }
  if (v28 == 8)
  {
    if (v29 == 23)
    {
      v36 = v58;
      OUTLINED_FUNCTION_2_33(v0, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
      v37 = OUTLINED_FUNCTION_44_8();
      LODWORD(_D8) = v59;
      OUTLINED_FUNCTION_2_33(v1, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
      if (v37)
      {
        OUTLINED_FUNCTION_7_24(v1, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
      }
      else
      {
        OUTLINED_FUNCTION_299();
        OUTLINED_FUNCTION_212_0();
        OUTLINED_FUNCTION_200_1();
        OUTLINED_FUNCTION_297();
        OUTLINED_FUNCTION_215_1();
        OUTLINED_FUNCTION_210_1();
        OUTLINED_FUNCTION_7_24(v1, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
        OUTLINED_FUNCTION_201_1();
        OUTLINED_FUNCTION_296();
        OUTLINED_FUNCTION_7_24((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
        sub_242C486EC();
        LODWORD(_D8) = v49;
      }
      __asm { FCVT            H8, S8 }
      return *(float *)&_D8;
    }
    goto LABEL_16;
  }
  if (v28 != 5 || v29 != 10)
    goto LABEL_16;
  v31 = v58;
  OUTLINED_FUNCTION_2_33((uint64_t)v20, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  OUTLINED_FUNCTION_368();
  v32 = OUTLINED_FUNCTION_44_8();
  LOWORD(_D8) = v59;
  v33 = v51;
  OUTLINED_FUNCTION_2_33(v51, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
  if (v32)
  {
    OUTLINED_FUNCTION_7_24(v33, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_299();
    OUTLINED_FUNCTION_212_0();
    OUTLINED_FUNCTION_200_1();
    OUTLINED_FUNCTION_297();
    OUTLINED_FUNCTION_215_1();
    OUTLINED_FUNCTION_210_1();
    OUTLINED_FUNCTION_7_24(v33, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    OUTLINED_FUNCTION_201_1();
    OUTLINED_FUNCTION_296();
    OUTLINED_FUNCTION_7_24((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
    sub_242C4949C();
    LODWORD(_D8) = v40;
  }
  return *(float *)&_D8;
}

void sub_242B4F124(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v3), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242B4F160(uint64_t a1)
{
  uint64_t *v1;

  return sub_242B479B4(a1, v1[6], v1[7], v1[2]);
}

unint64_t sub_242B4F184()
{
  unint64_t result;

  result = qword_257228438;
  if (!qword_257228438)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE3FC8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_257228438);
  }
  return result;
}

uint64_t sub_242B4F1C0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TensorRepresentation.SymbolicValue(a2, a1);
  return a2;
}

void *sub_242B4F1FC(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_242B49030(a1, a2, *a3);
}

void *sub_242B4F214(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B4F1FC(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_242B4F22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B46A58(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_242B4F244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B46730(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_242B4F25C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_1_0();
}

uint64_t OUTLINED_FUNCTION_0_67()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_52()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  va_list va;

  va_start(va, a9);
  return sub_242BCA5F8(v10, a2, v12, v9, v11, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_5_49()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_8_31()
{
  _QWORD *v0;

  sub_242B40B60(v0);
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_9_41(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  va_list va;

  va_start(va, a2);
  *(_BYTE *)(v2 + 145) = 0;
  return sub_242BCA4E4(v4, v3, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_12_32()
{
  return sub_242A5D824(80);
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_15_30()
{
  return 0x363174616F6C46;
}

uint64_t OUTLINED_FUNCTION_16_30()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 - 256), v0 - 336);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 336), *(_QWORD *)(v0 - 312));
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_17_29@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
}

id OUTLINED_FUNCTION_18_33(uint64_t a1)
{
  uint64_t v1;

  return sub_242BC9F84(a1, v1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_19_26()
{
  return swift_beginAccess();
}

double OUTLINED_FUNCTION_20_33@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_242BCA4E4(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_22_22()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 + 64), v0 + 128);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_23_29()
{
  return sub_242C48FC8();
}

uint64_t OUTLINED_FUNCTION_24_28()
{
  return 0x656C62756F44;
}

uint64_t OUTLINED_FUNCTION_25_27()
{
  return 0x74616F6C46;
}

uint64_t OUTLINED_FUNCTION_27_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 352) = a1;
  *(_QWORD *)(v2 - 344) = a2;
  return sub_242C494F0();
}

uint64_t OUTLINED_FUNCTION_28_27()
{
  return sub_242C48ED8();
}

uint64_t OUTLINED_FUNCTION_29_20()
{
  return sub_242C4925C();
}

void OUTLINED_FUNCTION_31_28()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;

  *(_DWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 152) = v1;
  *(_BYTE *)(v0 + 160) = v2;
}

uint64_t OUTLINED_FUNCTION_32_24()
{
  uint64_t v0;

  return v0 - 256;
}

void OUTLINED_FUNCTION_34_21()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_37_20()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_39_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  return sub_242B4F1C0((uint64_t)va, v9 + 40);
}

uint64_t OUTLINED_FUNCTION_40_18()
{
  return sub_242C494F0();
}

void OUTLINED_FUNCTION_41_22()
{
  unint64_t v0;

  sub_242B3E4C8(v0);
}

uint64_t OUTLINED_FUNCTION_42_19()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 - 256), v0 - 336);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 336), *(_QWORD *)(v0 - 312));
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_44_16()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_45_15()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_50_14(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_51_18()
{
  uint64_t v0;

  return sub_242A587A8(v0 - 296, v0 - 208);
}

uint64_t OUTLINED_FUNCTION_54_10()
{
  return sub_242C48B3C();
}

void OUTLINED_FUNCTION_55_10()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[4] = 0;
  v0[28] = 0;
  v0[29] = 0;
}

uint64_t OUTLINED_FUNCTION_56_11()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A587A8(v1, v0 + 168);
}

uint64_t OUTLINED_FUNCTION_57_15(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t OUTLINED_FUNCTION_60_10()
{
  uint64_t v0;

  _H0 = *(_WORD *)(v0 - 336);
  __asm { FCVT            S0, H0 }
  _S0 = truncf(_S0);
  __asm { FCVT            H0, S0 }
  return v0 - 256;
}

uint64_t OUTLINED_FUNCTION_61_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = a1;
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = 47;
  *(_WORD *)(v2 - 104) = 2;
  return type metadata accessor for RandomOperation();
}

uint64_t OUTLINED_FUNCTION_63_12()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_66_11()
{
  uint64_t v0;

  return sub_242A662D8(v0);
}

uint64_t OUTLINED_FUNCTION_69_7()
{
  return sub_242C48B30();
}

uint64_t OUTLINED_FUNCTION_70_10()
{
  uint64_t v0;
  uint64_t v1;

  sub_242A64518((__int128 *)(v0 + 64), v0 + 128);
  *(_QWORD *)(v0 + 24) = v1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_79_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return sub_242A6FFE8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_81_6()
{
  uint64_t v0;

  _H0 = *(_WORD *)(v0 + 128);
  __asm { FCVT            S0, H0 }
  _S0 = truncf(_S0);
  __asm { FCVT            H0, S0 }
  return v0 + 64;
}

void OUTLINED_FUNCTION_84_6(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_242B4F25C((uint64_t)va, a2, a3);
}

uint64_t OUTLINED_FUNCTION_85_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_86_4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2 - a2, a1, v4);
}

uint64_t OUTLINED_FUNCTION_87_4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

void OUTLINED_FUNCTION_88_1()
{
  sub_242BC9CA4();
}

uint64_t OUTLINED_FUNCTION_89_3()
{
  return sub_242C48B00();
}

uint64_t OUTLINED_FUNCTION_90_2()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_91_2()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_92_4()
{
  uint64_t v0;

  return v0 - 352;
}

uint64_t OUTLINED_FUNCTION_96_3()
{
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_97_4(uint64_t result, char a2)
{
  return sub_242C19848(result, a2);
}

uint64_t OUTLINED_FUNCTION_98_3@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_99_3@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_102_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A587A8(v2, a2);
}

uint64_t OUTLINED_FUNCTION_103_3()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_104_3()
{
  uint64_t v0;

  sub_242B933C0(v0 + 160);
}

const void *OUTLINED_FUNCTION_105_3()
{
  return sub_242B93328();
}

uint64_t OUTLINED_FUNCTION_106_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_107_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_108_1()
{
  uint64_t v0;

  return v0 - 256;
}

uint64_t OUTLINED_FUNCTION_109_2()
{
  uint64_t v0;

  return v0 - 256;
}

uint64_t OUTLINED_FUNCTION_110_2(char a1, unint64_t a2, __n128 a3, double a4)
{
  __n128 *v4;

  v4[10] = a3;
  v4[11].n128_f64[0] = a4;
  v4[11].n128_u8[8] = a1 & 1;
  v4[12].n128_u64[0] = a2;
  return sub_242AC87F0((__n128 *)v4[4].n128_u64);
}

uint64_t OUTLINED_FUNCTION_112_3()
{
  return sub_242C48B30();
}

uint64_t OUTLINED_FUNCTION_115_3()
{
  return 0x676E696E7261656CLL;
}

uint64_t OUTLINED_FUNCTION_116_2(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v2, a1 ^ 1u, 1, v1);
}

uint64_t OUTLINED_FUNCTION_117_1(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v1, a1 ^ 1u, 1, v2);
}

void OUTLINED_FUNCTION_119_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  sub_242B4BE5C(a1, 0, a3, a4, v8, v7, a7);
}

uint64_t OUTLINED_FUNCTION_120_3()
{
  return sub_242C48068();
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  return sub_242C48B3C();
}

uint64_t OUTLINED_FUNCTION_124_3()
{
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_128_3()
{
  return 0;
}

void OUTLINED_FUNCTION_130_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 - 472) = &a9;
}

uint64_t OUTLINED_FUNCTION_131_3()
{
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_134_3()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_135_3()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v1 - 224, v0 + 64);
}

uint64_t OUTLINED_FUNCTION_138_3()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_140_1()
{
  uint64_t v0;

  return v0 + 64;
}

uint64_t OUTLINED_FUNCTION_142_3()
{
  uint64_t v0;

  return v0 + 64;
}

uint64_t OUTLINED_FUNCTION_143_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_145_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 + 40) = &a9;
}

uint64_t OUTLINED_FUNCTION_147_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_148_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_150_3@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242C000CC(a1, v2, a2);
}

void OUTLINED_FUNCTION_151_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v0 + 208) = *(_DWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 64) = v1;
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_152_1()
{
  return sub_242C48068();
}

uint64_t OUTLINED_FUNCTION_153_3()
{
  uint64_t v0;

  return sub_242A5DC30(v0 + 160);
}

uint64_t OUTLINED_FUNCTION_155_3()
{
  return 0x6E6F6C69737065;
}

void OUTLINED_FUNCTION_158_2(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_163_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_165_2()
{
  return type metadata accessor for TensorRepresentation();
}

uint64_t OUTLINED_FUNCTION_167_2()
{
  return sub_242C481AC();
}

uint64_t OUTLINED_FUNCTION_168_1()
{
  return sub_242C48B3C();
}

void OUTLINED_FUNCTION_169_0(uint64_t a1@<X3>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 176) = a1;
  *(_QWORD *)(v4 - 168) = a3;
  *(_QWORD *)(v4 - 184) = a2;
  *(_QWORD *)(v4 - 160) = a4;
}

__int16 OUTLINED_FUNCTION_171_1@<H0>()
{
  uint64_t v0;
  __int16 result;

  _H0 = *(_WORD *)(v0 - 336);
  __asm { FCVT            S0, H0 }
  _S0 = truncf(_S0);
  __asm { FCVT            H0, S0 }
  sub_242B4A26C();
  return result;
}

__int16 OUTLINED_FUNCTION_172_0@<H0>()
{
  uint64_t v0;
  __int16 result;

  _H0 = *(_WORD *)(v0 - 336);
  __asm { FCVT            S0, H0 }
  _S0 = truncf(_S0);
  __asm { FCVT            H0, S0 }
  sub_242B49ECC();
  return result;
}

uint64_t OUTLINED_FUNCTION_173_0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t result;

  result = __swift_destroy_boxed_opaque_existential_1(v2 - 208);
  *(_QWORD *)(v2 - 208) = v0;
  *(_BYTE *)(v2 - 200) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_176_1()
{
  return 0x56676E696E6E7572;
}

uint64_t OUTLINED_FUNCTION_177_1(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return swift_getDynamicType();
}

uint64_t OUTLINED_FUNCTION_179_1()
{
  return sub_242C48B30();
}

uint64_t OUTLINED_FUNCTION_180_1(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_242A66290(v1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_182_1()
{
  return swift_dynamicCastMetatype();
}

BOOL OUTLINED_FUNCTION_183_1(uint64_t a1)
{
  uint64_t v1;

  return v1 >= a1;
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  return sub_242C481AC();
}

uint64_t OUTLINED_FUNCTION_185_1()
{
  return 0x3631746E49;
}

uint64_t OUTLINED_FUNCTION_186_1()
{
  return 0x3233746E49;
}

uint64_t OUTLINED_FUNCTION_187_1()
{
  return 0x3436746E49;
}

uint64_t OUTLINED_FUNCTION_188_1()
{
  return 7630409;
}

__int16 OUTLINED_FUNCTION_189_0@<H0>()
{
  uint64_t v0;
  __int16 result;

  _H0 = *(_WORD *)(v0 + 128);
  __asm { FCVT            S0, H0 }
  _S0 = truncf(_S0);
  __asm { FCVT            H0, S0 }
  sub_242B4A26C();
  return result;
}

__int16 OUTLINED_FUNCTION_190_0@<H0>()
{
  uint64_t v0;
  __int16 result;

  _H0 = *(_WORD *)(v0 + 128);
  __asm { FCVT            S0, H0 }
  _S0 = truncf(_S0);
  __asm { FCVT            H0, S0 }
  sub_242B49ECC();
  return result;
}

void OUTLINED_FUNCTION_191_0()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[4] = 0;
  v0[28] = 0;
  v0[29] = 0;
}

uint64_t OUTLINED_FUNCTION_193_1()
{
  return 1953384789;
}

double OUTLINED_FUNCTION_194_1()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_DWORD *)(v0 + 112) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_195_1()
{
  uint64_t v0;

  return sub_242A662D8(v0 + 64);
}

__n128 OUTLINED_FUNCTION_196_1()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 80) = v1;
  result = *(__n128 *)(v0 + 192);
  *(__n128 *)(v0 + 96) = result;
  *(_DWORD *)(v0 + 112) = *(_DWORD *)(v0 + 208);
  return result;
}

uint64_t OUTLINED_FUNCTION_197_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 336);
}

uint64_t OUTLINED_FUNCTION_198_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_200_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_201_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_204_0()
{
  uint64_t v0;

  return sub_242A6FDE8(v0 + 160);
}

uint64_t OUTLINED_FUNCTION_207_1()
{
  return 0x4D676E696E6E7572;
}

uint64_t OUTLINED_FUNCTION_209_1()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_210_1()
{
  return sub_242C48038();
}

uint64_t OUTLINED_FUNCTION_211_0()
{
  return 0x656C616373;
}

uint64_t OUTLINED_FUNCTION_212_0()
{
  return sub_242C48020();
}

uint64_t OUTLINED_FUNCTION_213_0()
{
  return 0x74657366666FLL;
}

uint64_t OUTLINED_FUNCTION_214_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_215_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_216_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 96) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v2, v1);
}

uint64_t OUTLINED_FUNCTION_218_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A66290(v2, a2);
}

uint64_t OUTLINED_FUNCTION_219_0()
{
  return 1953384789;
}

BOOL OUTLINED_FUNCTION_221_1(uint64_t a1)
{
  uint64_t v1;

  return v1 >= a1;
}

uint64_t OUTLINED_FUNCTION_222_1()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[4] = 0;
  v0[28] = 0;
  v0[29] = 0;
  return sub_242ABD318();
}

uint64_t OUTLINED_FUNCTION_223_0()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[4] = 0;
  v0[28] = 0;
  v0[29] = 0;
  return sub_242B01BC8();
}

void OUTLINED_FUNCTION_224_1()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[4] = 0;
  v0[28] = 0;
  v0[29] = 0;
  sub_242BF536C();
}

void OUTLINED_FUNCTION_225_1()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[4] = 0;
  v0[28] = 0;
  v0[29] = 0;
  sub_242BC8AFC();
}

uint64_t OUTLINED_FUNCTION_226_1()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[4] = 0;
  v0[28] = 0;
  v0[29] = 0;
  return sub_242AA4E24();
}

uint64_t OUTLINED_FUNCTION_227_1()
{
  return swift_getAssociatedConformanceWitness();
}

__n128 OUTLINED_FUNCTION_228_1()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 - 144);
  *(_OWORD *)(v0 - 224) = *(_OWORD *)(v0 - 160);
  *(_OWORD *)(v0 - 208) = v1;
  result = *(__n128 *)(v0 - 128);
  *(__n128 *)(v0 - 192) = result;
  *(_DWORD *)(v0 - 176) = *(_DWORD *)(v0 - 112);
  return result;
}

uint64_t OUTLINED_FUNCTION_229_1()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;

  *(_DWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 152) = v1;
  *(_BYTE *)(v0 + 160) = v2;
  return sub_242ABDE84();
}

void OUTLINED_FUNCTION_232_1()
{
  sub_242B49FF0();
}

void OUTLINED_FUNCTION_233_1()
{
  sub_242B49CE8();
}

void OUTLINED_FUNCTION_234_0()
{
  sub_242B4A118();
}

void OUTLINED_FUNCTION_235_0()
{
  sub_242B49DB8();
}

__n128 OUTLINED_FUNCTION_236_0()
{
  uint64_t v0;
  __n128 *v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = v2;
  result = *(__n128 *)(v0 + 96);
  v1[2] = result;
  *(_DWORD *)(v0 + 208) = *(_DWORD *)(v0 + 112);
  return result;
}

float OUTLINED_FUNCTION_238_0()
{
  float result;

  __asm { FCVT            S0, H8 }
  return result;
}

uint64_t OUTLINED_FUNCTION_240()
{
  return sub_242B93088();
}

uint64_t OUTLINED_FUNCTION_242_0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_243_0(uint64_t a1)
{
  uint64_t v1;

  return sub_242A66290(a1, v1 - 224);
}

uint64_t OUTLINED_FUNCTION_244_0()
{
  uint64_t v0;

  return Tensor.place(on:)(v0 + 160);
}

uint64_t OUTLINED_FUNCTION_245_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 168);
}

__n128 OUTLINED_FUNCTION_246_0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 160) = v2;
  result = *(__n128 *)(v0 + 240);
  *(__n128 *)(v0 + 176) = result;
  *(_DWORD *)(v1 - 176) = *(_DWORD *)(v1 - 112);
  return result;
}

void OUTLINED_FUNCTION_248_0(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;

  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = v1;
}

uint64_t OUTLINED_FUNCTION_249_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v0, v1 - 152);
}

uint64_t OUTLINED_FUNCTION_250_0()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_251_0()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_253_0()
{
  return sub_242C480E0();
}

__n128 OUTLINED_FUNCTION_255_0()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = v1;
  result = *(__n128 *)(v0 + 64);
  *(__n128 *)(v0 + 160) = result;
  *(_DWORD *)(v0 + 176) = *(_DWORD *)(v0 + 80);
  return result;
}

uint64_t OUTLINED_FUNCTION_256_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_257_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 - 176) = a5;
  *(_QWORD *)(v8 - 168) = a8;
  *(_QWORD *)(v8 - 184) = a2;
}

uint64_t OUTLINED_FUNCTION_258_0()
{
  uint64_t v0;

  return sub_242A662D8(v0);
}

uint64_t OUTLINED_FUNCTION_259_0()
{
  uint64_t v0;

  return sub_242A662D8(v0);
}

uint64_t OUTLINED_FUNCTION_260_0()
{
  return sub_242C486E0();
}

uint64_t OUTLINED_FUNCTION_261_0()
{
  return sub_242C48698();
}

void OUTLINED_FUNCTION_262_0()
{
  uint64_t v0;

  sub_242B933C0(v0 + 320);
}

void OUTLINED_FUNCTION_263_0()
{
  uint64_t v0;

  sub_242B933C0(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_264(uint64_t a1, uint64_t a2)
{
  return sub_242B090E0(a1, a2);
}

__n128 OUTLINED_FUNCTION_265_0()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = v1;
  result = *(__n128 *)(v0 + 256);
  *(__n128 *)(v0 + 352) = result;
  *(_DWORD *)(v0 + 368) = *(_DWORD *)(v0 + 272);
  return result;
}

uint64_t OUTLINED_FUNCTION_266_0()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_269_0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_270()
{
  sub_242B49FF0();
}

void OUTLINED_FUNCTION_271_0()
{
  sub_242B49CE8();
}

uint64_t OUTLINED_FUNCTION_272()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_273_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void OUTLINED_FUNCTION_274_0()
{
  sub_242B4A118();
}

void OUTLINED_FUNCTION_275_0()
{
  sub_242B49DB8();
}

uint64_t OUTLINED_FUNCTION_276()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_278_0()
{
  uint64_t v0;

  return v0 - 352;
}

uint64_t OUTLINED_FUNCTION_279_0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_242B0560C((uint64_t)&a1[2]);
}

uint64_t OUTLINED_FUNCTION_280_0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_242B9156C((uint64_t)&a1[2]);
}

uint64_t OUTLINED_FUNCTION_281_0()
{
  return sub_242C487B8();
}

void OUTLINED_FUNCTION_283()
{
  sub_242BC9CA4();
}

double OUTLINED_FUNCTION_284()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_DWORD *)(v0 + 112) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_285()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_288()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_289()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  result = __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  *(_QWORD *)(v0 + 168) = v1;
  *(_BYTE *)(v0 + 176) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_294()
{
  return sub_242C491CC();
}

void OUTLINED_FUNCTION_295(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t *__return_ptr, uint64_t *, char *, uint64_t, uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, uint64_t))
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_242B48EAC(a1, a2, a3, a4, a5, a6, a7, a8, a9.n128_i64[0], a9.n128_i64[1], v26, v27, v28, a15, a16, a17, a18, a19, a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

uint64_t OUTLINED_FUNCTION_296()
{
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_297()
{
  return sub_242C48B24();
}

uint64_t OUTLINED_FUNCTION_299()
{
  return sub_242C48128();
}

uint64_t OUTLINED_FUNCTION_300(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_242C48134();
}

uint64_t OUTLINED_FUNCTION_303()
{
  uint64_t v0;

  return sub_242A662D8(v0);
}

uint64_t OUTLINED_FUNCTION_305()
{
  return swift_setDeallocating();
}

uint64_t OUTLINED_FUNCTION_306()
{
  return sub_242C491CC();
}

void OUTLINED_FUNCTION_311()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[2] = v3;
  v0[4] = v1;
  v0[5] = v2;
}

uint64_t OUTLINED_FUNCTION_313()
{
  uint64_t v0;

  return sub_242A5DC30(v0 + 320);
}

uint64_t OUTLINED_FUNCTION_314()
{
  return 947154505;
}

uint64_t OUTLINED_FUNCTION_315(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  return sub_242B4F1C0((uint64_t)&a28, v28 + 40);
}

uint64_t OUTLINED_FUNCTION_316()
{
  uint64_t v0;

  return sub_242A662D8(v0);
}

uint64_t OUTLINED_FUNCTION_317()
{
  return sub_242C4814C();
}

const void *OUTLINED_FUNCTION_320()
{
  return sub_242B93328();
}

double OUTLINED_FUNCTION_321()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_DWORD *)(v0 + 80) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_325@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_326()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v1 - 224, v0 + 224);
}

uint64_t OUTLINED_FUNCTION_327()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(v1 - 224, v0 + 32);
}

uint64_t OUTLINED_FUNCTION_328()
{
  return sub_242C48710();
}

uint64_t OUTLINED_FUNCTION_329()
{
  return sub_242C494B4();
}

uint64_t OUTLINED_FUNCTION_330()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_331()
{
  return swift_dynamicCastObjCClass();
}

uint64_t OUTLINED_FUNCTION_332()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_333()
{
  uint64_t v0;

  return sub_242A5DC30(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_334()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_335()
{
  return Tensor.squeezingShape(at:)();
}

void OUTLINED_FUNCTION_341()
{
  unint64_t v0;

  sub_242B3E4C8(v0);
}

uint64_t OUTLINED_FUNCTION_342()
{
  return 0x6D75746E656D6F6DLL;
}

uint64_t OUTLINED_FUNCTION_343()
{
  return sub_242C486B0();
}

uint64_t OUTLINED_FUNCTION_345()
{
  return 0x756F4370756F7267;
}

void OUTLINED_FUNCTION_350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD *))
{
  uint64_t v26;
  uint64_t v27;

  sub_242B46E80(a1, a2, a3, a4, a5, a6, a7, a8, a9.n128_i64[0], a9.n128_i64[1], v26, v27, a14, a15, a16, a17, a18, a19, a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

uint64_t OUTLINED_FUNCTION_352(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v5)(uint64_t, uint64_t);

  return v5(a4, a5);
}

uint64_t OUTLINED_FUNCTION_356()
{
  uint64_t v0;

  return sub_242A662D8(v0);
}

uint64_t OUTLINED_FUNCTION_359()
{
  return sub_242C492B0();
}

void OUTLINED_FUNCTION_360()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void OUTLINED_FUNCTION_361()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

uint64_t OUTLINED_FUNCTION_362()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_363(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DEE0(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_364()
{
  return 1953384789;
}

uint64_t OUTLINED_FUNCTION_365()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_366()
{
  return sub_242C49490();
}

void OUTLINED_FUNCTION_367()
{
  uint64_t v0;

  sub_242B933C0(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_369()
{
  return sub_242C48650();
}

uint64_t OUTLINED_FUNCTION_370()
{
  return sub_242C49208();
}

uint64_t sub_242B5081C(uint64_t a1, void (*a2)(_BYTE *))
{
  _BYTE v5[176];

  swift_retain();
  sub_242BF6140(a1);
  sub_242A78110(v5);
  a2(v5);
  swift_retain();
  sub_242A7815C();
  swift_release();
  return swift_release();
}

void sub_242B508C0()
{
  __asm { BR              X10 }
}

uint64_t sub_242B508F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x24BEDF8A0];
  v2 = sub_242C47888();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

void sub_242B50A3C()
{
  sub_242A59170();
}

void sub_242B50A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_242C47888();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_4_9();
  v7 = v6 - v5;
  v8 = sub_242B89308();
  sub_242A9E618(v8, a1);
  if (!v9)
  {
    v19 = sub_242ABCCF0(*(_BYTE *)(v1 + 128));
    v21 = v20;
    sub_242A6A5B0();
    v22 = OUTLINED_FUNCTION_24_1();
    *v23 = v19;
    v23[1] = v21;
    OUTLINED_FUNCTION_4_41(v22, (uint64_t)v23);
    goto LABEL_12;
  }
  v11 = v9;
  v12 = v10;
  if (sub_242ABCCF0(*(_BYTE *)(v1 + 128)) == 0x797469746E656469 && v13 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v15 = sub_242C4925C();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v24 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v24 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v24 + 32) = v11;
    *(_QWORD *)(v24 + 40) = v12;
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
  v16 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  sub_242B508C0();
  v17 = sub_242B50C58(v7, v11, v12);
  if (v2)
  {
    OUTLINED_FUNCTION_4_45();
    *(_QWORD *)(v16 + 16) = 0;
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    v25 = v17;
    v26 = v18;
    OUTLINED_FUNCTION_4_45();
    *(_QWORD *)(v16 + 32) = v25;
    *(_QWORD *)(v16 + 40) = v26;
    swift_unknownObjectRelease();
  }
LABEL_12:
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B50C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 8);
  v14(&v47, ObjectType, a3);
  if (v47 > 0xCu || ((1 << v47) & 0x1777) == 0)
  {
    sub_242B52F40();
    v32 = v37;
    v39 = v38;
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v40 = v32;
    *(_QWORD *)(v40 + 8) = v39;
    *(_BYTE *)(v40 + 16) = 3;
    swift_willThrow();
    return v32;
  }
  v42 = v14;
  v43 = v3;
  v44 = v9;
  v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 16);
  v15(&v47, ObjectType, a3);
  v16 = v47;
  v15(&v47, ObjectType, a3);
  v17 = *(_QWORD *)(v47 + 16);
  swift_bridgeObjectRelease();
  v45 = a1;
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v18 = (_OWORD *)swift_allocObject();
    v18[1] = xmmword_242C4B7D0;
    v15(&v47, ObjectType, a3);
    result = v47;
    v20 = *(_QWORD *)(v47 + 16);
    if (v20)
    {
      v21 = (uint64_t *)(v47 + 32);
      v22 = 1;
      while (1)
      {
        v23 = *v21++;
        v24 = v22 * v23;
        if ((unsigned __int128)(v22 * (__int128)v23) >> 64 != (v22 * v23) >> 63)
          goto LABEL_22;
        v22 = v24;
        if (!--v20)
          goto LABEL_11;
      }
    }
    v24 = 1;
LABEL_11:
    swift_bridgeObjectRelease();
    *((_QWORD *)v18 + 4) = v24;
  }
  else
  {
    v18 = &unk_25137BC40;
  }
  v25 = *(_QWORD *)(v16 + 16);
  if (!v25)
  {
LABEL_17:
    type metadata accessor for NativeTensorStorage();
    v47 = v16;
    v42(&v46, ObjectType, a3);
    v30 = v43;
    sub_242B1D8D0(&v47, (uint64_t)&v46, 0);
    v32 = v31;
    v33 = sub_242C47600();
    __swift_storeEnumTagSinglePayload((uint64_t)v44, 1, 1, v33);
    sub_242C4793C();
    v34 = sub_242C47930();
    v35 = __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v34);
    MEMORY[0x24BDAC7A8](v35);
    *(&v41 - 4) = a2;
    *(&v41 - 3) = a3;
    v36 = v45;
    *(&v41 - 2) = (uint64_t)v18;
    *(&v41 - 1) = v36;
    sub_242B5081C((uint64_t)v12, (void (*)(_BYTE *))sub_242B51A28);
    sub_242A6AB60((uint64_t)v12);
    swift_bridgeObjectRelease();
    if (v30)
      swift_release();
    return v32;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_242C4B7D0;
  v26 = (uint64_t *)(v16 + 32);
  v27 = 1;
  while (1)
  {
    v28 = *v26++;
    v29 = v27 * v28;
    if ((unsigned __int128)(v27 * (__int128)v28) >> 64 != (v27 * v28) >> 63)
      break;
    v27 = v29;
    if (!--v25)
    {
      *(_QWORD *)(result + 32) = v29;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_242B50FF8(uint64_t a1)
{
  sub_242B50A90(a1);
}

void sub_242B5100C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  char *v48;
  char *v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_9();
  v8 = v7 - v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_4_9();
  v10 = sub_242C47930();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v49 = (char *)&v41 - v15;
  v16 = sub_242B89308();
  sub_242A9E618(v16, a1);
  if (!v17)
  {
    sub_242A6A5B0();
    v25 = OUTLINED_FUNCTION_24_1();
    *v26 = xmmword_242C57A20;
    OUTLINED_FUNCTION_4_41(v25, (uint64_t)v26);
LABEL_20:
    OUTLINED_FUNCTION_0_9();
    return;
  }
  v19 = v17;
  v20 = v18;
  v44 = v11;
  v45 = v2;
  v46 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v21 = OUTLINED_FUNCTION_2_0();
  v47 = xmmword_242C4B7D0;
  *(_OWORD *)(v21 + 16) = xmmword_242C4B7D0;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 16))(&v53, ObjectType, v20);
  if (*(_QWORD *)(v53 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_10_34();
      if (!v24)
        break;
      if (v23 == 1)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_21;
  }
  v10 = 1;
LABEL_9:
  v41 = v8;
  v42 = v20;
  v48 = v13;
  v43 = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 32) = v10;
  sub_242C47600();
  OUTLINED_FUNCTION_1_53();
  OUTLINED_FUNCTION_6_49();
  v27 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v27 + 16) = v47;
  OUTLINED_FUNCTION_8_32();
  if (!*(_QWORD *)(v53 + 16))
  {
    v29 = v45;
    v28 = v46;
LABEL_16:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + 32) = 1;
    OUTLINED_FUNCTION_1_53();
    v31 = (uint64_t)v48;
    OUTLINED_FUNCTION_6_49();
    type metadata accessor for NativeTensorStorage();
    OUTLINED_FUNCTION_8_32();
    v54 = v53;
    sub_242B0560C((uint64_t)&v51);
    v32 = v52;
    swift_bridgeObjectRelease();
    v50 = v32;
    sub_242B1D8D0(&v54, (uint64_t)&v50, 0);
    v34 = v33;
    v35 = v29;
    v36 = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v41, v31, v28);
    v37 = __swift_storeEnumTagSinglePayload(v36, 0, 1, v28);
    MEMORY[0x24BDAC7A8](v37);
    v38 = v42;
    *(&v41 - 4) = v43;
    *(&v41 - 3) = v38;
    v39 = (uint64_t)v49;
    *(&v41 - 2) = (uint64_t)v49;
    *(&v41 - 1) = v3;
    sub_242B5081C(v36, (void (*)(_BYTE *))sub_242B51A5C);
    if (v35)
    {
      swift_release();
      sub_242A6AB60(v36);
      OUTLINED_FUNCTION_5_50((uint64_t)v48);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_242A6AB60(v36);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v40 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v40 + 16) = v47;
      *(_QWORD *)(v40 + 32) = v34;
      *(_QWORD *)(v40 + 40) = &off_251387678;
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_5_50((uint64_t)v48);
    }
    OUTLINED_FUNCTION_5_50(v39);
    goto LABEL_20;
  }
  v29 = v45;
  v28 = v46;
  while (1)
  {
    OUTLINED_FUNCTION_10_34();
    if (!v24)
      break;
    if (v30 == 1)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_242B513C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getObjectType();
  v11 = sub_242C47930();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a2, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
  v14 = a3;
  v15 = a1;
  sub_242BF6310((uint64_t)sub_242B51A78, (uint64_t)v13, MEMORY[0x24BEE4AE0] + 8, a4);
  return sub_242A6AB60((uint64_t)v10);
}

uint64_t sub_242B514E4()
{
  sub_242C477F8();
  return sub_242C47954();
}

void sub_242B51530(uint64_t a1)
{
  sub_242B5100C(a1);
}

uint64_t sub_242B51544(uint64_t a1)
{
  uint64_t result;

  result = sub_242A64CE0((unint64_t *)&qword_257224808, (uint64_t (*)(uint64_t))type metadata accessor for UnaryLogicalOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B51578(uint64_t a1)
{
  uint64_t result;

  result = sub_242A64CE0((unint64_t *)&qword_2572216C8, (uint64_t (*)(uint64_t))type metadata accessor for UnaryArithmeticOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B515AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getObjectType();
  v12 = sub_242C47600();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v12);
  sub_242C480E0();
  sub_242C4793C();
  v13 = sub_242C47930();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  v16 = a1;
  v17 = a2;
  sub_242BF6310((uint64_t)sub_242B51A44, (uint64_t)v15, MEMORY[0x24BEE4AE0] + 8, a3);
  return sub_242A6AB60((uint64_t)v11);
}

uint64_t sub_242B51718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v37 = a3;
  v33 = a1;
  v34 = a2;
  v3 = sub_242C477C8();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_242C47888();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_242C47714();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v30 - v15;
  v30[3] = sub_242C47858();
  v17 = *MEMORY[0x24BEDF680];
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v18(v16, v17, v10);
  v18(v13, v17, v10);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v30[1] = v6;
  v19(v9, v37, v6);
  sub_242C48A28();
  sub_242C489B0();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v5, *MEMORY[0x24BEDF7E0], v32);
  if (sub_242C4784C())
  {
    v20 = (void *)v30[2];
    sub_242C47840();
    if (v20)
    {
      v35 = 0;
      v36 = 0xE000000000000000;
      sub_242C48C38();
      sub_242C48314();
      sub_242C48E78();
      sub_242C48314();
      v21 = v35;
      v22 = v36;
      sub_242A6A5B0();
      swift_allocError();
      *(_QWORD *)v23 = v21;
      *(_QWORD *)(v23 + 8) = v22;
      *(_BYTE *)(v23 + 16) = 1;
      swift_willThrow();

    }
    return swift_release();
  }
  else
  {
    sub_242B52F40();
    v26 = v25;
    v28 = v27;
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v29 = v26;
    *(_QWORD *)(v29 + 8) = v28;
    *(_BYTE *)(v29 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_242B51A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242B515AC(a1, *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_242B51A44(uint64_t a1)
{
  uint64_t v1;

  return sub_242B51718(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_242B51A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242B513C8(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_242B51A78()
{
  return sub_242B514E4();
}

uint64_t OUTLINED_FUNCTION_1_53()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_4_45()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_50(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_6_49()
{
  return sub_242C4793C();
}

uint64_t OUTLINED_FUNCTION_8_32()
{
  uint64_t v0;

  return sub_242B0560C(v0 - 96);
}

void sub_242B51AEC(uint64_t a1@<X0>, _QWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_56();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    if (!a2)
      goto LABEL_5;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_242C480E0();
  if (a2)
    goto LABEL_7;
LABEL_5:
  v13 = *(_QWORD *)(OUTLINED_FUNCTION_40_19() + 16);
  swift_bridgeObjectRelease();
  if (v13)
  {
    a2 = (_QWORD *)OUTLINED_FUNCTION_40_19();
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  a2 = &unk_25137B500;
LABEL_8:
  if (a3 == 3)
  {
    OUTLINED_FUNCTION_136();
    v14 = OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_33_19((uint64_t)v12, v15, v16, v14);
    v17 = sub_242C47600();
    OUTLINED_FUNCTION_33_19(v4, v18, v19, v17);
    sub_242C4793C();
    sub_242A929A8((uint64_t)v12, &qword_2572216B8);
  }
  else
  {
    if (!a2[2])
      OUTLINED_FUNCTION_136();
    if (a3)
    {
      v20 = (_QWORD *)OUTLINED_FUNCTION_31_29();
      if (a3 == 1)
        sub_242B53640(v20, v21);
      else
        sub_242B538A4(v20, v21);
    }
    else
    {
      v22 = (_QWORD *)OUTLINED_FUNCTION_31_29();
      sub_242B53390(v22, v23);
    }
    OUTLINED_FUNCTION_136();
    v24 = OUTLINED_FUNCTION_14_1();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v24);
    OUTLINED_FUNCTION_3_6();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a4, v12, v24);
  }
}

uint64_t sub_242B51CD0(size_t a1, const void *a2, const void *a3, const void *a4, const void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  const void *v36;
  const void *v37;
  size_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  size_t v55;
  int64_t v56;
  const void *v57;
  const void *v58;
  uint64_t v59;
  __int128 v60;
  const void *v61;
  __int128 v62;
  void *v63;
  int v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  int v68;
  _DWORD *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  __int128 v74;
  uint64_t v75;
  _DWORD v76[45];
  _DWORD v77[46];
  _DWORD v78[46];
  _DWORD v79[48];
  uint64_t v80;
  uint64_t v81;
  int v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  _QWORD v97[24];

  v63 = a8;
  v59 = a6;
  *(_QWORD *)&v60 = a7;
  v55 = a1;
  v97[22] = *MEMORY[0x24BDAC8D0];
  v54 = OUTLINED_FUNCTION_14_1();
  v51 = *(_QWORD *)(v54 - 8);
  v15 = MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v52 = (char *)&v48 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v50 = (char *)&v48 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)&v48 - v21;
  v22 = sub_242C477C8();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_57_0();
  v61 = a2;
  OUTLINED_FUNCTION_13_38(v76, a2);
  v58 = a3;
  OUTLINED_FUNCTION_13_38(v97, a3);
  v57 = a4;
  OUTLINED_FUNCTION_13_38((char *)&v95 + 4, a4);
  v56 = (int64_t)a5;
  OUTLINED_FUNCTION_13_38(&v94, a5);
  v76[44] = 0;
  OUTLINED_FUNCTION_41_23(v77, &v96);
  v77[45] = 0;
  OUTLINED_FUNCTION_41_23(v78, &v95);
  v78[45] = 0;
  OUTLINED_FUNCTION_41_23(v79, &v93);
  v79[45] = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v9, *MEMORY[0x24BEDF7E0], v22);
  sub_242C477BC();
  LODWORD(a3) = v79[47];
  LODWORD(a5) = v82;
  v62 = v83;
  v24 = v84;
  v25 = v80;
  v26 = v81;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v22);
  v68 = 31;
  v69 = v76;
  v70 = (int)a3;
  v71 = v25;
  v72 = v26;
  v73 = (int)a5;
  v74 = v62;
  v75 = v24;
  if (v63 == (void *)1)
  {
    v27 = 0;
  }
  else
  {
    v64 = v59;
    v65 = v60;
    v66 = v63;
    v67 = a9;
    v27 = &v64;
  }
  v28 = (void *)MEMORY[0x2494ED0D4](&v68, v27);
  if (v28)
  {
    OUTLINED_FUNCTION_1_54((uint64_t)v61 + 136, (uint64_t)&v88);
    OUTLINED_FUNCTION_1_54((uint64_t)&v88, (uint64_t)&v89);
    v29 = v89;
    if (!v89)
      goto LABEL_11;
    OUTLINED_FUNCTION_1_54((uint64_t)v58 + 136, (uint64_t)&v87);
    OUTLINED_FUNCTION_1_54((uint64_t)&v87, (uint64_t)&v90);
    v30 = v90;
    if (!v90)
      goto LABEL_11;
    OUTLINED_FUNCTION_1_54((uint64_t)v57 + 136, (uint64_t)&v86);
    OUTLINED_FUNCTION_1_54((uint64_t)&v86, (uint64_t)&v91);
    v31 = v91;
    if (v91
      && (OUTLINED_FUNCTION_1_54(v56 + 136, (uint64_t)&v85), OUTLINED_FUNCTION_1_54((uint64_t)&v85, (uint64_t)&v92), v92))
    {
      v63 = v92;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220EB0);
      v32 = OUTLINED_FUNCTION_27_0();
      v60 = xmmword_242C4B810;
      *(_OWORD *)(v32 + 16) = xmmword_242C4B810;
      *(_QWORD *)(v32 + 32) = v29;
      *(_QWORD *)&v62 = v32 + 32;
      *(_QWORD *)(v32 + 40) = v30;
      *(_QWORD *)(v32 + 48) = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v33 = OUTLINED_FUNCTION_27_0();
      *(_OWORD *)(v33 + 16) = v60;
      v34 = v49;
      sub_242C489BC();
      v35 = sub_242C478F4();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v54);
      *(_QWORD *)(v33 + 32) = v35;
      v36 = v58;
      sub_242C489BC();
      OUTLINED_FUNCTION_43_21();
      OUTLINED_FUNCTION_10_35();
      *(_QWORD *)(v33 + 40) = v36;
      v37 = v57;
      sub_242C489BC();
      OUTLINED_FUNCTION_43_21();
      OUTLINED_FUNCTION_10_35();
      *(_QWORD *)(v33 + 48) = v37;
      v38 = v56;
      sub_242C489BC();
      OUTLINED_FUNCTION_43_21();
      OUTLINED_FUNCTION_10_35();
      LODWORD(v38) = BNNSArithmeticFilterApplyBatch(v28, v55, 3uLL, (const void **)v62, (const size_t *)(v33 + 32), v63, v38);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!(_DWORD)v38)
        return result;
      OUTLINED_FUNCTION_9_42();
      OUTLINED_FUNCTION_11_35();
      v40 = OUTLINED_FUNCTION_0_68();
      v42 = OUTLINED_FUNCTION_29_21(v40, v41);
      v43 = (unsigned int *)MEMORY[0x24BEDF9F8];
    }
    else
    {
LABEL_11:
      OUTLINED_FUNCTION_9_42();
      OUTLINED_FUNCTION_11_35();
      v44 = OUTLINED_FUNCTION_0_68();
      v42 = OUTLINED_FUNCTION_29_21(v44, v45);
      v43 = (unsigned int *)MEMORY[0x24BEDFA08];
    }
  }
  else
  {
    OUTLINED_FUNCTION_9_42();
    OUTLINED_FUNCTION_11_35();
    v46 = OUTLINED_FUNCTION_0_68();
    v42 = OUTLINED_FUNCTION_29_21(v46, v47);
    v43 = (unsigned int *)MEMORY[0x24BEDFA00];
  }
  OUTLINED_FUNCTION_2_57(v42, *v43);
  return OUTLINED_FUNCTION_36_21();
}

uint64_t sub_242B52184(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return sub_242C480E0();
  }
  __break(1u);
  return result;
}

void sub_242B521E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v2 = sub_242C47660();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_57_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v0, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v0, v2);
  if (v4 != *MEMORY[0x24BEDF5B8] && v4 != *MEMORY[0x24BEDF5B0] && v4 != *MEMORY[0x24BEDF5E0])
  {
    if (v4 == *MEMORY[0x24BEDF5D0])
    {
      OUTLINED_FUNCTION_39_19(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
      v5 = sub_242C47654();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0, v5);
    }
    else if (v4 != *MEMORY[0x24BEDF5A0]
           && v4 != *MEMORY[0x24BEDF5C8]
           && v4 != *MEMORY[0x24BEDF598]
           && v4 != *MEMORY[0x24BEDF5D8]
           && v4 != *MEMORY[0x24BEDF5A8]
           && v4 != *MEMORY[0x24BEDF5C0])
    {
      OUTLINED_FUNCTION_39_19(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
  }
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B52420(void *a1, int64_t a2, uint64_t a3, size_t a4, int a5, uint64_t a6, size_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  const void *v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  void *out;
  const void *v33;
  void *v34;
  int v35;
  int v36;
  size_t v37;
  int64_t v38;
  size_t v39;
  _BYTE v40[184];
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[184];
  uint64_t v44;
  char v45[8];
  char v46[8];
  char v47[8];
  char v48[8];
  const void *v49;
  const void *v50;
  void *v51;
  const void *v52;

  v35 = a5;
  v36 = a8;
  v37 = a7;
  v38 = a2;
  v39 = a4;
  v34 = a1;
  v14 = OUTLINED_FUNCTION_14_1();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_54(a3 + 136, (uint64_t)v48);
  OUTLINED_FUNCTION_1_54((uint64_t)v48, (uint64_t)&v49);
  v18 = v49;
  if (!v49
    || (OUTLINED_FUNCTION_1_54(a6 + 136, (uint64_t)v47), OUTLINED_FUNCTION_1_54((uint64_t)v47, (uint64_t)&v50), !v50)
    || (v33 = v50,
        OUTLINED_FUNCTION_1_54(a9 + 136, (uint64_t)v46),
        OUTLINED_FUNCTION_1_54((uint64_t)v46, (uint64_t)&v51),
        !v51))
  {
    v19 = (unsigned int *)MEMORY[0x24BEDFA08];
LABEL_7:
    OUTLINED_FUNCTION_9_42();
    OUTLINED_FUNCTION_11_35();
    v20 = OUTLINED_FUNCTION_0_68();
    v22 = OUTLINED_FUNCTION_29_21(v20, v21);
    OUTLINED_FUNCTION_2_57(v22, *v19);
    return OUTLINED_FUNCTION_36_21();
  }
  out = v51;
  v31 = a12;
  sub_242A929E0(a12, (uint64_t)v43, &qword_257222B50);
  if (sub_242B03F18((uint64_t)v43) == 1)
  {
    v30 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_13_38(&v44, v43);
    sub_242C489BC();
    v24 = sub_242C47900();
    v30 = *(_QWORD *)(v15 + 8);
    ((void (*)(char *, uint64_t))v30)(v17, v14);
    if (v24 == 1)
    {
      v30 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_46_16();
      sub_242B53E4C();
      v26 = v25;
      result = ((uint64_t (*)(char *, uint64_t))v30)(v17, v14);
      v30 = v38 * v26;
      if ((unsigned __int128)(v38 * (__int128)v26) >> 64 != (v38 * v26) >> 63)
      {
        __break(1u);
        return result;
      }
    }
  }
  v34 = (void *)sub_242C478E8();
  if ((v35 & 1) != 0)
  {
    OUTLINED_FUNCTION_46_16();
    v39 = sub_242C478F4();
    OUTLINED_FUNCTION_28_28();
  }
  v27 = v37;
  if ((v36 & 1) != 0)
  {
    sub_242C489BC();
    v27 = sub_242C478F4();
    OUTLINED_FUNCTION_28_28();
  }
  sub_242A929E0(v31, (uint64_t)v40, &qword_257222B50);
  if (sub_242B03F18((uint64_t)v40) == 1)
  {
    v28 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_13_38(&v41, v40);
    OUTLINED_FUNCTION_1_54((uint64_t)&v42, (uint64_t)v45);
    OUTLINED_FUNCTION_1_54((uint64_t)v45, (uint64_t)&v52);
    v28 = v52;
  }
  result = BNNSLossFilterApplyBatch(v34, v38, v18, v39, v33, v27, v28, v30, out, 0, 0);
  if ((_DWORD)result)
  {
    v19 = (unsigned int *)MEMORY[0x24BEDF9F8];
    goto LABEL_7;
  }
  return result;
}

void sub_242B526F4()
{
  __asm { BR              X10 }
}

uint64_t sub_242B52724()
{
  return sub_242C488B4();
}

uint64_t sub_242B52730()
{
  return 1048584;
}

uint64_t sub_242B52744()
{
  return sub_242C488D8();
}

uint64_t sub_242B52750()
{
  return sub_242C48908();
}

uint64_t sub_242B5275C()
{
  return sub_242C488CC();
}

uint64_t sub_242B52768()
{
  return sub_242C488C0();
}

uint64_t sub_242B52774()
{
  return sub_242C488F0();
}

uint64_t sub_242B52780()
{
  return sub_242C488FC();
}

uint64_t sub_242B5278C()
{
  return sub_242C488E4();
}

void sub_242B52798()
{
  OUTLINED_FUNCTION_19_27();
  __break(1u);
}

void sub_242B52844()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  sub_242C477B0();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_51(v1, v3);
  v2 = OUTLINED_FUNCTION_25_28();
  if (v2 != *MEMORY[0x24BEDF7A0]
    && v2 != *MEMORY[0x24BEDF740]
    && v2 != *MEMORY[0x24BEDF748]
    && v2 != *MEMORY[0x24BEDF780]
    && v2 != *MEMORY[0x24BEDF760]
    && v2 != *MEMORY[0x24BEDF788]
    && v2 != *MEMORY[0x24BEDF768]
    && v2 != *MEMORY[0x24BEDF758]
    && v2 != *MEMORY[0x24BEDF718]
    && v2 != *MEMORY[0x24BEDF750]
    && v2 != *MEMORY[0x24BEDF720]
    && v2 != *MEMORY[0x24BEDF728]
    && v2 != *MEMORY[0x24BEDF798]
    && v2 != *MEMORY[0x24BEDF738]
    && v2 != *MEMORY[0x24BEDF710]
    && v2 != *MEMORY[0x24BEDF730]
    && v2 != *MEMORY[0x24BEDF770]
    && v2 != *MEMORY[0x24BEDF790]
    && v2 != *MEMORY[0x24BEDF778])
  {
    OUTLINED_FUNCTION_21_28();
  }
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B52BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  if (v2 == 1)
    return *(_QWORD *)(a1 + 32);
  v4 = (uint64_t *)(a1 + 32);
  result = 1;
  while (1)
  {
    if (a2)
    {
      v5 = (unsigned __int128)(result * (__int128)*v4) >> 64;
      result *= *v4;
      if (v5 != result >> 63)
        break;
    }
    --a2;
    ++v4;
    if (!--v2)
      return result;
  }
  __break(1u);
  return result;
}

_QWORD *sub_242B52C18(void *__src, _QWORD *(*a2)(uint64_t *__return_ptr, _BYTE *))
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  _BYTE __dst[176];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  memcpy(__dst, __src, sizeof(__dst));
  result = a2(&v5, __dst);
  if (!v2)
    return (_QWORD *)(v5 | ((unint64_t)BYTE4(v5) << 32));
  return result;
}

uint64_t sub_242B52CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;
  int v5;

  v1 = sub_242C47894();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_57_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, v0, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
  if (v3 == *MEMORY[0x24BEDF990])
    return 6579297;
  v5 = v3;
  if (v3 == *MEMORY[0x24BEDF9C0])
    return 0x7463617274627573;
  result = 0x796C7069746C756DLL;
  if (v5 != *MEMORY[0x24BEDF9B8] && v5 != *MEMORY[0x24BEDF970])
  {
    if (v5 == *MEMORY[0x24BEDF9B0])
    {
      return 0x656469766964;
    }
    else if (v5 == *MEMORY[0x24BEDF968])
    {
      return 0x6F4E656469766964;
    }
    else if (v5 == *MEMORY[0x24BEDF9A8])
    {
      return 7827312;
    }
    else if (v5 == *MEMORY[0x24BEDF998])
    {
      return 7889261;
    }
    else if (v5 == *MEMORY[0x24BEDF9A0])
    {
      return 7235949;
    }
    else if (v5 == *MEMORY[0x24BEDF978])
    {
      return 0x676E69726F6F6C66;
    }
    else
    {
      result = 0xD000000000000010;
      if (v5 != *MEMORY[0x24BEDF980])
      {
        if (v5 == *MEMORY[0x24BEDF988])
        {
          return 0xD000000000000013;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
          return 0;
        }
      }
    }
  }
  return result;
}

void sub_242B52F40()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  sub_242C47888();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_51(v1, v3);
  v2 = OUTLINED_FUNCTION_25_28();
  if (v2 != *MEMORY[0x24BEDF890]
    && v2 != *MEMORY[0x24BEDF898]
    && v2 != *MEMORY[0x24BEDF940]
    && v2 != *MEMORY[0x24BEDF8F0]
    && v2 != *MEMORY[0x24BEDF948]
    && v2 != *MEMORY[0x24BEDF8C8]
    && v2 != *MEMORY[0x24BEDF8A8]
    && v2 != *MEMORY[0x24BEDF8D0]
    && v2 != *MEMORY[0x24BEDF8E0]
    && v2 != *MEMORY[0x24BEDF8D8]
    && v2 != *MEMORY[0x24BEDF8E8]
    && v2 != *MEMORY[0x24BEDF918]
    && v2 != *MEMORY[0x24BEDF8F8]
    && v2 != *MEMORY[0x24BEDF920]
    && v2 != *MEMORY[0x24BEDF930]
    && v2 != *MEMORY[0x24BEDF928]
    && v2 != *MEMORY[0x24BEDF938]
    && v2 != *MEMORY[0x24BEDF8B8]
    && v2 != *MEMORY[0x24BEDF900]
    && v2 != *MEMORY[0x24BEDF8C0]
    && v2 != *MEMORY[0x24BEDF908]
    && v2 != *MEMORY[0x24BEDF8A0]
    && v2 != *MEMORY[0x24BEDF910]
    && v2 != *MEMORY[0x24BEDF950]
    && v2 != *MEMORY[0x24BEDF888]
    && v2 != *MEMORY[0x24BEDF958]
    && v2 != *MEMORY[0x24BEDF8B0])
  {
    OUTLINED_FUNCTION_21_28();
  }
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B53390(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[2];
  unint64_t v17;
  unint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v16 - v8;
  if (a1[2])
  {
    sub_242C480E0();
    if (!a2)
      goto LABEL_6;
  }
  else
  {
    a1 = &unk_25137B3E8;
    if (!a2)
    {
LABEL_6:
      sub_242C480E0();
      v10 = a2;
      goto LABEL_8;
    }
  }
  if (a2[2])
    goto LABEL_6;
  v10 = &unk_25137B410;
LABEL_8:
  v11 = sub_242C47600();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v11);
  v12 = a1[2];
  if ((unint64_t)(v12 - 1) >= 8)
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    v15 = v12;
    sub_242C480E0();
    sub_242C48C38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = 0xD000000000000012;
    v18 = 0x8000000242C6D1D0;
    v16[1] = v15;
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    result = sub_242C48F5C();
    __break(1u);
  }
  else
  {
    v13 = (unsigned int *)*(&off_251388530 + v12 - 1);
    sub_242C480E0();
    sub_242A929A8((uint64_t)v9, &qword_257222B78);
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, *v13, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    sub_242B05F74((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_242C480E0();
    if (v10)
      sub_242B05F74((uint64_t)v10);
    sub_242A9297C((uint64_t)v9, (uint64_t)v7, &qword_257222B78);
    if (a2)
      sub_242C480E0();
    sub_242C4793C();
    swift_bridgeObjectRelease();
    sub_242A929A8((uint64_t)v9, &qword_257222B78);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242B53640(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[2];
  unint64_t v17;
  unint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v16 - v8;
  if (a1[2])
  {
    sub_242C480E0();
    if (!a2)
      goto LABEL_6;
  }
  else
  {
    a1 = &unk_25137B438;
    if (!a2)
    {
LABEL_6:
      sub_242C480E0();
      v10 = a2;
      goto LABEL_8;
    }
  }
  if (a2[2])
    goto LABEL_6;
  v10 = &unk_25137B460;
LABEL_8:
  v11 = sub_242C47600();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v11);
  v12 = a1[2];
  if ((unint64_t)(v12 - 1) >= 8)
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    v15 = v12;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v17 = 0xD000000000000012;
    v18 = 0x8000000242C6D1D0;
    v16[1] = v15;
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    result = sub_242C48F5C();
    __break(1u);
  }
  else
  {
    v13 = (unsigned int *)*(&off_251388570 + v12 - 1);
    sub_242A929A8((uint64_t)v9, &qword_257222B78);
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, *v13, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    if (v10)
      sub_242B05F74((uint64_t)v10);
    sub_242A9297C((uint64_t)v9, (uint64_t)v7, &qword_257222B78);
    if (a2)
      sub_242C480E0();
    sub_242C4793C();
    sub_242A929A8((uint64_t)v9, &qword_257222B78);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_242B538A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  if (a1[2])
  {
    sub_242C480E0();
    if (a2)
    {
LABEL_3:
      if (a2[2])
      {
        sub_242C480E0();
        v10 = a2;
      }
      else
      {
        v10 = (_QWORD *)&xmmword_25137B4A8 + 1;
      }
      sub_242C480E0();
      goto LABEL_9;
    }
  }
  else
  {
    a1 = &unk_25137B488;
    if (a2)
      goto LABEL_3;
  }
  v11 = a1[2];
  sub_242C480E0();
  sub_242BC0874(0, v11);
  v10 = v12;
LABEL_9:
  v13 = sub_242C47600();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v13);
  v14 = a1[2];
  switch(v14)
  {
    case 1:
      sub_242A929A8((uint64_t)v9, &qword_257222B78);
      swift_bridgeObjectRelease();
      v15 = (unsigned int *)MEMORY[0x24BEDF518];
      goto LABEL_19;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v14 = swift_allocObject();
      v26 = xmmword_242C4B7D0;
      *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
      v20 = a1[5];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 32) = v20;
      swift_bridgeObjectRelease();
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v26;
      if (v10[2] < 2uLL)
        goto LABEL_25;
      v19 = (_QWORD *)v21;
      *(_QWORD *)(v21 + 32) = v10[5];
      swift_bridgeObjectRelease();
      sub_242A929A8((uint64_t)v9, &qword_257222B78);
      v15 = (unsigned int *)MEMORY[0x24BEDF518];
      goto LABEL_18;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v14 = swift_allocObject();
      v26 = xmmword_242C4DE40;
      v16 = *((_OWORD *)a1 + 2);
      *(_OWORD *)(v14 + 16) = xmmword_242C4DE40;
      *(_OWORD *)(v14 + 32) = v16;
      *(_QWORD *)(v14 + 48) = 1;
      v17 = a1[6];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 56) = v17;
      swift_bridgeObjectRelease();
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = v26;
      if (!v10[2])
      {
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      v19 = (_QWORD *)v18;
      *(_QWORD *)(v18 + 32) = v10[4];
      if (v10[2] < 2uLL)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      *(_QWORD *)(v18 + 40) = v10[5];
      *(_QWORD *)(v18 + 48) = v10[5];
      if (v10[2] < 3uLL)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        v28 = 0;
        v29 = 0xE000000000000000;
        sub_242C48C38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = 0xD000000000000012;
        v29 = 0x8000000242C6D1D0;
        v27 = v14;
        sub_242C491CC();
        sub_242C48314();
        swift_bridgeObjectRelease();
        sub_242C48F5C();
        __break(1u);
        JUMPOUT(0x242B53D64);
      }
      *(_QWORD *)(v18 + 56) = v10[6];
      swift_bridgeObjectRelease();
      sub_242A929A8((uint64_t)v9, &qword_257222B78);
      v15 = (unsigned int *)MEMORY[0x24BEDF520];
LABEL_18:
      a1 = (_QWORD *)v14;
      v10 = v19;
LABEL_19:
      (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v9, *v15, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v13);
      if (a1[2] == 4)
      {
        sub_242B52184(1, (uint64_t)a1);
        sub_242A5B894();
        v23 = v22;
        swift_bridgeObjectRelease();
        sub_242B52184(1, (uint64_t)v10);
        sub_242A5B894();
        v25 = v24;
        swift_bridgeObjectRelease();
        a1 = v23;
        v10 = v25;
      }
      sub_242B05F74((uint64_t)a1);
      sub_242C480E0();
      sub_242B05F74((uint64_t)v10);
      sub_242A9297C((uint64_t)v9, (uint64_t)v7, &qword_257222B78);
      if (a2)
        sub_242C480E0();
      sub_242C4793C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242A929A8((uint64_t)v9, &qword_257222B78);
      return;
    case 4:
      sub_242A929A8((uint64_t)v9, &qword_257222B78);
      swift_bridgeObjectRelease();
      v15 = (unsigned int *)MEMORY[0x24BEDF520];
      goto LABEL_19;
    default:
      goto LABEL_28;
  }
}

void sub_242B53D74()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v0 = OUTLINED_FUNCTION_48_18();
  *(_OWORD *)(v0 + 16) = xmmword_242C575B0;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 40) = v3;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 48) = v4;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 56) = v5;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 64) = v6;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 72) = v7;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 80) = v8;
  OUTLINED_FUNCTION_8_33();
  *(_QWORD *)(v0 + 88) = v9;
  v1 = sub_242C47900();
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v1 <= 8)
  {
    sub_242A5B894();
    return;
  }
  __break(1u);
}

void sub_242B53E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_242B53D74();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + 32);
    v3 = 1;
    while (1)
    {
      v4 = *v2++;
      v5 = v3 * v4;
      if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
        break;
      v3 = v5;
      if (!--v1)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_0();
  }
}

unint64_t sub_242B53EA8()
{
  unint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = sub_242C47900();
  if ((result & 0x8000000000000000) == 0)
  {
    v1 = result;
    if (!result)
      return 1;
    v2 = 0;
    v3 = result - 1;
    while (v1 != v2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v4 = OUTLINED_FUNCTION_48_18();
      *(_OWORD *)(v4 + 16) = xmmword_242C575B0;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 32) = v12;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 40) = v13;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 48) = v14;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 56) = v15;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 64) = v16;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 72) = v17;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 80) = v18;
      OUTLINED_FUNCTION_6_50();
      *(_QWORD *)(v4 + 88) = v19;
      result = sub_242C47900();
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_22;
      v5 = result;
      if (*(_QWORD *)(v4 + 16) < result)
        goto LABEL_23;
      sub_242C4928C();
      swift_unknownObjectRetain_n();
      v6 = swift_dynamicCastClass();
      if (!v6)
      {
        OUTLINED_FUNCTION_3_6();
        v6 = MEMORY[0x24BEE4AF8];
      }
      v7 = *(_QWORD *)(v6 + 16);
      swift_release();
      if (v7 == v5)
      {
        v8 = swift_dynamicCastClass();
        if (!v8)
        {
          OUTLINED_FUNCTION_3_6();
          v8 = MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        OUTLINED_FUNCTION_3_6();
        sub_242C37664(v4, v4 + 32, 0, (2 * v5) | 1);
        v8 = v11;
      }
      result = OUTLINED_FUNCTION_3_6();
      if (v2 >= *(_QWORD *)(v8 + 16))
        goto LABEL_24;
      v9 = *(_QWORD *)(v8 + 8 * v2 + 32);
      swift_release();
      result = v9 < 1;
      if (v9 > 0 || v3 == v2++)
        return result;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_242B5408C(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  int v11;
  int v12;
  int v13;
  int v14;
  void (*v15)(char *, uint64_t);
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[22];
  _OWORD v30[11];
  uint64_t v31;

  v26 = a1;
  v27 = a3;
  v25 = a2;
  v28 = a4;
  v31 = *MEMORY[0x24BDAC8D0];
  v5 = OUTLINED_FUNCTION_14_1();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v9, a2, v5, v7);
  v24 = sub_242C47918();
  sub_242C4790C();
  v22 = v30[1];
  v23 = v30[0];
  v21 = v30[2];
  v19 = *((_QWORD *)&v30[3] + 1);
  v20 = *(_QWORD *)&v30[3];
  sub_242C47924();
  v17 = v30[1];
  v18 = v30[0];
  v16 = v30[2];
  v10 = v30[3];
  OUTLINED_FUNCTION_47_17();
  v12 = v11;
  OUTLINED_FUNCTION_47_17();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  LODWORD(v29[0]) = 0;
  HIDWORD(v29[0]) = v24;
  *(_OWORD *)&v29[1] = v23;
  *(_OWORD *)&v29[3] = v22;
  *(_OWORD *)&v29[5] = v21;
  v29[7] = v20;
  v29[8] = v19;
  *(_OWORD *)&v29[9] = v18;
  *(_OWORD *)&v29[11] = v17;
  *(_OWORD *)&v29[13] = v16;
  *(_OWORD *)&v29[15] = v10;
  v29[17] = v26;
  LODWORD(v29[18]) = v12;
  v29[19] = 0;
  LODWORD(v29[20]) = v14;
  *(_QWORD *)((char *)&v29[20] + 4) = 1065353216;
  sub_242B54294((uint64_t)&v29[9], (uint64_t)&v29[17], v27);
  OUTLINED_FUNCTION_136();
  v15(v25, v5);
  memcpy(v30, v29, sizeof(v30));
  sub_242AA3C00((uint64_t)v30);
  sub_242A929E0((uint64_t)v30, v28, &qword_257222B50);
}

uint64_t sub_242B54294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (*(_QWORD *)(a3 + 16) >> 60)
  {
    __break(1u);
  }
  else
  {
    sub_242AB8E8C();
    return sub_242C47A80();
  }
  return result;
}

void sub_242B54308(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  switch(a2)
  {
    case 0:
      v3 = v2 + 1;
      goto LABEL_10;
    case 1:
      v3 = v2 + 2;
      goto LABEL_10;
    case 2:
      v3 = v2 + 3;
      goto LABEL_10;
    case 3:
      v3 = v2 + 4;
      goto LABEL_10;
    case 4:
      v3 = v2 + 5;
      goto LABEL_10;
    case 5:
      v3 = v2 + 6;
      goto LABEL_10;
    case 6:
      v3 = v2 + 7;
      goto LABEL_10;
    case 7:
      v3 = v2 + 8;
LABEL_10:
      *v3 = a1;
      OUTLINED_FUNCTION_0_11();
      break;
    default:
      OUTLINED_FUNCTION_16_31();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15_31();
      sub_242C491CC();
      OUTLINED_FUNCTION_66_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_28();
      OUTLINED_FUNCTION_19_27();
      __break(1u);
      break;
  }
}

void sub_242B543F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  switch(a2)
  {
    case 0:
      v3 = v2 + 9;
      goto LABEL_10;
    case 1:
      v3 = v2 + 10;
      goto LABEL_10;
    case 2:
      v3 = v2 + 11;
      goto LABEL_10;
    case 3:
      v3 = v2 + 12;
      goto LABEL_10;
    case 4:
      v3 = v2 + 13;
      goto LABEL_10;
    case 5:
      v3 = v2 + 14;
      goto LABEL_10;
    case 6:
      v3 = v2 + 15;
      goto LABEL_10;
    case 7:
      v3 = v2 + 16;
LABEL_10:
      *v3 = a1;
      OUTLINED_FUNCTION_0_11();
      break;
    default:
      OUTLINED_FUNCTION_16_31();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15_31();
      sub_242C491CC();
      OUTLINED_FUNCTION_66_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_28();
      OUTLINED_FUNCTION_19_27();
      __break(1u);
      break;
  }
}

uint64_t sub_242B544D8(void *a1)
{
  uint64_t result;
  uint64_t v2;

  result = (uint64_t)OUTLINED_FUNCTION_34_22(a1, (_QWORD *(*)(uint64_t *__return_ptr, _BYTE *))sub_242B54DC8);
  if ((result & 0x1FFFFFFFFLL) != 0)
  {
    OUTLINED_FUNCTION_9_42();
    OUTLINED_FUNCTION_11_35();
    OUTLINED_FUNCTION_0_68();
    OUTLINED_FUNCTION_2_57(v2, *MEMORY[0x24BEDF9F8]);
    return swift_willThrow();
  }
  return result;
}

_QWORD *sub_242B54558@<X0>(void *__src@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  _QWORD *result;

  result = sub_242B52C18(__src, (_QWORD *(*)(uint64_t *__return_ptr, _BYTE *))sub_242B54DE4);
  *(_DWORD *)a2 = (_DWORD)result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

_QWORD *sub_242B545B8@<X0>(void *__src@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  _QWORD *result;

  result = sub_242B52C18(__src, (_QWORD *(*)(uint64_t *__return_ptr, _BYTE *))sub_242B54E00);
  *(_DWORD *)a2 = (_DWORD)result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_242B54618@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a6;
  v35 = a1;
  v36 = a8;
  v41 = *MEMORY[0x24BDAC8D0];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228448);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v33 - v20;
  if (a4 == 1)
  {
    sub_242A9297C(a7, (uint64_t)v18, &qword_257228448);
    v22 = sub_242C477B0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v22) == 1)
    {
      sub_242A929A8((uint64_t)v18, &qword_257228448);
      v23 = 15;
    }
    else
    {
      v23 = sub_242C477A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v18, v22);
    }
    v26 = v34;
    v27 = v35;
    v28 = v23;
    v29 = v36;
    v30 = a10;
    v31 = 0;
  }
  else
  {
    v37 = a2;
    v38 = a3;
    v39 = a4;
    v40 = a5;
    sub_242A9297C(a7, (uint64_t)&v33 - v20, &qword_257228448);
    v24 = sub_242C477B0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v24) == 1)
    {
      sub_242A929A8((uint64_t)v21, &qword_257228448);
      v25 = 15;
    }
    else
    {
      v25 = sub_242C477A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v21, v24);
    }
    v31 = &v37;
    v26 = v34;
    v27 = v35;
    v28 = v25;
    v29 = v36;
    v30 = a10;
  }
  result = MEMORY[0x2494ED134](v26, v28, v29, v30, v27, v31);
  *(_DWORD *)a9 = result;
  *(_BYTE *)(a9 + 4) = 0;
  return result;
}

uint64_t sub_242B54828(void *a1)
{
  uint64_t result;
  uint64_t v2;

  result = (uint64_t)OUTLINED_FUNCTION_34_22(a1, (_QWORD *(*)(uint64_t *__return_ptr, _BYTE *))sub_242B54E1C);
  if ((result & 0x1FFFFFFFFLL) != 0)
  {
    OUTLINED_FUNCTION_9_42();
    OUTLINED_FUNCTION_11_35();
    OUTLINED_FUNCTION_0_68();
    OUTLINED_FUNCTION_2_57(v2, *MEMORY[0x24BEDF9F8]);
    return swift_willThrow();
  }
  return result;
}

_QWORD *sub_242B548A4@<X0>(void *__src@<X1>, uint64_t a2@<X8>)
{
  _QWORD *result;

  result = sub_242B52C18(__src, (_QWORD *(*)(uint64_t *__return_ptr, _BYTE *))sub_242B54E38);
  *(_DWORD *)a2 = (_DWORD)result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

_QWORD *sub_242B54900@<X0>(void *__src@<X1>, uint64_t a2@<X8>)
{
  _QWORD *result;

  result = sub_242B52C18(__src, (_QWORD *(*)(uint64_t *__return_ptr, _BYTE *))sub_242B54E54);
  *(_DWORD *)a2 = (_DWORD)result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_242B5495C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a7;
  v34 = a8;
  v39 = *MEMORY[0x24BDAC8D0];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228448);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v32 - v20;
  if (a4 == 1)
  {
    sub_242A9297C(a6, (uint64_t)v18, &qword_257228448);
    v22 = sub_242C477B0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v22) == 1)
    {
      sub_242A929A8((uint64_t)v18, &qword_257228448);
      v23 = 15;
    }
    else
    {
      v23 = sub_242C477A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v18, v22);
    }
    v26 = v23;
    v27 = v33;
    v28 = v34;
    v29 = a1;
    v30 = 0;
  }
  else
  {
    v35 = a2;
    v36 = a3;
    v37 = a4;
    v38 = a5;
    sub_242A9297C(a6, (uint64_t)&v32 - v20, &qword_257228448);
    v24 = sub_242C477B0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v24) == 1)
    {
      sub_242A929A8((uint64_t)v21, &qword_257228448);
      v25 = 15;
    }
    else
    {
      v25 = sub_242C477A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v21, v24);
    }
    v30 = &v35;
    v26 = v25;
    v27 = v33;
    v28 = v34;
    v29 = a1;
  }
  result = MEMORY[0x2494ED140](v26, v27, v28, v29, v30);
  *(_DWORD *)a9 = result;
  *(_BYTE *)(a9 + 4) = 0;
  return result;
}

uint64_t sub_242B54B64(BNNSNDArrayDescriptor *a1, const BNNSNDArrayDescriptor *a2, uint64_t a3, size_t a4, const void *a5, size_t a6, char a7, uint64_t a8, uint64_t a9, const void *a10, size_t a11, char a12, uint64_t a13, uint64_t a14, size_t a15, char a16)
{
  uint64_t v19;
  size_t v20;
  size_t weights_size;
  const void *weights;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BNNSNDArrayDescriptor *v28;
  void *v29;
  BNNSNDArrayDescriptor *v30;
  _BYTE v35[184];
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  const void *v39;

  v19 = OUTLINED_FUNCTION_14_1();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_56();
  if (a2 && a1)
  {
    v30 = a1;
    v29 = (void *)sub_242C478E8();
    v20 = a6;
    if ((a7 & 1) != 0)
    {
      sub_242C489BC();
      v20 = OUTLINED_FUNCTION_24_29();
      OUTLINED_FUNCTION_32_25();
      sub_242C489BC();
      a6 = OUTLINED_FUNCTION_24_29();
      OUTLINED_FUNCTION_32_25();
    }
    if ((a12 & 1) != 0)
    {
      sub_242C489BC();
      a11 = OUTLINED_FUNCTION_24_29();
      OUTLINED_FUNCTION_26_30();
    }
    sub_242A929E0(a14, (uint64_t)v35, &qword_257222B50);
    if (sub_242B03F18((uint64_t)v35) == 1)
    {
      weights_size = 0;
      weights = 0;
    }
    else
    {
      OUTLINED_FUNCTION_13_38(&v36, v35);
      sub_242A929E0((uint64_t)&v37, (uint64_t)v38, &qword_257222B58);
      sub_242A929E0((uint64_t)v38, (uint64_t)&v39, &qword_257222B58);
      weights = v39;
      weights_size = 1;
    }
    v28 = v30;
    if ((a16 & 1) != 0)
    {
      sub_242C489BC();
      a15 = OUTLINED_FUNCTION_24_29();
      OUTLINED_FUNCTION_26_30();
      v28 = v30;
    }
    return BNNSLossFilterApplyBackwardBatch(v29, a4, a5, v20, v28, a6, a10, a11, weights, weights_size, a2, a15);
  }
  else
  {
    OUTLINED_FUNCTION_9_42();
    OUTLINED_FUNCTION_11_35();
    v24 = OUTLINED_FUNCTION_0_68();
    v26 = OUTLINED_FUNCTION_29_21(v24, v25);
    OUTLINED_FUNCTION_2_57(v26, *MEMORY[0x24BEDF9F8]);
    return OUTLINED_FUNCTION_36_21();
  }
}

unint64_t sub_242B54D88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257222B60;
  if (!qword_257222B60)
  {
    v1 = sub_242C478DC();
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEDFA18], v1);
    atomic_store(result, (unint64_t *)&qword_257222B60);
  }
  return result;
}

void sub_242B54DC8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_51();
  sub_242B54558(v0, v1, v2);
  OUTLINED_FUNCTION_1();
}

void sub_242B54DE4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_51();
  sub_242B545B8(v0, v1, v2);
  OUTLINED_FUNCTION_1();
}

void sub_242B54E00()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_5_51();
  sub_242B54618(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_1();
}

void sub_242B54E1C()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_46();
  sub_242B548A4(v0, v1);
  OUTLINED_FUNCTION_1();
}

void sub_242B54E38()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_46();
  sub_242B54900(v0, v1);
  OUTLINED_FUNCTION_1();
}

void sub_242B54E54()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_4_46();
  sub_242B5495C(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_1();
}

uint64_t OUTLINED_FUNCTION_0_68()
{
  return swift_allocError();
}

void OUTLINED_FUNCTION_1_54(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_242A929E0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_2_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_3_51@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t OUTLINED_FUNCTION_6_50()
{
  return sub_242C4790C();
}

uint64_t OUTLINED_FUNCTION_8_33()
{
  return sub_242C4790C();
}

uint64_t OUTLINED_FUNCTION_9_42()
{
  return sub_242C478DC();
}

uint64_t OUTLINED_FUNCTION_10_35()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

unint64_t OUTLINED_FUNCTION_11_35()
{
  return sub_242B54D88();
}

void *OUTLINED_FUNCTION_13_38(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_16_31()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_19_27()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_21_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_24_29()
{
  return sub_242C478F4();
}

uint64_t OUTLINED_FUNCTION_25_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_28_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_29_21(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_31_29()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_25()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_33_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

_QWORD *OUTLINED_FUNCTION_34_22(void *__src, _QWORD *(*a2)(uint64_t *__return_ptr, _BYTE *))
{
  return sub_242B52C18(__src, a2);
}

uint64_t OUTLINED_FUNCTION_36_21()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_39_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_40_19()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return sub_242C00DB8();
}

void *OUTLINED_FUNCTION_41_23(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB4uLL);
}

uint64_t OUTLINED_FUNCTION_43_21()
{
  return sub_242C478F4();
}

uint64_t OUTLINED_FUNCTION_46_16()
{
  return sub_242C489BC();
}

void OUTLINED_FUNCTION_47_17()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 344) = v1;
  sub_242B526F4();
}

uint64_t OUTLINED_FUNCTION_48_18()
{
  return swift_allocObject();
}

uint64_t storeEnumTagSinglePayload for MILOpset(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242B550C8 + 4 * byte_242C57A55[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242B550FC + 4 * byte_242C57A50[v4]))();
}

uint64_t sub_242B550FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B55104(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B5510CLL);
  return result;
}

uint64_t sub_242B55118(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B55120);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242B55124(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B5512C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MILOpset()
{
  return &type metadata for MILOpset;
}

unint64_t sub_242B5514C()
{
  unint64_t result;

  result = qword_257228450;
  if (!qword_257228450)
  {
    result = MEMORY[0x2494EDE24](&unk_242C57B74, &type metadata for MILOpset);
    atomic_store(result, (unint64_t *)&qword_257228450);
  }
  return result;
}

uint64_t sub_242B55188(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = 16;
  if ((a1 & 1) != 0)
    v3 = 24;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + v3))(a2, a3);
}

BOOL sub_242B551A8(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

void sub_242B551B8(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137D200;
}

BOOL sub_242B551C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B551A8(*a1, *a2);
}

BOOL sub_242B551D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B09278(*a1, *a2);
}

BOOL sub_242B551E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B092B8(*a1, *a2);
}

BOOL sub_242B551EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242B0914C(*a1, *a2);
}

unint64_t sub_242B551FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257228458;
  if (!qword_257228458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257228460);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257228458);
  }
  return result;
}

uint64_t sub_242B55244(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257221EB8, (uint64_t (*)(uint64_t))type metadata accessor for AdamOperation, (uint64_t)&unk_242C4B9C0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B55280(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510((unint64_t *)&qword_257226B38, (uint64_t (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation, (uint64_t)&unk_242C4B9C0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B552C0(uint64_t a1)
{
  return sub_242B552D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_242B552D0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_242B552E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242A8ABE4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_242B55330(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242A8ABE4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_242B552D0(v6, v7, v8);
  return a1;
}

uint64_t sub_242B55384(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_242B552D0(v4, v5, v6);
  return a1;
}

uint64_t sub_242B553C8(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242B55408(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for BackpropagationError()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242B55458(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 0:
      result = sub_242C480E0();
      break;
    case 3:
    case 4:
    case 5:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_242B55490(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return sub_242C480E0();
  return result;
}

uint64_t sub_242B554A4(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 108);
  if (v2 >= 0x16)
    v2 = *(_DWORD *)result + 22;
  switch(v2)
  {
    case 0u:
    case 1u:
      v4 = *(unsigned __int8 *)(result + 32);
      if (v4 != 255)
        result = sub_242B55710(*(_QWORD *)(result + 16), *(_QWORD *)(result + 24), v4);
      v5 = *(unsigned __int8 *)(v1 + 72);
      if (v5 != 255)
      {
        v6 = *(_QWORD *)(v1 + 56);
        v7 = *(_QWORD *)(v1 + 64);
        goto LABEL_40;
      }
      return result;
    case 2u:
    case 0x10u:
      result = swift_bridgeObjectRelease();
      v5 = *(unsigned __int8 *)(v1 + 24);
      if (v5 != 255)
      {
        v6 = *(_QWORD *)(v1 + 8);
        v7 = *(_QWORD *)(v1 + 16);
        goto LABEL_40;
      }
      return result;
    case 3u:
      v8 = *(unsigned __int8 *)(result + 32);
      if (v8 != 255)
        sub_242B55710(*(_QWORD *)(result + 16), *(_QWORD *)(result + 24), v8);
      return sub_242B55748(*(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
    case 4u:
    case 6u:
    case 0xDu:
      goto LABEL_36;
    case 5u:
      result = swift_bridgeObjectRelease();
LABEL_36:
      v16 = *(unsigned __int8 *)(v1 + 24);
      if (v16 != 255)
        result = sub_242B55710(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), v16);
      goto LABEL_38;
    case 7u:
      v9 = *(unsigned __int8 *)(result + 24);
      if (v9 != 255)
        sub_242B55710(*(_QWORD *)(result + 8), *(_QWORD *)(result + 16), v9);
      v10 = *(_QWORD *)(v1 + 32);
      v11 = *(_QWORD *)(v1 + 40);
      v12 = *(_BYTE *)(v1 + 48);
      return sub_242A8E358(v10, v11, v12);
    case 8u:
    case 9u:
    case 0xAu:
      swift_bridgeObjectRelease();
      v3 = *(unsigned __int8 *)(v1 + 24);
      if (v3 != 255)
        sub_242B55710(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), v3);
      result = swift_bridgeObjectRelease();
LABEL_38:
      v5 = *(unsigned __int8 *)(v1 + 56);
      if (v5 == 255)
        return result;
      v6 = *(_QWORD *)(v1 + 40);
      v7 = *(_QWORD *)(v1 + 48);
      goto LABEL_40;
    case 0xBu:
      swift_bridgeObjectRelease();
      v13 = *(unsigned __int8 *)(v1 + 24);
      if (v13 != 255)
        sub_242B55710(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), v13);
      sub_242A8E358(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
      goto LABEL_34;
    case 0xCu:
      __swift_destroy_boxed_opaque_existential_1(result);
      v14 = *(unsigned __int8 *)(v1 + 48);
      if (v14 != 255)
        sub_242B55710(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v14);
      result = __swift_destroy_boxed_opaque_existential_1(v1 + 56);
      v5 = *(unsigned __int8 *)(v1 + 104);
      if (v5 == 255)
        return result;
      v6 = *(_QWORD *)(v1 + 88);
      v7 = *(_QWORD *)(v1 + 96);
      goto LABEL_40;
    case 0xEu:
      v5 = *(unsigned __int8 *)(result + 32);
      if (v5 == 255)
        return result;
      v6 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(v1 + 24);
LABEL_40:
      result = sub_242B55710(v6, v7, v5);
      break;
    case 0xFu:
      v15 = *(unsigned __int8 *)(result + 32);
      if (v15 != 255)
        sub_242B55710(*(_QWORD *)(result + 16), *(_QWORD *)(result + 24), v15);
      v10 = *(_QWORD *)(v1 + 40);
      v11 = *(_QWORD *)(v1 + 48);
      v12 = *(_BYTE *)(v1 + 56);
      return sub_242A8E358(v10, v11, v12);
    case 0x11u:
      goto LABEL_34;
    case 0x12u:
      __swift_destroy_boxed_opaque_existential_1(result);
      if ((unint64_t)(*(_QWORD *)(v1 + 40) - 1) >= 2)
        swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v1 + 56);
      result = *(_QWORD *)(v1 + 96);
      goto LABEL_45;
    case 0x13u:
      __swift_destroy_boxed_opaque_existential_1(result);
      result = *(_QWORD *)(v1 + 40);
      goto LABEL_45;
    case 0x14u:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v1 + 16);
      result = *(_QWORD *)(v1 + 56);
LABEL_45:
      if ((unint64_t)(result - 1) >= 2)
        result = swift_unknownObjectRelease();
      break;
    case 0x15u:
      swift_bridgeObjectRelease();
LABEL_34:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_242B55710(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 0:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
    case 4:
    case 5:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_242B55748(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

_OWORD *sub_242B5575C(_OWORD *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  void (*v69)(_OWORD *, unsigned __int8 *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;

  v4 = __src[108];
  if (v4 >= 0x16)
    v4 = *(_DWORD *)__src + 22;
  switch(v4)
  {
    case 0u:
      *__dst = *(_OWORD *)__src;
      v5 = __src[32];
      if (v5 == 255)
      {
        __dst[1] = *((_OWORD *)__src + 1);
        *((_BYTE *)__dst + 32) = __src[32];
      }
      else
      {
        v6 = *((_QWORD *)__src + 2);
        v7 = *((_QWORD *)__src + 3);
        sub_242B55458(v6, v7, __src[32]);
        *((_QWORD *)__dst + 2) = v6;
        *((_QWORD *)__dst + 3) = v7;
        *((_BYTE *)__dst + 32) = v5;
      }
      *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
      v73 = __src[72];
      if (v73 == 255)
      {
        *(_OWORD *)((char *)__dst + 56) = *(_OWORD *)(__src + 56);
        *((_BYTE *)__dst + 72) = __src[72];
      }
      else
      {
        v75 = *((_QWORD *)__src + 7);
        v74 = *((_QWORD *)__src + 8);
        sub_242B55458(v75, v74, v73);
        *((_QWORD *)__dst + 7) = v75;
        *((_QWORD *)__dst + 8) = v74;
        *((_BYTE *)__dst + 72) = v73;
      }
      *((_BYTE *)__dst + 108) = 0;
      return __dst;
    case 1u:
      *__dst = *(_OWORD *)__src;
      v8 = __src[32];
      if (v8 == 255)
      {
        __dst[1] = *((_OWORD *)__src + 1);
        *((_BYTE *)__dst + 32) = __src[32];
      }
      else
      {
        v9 = *((_QWORD *)__src + 2);
        v10 = *((_QWORD *)__src + 3);
        sub_242B55458(v9, v10, __src[32]);
        *((_QWORD *)__dst + 2) = v9;
        *((_QWORD *)__dst + 3) = v10;
        *((_BYTE *)__dst + 32) = v8;
      }
      *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
      v76 = __src[72];
      if (v76 == 255)
      {
        *(_OWORD *)((char *)__dst + 56) = *(_OWORD *)(__src + 56);
        *((_BYTE *)__dst + 72) = __src[72];
      }
      else
      {
        v78 = *((_QWORD *)__src + 7);
        v77 = *((_QWORD *)__src + 8);
        sub_242B55458(v78, v77, v76);
        *((_QWORD *)__dst + 7) = v78;
        *((_QWORD *)__dst + 8) = v77;
        *((_BYTE *)__dst + 72) = v76;
      }
      v63 = 1;
      goto LABEL_118;
    case 2u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v11 = __src[24];
      sub_242C480E0();
      if (v11 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v13 = *((_QWORD *)__src + 1);
        v12 = *((_QWORD *)__src + 2);
        sub_242B55458(v13, v12, v11);
        *((_QWORD *)__dst + 1) = v13;
        *((_QWORD *)__dst + 2) = v12;
        *((_BYTE *)__dst + 24) = v11;
      }
      v63 = 2;
      goto LABEL_118;
    case 3u:
      *__dst = *(_OWORD *)__src;
      v14 = __src[32];
      if (v14 == 255)
      {
        __dst[1] = *((_OWORD *)__src + 1);
        *((_BYTE *)__dst + 32) = __src[32];
      }
      else
      {
        v15 = *((_QWORD *)__src + 2);
        v16 = *((_QWORD *)__src + 3);
        sub_242B55458(v15, v16, __src[32]);
        *((_QWORD *)__dst + 2) = v15;
        *((_QWORD *)__dst + 3) = v16;
        *((_BYTE *)__dst + 32) = v14;
      }
      v79 = *((_QWORD *)__src + 5);
      v80 = __src[48];
      sub_242B55490(v79, v80);
      *((_QWORD *)__dst + 5) = v79;
      *((_BYTE *)__dst + 48) = v80;
      v63 = 3;
      goto LABEL_118;
    case 4u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v17 = __src[24];
      if (v17 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v18 = *((_QWORD *)__src + 1);
        v19 = *((_QWORD *)__src + 2);
        sub_242B55458(v18, v19, __src[24]);
        *((_QWORD *)__dst + 1) = v18;
        *((_QWORD *)__dst + 2) = v19;
        *((_BYTE *)__dst + 24) = v17;
      }
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      v81 = __src[56];
      if (v81 == 255)
      {
        *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
        *((_BYTE *)__dst + 56) = __src[56];
      }
      else
      {
        v83 = *((_QWORD *)__src + 5);
        v82 = *((_QWORD *)__src + 6);
        sub_242B55458(v83, v82, v81);
        *((_QWORD *)__dst + 5) = v83;
        *((_QWORD *)__dst + 6) = v82;
        *((_BYTE *)__dst + 56) = v81;
      }
      v63 = 4;
      goto LABEL_118;
    case 5u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v20 = __src[24];
      sub_242C480E0();
      if (v20 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v21 = *((_QWORD *)__src + 1);
        v22 = *((_QWORD *)__src + 2);
        sub_242B55458(v21, v22, v20);
        *((_QWORD *)__dst + 1) = v21;
        *((_QWORD *)__dst + 2) = v22;
        *((_BYTE *)__dst + 24) = v20;
      }
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      v84 = __src[56];
      if (v84 == 255)
      {
        *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
        *((_BYTE *)__dst + 56) = __src[56];
      }
      else
      {
        v86 = *((_QWORD *)__src + 5);
        v85 = *((_QWORD *)__src + 6);
        sub_242B55458(v86, v85, v84);
        *((_QWORD *)__dst + 5) = v86;
        *((_QWORD *)__dst + 6) = v85;
        *((_BYTE *)__dst + 56) = v84;
      }
      v63 = 5;
      goto LABEL_118;
    case 6u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v23 = __src[24];
      if (v23 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v24 = *((_QWORD *)__src + 1);
        v25 = *((_QWORD *)__src + 2);
        sub_242B55458(v24, v25, __src[24]);
        *((_QWORD *)__dst + 1) = v24;
        *((_QWORD *)__dst + 2) = v25;
        *((_BYTE *)__dst + 24) = v23;
      }
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      v87 = __src[56];
      if (v87 == 255)
      {
        *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
        *((_BYTE *)__dst + 56) = __src[56];
      }
      else
      {
        v89 = *((_QWORD *)__src + 5);
        v88 = *((_QWORD *)__src + 6);
        sub_242B55458(v89, v88, v87);
        *((_QWORD *)__dst + 5) = v89;
        *((_QWORD *)__dst + 6) = v88;
        *((_BYTE *)__dst + 56) = v87;
      }
      v63 = 6;
      goto LABEL_118;
    case 7u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v26 = __src[24];
      if (v26 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v27 = *((_QWORD *)__src + 1);
        v28 = *((_QWORD *)__src + 2);
        sub_242B55458(v27, v28, __src[24]);
        *((_QWORD *)__dst + 1) = v27;
        *((_QWORD *)__dst + 2) = v28;
        *((_BYTE *)__dst + 24) = v26;
      }
      v90 = *((_QWORD *)__src + 4);
      v91 = *((_QWORD *)__src + 5);
      v92 = __src[48];
      sub_242A8E344(v90, v91, v92);
      *((_QWORD *)__dst + 4) = v90;
      *((_QWORD *)__dst + 5) = v91;
      *((_BYTE *)__dst + 48) = v92;
      v63 = 7;
      goto LABEL_118;
    case 8u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v29 = __src[24];
      sub_242C480E0();
      if (v29 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v30 = *((_QWORD *)__src + 1);
        v31 = *((_QWORD *)__src + 2);
        sub_242B55458(v30, v31, v29);
        *((_QWORD *)__dst + 1) = v30;
        *((_QWORD *)__dst + 2) = v31;
        *((_BYTE *)__dst + 24) = v29;
      }
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      v93 = __src[56];
      sub_242C480E0();
      if (v93 == 255)
      {
        *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
        *((_BYTE *)__dst + 56) = __src[56];
      }
      else
      {
        v95 = *((_QWORD *)__src + 5);
        v94 = *((_QWORD *)__src + 6);
        sub_242B55458(v95, v94, v93);
        *((_QWORD *)__dst + 5) = v95;
        *((_QWORD *)__dst + 6) = v94;
        *((_BYTE *)__dst + 56) = v93;
      }
      v63 = 8;
      goto LABEL_118;
    case 9u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v32 = __src[24];
      sub_242C480E0();
      if (v32 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v33 = *((_QWORD *)__src + 1);
        v34 = *((_QWORD *)__src + 2);
        sub_242B55458(v33, v34, v32);
        *((_QWORD *)__dst + 1) = v33;
        *((_QWORD *)__dst + 2) = v34;
        *((_BYTE *)__dst + 24) = v32;
      }
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      v96 = __src[56];
      sub_242C480E0();
      if (v96 == 255)
      {
        *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
        *((_BYTE *)__dst + 56) = __src[56];
      }
      else
      {
        v98 = *((_QWORD *)__src + 5);
        v97 = *((_QWORD *)__src + 6);
        sub_242B55458(v98, v97, v96);
        *((_QWORD *)__dst + 5) = v98;
        *((_QWORD *)__dst + 6) = v97;
        *((_BYTE *)__dst + 56) = v96;
      }
      v63 = 9;
      goto LABEL_118;
    case 0xAu:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v35 = __src[24];
      sub_242C480E0();
      if (v35 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v36 = *((_QWORD *)__src + 1);
        v37 = *((_QWORD *)__src + 2);
        sub_242B55458(v36, v37, v35);
        *((_QWORD *)__dst + 1) = v36;
        *((_QWORD *)__dst + 2) = v37;
        *((_BYTE *)__dst + 24) = v35;
      }
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      v99 = __src[56];
      sub_242C480E0();
      if (v99 == 255)
      {
        *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
        *((_BYTE *)__dst + 56) = __src[56];
      }
      else
      {
        v101 = *((_QWORD *)__src + 5);
        v100 = *((_QWORD *)__src + 6);
        sub_242B55458(v101, v100, v99);
        *((_QWORD *)__dst + 5) = v101;
        *((_QWORD *)__dst + 6) = v100;
        *((_BYTE *)__dst + 56) = v99;
      }
      v63 = 10;
      goto LABEL_118;
    case 0xBu:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v38 = __src[24];
      sub_242C480E0();
      if (v38 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v39 = *((_QWORD *)__src + 1);
        v40 = *((_QWORD *)__src + 2);
        sub_242B55458(v39, v40, v38);
        *((_QWORD *)__dst + 1) = v39;
        *((_QWORD *)__dst + 2) = v40;
        *((_BYTE *)__dst + 24) = v38;
      }
      v102 = *((_QWORD *)__src + 4);
      v103 = *((_QWORD *)__src + 5);
      v104 = __src[48];
      sub_242A8E344(v102, v103, v104);
      *((_QWORD *)__dst + 4) = v102;
      *((_QWORD *)__dst + 5) = v103;
      *((_BYTE *)__dst + 48) = v104;
      *((_QWORD *)__dst + 7) = *((_QWORD *)__src + 7);
      v58 = 11;
      goto LABEL_84;
    case 0xCu:
      v41 = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 3) = v41;
      (**(void (***)(_OWORD *, unsigned __int8 *))(v41 - 8))(__dst, __src);
      v42 = __src[48];
      if (v42 == 255)
      {
        __dst[2] = *((_OWORD *)__src + 2);
        *((_BYTE *)__dst + 48) = __src[48];
      }
      else
      {
        v43 = *((_QWORD *)__src + 4);
        v44 = *((_QWORD *)__src + 5);
        sub_242B55458(v43, v44, __src[48]);
        *((_QWORD *)__dst + 4) = v43;
        *((_QWORD *)__dst + 5) = v44;
        *((_BYTE *)__dst + 48) = v42;
      }
      v105 = *((_QWORD *)__src + 10);
      *((_QWORD *)__dst + 10) = v105;
      (**(void (***)(char *, char *))(v105 - 8))((char *)__dst + 56, (char *)__src + 56);
      v106 = __src[104];
      if (v106 == 255)
      {
        *(_OWORD *)((char *)__dst + 88) = *(_OWORD *)(__src + 88);
        *((_BYTE *)__dst + 104) = __src[104];
      }
      else
      {
        v108 = *((_QWORD *)__src + 11);
        v107 = *((_QWORD *)__src + 12);
        sub_242B55458(v108, v107, v106);
        *((_QWORD *)__dst + 11) = v108;
        *((_QWORD *)__dst + 12) = v107;
        *((_BYTE *)__dst + 104) = v106;
      }
      v63 = 12;
      goto LABEL_118;
    case 0xDu:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v45 = __src[24];
      if (v45 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v46 = *((_QWORD *)__src + 1);
        v47 = *((_QWORD *)__src + 2);
        sub_242B55458(v46, v47, __src[24]);
        *((_QWORD *)__dst + 1) = v46;
        *((_QWORD *)__dst + 2) = v47;
        *((_BYTE *)__dst + 24) = v45;
      }
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      v109 = __src[56];
      if (v109 == 255)
      {
        *(_OWORD *)((char *)__dst + 40) = *(_OWORD *)(__src + 40);
        *((_BYTE *)__dst + 56) = __src[56];
      }
      else
      {
        v111 = *((_QWORD *)__src + 5);
        v110 = *((_QWORD *)__src + 6);
        sub_242B55458(v111, v110, v109);
        *((_QWORD *)__dst + 5) = v111;
        *((_QWORD *)__dst + 6) = v110;
        *((_BYTE *)__dst + 56) = v109;
      }
      v63 = 13;
      goto LABEL_118;
    case 0xEu:
      *__dst = *(_OWORD *)__src;
      v48 = __src[32];
      if (v48 == 255)
      {
        __dst[1] = *((_OWORD *)__src + 1);
        *((_BYTE *)__dst + 32) = __src[32];
      }
      else
      {
        v50 = *((_QWORD *)__src + 2);
        v49 = *((_QWORD *)__src + 3);
        sub_242B55458(v50, v49, v48);
        *((_QWORD *)__dst + 2) = v50;
        *((_QWORD *)__dst + 3) = v49;
        *((_BYTE *)__dst + 32) = v48;
      }
      v63 = 14;
      goto LABEL_118;
    case 0xFu:
      *__dst = *(_OWORD *)__src;
      v51 = __src[32];
      if (v51 == 255)
      {
        __dst[1] = *((_OWORD *)__src + 1);
        *((_BYTE *)__dst + 32) = __src[32];
      }
      else
      {
        v52 = *((_QWORD *)__src + 2);
        v53 = *((_QWORD *)__src + 3);
        sub_242B55458(v52, v53, __src[32]);
        *((_QWORD *)__dst + 2) = v52;
        *((_QWORD *)__dst + 3) = v53;
        *((_BYTE *)__dst + 32) = v51;
      }
      v112 = *((_QWORD *)__src + 5);
      v113 = *((_QWORD *)__src + 6);
      v114 = __src[56];
      sub_242A8E344(v112, v113, v114);
      *((_QWORD *)__dst + 5) = v112;
      *((_QWORD *)__dst + 6) = v113;
      *((_BYTE *)__dst + 56) = v114;
      v63 = 15;
      goto LABEL_118;
    case 0x10u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v54 = __src[24];
      sub_242C480E0();
      if (v54 == 255)
      {
        *(_OWORD *)((char *)__dst + 8) = *(_OWORD *)(__src + 8);
        *((_BYTE *)__dst + 24) = __src[24];
      }
      else
      {
        v56 = *((_QWORD *)__src + 1);
        v55 = *((_QWORD *)__src + 2);
        sub_242B55458(v56, v55, v54);
        *((_QWORD *)__dst + 1) = v56;
        *((_QWORD *)__dst + 2) = v55;
        *((_BYTE *)__dst + 24) = v54;
      }
      v63 = 16;
      goto LABEL_118;
    case 0x11u:
      v57 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v57;
      v58 = 17;
LABEL_84:
      *((_BYTE *)__dst + 108) = v58;
      goto LABEL_85;
    case 0x12u:
      v59 = *(_OWORD *)(__src + 24);
      *(_OWORD *)((char *)__dst + 24) = v59;
      (**(void (***)(_OWORD *, unsigned __int8 *))(v59 - 8))(__dst, __src);
      v60 = *((_QWORD *)__src + 5);
      if ((unint64_t)(v60 - 1) >= 2)
        v60 = swift_unknownObjectRetain();
      *((_QWORD *)__dst + 5) = v60;
      *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
      v61 = *((_OWORD *)__src + 5);
      __dst[5] = v61;
      (**(void (***)(char *, char *))(v61 - 8))((char *)__dst + 56, (char *)__src + 56);
      v62 = *((_QWORD *)__src + 12);
      if ((unint64_t)(v62 - 1) >= 2)
        v62 = swift_unknownObjectRetain();
      *((_QWORD *)__dst + 12) = v62;
      *((_DWORD *)__dst + 26) = *((_DWORD *)__src + 26);
      v63 = 18;
      goto LABEL_118;
    case 0x13u:
      v64 = *(_OWORD *)(__src + 24);
      *(_OWORD *)((char *)__dst + 24) = v64;
      (**(void (***)(_OWORD *, unsigned __int8 *))(v64 - 8))(__dst, __src);
      v65 = *((_QWORD *)__src + 5);
      if ((unint64_t)(v65 - 1) >= 2)
        v65 = swift_unknownObjectRetain();
      *((_QWORD *)__dst + 5) = v65;
      *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
      v63 = 19;
      goto LABEL_118;
    case 0x14u:
      v66 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v66;
      v67 = *(_OWORD *)(__src + 40);
      *(_OWORD *)((char *)__dst + 40) = v67;
      v68 = v67;
      v69 = **(void (***)(_OWORD *, unsigned __int8 *, uint64_t))(v67 - 8);
      sub_242C480E0();
      v69(__dst + 1, __src + 16, v68);
      v70 = *((_QWORD *)__src + 7);
      if ((unint64_t)(v70 - 1) >= 2)
        v70 = swift_unknownObjectRetain();
      *((_QWORD *)__dst + 7) = v70;
      *((_DWORD *)__dst + 16) = *((_DWORD *)__src + 16);
      v63 = 20;
LABEL_118:
      *((_BYTE *)__dst + 108) = v63;
      break;
    case 0x15u:
      v71 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v71;
      v72 = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 3) = v72;
      *((_BYTE *)__dst + 108) = 21;
      sub_242C480E0();
LABEL_85:
      sub_242C480E0();
      break;
    default:
      memcpy(__dst, __src, 0x6DuLL);
      break;
  }
  return __dst;
}

unsigned __int8 *sub_242B562A8(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(unsigned __int8 *, unsigned __int8 *, uint64_t);
  uint64_t v83;
  __int128 v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  char v95;
  __int128 v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  __int128 v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  __int128 v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;

  if (__dst != __src)
  {
    v4 = __dst[108];
    if (v4 >= 0x16)
      v4 = *(_DWORD *)__dst + 22;
    switch(v4)
    {
      case 0u:
      case 1u:
        v6 = __dst[32];
        if (v6 != 255)
          sub_242B55710(*((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), v6);
        v7 = __dst[72];
        if (v7 != 255)
        {
          v8 = *((_QWORD *)__dst + 7);
          v9 = *((_QWORD *)__dst + 8);
          goto LABEL_22;
        }
        break;
      case 2u:
      case 0x10u:
        swift_bridgeObjectRelease();
        v7 = __dst[24];
        if (v7 != 255)
        {
          v8 = *((_QWORD *)__dst + 1);
          v9 = *((_QWORD *)__dst + 2);
          goto LABEL_22;
        }
        break;
      case 3u:
        v10 = __dst[32];
        if (v10 != 255)
          sub_242B55710(*((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), v10);
        sub_242B55748(*((_QWORD *)__dst + 5), __dst[48]);
        break;
      case 4u:
      case 6u:
      case 0xDu:
        goto LABEL_18;
      case 5u:
        swift_bridgeObjectRelease();
LABEL_18:
        v11 = __dst[24];
        if (v11 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v11);
        goto LABEL_20;
      case 7u:
        v12 = __dst[24];
        if (v12 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v12);
        v13 = *((_QWORD *)__dst + 4);
        v14 = *((_QWORD *)__dst + 5);
        v15 = __dst[48];
        goto LABEL_38;
      case 8u:
      case 9u:
      case 0xAu:
        swift_bridgeObjectRelease();
        v5 = __dst[24];
        if (v5 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v5);
        swift_bridgeObjectRelease();
LABEL_20:
        v7 = __dst[56];
        if (v7 == 255)
          break;
        v8 = *((_QWORD *)__dst + 5);
        v9 = *((_QWORD *)__dst + 6);
        goto LABEL_22;
      case 0xBu:
        swift_bridgeObjectRelease();
        v16 = __dst[24];
        if (v16 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v16);
        sub_242A8E358(*((_QWORD *)__dst + 4), *((_QWORD *)__dst + 5), __dst[48]);
        goto LABEL_47;
      case 0xCu:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        v17 = __dst[48];
        if (v17 != 255)
          sub_242B55710(*((_QWORD *)__dst + 4), *((_QWORD *)__dst + 5), v17);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 56));
        v7 = __dst[104];
        if (v7 == 255)
          break;
        v8 = *((_QWORD *)__dst + 11);
        v9 = *((_QWORD *)__dst + 12);
        goto LABEL_22;
      case 0xEu:
        v7 = __dst[32];
        if (v7 == 255)
          break;
        v8 = *((_QWORD *)__dst + 2);
        v9 = *((_QWORD *)__dst + 3);
LABEL_22:
        sub_242B55710(v8, v9, v7);
        break;
      case 0xFu:
        v18 = __dst[32];
        if (v18 != 255)
          sub_242B55710(*((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), v18);
        v13 = *((_QWORD *)__dst + 5);
        v14 = *((_QWORD *)__dst + 6);
        v15 = __dst[56];
LABEL_38:
        sub_242A8E358(v13, v14, v15);
        break;
      case 0x11u:
        goto LABEL_47;
      case 0x12u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        if ((unint64_t)(*((_QWORD *)__dst + 5) - 1) >= 2)
          swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 56));
        v19 = *((_QWORD *)__dst + 12);
        goto LABEL_44;
      case 0x13u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        v19 = *((_QWORD *)__dst + 5);
        goto LABEL_44;
      case 0x14u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
        v19 = *((_QWORD *)__dst + 7);
LABEL_44:
        if ((unint64_t)(v19 - 1) >= 2)
          swift_unknownObjectRelease();
        break;
      case 0x15u:
        swift_bridgeObjectRelease();
LABEL_47:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v20 = __src[108];
    if (v20 >= 0x16)
      v20 = *(_DWORD *)__src + 22;
    switch(v20)
    {
      case 0u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        v21 = __src[32];
        if (v21 == 255)
        {
          v84 = *((_OWORD *)__src + 1);
          __dst[32] = __src[32];
          *((_OWORD *)__dst + 1) = v84;
        }
        else
        {
          v22 = *((_QWORD *)__src + 2);
          v23 = *((_QWORD *)__src + 3);
          sub_242B55458(v22, v23, __src[32]);
          *((_QWORD *)__dst + 2) = v22;
          *((_QWORD *)__dst + 3) = v23;
          __dst[32] = v21;
        }
        *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
        v85 = __src[72];
        if (v85 == 255)
        {
          v143 = *(_OWORD *)(__src + 56);
          __dst[72] = __src[72];
          *(_OWORD *)(__dst + 56) = v143;
        }
        else
        {
          v87 = *((_QWORD *)__src + 7);
          v86 = *((_QWORD *)__src + 8);
          sub_242B55458(v87, v86, v85);
          *((_QWORD *)__dst + 7) = v87;
          *((_QWORD *)__dst + 8) = v86;
          __dst[72] = v85;
        }
        __dst[108] = 0;
        return __dst;
      case 1u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        v24 = __src[32];
        if (v24 == 255)
        {
          v88 = *((_OWORD *)__src + 1);
          __dst[32] = __src[32];
          *((_OWORD *)__dst + 1) = v88;
        }
        else
        {
          v25 = *((_QWORD *)__src + 2);
          v26 = *((_QWORD *)__src + 3);
          sub_242B55458(v25, v26, __src[32]);
          *((_QWORD *)__dst + 2) = v25;
          *((_QWORD *)__dst + 3) = v26;
          __dst[32] = v24;
        }
        *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
        v89 = __src[72];
        if (v89 == 255)
        {
          v144 = *(_OWORD *)(__src + 56);
          __dst[72] = __src[72];
          *(_OWORD *)(__dst + 56) = v144;
        }
        else
        {
          v91 = *((_QWORD *)__src + 7);
          v90 = *((_QWORD *)__src + 8);
          sub_242B55458(v91, v90, v89);
          *((_QWORD *)__dst + 7) = v91;
          *((_QWORD *)__dst + 8) = v90;
          __dst[72] = v89;
        }
        v78 = 1;
        goto LABEL_165;
      case 2u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v27 = __src[24];
        sub_242C480E0();
        if (v27 == 255)
        {
          v92 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v92;
        }
        else
        {
          v29 = *((_QWORD *)__src + 1);
          v28 = *((_QWORD *)__src + 2);
          sub_242B55458(v29, v28, v27);
          *((_QWORD *)__dst + 1) = v29;
          *((_QWORD *)__dst + 2) = v28;
          __dst[24] = v27;
        }
        v78 = 2;
        goto LABEL_165;
      case 3u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        v30 = __src[32];
        if (v30 == 255)
        {
          v93 = *((_OWORD *)__src + 1);
          __dst[32] = __src[32];
          *((_OWORD *)__dst + 1) = v93;
        }
        else
        {
          v31 = *((_QWORD *)__src + 2);
          v32 = *((_QWORD *)__src + 3);
          sub_242B55458(v31, v32, __src[32]);
          *((_QWORD *)__dst + 2) = v31;
          *((_QWORD *)__dst + 3) = v32;
          __dst[32] = v30;
        }
        v94 = *((_QWORD *)__src + 5);
        v95 = __src[48];
        sub_242B55490(v94, v95);
        *((_QWORD *)__dst + 5) = v94;
        __dst[48] = v95;
        v78 = 3;
        goto LABEL_165;
      case 4u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v33 = __src[24];
        if (v33 == 255)
        {
          v96 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v96;
        }
        else
        {
          v34 = *((_QWORD *)__src + 1);
          v35 = *((_QWORD *)__src + 2);
          sub_242B55458(v34, v35, __src[24]);
          *((_QWORD *)__dst + 1) = v34;
          *((_QWORD *)__dst + 2) = v35;
          __dst[24] = v33;
        }
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        v97 = __src[56];
        if (v97 == 255)
        {
          v145 = *(_OWORD *)(__src + 40);
          __dst[56] = __src[56];
          *(_OWORD *)(__dst + 40) = v145;
        }
        else
        {
          v99 = *((_QWORD *)__src + 5);
          v98 = *((_QWORD *)__src + 6);
          sub_242B55458(v99, v98, v97);
          *((_QWORD *)__dst + 5) = v99;
          *((_QWORD *)__dst + 6) = v98;
          __dst[56] = v97;
        }
        v78 = 4;
        goto LABEL_165;
      case 5u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v36 = __src[24];
        sub_242C480E0();
        if (v36 == 255)
        {
          v100 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v100;
        }
        else
        {
          v37 = *((_QWORD *)__src + 1);
          v38 = *((_QWORD *)__src + 2);
          sub_242B55458(v37, v38, v36);
          *((_QWORD *)__dst + 1) = v37;
          *((_QWORD *)__dst + 2) = v38;
          __dst[24] = v36;
        }
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        v101 = __src[56];
        if (v101 == 255)
        {
          v146 = *(_OWORD *)(__src + 40);
          __dst[56] = __src[56];
          *(_OWORD *)(__dst + 40) = v146;
        }
        else
        {
          v103 = *((_QWORD *)__src + 5);
          v102 = *((_QWORD *)__src + 6);
          sub_242B55458(v103, v102, v101);
          *((_QWORD *)__dst + 5) = v103;
          *((_QWORD *)__dst + 6) = v102;
          __dst[56] = v101;
        }
        v78 = 5;
        goto LABEL_165;
      case 6u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v39 = __src[24];
        if (v39 == 255)
        {
          v104 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v104;
        }
        else
        {
          v40 = *((_QWORD *)__src + 1);
          v41 = *((_QWORD *)__src + 2);
          sub_242B55458(v40, v41, __src[24]);
          *((_QWORD *)__dst + 1) = v40;
          *((_QWORD *)__dst + 2) = v41;
          __dst[24] = v39;
        }
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        v105 = __src[56];
        if (v105 == 255)
        {
          v147 = *(_OWORD *)(__src + 40);
          __dst[56] = __src[56];
          *(_OWORD *)(__dst + 40) = v147;
        }
        else
        {
          v107 = *((_QWORD *)__src + 5);
          v106 = *((_QWORD *)__src + 6);
          sub_242B55458(v107, v106, v105);
          *((_QWORD *)__dst + 5) = v107;
          *((_QWORD *)__dst + 6) = v106;
          __dst[56] = v105;
        }
        v78 = 6;
        goto LABEL_165;
      case 7u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v42 = __src[24];
        if (v42 == 255)
        {
          v108 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v108;
        }
        else
        {
          v43 = *((_QWORD *)__src + 1);
          v44 = *((_QWORD *)__src + 2);
          sub_242B55458(v43, v44, __src[24]);
          *((_QWORD *)__dst + 1) = v43;
          *((_QWORD *)__dst + 2) = v44;
          __dst[24] = v42;
        }
        v109 = *((_QWORD *)__src + 4);
        v110 = *((_QWORD *)__src + 5);
        v111 = __src[48];
        sub_242A8E344(v109, v110, v111);
        *((_QWORD *)__dst + 4) = v109;
        *((_QWORD *)__dst + 5) = v110;
        __dst[48] = v111;
        v78 = 7;
        goto LABEL_165;
      case 8u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v45 = __src[24];
        sub_242C480E0();
        if (v45 == 255)
        {
          v112 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v112;
        }
        else
        {
          v46 = *((_QWORD *)__src + 1);
          v47 = *((_QWORD *)__src + 2);
          sub_242B55458(v46, v47, v45);
          *((_QWORD *)__dst + 1) = v46;
          *((_QWORD *)__dst + 2) = v47;
          __dst[24] = v45;
        }
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        v113 = __src[56];
        sub_242C480E0();
        if (v113 == 255)
        {
          v148 = *(_OWORD *)(__src + 40);
          __dst[56] = __src[56];
          *(_OWORD *)(__dst + 40) = v148;
        }
        else
        {
          v115 = *((_QWORD *)__src + 5);
          v114 = *((_QWORD *)__src + 6);
          sub_242B55458(v115, v114, v113);
          *((_QWORD *)__dst + 5) = v115;
          *((_QWORD *)__dst + 6) = v114;
          __dst[56] = v113;
        }
        v78 = 8;
        goto LABEL_165;
      case 9u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v48 = __src[24];
        sub_242C480E0();
        if (v48 == 255)
        {
          v116 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v116;
        }
        else
        {
          v49 = *((_QWORD *)__src + 1);
          v50 = *((_QWORD *)__src + 2);
          sub_242B55458(v49, v50, v48);
          *((_QWORD *)__dst + 1) = v49;
          *((_QWORD *)__dst + 2) = v50;
          __dst[24] = v48;
        }
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        v117 = __src[56];
        sub_242C480E0();
        if (v117 == 255)
        {
          v149 = *(_OWORD *)(__src + 40);
          __dst[56] = __src[56];
          *(_OWORD *)(__dst + 40) = v149;
        }
        else
        {
          v119 = *((_QWORD *)__src + 5);
          v118 = *((_QWORD *)__src + 6);
          sub_242B55458(v119, v118, v117);
          *((_QWORD *)__dst + 5) = v119;
          *((_QWORD *)__dst + 6) = v118;
          __dst[56] = v117;
        }
        v78 = 9;
        goto LABEL_165;
      case 0xAu:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v51 = __src[24];
        sub_242C480E0();
        if (v51 == 255)
        {
          v120 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v120;
        }
        else
        {
          v52 = *((_QWORD *)__src + 1);
          v53 = *((_QWORD *)__src + 2);
          sub_242B55458(v52, v53, v51);
          *((_QWORD *)__dst + 1) = v52;
          *((_QWORD *)__dst + 2) = v53;
          __dst[24] = v51;
        }
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        v121 = __src[56];
        sub_242C480E0();
        if (v121 == 255)
        {
          v150 = *(_OWORD *)(__src + 40);
          __dst[56] = __src[56];
          *(_OWORD *)(__dst + 40) = v150;
        }
        else
        {
          v123 = *((_QWORD *)__src + 5);
          v122 = *((_QWORD *)__src + 6);
          sub_242B55458(v123, v122, v121);
          *((_QWORD *)__dst + 5) = v123;
          *((_QWORD *)__dst + 6) = v122;
          __dst[56] = v121;
        }
        v78 = 10;
        goto LABEL_165;
      case 0xBu:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v54 = __src[24];
        sub_242C480E0();
        if (v54 == 255)
        {
          v124 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v124;
        }
        else
        {
          v55 = *((_QWORD *)__src + 1);
          v56 = *((_QWORD *)__src + 2);
          sub_242B55458(v55, v56, v54);
          *((_QWORD *)__dst + 1) = v55;
          *((_QWORD *)__dst + 2) = v56;
          __dst[24] = v54;
        }
        v125 = *((_QWORD *)__src + 4);
        v126 = *((_QWORD *)__src + 5);
        v127 = __src[48];
        sub_242A8E344(v125, v126, v127);
        *((_QWORD *)__dst + 4) = v125;
        *((_QWORD *)__dst + 5) = v126;
        __dst[48] = v127;
        *((_QWORD *)__dst + 7) = *((_QWORD *)__src + 7);
        v73 = 11;
        goto LABEL_131;
      case 0xCu:
        v57 = *((_QWORD *)__src + 3);
        *((_QWORD *)__dst + 3) = v57;
        (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v57 - 8))(__dst, __src);
        v58 = __src[48];
        if (v58 == 255)
        {
          v128 = *((_OWORD *)__src + 2);
          __dst[48] = __src[48];
          *((_OWORD *)__dst + 2) = v128;
        }
        else
        {
          v59 = *((_QWORD *)__src + 4);
          v60 = *((_QWORD *)__src + 5);
          sub_242B55458(v59, v60, __src[48]);
          *((_QWORD *)__dst + 4) = v59;
          *((_QWORD *)__dst + 5) = v60;
          __dst[48] = v58;
        }
        v129 = *((_QWORD *)__src + 10);
        *((_QWORD *)__dst + 10) = v129;
        (**(void (***)(char *, char *))(v129 - 8))((char *)__dst + 56, (char *)__src + 56);
        v130 = __src[104];
        if (v130 == 255)
        {
          v151 = *(_OWORD *)(__src + 88);
          __dst[104] = __src[104];
          *(_OWORD *)(__dst + 88) = v151;
        }
        else
        {
          v132 = *((_QWORD *)__src + 11);
          v131 = *((_QWORD *)__src + 12);
          sub_242B55458(v132, v131, v130);
          *((_QWORD *)__dst + 11) = v132;
          *((_QWORD *)__dst + 12) = v131;
          __dst[104] = v130;
        }
        v78 = 12;
        goto LABEL_165;
      case 0xDu:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v61 = __src[24];
        if (v61 == 255)
        {
          v133 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v133;
        }
        else
        {
          v62 = *((_QWORD *)__src + 1);
          v63 = *((_QWORD *)__src + 2);
          sub_242B55458(v62, v63, __src[24]);
          *((_QWORD *)__dst + 1) = v62;
          *((_QWORD *)__dst + 2) = v63;
          __dst[24] = v61;
        }
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        v134 = __src[56];
        if (v134 == 255)
        {
          v152 = *(_OWORD *)(__src + 40);
          __dst[56] = __src[56];
          *(_OWORD *)(__dst + 40) = v152;
        }
        else
        {
          v136 = *((_QWORD *)__src + 5);
          v135 = *((_QWORD *)__src + 6);
          sub_242B55458(v136, v135, v134);
          *((_QWORD *)__dst + 5) = v136;
          *((_QWORD *)__dst + 6) = v135;
          __dst[56] = v134;
        }
        v78 = 13;
        goto LABEL_165;
      case 0xEu:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        v64 = __src[32];
        if (v64 == 255)
        {
          v137 = *((_OWORD *)__src + 1);
          __dst[32] = __src[32];
          *((_OWORD *)__dst + 1) = v137;
        }
        else
        {
          v66 = *((_QWORD *)__src + 2);
          v65 = *((_QWORD *)__src + 3);
          sub_242B55458(v66, v65, v64);
          *((_QWORD *)__dst + 2) = v66;
          *((_QWORD *)__dst + 3) = v65;
          __dst[32] = v64;
        }
        v78 = 14;
        goto LABEL_165;
      case 0xFu:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        v67 = __src[32];
        if (v67 == 255)
        {
          v138 = *((_OWORD *)__src + 1);
          __dst[32] = __src[32];
          *((_OWORD *)__dst + 1) = v138;
        }
        else
        {
          v68 = *((_QWORD *)__src + 2);
          v69 = *((_QWORD *)__src + 3);
          sub_242B55458(v68, v69, __src[32]);
          *((_QWORD *)__dst + 2) = v68;
          *((_QWORD *)__dst + 3) = v69;
          __dst[32] = v67;
        }
        v139 = *((_QWORD *)__src + 5);
        v140 = *((_QWORD *)__src + 6);
        v141 = __src[56];
        sub_242A8E344(v139, v140, v141);
        *((_QWORD *)__dst + 5) = v139;
        *((_QWORD *)__dst + 6) = v140;
        __dst[56] = v141;
        v78 = 15;
        goto LABEL_165;
      case 0x10u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v70 = __src[24];
        sub_242C480E0();
        if (v70 == 255)
        {
          v142 = *(_OWORD *)(__src + 8);
          __dst[24] = __src[24];
          *(_OWORD *)(__dst + 8) = v142;
        }
        else
        {
          v72 = *((_QWORD *)__src + 1);
          v71 = *((_QWORD *)__src + 2);
          sub_242B55458(v72, v71, v70);
          *((_QWORD *)__dst + 1) = v72;
          *((_QWORD *)__dst + 2) = v71;
          __dst[24] = v70;
        }
        v78 = 16;
        goto LABEL_165;
      case 0x11u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        v73 = 17;
LABEL_131:
        __dst[108] = v73;
        goto LABEL_132;
      case 0x12u:
        v74 = *((_QWORD *)__src + 3);
        *((_QWORD *)__dst + 3) = v74;
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v74 - 8))(__dst, __src);
        v75 = *((_QWORD *)__src + 5);
        if ((unint64_t)(v75 - 1) >= 2)
          v75 = swift_unknownObjectRetain();
        *((_QWORD *)__dst + 5) = v75;
        *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
        v76 = *((_QWORD *)__src + 10);
        *((_QWORD *)__dst + 10) = v76;
        *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
        (**(void (***)(char *, char *))(v76 - 8))((char *)__dst + 56, (char *)__src + 56);
        v77 = *((_QWORD *)__src + 12);
        if ((unint64_t)(v77 - 1) >= 2)
          v77 = swift_unknownObjectRetain();
        *((_QWORD *)__dst + 12) = v77;
        *((_DWORD *)__dst + 26) = *((_DWORD *)__src + 26);
        v78 = 18;
        goto LABEL_165;
      case 0x13u:
        v79 = *((_QWORD *)__src + 3);
        *((_QWORD *)__dst + 3) = v79;
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v79 - 8))(__dst, __src);
        v80 = *((_QWORD *)__src + 5);
        if ((unint64_t)(v80 - 1) >= 2)
          v80 = swift_unknownObjectRetain();
        *((_QWORD *)__dst + 5) = v80;
        *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
        v78 = 19;
        goto LABEL_165;
      case 0x14u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        v81 = *((_QWORD *)__src + 5);
        *((_QWORD *)__dst + 5) = v81;
        *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
        v82 = **(void (***)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v81 - 8);
        sub_242C480E0();
        v82(__dst + 16, __src + 16, v81);
        v83 = *((_QWORD *)__src + 7);
        if ((unint64_t)(v83 - 1) >= 2)
          v83 = swift_unknownObjectRetain();
        *((_QWORD *)__dst + 7) = v83;
        *((_DWORD *)__dst + 16) = *((_DWORD *)__src + 16);
        v78 = 20;
LABEL_165:
        __dst[108] = v78;
        break;
      case 0x15u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
        *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
        __dst[108] = 21;
        sub_242C480E0();
LABEL_132:
        sub_242C480E0();
        break;
      default:
        memcpy(__dst, __src, 0x6DuLL);
        break;
    }
  }
  return __dst;
}

void *__swift_memcpy109_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x6DuLL);
}

unsigned __int8 *sub_242B5707C(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  if (__dst != __src)
  {
    v4 = __dst[108];
    if (v4 >= 0x16)
      v4 = *(_DWORD *)__dst + 22;
    switch(v4)
    {
      case 0u:
      case 1u:
        v6 = __dst[32];
        if (v6 != 255)
          sub_242B55710(*((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), v6);
        v7 = __dst[72];
        if (v7 != 255)
        {
          v8 = *((_QWORD *)__dst + 7);
          v9 = *((_QWORD *)__dst + 8);
          goto LABEL_41;
        }
        break;
      case 2u:
      case 0x10u:
        swift_bridgeObjectRelease();
        v7 = __dst[24];
        if (v7 != 255)
        {
          v8 = *((_QWORD *)__dst + 1);
          v9 = *((_QWORD *)__dst + 2);
          goto LABEL_41;
        }
        break;
      case 3u:
        v10 = __dst[32];
        if (v10 != 255)
          sub_242B55710(*((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), v10);
        sub_242B55748(*((_QWORD *)__dst + 5), __dst[48]);
        break;
      case 4u:
      case 6u:
      case 0xDu:
        goto LABEL_37;
      case 5u:
        swift_bridgeObjectRelease();
LABEL_37:
        v19 = __dst[24];
        if (v19 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v19);
        goto LABEL_39;
      case 7u:
        v11 = __dst[24];
        if (v11 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v11);
        v12 = *((_QWORD *)__dst + 4);
        v13 = *((_QWORD *)__dst + 5);
        v14 = __dst[48];
        goto LABEL_32;
      case 8u:
      case 9u:
      case 0xAu:
        swift_bridgeObjectRelease();
        v5 = __dst[24];
        if (v5 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v5);
        swift_bridgeObjectRelease();
LABEL_39:
        v7 = __dst[56];
        if (v7 == 255)
          break;
        v8 = *((_QWORD *)__dst + 5);
        v9 = *((_QWORD *)__dst + 6);
        goto LABEL_41;
      case 0xBu:
        swift_bridgeObjectRelease();
        v15 = __dst[24];
        if (v15 != 255)
          sub_242B55710(*((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), v15);
        sub_242A8E358(*((_QWORD *)__dst + 4), *((_QWORD *)__dst + 5), __dst[48]);
        goto LABEL_35;
      case 0xCu:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        v16 = __dst[48];
        if (v16 != 255)
          sub_242B55710(*((_QWORD *)__dst + 4), *((_QWORD *)__dst + 5), v16);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 56));
        v7 = __dst[104];
        if (v7 == 255)
          break;
        v8 = *((_QWORD *)__dst + 11);
        v9 = *((_QWORD *)__dst + 12);
        goto LABEL_41;
      case 0xEu:
        v7 = __dst[32];
        if (v7 == 255)
          break;
        v8 = *((_QWORD *)__dst + 2);
        v9 = *((_QWORD *)__dst + 3);
LABEL_41:
        sub_242B55710(v8, v9, v7);
        break;
      case 0xFu:
        v17 = __dst[32];
        if (v17 != 255)
          sub_242B55710(*((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), v17);
        v12 = *((_QWORD *)__dst + 5);
        v13 = *((_QWORD *)__dst + 6);
        v14 = __dst[56];
LABEL_32:
        sub_242A8E358(v12, v13, v14);
        break;
      case 0x11u:
        goto LABEL_35;
      case 0x12u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        if ((unint64_t)(*((_QWORD *)__dst + 5) - 1) >= 2)
          swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 56));
        v18 = *((_QWORD *)__dst + 12);
        goto LABEL_67;
      case 0x13u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        v18 = *((_QWORD *)__dst + 5);
        goto LABEL_67;
      case 0x14u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
        v18 = *((_QWORD *)__dst + 7);
LABEL_67:
        if ((unint64_t)(v18 - 1) >= 2)
          swift_unknownObjectRelease();
        break;
      case 0x15u:
        swift_bridgeObjectRelease();
LABEL_35:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v20 = __src[108];
    if (v20 >= 0x16)
      v20 = *(_DWORD *)__src + 22;
    switch(v20)
    {
      case 0u:
        memcpy(__dst, __src, 0x49uLL);
        __dst[108] = 0;
        return __dst;
      case 1u:
        memcpy(__dst, __src, 0x49uLL);
        v21 = 1;
        goto LABEL_74;
      case 2u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *(_OWORD *)(__dst + 9) = *(_OWORD *)(__src + 9);
        v21 = 2;
        goto LABEL_74;
      case 3u:
        v22 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v22;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        __dst[48] = __src[48];
        v21 = 3;
        goto LABEL_74;
      case 4u:
        v23 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v23;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 4;
        goto LABEL_74;
      case 5u:
        v24 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v24;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 5;
        goto LABEL_74;
      case 6u:
        v25 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v25;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 6;
        goto LABEL_74;
      case 7u:
        v26 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v26;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        __dst[48] = __src[48];
        v21 = 7;
        goto LABEL_74;
      case 8u:
        v34 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v34;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 8;
        goto LABEL_74;
      case 9u:
        v27 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v27;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 9;
        goto LABEL_74;
      case 0xAu:
        v35 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v35;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 10;
        goto LABEL_74;
      case 0xBu:
        v28 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v28;
        v29 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_OWORD *)__dst + 3) = v29;
        v21 = 11;
        goto LABEL_74;
      case 0xCu:
        memcpy(__dst, __src, 0x69uLL);
        v21 = 12;
        goto LABEL_74;
      case 0xDu:
        v30 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v30;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 13;
        goto LABEL_74;
      case 0xEu:
        v31 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v31;
        __dst[32] = __src[32];
        v21 = 14;
        goto LABEL_74;
      case 0xFu:
        v32 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v32;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)(__src + 41);
        v21 = 15;
        goto LABEL_74;
      case 0x10u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *(_OWORD *)(__dst + 9) = *(_OWORD *)(__src + 9);
        v21 = 16;
        goto LABEL_74;
      case 0x11u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        v21 = 17;
        goto LABEL_74;
      case 0x12u:
        memcpy(__dst, __src, 0x6CuLL);
        v21 = 18;
        goto LABEL_74;
      case 0x13u:
        v36 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v36;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
        v21 = 19;
        goto LABEL_74;
      case 0x14u:
        memcpy(__dst, __src, 0x44uLL);
        v21 = 20;
        goto LABEL_74;
      case 0x15u:
        v33 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v33;
        v21 = 21;
LABEL_74:
        __dst[108] = v21;
        break;
      default:
        memcpy(__dst, __src, 0x6DuLL);
        break;
    }
  }
  return __dst;
}

uint64_t sub_242B57584(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xEA && *(_BYTE *)(a1 + 109))
    return (*(_DWORD *)a1 + 234);
  v3 = *(unsigned __int8 *)(a1 + 108);
  if (v3 >= 0x17)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_242B575C0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE9)
  {
    *(_OWORD *)(result + 93) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 234;
    if (a3 >= 0xEA)
      *(_BYTE *)(result + 109) = 1;
  }
  else
  {
    if (a3 >= 0xEA)
      *(_BYTE *)(result + 109) = 0;
    if (a2)
      *(_BYTE *)(result + 108) = -(char)a2;
  }
  return result;
}

uint64_t sub_242B57614(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 108);
  if (result >= 0x16)
    return (*(_DWORD *)a1 + 22);
  return result;
}

uint64_t sub_242B57630(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 0x15)
  {
    *(_OWORD *)(result + 92) = 0u;
    v2 = a2 - 22;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 22;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 108) = a2;
  return result;
}

void type metadata accessor for InputError()
{
  OUTLINED_FUNCTION_22_4();
}

void sub_242B5766C(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 84);
  if (v2 >= 0xA)
    v2 = *(_DWORD *)a1 + 10;
  switch(v2)
  {
    case 0u:
    case 1u:
    case 3u:
    case 4u:
    case 5u:
    case 9u:
      swift_bridgeObjectRelease();
      return;
    case 2u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v3 = *(_QWORD *)(a1 + 40);
      break;
    case 6u:
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(a1 + 40))
        return;
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      v3 = *(_QWORD *)(a1 + 56);
      break;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(a1 + 56))
        return;
      __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      v3 = *(_QWORD *)(a1 + 72);
      break;
    case 8u:

      return;
    default:
      return;
  }
  if ((unint64_t)(v3 - 1) >= 2)
    swift_unknownObjectRelease();
}

char *sub_242B5774C(char *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v4 = __src[84];
  if (v4 >= 0xA)
    v4 = *(_DWORD *)__src + 10;
  switch(v4)
  {
    case 0u:
      v5 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v5;
      __dst[84] = 0;
      goto LABEL_24;
    case 1u:
      v6 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v6;
      v7 = 1;
      goto LABEL_23;
    case 2u:
      v8 = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 24) = v8;
      (**(void (***)(char *, unsigned __int8 *))(v8 - 8))(__dst, __src);
      v9 = *((_QWORD *)__src + 5);
      if ((unint64_t)(v9 - 1) >= 2)
        v9 = swift_unknownObjectRetain();
      *((_QWORD *)__dst + 5) = v9;
      *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
      v10 = 2;
      goto LABEL_29;
    case 3u:
      v11 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v11;
      v7 = 3;
      goto LABEL_23;
    case 4u:
      v12 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v12;
      v7 = 4;
      goto LABEL_23;
    case 5u:
      v13 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v13;
      v7 = 5;
      goto LABEL_23;
    case 6u:
      v14 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v14;
      v15 = __src + 16;
      v16 = *((_QWORD *)__src + 5);
      sub_242C480E0();
      if (v16)
      {
        v17 = *((_QWORD *)__src + 6);
        *((_QWORD *)__dst + 5) = v16;
        *((_QWORD *)__dst + 6) = v17;
        (**(void (***)(char *, char *, uint64_t))(v16 - 8))(__dst + 16, (char *)__src + 16, v16);
        v18 = *((_QWORD *)__src + 7);
        if ((unint64_t)(v18 - 1) >= 2)
          v18 = swift_unknownObjectRetain();
        *((_QWORD *)__dst + 7) = v18;
        *((_DWORD *)__dst + 16) = *((_DWORD *)__src + 16);
      }
      else
      {
        v28 = *((_OWORD *)__src + 2);
        *((_OWORD *)__dst + 1) = *v15;
        *((_OWORD *)__dst + 2) = v28;
        *((_OWORD *)__dst + 3) = *((_OWORD *)__src + 3);
        *((_DWORD *)__dst + 16) = *((_DWORD *)__src + 16);
      }
      v10 = 6;
      goto LABEL_29;
    case 7u:
      v19 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v19;
      v20 = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 3) = v20;
      v21 = __src + 32;
      v22 = *((_QWORD *)__src + 7);
      sub_242C480E0();
      sub_242C480E0();
      if (v22)
      {
        v23 = *((_QWORD *)__src + 8);
        *((_QWORD *)__dst + 7) = v22;
        *((_QWORD *)__dst + 8) = v23;
        (**(void (***)(char *, char *, uint64_t))(v22 - 8))(__dst + 32, (char *)__src + 32, v22);
        v24 = *((_QWORD *)__src + 9);
        if ((unint64_t)(v24 - 1) >= 2)
          v24 = swift_unknownObjectRetain();
        *((_QWORD *)__dst + 9) = v24;
        *((_DWORD *)__dst + 20) = *((_DWORD *)__src + 20);
      }
      else
      {
        v29 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *v21;
        *((_OWORD *)__dst + 3) = v29;
        *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
        *((_DWORD *)__dst + 20) = *((_DWORD *)__src + 20);
      }
      v10 = 7;
      goto LABEL_29;
    case 8u:
      v25 = *(_QWORD *)__src;
      v26 = *(id *)__src;
      *(_QWORD *)__dst = v25;
      v10 = 8;
LABEL_29:
      __dst[84] = v10;
      break;
    case 9u:
      v27 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v27;
      v7 = 9;
LABEL_23:
      __dst[84] = v7;
LABEL_24:
      sub_242C480E0();
      break;
    default:
      memcpy(__dst, __src, 0x55uLL);
      break;
  }
  return __dst;
}

_QWORD *sub_242B579A4(_QWORD *__dst, _QWORD *__src)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  if (__dst != __src)
  {
    v4 = *((unsigned __int8 *)__dst + 84);
    if (v4 >= 0xA)
      v4 = *(_DWORD *)__dst + 10;
    switch(v4)
    {
      case 0u:
      case 1u:
      case 3u:
      case 4u:
      case 5u:
      case 9u:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        v6 = __dst[5];
        break;
      case 6u:
        swift_bridgeObjectRelease();
        if (!__dst[5])
          goto LABEL_6;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 2));
        v6 = __dst[7];
        break;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!__dst[7])
          goto LABEL_6;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 4));
        v6 = __dst[9];
        break;
      case 8u:

        goto LABEL_6;
      default:
        goto LABEL_6;
    }
    if ((unint64_t)(v6 - 1) >= 2)
      swift_unknownObjectRelease();
LABEL_6:
    v5 = *((unsigned __int8 *)__src + 84);
    if (v5 >= 0xA)
      v5 = *(_DWORD *)__src + 10;
    switch(v5)
    {
      case 0u:
        *__dst = *__src;
        __dst[1] = __src[1];
        *((_BYTE *)__dst + 84) = 0;
        goto LABEL_37;
      case 1u:
        *__dst = *__src;
        __dst[1] = __src[1];
        v7 = 1;
        goto LABEL_36;
      case 2u:
        v8 = __src[3];
        __dst[3] = v8;
        __dst[4] = __src[4];
        (**(void (***)(_QWORD *, _QWORD *))(v8 - 8))(__dst, __src);
        v9 = __src[5];
        if ((unint64_t)(v9 - 1) >= 2)
          v9 = swift_unknownObjectRetain();
        __dst[5] = v9;
        *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
        v10 = 2;
        goto LABEL_42;
      case 3u:
        *__dst = *__src;
        __dst[1] = __src[1];
        v7 = 3;
        goto LABEL_36;
      case 4u:
        *__dst = *__src;
        __dst[1] = __src[1];
        v7 = 4;
        goto LABEL_36;
      case 5u:
        *__dst = *__src;
        __dst[1] = __src[1];
        v7 = 5;
        goto LABEL_36;
      case 6u:
        *__dst = *__src;
        __dst[1] = __src[1];
        v11 = __src[5];
        sub_242C480E0();
        if (v11)
        {
          __dst[5] = v11;
          __dst[6] = __src[6];
          (**(void (***)(char *, char *, uint64_t))(v11 - 8))((char *)__dst + 16, (char *)__src + 16, v11);
          v12 = __src[7];
          if ((unint64_t)(v12 - 1) >= 2)
            v12 = swift_unknownObjectRetain();
          __dst[7] = v12;
          *((_DWORD *)__dst + 16) = *((_DWORD *)__src + 16);
        }
        else
        {
          v17 = *((_OWORD *)__src + 1);
          v18 = *((_OWORD *)__src + 2);
          v19 = *((_OWORD *)__src + 3);
          *((_DWORD *)__dst + 16) = *((_DWORD *)__src + 16);
          *((_OWORD *)__dst + 2) = v18;
          *((_OWORD *)__dst + 3) = v19;
          *((_OWORD *)__dst + 1) = v17;
        }
        v10 = 6;
        goto LABEL_42;
      case 7u:
        *__dst = *__src;
        __dst[1] = __src[1];
        __dst[2] = __src[2];
        __dst[3] = __src[3];
        v13 = __src[7];
        sub_242C480E0();
        sub_242C480E0();
        if (v13)
        {
          __dst[7] = v13;
          __dst[8] = __src[8];
          (**(void (***)(char *, char *, uint64_t))(v13 - 8))((char *)__dst + 32, (char *)__src + 32, v13);
          v14 = __src[9];
          if ((unint64_t)(v14 - 1) >= 2)
            v14 = swift_unknownObjectRetain();
          __dst[9] = v14;
          *((_DWORD *)__dst + 20) = *((_DWORD *)__src + 20);
        }
        else
        {
          v20 = *((_OWORD *)__src + 2);
          v21 = *((_OWORD *)__src + 3);
          v22 = *((_OWORD *)__src + 4);
          *((_DWORD *)__dst + 20) = *((_DWORD *)__src + 20);
          *((_OWORD *)__dst + 3) = v21;
          *((_OWORD *)__dst + 4) = v22;
          *((_OWORD *)__dst + 2) = v20;
        }
        v10 = 7;
        goto LABEL_42;
      case 8u:
        v15 = (void *)*__src;
        v16 = v15;
        *__dst = v15;
        v10 = 8;
LABEL_42:
        *((_BYTE *)__dst + 84) = v10;
        break;
      case 9u:
        *__dst = *__src;
        __dst[1] = __src[1];
        v7 = 9;
LABEL_36:
        *((_BYTE *)__dst + 84) = v7;
LABEL_37:
        sub_242C480E0();
        break;
      default:
        memcpy(__dst, __src, 0x55uLL);
        break;
    }
  }
  return __dst;
}

_QWORD *sub_242B57D0C(_QWORD *__dst, _OWORD *__src)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  if (__dst != (_QWORD *)__src)
  {
    v4 = *((unsigned __int8 *)__dst + 84);
    if (v4 >= 0xA)
      v4 = *(_DWORD *)__dst + 10;
    switch(v4)
    {
      case 0u:
      case 1u:
      case 3u:
      case 4u:
      case 5u:
      case 9u:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        v6 = __dst[5];
        break;
      case 6u:
        swift_bridgeObjectRelease();
        if (!__dst[5])
          goto LABEL_6;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 2));
        v6 = __dst[7];
        break;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!__dst[7])
          goto LABEL_6;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 4));
        v6 = __dst[9];
        break;
      case 8u:

        goto LABEL_6;
      default:
        goto LABEL_6;
    }
    if ((unint64_t)(v6 - 1) >= 2)
      swift_unknownObjectRelease();
LABEL_6:
    v5 = *((unsigned __int8 *)__src + 84);
    if (v5 >= 0xA)
      v5 = *(_DWORD *)__src + 10;
    switch(v5)
    {
      case 0u:
        *(_OWORD *)__dst = *__src;
        *((_BYTE *)__dst + 84) = 0;
        return __dst;
      case 1u:
        *(_OWORD *)__dst = *__src;
        v7 = 1;
        goto LABEL_28;
      case 2u:
        v8 = __src[1];
        *(_OWORD *)__dst = *__src;
        *((_OWORD *)__dst + 1) = v8;
        *((_OWORD *)__dst + 2) = __src[2];
        *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
        v7 = 2;
        goto LABEL_28;
      case 3u:
        *(_OWORD *)__dst = *__src;
        v7 = 3;
        goto LABEL_28;
      case 4u:
        *(_OWORD *)__dst = *__src;
        v7 = 4;
        goto LABEL_28;
      case 5u:
        *(_OWORD *)__dst = *__src;
        v7 = 5;
        goto LABEL_28;
      case 6u:
        memcpy(__dst, __src, 0x44uLL);
        v7 = 6;
        goto LABEL_28;
      case 7u:
        memcpy(__dst, __src, 0x54uLL);
        v7 = 7;
        goto LABEL_28;
      case 8u:
        *__dst = *(_QWORD *)__src;
        v7 = 8;
        goto LABEL_28;
      case 9u:
        *(_OWORD *)__dst = *__src;
        v7 = 9;
LABEL_28:
        *((_BYTE *)__dst + 84) = v7;
        break;
      default:
        memcpy(__dst, __src, 0x55uLL);
        break;
    }
  }
  return __dst;
}

uint64_t sub_242B57EF8(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF6 && *(_BYTE *)(a1 + 85))
    return (*(_DWORD *)a1 + 246);
  v3 = *(unsigned __int8 *)(a1 + 84);
  if (v3 >= 0xB)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_242B57F34(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF5)
  {
    *(_QWORD *)(result + 77) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 246;
    if (a3 >= 0xF6)
      *(_BYTE *)(result + 85) = 1;
  }
  else
  {
    if (a3 >= 0xF6)
      *(_BYTE *)(result + 85) = 0;
    if (a2)
      *(_BYTE *)(result + 84) = -(char)a2;
  }
  return result;
}

uint64_t sub_242B57F88(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 84);
  if (result >= 0xA)
    return (*(_DWORD *)a1 + 10);
  return result;
}

uint64_t sub_242B57FA4(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 9)
  {
    v2 = a2 - 10;
    *(_DWORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    LOBYTE(a2) = 10;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 84) = a2;
  return result;
}

void type metadata accessor for InternalInconsistencyError()
{
  OUTLINED_FUNCTION_22_4();
}

void sub_242B57FE0()
{
  unsigned __int8 *v0;
  _OWORD __dst[6];

  sub_242A627C4(v0, __dst);
  __asm { BR              X10 }
}

uint64_t sub_242B58048()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  OUTLINED_FUNCTION_4_47();
  sub_242C48C38();
  OUTLINED_FUNCTION_20_34();
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_67_10();
  OUTLINED_FUNCTION_3_52();
  OUTLINED_FUNCTION_17_31();
  if (v4 != 255)
  {
    sub_242B5A218(v2, v3, v4);
    OUTLINED_FUNCTION_12_33();
    OUTLINED_FUNCTION_9_43();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_0_69();
    OUTLINED_FUNCTION_21_29();
    sub_242B5A204(v2, v3, v4);
    OUTLINED_FUNCTION_83();
  }
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_11_36();
  sub_242A8A59C();
  OUTLINED_FUNCTION_47_18();
  OUTLINED_FUNCTION_3_52();
  if (v7 != 255)
  {
    sub_242B5A218(v5, v6, v7);
    OUTLINED_FUNCTION_12_33();
    OUTLINED_FUNCTION_9_43();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_0_69();
    OUTLINED_FUNCTION_15_32();
    sub_242B5A204(v5, v6, v7);
    OUTLINED_FUNCTION_80();
  }
  swift_bridgeObjectRelease();
  sub_242C48314();
  OUTLINED_FUNCTION_52_10();
  OUTLINED_FUNCTION_48_19();
  return v1;
}

uint64_t sub_242B59628(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v3 = a1 + 32;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221F40);
      sub_242C48278();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v4 = *(_QWORD *)(v8 + 16);
      if (v4 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_242AC315C();
      *(_QWORD *)(v8 + 16) = v4 + 1;
      v5 = v8 + 16 * v4;
      *(_QWORD *)(v5 + 32) = 96;
      *(_QWORD *)(v5 + 40) = 0xE100000000000000;
      v3 += 16;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
  sub_242B5A22C();
  v6 = sub_242C48194();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_242B5978C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v3 = a1 + 32;
    do
    {
      v3 += 8;
      sub_242C48278();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v4 = *(_QWORD *)(v8 + 16);
      if (v4 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_242AC315C();
      *(_QWORD *)(v8 + 16) = v4 + 1;
      v5 = v8 + 16 * v4;
      *(_QWORD *)(v5 + 32) = 96;
      *(_QWORD *)(v5 + 40) = 0xE100000000000000;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
  sub_242B5A22C();
  v6 = sub_242C48194();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_242B598E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v3 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_242C48278();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      swift_bridgeObjectRelease();
      v4 = *(_QWORD *)(v8 + 16);
      if (v4 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_242AC315C();
      *(_QWORD *)(v8 + 16) = v4 + 1;
      v5 = v8 + 16 * v4;
      *(_QWORD *)(v5 + 32) = 96;
      *(_QWORD *)(v5 + 40) = 0xE100000000000000;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
  sub_242B5A22C();
  v6 = sub_242C48194();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_242B59A58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;

  if (a3)
  {
    OUTLINED_FUNCTION_0_19();
    sub_242C48C38();
    OUTLINED_FUNCTION_62_13();
    OUTLINED_FUNCTION_31_30();
  }
  else
  {
    OUTLINED_FUNCTION_0_19();
    sub_242C48C38();
    OUTLINED_FUNCTION_37_20();
  }
  OUTLINED_FUNCTION_32_13();
  OUTLINED_FUNCTION_31_30();
  return v4;
}

uint64_t sub_242B59B5C()
{
  uint64_t v0;

  return sub_242B59A58(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_242B59B68()
{
  unsigned __int8 *v0;
  char __dst[88];

  sub_242A62800(v0, __dst);
  __asm { BR              X10 }
}

uint64_t sub_242B59BCC()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v1 - 144))
    return *(_QWORD *)(v1 - 152);
  else
    return v0 + 40;
}

unint64_t sub_242B5A15C(uint64_t a1)
{
  unint64_t result;

  result = sub_242B11520();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242B5A180(uint64_t a1)
{
  unint64_t result;

  result = sub_242B054C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242B5A1A4(uint64_t a1)
{
  unint64_t result;

  result = sub_242B5A1C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242B5A1C8()
{
  unint64_t result;

  result = qword_257228468;
  if (!qword_257228468)
  {
    result = MEMORY[0x2494EDE24](&unk_242C57EE4, &unk_2513888B0);
    atomic_store(result, (unint64_t *)&qword_257228468);
  }
  return result;
}

uint64_t sub_242B5A204(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_242B55710(a1, a2, a3);
  return a1;
}

uint64_t sub_242B5A218(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_242B55458(a1, a2, a3);
  return a1;
}

unint64_t sub_242B5A22C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257224A68;
  if (!qword_257224A68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221158);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_257224A68);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_69()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_1_55()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_2_58()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_3_52()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_9_43()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_11_36()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_12_33()
{
  DebugValueLocator.description.getter();
}

uint64_t OUTLINED_FUNCTION_13_39()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_15_32()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_16_32()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_21_29()
{
  return sub_242C48314();
}

double OUTLINED_FUNCTION_22_23(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16)
{
  return a16;
}

uint64_t OUTLINED_FUNCTION_23_30()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_26_31()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_27_26()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_29_22()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_31_30()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_32_26()
{
  return 0x6873207475706E49;
}

uint64_t OUTLINED_FUNCTION_33_20()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_36_22()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_37_21()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_38_19()
{
  return swift_getObjectType();
}

__n128 OUTLINED_FUNCTION_40_20()
{
  uint64_t v0;
  __n128 result;

  result = *(__n128 *)(v0 + 96);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 80);
  *(__n128 *)(v0 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_42_20()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_16()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_46_17()
{
  return sub_242B76D9C();
}

uint64_t OUTLINED_FUNCTION_48_19()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  return sub_242B5A204(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_49_16()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_51_19()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_52_10()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  return sub_242B5A204(v1, v2, v0);
}

void OUTLINED_FUNCTION_53_12()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_242C1A554(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_56_12()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_58_8()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_59_12()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_60_11()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_63_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  return sub_242A66290((uint64_t)&a27, (uint64_t)&a12);
}

uint64_t OUTLINED_FUNCTION_65_12()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_66_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return sub_242A6FDE8((uint64_t)va);
}

void OUTLINED_FUNCTION_67_10()
{
  sub_242A8A59C();
}

void OUTLINED_FUNCTION_68_8()
{
  sub_242A8A660();
}

void OUTLINED_FUNCTION_69_8()
{
  sub_242A8A5E0();
}

uint64_t OUTLINED_FUNCTION_70_11()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_71_6()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_72_7()
{
  sub_242A8A5E0();
}

void sub_242B5A668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!(*(_QWORD *)(v0 + 120) >> 62))
  {
    OUTLINED_FUNCTION_1_56();
    if (v1)
      goto LABEL_3;
LABEL_7:
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_8();
    return;
  }
  OUTLINED_FUNCTION_253_0();
  v1 = OUTLINED_FUNCTION_8_35();
  if (!v1)
    goto LABEL_7;
LABEL_3:
  OUTLINED_FUNCTION_7_39();
  if ((v1 & 0x8000000000000000) == 0)
  {
    do
    {
      OUTLINED_FUNCTION_5_52();
      sub_242C48D4C();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_6_52();
      sub_242C48D64();
    }
    while (v1 != v2);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_242B5A708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!(*(_QWORD *)(v0 + 128) >> 62))
  {
    OUTLINED_FUNCTION_1_56();
    if (v1)
      goto LABEL_3;
LABEL_7:
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_8();
    return;
  }
  OUTLINED_FUNCTION_253_0();
  v1 = OUTLINED_FUNCTION_8_35();
  if (!v1)
    goto LABEL_7;
LABEL_3:
  OUTLINED_FUNCTION_7_39();
  if ((v1 & 0x8000000000000000) == 0)
  {
    do
    {
      OUTLINED_FUNCTION_5_52();
      sub_242C48D4C();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_6_52();
      sub_242C48D64();
    }
    while (v1 != v2);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_242B5A7A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 128);
  if (!(v2 >> 62))
  {
    OUTLINED_FUNCTION_1_56();
    if (v1)
      goto LABEL_3;
LABEL_8:
    OUTLINED_FUNCTION_4_0();
    return;
  }
  OUTLINED_FUNCTION_253_0();
  v1 = OUTLINED_FUNCTION_8_35();
  if (!v1)
    goto LABEL_8;
LABEL_3:
  v10 = MEMORY[0x24BEE4AF8];
  sub_242AC3140();
  if ((v1 & 0x8000000000000000) == 0)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(v2 + 8 * v3 + 32);
      v5 = *(_QWORD *)(v4 + 152);
      v6 = *(_BYTE *)(v4 + 160);
      v7 = *(_QWORD *)(v10 + 16);
      v8 = *(_QWORD *)(v10 + 24);
      sub_242C480E0();
      if (v7 >= v8 >> 1)
        sub_242AC3140();
      ++v3;
      *(_QWORD *)(v10 + 16) = v7 + 1;
      v9 = v10 + 16 * v7;
      *(_QWORD *)(v9 + 32) = v5;
      *(_BYTE *)(v9 + 40) = v6;
    }
    while (v1 != v3);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_242B5A8C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_242A6549C(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B5A8F4()
{
  sub_242B5A8C0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CustomOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B5A934()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242B5A968()
{
  return 0x6D6F74737563;
}

uint64_t sub_242B5A984(uint64_t a1)
{
  uint64_t result;

  result = sub_242B5A9B8(&qword_257228538, (uint64_t)&unk_242C58028);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B5A9B8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CustomOperation();
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242B5A9F4(uint64_t a1)
{
  uint64_t result;

  result = sub_242B5A9B8(qword_257228540, (uint64_t)&unk_242C58050);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_56()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_4_48()
{
  return sub_242C48D88();
}

uint64_t OUTLINED_FUNCTION_5_52()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_6_52()
{
  return sub_242C48D94();
}

uint64_t OUTLINED_FUNCTION_7_39()
{
  return sub_242C48D7C();
}

uint64_t OUTLINED_FUNCTION_8_35()
{
  return sub_242C48FC8();
}

uint64_t sub_242B5AA8C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_242B5AB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  sub_242B5AFB4();
  swift_retain();
  sub_242B5AE28(a2, a3);
  v6 = v5;
  swift_release();
  sub_242B5AFD4();
  swift_release();
  swift_release();
  return v6;
}

id sub_242B5AB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v18[6];

  OUTLINED_FUNCTION_0_70();
  v13 = *(void **)(v7 + 16);
  if (a6)
  {
    v18[4] = a6;
    v18[5] = a7;
    v18[0] = MEMORY[0x24BDAC760];
    v18[1] = 1107296256;
    v18[2] = sub_242B5AD74;
    v18[3] = &block_descriptor_1;
    v14 = _Block_copy(v18);
    swift_retain();
    swift_release();
  }
  else
  {
    v14 = 0;
  }
  if ((a5 & 0xFE) != 0)
    v15 = 48;
  else
    v15 = 0;
  v16 = objc_msgSend(v13, sel_newBufferWithBytesNoCopy_length_options_deallocator_, a3, a4, v15, v14);
  _Block_release(v14);
  sub_242B5AFD4();
  swift_release();
  sub_242A6549C(a6);
  return v16;
}

id sub_242B5ACA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  id v8;

  OUTLINED_FUNCTION_0_70();
  if ((a4 & 0xFE) != 0)
    v7 = 48;
  else
    v7 = 0;
  v8 = objc_msgSend(*(id *)(v4 + 16), sel_newBufferWithLength_options_, a3, v7);
  sub_242B5AFD4();
  swift_release();
  return v8;
}

void sub_242B5AD14(void (*a1)(void))
{
  sub_242B5AFB4();
  a1();
  sub_242B5AFD4();
}

uint64_t sub_242B5AD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_242B5ADBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  swift_retain();
  swift_retain();
  v5 = sub_242B5AB0C(v4, a1, a2);
  swift_release();
  return v5;
}

void sub_242B5AE28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = a1 + 24;
  v5 = swift_beginAccess();
  v6 = (void *)MEMORY[0x2494ED6EC](v5);
  sub_242B883A8(v4, a2, &v7);
  objc_autoreleasePoolPop(v6);
  if (v2)
  {
    __break(1u);
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
}

uint64_t *sub_242B5AEC8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return v0;
}

uint64_t sub_242B5AF0C()
{
  sub_242B5AEC8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Mutex(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Mutex);
}

uint64_t sub_242B5AF3C()
{
  uint64_t v0;
  _DWORD *v1;

  *(_BYTE *)(v0 + 24) = 0;
  v1 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = 0;
  return v0;
}

uint64_t sub_242B5AF68()
{
  uint64_t v0;

  MEMORY[0x2494EDF68](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

void sub_242B5AFB4()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 16));
  *(_BYTE *)(v0 + 24) = 1;
}

void sub_242B5AFD4()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  *(_BYTE *)(v0 + 24) = 0;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_0_70()
{
  sub_242B5AFB4();
}

void sub_242B5B014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_242AC3648();
    v3 = sub_242B3AAE8(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = a1 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v14 = v1;
          v15 = v4;
          v7 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
          v8 = v7[1];
          v16 = *v7;
          v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5) + 16);
          v11 = *(_QWORD *)(v17 + 16);
          v10 = *(_QWORD *)(v17 + 24);
          sub_242C480E0();
          swift_retain();
          if (v11 >= v10 >> 1)
            sub_242AC3648();
          *(_QWORD *)(v17 + 16) = v11 + 1;
          v12 = (_QWORD *)(v17 + 24 * v11);
          v12[4] = v16;
          v12[5] = v8;
          v12[6] = v9;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v6 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v15 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v13 = sub_242C48BB4();
          --v1;
          if (v14 == 1)
            return;
          v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_242B5B1E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  _OWORD v16[3];
  int v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_242AC3274();
    v2 = v18;
    v15 = type metadata accessor for TensorRepresentation();
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *v4;
      v17 = 0;
      memset(v16, 0, sizeof(v16));
      ObjectType = swift_getObjectType();
      swift_bridgeObjectRetain_n();
      v9 = swift_unknownObjectRetain_n();
      v10 = sub_242BCBE34(v9, (uint64_t)v16, 0x100000000uLL, v15, ObjectType, v7);
      type metadata accessor for TensorHandle();
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v10;
      swift_retain();
      sub_242BC995C();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v18 = v2;
      v12 = *(_QWORD *)(v2 + 16);
      if (v12 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_242AC3274();
        v2 = v18;
      }
      *(_QWORD *)(v2 + 16) = v12 + 1;
      v13 = (_QWORD *)(v2 + 24 * v12);
      v13[4] = v5;
      v13[5] = v6;
      v13[6] = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_242B5B370@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a4 + 16)
    && (result = sub_242A61310(result, a2), (v8 & 1) != 0)
    && (v9 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result), *(_QWORD *)(v9 + 16)))
  {
    v10 = *(_QWORD *)(v9 + 32);
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)(a3 + 16))
    {
      v11 = a3 + 32 * v10;
      v12 = *(_QWORD *)(v11 + 48);
      LOBYTE(v11) = *(_BYTE *)(v11 + 56);
      *(_QWORD *)a5 = v12;
      *(_BYTE *)(a5 + 8) = v11;
      return sub_242C480E0();
    }
    __break(1u);
  }
  else
  {
    *(_QWORD *)a5 = 0;
    *(_BYTE *)(a5 + 8) = 0;
  }
  return result;
}

uint64_t ModelError.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_0_2();
  return v1;
}

uint64_t CompiledModel.__allocating_init<>(contentsOf:device:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_8_36(v1, (uint64_t)sub_242B5B494);
  return CompiledModel.init<>(contentsOf:device:)(v2, v3);
}

uint64_t sub_242B5B494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_71();
  if (!v1)
    v3 = v0;
  return OUTLINED_FUNCTION_1_57(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t CompiledModel.init<>(contentsOf:device:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v3[24] = *v2;
  v4 = sub_242C47B7C();
  v3[25] = v4;
  v3[26] = *(_QWORD *)(v4 - 8);
  v3[27] = swift_task_alloc();
  return OUTLINED_FUNCTION_6_28();
}

uint64_t sub_242B5B524()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_242A6FE24(*(_QWORD *)(v0 + 176), v0 + 16);
  sub_242A587A8(v0 + 16, v0 + 128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 56);
    if (v1 == 2)
      v2 = 4;
    else
      v2 = 2;
    if (v1 == 1)
      v3 = 1;
    else
      v3 = v2;
    sub_242AD25B8(*(_QWORD *)(v0 + 56));
    sub_242A6FDE8(v0 + 16);
    *(_QWORD *)(v0 + 40) = &unk_251389868;
    *(_QWORD *)(v0 + 48) = &off_251389928;
    *(_QWORD *)(v0 + 56) = v1;
    *(_DWORD *)(v0 + 64) = v3;
  }
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 168);
  type metadata accessor for EspressoV1Executor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  sub_242A6FE24(v0 + 16, v0 + 72);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v8;
  *v8 = v0;
  v8[1] = sub_242B5B658;
  return sub_242ACD664(*(_QWORD *)(v0 + 216), v0 + 72);
}

uint64_t sub_242B5B658(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_28();
}

uint64_t sub_242B5B6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 232);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 208);
    v3 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD **)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 168);
    sub_242A6FDE8(*(_QWORD *)(v0 + 176));
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v3);
    sub_242A6FDE8(v0 + 16);
    v4[4] = v1;
    type metadata accessor for CompiledModelDictInputTranslator(0);
    v4[2] = OUTLINED_FUNCTION_7_40();
    type metadata accessor for CompiledModelDictOutputTranslator(0);
    v4[3] = OUTLINED_FUNCTION_7_40();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 184));
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 176);
    sub_242C48C38();
    sub_242C48314();
    sub_242B5BD50();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242B5BD90();
    swift_allocError();
    *v11 = 0;
    v11[1] = 0xE000000000000000;
    swift_willThrow();
    sub_242A6FDE8(v10);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
    sub_242A6FDE8(v0 + 16);
    OUTLINED_FUNCTION_5_53();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_242B5B880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 168);
  sub_242A6FDE8(*(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  sub_242A6FDE8(v0 + 16);
  OUTLINED_FUNCTION_5_53();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CompiledModel.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CompiledModel.__deallocating_deinit()
{
  CompiledModel.deinit();
  return swift_deallocClassInstance();
}

void sub_242B5B934(uint64_t a1)
{
  CompiledModel.forward(_:)(a1);
}

void CompiledModel.forward(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  v3 = (void *)MEMORY[0x2494ED6EC]();
  sub_242B5BAEC(v1, a1);
  objc_autoreleasePoolPop(v3);
}

void CompiledModel<>.inputCount.getter()
{
  sub_242B5BA40((void (*)(void))sub_242ACBF50);
}

void CompiledModel<>.inputNames.getter()
{
  sub_242ACBF50();
  OUTLINED_FUNCTION_1_0();
}

void CompiledModel<>.tensorProperties(forInputNamed:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_11_37();
  OUTLINED_FUNCTION_0_2();
  v1 = sub_242C480E0();
  OUTLINED_FUNCTION_2_59(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    OUTLINED_FUNCTION_6_53();
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  *v0 = v5;
  v0[1] = v3;
  v0[2] = v4;
  OUTLINED_FUNCTION_18();
}

void CompiledModel<>.outputCount.getter()
{
  sub_242B5BA40(sub_242ACBFCC);
}

void sub_242B5BA40(void (*a1)(void))
{
  a1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_0();
}

void CompiledModel<>.outputNames.getter()
{
  sub_242ACBFCC();
  OUTLINED_FUNCTION_1_0();
}

void CompiledModel<>.tensorProperties(forOutputNamed:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_11_37();
  OUTLINED_FUNCTION_0_2();
  v1 = sub_242C480E0();
  OUTLINED_FUNCTION_2_59(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    OUTLINED_FUNCTION_6_53();
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  *v0 = v5;
  v0[1] = v3;
  v0[2] = v4;
  OUTLINED_FUNCTION_18();
}

uint64_t sub_242B5BAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t))(**(_QWORD **)(a1 + 16) + 88))(a2);
  v3 = sub_242ACDEA4();
  v5 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(a1 + 24) + 88))(v3, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_242B5BB98()
{
  sub_242A59170();
}

uint64_t sub_242B5BBF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_242B5BC00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242B5B014(a1);
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C480BC();
  v3 = sub_242A5A5CC(v2);
  v4 = swift_bridgeObjectRelease();
  sub_242A5CDDC(v4);
  return v3;
}

uint64_t sub_242B5BC8C(uint64_t *a1)
{
  return sub_242B5BC00(*a1);
}

void sub_242B5BC94()
{
  sub_242A59170();
}

uint64_t sub_242B5BCF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_242B5BCFC(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_242B5B1E8(a1);
  return sub_242A5B54C(v1);
}

uint64_t sub_242B5BD2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_242B5BCFC(a1);
  *a2 = result;
  return result;
}

unint64_t sub_242B5BD50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257228680;
  if (!qword_257228680)
  {
    v1 = sub_242C47B7C();
    result = MEMORY[0x2494EDE24](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_257228680);
  }
  return result;
}

unint64_t sub_242B5BD90()
{
  unint64_t result;

  result = qword_257228688;
  if (!qword_257228688)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for ModelError, &type metadata for ModelError);
    atomic_store(result, (unint64_t *)&qword_257228688);
  }
  return result;
}

uint64_t type metadata accessor for CompiledModelDictInputTranslator(uint64_t a1)
{
  return sub_242AF13E8(a1, qword_257228818);
}

uint64_t type metadata accessor for CompiledModelDictOutputTranslator(uint64_t a1)
{
  return sub_242AF13E8(a1, qword_257228958);
}

uint64_t sub_242B5BDF4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&protocol conformance descriptor for CompiledModel<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B5BE20(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&protocol conformance descriptor for CompiledModel<A, B>);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

ValueMetadata *type metadata accessor for ModelError()
{
  return &type metadata for ModelError;
}

uint64_t sub_242B5BE5C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CompiledModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CompiledModel);
}

uint64_t method lookup function for CompiledModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CompiledModel.__allocating_init<>(contentsOf:device:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))(**(int **)(v0 + 120) + *(_QWORD *)(v0 + 120));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_8_36(v2, (uint64_t)sub_242B5BF1C);
  return v5(v3);
}

uint64_t sub_242B5BF1C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_71();
  return OUTLINED_FUNCTION_1_57(v0, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t type metadata accessor for CompiledModelInputTranslator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CompiledModelInputTranslator);
}

uint64_t sub_242B5BF58()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CompiledModelOutputTranslator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CompiledModelOutputTranslator);
}

uint64_t sub_242B5BF98()
{
  return swift_initClassMetadata2();
}

uint64_t OUTLINED_FUNCTION_0_71()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1_57(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

unint64_t OUTLINED_FUNCTION_2_59(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a2);
  return sub_242B5B370(v4, v3, v2, v5, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_5_53()
{
  return swift_deallocPartialClassInstance();
}

void OUTLINED_FUNCTION_6_53()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_7_40()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_36@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_242B5C070(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v6)
      break;
    v12 = MEMORY[0x24BEE4AF8];
    result = sub_242C48D7C();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x2494EC84C](v8, a3);
      }
      else
      {
        v9 = *(_QWORD *)(a3 + 8 * v8 + 32);
        OUTLINED_FUNCTION_158_0();
      }
      v10 = v9;
      a1(&v11, &v10);
      swift_release();
      if (v3)
        return swift_release();
      ++v8;
      sub_242C48D4C();
      sub_242C48D88();
      sub_242C48D94();
      sub_242C48D64();
      if (v6 == v8)
        return v12;
    }
    __break(1u);
LABEL_16:
    OUTLINED_FUNCTION_44_0();
    v6 = OUTLINED_FUNCTION_87_5();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_242B5C1D4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  uint64_t v15;

  if (a3 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v15 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_119_4();
    sub_242AC323C();
    if (v4 < 0)
    {
      __break(1u);
      return;
    }
    v6 = 0;
    while (v4 != v6)
    {
      if ((a3 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_124_4();
      OUTLINED_FUNCTION_64_12();
      OUTLINED_FUNCTION_90_3();
      if (v3)
      {
        OUTLINED_FUNCTION_157_0();
        OUTLINED_FUNCTION_72_1();
        return;
      }
      v7 = v4;
      OUTLINED_FUNCTION_72_1();
      v8 = v13;
      v9 = *(_QWORD *)(v15 + 16);
      if (v9 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        OUTLINED_FUNCTION_120_4();
        sub_242AC323C();
        v8 = v11;
      }
      *(_QWORD *)(v15 + 16) = v9 + 1;
      v10 = v15 + 32 * v9;
      *(_QWORD *)(v10 + 32) = v12;
      ++v6;
      *(_OWORD *)(v10 + 40) = v8;
      *(_BYTE *)(v10 + 56) = v14;
      v4 = v7;
      if (v7 == v6)
        return;
    }
    __break(1u);
LABEL_17:
    OUTLINED_FUNCTION_61_12();
    OUTLINED_FUNCTION_87_5();
    OUTLINED_FUNCTION_108_2();
  }
}

void sub_242B5C340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_19:
    swift_release();
    return;
  }
  v17 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  v7 = 0;
  while (1)
  {
    v8 = *(_QWORD *)(a1 + 32 + 8 * v7);
    if (v8 != -1)
      goto LABEL_16;
    v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 152);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
      break;
    v14 = 1;
    if (!a3)
      goto LABEL_22;
LABEL_11:
    if (v14 == 0x8000000000000000 && a3 == -1)
      goto LABEL_23;
    v8 = v14 / a3;
LABEL_16:
    v16 = *(_QWORD *)(v17 + 16);
    if (v16 >= *(_QWORD *)(v17 + 24) >> 1)
      sub_242AC3124();
    ++v7;
    *(_QWORD *)(v17 + 16) = v16 + 1;
    *(_QWORD *)(v17 + 8 * v16 + 32) = v8;
    if (v7 == v4)
      goto LABEL_19;
  }
  v11 = (uint64_t *)(v9 + 32);
  v12 = 1;
  do
  {
    v13 = *v11++;
    v14 = v12 * v13;
    if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
    {
      __break(1u);
      goto LABEL_22;
    }
    v12 = v14;
    --v10;
  }
  while (v10);
  if (a3)
    goto LABEL_11;
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t sub_242B5C4B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_242AC3290();
    v2 = v9;
    v4 = a1 + 32;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 16) + 152);
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      sub_242C480E0();
      if (v7 >= v6 >> 1)
        sub_242AC3290();
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242B5C58C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242AC3124();
    v3 = v8;
    v4 = a1 + 32;
    do
    {
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      v5 = *(_QWORD *)(v8 + 16);
      if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_242AC3124();
      *(_QWORD *)(v8 + 16) = v5 + 1;
      *(_QWORD *)(v8 + 8 * v5 + 32) = v7;
      v4 += 8;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_242B5C6A0(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_85_6();
    sub_242AC32AC();
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_242B5C8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_242AC3124();
    v5 = v14;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 152);
    do
    {
      v9 = *v6++;
      v8 = v9;
      v10 = *(_QWORD *)(v7 + 16);
      if (v9 < -v10 || v8 >= v10)
        sub_242A59264();
      v12 = *(_QWORD *)(v14 + 16);
      if (v12 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_242AC3124();
      *(_QWORD *)(v14 + 16) = v12 + 1;
      *(_QWORD *)(v14 + 8 * v12 + 32) = (v10 & (v8 >> 63)) + v8;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

void sub_242B5CA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  if ((unint64_t)a3 >> 62)
    goto LABEL_18;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    v13 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_119_4();
    sub_242AC3648();
    if (v5 < 0)
    {
      __break(1u);
      return;
    }
    v6 = 0;
    while (v5 != v6)
    {
      if ((a3 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v6, a3);
      else
        OUTLINED_FUNCTION_64_12();
      OUTLINED_FUNCTION_90_3();
      if (v3)
      {
        OUTLINED_FUNCTION_157_0();
        OUTLINED_FUNCTION_72_1();
        return;
      }
      OUTLINED_FUNCTION_72_1();
      v7 = v12;
      v8 = *(_QWORD *)(v13 + 16);
      if (v8 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        OUTLINED_FUNCTION_120_4();
        sub_242AC3648();
        v7 = v10;
      }
      ++v6;
      *(_QWORD *)(v13 + 16) = v8 + 1;
      v9 = v13 + 24 * v8;
      *(_QWORD *)(v9 + 32) = v11;
      *(_OWORD *)(v9 + 40) = v7;
      if (v5 == v6)
        return;
    }
    __break(1u);
LABEL_18:
    if (a3 < 0)
      v3 = a3;
    else
      v3 = a3 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_37_0();
    v5 = OUTLINED_FUNCTION_87_5();
    swift_bridgeObjectRelease();
  }
}

void sub_242B5CB88(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v12 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_119_4();
    sub_242AC315C();
    if (v4 < 0)
    {
      __break(1u);
      return;
    }
    v6 = 0;
    while (v4 != v6)
    {
      if ((a3 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_124_4();
      OUTLINED_FUNCTION_64_12();
      OUTLINED_FUNCTION_90_3();
      if (v3)
      {
        OUTLINED_FUNCTION_157_0();
        OUTLINED_FUNCTION_72_1();
        return;
      }
      v7 = v4;
      OUTLINED_FUNCTION_72_1();
      v8 = *(_QWORD *)(v12 + 16);
      if (v8 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_242AC315C();
      ++v6;
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v9 = v12 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v10;
      *(_QWORD *)(v9 + 40) = v11;
      v4 = v7;
      if (v7 == v6)
        return;
    }
    __break(1u);
LABEL_17:
    OUTLINED_FUNCTION_61_12();
    OUTLINED_FUNCTION_87_5();
    OUTLINED_FUNCTION_108_2();
  }
}

uint64_t sub_242B5CCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_242AC3140();
    v5 = v13;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_BYTE *)(*(_QWORD *)(a2 + 16) + 160);
    do
    {
      v8 = *v6;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      OUTLINED_FUNCTION_32_0();
      if (v10 >= v9 >> 1)
        sub_242AC3140();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_BYTE *)(v11 + 40) = v7;
      ++v6;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_242B5CDE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_85_6();
    sub_242AC3258();
    v2 = v9;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4;
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      OUTLINED_FUNCTION_10();
      if (v7 >= v6 >> 1)
        sub_242AC3258();
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242B5CEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242B5CEC0(a1, a2, a3, a4);
}

uint64_t sub_242B5CEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t (*v10)(BOOL, unint64_t, uint64_t);
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(BOOL, unint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return v6;
  v17 = MEMORY[0x24BEE4AF8];
  v9 = OUTLINED_FUNCTION_119_4();
  v15 = v10;
  result = ((uint64_t (*)(uint64_t))v10)(v9);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = v17;
    v12 = a3;
    while (a4 != v12)
    {
      result = OUTLINED_FUNCTION_90_3();
      if (v4)
      {
        swift_release();
        return v6;
      }
      v14 = *(_QWORD *)(v17 + 16);
      v13 = *(_QWORD *)(v17 + 24);
      if (v14 >= v13 >> 1)
        result = v15(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v17 + 16) = v14 + 1;
      *(_QWORD *)(v17 + 8 * v14 + 32) = v16;
      if (a4 < a3)
        goto LABEL_16;
      if (v12 >= a4)
        goto LABEL_17;
      if (a4 == ++v12)
        return v6;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_242B5CFFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  v7 = v6;
  v24 = a2;
  v25 = a1;
  if (v6)
  {
    v8 = (uint64_t *)(a1 + 32);
    v9 = (uint64_t *)(a2 + 32);
    sub_242C480E0();
    sub_242C480E0();
    v10 = v7;
    v11 = v4;
    v12 = v5;
    v13 = v5;
    while (v4)
    {
      if (!v12)
        goto LABEL_24;
      v14 = *v8 * *v9;
      if ((unsigned __int128)(*v8 * (__int128)*v9) >> 64 != v14 >> 63)
        goto LABEL_25;
      v15 = *(_QWORD *)(v26 + 16);
      if (v15 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v21 = v11;
        v22 = v13;
        sub_242AC3124();
        v13 = v22;
        v11 = v21;
      }
      --v12;
      *(_QWORD *)(v26 + 16) = v15 + 1;
      *(_QWORD *)(v26 + 8 * v15 + 32) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v10)
        goto LABEL_14;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
    v11 = v4;
    v13 = v5;
LABEL_14:
    if (v11 <= v13)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v11)
    {
      if (v13 == v7)
        goto LABEL_22;
      if (v7 >= v13)
        goto LABEL_27;
      v16 = *(_QWORD *)(v25 + 32 + 8 * v7);
      v17 = *(_QWORD *)(v24 + 32 + 8 * v7);
      v18 = v16 * v17;
      if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63)
        goto LABEL_28;
      v19 = *(_QWORD *)(v26 + 16);
      if (v19 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v20 = v11;
        v23 = v13;
        sub_242AC3124();
        v13 = v23;
        v11 = v20;
      }
      ++v7;
      *(_QWORD *)(v26 + 16) = v19 + 1;
      *(_QWORD *)(v26 + 8 * v19 + 32) = v18;
      if (v11 == v7)
        goto LABEL_22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_242B5D22C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  __objc2_class *Class;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  __objc2_class *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v34 = MEMORY[0x24BEE4AF8];
  sub_242AC3D90();
  v30 = v5;
  v31 = v4;
  v29 = v6;
  if (v6)
  {
    v7 = (uint64_t *)(a1 + 32);
    v8 = a2 + 32;
    sub_242C480E0();
    sub_242C480E0();
    v9 = v4;
    while (v9)
    {
      if (!v5)
        goto LABEL_31;
      v33 = *v7;
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_242BC97A8();
      if (v10
        && (Class = (__objc2_class *)object_getClass(v10),
            swift_unknownObjectRelease(),
            Class == _TtC14NeuralNetworks16TrackedOperation))
      {
        sub_242BC9724();
        sub_242C48314();
        swift_bridgeObjectRelease();
        sub_242C48314();
        sub_242B89308();
        sub_242C48E78();
        swift_release();
        swift_release();
        swift_release();
        v14 = 0xE000000000000000;
        v32 = 0;
      }
      else
      {
        sub_242BC9724();
        v32 = v12;
        v14 = v13;
        swift_release();
        swift_release();
        swift_release();
      }
      v15 = *(_QWORD *)(v34 + 16);
      if (v15 >= *(_QWORD *)(v34 + 24) >> 1)
        sub_242AC3D90();
      *(_QWORD *)(v34 + 16) = v15 + 1;
      v16 = (_QWORD *)(v34 + 24 * v15);
      --v5;
      v16[4] = v33;
      v16[5] = v32;
      v16[6] = v14;
      --v9;
      v8 += 8;
      ++v7;
      if (!--v6)
        goto LABEL_17;
    }
    __break(1u);
LABEL_31:
    __break(1u);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
LABEL_17:
    v18 = v30;
    v17 = v31;
    if (v31 <= v30)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v19 = v29;
    while (v19 < v17)
    {
      if (v18 == v19)
        goto LABEL_29;
      if (v19 >= v18)
        goto LABEL_33;
      v20 = *(_QWORD *)(a1 + 32 + 8 * v19);
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_242BC97A8();
      if (v21
        && (v22 = (__objc2_class *)object_getClass(v21),
            swift_unknownObjectRelease(),
            v22 == _TtC14NeuralNetworks16TrackedOperation))
      {
        sub_242BC9724();
        sub_242C48314();
        swift_bridgeObjectRelease();
        sub_242C48314();
        sub_242B89308();
        sub_242C48E78();
        swift_release();
        swift_release();
        swift_release();
        v24 = 0;
        v26 = 0xE000000000000000;
      }
      else
      {
        sub_242BC9724();
        v24 = v23;
        v26 = v25;
        swift_release();
        swift_release();
        swift_release();
      }
      v27 = *(_QWORD *)(v34 + 16);
      if (v27 >= *(_QWORD *)(v34 + 24) >> 1)
        sub_242AC3D90();
      ++v19;
      *(_QWORD *)(v34 + 16) = v27 + 1;
      v28 = (_QWORD *)(v34 + 24 * v27);
      v28[4] = v20;
      v28[5] = v24;
      v28[6] = v26;
      v18 = v30;
      v17 = v31;
      if (v31 == v19)
        goto LABEL_29;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

void Tensor.cast(to:roundingRule:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  BOOL v22;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (**v30)(_QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[8];
  char v35;
  const char *v36;
  __int128 v37;
  __int128 v38;
  const char *v39;
  uint64_t v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_17_17();
  v42 = v3;
  v43 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_115_4();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v34[-1] - v15;
  v17 = *v8;
  v18 = *v0;
  v19 = *(unsigned __int8 *)(*(_QWORD *)(*v0 + 16) + 160);
  if (v19 == v17)
  {
    *v10 = v18;
    swift_retain();
    return;
  }
  v22 = v19 > 0xC;
  v20 = (1 << v19) & 0x1704;
  v22 = v22 || v20 == 0 || v17 > 0xC;
  if (v22 || ((1 << v17) & 0x1704) == 0)
  {
    OUTLINED_FUNCTION_60_12();
    OUTLINED_FUNCTION_45_0((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_60_12();
  OUTLINED_FUNCTION_69_9(*MEMORY[0x24BEE38B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v24 = sub_242C491FC();
  v25 = *(void (**)(char *, uint64_t))(v2 + 8);
  v25(v14, v1);
  v25(v16, v1);
  if ((v24 & 1) == 0)
  {
LABEL_16:
    v31 = *(_QWORD *)(v18 + 16);
    v34[0] = *(_QWORD *)(v31 + 152);
    v35 = v17;
    v32 = sub_242A66290(v31 + 168, (uint64_t)&v36);
    MEMORY[0x24BDAC7A8](v32);
    *(&v33 - 4) = v18;
    *((_BYTE *)&v33 - 24) = v17;
    *(&v33 - 2) = v6;
    OUTLINED_FUNCTION_0_2();
    Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)v34, (uint64_t)&v35, (uint64_t)&v36, (uint64_t)sub_242B5EEA4);
    goto LABEL_17;
  }
  v26 = *(_QWORD *)(v18 + 16);
  LOBYTE(v34[0]) = v17;
  v27 = *(_BYTE *)(v26 + 160);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = v27;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_126_3((uint64_t)sub_242B5EED0);
  OUTLINED_FUNCTION_17_1();
  v36 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v37 = xmmword_242C55120;
  v38 = xmmword_242C583B0;
  v39 = "init(id:operand:scalarType:creationSite:backward:)";
  v40 = 50;
  v41 = 2;
  type metadata accessor for CastOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_77_7();
  sub_242B9E108();
  v29 = v28;
  v30 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257228220, (uint64_t (*)(uint64_t))type metadata accessor for CastOperation, (uint64_t)&unk_242C5AD38);
  sub_242A66290(*(_QWORD *)(v18 + 16) + 168, (uint64_t)v34);
  OUTLINED_FUNCTION_13_40(v29, v30, (uint64_t)v34, v10);
LABEL_17:
  OUTLINED_FUNCTION_13_11();
}

void Tensor.expandingShape(at:)()
{
  OUTLINED_FUNCTION_76_8();
  Tensor.expandingShape(at:)();
  OUTLINED_FUNCTION_30_5();
}

void Tensor.squeezingShape(at:)()
{
  OUTLINED_FUNCTION_76_8();
  Tensor.squeezingShape(at:)();
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.expandingShape(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152);
  OUTLINED_FUNCTION_0_2();
  sub_242C35154();
  v1 = OUTLINED_FUNCTION_136();
  if (!v13)
  {
    OUTLINED_FUNCTION_5();
    sub_242C48C38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_22();
    OUTLINED_FUNCTION_91_3();
  }
  OUTLINED_FUNCTION_44_17(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15);
  return OUTLINED_FUNCTION_31_31();
}

void sub_242B5D9C8()
{
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_7_41();
  OUTLINED_FUNCTION_91_3();
}

void sub_242B5D9E8()
{
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_6_54();
  __break(1u);
}

uint64_t Tensor.squeezingShape(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152);
  OUTLINED_FUNCTION_0_2();
  sub_242C35288();
  v1 = OUTLINED_FUNCTION_136();
  if (!v13)
  {
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_122_4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_22();
    OUTLINED_FUNCTION_91_3();
  }
  OUTLINED_FUNCTION_44_17(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15);
  return OUTLINED_FUNCTION_31_31();
}

void sub_242B5DAC0()
{
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_7_41();
  OUTLINED_FUNCTION_91_3();
}

void sub_242B5DAE0()
{
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_6_54();
  __break(1u);
}

void Tensor.init(stacking:alongAxis:scalarType:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_17_17();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_89_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_47_13();
  v12 = *v3;
  v13 = *(_QWORD *)(v7 + 16);
  if (v13 == 1)
  {
    v14 = *(_QWORD *)(v7 + 32);
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_3_6();
    v30 = v14;
    Tensor.expandingShape(at:)();
    OUTLINED_FUNCTION_28_5();
    v15 = v27;
    if ((_DWORD)v12 != 13)
    {
      v16 = *(unsigned __int8 *)(*(_QWORD *)(v27 + 16) + 160);
      if (v16 == (_DWORD)v12)
        goto LABEL_8;
      if (qword_2572205C0 != -1)
        swift_once();
      v17 = v12 + 13 * v16;
      if (v17 >= *(_QWORD *)(qword_257259A18 + 16))
      {
        __break(1u);
LABEL_18:
        v27 = 0;
        v28 = 0xE000000000000000;
        OUTLINED_FUNCTION_158_0();
        sub_242C48C38();
        swift_bridgeObjectRelease();
        v27 = 0xD00000000000001ELL;
        v28 = 0x8000000242C6E020;
        OUTLINED_FUNCTION_62_14();
        OUTLINED_FUNCTION_39_21();
      }
      if (*(_BYTE *)(qword_257259A18 + v17 + 32) != 13)
      {
LABEL_8:
        v30 = v27;
        LOBYTE(v29) = v12;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v1, *MEMORY[0x24BEE38B8], v10);
        OUTLINED_FUNCTION_5();
        Tensor.cast(to:roundingRule:)();
        (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v10);
        OUTLINED_FUNCTION_28_5();
        OUTLINED_FUNCTION_135();
        v15 = v27;
        goto LABEL_16;
      }
      v27 = 0;
      v28 = 0xE000000000000000;
      sub_242C48C38();
      OUTLINED_FUNCTION_27_27();
      OUTLINED_FUNCTION_47_19();
      sub_242C48314();
      LOBYTE(v30) = v12;
      OUTLINED_FUNCTION_47_19();
      sub_242C48314();
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_80_1();
LABEL_19:
      OUTLINED_FUNCTION_6_54();
      OUTLINED_FUNCTION_100_0();
    }
  }
  else
  {
    v25 = *v3;
    if (!v13)
    {
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_128_4();
      goto LABEL_19;
    }
    v30 = MEMORY[0x24BEE4AF8];
    sub_242AC3258();
    v18 = 0;
    v19 = v30;
    do
    {
      v20 = *(_QWORD *)(v7 + 8 * v18 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v21 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v21 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v21 + 32) = v5;
      v29 = *(_QWORD *)(*(_QWORD *)(v20 + 16) + 152);
      OUTLINED_FUNCTION_158_0();
      OUTLINED_FUNCTION_0_2();
      sub_242C35154();
      OUTLINED_FUNCTION_136();
      if (!v27)
        goto LABEL_18;
      v29 = v20;
      v26 = v27;
      Tensor.reshaped(to:)(&v26, &v27);
      swift_release();
      OUTLINED_FUNCTION_80();
      swift_bridgeObjectRelease();
      v22 = v27;
      v30 = v19;
      v24 = *(_QWORD *)(v19 + 16);
      v23 = *(_QWORD *)(v19 + 24);
      if (v24 >= v23 >> 1)
      {
        OUTLINED_FUNCTION_117_2(v23);
        sub_242AC3258();
        v19 = v30;
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v24 + 1;
      *(_QWORD *)(v19 + 8 * v24 + 32) = v22;
    }
    while (v13 != v18);
    OUTLINED_FUNCTION_3_6();
    LOBYTE(v30) = v25;
    Tensor.init(concatenating:alongAxis:scalarType:)();
    v15 = v27;
  }
LABEL_16:
  *v9 = v15;
  OUTLINED_FUNCTION_13_11();
}

uint64_t Tensor.reshaped(to:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  const char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(_QWORD, _QWORD);
  uint64_t *v46;
  _QWORD v47[7];
  const char *v48;
  __int128 v49;
  __int128 v50;
  const char *v51;
  uint64_t v52;
  __int16 v53;
  char v54;

  v4 = *a1;
  v5 = *v2;
  if ((sub_242C00B0C(*a1, *(_QWORD *)(*(_QWORD *)(*v2 + 16) + 152)) & 1) != 0)
  {
    *a2 = v5;
    return swift_retain();
  }
  v46 = a2;
  v7 = *(_QWORD *)(v4 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    v8 = 0;
    v9 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if ((unint64_t)v8 >= *(_QWORD *)(v4 + 16))
      {
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        v49 = 0uLL;
        v48 = v8;
        LOBYTE(v50) = -1;
        v52 = 0;
        *((_QWORD *)&v50 + 1) = v7;
LABEL_68:
        v51 = 0;
        LOBYTE(v53) = -1;
        v54 = 4;
        OUTLINED_FUNCTION_4_18();
      }
      if (*(_QWORD *)(v4 + 8 * (_QWORD)v8 + 32) == -1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_112_4(0, *(_QWORD *)(v9 + 16) + 1);
          v9 = v12;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
        {
          v13 = OUTLINED_FUNCTION_117_2(v10);
          OUTLINED_FUNCTION_112_4(v13, v11 + 1);
          v9 = v14;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        *(_QWORD *)(v9 + 8 * v11 + 32) = -1;
      }
      if ((const char *)(v7 - 1) == v8)
        break;
      if ((unint64_t)++v8 >= v7)
        goto LABEL_67;
    }
    OUTLINED_FUNCTION_35();
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v7 = *(_QWORD *)(v9 + 16);
  OUTLINED_FUNCTION_34();
  v8 = *(const char **)(v4 + 16);
  if (v8)
  {
    OUTLINED_FUNCTION_32_0();
    v15 = 0;
    v16 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if ((unint64_t)v15 >= *(_QWORD *)(v4 + 16))
        goto LABEL_63;
      v17 = *(_QWORD *)(v4 + 8 * (_QWORD)v15 + 32);
      if (v17 >= 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_111_2(0, *(_QWORD *)(v16 + 16) + 1);
          v16 = v20;
        }
        v19 = *(_QWORD *)(v16 + 16);
        v18 = *(_QWORD *)(v16 + 24);
        if (v19 >= v18 >> 1)
        {
          v21 = OUTLINED_FUNCTION_117_2(v18);
          OUTLINED_FUNCTION_111_2(v21, v19 + 1);
          v16 = v22;
        }
        *(_QWORD *)(v16 + 16) = v19 + 1;
        *(_QWORD *)(v16 + 8 * v19 + 32) = v17;
      }
      if (v8 - 1 == v15)
        break;
      if (++v15 >= v8)
      {
        v49 = 0uLL;
        v48 = v15;
        LOBYTE(v50) = -1;
        v52 = 0;
        *((_QWORD *)&v50 + 1) = v8;
        goto LABEL_68;
      }
    }
    OUTLINED_FUNCTION_35();
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  v23 = *(_QWORD *)(v16 + 16);
  if (v23)
  {
    v24 = 0;
    v25 = 1;
    do
    {
      v26 = *(_QWORD *)(v16 + 8 * v24 + 32);
      if ((unsigned __int128)(v25 * (__int128)v26) >> 64 != (v25 * v26) >> 63)
        goto LABEL_64;
      v25 *= v26;
      ++v24;
    }
    while (v23 != v24);
    OUTLINED_FUNCTION_81();
    if (v7 > 1)
      goto LABEL_69;
    if (v7 == 1)
      goto LABEL_37;
  }
  else
  {
    OUTLINED_FUNCTION_81();
    if (v7 > 1)
      goto LABEL_69;
    v25 = 1;
    if (v7 == 1)
    {
LABEL_37:
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 152);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v29 = (uint64_t *)(v27 + 32);
        v30 = 1;
        do
        {
          v31 = *v29++;
          v32 = v30 * v31;
          if ((unsigned __int128)(v30 * (__int128)v31) >> 64 != (v30 * v31) >> 63)
            goto LABEL_65;
          v30 = v32;
          --v28;
        }
        while (v28);
        if (v25 == -1)
          goto LABEL_57;
        if (!v25)
        {
LABEL_56:
          if (!v30)
            goto LABEL_57;
          goto LABEL_69;
        }
      }
      else
      {
        if (v25 == -1)
        {
LABEL_57:
          OUTLINED_FUNCTION_11();
          sub_242B5C340(v4, v5, v25);
          v41 = v40;
          OUTLINED_FUNCTION_35();
          v33 = *(_QWORD *)(v5 + 16);
          v34 = *(_QWORD *)(v33 + 152);
          v4 = v41;
          goto LABEL_59;
        }
        if (!v25)
        {
LABEL_69:
          OUTLINED_FUNCTION_24_0();
          OUTLINED_FUNCTION_80_1();
          result = OUTLINED_FUNCTION_6_54();
          __break(1u);
          return result;
        }
        v30 = 1;
      }
      v30 %= v25;
      goto LABEL_56;
    }
  }
  v33 = *(_QWORD *)(v5 + 16);
  v34 = *(_QWORD *)(v33 + 152);
  v35 = *(_QWORD *)(v34 + 16);
  if (v35)
  {
    v36 = 0;
    v37 = 1;
    do
    {
      v38 = *(_QWORD *)(v34 + 8 * v36 + 32);
      v39 = v37 * v38;
      if ((unsigned __int128)(v37 * (__int128)v38) >> 64 != (v37 * v38) >> 63)
        goto LABEL_66;
      ++v36;
      v37 *= v38;
    }
    while (v35 != v36);
    if (v39 == v25)
      goto LABEL_59;
    goto LABEL_69;
  }
  if (v25 != 1)
    goto LABEL_69;
LABEL_59:
  if ((sub_242C00B0C(v4, v34) & 1) != 0)
  {
    OUTLINED_FUNCTION_35();
    *v46 = v5;
    return OUTLINED_FUNCTION_11();
  }
  else
  {
    v47[0] = v4;
    v42 = *(_QWORD *)(v33 + 152);
    *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v42;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_0_2();
    sub_242BD0D40((uint64_t)sub_242B63AE4);
    OUTLINED_FUNCTION_28_5();
    v48 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
    v49 = xmmword_242C55120;
    v50 = xmmword_242C583C0;
    v51 = "init(id:operand:shape:creationSite:backward:)";
    v52 = 45;
    v53 = 2;
    type metadata accessor for ReshapeOperation();
    OUTLINED_FUNCTION_2_0();
    sub_242B9DE24();
    v44 = v43;
    v45 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257228238, (uint64_t (*)(uint64_t))type metadata accessor for ReshapeOperation, (uint64_t)&unk_242C5AD1C);
    sub_242A66290(*(_QWORD *)(v5 + 16) + 168, (uint64_t)v47);
    return OUTLINED_FUNCTION_13_40(v44, v45, (uint64_t)v47, v46);
  }
}

uint64_t sub_242B5E498@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[7];
  const char *v25;
  __int128 v26;
  __int128 v27;
  const char *v28;
  uint64_t v29;
  char v30;

  v4 = *a1;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 16);
  if ((sub_242C00B0C(*a1, *(_QWORD *)(v6 + 152)) & 1) != 0)
  {
    *a2 = v5;
    return OUTLINED_FUNCTION_66_13();
  }
  else
  {
    v8 = *(_QWORD *)(v4 + 16);
    v9 = *(_QWORD *)(v6 + 152);
    if (*(_QWORD *)(v9 + 16) == v8)
    {
      *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v9;
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_126_3((uint64_t)sub_242B63CA8);
      OUTLINED_FUNCTION_17_1();
      v25 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/UnaryArithmeticOps.swift";
      *(_QWORD *)&v26 = 120;
      BYTE8(v26) = 2;
      v27 = xmmword_242C4C810;
      v28 = "init(id:operator:operand:creationSite:backward:)";
      v29 = 48;
      v30 = 2;
      type metadata accessor for UnaryArithmeticOperation();
      v10 = type metadata accessor for UnaryArithmeticOperation;
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_48_20();
      OUTLINED_FUNCTION_77_7();
      v19 = sub_242ABCF44(v11, v12, v13, v14, v15, v16, v17, v18);
      v20 = (unint64_t *)&qword_2572216C8;
      v21 = &unk_242C54FA0;
    }
    else
    {
      v24[0] = *(_QWORD *)(v6 + 152);
      static ShapeInference.broadcasting(_:toRank:)((uint64_t)v24, v8, &v25);
      if (!v25)
      {
        v25 = 0;
        *(_QWORD *)&v26 = 0xE000000000000000;
        OUTLINED_FUNCTION_122_4();
        swift_bridgeObjectRelease();
        v25 = (const char *)0xD00000000000001BLL;
        *(_QWORD *)&v26 = 0x8000000242C6EA00;
        OUTLINED_FUNCTION_62_14();
        OUTLINED_FUNCTION_39_21();
      }
      v24[0] = v25;
      *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v9;
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_126_3((uint64_t)sub_242B63C90);
      OUTLINED_FUNCTION_17_1();
      v25 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransf"
            "ormationOps.swift";
      v26 = xmmword_242C55120;
      OUTLINED_FUNCTION_65_13();
      type metadata accessor for ReshapeOperation();
      v10 = type metadata accessor for ReshapeOperation;
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_46_18();
      OUTLINED_FUNCTION_77_7();
      sub_242B9DE24();
      v19 = v22;
      v20 = &qword_257228238;
      v21 = &unk_242C5AD1C;
    }
    v23 = sub_242A8A510(v20, (uint64_t (*)(uint64_t))v10, (uint64_t)v21);
    OUTLINED_FUNCTION_63_14(v23);
    return OUTLINED_FUNCTION_13_40(v19, (uint64_t (**)(_QWORD, _QWORD))v10, (uint64_t)v24, a2);
  }
}

void sub_242B5E6F4()
{
  sub_242C48314();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_81();
  sub_242C48314();
  sub_242C491CC();
  sub_242C48314();
  OUTLINED_FUNCTION_4_0();
  sub_242C48314();
  OUTLINED_FUNCTION_3_53();
  sub_242A59264();
}

uint64_t Tensor.replacing(with:where:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (**v59)(_QWORD, _QWORD);
  uint64_t inited;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE v130[40];
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  char v134;
  char v135;

  v4 = *a2;
  v5 = *(_QWORD *)(*a2 + 16);
  if (*(_BYTE *)(v5 + 160) != 12)
  {
    OUTLINED_FUNCTION_98_4();
    *(_QWORD *)v130 = v62;
    *(_QWORD *)&v130[8] = v63;
    *(_OWORD *)&v130[16] = xmmword_242C583D0;
    v130[32] = 0;
    v131 = 12;
    LOBYTE(v132) = 0;
    v135 = 3;
    OUTLINED_FUNCTION_3_53();
    goto LABEL_6;
  }
  v6 = *a1;
  v83 = *v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(unsigned __int8 *)(v7 + 160);
  v9 = *(_QWORD *)(*a1 + 16);
  if (v8 != *(unsigned __int8 *)(v9 + 160))
  {
    OUTLINED_FUNCTION_98_4();
    v65 = v64;
    v67 = v66;
    OUTLINED_FUNCTION_98_4();
    *(_QWORD *)v130 = v65;
    *(_QWORD *)&v130[8] = v67;
    *(_OWORD *)&v130[16] = 0uLL;
    v130[32] = 6;
    v131 = v68;
    v132 = v69;
    v133 = xmmword_242C583E0;
    v134 = 0;
    v135 = 0;
    OUTLINED_FUNCTION_3_53();
LABEL_6:
    sub_242A59264();
  }
  v10 = *(_QWORD *)(v9 + 152);
  *(_OWORD *)v130 = xmmword_242C583E0;
  v130[16] = 0;
  v11 = *(_QWORD *)(v7 + 152);
  LOBYTE(v129) = v10;
  LOBYTE(v123) = 6;
  OUTLINED_FUNCTION_78_6();
  v20 = OUTLINED_FUNCTION_59_13(v12, v13, v14, v15, v16, v17, v18, v19, 114, v72, v76, v80, v83, a3, v93, v97, v101, v105, v109,
          v113,
          v117,
          0,
          0,
          v123,
          v124,
          v125,
          v126,
          v127,
          v11,
          v129);
  requireBroadcastableShape(_:from:to:from:function:file:line:)((uint64_t)v20, v21, v22, v23);
  LOBYTE(v129) = *(_QWORD *)(v5 + 152);
  *(_QWORD *)&v130[8] = 0xE400000000000000;
  v130[16] = 0;
  LOBYTE(v123) = 6;
  OUTLINED_FUNCTION_78_6();
  v32 = OUTLINED_FUNCTION_59_13(v24, v25, v26, v27, v28, v29, v30, v31, 114, v73, v77, v81, v84, v89, v94, v98, v102, v106, v110,
          v114,
          v118,
          0,
          0,
          v123,
          v124,
          v125,
          v126,
          v127,
          v11,
          v129);
  v36 = requireBroadcastableShape(_:from:to:from:function:file:line:)((uint64_t)v32, v33, v34, v35);
  v44 = OUTLINED_FUNCTION_58_9(v36, v37, v38, v39, v40, v41, v42, v43, v70, v74, v78, v82, v85, v90, v95, v99, v103, v107, v111,
          v115,
          v119,
          v4,
          v122,
          v123,
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          1802723693);
  v45 = *(_QWORD *)v130;
  OUTLINED_FUNCTION_58_9(v44, v46, v47, v48, v49, v50, v51, v52, v71, v75, v79, *(uint64_t *)v130, v86, v91, v96, v100, v104, v108, v112,
    v116,
    v120,
    v6,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128,
    v129,
    *(uint64_t *)v130);
  v53 = *(_QWORD *)(v45 + 16);
  v54 = *(_QWORD *)(*(_QWORD *)v130 + 16);
  v121 = v11;
  LOBYTE(v122) = v8;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_123_0();
  sub_242C480E0();
  v55 = sub_242BD0D40((uint64_t)sub_242B5FE24);
  v57 = v56;
  *(_OWORD *)&v130[8] = xmmword_242C4CA40;
  *(_OWORD *)&v130[24] = xmmword_242C583F0;
  *(_QWORD *)v130 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SelectOp.swift";
  v131 = (uint64_t)"init(id:conditionOperand:trueOperand:falseOperand:resultDescriptor:creationSite:backward:)";
  v132 = 90;
  LOWORD(v133) = 2;
  type metadata accessor for SelectOperation();
  OUTLINED_FUNCTION_2_0();
  v58 = sub_242A8E840(0, 0, 0, v53, v54, v7, &v121, (uint64_t)v130, v55, v57);
  v59 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510((unint64_t *)&qword_257220D10, (uint64_t (*)(uint64_t))type metadata accessor for SelectOperation, (uint64_t)&unk_242C4E4F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B810;
  *(_QWORD *)(inited + 32) = v87;
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v4;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_54_11(inited, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/TensorTransformations.swift", 114, 2, 364, (uint64_t)"replacing(with:where:)", 22);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_13_40(v58, v59, (uint64_t)&v121, v92);
  OUTLINED_FUNCTION_8_1();
  swift_release();
  return swift_release();
}

uint64_t Tensor.bandPart(lowerBandCount:upperBandCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(_QWORD, _QWORD);
  _BYTE v21[56];

  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (*(_QWORD *)(*(_QWORD *)(v6 + 152) + 16) < 2uLL)
  {
    OUTLINED_FUNCTION_3_53();
    sub_242A59264();
  }
  v9 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  OUTLINED_FUNCTION_11();
  v10 = sub_242BD0D40((uint64_t)sub_242B63AF8);
  v12 = v11;
  OUTLINED_FUNCTION_135();
  type metadata accessor for BandPartOperation();
  OUTLINED_FUNCTION_2_0();
  v13 = OUTLINED_FUNCTION_48_20();
  sub_242B9FBB8(v13, v14, v15, v6, a1, a2, v16, v10, v12);
  v18 = v17;
  v19 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_2572281E8, (uint64_t (*)(uint64_t))type metadata accessor for BandPartOperation, (uint64_t)&unk_242C5ACE4);
  sub_242A66290(*(_QWORD *)(v5 + 16) + 168, (uint64_t)v21);
  return OUTLINED_FUNCTION_13_40(v18, v19, (uint64_t)v21, a3);
}

void Tensor.cast(to:roundingRule:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char v3;
  uint64_t v4;

  v4 = *v2;
  (*(void (**)(char *__return_ptr))(a2 + 32))(&v3);
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242B5ED00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_242C49208();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v11 = *(_QWORD *)(a1 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
      v18 = v11;
      v17 = a3;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE38B8], v6);
      swift_retain();
      swift_retain();
      Tensor.cast(to:roundingRule:)(&v19, &v17, v10);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v13 = v19;
      swift_retain();
      v14 = sub_242AC4964();
      *(_QWORD *)(v12 + 32) = v13;
      *(_QWORD *)(v12 + 40) = v14;
      *(_QWORD *)(v12 + 48) = v15;
      swift_release();
      swift_release();
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242B5EE48()
{
  swift_retain();
  sub_242A9F52C();
  return swift_release();
}

uint64_t sub_242B5EEA4()
{
  return sub_242B5EE48();
}

uint64_t sub_242B5EEC4()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242B5EED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B5ED00(a1, a2, *(_BYTE *)(v2 + 16));
}

const float *sub_242B5EED8(const float *result, uint64_t a2, uint64_t a3, float *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;

  v8 = *(_QWORD *)(a3 + 16);
  v16 = *(_BYTE *)(v8 + 160);
  v15 = a6;
  v9 = *(_QWORD *)(v8 + 152);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v9 + 32);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v10)
        return (const float *)sub_242AB0FE8(result, a2, &v16, a4, a5, &v15, v14, a7);
    }
    __break(1u);
  }
  else
  {
    v14 = 1;
    return (const float *)sub_242AB0FE8(result, a2, &v16, a4, a5, &v15, v14, a7);
  }
  return result;
}

uint64_t Tensor.cast(like:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = OUTLINED_FUNCTION_370();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *a1;
  v11 = *v1;
  v10[7] = *(_BYTE *)(*(_QWORD *)(v8 + 16) + 160);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, *MEMORY[0x24BEE38B8], v3, v5);
  Tensor.cast(to:roundingRule:)();
  return OUTLINED_FUNCTION_45_0((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t Tensor.reshaped(toRank:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *v2;
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 152);
  v6 = *(_QWORD *)(v5 + 16);
  if (a1 == v6)
  {
    result = OUTLINED_FUNCTION_91();
LABEL_23:
    *a2 = v4;
    return result;
  }
  if (a1 > (uint64_t)v6)
  {
    v24 = v4;
    sub_242BC0874(1, a1 - v6);
    v23 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_74();
    sub_242B65064();
    sub_242B65310(v5, v8);
    OUTLINED_FUNCTION_34();
    v22 = v23;
    v9 = &v22;
LABEL_22:
    Tensor.reshaped(to:)(v9, &v25);
    result = OUTLINED_FUNCTION_34();
    v4 = v25;
    goto LABEL_23;
  }
  v10 = v6 - a1;
  if (__OFSUB__(v6, a1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v10 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v11 = sub_242AD5D84(0, v10, *(_QWORD *)(v5 + 16));
  if ((v12 & 1) != 0)
    v13 = v6;
  else
    v13 = v11;
  if ((v13 & 0x8000000000000000) != 0)
    goto LABEL_26;
  if (v6 < v13)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_104_4();
  sub_242A5B894();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = 0;
    while (*(_QWORD *)(v14 + 8 * v16 + 32) == 1)
    {
      if (v15 == ++v16)
        goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v24 = v4;
  v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) + 152) + 16);
  v18 = sub_242AD5D84(0, v10, v17);
  if ((v19 & 1) != 0)
    v20 = v17;
  else
    v20 = v18;
  if (v17 >= v20)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_0_2();
      sub_242A5B894();
      v23 = v21;
      v9 = &v23;
      goto LABEL_22;
    }
    goto LABEL_29;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_128_4();
  result = OUTLINED_FUNCTION_6_54();
  __break(1u);
  return result;
}

void Tensor.reshaped(like:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_80_9(a1, v1, v2);
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242B5F228(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  uint64_t v10;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v4 = *(_QWORD *)(result + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_242C4B7D0;
      v9[0] = a3;
      v9[1] = v4;
      swift_retain();
      swift_retain();
      Tensor.reshaped(to:)(&v10, v9);
      v6 = v10;
      swift_retain();
      v7 = sub_242AC4964();
      *(_QWORD *)(v5 + 32) = v6;
      *(_QWORD *)(v5 + 40) = v7;
      *(_QWORD *)(v5 + 48) = v8;
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void Tensor.flattened()(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_80_9(a1, v1, v2);
  OUTLINED_FUNCTION_30_5();
}

void Tensor.rankLifted()()
{
  Tensor.expandingShape(at:)();
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.broadcasted(to:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)(_QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[8];
  __int128 v21;

  v4 = *a1;
  v5 = *v2;
  if ((sub_242C00B0C(*a1, *(_QWORD *)(*(_QWORD *)(*v2 + 16) + 152)) & 1) != 0)
  {
    *a2 = v5;
    return swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 16);
    v20[0] = v4;
    v8 = *(_QWORD *)(v7 + 152);
    *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v8;
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_37_0();
    v9 = (uint64_t (**)(_QWORD, _QWORD))sub_242BD0D40((uint64_t)sub_242B63CA8);
    v11 = v10;
    OUTLINED_FUNCTION_13_0();
    v20[7] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTrans"
             "formationOps.swift";
    v21 = xmmword_242C55120;
    OUTLINED_FUNCTION_65_13();
    type metadata accessor for BroadcastOperation();
    OUTLINED_FUNCTION_2_0();
    v12 = OUTLINED_FUNCTION_46_18();
    v18 = sub_242B9DF44(v12, v13, v14, v15, v16, v17, (uint64_t)v9, v11);
    v19 = sub_242A8A510(&qword_257228230, (uint64_t (*)(uint64_t))type metadata accessor for BroadcastOperation, (uint64_t)&unk_242C5ACC8);
    OUTLINED_FUNCTION_63_14(v19);
    return OUTLINED_FUNCTION_13_40(v18, v9, (uint64_t)v20, a2);
  }
}

uint64_t sub_242B5F488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[2];
  uint64_t v13[3];
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
LABEL_7:
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_8_1();
    v13[1] = 0;
    v13[2] = 0;
    v13[0] = v4;
    v14 = -1;
    v16 = 0;
    v17 = 0;
    v15 = v3;
    v18 = -1;
    v19 = 8;
    OUTLINED_FUNCTION_3_53();
    sub_242A59264();
  }
  v4 = a3;
  v5 = *(_QWORD *)(a1 + 32);
  v13[0] = a3;
  v3 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 152);
  v20 = v3;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_5();
  v6 = static ShapeInference.broadcastingAxes(_:_:)(v13, &v20);
  if (!v6)
    goto LABEL_7;
  swift_bridgeObjectRelease();
  v13[0] = v5;
  Tensor.sum(alongAxes:)(v6, &v20);
  OUTLINED_FUNCTION_81();
  v12[0] = v4;
  v12[1] = v20;
  Tensor.reshaped(to:)(v12, v13);
  OUTLINED_FUNCTION_17_5();
  v7 = v13[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
  v8 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_10();
  v9 = sub_242AC4964();
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 48) = v10;
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_135();
  return v8;
}

uint64_t Tensor.selecting(where:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  char v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  if (*(_BYTE *)(v3 + 160) != 12)
  {
    sub_242C21A14();
    *(_QWORD *)&v15 = v9;
    *((_QWORD *)&v15 + 1) = v10;
    v16 = xmmword_242C583D0;
    v17 = 0;
    v18 = 12;
    v19 = 0;
    v20 = 3;
    OUTLINED_FUNCTION_3_53();
    sub_242A59264();
  }
  v4 = *v1;
  v5 = *(_QWORD *)(v3 + 152);
  v15 = xmmword_242C583D0;
  LOBYTE(v16) = 0;
  v13 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 152);
  v6 = v13;
  v14 = v5;
  v11[0] = 0;
  v11[1] = 0;
  v12 = 6;
  OUTLINED_FUNCTION_78_6();
  requireBroadcastableShape(_:from:to:from:function:file:line:)((uint64_t)&v14, (uint64_t)&v15, (uint64_t)&v13, (uint64_t)v11);
  v11[0] = v2;
  v14 = v6;
  Tensor.broadcasted(to:)(&v14, (uint64_t *)&v15);
  v11[0] = v4;
  v14 = v15;
  sub_242B5F758(&v14, (uint64_t)&v15);
  v7 = v15;
  *(_QWORD *)&v15 = v4;
  v11[0] = v7;
  Tensor.gatheringND(atIndices:batchDimensionCount:)();
  OUTLINED_FUNCTION_17_1();
  return swift_release();
}

uint64_t sub_242B5F758@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[6];
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[13];
  _QWORD v32[7];
  const char *v33;
  __int128 v34;
  __int128 v35;
  const char *v36;
  uint64_t v37;
  __int16 v38;

  v25 = a2;
  v4 = sub_242C49208();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  v27[0] = *a1;
  v9 = v27[0];
  LOBYTE(v32[0]) = 2;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x24BEE38B8], v4, v6);
  Tensor.cast(to:roundingRule:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v32[0] = v33;
  Tensor.sum()();
  swift_release();
  v11 = sub_242B6E624();
  swift_release();
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(*(_QWORD *)(v12 + 152) + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v14 = swift_allocObject();
  v24 = xmmword_242C4B7F0;
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v14 + 32) = v11;
  *(_QWORD *)(v14 + 40) = v13;
  v27[0] = v14;
  LOBYTE(v27[1]) = 2;
  v34 = xmmword_242C55120;
  v35 = xmmword_242C58410;
  v33 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v36 = "init(id:operand:resultDescriptor:creationSite:)";
  v37 = 47;
  v38 = 2;
  type metadata accessor for NonZeroIndicesOperation();
  swift_allocObject();
  swift_retain();
  sub_242B9F9B0(0, 0, 0, v12, v27);
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v24;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242B76A50(inited, "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/TensorTransformations.swift", 114, 2, 315, "nonZeroIndices(mask:)", 21, 2);
  swift_setDeallocating();
  sub_242B71334();
  sub_242A66290((uint64_t)v32, (uint64_t)v31);
  type metadata accessor for ContextManager();
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v27);
  swift_release();
  v18 = v30;
  swift_retain();
  sub_242A5DC30((uint64_t)v27);
  sub_242B93328();
  sub_242B933C0((uint64_t)v27);
  swift_release();
  v19 = v29;
  swift_retain();
  sub_242A5DC30((uint64_t)v27);
  type metadata accessor for TensorRepresentation();
  v20 = swift_allocObject();
  LOBYTE(v27[0]) = 1;
  v21 = sub_242B4D1B0(v16, 0, v31, 0x100000000, v18, v19, v20);
  type metadata accessor for TensorHandle();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  swift_retain();
  sub_242BC995C();
  swift_release();
  swift_release();
  sub_242A662D8((uint64_t)v32);
  v31[0] = v22;
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  sub_242A66290((uint64_t)v27, (uint64_t)v32);
  sub_242A8E108(MEMORY[0x24BEE4AF8], (uint64_t)&unk_25137D278, (uint64_t)v32, &v26);
  sub_242A662D8((uint64_t)v27);
  v27[0] = v26;
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

void Tensor.gatheringND(atIndices:batchDimensionCount:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _BOOL8 v13;
  const char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (**v25)(_QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  char v36;
  const char *v37;
  __int128 v38;
  __int128 v39;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v33 = v8;
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_89_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_58_0();
  v10 = *v7;
  v11 = *v1;
  v12 = OUTLINED_FUNCTION_99_4();
  v13 = OUTLINED_FUNCTION_41_25((uint64_t)v12);
  OUTLINED_FUNCTION_80();
  if (!v13)
  {
    OUTLINED_FUNCTION_72_8();
    OUTLINED_FUNCTION_31_13();
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    v37 = (const char *)v0;
    *(_QWORD *)&v38 = v1;
    OUTLINED_FUNCTION_4_49(v32, (__n128)xmmword_242C57990);
    OUTLINED_FUNCTION_3_53();
    sub_242A59264();
  }
  v34 = v10;
  v36 = 2;
  OUTLINED_FUNCTION_69_9(*MEMORY[0x24BEE38B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  OUTLINED_FUNCTION_56_13();
  OUTLINED_FUNCTION_45_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v14 = v37;
  v15 = *(_QWORD *)(v11 + 16);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_11_6();
  sub_242B60E5C(v10, v5, v11, &v34);
  v35 = *(_BYTE *)(v15 + 160);
  *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v5;
  sub_242BD0D40((uint64_t)sub_242B63B0C);
  OUTLINED_FUNCTION_86_5();
  v37 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v38 = xmmword_242C55120;
  v39 = xmmword_242C58420;
  OUTLINED_FUNCTION_74_8((uint64_t)"init(id:operator:operand:indices:resultDescriptor:creationSite:backward:)");
  OUTLINED_FUNCTION_2_0();
  v16 = OUTLINED_FUNCTION_82_6();
  OUTLINED_FUNCTION_93_5(v16, v17, v18, v19, v20, 2, v21, v22, &v34, (uint64_t)&v37, v3, v13);
  v24 = v23;
  v25 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257228218, (uint64_t (*)(uint64_t))type metadata accessor for GatherOperation, (uint64_t)&unk_242C5ACAC);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v26 = OUTLINED_FUNCTION_131_4();
  *(_OWORD *)(v26 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v26 + 32) = v11;
  *(_QWORD *)(v26 + 40) = v14;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_11();
  v27 = OUTLINED_FUNCTION_16_33();
  OUTLINED_FUNCTION_54_11(v27, v28, v29, v30, 504, v31, 43);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_13_40(v24, v25, (uint64_t)&v34, v33);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_13_11();
}

uint64_t Tensor.nonZeroIndices()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7[6];
  char v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[3];
  int v12;
  uint64_t v13;

  v13 = *v1;
  v3 = v13;
  v4 = *(_BYTE *)(*(_QWORD *)(v13 + 16) + 160);
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  v9 = MEMORY[0x24BEE4AF8];
  v8 = v4;
  sub_242A66290((uint64_t)v11, (uint64_t)v7);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v11);
  v7[0] = v10;
  static Tensor..!= infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v5 = *(_QWORD *)&v11[0];
  *(_QWORD *)&v11[0] = v3;
  v7[0] = v5;
  sub_242B5F758(v7, a1);
  return OUTLINED_FUNCTION_28_5();
}

uint64_t sub_242B5FE24(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v2 == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 3)
  {
    v4 = *(_QWORD *)(a2 + 32);
    v15 = *(_QWORD *)(result + 32);
    v3 = v15;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    Tensor.init(zerosLike:)(&v15, &v16);
    v5 = v16;
    v14 = v16;
    v15 = v3;
    v13 = v4;
    Tensor.replacing(with:where:)(&v16, &v14, &v13);
    v6 = v16;
    v14 = v3;
    v15 = v5;
    v13 = v4;
    Tensor.replacing(with:where:)(&v16, &v14, &v13);
    v7 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_242C4B7F0;
    swift_retain();
    swift_retain();
    v9 = sub_242AC4964();
    *(_QWORD *)(v8 + 32) = v7;
    *(_QWORD *)(v8 + 40) = v9;
    *(_QWORD *)(v8 + 48) = v10;
    swift_retain();
    swift_retain();
    v11 = sub_242AC4964();
    *(_QWORD *)(v8 + 56) = v6;
    *(_QWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 72) = v12;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v8;
  }
LABEL_9:
  __break(1u);
  return result;
}

void Tensor.gathering(atIndices:alongAxis:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  void *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  const char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)(_QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  const char *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_115_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_58_0();
  v10 = *v6;
  v11 = *v0;
  v12 = *(_BYTE *)(*(_QWORD *)(v10 + 16) + 160);
  v13 = static ScalarType.integerTypes.getter();
  v14 = sub_242B64794(v12, (uint64_t)v13);
  OUTLINED_FUNCTION_136();
  if (!v14)
  {
    OUTLINED_FUNCTION_72_8();
    OUTLINED_FUNCTION_31_13();
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    v44 = (const char *)v10;
    *(_QWORD *)&v45 = v13;
    OUTLINED_FUNCTION_4_49(v40, (__n128)xmmword_242C57990);
    OUTLINED_FUNCTION_3_53();
    goto LABEL_11;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 16) + 152) + 16);
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 16) + 152) + 16);
  if (v15 != v16)
  {
    v44 = *(const char **)(*(_QWORD *)(*(_QWORD *)(v10 + 16) + 152) + 16);
    v45 = xmmword_242C57990;
    LOBYTE(v46) = 0;
    v47 = 0;
    v48 = 0;
    *((_QWORD *)&v46 + 1) = v16;
    v49 = 6;
    v50 = 6;
    OUTLINED_FUNCTION_3_53();
    goto LABEL_11;
  }
  if (-v15 > v4 || v15 <= v4)
  {
    v44 = (const char *)v4;
    OUTLINED_FUNCTION_42_21(v15, (__n128)xmmword_242C57990);
    OUTLINED_FUNCTION_24_30();
LABEL_11:
    sub_242A59264();
  }
  v18 = (v15 & (v4 >> 63)) + v4;
  v41 = v10;
  v43 = 2;
  OUTLINED_FUNCTION_69_9(*MEMORY[0x24BEE38B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  OUTLINED_FUNCTION_56_13();
  OUTLINED_FUNCTION_45_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v19 = v44;
  v20 = *(_BYTE *)(*(_QWORD *)(v11 + 16) + 160);
  v41 = *(_QWORD *)(*((_QWORD *)v44 + 2) + 152);
  v42 = v20;
  *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v18;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_11_6();
  sub_242C480E0();
  v21 = sub_242BD0D40((uint64_t)sub_242B63B38);
  v23 = v22;
  OUTLINED_FUNCTION_157_0();
  v44 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v45 = xmmword_242C55120;
  v46 = xmmword_242C58420;
  OUTLINED_FUNCTION_74_8((uint64_t)"init(id:operator:operand:indices:resultDescriptor:creationSite:backward:)");
  OUTLINED_FUNCTION_2_0();
  v24 = OUTLINED_FUNCTION_82_6();
  OUTLINED_FUNCTION_93_5(v24, v25, v26, v27, v28, 0, v29, v30, &v41, (uint64_t)&v44, v21, v23);
  v32 = v31;
  v33 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257228218, (uint64_t (*)(uint64_t))type metadata accessor for GatherOperation, (uint64_t)&unk_242C5ACAC);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v34 = OUTLINED_FUNCTION_131_4();
  *(_OWORD *)(v34 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v34 + 32) = v11;
  *(_QWORD *)(v34 + 40) = v19;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v35 = OUTLINED_FUNCTION_16_33();
  OUTLINED_FUNCTION_54_11(v35, v36, v37, v38, 409, v39, 31);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_13_40(v32, v33, (uint64_t)&v41, v8);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_13_11();
}

void sub_242B602C4()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(_QWORD, _QWORD);
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  const char *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v45 = v11;
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_47_13();
  v13 = *v10;
  v46 = *v8;
  v14 = *v6;
  v15 = *v2;
  v16 = OUTLINED_FUNCTION_99_4();
  v17 = OUTLINED_FUNCTION_41_25((uint64_t)v16);
  OUTLINED_FUNCTION_80();
  if (!v17)
  {
    OUTLINED_FUNCTION_72_8();
    OUTLINED_FUNCTION_31_13();
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    v50 = (const char *)v13;
    *(_QWORD *)&v51 = v2;
    OUTLINED_FUNCTION_4_49(v44, (__n128)xmmword_242C57990);
    OUTLINED_FUNCTION_3_53();
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v46 + 16) + 152) + 16);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 16) + 152) + 16) != v18)
  {
    v50 = *(const char **)(*(_QWORD *)(*(_QWORD *)(v13 + 16) + 152) + 16);
    v51 = xmmword_242C57990;
    LOBYTE(v52) = 0;
    v53 = 0;
    v54 = 0;
    *((_QWORD *)&v52 + 1) = v18;
    v55 = 6;
    v56 = 6;
    OUTLINED_FUNCTION_3_53();
    goto LABEL_11;
  }
  v47 = v13;
  v49 = 2;
  OUTLINED_FUNCTION_71_7(*MEMORY[0x24BEE38B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  OUTLINED_FUNCTION_26_32();
  OUTLINED_FUNCTION_70_12(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v19 = *(_QWORD *)(v46 + 16);
  v20 = *(_QWORD *)(*(_QWORD *)(v19 + 152) + 16);
  if (-v20 > v4 || v20 <= v4)
  {
    v51 = 0uLL;
    v50 = (const char *)v4;
    LOBYTE(v52) = -1;
    v53 = 0;
    v54 = 0;
    *((_QWORD *)&v52 + 1) = v20;
    v55 = -1;
    v56 = 4;
    OUTLINED_FUNCTION_24_30();
LABEL_11:
    sub_242A59264();
  }
  v22 = v50;
  v23 = (v20 & (v4 >> 63)) + v4;
  v24 = *(_QWORD *)(v14 + 16);
  v25 = *((_QWORD *)v50 + 2);
  v49 = v15;
  v26 = *(_BYTE *)(v24 + 160);
  v47 = *(_QWORD *)(v24 + 152);
  v48 = v26;
  v27 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v27 + 16) = v15;
  *(_QWORD *)(v27 + 24) = v23;
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_91();
  sub_242C480E0();
  v28 = sub_242BD0D40((uint64_t)sub_242B63C60);
  v30 = v29;
  swift_release();
  v50 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v51 = xmmword_242C55120;
  v52 = xmmword_242C58430;
  OUTLINED_FUNCTION_132_2((uint64_t)"init(id:operator:data:indices:updates:reductionKind:resultDescriptor:creationSite:backward:)");
  type metadata accessor for ScatterOperation();
  OUTLINED_FUNCTION_2_0();
  v31 = OUTLINED_FUNCTION_48_20();
  sub_242B9EB8C(v31, v32, v33, v23, 0, v24, v25, v19, &v49, &v47, (uint64_t)&v50, v28, v30);
  v35 = v34;
  v37 = (uint64_t (**)(_QWORD, _QWORD))OUTLINED_FUNCTION_113_4(&qword_257228210, v36, (uint64_t)&unk_242C5AC90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B810;
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(inited + 40) = v46;
  *(_QWORD *)(inited + 48) = v22;
  swift_retain();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_10();
  v39 = OUTLINED_FUNCTION_16_33();
  OUTLINED_FUNCTION_54_11(v39, v40, v41, v42, 575, v43, 53);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_13_40(v35, v37, (uint64_t)&v47, v45);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_11();
}

void Tensor.batchGathering(atIndices:alongAxis:batchDimensionCount:)()
{
  uint64_t *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  void *v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)(_QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  char v56;
  char v57;
  const char *v58;
  __int128 v59;
  __int128 v60;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v54 = v9;
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_47_13();
  v11 = *v8;
  v12 = *v0;
  v13 = *(_BYTE *)(*(_QWORD *)(v11 + 16) + 160);
  v14 = static ScalarType.integerTypes.getter();
  v15 = sub_242B64794(v13, (uint64_t)v14);
  OUTLINED_FUNCTION_136();
  if (!v15)
  {
    OUTLINED_FUNCTION_72_8();
    OUTLINED_FUNCTION_31_13();
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    v58 = (const char *)v11;
    *(_QWORD *)&v59 = v14;
    OUTLINED_FUNCTION_4_49(v53, (__n128)xmmword_242C57990);
    OUTLINED_FUNCTION_3_53();
    goto LABEL_31;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 16) + 152) + 16);
  if (-v16 > v6 || v16 <= v6)
  {
    v58 = (const char *)v6;
    OUTLINED_FUNCTION_42_21(v16, (__n128)xmmword_242C57990);
    OUTLINED_FUNCTION_24_30();
LABEL_31:
    sub_242A59264();
  }
  v18 = (v16 & (v6 >> 63)) + v6;
  v55 = v11;
  v57 = 2;
  OUTLINED_FUNCTION_71_7(*MEMORY[0x24BEE38B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  OUTLINED_FUNCTION_26_32();
  OUTLINED_FUNCTION_70_12(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v12 + 16) + 152);
  if (*(_QWORD *)(v19 + 16) < v18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v1 = v58;
  v14 = (void *)(v19 + 32);
  sub_242C480E0();
  sub_242A5B894();
  v6 = *(_QWORD *)(*((_QWORD *)v58 + 2) + 152);
  v11 = *(_QWORD *)(v6 + 16);
  if (v11 < v4)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v4 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    v22 = (2 * v11) | 1;
    OUTLINED_FUNCTION_80();
    sub_242C37664(v6, v6 + 32, v4, v22);
    v23 = v51;
    goto LABEL_15;
  }
  v14 = v20;
  sub_242C4928C();
  sub_242C480E0();
  OUTLINED_FUNCTION_86();
  v21 = OUTLINED_FUNCTION_84_7();
  if (!v21)
  {
    OUTLINED_FUNCTION_80();
    v21 = MEMORY[0x24BEE4AF8];
  }
  v22 = *(_QWORD *)(v21 + 16);
  swift_release();
  if (v22 != v11 - v4)
    goto LABEL_26;
  v23 = OUTLINED_FUNCTION_84_7();
  if (!v23)
  {
    OUTLINED_FUNCTION_80();
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_15:
  OUTLINED_FUNCTION_80();
  v55 = (unint64_t)v14;
  sub_242B65310(v23, v24);
  v25 = *(_QWORD *)(*(_QWORD *)(v12 + 16) + 152);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26 <= v18)
  {
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_136();
    sub_242C37664(v25, v25 + 32, v6, (2 * v26) | 1);
    v29 = v52;
    goto LABEL_21;
  }
  v22 = v55;
  v6 = v18 + 1;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_86();
  v27 = OUTLINED_FUNCTION_84_7();
  if (!v27)
  {
    OUTLINED_FUNCTION_136();
    v27 = MEMORY[0x24BEE4AF8];
  }
  v28 = *(_QWORD *)(v27 + 16);
  swift_release();
  if (v28 != v26 - v6)
    goto LABEL_28;
  v29 = OUTLINED_FUNCTION_84_7();
  if (!v29)
  {
    OUTLINED_FUNCTION_136();
    v29 = MEMORY[0x24BEE4AF8];
  }
LABEL_21:
  OUTLINED_FUNCTION_136();
  v58 = (const char *)v22;
  sub_242B65310(v29, v30);
  v31 = *(_QWORD *)(v12 + 16);
  v32 = *((_QWORD *)v1 + 2);
  v33 = *(_BYTE *)(v31 + 160);
  v55 = (unint64_t)v58;
  v56 = v33;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_39_0();
  v34 = sub_242BD0D40((uint64_t)sub_242B60A8C);
  v36 = v35;
  v58 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v59 = xmmword_242C55120;
  v60 = xmmword_242C58420;
  OUTLINED_FUNCTION_132_2((uint64_t)"init(id:operator:operand:indices:resultDescriptor:creationSite:backward:)");
  type metadata accessor for GatherOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_104_4();
  sub_242B9E404(v37, v38, v39, v40, v4, 1, v31, v32, (uint64_t *)&v55, (uint64_t)&v58, v34, v36);
  v42 = v41;
  v44 = (uint64_t (**)(_QWORD, _QWORD))OUTLINED_FUNCTION_113_4(&qword_257228218, v43, (uint64_t)&unk_242C5ACAC);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v45 = OUTLINED_FUNCTION_131_4();
  *(_OWORD *)(v45 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v45 + 32) = v12;
  *(_QWORD *)(v45 + 40) = v1;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v46 = OUTLINED_FUNCTION_16_33();
  OUTLINED_FUNCTION_54_11(v46, v47, v48, v49, 455, v50, 56);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_13_40(v42, v44, (uint64_t)&v55, v54);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B60A8C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != 1)
  {
    v3 = *(_QWORD *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_retain();
    Tensor.expandingShape(at:)();
    v4 = v10;
    v9 = v3;
    swift_retain();
    Tensor.init(zerosLike:)(&v9, &v10);
    v9 = v4;
    scatterND(atIndices:from:onto:batchDimensionCount:reductionKind:)();
    v5 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
    swift_retain();
    swift_retain();
    v7 = sub_242AC4964();
    *(_QWORD *)(v6 + 32) = v5;
    *(_QWORD *)(v6 + 40) = v7;
    *(_QWORD *)(v6 + 48) = v8;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

void scatterND(atIndices:from:onto:batchDimensionCount:reductionKind:)()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  BOOL v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)(_QWORD, _QWORD);
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  char v41;
  const char *v42;
  __int128 v43;
  __int128 v44;
  const char *v45;
  uint64_t v46;
  __int16 v47;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v37 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v38 = v10;
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_89_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_47_13();
  v12 = *v9;
  v13 = *v7;
  v14 = *v5;
  v15 = *v2;
  v16 = OUTLINED_FUNCTION_99_4();
  v17 = OUTLINED_FUNCTION_41_25((uint64_t)v16);
  OUTLINED_FUNCTION_80();
  if (!v17)
  {
    OUTLINED_FUNCTION_72_8();
    OUTLINED_FUNCTION_31_13();
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    v42 = (const char *)v0;
    *(_QWORD *)&v43 = v2;
    OUTLINED_FUNCTION_4_49(v36, (__n128)xmmword_242C57990);
    OUTLINED_FUNCTION_3_53();
    sub_242A59264();
  }
  v39 = v12;
  v41 = 2;
  OUTLINED_FUNCTION_71_7(*MEMORY[0x24BEE38B8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  OUTLINED_FUNCTION_26_32();
  OUTLINED_FUNCTION_70_12(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v18 = v42;
  v19 = *(_QWORD *)(v14 + 16);
  v20 = *((_QWORD *)v42 + 2);
  v21 = *(_QWORD *)(v13 + 16);
  v41 = v15;
  v22 = *(_BYTE *)(v19 + 160);
  v39 = *(_QWORD *)(v19 + 152);
  v40 = v22;
  v42 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v43 = xmmword_242C55120;
  v44 = xmmword_242C58430;
  v45 = "init(id:operator:data:indices:updates:reductionKind:resultDescriptor:creationSite:backward:)";
  v46 = 92;
  v47 = 2;
  type metadata accessor for ScatterOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_123_0();
  sub_242C480E0();
  v23 = OUTLINED_FUNCTION_48_20();
  sub_242B9EB8C(v23, v24, v25, v37, 2, v19, v20, v21, &v41, &v39, (uint64_t)&v42, 0, 0);
  v27 = v26;
  v29 = (uint64_t (**)(_QWORD, _QWORD))OUTLINED_FUNCTION_113_4(&qword_257228210, v28, (uint64_t)&unk_242C5AC90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B810;
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 48) = v18;
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_10();
  v31 = OUTLINED_FUNCTION_16_33();
  OUTLINED_FUNCTION_54_11(v31, v32, v33, v34, 611, v35, 65);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_13_40(v27, v29, (uint64_t)&v39, v38);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_11();
}

void sub_242B60E5C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 152);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
LABEL_22:
    v23[1] = 0;
    v23[2] = 0;
    v23[0] = -1;
    v24 = -1;
    v26 = 0;
    v27 = 0;
    v25 = 0;
    v28 = -1;
    v29 = 4;
    sub_242C480E0();
    sub_242A59264();
  }
  v23[0] = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 152);
  v10 = v23;
  v11 = TensorShape.subscript.getter(v7 - 1);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)(v6 + 16) < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = v11;
  v4 = v6 + 32;
  v10 = (_QWORD *)((2 * a2) | 1);
  sub_242C480E0();
  sub_242A5B894();
  v14 = *(_QWORD *)(v6 + 16);
  if (!v14)
    goto LABEL_22;
  if (v14 <= a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = v13;
  sub_242C480E0();
  sub_242A5B894();
  v16 = __OFADD__(a2, v12);
  a2 += v12;
  if (v16)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  a3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 152);
  v4 = *(_QWORD *)(a3 + 16);
  if (v4 < (uint64_t)a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease();
    sub_242C37664(a3, a3 + 32, a2, (2 * v4) | 1);
    v19 = v22;
    goto LABEL_14;
  }
  v6 = v15;
  sub_242C4928C();
  sub_242C480E0();
  swift_unknownObjectRetain_n();
  v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v18 = *(_QWORD *)(v17 + 16);
  swift_release();
  if (v18 != v4 - a2)
    goto LABEL_21;
  v19 = swift_dynamicCastClass();
  if (!v19)
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
  }
LABEL_14:
  swift_bridgeObjectRelease();
  v23[0] = v10;
  sub_242B65310(v6, v20);
  *a4 = v23[0];
  sub_242B65310(v19, v21);
}

uint64_t sub_242B61098(uint64_t result, _QWORD *a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t *, uint64_t, char *))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = a2[2];
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    v7 = *(_QWORD *)(result + 32);
    v8 = a2[5];
    v16 = a2[4];
    swift_retain_n();
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_6();
    Tensor.init(zerosLike:)(&v16, &v17);
    v15 = v7;
    v16 = v8;
    v14 = v17;
    v13 = 0;
    a4(&v17, &v16, &v15, &v14, a3, &v13);
    v9 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v10 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v10 + 16) = xmmword_242C4B7D0;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_39_0();
    v11 = sub_242AC4964();
    *(_QWORD *)(v10 + 32) = v9;
    *(_QWORD *)(v10 + 40) = v11;
    *(_QWORD *)(v10 + 48) = v12;
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_17_5();
    return v10;
  }
LABEL_7:
  __break(1u);
  return result;
}

void Tensor.replacing(atIndices:with:alongAxis:)()
{
  sub_242B602C4();
}

uint64_t sub_242B611F8(uint64_t a1, _QWORD *a2, char a3, int a4)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  if (a3 != 5)
  {
LABEL_11:
    v31 = 0;
    v24 = 0;
    v25 = 0;
    sub_242A59170();
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = a2[2];
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 < 3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(a1 + 32);
  v7 = a2[5];
  v24 = a2[4];
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  Tensor.init(zerosLike:)(&v24, &v23);
  HIBYTE(v19) = 5;
  sub_242B602C4((int)&v22, (int)&v21, (int)&v20, a4, (int)&v19 + 7, v8, v9, v10, v19, v6, v23, v7, v23, v24, v25, v26, v27, v28, v29,
    v30);
  swift_release();
  v11 = v24;
  v22 = v7;
  v23 = v6;
  Tensor.gathering(atIndices:alongAxis:)();
  v12 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_242C4B7F0;
  swift_retain();
  swift_retain();
  v14 = sub_242AC4964();
  *(_QWORD *)(v13 + 32) = v11;
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(v13 + 48) = v15;
  swift_retain();
  swift_retain();
  v16 = sub_242AC4964();
  *(_QWORD *)(v13 + 56) = v12;
  *(_QWORD *)(v13 + 64) = v16;
  *(_QWORD *)(v13 + 72) = v17;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t Tensor.unstacked(alongAxis:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v2 = *v1;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v1 + 16) + 152) + 16);
  if (-v3 > a1 || v3 <= a1)
  {
    v21 = 0;
    v22 = 0;
    v20 = a1;
    v23 = -1;
    v25 = 0;
    v26 = 0;
    v24 = v3;
    v27 = -1;
    v28 = 4;
    OUTLINED_FUNCTION_4_18();
  }
  v5 = (v3 & (a1 >> 63)) + a1;
  v19 = *(_QWORD *)(*(_QWORD *)(*v1 + 16) + 152);
  v20 = v2;
  TensorShape.subscript.getter(v5);
  Tensor.split(count:alongAxis:)();
  v7 = v6;
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    v19 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_85_6();
    sub_242AC3258();
    v9 = 0;
    v10 = v19;
    do
    {
      v11 = *(_QWORD *)(v7 + 8 * v9 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v12 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v12 + 32) = v5;
      v18 = *(_QWORD *)(*(_QWORD *)(v11 + 16) + 152);
      OUTLINED_FUNCTION_123_0();
      OUTLINED_FUNCTION_0_2();
      sub_242C35288();
      OUTLINED_FUNCTION_136();
      if (!v20)
      {
        v20 = 0;
        v21 = 0xE000000000000000;
        OUTLINED_FUNCTION_123_0();
        OUTLINED_FUNCTION_122_4();
        swift_bridgeObjectRelease();
        v20 = 0xD00000000000001FLL;
        v21 = 0x8000000242C6E040;
        OUTLINED_FUNCTION_62_14();
        OUTLINED_FUNCTION_39_21();
      }
      v17 = v20;
      v18 = v11;
      Tensor.reshaped(to:)(&v17, &v20);
      OUTLINED_FUNCTION_157_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v20;
      v19 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        OUTLINED_FUNCTION_117_2(v14);
        sub_242AC3258();
        v10 = v19;
      }
      ++v9;
      *(_QWORD *)(v10 + 16) = v15 + 1;
      *(_QWORD *)(v10 + 8 * v15 + 32) = v13;
    }
    while (v8 != v9);
    OUTLINED_FUNCTION_34();
  }
  else
  {
    OUTLINED_FUNCTION_34();
    return MEMORY[0x24BEE4AF8];
  }
  return v10;
}

void Tensor.split(count:alongAxis:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  __int128 v22;

  OUTLINED_FUNCTION_17_17();
  v5 = *(const char **)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152);
  v6 = *((_QWORD *)v5 + 2);
  if (-v6 > v4 || v6 <= v4)
  {
LABEL_13:
    OUTLINED_FUNCTION_34_23(v4, v6);
    OUTLINED_FUNCTION_4_18();
  }
  v8 = v3;
  v9 = (v6 & (v4 >> 63)) + v4;
  v21 = *(const char **)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152);
  v10 = TensorShape.subscript.getter(v9);
  if (v8 != -1)
  {
    if (v8)
      v10 %= v8;
    if (v10)
    {
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_24_0();
LABEL_16:
      OUTLINED_FUNCTION_6_54();
      OUTLINED_FUNCTION_100_0();
    }
  }
  v21 = v5;
  v11 = sub_242C35908((uint64_t *)&v21, v8, v9);
  if (!v11)
  {
    v21 = 0;
    *(_QWORD *)&v22 = 0xE000000000000000;
    OUTLINED_FUNCTION_10();
    sub_242C48C38();
    OUTLINED_FUNCTION_28_30();
    OUTLINED_FUNCTION_74();
    MEMORY[0x2494EC0FC](v5, MEMORY[0x24BEE1768]);
    sub_242C48314();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_8_8();
    OUTLINED_FUNCTION_97_5();
    OUTLINED_FUNCTION_121_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_27_27();
    OUTLINED_FUNCTION_97_5();
    OUTLINED_FUNCTION_121_2();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_42_2();
    goto LABEL_16;
  }
  v12 = v11;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11_6();
  v13 = OUTLINED_FUNCTION_100_3(v12);
  swift_bridgeObjectRelease();
  v14 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v9;
  sub_242BD0D40((uint64_t)sub_242B63B64);
  OUTLINED_FUNCTION_86_5();
  v21 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v22 = xmmword_242C55120;
  OUTLINED_FUNCTION_40_21((uint64_t)"init(id:operand:splitBy:axis:resultDescriptors:creationSite:backward:)", (__n128)xmmword_242C58440);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_104_4();
  sub_242B9F328(v15, v16, v17, v18, v8, 0, v9, v13, (uint64_t)&v21, v1, v2);
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_118_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_114_2();
  sub_242B5CEC0((uint64_t)sub_242B63B6C, v20, 0, v8);
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B61924(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = result;
    swift_retain();
    sub_242B5CDE4(v2);
    Tensor.init(concatenating:alongAxis:scalarType:)();
    swift_retain();
    v3 = sub_242AC4964();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v6 + 32) = v7;
    *(_QWORD *)(v6 + 40) = v3;
    *(_QWORD *)(v6 + 48) = v5;
    swift_release();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void Tensor.init(concatenating:alongAxis:scalarType:)()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  _BYTE v50[88];
  const char *v51;
  __int128 v52;
  __int128 v53;
  const char *v54;
  uint64_t v55;
  __int16 v56;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v5 = *(_QWORD *)(v0 + 16);
  if (!v5)
    goto LABEL_20;
  v6 = v1;
  v7 = v0;
  v8 = 0;
  v9 = *v2;
  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 152) + 16);
  do
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 8 * v8 + 32) + 16) + 152) + 16) != v10)
      goto LABEL_20;
    ++v8;
  }
  while (v5 != v8);
  if (!v10)
    goto LABEL_20;
  LOBYTE(v38) = 2;
  v11 = sub_242B62598(0, 0, 255, v9, (uint64_t)"init(concatenating:alongAxis:scalarType:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/TensorTransformations.swift", 114, v38, 917, v0);
  if (!*(_QWORD *)(v11 + 16))
  {
    __break(1u);
LABEL_20:
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_21;
  }
  v12 = v11;
  v13 = *(_QWORD *)(v11 + 32);
  v50[0] = *(_BYTE *)(*(_QWORD *)(v13 + 16) + 160);
  if (v9 == 13)
  {
    v14 = OUTLINED_FUNCTION_2_0();
    v15 = 0;
    *(_OWORD *)(v14 + 16) = xmmword_242C58450;
    *(_BYTE *)(v14 + 32) = 0;
    v16 = 5;
  }
  else
  {
    v16 = 0;
    v15 = 0xE700000000000000;
    v14 = 0x73726F736E6574;
  }
  v40 = v14;
  v41 = v15;
  LOBYTE(v42) = v16;
  v51 = (const char *)&unk_25137B2F0;
  LOBYTE(v52) = 1;
  OUTLINED_FUNCTION_10();
  requireScalarType(_:from:_:function:file:line:)();
  sub_242B55710(v14, v15, v16);
  if (*(_QWORD *)(v12 + 16) != 1)
  {
    if (-v10 > v6 || v10 <= v6)
    {
      v41 = 0;
      v42 = 0;
      v40 = v6;
      v43 = -1;
      v45 = 0;
      v46 = 0;
      v44 = v10;
      v47 = -1;
      v48 = 4;
      OUTLINED_FUNCTION_4_18();
    }
    v39 = v4;
    v18 = (v10 & (v6 >> 63)) + v6;
    v19 = sub_242B5C4B8(v12);
    sub_242C35AB4(v19, v18, &v40);
    v20 = OUTLINED_FUNCTION_80();
    v21 = v40;
    if (v40)
    {
      v22 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12 + 32) + 16) + 160);
      MEMORY[0x24BDAC7A8](v20);
      swift_getKeyPath();
      swift_retain();
      v23 = sub_242B5C58C(v12);
      OUTLINED_FUNCTION_157_0();
      sub_242B297F4(v12);
      v40 = v21;
      LOBYTE(v41) = v22;
      v24 = *(_QWORD *)(v7 + 16);
      OUTLINED_FUNCTION_136();
      v25 = (_QWORD *)OUTLINED_FUNCTION_2_0();
      v25[2] = v24;
      v25[3] = v23;
      v25[4] = v18;
      v26 = sub_242BD0D40((uint64_t)sub_242B63C24);
      v28 = v27;
      OUTLINED_FUNCTION_135();
      v52 = xmmword_242C55120;
      v53 = xmmword_242C58460;
      v51 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransf"
            "ormationOps.swift";
      v54 = "init(id:operands:axis:interleave:resultDescriptor:creationSite:backward:)";
      v55 = 73;
      v56 = 2;
      type metadata accessor for ConcatOperation();
      OUTLINED_FUNCTION_2_0();
      v29 = OUTLINED_FUNCTION_116_3();
      sub_242B9EDAC(v29, v30, v31, v32, v18, 0, v33, v34, v26, v28);
      swift_retain();
      sub_242B76A50(v12, "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/TensorTransformations.swift", 114, 2, 958, "init(concatenating:alongAxis:scalarType:)", 41, 2);
      OUTLINED_FUNCTION_35();
      sub_242A66290((uint64_t)v50, (uint64_t)&v49);
      type metadata accessor for ContextManager();
      OUTLINED_FUNCTION_5();
      sub_242B93328();
      OUTLINED_FUNCTION_101_3();
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_11_6();
      sub_242A5DC30((uint64_t)&v40);
      sub_242B93328();
      OUTLINED_FUNCTION_101_3();
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_91();
      sub_242A5DC30((uint64_t)&v40);
      type metadata accessor for TensorRepresentation();
      OUTLINED_FUNCTION_2_0();
      LOBYTE(v40) = 1;
      sub_242B4BC34();
      v36 = v35;
      type metadata accessor for TensorHandle();
      v37 = OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v37 + 16) = v36;
      OUTLINED_FUNCTION_91();
      sub_242BC995C();
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_135();
      sub_242A662D8((uint64_t)v50);
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_17_5();
      v13 = v37;
      v4 = v39;
      goto LABEL_18;
    }
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v40 = 0xD00000000000002ELL;
    v41 = 0x8000000242C6E620;
    v51 = (const char *)v18;
    sub_242C491CC();
    sub_242C48314();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_80_1();
LABEL_21:
    sub_242C48F5C();
    OUTLINED_FUNCTION_100_0();
  }
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_136();
LABEL_18:
  *v4 = v13;
  OUTLINED_FUNCTION_13_11();
}

void Tensor.split(sizes:alongAxis:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  __int128 v32;

  OUTLINED_FUNCTION_17_17();
  v3 = *(const char **)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152);
  v4 = *((_QWORD *)v3 + 2);
  if (!v4)
    goto LABEL_16;
  if (-v4 > v2 || v4 <= v2)
  {
    OUTLINED_FUNCTION_34_23(v2, v4);
    OUTLINED_FUNCTION_4_18();
  }
  v6 = v1;
  v7 = (v4 & (v2 >> 63)) + v2;
  v31 = *(const char **)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 152);
  v8 = TensorShape.subscript.getter(v7);
  v9 = *(_QWORD *)(v6 + 16);
  if (v9)
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 32);
    v12 = *(_QWORD *)(v6 + 16);
    do
    {
      v13 = *v11++;
      v14 = __OFADD__(v10, v13);
      v10 += v13;
      if (v14)
      {
        __break(1u);
        goto LABEL_16;
      }
      --v12;
    }
    while (v12);
    if (v8 == v10)
      goto LABEL_11;
LABEL_16:
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_6_54();
    OUTLINED_FUNCTION_100_0();
  }
  if (v8)
    goto LABEL_16;
LABEL_11:
  v31 = v3;
  OUTLINED_FUNCTION_74();
  v15 = sub_242C359F8((uint64_t *)&v31, v6, v7);
  OUTLINED_FUNCTION_34();
  if (!v15)
  {
    v31 = 0;
    *(_QWORD *)&v32 = 0xE000000000000000;
    OUTLINED_FUNCTION_10();
    sub_242C48C38();
    OUTLINED_FUNCTION_28_30();
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_39_21();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_91();
  v16 = OUTLINED_FUNCTION_100_3(v15);
  OUTLINED_FUNCTION_80();
  v17 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v17 + 16) = v9;
  *(_QWORD *)(v17 + 24) = v7;
  v18 = sub_242BD0D40((uint64_t)sub_242B63C3C);
  v20 = v19;
  OUTLINED_FUNCTION_157_0();
  v31 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
  v32 = xmmword_242C55120;
  OUTLINED_FUNCTION_40_21((uint64_t)"init(id:operand:splitBy:axis:resultDescriptors:creationSite:backward:)", (__n128)xmmword_242C58440);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_44_0();
  v21 = OUTLINED_FUNCTION_83_6();
  sub_242B9F328(v21, v22, v23, v24, v25, 1, v7, v16, (uint64_t)&v31, v18, v20);
  OUTLINED_FUNCTION_118_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_114_2();
  OUTLINED_FUNCTION_104_4();
  sub_242B5CEC0(v27, v28, v29, v30);
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B622C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    v5 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
    swift_retain();
    v7 = sub_242B5CDE4(v5);
    v11 = 13;
    Tensor.init(concatenating:alongAxis:scalarType:)(&v12, v7, a4, &v11);
    v8 = v12;
    swift_retain();
    v9 = sub_242AC4964();
    *(_QWORD *)(v6 + 32) = v8;
    *(_QWORD *)(v6 + 40) = v9;
    *(_QWORD *)(v6 + 48) = v10;
    swift_release();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242B6237C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  unint64_t v5;
  uint64_t (**v6)(_QWORD, _QWORD);
  uint64_t v7;
  _BYTE v9[56];

  v5 = *a1;
  v6 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257228200, (uint64_t (*)(uint64_t))type metadata accessor for SplitOperation, (uint64_t)&unk_242C5A910);
  sub_242A66290(a2, (uint64_t)v9);
  v7 = swift_unknownObjectRetain();
  return sub_242BC9830(v7, v6, v5, (uint64_t)v9, a3);
}

void Tensor.init(_:scalarType:)(_QWORD *a1@<X8>)
{
  uint64_t v2;

  OUTLINED_FUNCTION_105_4();
  *a1 = v2;
  OUTLINED_FUNCTION_30_5();
}

void Tensor.init(_:scalarType:)(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  char v4;
  uint64_t v5;

  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a2 + 32))(&v4, a1, a2);
  OUTLINED_FUNCTION_105_4();
  *a3 = v5;
  OUTLINED_FUNCTION_21_1();
}

_QWORD *Tensor.init(stacking:alongAxis:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_242B62C98(a1, a2, a3, a4, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t, char *))Tensor.init(stacking:alongAxis:scalarType:), a5);
}

void Tensor.init(_:)()
{
  OUTLINED_FUNCTION_105_4();
}

void Tensor.init<A>(stacking:alongAxis:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_242B624E4(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, char *))Tensor.init(stacking:alongAxis:scalarType:), a4);
}

void Tensor.init<A>(concatenating:alongAxis:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_242B624E4(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, char *))Tensor.init(concatenating:alongAxis:scalarType:), a4);
}

void sub_242B624E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, char *)@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_47_13();
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v5, a1);
  v12 = sub_242C4865C();
  v13 = 13;
  a4(&v14, v12, a2, &v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, a3);
  *a5 = v14;
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242B62598(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  _QWORD v20[3];
  char v21;
  char v22;

  while (1)
  {
    v12 = a4;
    v13 = sub_242C49208();
    MEMORY[0x24BDAC7A8](v13);
    v14 = *(_QWORD *)(a12 + 16);
    if (v12 != 13)
      break;
    if (!v14)
      return MEMORY[0x24BEE4AF8];
    sub_242B63824(a12, v20);
    a4 = v20[0];
    if (LOBYTE(v20[0]) == 13)
    {
      v19 = sub_242B5C6A0(a12);
      v20[1] = 0;
      v20[2] = 0;
      v20[0] = v19;
      v21 = -1;
      v22 = 2;
      sub_242A59264();
    }
  }
  sub_242A5E1D4();
  v16 = v15;
  if (v14)
  {
    v17 = (char *)&loc_242B62760
        + dword_242B62A8C[*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(sub_242C480E0() + 32) + 16) + 160)];
    __asm { BR              X9 }
  }
  return v16;
}

uint64_t sub_242B62AC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Tensor.shape.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_242B62B00(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  *a2 = TensorShape.subscript.getter(*a1);
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242B62B34(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(_QWORD *);
  _QWORD *v5;
  _QWORD v7[4];

  v3 = *a1;
  v4 = TensorShape.subscript.modify(v7, *a3);
  *v5 = v3;
  return ((uint64_t (*)(_QWORD *, _QWORD))v4)(v7, 0);
}

uint64_t sub_242B62B7C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = *(_QWORD *)(result + 32);
    if (a3 != 1)
    {
      swift_retain();
      Tensor.split(sizes:alongAxis:)();
      v9 = v8;
      sub_242C480E0();
      sub_242B5D22C(v9, a2);
      v5 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_242C4B7D0;
    if (*(_QWORD *)(a2 + 16))
    {
      v5 = (_QWORD *)result;
      swift_retain_n();
      swift_retain();
      v6 = sub_242AC4964();
      v5[4] = v4;
      v5[5] = v6;
      v5[6] = v7;
LABEL_6:
      swift_release();
      return (uint64_t)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *Tensor.init(concatenating:alongAxis:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_242B62C98(a1, a2, a3, a4, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t, char *))Tensor.init(concatenating:alongAxis:scalarType:), a5);
}

_QWORD *sub_242B62C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *(*a5)(uint64_t *__return_ptr, uint64_t, uint64_t, char *)@<X4>, _QWORD *a6@<X8>)
{
  char v10;
  _QWORD *result;
  char v12;
  char v13;
  uint64_t v14;

  if (a3)
  {
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v12, a3, a4);
    v10 = v12;
  }
  else
  {
    v10 = 13;
  }
  v13 = v10;
  result = a5(&v14, a1, a2, &v13);
  *a6 = v14;
  return result;
}

void Tensor.concatenated(with:alongAxis:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;

  v2 = *a1;
  v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_11();
  Tensor.init(concatenating:alongAxis:scalarType:)();
}

void Tensor.tile(multiples:)()
{
  uint64_t v0;
  uint64_t *v1;

  OUTLINED_FUNCTION_76_8();
  Tensor.tiled(multiples:)(v0, v1);
  OUTLINED_FUNCTION_30_5();
}

void Tensor.tiled(multiples:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(_QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  const char *v33;
  __int128 v34;
  __int128 v35;

  v4 = *v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    goto LABEL_8;
  if (*(uint64_t *)(a1 + 32) >= 1)
  {
    if (v5 != 1)
    {
      v6 = 5;
      while (1)
      {
        v7 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        if (*(uint64_t *)(a1 + 8 * v6) < 1)
          goto LABEL_22;
        ++v6;
        if (v7 == v5)
          goto LABEL_8;
      }
      __break(1u);
      goto LABEL_19;
    }
LABEL_8:
    v8 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 152);
    v9 = *(_QWORD *)(v8 + 16);
    v10 = v9 - v5;
    if (v9 <= v5)
      v11 = (const char *)MEMORY[0x24BEE4AF8];
    else
      sub_242BC0874(1, v9 - v5);
    v33 = v11;
    OUTLINED_FUNCTION_74();
    sub_242B65064();
    v12 = (uint64_t)v33;
    if (v10 < 0)
    {
      v13 = *(_QWORD *)(v8 + 16);
      if (__OFADD__(v13, -v10))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      v33 = (const char *)v8;
      if (v13 - v10 < v13)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v10 > 0)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_32_0();
      sub_242C36390(0, 0, -v10, 1);
      v8 = (uint64_t)v33;
    }
    else
    {
      OUTLINED_FUNCTION_32_0();
    }
    v30 = v4;
    v32 = v8;
    Tensor.reshaped(to:)(&v32, (uint64_t *)&v33);
    v14 = v33;
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_44_0();
    sub_242B5CFFC(v8, v12);
    v16 = v15;
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_35();
    v17 = *(_BYTE *)(*((_QWORD *)v14 + 2) + 160);
    v30 = v16;
    v31 = v17;
    *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v12;
    OUTLINED_FUNCTION_44_0();
    v18 = sub_242BD0D40((uint64_t)sub_242B63C44);
    v20 = v19;
    OUTLINED_FUNCTION_28_5();
    v33 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TileOp.swift";
    v34 = xmmword_242C58470;
    v35 = xmmword_242C58480;
    OUTLINED_FUNCTION_106_4();
    type metadata accessor for TileOperation();
    OUTLINED_FUNCTION_2_0();
    v21 = OUTLINED_FUNCTION_83_6();
    sub_242A651C4(v21, v22, v23, v24, v25, v26, v27, v18, v20);
    v28 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510((unint64_t *)&qword_257221600, (uint64_t (*)(uint64_t))type metadata accessor for TileOperation, (uint64_t)&unk_242C4C3C4);
    sub_242A66290(*(_QWORD *)(v4 + 16) + 168, (uint64_t)&v30);
    v29 = OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_13_40(v29, v28, (uint64_t)&v30, a2);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_51_20();
    return;
  }
LABEL_22:
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_6_54();
  __break(1u);
}

uint64_t sub_242B63054(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[56];
  _BYTE v22[56];
  const char *v23;
  __int128 v24;
  __int128 v25;
  const char *v26;
  uint64_t v27;
  __int16 v28;

  if (*(_QWORD *)(a2 + 16))
  {
    if (*(_QWORD *)(result + 16))
    {
      v4 = *(_QWORD *)(*(_QWORD *)(result + 32) + 16);
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
      v6 = *(_BYTE *)(v5 + 160);
      v17 = *(_QWORD *)(v5 + 152);
      v18 = v6;
      v24 = xmmword_242C58470;
      v25 = xmmword_242C58490;
      v23 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TileOp.swift";
      v26 = "init(id:gradientOperand:operand:multiples:resultDescriptor:creationSite:)";
      v27 = 73;
      v28 = 2;
      type metadata accessor for TileGradientOperation();
      swift_allocObject();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_242C480E0();
      sub_242C480E0();
      sub_242A6530C(0, 0, 0, v4, v5, a3, (uint64_t)&v17, (uint64_t)&v23);
      v8 = v7;
      sub_242A66290(v4 + 168, (uint64_t)v22);
      sub_242A66290((uint64_t)v22, (uint64_t)v21);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_242B93328();
      sub_242B933C0((uint64_t)&v17);
      swift_release();
      v9 = v20;
      swift_retain();
      sub_242A5DC30((uint64_t)&v17);
      sub_242B93328();
      sub_242B933C0((uint64_t)&v17);
      swift_release();
      v10 = v19;
      swift_retain();
      sub_242A5DC30((uint64_t)&v17);
      type metadata accessor for TensorRepresentation();
      v11 = swift_allocObject();
      LOBYTE(v17) = 1;
      v12 = sub_242B4D348(v8, 0, v21, 0x100000000, v9, v10, v11);
      type metadata accessor for TensorHandle();
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v12;
      swift_retain();
      sub_242BC995C();
      swift_release();
      sub_242A662D8((uint64_t)v22);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v15 = sub_242AC4964();
      *(_QWORD *)(v14 + 32) = v13;
      *(_QWORD *)(v14 + 40) = v15;
      *(_QWORD *)(v14 + 48) = v16;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void Tensor.flipped(alongAxes:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)(_QWORD, _QWORD);
  _BYTE v23[56];
  const char *v24;
  __int128 v25;
  __int128 v26;

  v4 = *v2;
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_11();
    v6 = sub_242B5C8A0(a1, v4);
    v7 = *(_QWORD *)(v6 + 16);
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) + 152) + 16);
    if (v8 < v7)
      goto LABEL_15;
    v9 = v6;
    if (v7)
    {
      if (*(_QWORD *)(v6 + 32) >= v8)
        goto LABEL_13;
      if (v7 != 1)
      {
        v10 = 5;
        while (1)
        {
          v11 = v10 - 3;
          if (__OFADD__(v10 - 4, 1))
            break;
          if (*(_QWORD *)(v6 + 8 * v10) >= v8)
            goto LABEL_13;
          ++v10;
          if (v11 == v7)
            goto LABEL_10;
        }
        __break(1u);
LABEL_13:
        OUTLINED_FUNCTION_24_0();
        OUTLINED_FUNCTION_127_1();
        while (1)
        {
          OUTLINED_FUNCTION_6_54();
          __break(1u);
LABEL_15:
          OUTLINED_FUNCTION_24_0();
          OUTLINED_FUNCTION_80_1();
        }
      }
    }
LABEL_10:
    *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v6;
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_5();
    v12 = sub_242BD0D40((uint64_t)sub_242B63C4C);
    v14 = v13;
    OUTLINED_FUNCTION_17_5();
    v24 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
    v25 = xmmword_242C55120;
    v26 = xmmword_242C584A0;
    OUTLINED_FUNCTION_106_4();
    type metadata accessor for ReverseOperation();
    OUTLINED_FUNCTION_2_0();
    v15 = OUTLINED_FUNCTION_116_3();
    sub_242B9F7E0(v15, v16, v17, v18, v9, v19, v12, v14);
    v21 = v20;
    v22 = (uint64_t (**)(_QWORD, _QWORD))sub_242A8A510(&qword_257228208, (uint64_t (*)(uint64_t))type metadata accessor for ReverseOperation, (uint64_t)&unk_242C5AC74);
    sub_242A66290(*(_QWORD *)(v4 + 16) + 168, (uint64_t)v23);
    OUTLINED_FUNCTION_13_40(v21, v22, (uint64_t)v23, a2);
    OUTLINED_FUNCTION_51_20();
  }
  else
  {
    *a2 = v4;
    OUTLINED_FUNCTION_66_13();
  }
}

uint64_t sub_242B63518(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      swift_retain();
      swift_retain();
      Tensor.flipped(alongAxes:)(&v8, a3);
      v4 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v6 = sub_242AC4964();
      *(_QWORD *)(v5 + 32) = v4;
      *(_QWORD *)(v5 + 40) = v6;
      *(_QWORD *)(v5 + 48) = v7;
      swift_release();
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Tensor.flipped(alongAxis:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(inited + 32) = a1;
  Tensor.flipped(alongAxes:)(inited, a2);
  return swift_setDeallocating();
}

uint64_t sub_242B6366C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      swift_retain();
      swift_retain();
      Tensor.bandPart(lowerBandCount:upperBandCount:)(&v10, a3, a4);
      v6 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v8 = sub_242AC4964();
      *(_QWORD *)(v7 + 32) = v6;
      *(_QWORD *)(v7 + 40) = v8;
      *(_QWORD *)(v7 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_242B63754(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_242C4928C();
  OUTLINED_FUNCTION_86();
  v12 = swift_dynamicCastClass();
  if (!v12)
  {
    OUTLINED_FUNCTION_49_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  v13 = *(_QWORD *)(v12 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v13 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    sub_242C37664(a1, a2, a3, a4);
    v11 = v10;
    goto LABEL_9;
  }
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    OUTLINED_FUNCTION_49_4();
    v11 = MEMORY[0x24BEE4AF8];
  }
LABEL_9:
  OUTLINED_FUNCTION_49_4();
  *a5 = v11;
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242B63824@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (*(_QWORD *)(result + 16))
  {
    v2 = result;
    v5 = *(_QWORD *)(result + 32);
    Tensor.scalarType.getter();
    (*(void (**)(char *__return_ptr))(v3 + 32))(&v4);
    sub_242C480E0();
    __asm { BR              X9 }
  }
  *a2 = 13;
  return result;
}

uint64_t sub_242B63AC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242B63AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B5F228(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242B63AEC()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242B63AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B6366C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_242B63B00()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242B63B0C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242B61098(a1, a2, *(_QWORD *)(v2 + 16), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t *, uint64_t, char *))scatterND(atIndices:from:onto:batchDimensionCount:reductionKind:));
}

uint64_t sub_242B63B2C()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242B63B38(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242B61098(a1, a2, *(_QWORD *)(v2 + 16), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t *, uint64_t, char *))sub_242B602C4);
}

uint64_t sub_242B63B58()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242B63B64(uint64_t result, uint64_t a2)
{
  return sub_242B61924(result, a2);
}

uint64_t sub_242B63B6C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_242B6237C(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_242B63B88()
{
  uint64_t v0;

  sub_242B55710(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_242B63BB4()
{
  return 0;
}

uint64_t sub_242B63BCC()
{
  return 8;
}

BOOL sub_242B63BD8(_QWORD *a1, _QWORD *a2)
{
  return *a2 == *a1;
}

uint64_t sub_242B63BEC()
{
  return sub_242C48788();
}

_QWORD *sub_242B63BF4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_242B63C00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242B63C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B62B7C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242B63C30()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242B63C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B622C0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_242B63C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B63054(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242B63C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B63518(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242B63C54()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242B63C60(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242B611F8(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

const float *sub_242B63C6C(const float *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B5EED8(a1, a2, *(_QWORD *)(v2 + 16), *(float **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_242B63C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B5F488(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242B63CAC@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_242B63B6C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_4_49(uint64_t result, __n128 a2)
{
  uint64_t v2;

  *(__n128 *)(v2 - 184) = a2;
  *(_BYTE *)(v2 - 168) = 0;
  *(_QWORD *)(v2 - 160) = result;
  *(_BYTE *)(v2 - 152) = 2;
  *(_BYTE *)(v2 - 92) = 3;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_54()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_7_41()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_13_40@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(_QWORD, _QWORD)@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return sub_242BC9830(a1, a2, 0, a3, a4);
}

uint64_t OUTLINED_FUNCTION_16_33()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_26_32()
{
  Tensor.cast(to:roundingRule:)();
}

uint64_t OUTLINED_FUNCTION_27_27()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_28_30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 184);
  *(_QWORD *)(v0 - 192) = *(_QWORD *)(v0 - 192);
  *(_QWORD *)(v0 - 184) = v1;
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_31_31()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_34_23(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = 0;
  *(_QWORD *)(v2 - 176) = 0;
  *(_QWORD *)(v2 - 192) = a1;
  *(_BYTE *)(v2 - 168) = -1;
  *(_QWORD *)(v2 - 152) = 0;
  *(_QWORD *)(v2 - 144) = 0;
  *(_QWORD *)(v2 - 160) = a2;
  *(_BYTE *)(v2 - 136) = -1;
  *(_BYTE *)(v2 - 84) = 4;
}

void OUTLINED_FUNCTION_39_21()
{
  JUMPOUT(0x2494EC0FCLL);
}

uint64_t OUTLINED_FUNCTION_40_21@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 - 168) = a2;
  *(_QWORD *)(v2 - 152) = a1;
  *(_QWORD *)(v2 - 144) = 70;
  *(_WORD *)(v2 - 136) = 2;
  return type metadata accessor for SplitOperation();
}

BOOL OUTLINED_FUNCTION_41_25(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

void OUTLINED_FUNCTION_42_21(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 - 192) = a2;
  *(_BYTE *)(v2 - 176) = 0;
  *(_QWORD *)(v2 - 160) = 0;
  *(_QWORD *)(v2 - 152) = 0;
  *(_QWORD *)(v2 - 168) = a1;
  *(_BYTE *)(v2 - 144) = 6;
  *(_BYTE *)(v2 - 92) = 4;
}

uint64_t OUTLINED_FUNCTION_43_22()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_44_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t *v14;
  uint64_t v15;

  a14 = v15;
  return Tensor.reshaped(to:)(&a14, v14);
}

uint64_t OUTLINED_FUNCTION_46_18()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_47_19()
{
  return sub_242C48E78();
}

uint64_t OUTLINED_FUNCTION_48_20()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_54_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_242B76A50(a1, a2, a3, a4, a5, a6, a7, 2);
}

void OUTLINED_FUNCTION_56_13()
{
  Tensor.cast(to:roundingRule:)();
}

uint64_t OUTLINED_FUNCTION_58_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;

  a30 = v31;
  return sub_242B5E498(&a30, &a31);
}

char *OUTLINED_FUNCTION_59_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  return &a30;
}

uint64_t OUTLINED_FUNCTION_60_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_61_12()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_62_14()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_63_14(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_242A66290(*(_QWORD *)(v1 + 16) + 168, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_64_12()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_65_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_66_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_69_9@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_70_12@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_71_7@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

void OUTLINED_FUNCTION_72_8()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_74_8@<X0>(uint64_t a1@<X8>)
{
  __int16 v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = a1;
  *(_QWORD *)(v2 - 152) = 73;
  *(_WORD *)(v2 - 144) = v1;
  return type metadata accessor for GatherOperation();
}

uint64_t OUTLINED_FUNCTION_80_9@<X0>(uint64_t *a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  a2 = v3;
  a3 = v4;
  return Tensor.reshaped(to:)(&a2, a1);
}

uint64_t OUTLINED_FUNCTION_82_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_83_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_84_7()
{
  return swift_dynamicCastClass();
}

uint64_t OUTLINED_FUNCTION_85_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_86_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_87_5()
{
  return sub_242C48FC8();
}

uint64_t OUTLINED_FUNCTION_90_3()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_91_3()
{
  JUMPOUT(0x2494EC0FCLL);
}

void OUTLINED_FUNCTION_93_5(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;

  sub_242B9E404(a1, a2, a3, a4, a5, a6, v12, v13, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_97_5()
{
  return sub_242C491CC();
}

void OUTLINED_FUNCTION_98_4()
{
  sub_242C21A14();
}

void *OUTLINED_FUNCTION_99_4()
{
  return static ScalarType.integerTypes.getter();
}

uint64_t OUTLINED_FUNCTION_100_3(uint64_t a1)
{
  uint64_t v1;

  return sub_242B5CCE8(a1, v1);
}

void OUTLINED_FUNCTION_101_3()
{
  uint64_t v0;

  sub_242B933C0(v0 + 16);
}

void OUTLINED_FUNCTION_105_4()
{
  Tensor.init(stacking:alongAxis:scalarType:)();
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_108_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_111_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DEE0(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_112_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DEE0(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_113_4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  return sub_242A8A510(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_117_2@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_119_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_121_2()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_122_4()
{
  return sub_242C48C38();
}

void OUTLINED_FUNCTION_124_4()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_126_3(uint64_t a1)
{
  return sub_242BD0D40(a1);
}

uint64_t OUTLINED_FUNCTION_131_4()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_132_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = a1;
  *(_QWORD *)(v2 - 152) = v1;
  *(_WORD *)(v2 - 144) = 2;
  return 0;
}

void sub_242B6421C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  __n128 *inited;
  uint64_t v5;
  _BYTE v6[56];
  _BYTE v7[56];
  uint64_t v8;

  OUTLINED_FUNCTION_259_1();
  v8 = *MEMORY[0x24BDAC8D0];
  swift_release();
  OUTLINED_FUNCTION_138_4(a2, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_255_1(inited, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_138_4((uint64_t)v7, (uint64_t)v6);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_86_6((uint64_t)v7);
  OUTLINED_FUNCTION_86_6(a2);
  *v2 = v5;
}

void Tensor.init(onesLike:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  BOOL v6;
  unsigned __int8 v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  char v21;
  void *v22;
  char v23;
  char v24;

  v3 = *a1;
  v4 = *(_BYTE *)(*(_QWORD *)(*a1 + 16) + 160);
  v5 = static ScalarType.integerTypes.getter();
  v6 = sub_242B64794(v4, (uint64_t)v5);
  OUTLINED_FUNCTION_3_6();
  if (!v6)
  {
    v7 = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160);
    v8 = static ScalarType.floatingPointTypes.getter();
    v9 = sub_242B64794(v7, (uint64_t)v8);
    OUTLINED_FUNCTION_3_6();
    if (!v9)
    {
      Tensor.scalarType.getter();
      v12 = v11;
      v14 = v13;
      OUTLINED_FUNCTION_28_5();
      v15 = static ScalarType.integerTypes.getter();
      v16 = static ScalarType.floatingPointTypes.getter();
      sub_242B651A4((uint64_t)v16);
      v20[0] = v12;
      v20[1] = v14;
      v20[2] = 0;
      v20[3] = 0;
      v21 = -1;
      v22 = v15;
      v23 = 1;
      v24 = 3;
      OUTLINED_FUNCTION_193_2();
      sub_242A59264();
    }
  }
  v10 = *(_QWORD *)(v3 + 16);
  v18 = *(_QWORD *)(v10 + 152);
  v17 = *(_BYTE *)(v10 + 160);
  sub_242A9297C(v10 + 168, (uint64_t)v20, (uint64_t *)&unk_257228D70);
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_28_5();
  Tensor.init(ones:scalarType:on:)(&v18, &v17, (uint64_t)v20, &v19);
  *a2 = v19;
  OUTLINED_FUNCTION_38_15();
}

BOOL sub_242B64464(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t sub_242B64474(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_242B64498 + 4 * byte_242C584C0[a2 >> 62]))();
}

BOOL sub_242B64498(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2) == 0;
}

void Tensor.init(zerosLike:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  BOOL v6;
  unsigned __int8 v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[55];
  char v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *a1;
  v4 = *(_BYTE *)(*(_QWORD *)(*a1 + 16) + 160);
  v5 = static ScalarType.integerTypes.getter();
  v6 = sub_242B64794(v4, (uint64_t)v5);
  OUTLINED_FUNCTION_3_6();
  if (v6
    || (v7 = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160),
        v8 = static ScalarType.floatingPointTypes.getter(),
        v9 = sub_242B64794(v7, (uint64_t)v8),
        OUTLINED_FUNCTION_3_6(),
        v9))
  {
    v10 = *(_QWORD *)(v3 + 16);
    v18 = *(_QWORD *)(v10 + 152);
    v17 = *(_BYTE *)(v10 + 160);
    sub_242A9297C(v10 + 168, (uint64_t)v16, (uint64_t *)&unk_257228D70);
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_135();
    Tensor.init(zeros:scalarType:on:)(&v18, &v17, (uint64_t)v16, v11, v12, v13, v14, v15, &v19);
    *a2 = v19;
    OUTLINED_FUNCTION_188_2();
  }
  else
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    sub_242C48F5C();
    __break(1u);
  }
}

void Tensor.init(coercing:scalarType:on:)(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char v5;
  __n128 *inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE v18[56];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v5 = *a1;
  v16 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_255_1(inited, (__n128)xmmword_242C4B7D0);
  HIBYTE(v15) = v5;
  OUTLINED_FUNCTION_43_23(a2, (uint64_t)v18);
  OUTLINED_FUNCTION_220_2(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_50_16(a2);
  *a3 = v17;
  OUTLINED_FUNCTION_38_15();
}

void Tensor.init(coercing:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  char *v6;
  char v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _BYTE v20[56];
  uint64_t v21;

  OUTLINED_FUNCTION_249_1();
  v21 = *MEMORY[0x24BDAC8D0];
  v7 = *v6;
  v18 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(inited + 32) = v3;
  HIBYTE(v17) = v7;
  OUTLINED_FUNCTION_22_24(a3, (uint64_t)v20);
  OUTLINED_FUNCTION_220_2(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_12_34(a3);
  *v4 = v19;
  OUTLINED_FUNCTION_38_15();
}

{
  uint64_t v3;
  char *v5;
  char v6;
  uint64_t v7;
  _BYTE v8[56];
  uint64_t v9;

  OUTLINED_FUNCTION_249_1();
  v6 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v3 + 16);
  v9 = v7;
  v8[55] = v6;
  OUTLINED_FUNCTION_43_23(a3, (uint64_t)v8);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_50_16(a3);
  OUTLINED_FUNCTION_231_1();
}

uint64_t sub_242B64764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a2 + 32);
    v4 = v2 - 1;
    do
    {
      v5 = *v3++;
      v2 = v5 == a1;
    }
    while (v5 != a1 && v4-- != 0);
  }
  return v2;
}

BOOL sub_242B64794(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  _BOOL8 result;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = a1;
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v6 = *v4++;
    result = v6 == v3;
  }
  while (v6 != v3 && v5-- != 0);
  return result;
}

void sub_242B647CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  _QWORD *v9;

  v6 = *(_QWORD *)(a3 + 16);
  if (!v6
    || ((OUTLINED_FUNCTION_173_1(a1, a2, a3), v8) ? (v8 = v7 == v3) : (v8 = 0),
        v8 || (OUTLINED_FUNCTION_76_9() & 1) != 0 || v6 == 1))
  {
LABEL_9:
    OUTLINED_FUNCTION_7_0();
  }
  else
  {
    v9 = (_QWORD *)(v5 + 56);
    while (!__OFADD__(1, 1))
    {
      if ((*(v9 - 1) != v4 || *v9 != v3) && (OUTLINED_FUNCTION_76_9() & 1) == 0)
      {
        OUTLINED_FUNCTION_213_1();
        if (!v8)
          continue;
      }
      goto LABEL_9;
    }
    __break(1u);
  }
}

void Tensor.init(_:on:)(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE v9[104];

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
  v4 = OUTLINED_FUNCTION_114_3();
  *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(v4 + 32) = a1;
  OUTLINED_FUNCTION_22_24(a2, (uint64_t)v9);
  OUTLINED_FUNCTION_189_1();
  sub_242A8E108(v5, v6, v7, v8);
  OUTLINED_FUNCTION_12_34(a2);
  OUTLINED_FUNCTION_231_1();
  OUTLINED_FUNCTION_100_4();
}

uint64_t sub_242B648D4()
{
  return 0;
}

uint64_t sub_242B648DC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (*v1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (!__OFADD__(v3, 1))
  {
    v4 = *v1;
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v1 = v4;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v4 & 0x8000000000000000) != 0
      || (v4 & 0x4000000000000000) != 0
      || (v6 = v4 & 0xFFFFFFFFFFFFFF8, v3 + 1 > *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
    {
      if (v4 >> 62)
        goto LABEL_18;
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  __break(1u);
  do
  {
    __break(1u);
LABEL_18:
    OUTLINED_FUNCTION_74();
    sub_242C48FC8();
    OUTLINED_FUNCTION_34();
LABEL_9:
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_87_6();
    v7 = MEMORY[0x2494EC858]();
    OUTLINED_FUNCTION_210_2(v7);
    v6 = *v1 & 0xFFFFFFFFFFFFFF8;
LABEL_10:
    v8 = *(_QWORD *)(v6 + 16);
    v9 = *(_QWORD *)(v6 + 24) >> 1;
    if (v9 == v8)
    {
LABEL_14:
      __break(1u);
LABEL_15:
      OUTLINED_FUNCTION_74();
      v3 = sub_242C48FC8();
      OUTLINED_FUNCTION_34();
      goto LABEL_3;
    }
  }
  while (v9 <= v8);
  if (!a1)
    goto LABEL_14;
  *(_QWORD *)(v6 + 8 * v8 + 32) = a1;
  ++*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  return sub_242C4856C();
}

void sub_242B64A2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_28_31();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_40_22() || (OUTLINED_FUNCTION_135_4(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_87_6();
    sub_242A5E0B4();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_79_7();
  sub_242B6A504();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v2;
    OUTLINED_FUNCTION_7_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_242B64AC0()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  OUTLINED_FUNCTION_115();
  v2 = v1;
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_28_1();
    v3 = sub_242C48FC8();
    OUTLINED_FUNCTION_4_0();
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (*v0 >> 62)
  {
    OUTLINED_FUNCTION_44_0();
    v4 = sub_242C48FC8();
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    v4 = *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = v4 + v3;
  if (__OFADD__(v4, v3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v0;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v0 = v6;
  v4 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v8 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v4 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v5)
      v9 = v5;
    OUTLINED_FUNCTION_44_0();
    v10 = MEMORY[0x2494EC858](v4, v9, 1, v6);
    OUTLINED_FUNCTION_210_2(v10);
    v8 = *v0 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    result = sub_242B6C7AC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), v2);
    if (v12 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_44_0();
    v9 = sub_242C48FC8();
    OUTLINED_FUNCTION_3_6();
    v6 = *v0;
  }
  if (v12 < 1)
    goto LABEL_20;
  v13 = *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = __OFADD__(v13, v12);
  v15 = v13 + v12;
  if (!v14)
  {
    *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_242C4856C();
  }
  __break(1u);
  return result;
}

void sub_242B64C50(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (!OUTLINED_FUNCTION_147_2() || (v7 = *(_QWORD *)(v2 + 24) >> 1, v7 <= v5))
  {
    sub_242A5DEF4();
    v2 = v8;
    OUTLINED_FUNCTION_192_1();
  }
  v9 = *(_QWORD *)(v2 + 16);
  v10 = v7 - v9;
  if (!v10)
    goto LABEL_10;
  if (v10 < 1)
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (!v4)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v11 = v2 + 16 * v9;
  *(_QWORD *)(v11 + 32) = v4;
  *(_BYTE *)(v11 + 40) = a2;
  *(_QWORD *)(v2 + 16) = v9 + 1;
  if (v10 != 1)
    swift_bridgeObjectRelease();
  *v3 = v2;
  OUTLINED_FUNCTION_7_0();
}

void sub_242B64CF8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = OUTLINED_FUNCTION_48_21();
  if (!(_DWORD)v5 || (v6 = *(_QWORD *)(v3 + 24) >> 1, v6 <= v4))
  {
    OUTLINED_FUNCTION_2_27(v5, v4 + 1);
    v3 = v7;
    OUTLINED_FUNCTION_192_1();
  }
  v8 = *(_QWORD *)(v3 + 16);
  if (v6 != v8)
  {
    if (v6 > v8)
    {
      *(_QWORD *)(v3 + 8 * v8 + 32) = a1;
      *(_QWORD *)(v3 + 16) = v8 + 1;
      *v1 = v3;
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_242B64D78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_28_31();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_40_22() || (OUTLINED_FUNCTION_135_4(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_87_6();
    sub_242A5E37C();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = OUTLINED_FUNCTION_230_2();
  sub_242B6A8B4(v8, v3);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v2;
    OUTLINED_FUNCTION_7_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_242B64E14(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[30];
  uint64_t __dst[30];
  _BYTE v42[240];
  _BYTE v43[240];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(v4 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || (v7 = *(_QWORD *)(v4 + 24) >> 1, v7 <= v5))
  {
    sub_242A5E3A0();
    v4 = v8;
    *v2 = v8;
    OUTLINED_FUNCTION_192_1();
  }
  v9 = *(_QWORD *)(v4 + 16);
  v10 = v7 - v9;
  v11 = (char *)(v4 + 240 * v9 + 32);
  OUTLINED_FUNCTION_184_2(a1, (uint64_t)v42);
  sub_242C38A34(v43, v11, v10);
  v13 = v12;
  OUTLINED_FUNCTION_61_13(a1);
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  v22 = *(_QWORD *)(*v2 + 16);
  v23 = __OFADD__(v22, v13);
  v24 = v22 + v13;
  if (v23)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)(*v2 + 16) = v24;
  if (v13 != v10)
  {
    v25 = &qword_257228CA0;
    v26 = (uint64_t *)v43;
    goto LABEL_8;
  }
LABEL_11:
  v27 = *(_QWORD *)(*v2 + 16);
  OUTLINED_FUNCTION_183_2(v14, v15, v16, v17, v18, v19, v20, v21, v40[0], v40[1], v40[2], v40[3], v40[4], v40[5], v40[6], v40[7], v40[8], v40[9], v40[10],
    v40[11],
    v40[12],
    v40[13],
    v40[14],
    v40[15],
    v40[16],
    v40[17],
    v40[18],
    v40[19],
    v40[20],
    v40[21],
    v40[22],
    v40[23],
    v40[24],
    v40[25],
    v40[26],
    v40[27],
    v40[28],
    v40[29],
    __dst[0],
    __dst[1],
    __dst[2],
    __dst[3],
    __dst[4],
    __dst[5],
    __dst[6],
    __dst[7],
    __dst[8],
    __dst[9],
    __dst[10],
    __dst[11],
    __dst[12],
    __dst[13],
    __dst[14],
    __dst[15],
    __dst[16],
    __dst[17],
    __dst[18],
    __dst[19],
    __dst[20],
    __dst[21],
    __dst[22],
    __dst[23],
    __dst[24]);
  OUTLINED_FUNCTION_224_2();
  OUTLINED_FUNCTION_22_24((uint64_t)v42, (uint64_t)__dst);
  while (__dst[0])
  {
    OUTLINED_FUNCTION_12_34((uint64_t)__dst);
    v28 = *v2;
    v29 = *(_QWORD *)(*v2 + 24) >> 1;
    if (v29 < v27 + 1)
    {
      OUTLINED_FUNCTION_87_6();
      sub_242A5E3A0();
      v28 = v39;
      *v2 = v39;
      v29 = *(_QWORD *)(v39 + 24) >> 1;
    }
    OUTLINED_FUNCTION_22_24((uint64_t)v42, (uint64_t)v40);
    if (v40[0])
    {
      v30 = (char *)(v28 + 240 * v27 + 32);
      while (1)
      {
        memcpy(__dst, v40, 0xECuLL);
        if (v27 >= v29)
          break;
        OUTLINED_FUNCTION_12_34((uint64_t)v42);
        v31 = memcpy(v30, __dst, 0xECuLL);
        ++v27;
        OUTLINED_FUNCTION_183_2((uint64_t)v31, v32, v33, v34, v35, v36, v37, v38, v40[0], v40[1], v40[2], v40[3], v40[4], v40[5], v40[6], v40[7], v40[8], v40[9], v40[10],
          v40[11],
          v40[12],
          v40[13],
          v40[14],
          v40[15],
          v40[16],
          v40[17],
          v40[18],
          v40[19],
          v40[20],
          v40[21],
          v40[22],
          v40[23],
          v40[24],
          v40[25],
          v40[26],
          v40[27],
          v40[28],
          v40[29],
          __dst[0],
          __dst[1],
          __dst[2],
          __dst[3],
          __dst[4],
          __dst[5],
          __dst[6],
          __dst[7],
          __dst[8],
          __dst[9],
          __dst[10],
          __dst[11],
          __dst[12],
          __dst[13],
          __dst[14],
          __dst[15],
          __dst[16],
          __dst[17],
          __dst[18],
          __dst[19],
          __dst[20],
          __dst[21],
          __dst[22],
          __dst[23],
          __dst[24]);
        OUTLINED_FUNCTION_224_2();
        OUTLINED_FUNCTION_22_24((uint64_t)v42, (uint64_t)v40);
        v30 += 240;
        if (!v40[0])
          goto LABEL_18;
      }
      sub_242A6945C(__dst);
    }
    else
    {
LABEL_18:
      OUTLINED_FUNCTION_12_34((uint64_t)v40);
    }
    *(_QWORD *)(*v2 + 16) = v27;
    OUTLINED_FUNCTION_22_24((uint64_t)v42, (uint64_t)__dst);
  }
  sub_242A929A8((uint64_t)v42, &qword_257222958);
  sub_242A929A8((uint64_t)v43, &qword_257228CA0);
  v26 = __dst;
  v25 = &qword_257222958;
LABEL_8:
  sub_242A929A8((uint64_t)v26, v25);
}

void sub_242B65064()
{
  sub_242B65814();
}

void sub_242B65070()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_28_31();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_40_22() || (OUTLINED_FUNCTION_135_4(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_87_6();
    sub_242A5E558();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_79_7();
  sub_242B6B008();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v2;
    OUTLINED_FUNCTION_7_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_242B65108()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_28_31();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_40_22() || (OUTLINED_FUNCTION_135_4(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_87_6();
    sub_242A5E8EC();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = OUTLINED_FUNCTION_230_2();
  sub_242B6A8B4(v8, v3);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v2;
    OUTLINED_FUNCTION_7_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_242B651A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_242A5E924();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_242B6A9EC();
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_242B6527C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_28_31();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_40_22() || (OUTLINED_FUNCTION_135_4(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_87_6();
    sub_242A5EB94();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = OUTLINED_FUNCTION_79_7();
  sub_242B6B458(v8, v9);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v2;
    OUTLINED_FUNCTION_7_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_242B65310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t (*v28)(char *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v2 = a1;
  v8 = OUTLINED_FUNCTION_48_21();
  if (!(_DWORD)v8 || (v9 = *(_QWORD *)(v5 + 24) >> 1, v9 < v7))
  {
    if (v6 <= v7)
      v10 = v6 + v4;
    else
      v10 = v6;
    OUTLINED_FUNCTION_2_27(v8, v10);
    v5 = v11;
    OUTLINED_FUNCTION_192_1();
  }
  v12 = *(_QWORD *)(v5 + 16);
  v13 = v9 - v12;
  a1 = sub_242C385E0(&v32, v5 + 8 * v12 + 32, v9 - v12, v2);
  if (a1 < v4)
    goto LABEL_15;
  if (a1)
  {
    v14 = *(_QWORD *)(v5 + 16);
    v15 = __OFADD__(v14, a1);
    v16 = v14 + a1;
    if (v15)
    {
      __break(1u);
LABEL_29:
      v27 = v7 + 1;
      goto LABEL_30;
    }
    *(_QWORD *)(v5 + 16) = v16;
  }
  if (a1 != v13)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *v3 = v5;
    OUTLINED_FUNCTION_188_2();
    return;
  }
LABEL_16:
  v17 = v32;
  v18 = v33;
  if (v33 == *(_QWORD *)(v32 + 16))
    goto LABEL_13;
  v7 = *(_QWORD *)(v5 + 16);
  v19 = (uint64_t (*)(char *, _QWORD))OUTLINED_FUNCTION_207_2(a1, a2);
  v22 = OUTLINED_FUNCTION_142_4(v19, v20, v21);
  v15 = __OFADD__(v18, 1);
  v24 = v18 + 1;
  if (!v15)
  {
    while (1)
    {
      v25 = *(_QWORD *)(v5 + 24);
      v26 = v25 >> 1;
      v27 = v7 + 1;
      if ((uint64_t)(v25 >> 1) < v7 + 1)
      {
        OUTLINED_FUNCTION_2_27(v25 > 1, v7 + 1);
        v27 = v7 + 1;
        v5 = v22;
        v26 = *(_QWORD *)(v22 + 24) >> 1;
      }
      if (v7 < v26)
        break;
LABEL_27:
      *(_QWORD *)(v5 + 16) = v7;
    }
    *(_QWORD *)(v5 + 8 * v7 + 32) = v2;
    if (v24 != *(_QWORD *)(v17 + 16))
    {
      while (1)
      {
        v28 = (uint64_t (*)(char *, _QWORD))OUTLINED_FUNCTION_207_2(v22, v23);
        v22 = OUTLINED_FUNCTION_142_4(v28, v29, v30);
        v31 = v24 + 1;
        if (__OFADD__(v24, 1))
          break;
        if (v7 + 1 >= v26)
        {
          ++v7;
          ++v24;
          goto LABEL_27;
        }
        *(_QWORD *)(v5 + 40 + 8 * v7) = v2;
        ++v24;
        ++v7;
        if (v31 == *(_QWORD *)(v17 + 16))
          goto LABEL_29;
      }
      __break(1u);
      goto LABEL_33;
    }
LABEL_30:
    *(_QWORD *)(v5 + 16) = v27;
    goto LABEL_13;
  }
LABEL_33:
  __break(1u);
}

void sub_242B654C8()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[184];
  _BYTE v20[184];
  _BYTE v21[184];
  _BYTE v22[184];
  _BYTE v23[184];
  _BYTE v24[184];

  OUTLINED_FUNCTION_115();
  if (!OUTLINED_FUNCTION_147_2() || (v4 = *(_QWORD *)(v0 + 24) >> 1, v4 <= v3))
  {
    OUTLINED_FUNCTION_164_0();
    v0 = v5;
    v4 = *(_QWORD *)(v5 + 24) >> 1;
  }
  v6 = *(_QWORD *)(v0 + 16);
  v7 = v4 - v6;
  OUTLINED_FUNCTION_13_38(v24, v2);
  sub_242AA3C00((uint64_t)v24);
  if (v4 == v6)
  {
    OUTLINED_FUNCTION_253_1((uint64_t)v24, v8, &qword_257222B50);
  }
  else
  {
    sub_242AA3BBC(v22);
    sub_242A929E0((uint64_t)v24, (uint64_t)v21, &qword_257222B50);
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_18;
    }
    sub_242A929E0((uint64_t)v21, (uint64_t)v20, &qword_257222B50);
    if (sub_242B03F18((uint64_t)v20) == 1)
    {
      v10 = 0;
LABEL_11:
      OUTLINED_FUNCTION_253_1((uint64_t)v22, v9, &qword_257222B50);
    }
    else
    {
      v10 = 0;
      v2 = (char *)(v0 + 176 * v6 + 32);
      v6 = ~v6 + v4;
      while (1)
      {
        OUTLINED_FUNCTION_124_5((uint64_t)v21, (uint64_t)v19);
        OUTLINED_FUNCTION_13_38(v2, v19);
        if (v6 == v10)
          break;
        v2 += 176;
        OUTLINED_FUNCTION_124_5((uint64_t)v22, (uint64_t)v21);
        OUTLINED_FUNCTION_124_5((uint64_t)v21, (uint64_t)v20);
        ++v10;
        if (sub_242B03F18((uint64_t)v20) == 1)
          goto LABEL_11;
      }
      OUTLINED_FUNCTION_253_1((uint64_t)v22, v11, &qword_257222B50);
      v10 = v7;
    }
    if (v10 >= 1)
    {
      v12 = *(_QWORD *)(v0 + 16);
      v6 = v12 + v10;
      if (!__OFADD__(v12, v10))
      {
        *(_QWORD *)(v0 + 16) = v6;
        if (v10 != v7)
          goto LABEL_16;
LABEL_19:
        sub_242A929E0((uint64_t)v23, (uint64_t)v22, &qword_257222B50);
        if (sub_242B03F18((uint64_t)v22) == 1)
          goto LABEL_16;
        v13 = *(_QWORD *)(v0 + 24) >> 1;
        v2 = (char *)(v6 + 1);
        if (v13 >= v6 + 1)
          goto LABEL_21;
        goto LABEL_32;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_32:
  OUTLINED_FUNCTION_164_0();
  v0 = v18;
  OUTLINED_FUNCTION_192_1();
LABEL_21:
  if (v6 >= v13)
  {
    for (i = v23; ; i = v19)
    {
      OUTLINED_FUNCTION_124_5((uint64_t)i, (uint64_t)v21);
      *(_QWORD *)(v0 + 16) = v6;
      v16 = *(_QWORD *)(v0 + 24) >> 1;
      if (v16 < (uint64_t)v2)
      {
        OUTLINED_FUNCTION_164_0();
        v0 = v17;
        v16 = *(_QWORD *)(v17 + 24) >> 1;
      }
      OUTLINED_FUNCTION_124_5((uint64_t)v21, (uint64_t)v20);
      if (v6 < v16)
        break;
      OUTLINED_FUNCTION_124_5((uint64_t)v21, (uint64_t)v19);
    }
    v14 = v20;
  }
  else
  {
    sub_242A929E0((uint64_t)v23, (uint64_t)v21, &qword_257222B50);
    v14 = v21;
  }
  OUTLINED_FUNCTION_13_38(v19, v14);
  OUTLINED_FUNCTION_13_38((void *)(v0 + 176 * v6 + 32), v19);
  *(_QWORD *)(v0 + 16) = v2;
LABEL_16:
  *v1 = v0;
  OUTLINED_FUNCTION_12_0();
}

void sub_242B65774()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_28_31();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_40_22() || (OUTLINED_FUNCTION_135_4(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_87_6();
    sub_242A5E1D4();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_79_7();
  sub_242B6A808();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v2;
    OUTLINED_FUNCTION_7_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_242B65808()
{
  sub_242B65814();
}

void sub_242B65814()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_115();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *v1;
  v6 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = v2;
  if (!OUTLINED_FUNCTION_40_22() || v6 + v4 > *(_QWORD *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_87_6();
    v5 = v7();
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v4)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v8 != v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = OUTLINED_FUNCTION_79_7();
  sub_242B6B7E4(v10, v11);
  if (!v4)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v5;
    OUTLINED_FUNCTION_12_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v9)
  {
    *(_QWORD *)(v5 + 16) = v12;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_242B658BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_28_31();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_40_22() || (OUTLINED_FUNCTION_135_4(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_87_6();
    sub_242A5F170();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_24_31();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_79_7();
  sub_242B6A9EC();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    *v1 = v2;
    OUTLINED_FUNCTION_7_0();
    return;
  }
  OUTLINED_FUNCTION_109_3();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void Tensor.init(shape:data:scalarType:on:)(uint64_t *a1, uint64_t a2, unint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE v15[55];
  char v16;
  uint64_t v17;
  uint64_t v18;

  v8 = *a1;
  v9 = *a4;
  if ((sub_242B64474(a2, a3) & 1) != 0)
    goto LABEL_15;
  v10 = sub_242C47C0C();
  if (*(_QWORD *)(v8 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_250_1();
      if (!v13)
        break;
      if (v12 == 1)
        goto LABEL_8;
    }
    __break(1u);
    goto LABEL_14;
  }
  v11 = 1;
LABEL_8:
  if ((v9 - 1) > 0xA)
    v14 = 1;
  else
    v14 = qword_242C585C0[(char)(v9 - 1)];
  if ((unsigned __int128)(v11 * (__int128)v14) >> 64 != (v11 * v14) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v10 >= v11 * v14)
  {
    v17 = v8;
    v16 = v9;
    OUTLINED_FUNCTION_184_2(a5, (uint64_t)v15);
    sub_242A92930(a2, a3);
    sub_242B663D0(&v17, &v16, (uint64_t)v15, a2, a3, &v18);
    OUTLINED_FUNCTION_61_13(a5);
    sub_242A69418(a2, a3);
    OUTLINED_FUNCTION_218_2();
    OUTLINED_FUNCTION_7_6();
    return;
  }
LABEL_15:
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_2_30();
  __break(1u);
}

uint64_t sub_242B65AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumTagSinglePayload;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v32 = a1;
  v11 = sub_242C48A64();
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v26 = (char *)&v25 - v12;
  v13 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v19 = (char *)&v25 - v18;
  v31 = a4;
  v33 = a4;
  v34 = a5;
  v35 = a6;
  v36 = a2;
  v27 = a2;
  v28 = a3;
  v20 = v32;
  v37 = a3;
  sub_242C483F8();
  if (v39 != 1)
    return v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v20, a5);
  v21 = sub_242C483E0();
  swift_getAssociatedConformanceWitness();
  v22 = (uint64_t)v26;
  sub_242C48A94();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v19, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v22, 1, v31);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v22, v30);
  if (EnumTagSinglePayload != 1)
  {
    __break(1u);
    return v38;
  }
  return v21;
}

void Tensor.init<A>(shape:scalars:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[56];
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_26_33();
  if (v3)
  {
    OUTLINED_FUNCTION_234_1();
    while (1)
    {
      OUTLINED_FUNCTION_83_7();
      if (!v4)
        break;
      OUTLINED_FUNCTION_232_2();
      if (v4)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
  v2 = 1;
LABEL_9:
  if (v2 != OUTLINED_FUNCTION_281_0())
  {
LABEL_11:
    OUTLINED_FUNCTION_44_18();
    OUTLINED_FUNCTION_219_1();
    OUTLINED_FUNCTION_29_23();
    if (*(_QWORD *)(v1 + 16))
    {
      OUTLINED_FUNCTION_233_2();
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v4)
          break;
        OUTLINED_FUNCTION_358();
        if (v4)
          goto LABEL_17;
      }
      __break(1u);
    }
LABEL_17:
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_103_3();
    v11 = OUTLINED_FUNCTION_281_0();
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_119_5();
    OUTLINED_FUNCTION_11_38();
    OUTLINED_FUNCTION_100_0();
  }
  v10 = v1;
  v9[55] = 2;
  OUTLINED_FUNCTION_22_24(v0, (uint64_t)v9);
  OUTLINED_FUNCTION_229_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_58_10();
  OUTLINED_FUNCTION_34_24(v6, v7, v8, (uint64_t)sub_242B6A470);
  OUTLINED_FUNCTION_12_34(v0);
  OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_134_4();
  OUTLINED_FUNCTION_12_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[56];
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_26_33();
  if (v3)
  {
    OUTLINED_FUNCTION_234_1();
    while (1)
    {
      OUTLINED_FUNCTION_83_7();
      if (!v4)
        break;
      OUTLINED_FUNCTION_232_2();
      if (v4)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
  v2 = 1;
LABEL_9:
  if (v2 != OUTLINED_FUNCTION_281_0())
  {
LABEL_11:
    OUTLINED_FUNCTION_44_18();
    OUTLINED_FUNCTION_219_1();
    OUTLINED_FUNCTION_29_23();
    if (*(_QWORD *)(v1 + 16))
    {
      OUTLINED_FUNCTION_233_2();
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v4)
          break;
        OUTLINED_FUNCTION_358();
        if (v4)
          goto LABEL_17;
      }
      __break(1u);
    }
LABEL_17:
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_103_3();
    v11 = OUTLINED_FUNCTION_281_0();
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_119_5();
    OUTLINED_FUNCTION_11_38();
    OUTLINED_FUNCTION_100_0();
  }
  v10 = v1;
  v9[55] = 3;
  OUTLINED_FUNCTION_22_24(v0, (uint64_t)v9);
  OUTLINED_FUNCTION_229_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_58_10();
  OUTLINED_FUNCTION_34_24(v6, v7, v8, (uint64_t)sub_242B6CEFC);
  OUTLINED_FUNCTION_12_34(v0);
  OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_134_4();
  OUTLINED_FUNCTION_12_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[56];
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_26_33();
  if (v3)
  {
    OUTLINED_FUNCTION_234_1();
    while (1)
    {
      OUTLINED_FUNCTION_83_7();
      if (!v4)
        break;
      OUTLINED_FUNCTION_232_2();
      if (v4)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
  v2 = 1;
LABEL_9:
  if (v2 != OUTLINED_FUNCTION_281_0())
  {
LABEL_11:
    OUTLINED_FUNCTION_44_18();
    OUTLINED_FUNCTION_219_1();
    OUTLINED_FUNCTION_29_23();
    if (*(_QWORD *)(v1 + 16))
    {
      OUTLINED_FUNCTION_233_2();
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v4)
          break;
        OUTLINED_FUNCTION_358();
        if (v4)
          goto LABEL_17;
      }
      __break(1u);
    }
LABEL_17:
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_103_3();
    v11 = OUTLINED_FUNCTION_281_0();
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_119_5();
    OUTLINED_FUNCTION_11_38();
    OUTLINED_FUNCTION_100_0();
  }
  v10 = v1;
  v9[55] = 10;
  OUTLINED_FUNCTION_22_24(v0, (uint64_t)v9);
  OUTLINED_FUNCTION_229_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_58_10();
  OUTLINED_FUNCTION_34_24(v6, v7, v8, (uint64_t)sub_242B6CF14);
  OUTLINED_FUNCTION_12_34(v0);
  OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_134_4();
  OUTLINED_FUNCTION_12_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[56];
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_26_33();
  if (v3)
  {
    OUTLINED_FUNCTION_234_1();
    while (1)
    {
      OUTLINED_FUNCTION_83_7();
      if (!v4)
        break;
      OUTLINED_FUNCTION_232_2();
      if (v4)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
  v2 = 1;
LABEL_9:
  if (v2 != OUTLINED_FUNCTION_281_0())
  {
LABEL_11:
    OUTLINED_FUNCTION_44_18();
    OUTLINED_FUNCTION_219_1();
    OUTLINED_FUNCTION_29_23();
    if (*(_QWORD *)(v1 + 16))
    {
      OUTLINED_FUNCTION_233_2();
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v4)
          break;
        OUTLINED_FUNCTION_358();
        if (v4)
          goto LABEL_17;
      }
      __break(1u);
    }
LABEL_17:
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_103_3();
    v11 = OUTLINED_FUNCTION_281_0();
    OUTLINED_FUNCTION_19_29();
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_119_5();
    OUTLINED_FUNCTION_11_38();
    OUTLINED_FUNCTION_100_0();
  }
  v10 = v1;
  v9[55] = 12;
  OUTLINED_FUNCTION_22_24(v0, (uint64_t)v9);
  OUTLINED_FUNCTION_229_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_58_10();
  OUTLINED_FUNCTION_34_24(v6, v7, v8, (uint64_t)sub_242B6CF34);
  OUTLINED_FUNCTION_12_34(v0);
  OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_134_4();
  OUTLINED_FUNCTION_12_0();
}

void Tensor.init(zeros:scalarType:on:)(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  int v58;
  _BYTE v59[64];

  v11 = *a1;
  v12 = *a2;
  OUTLINED_FUNCTION_144_4((uint64_t)a1, (uint64_t)a2, (uint64_t *)&unk_257228D70, a4, a5, a6, a7, a8, v35, v37, v39, v40, v41, v42, v43, v44, v45, v46, v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56);
  if (*((_QWORD *)&v57 + 1))
  {
    OUTLINED_FUNCTION_101_4(v13, v14, v15, v16, v17, v18, v19, v20, v36, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v21,
      v58);
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    v22 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_157_2((uint64_t)v22, v23);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v39, (uint64_t)v59);
    OUTLINED_FUNCTION_254_0(v24, v25);
    OUTLINED_FUNCTION_12_34((uint64_t)&v56);
  }
  if (qword_2572205A8 != -1)
    swift_once();
  v39 = v11;
  LOBYTE(v56) = v12;
  sub_242C03714(&v39, (char *)&v56, (uint64_t)v59, qword_257259A10);
  OUTLINED_FUNCTION_108_3();
  OUTLINED_FUNCTION_165_2();
  OUTLINED_FUNCTION_138_4((uint64_t)v59, (uint64_t)&v39);
  OUTLINED_FUNCTION_240_0();
  v26 = OUTLINED_FUNCTION_166_3();
  OUTLINED_FUNCTION_30_25(v26, v27, v28, v29, v30, v31, v32, v33, v36, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56);
  OUTLINED_FUNCTION_47_20();
  v34 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_16_34(v34);
  sub_242BC995C();
  OUTLINED_FUNCTION_32_10();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_86_6(a3);
  OUTLINED_FUNCTION_86_6((uint64_t)v59);
  *a9 = v34;
  OUTLINED_FUNCTION_139_3();
}

void sub_242B65F7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  int v83;
  _BYTE v84[64];

  OUTLINED_FUNCTION_172_1();
  v5 = *v4;
  OUTLINED_FUNCTION_161_2(v6, (uint64_t)v4, (uint64_t *)&unk_257228D70, v7, v8, v9, v10, v11, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81);
  if (*((_QWORD *)&v82 + 1))
  {
    OUTLINED_FUNCTION_136_4(v12, v13, v14, v15, v16, v17, v18, v19, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      v20,
      v83);
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    v28 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_210((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35, v64);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v64, (uint64_t)v84);
    OUTLINED_FUNCTION_191(v36, v37, v38, v39, v40, v41, v42, v43, v64);
    OUTLINED_FUNCTION_12_34((uint64_t)&v81);
  }
  if (qword_2572205A8 != -1)
    v21 = swift_once();
  LOBYTE(v81) = v5;
  v44 = OUTLINED_FUNCTION_215_2(v21, v22, v23, qword_257259A10, v24, v25, v26, v27, v3);
  sub_242C032D0(v44, v45, v46, v47);
  if (v1)
  {
    OUTLINED_FUNCTION_120_5(v2);
    OUTLINED_FUNCTION_120_5((uint64_t)v84);
    OUTLINED_FUNCTION_35();
  }
  else
  {
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_66_14((uint64_t)v84, v48, v49, v50, v51, v52, v53, v54, v64);
    OUTLINED_FUNCTION_165_2();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_160_4();
    v55 = OUTLINED_FUNCTION_148_3();
    OUTLINED_FUNCTION_32_27(v55, v56, v57, v58, v59, v60, v61, v62, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81);
    OUTLINED_FUNCTION_47_20();
    v63 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_16_34(v63);
    sub_242BC995C();
    OUTLINED_FUNCTION_23_13();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_61_13(v2);
    OUTLINED_FUNCTION_61_13((uint64_t)v84);
    *v0 = v63;
  }
  OUTLINED_FUNCTION_132_3();
}

#error "242B660FC: call analysis failed (funcsize=90)"

#error "242B6627C: call analysis failed (funcsize=91)"

uint64_t sub_242B663D0@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[17];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int v26;
  _OWORD v27[3];
  int v28;

  v11 = *a1;
  v12 = *a2;
  sub_242A9297C(a3, (uint64_t)&v23, (uint64_t *)&unk_257228D70);
  if (*((_QWORD *)&v24 + 1))
  {
    v27[0] = v23;
    v27[1] = v24;
    v27[2] = v25;
    v28 = v26;
    sub_242A92930(a4, a5);
  }
  else
  {
    type metadata accessor for ContextManager();
    sub_242A92930(a4, a5);
    sub_242B93328();
    sub_242B933C0((uint64_t)v22);
    swift_release();
    sub_242A9297C((uint64_t)v22, (uint64_t)v27, (uint64_t *)&unk_257228D70);
    sub_242A5DC30((uint64_t)v22);
    sub_242A929A8((uint64_t)&v23, (uint64_t *)&unk_257228D70);
  }
  if (qword_2572205A8 != -1)
    swift_once();
  v13 = qword_257259A10;
  v22[0] = v11;
  LOBYTE(v23) = v12;
  sub_242A92930(a4, a5);
  sub_242C03B8C(v22, &v23, v27, v13, a4, a5);
  if (v6)
  {
    sub_242A929A8(a3, (uint64_t *)&unk_257228D70);
    sub_242A929A8((uint64_t)v27, (uint64_t *)&unk_257228D70);
    swift_bridgeObjectRelease();
    sub_242A69418(a4, a5);
    return sub_242A69418(a4, a5);
  }
  else
  {
    v16 = v14;
    swift_bridgeObjectRelease();
    sub_242A9297C((uint64_t)v27, (uint64_t)v22, (uint64_t *)&unk_257228D70);
    type metadata accessor for TensorRepresentation();
    v17 = swift_allocObject();
    ObjectType = swift_getObjectType();
    v19 = swift_unknownObjectRetain();
    LOBYTE(v23) = 1;
    v20 = sub_242BCBEA4(v19, (uint64_t)v22, 0x100000000, v17, ObjectType, v16);
    type metadata accessor for TensorHandle();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    swift_retain();
    sub_242BC995C();
    swift_unknownObjectRelease();
    swift_release();
    sub_242A929A8(a3, (uint64_t *)&unk_257228D70);
    sub_242A929A8((uint64_t)v27, (uint64_t *)&unk_257228D70);
    sub_242A69418(a4, a5);
    result = sub_242A69418(a4, a5);
    *a6 = v21;
  }
  return result;
}

void sub_242B6666C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  int v88;
  _BYTE v89[64];

  OUTLINED_FUNCTION_172_1();
  v10 = *v9;
  OUTLINED_FUNCTION_161_2(v11, (uint64_t)v9, (uint64_t *)&unk_257228D70, v12, v13, v14, v15, v16, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86);
  if (*((_QWORD *)&v87 + 1))
  {
    OUTLINED_FUNCTION_136_4(v17, v18, v19, v20, v21, v22, v23, v24, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79,
      v80,
      v81,
      v82,
      v83,
      v84,
      v85,
      v86,
      v87,
      v25,
      v88);
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    v32 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_210((uint64_t)v32, v33, v34, v35, v36, v37, v38, v39, v69);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v69, (uint64_t)v89);
    OUTLINED_FUNCTION_191(v40, v41, v42, v43, v44, v45, v46, v47, v69);
    OUTLINED_FUNCTION_12_34((uint64_t)&v86);
  }
  if (qword_2572205A8 != -1)
    v26 = swift_once();
  LOBYTE(v86) = v10;
  v48 = OUTLINED_FUNCTION_215_2(v26, v27, v28, qword_257259A10, a4 & 1, v29, v30, v31, v7);
  sub_242C03D50(v48, v49, v50, v51, v52);
  if (v5)
  {
    OUTLINED_FUNCTION_120_5(v6);
    OUTLINED_FUNCTION_120_5((uint64_t)v89);
    OUTLINED_FUNCTION_35();
  }
  else
  {
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_66_14((uint64_t)v89, v53, v54, v55, v56, v57, v58, v59, v69);
    OUTLINED_FUNCTION_165_2();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_160_4();
    v60 = OUTLINED_FUNCTION_148_3();
    OUTLINED_FUNCTION_32_27(v60, v61, v62, v63, v64, v65, v66, v67, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79,
      v80,
      v81,
      v82,
      v83,
      v84,
      v85,
      v86);
    OUTLINED_FUNCTION_47_20();
    v68 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_16_34(v68);
    sub_242BC995C();
    OUTLINED_FUNCTION_23_13();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_61_13(v6);
    OUTLINED_FUNCTION_61_13((uint64_t)v89);
    *v4 = v68;
  }
  OUTLINED_FUNCTION_132_3();
}

#error "242B667F4: call analysis failed (funcsize=95)"

void Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  int v69;
  _OWORD v70[3];
  int v71;

  OUTLINED_FUNCTION_172_1();
  v10 = *v9;
  OUTLINED_FUNCTION_161_2(v11, (uint64_t)v9, (uint64_t *)&unk_257228D70, v12, v13, v14, v15, v16, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66);
  if (*((_QWORD *)&v67 + 1))
  {
    v70[0] = v66;
    v70[1] = v67;
    v70[2] = v68;
    v71 = v69;
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    v17 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_210((uint64_t)v17, v18, v19, v20, v21, v22, v23, v24, v49);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v49, (uint64_t)v70);
    OUTLINED_FUNCTION_191(v25, v26, v27, v28, v29, v30, v31, v32, v49);
    OUTLINED_FUNCTION_12_34((uint64_t)&v66);
  }
  if (qword_2572205A8 != -1)
    swift_once();
  v49 = v7;
  LOBYTE(v66) = v10;
  sub_242C0484C(&v49, &v66, v70, a4);
  if (v5)
  {
    OUTLINED_FUNCTION_120_5(v6);
    OUTLINED_FUNCTION_120_5((uint64_t)v70);
    OUTLINED_FUNCTION_35();
  }
  else
  {
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_66_14((uint64_t)v70, v33, v34, v35, v36, v37, v38, v39, v49);
    OUTLINED_FUNCTION_165_2();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_160_4();
    v40 = OUTLINED_FUNCTION_148_3();
    OUTLINED_FUNCTION_32_27(v40, v41, v42, v43, v44, v45, v46, v47, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66);
    OUTLINED_FUNCTION_47_20();
    v48 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_16_34(v48);
    sub_242BC995C();
    OUTLINED_FUNCTION_23_13();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_61_13(v6);
    OUTLINED_FUNCTION_61_13((uint64_t)v70);
    *v4 = v48;
  }
}

void Tensor.init(ones:scalarType:on:)(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[17];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int v16;
  _OWORD v17[3];
  int v18;
  char v19;
  uint64_t v20;

  v6 = *a2;
  v20 = *a1;
  v7 = *(_QWORD *)(v20 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v20 + 32);
    v9 = 1;
    while (1)
    {
      v10 = *v8++;
      v11 = v9 * v10;
      if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63)
        break;
      v9 = v11;
      if (!--v7)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v11 = 1;
LABEL_7:
    sub_242BC08F8(v11, 1.0);
    v19 = v6;
    sub_242A9297C(a3, (uint64_t)&v13, (uint64_t *)&unk_257228D70);
    if (*((_QWORD *)&v14 + 1))
    {
      v17[0] = v13;
      v17[1] = v14;
      v17[2] = v15;
      v18 = v16;
    }
    else
    {
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_105_3();
      sub_242B933C0((uint64_t)v12);
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_22_24((uint64_t)v12, (uint64_t)v17);
      sub_242A5DC30((uint64_t)v12);
      OUTLINED_FUNCTION_12_34((uint64_t)&v13);
    }
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    sub_242A929A8(a3, (uint64_t *)&unk_257228D70);
    *a4 = v12[0];
  }
}

_QWORD *Tensor.init(_:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void Tensor.init(_:on:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 *v4;
  _BYTE v5[96];
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v4 = (__n128 *)OUTLINED_FUNCTION_114_3();
  OUTLINED_FUNCTION_255_1(v4, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_43_23(a1, (uint64_t)v5);
  sub_242A85A44(MEMORY[0x24BEE4AF8], (uint64_t)v4, (uint64_t)v5, &v6);
  OUTLINED_FUNCTION_50_16(a1);
  *a2 = v6;
}

void Tensor.init(_:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _BYTE v9[104];

  OUTLINED_FUNCTION_249_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v4 = OUTLINED_FUNCTION_114_3();
  *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v4 + 32) = v2;
  OUTLINED_FUNCTION_22_24(a2, (uint64_t)v9);
  OUTLINED_FUNCTION_189_1();
  sub_242B47048(v5, v6, v7, v8);
  OUTLINED_FUNCTION_12_34(a2);
  OUTLINED_FUNCTION_231_1();
  OUTLINED_FUNCTION_100_4();
}

void Tensor.init(_:on:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _BYTE v9[104];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2572289F0);
  v4 = OUTLINED_FUNCTION_114_3();
  *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
  *(_BYTE *)(v4 + 32) = a1;
  OUTLINED_FUNCTION_22_24(a2, (uint64_t)v9);
  OUTLINED_FUNCTION_189_1();
  sub_242B67278(v5, v6, v7, v8);
  OUTLINED_FUNCTION_12_34(a2);
  OUTLINED_FUNCTION_231_1();
  OUTLINED_FUNCTION_100_4();
}

void sub_242B67278(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[6];
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a2;
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v6)
        break;
      OUTLINED_FUNCTION_358();
      if (v6)
        goto LABEL_8;
    }
    __break(1u);
LABEL_10:
    v9 = a2;
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    v10 = a1;
    sub_242C48C38();
    OUTLINED_FUNCTION_29_23();
    if (*(_QWORD *)(v10 + 16))
    {
      while (1)
      {
        OUTLINED_FUNCTION_1_11();
        if (!v6)
          break;
        OUTLINED_FUNCTION_358();
        if (v6)
          goto LABEL_17;
      }
      __break(1u);
    }
    v11 = 1;
LABEL_17:
    v15 = v11;
    OUTLINED_FUNCTION_155_0();
    sub_242C48314();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_103_3();
    v15 = *(_QWORD *)(v9 + 16);
    OUTLINED_FUNCTION_155_0();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_11_38();
    OUTLINED_FUNCTION_100_0();
  }
  v7 = 1;
LABEL_8:
  if (v7 != *(_QWORD *)(a2 + 16))
    goto LABEL_10;
  v14 = a1;
  v13 = 12;
  OUTLINED_FUNCTION_43_23(a3, (uint64_t)v12);
  MEMORY[0x24BDAC7A8](v8);
  Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)&v14, (uint64_t)&v13, (uint64_t)v12, (uint64_t)sub_242B6D2A8);
  OUTLINED_FUNCTION_50_16(a3);
  swift_bridgeObjectRelease();
  *a4 = v15;
  OUTLINED_FUNCTION_7_0();
}

void Tensor.init(shape:coercingScalars:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_77_8();
  if (v6)
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v9)
        break;
      if (v7 == 1)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v8 = 1;
LABEL_7:
    if (v8 == *(_QWORD *)(v1 + 16))
    {
      OUTLINED_FUNCTION_106_5(v3, v4, v5);
      v10 = OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_39_22(v10, v11, v12);
      OUTLINED_FUNCTION_140_2(v2);
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_218_2();
      OUTLINED_FUNCTION_7_6();
      return;
    }
  }
  OUTLINED_FUNCTION_68_9();
  OUTLINED_FUNCTION_38_20();
  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_194_2();
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v9)
        break;
      OUTLINED_FUNCTION_358();
      if (v9)
        goto LABEL_15;
    }
    __break(1u);
  }
LABEL_15:
  OUTLINED_FUNCTION_35_20();
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_103_3();
  OUTLINED_FUNCTION_35_20();
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_11_38();
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_77_8();
  if (v6)
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v9)
        break;
      if (v7 == 1)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v8 = 1;
LABEL_7:
    if (v8 == *(_QWORD *)(v1 + 16))
    {
      OUTLINED_FUNCTION_106_5(v3, v4, v5);
      v10 = OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_39_22(v10, v11, v12);
      OUTLINED_FUNCTION_140_2(v2);
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_218_2();
      OUTLINED_FUNCTION_7_6();
      return;
    }
  }
  OUTLINED_FUNCTION_68_9();
  OUTLINED_FUNCTION_38_20();
  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_194_2();
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v9)
        break;
      OUTLINED_FUNCTION_358();
      if (v9)
        goto LABEL_15;
    }
    __break(1u);
  }
LABEL_15:
  OUTLINED_FUNCTION_35_20();
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_103_3();
  OUTLINED_FUNCTION_35_20();
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_11_38();
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_77_8();
  if (v6)
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_48();
      if (!v9)
        break;
      if (v7 == 1)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v8 = 1;
LABEL_7:
    if (v8 == *(_QWORD *)(v1 + 16))
    {
      OUTLINED_FUNCTION_106_5(v3, v4, v5);
      v10 = OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_39_22(v10, v11, v12);
      OUTLINED_FUNCTION_140_2(v2);
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_218_2();
      OUTLINED_FUNCTION_7_6();
      return;
    }
  }
  OUTLINED_FUNCTION_68_9();
  OUTLINED_FUNCTION_38_20();
  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_194_2();
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v9)
        break;
      OUTLINED_FUNCTION_358();
      if (v9)
        goto LABEL_15;
    }
    __break(1u);
  }
LABEL_15:
  OUTLINED_FUNCTION_35_20();
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_103_3();
  OUTLINED_FUNCTION_35_20();
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_11_38();
  __break(1u);
}

void Tensor.init<A>(_:on:)()
{
  sub_242B67838();
}

{
  sub_242B67838();
}

{
  sub_242B67838();
}

void sub_242B67838()
{
  uint64_t v0;
  void (*v1)(uint64_t *__return_ptr, uint64_t *, uint64_t, _BYTE *, uint64_t, uint64_t);
  void (*v2)(uint64_t *__return_ptr, uint64_t *, uint64_t, _BYTE *, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[56];
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_47_13();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v14 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v14 + 32) = sub_242C487B8();
  v16 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v0, v10, v6);
  sub_242A9297C(v8, (uint64_t)v15, (uint64_t *)&unk_257228D70);
  v2(&v17, &v16, v0, v15, v6, v4);
  sub_242A929A8(v8, (uint64_t *)&unk_257228D70);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v6);
  *v12 = v17;
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B67934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, _BYTE *)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _BYTE v10[56];
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v8 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_184_2(a2, (uint64_t)v10);
  OUTLINED_FUNCTION_74();
  a3(&v11, v8, a1, v10);
  OUTLINED_FUNCTION_61_13(a2);
  result = OUTLINED_FUNCTION_34();
  *a4 = v11;
  return result;
}

uint64_t sub_242B67A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  if (a1)
    v6 = (a2 - a1) / 8;
  else
    v6 = 0;
  return sub_242B65AF0(a3, a1, v6, MEMORY[0x24BEE1768], a4, a5);
}

uint64_t sub_242B67AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;

  if (a1)
    v7 = (a2 - a1) / 4;
  else
    v7 = 0;
  return sub_242B65AF0(a3, a1, v7, a6, a4, a5);
}

void *sub_242B67B40(void *result, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  int64_t v5;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v5 = a2 - (_QWORD)result;
    if (!result)
      v5 = 0;
    if (v5 < v4)
    {
      __break(1u);
LABEL_13:
      result = (void *)sub_242C4901C();
      __break(1u);
      return result;
    }
    if (result)
    {
      if (a3 + 32 >= (unint64_t)result + v4 || a3 + 32 + v4 <= (unint64_t)result)
        return memcpy(result, (const void *)(a3 + 32), v4);
      goto LABEL_13;
    }
  }
  return result;
}

uint64_t sub_242B67BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  if (a1)
    v6 = a2 - a1;
  else
    v6 = 0;
  return sub_242B65AF0(a3, a1, v6, MEMORY[0x24BEE1328], a4, a5);
}

void Tensor.init(repeating:shape:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int v49;
  _OWORD v50[3];
  int v51;

  OUTLINED_FUNCTION_259_1();
  v5 = *v4;
  OUTLINED_FUNCTION_144_4((uint64_t)v4, v6, (uint64_t *)&unk_257228D70, v7, v8, v9, v10, v11, v25, v27, v29, v30, v31, v32, v33, v34, v35, v36, v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46);
  if (*((_QWORD *)&v47 + 1))
  {
    v50[0] = v46;
    v50[1] = v47;
    v50[2] = v48;
    v51 = v49;
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    v12 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_157_2((uint64_t)v12, v13);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v29, (uint64_t)v50);
    OUTLINED_FUNCTION_254_0(v14, v15);
    OUTLINED_FUNCTION_12_34((uint64_t)&v46);
  }
  if (qword_2572205A8 != -1)
    swift_once();
  v29 = v5;
  LOBYTE(v46) = 10;
  sub_242C041E8(&v29, (uint64_t)&v46, (uint64_t)v50, qword_257259A10);
  OUTLINED_FUNCTION_108_3();
  OUTLINED_FUNCTION_165_2();
  OUTLINED_FUNCTION_138_4((uint64_t)v50, (uint64_t)&v29);
  OUTLINED_FUNCTION_240_0();
  v16 = OUTLINED_FUNCTION_166_3();
  OUTLINED_FUNCTION_30_25(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46);
  OUTLINED_FUNCTION_47_20();
  v24 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_16_34(v24);
  sub_242BC995C();
  OUTLINED_FUNCTION_32_10();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_86_6(a2);
  OUTLINED_FUNCTION_86_6((uint64_t)v50);
  *v2 = v24;
}

float *sub_242B67EF0(float *result, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v4;

  if (result)
  {
    v3 = a2 - (_QWORD)result;
    if (a2 - (uint64_t)result < -3)
    {
      __break(1u);
    }
    else if ((unint64_t)(v3 + 3) >= 7)
    {
      v4 = v3 / 4;
      do
      {
        *result++ = a3;
        --v4;
      }
      while (v4);
    }
  }
  return result;
}

void Tensor.init(repeating:shape:on:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  int v57;
  _BYTE v58[64];

  v11 = *a2;
  OUTLINED_FUNCTION_144_4(a1, (uint64_t)a2, (uint64_t *)&unk_257228D70, a4, a5, a6, a7, a8, v34, v36, v38, v39, v40, v41, v42, v43, v44, v45, v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55);
  if (*((_QWORD *)&v56 + 1))
  {
    OUTLINED_FUNCTION_101_4(v12, v13, v14, v15, v16, v17, v18, v19, v35, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v20,
      v57);
  }
  else
  {
    OUTLINED_FUNCTION_22_2();
    v21 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_157_2((uint64_t)v21, v22);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v38, (uint64_t)v58);
    OUTLINED_FUNCTION_254_0(v23, v24);
    OUTLINED_FUNCTION_12_34((uint64_t)&v55);
  }
  if (qword_2572205A8 != -1)
    swift_once();
  v38 = v11;
  LOBYTE(v55) = 3;
  sub_242C0435C(&v38, (char *)&v55, (uint64_t)v58, qword_257259A10);
  OUTLINED_FUNCTION_108_3();
  OUTLINED_FUNCTION_165_2();
  OUTLINED_FUNCTION_138_4((uint64_t)v58, (uint64_t)&v38);
  OUTLINED_FUNCTION_240_0();
  v25 = OUTLINED_FUNCTION_166_3();
  OUTLINED_FUNCTION_30_25(v25, v26, v27, v28, v29, v30, v31, v32, v35, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55);
  OUTLINED_FUNCTION_47_20();
  v33 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_16_34(v33);
  sub_242BC995C();
  OUTLINED_FUNCTION_32_10();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_86_6(a3);
  OUTLINED_FUNCTION_86_6((uint64_t)v58);
  *a9 = v33;
  OUTLINED_FUNCTION_139_3();
}

_QWORD *sub_242B6805C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (result)
  {
    v3 = a2 - (_QWORD)result;
    if (a2 - (uint64_t)result < -7)
    {
      __break(1u);
    }
    else if ((unint64_t)(v3 + 7) >= 0xF)
    {
      v4 = v3 / 8;
      do
      {
        *result++ = a3;
        --v4;
      }
      while (v4);
    }
  }
  return result;
}

void Tensor.init(ioSurfaceNoCopy:shape:scalarType:deallocator:)(__IOSurface *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  int v11;
  int64_t AllocSize;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __IOSurface *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[7];
  _BYTE v23[4];

  v10 = *a2;
  v11 = *a3;
  AllocSize = IOSurfaceGetAllocSize(a1);
  if (*(_QWORD *)(v10 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_250_1();
      if (!v15)
        break;
      if (v14 == 1)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_14;
  }
  v13 = 1;
LABEL_7:
  if ((v11 - 1) > 0xA)
    v16 = 1;
  else
    v16 = qword_242C585C0[(char)(v11 - 1)];
  if ((unsigned __int128)(v13 * (__int128)v16) >> 64 != (v13 * v16) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (AllocSize >= v13 * v16 && !IOSurfaceGetPlaneCount(a1))
  {
    v22[0] = v10;
    v23[0] = v11;
    type metadata accessor for IOSurfaceTensorStorage();
    OUTLINED_FUNCTION_2_0();
    sub_242AF7328(v22, v23, (uint64_t)a1, a4, a5);
    OUTLINED_FUNCTION_165_2();
    OUTLINED_FUNCTION_116_4();
    v17 = OUTLINED_FUNCTION_2_0();
    v18 = a1;
    sub_242A6548C(a4);
    OUTLINED_FUNCTION_11_6();
    OUTLINED_FUNCTION_237_0();
    sub_242B6CD54(v19, (uint64_t)v22, v20, v17);
    OUTLINED_FUNCTION_47_20();
    v21 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_16_34(v21);
    sub_242BC995C();
    OUTLINED_FUNCTION_135();
    sub_242A6549C(a4);
    OUTLINED_FUNCTION_13_0();

    *a6 = v21;
    OUTLINED_FUNCTION_100_4();
    return;
  }
LABEL_15:
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_2_30();
  __break(1u);
}

void Tensor.withUnsafeIOSurface<A>(_:)(void (*a1)(id)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  id v10;

  v6 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v7 = OUTLINED_FUNCTION_110();
  v8 = (id *)sub_242BC9F84(v7, v6, 0, 0);
  OUTLINED_FUNCTION_135();
  if (object_getClass(v8) != (Class)_TtC14NeuralNetworks22IOSurfaceTensorStorage || v8 == 0)
  {
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_16_22(a2, 1);
  }
  else
  {
    v10 = v8[2];
    OUTLINED_FUNCTION_21_12();
    a1(v10);
    if (!v3)
      OUTLINED_FUNCTION_16_22(a2, 0);

  }
}

void Tensor.withUnsafeUnsafeMutableIOSurface<A>(_:)(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  id v25;
  void (*v26)(_QWORD);
  _QWORD v27[7];
  _BYTE v28[4];

  v4 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v26 = a1;
    v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    v8 = OUTLINED_FUNCTION_110();
    v9 = OUTLINED_FUNCTION_167_3(v8, v7);
    v11 = v10;
    swift_release();
    if (qword_2572205A8 != -1)
      swift_once();
    v12 = qword_257259A10;
    v13 = *(_QWORD *)(*(_QWORD *)v4 + 16);
    v27[0] = *(_QWORD *)(v13 + 152);
    v28[0] = *(_BYTE *)(v13 + 160);
    v14 = v13 + 168;
    swift_unknownObjectRetain();
    sub_242C480E0();
    sub_242C035A0(v27, v28, v14, v12, v9, v11);
    v16 = v15;
    swift_bridgeObjectRelease();
    v17 = OUTLINED_FUNCTION_165_2();
    sub_242A9297C(*(_QWORD *)(*(_QWORD *)v4 + 16) + 168, (uint64_t)v27, (uint64_t *)&unk_257228D70);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_237_0();
    sub_242BCBE34(v18, (uint64_t)v27, v19, v17, ObjectType, v16);
    OUTLINED_FUNCTION_47_20();
    v20 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_16_34(v20);
    sub_242BC995C();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_135();
    *(_QWORD *)v4 = v20;
    swift_release();
    a1 = v26;
  }
  v21 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v22 = OUTLINED_FUNCTION_110();
  v23 = (id *)OUTLINED_FUNCTION_167_3(v22, v21);
  swift_release();
  if (object_getClass(v23) != (Class)_TtC14NeuralNetworks22IOSurfaceTensorStorage || v23 == 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_16_22(a2, 1);
  }
  else
  {
    v25 = v23[2];
    swift_unknownObjectRelease();
    a1(v25);
    if (!ObjectType)
      OUTLINED_FUNCTION_16_22(a2, 0);

  }
}

uint64_t sub_242B685B0()
{
  return sub_242C48AA0();
}

void Tensor.init(contentsOfFile:shape:scalarType:on:)(uint64_t *a1@<X2>, unsigned __int8 *a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  _BYTE v17[55];
  unsigned __int8 v18;
  uint64_t v19;
  _BYTE v20[56];
  uint64_t v21;

  v8 = OUTLINED_FUNCTION_16_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_4_9();
  v9 = *a1;
  v15 = *a2;
  sub_242C47B28();
  swift_bridgeObjectRelease();
  sub_242A9297C(a3, (uint64_t)v20, (uint64_t *)&unk_257228D70);
  v10 = sub_242C47B94();
  if (v4)
  {
    swift_bridgeObjectRelease();
    sub_242A929A8((uint64_t)v20, (uint64_t *)&unk_257228D70);
    OUTLINED_FUNCTION_202_1();
    sub_242A929A8(a3, (uint64_t *)&unk_257228D70);
  }
  else
  {
    v12 = v10;
    v13 = v11;
    v19 = v9;
    v18 = v15;
    sub_242A9297C((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_257228D70);
    Tensor.init(shape:data:scalarType:on:)(&v19, v12, v13, &v18, (uint64_t)v17);
    sub_242A929A8((uint64_t)v20, (uint64_t *)&unk_257228D70);
    OUTLINED_FUNCTION_202_1();
    v14 = v21;
    sub_242A929A8(a3, (uint64_t *)&unk_257228D70);
    *a4 = v14;
  }
}

uint64_t Tensor.init(contentsOf:shape:scalarType:on:)@<X0>(uint64_t *a1@<X1>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[55];
  unsigned __int8 v17;
  uint64_t v18[2];

  v7 = *a1;
  v8 = *a2;
  v9 = sub_242C47B94();
  if (v4)
  {
    swift_bridgeObjectRelease();
    sub_242A929A8(a3, (uint64_t *)&unk_257228D70);
    v11 = OUTLINED_FUNCTION_16_1();
    return OUTLINED_FUNCTION_156_3(v11);
  }
  else
  {
    v13 = v9;
    v14 = v10;
    v18[0] = v7;
    v17 = v8;
    sub_242A9297C(a3, (uint64_t)v16, (uint64_t *)&unk_257228D70);
    Tensor.init(shape:data:scalarType:on:)(v18, v13, v14, &v17, (uint64_t)v16);
    sub_242A929A8(a3, (uint64_t *)&unk_257228D70);
    v15 = OUTLINED_FUNCTION_16_1();
    result = OUTLINED_FUNCTION_156_3(v15);
    *a4 = v18[1];
  }
  return result;
}

void Tensor.init(floatLiteral:)()
{
  _QWORD *v0;
  __n128 *v1;
  _BYTE v2[96];
  uint64_t v3;
  _OWORD v4[3];
  int v5;

  OUTLINED_FUNCTION_259_1();
  v5 = 0;
  memset(v4, 0, sizeof(v4));
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v1 = (__n128 *)OUTLINED_FUNCTION_114_3();
  OUTLINED_FUNCTION_255_1(v1, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_138_4((uint64_t)v4, (uint64_t)v2);
  sub_242A85A44(MEMORY[0x24BEE4AF8], (uint64_t)v1, (uint64_t)v2, &v3);
  OUTLINED_FUNCTION_86_6((uint64_t)v4);
  *v0 = v3;
}

void Tensor.init(integerLiteral:)(int a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _OWORD v5[3];
  int v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
  v4 = OUTLINED_FUNCTION_114_3();
  *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(v4 + 32) = a1;
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  sub_242A8E108(MEMORY[0x24BEE4AF8], v4, (uint64_t)v5, &v7);
  *a2 = v7;
  OUTLINED_FUNCTION_188_2();
}

void Tensor.init(BOOLeanLiteral:)(char a1@<W0>, _QWORD *a2@<X8>)
{
  _OWORD v3[3];
  int v4;
  char v5;
  _QWORD v6[2];

  v6[0] = MEMORY[0x24BEE4AF8];
  v5 = 12;
  v4 = 0;
  memset(v3, 0, sizeof(v3));
  sub_242B6666C((uint64_t)v6, (uint64_t)&v5, (uint64_t)v3, a1);
  *a2 = v6[1];
  OUTLINED_FUNCTION_188_2();
}

_BYTE *sub_242B689C4(_BYTE *result, uint64_t a2, char a3)
{
  *result = a3;
  return result;
}

void sub_242B689CC()
{
  Tensor.init(floatLiteral:)();
}

void sub_242B689D4(int *a1@<X0>, _QWORD *a2@<X8>)
{
  Tensor.init(integerLiteral:)(*a1, a2);
}

void sub_242B689DC(char *a1@<X0>, _QWORD *a2@<X8>)
{
  Tensor.init(BOOLeanLiteral:)(*a1, a2);
}

void Tensor.init(arrayLiteral:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  if (*(_QWORD *)(a1 + 16))
  {
    Tensor.init(stacking:alongAxis:scalarType:)();
    *a2 = v3;
  }
  else
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_2_30();
    __break(1u);
  }
}

void sub_242B68A70(void *a1, uint64_t a2)
{
  int64_t v2;

  if (a1)
  {
    v2 = a2 - (_QWORD)a1;
    if (v2)
    {
      if (v2 < 1)
        __break(1u);
      else
        bzero(a1, v2);
    }
  }
}

void Tensor.init(identity:scalarType:on:)(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  __int128 v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16) < 2uLL)
  {
    v7 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    v8 = xmmword_242C57980;
    v9 = 0;
    v10 = xmmword_242C4CA60;
    v11 = 2;
    v12 = 7;
    OUTLINED_FUNCTION_193_2();
    sub_242A59264();
  }
  v6 = *a2;
  v15 = *(_QWORD *)a1;
  v14 = v6;
  OUTLINED_FUNCTION_43_23(a3, (uint64_t)&v7);
  Tensor.init(ones:scalarType:on:)(&v15, &v14, (uint64_t)&v7, &v13);
  Tensor.bandPart(lowerBandCount:upperBandCount:)(0, 0, &v7);
  OUTLINED_FUNCTION_50_16(a3);
  swift_release();
  *a4 = v7;
  OUTLINED_FUNCTION_38_15();
}

void Tensor.init(oneHotAtIndex:depth:onValue:offValue:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  _QWORD v7[8];
  _QWORD v8[7];

  OUTLINED_FUNCTION_212_1();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(inited + 32) = v2;
  OUTLINED_FUNCTION_43_23(v0, (uint64_t)v8);
  OUTLINED_FUNCTION_117_3();
  sub_242B47048((uint64_t)&unk_25137D2F0, inited, (uint64_t)v7, &v6);
  OUTLINED_FUNCTION_43_23((uint64_t)v8, (uint64_t)v7);
  OUTLINED_FUNCTION_107_2();
  OUTLINED_FUNCTION_50_16((uint64_t)v8);
  swift_setDeallocating();
  v7[0] = v7[7];
  OUTLINED_FUNCTION_216_2();
  OUTLINED_FUNCTION_50_16(v0);
  OUTLINED_FUNCTION_17_5();
  *v4 = v8[0];
  OUTLINED_FUNCTION_122_5();
}

{
  uint64_t v0;
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  _QWORD v7[8];
  _QWORD v8[7];

  OUTLINED_FUNCTION_212_1();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(inited + 32) = v2;
  OUTLINED_FUNCTION_43_23(v0, (uint64_t)v8);
  OUTLINED_FUNCTION_117_3();
  sub_242A8E108((uint64_t)&unk_25137D340, inited, (uint64_t)v7, &v6);
  OUTLINED_FUNCTION_43_23((uint64_t)v8, (uint64_t)v7);
  OUTLINED_FUNCTION_107_2();
  OUTLINED_FUNCTION_50_16((uint64_t)v8);
  swift_setDeallocating();
  v7[0] = v7[7];
  OUTLINED_FUNCTION_216_2();
  OUTLINED_FUNCTION_50_16(v0);
  OUTLINED_FUNCTION_17_5();
  *v4 = v8[0];
  OUTLINED_FUNCTION_122_5();
}

void Tensor.init<A>(oneHotAtIndices:depth:onValue:offValue:on:)()
{
  sub_242B68D3C();
}

{
  sub_242B68D3C();
}

void sub_242B68D3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr, uint64_t *, uint64_t, _BYTE *, uint64_t, uint64_t);
  void (*v6)(uint64_t *__return_ptr, uint64_t *, uint64_t, _BYTE *, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[48];
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_175_1();
  v21 = v3;
  v22 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  OUTLINED_FUNCTION_249_1();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_49_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v16 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v16 + 32) = sub_242C487B8();
  v20 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v2, v0, v10);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  v6(&v17, &v20, v2, v18, v10, v8);
  OUTLINED_FUNCTION_184_2(v12, (uint64_t)v18);
  Tensor.init(oneHotAtIndices:depth:onValue:offValue:on:)();
  OUTLINED_FUNCTION_61_13(v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v10);
  *v1 = v20;
  OUTLINED_FUNCTION_81_1();
}

void Tensor.init(oneHotAtIndices:depth:onValue:offValue:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  float v5;
  float v6;
  float v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  const char **v11;
  const char **v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _BYTE v41[56];
  _OWORD v42[3];
  int v43;
  const char *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_175_1();
  v47 = v1;
  v48 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v33 = v13;
  v14 = OUTLINED_FUNCTION_370();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_49_11();
  v16 = *v12;
  LOBYTE(v12) = *(_BYTE *)(*((_QWORD *)*v12 + 2) + 160);
  v17 = static ScalarType.integerTypes.getter();
  v18 = sub_242B64794(v12, (uint64_t)v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    sub_242C21A14();
    *(_QWORD *)&v34 = v31;
    *((_QWORD *)&v34 + 1) = v32;
    v35 = xmmword_242C57990;
    LOBYTE(v36) = 0;
    *((_QWORD *)&v36 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    LOBYTE(v37) = 2;
    v40 = 3;
    OUTLINED_FUNCTION_193_2();
    sub_242A59264();
  }
  if (v10 <= 0)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_2_30();
    OUTLINED_FUNCTION_100_0();
  }
  v44 = v16;
  LOBYTE(v42[0]) = 2;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v0, *MEMORY[0x24BEE38B8], v14);
  Tensor.cast(to:roundingRule:)();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0, v14);
  OUTLINED_FUNCTION_50_0();
  v19 = v34;
  v20 = *(_QWORD *)(v34 + 16);
  v21 = *(_QWORD *)(v20 + 152);
  sub_242C480E0();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_258_1(0, *(_QWORD *)(v21 + 16) + 1);
    v21 = v29;
  }
  v23 = *(_QWORD *)(v21 + 16);
  v22 = *(_QWORD *)(v21 + 24);
  if (v23 >= v22 >> 1)
  {
    OUTLINED_FUNCTION_258_1(v22 > 1, v23 + 1);
    v21 = v30;
  }
  *(_QWORD *)(v21 + 16) = v23 + 1;
  *(_QWORD *)(v21 + 8 * v23 + 32) = v10;
  v45 = xmmword_242C4C080;
  v46 = xmmword_242C579A0;
  v44 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorCreationOps.swift";
  OUTLINED_FUNCTION_256_1(70);
  type metadata accessor for OneHotOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_91();
  v24 = sub_242B40F20(0, 0, 0, v20, v10, v21, 10, (uint64_t)&v44, v8, v6);
  sub_242A9297C(v4, (uint64_t)&v34, (uint64_t *)&unk_257228D70);
  if (*((_QWORD *)&v35 + 1))
  {
    v42[0] = v34;
    v42[1] = v35;
    v42[2] = v36;
    v43 = v37;
  }
  else
  {
    OUTLINED_FUNCTION_22_24(*(_QWORD *)(v19 + 16) + 168, (uint64_t)v42);
    OUTLINED_FUNCTION_12_34((uint64_t)&v34);
  }
  sub_242A9297C((uint64_t)v42, (uint64_t)v41, (uint64_t *)&unk_257228D70);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_211_1();
  OUTLINED_FUNCTION_101_3();
  OUTLINED_FUNCTION_135();
  v25 = v39;
  OUTLINED_FUNCTION_123_0();
  sub_242A5DC30((uint64_t)&v34);
  OUTLINED_FUNCTION_211_1();
  OUTLINED_FUNCTION_101_3();
  OUTLINED_FUNCTION_135();
  v26 = v38;
  OUTLINED_FUNCTION_91();
  sub_242A5DC30((uint64_t)&v34);
  OUTLINED_FUNCTION_165_2();
  v27 = OUTLINED_FUNCTION_2_0();
  LOBYTE(v34) = 1;
  sub_242B4D018(v24, 0, v41, 0x100000000, v25, v26, v27);
  OUTLINED_FUNCTION_47_20();
  v28 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_16_34(v28);
  sub_242BC995C();
  OUTLINED_FUNCTION_135();
  sub_242A929A8((uint64_t)v42, (uint64_t *)&unk_257228D70);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_0();
  sub_242A929A8(v4, (uint64_t *)&unk_257228D70);
  *v33 = v28;
  OUTLINED_FUNCTION_81_1();
}

void Tensor.init(rangeFrom:to:stride:on:)(uint64_t a1, float a2, float a3, float a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[56];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a4 == 0.0)
  {
    __break(1u);
  }
  else
  {
    v15 = v7;
    v16 = v6;
    v17 = v5;
    v18 = v4;
    v19 = v8;
    v20 = v9;
    sub_242B6CF64(a2, a3, a4);
    OUTLINED_FUNCTION_43_23(a1, (uint64_t)v14);
    OUTLINED_FUNCTION_168_2(v11, v12, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, _BYTE *))sub_242A85A44, v13);
    OUTLINED_FUNCTION_50_16(a1);
    OUTLINED_FUNCTION_1_43();
  }
}

void Tensor.init(rangeFrom:to:stride:on:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[56];

  if (a3)
  {
    sub_242B6C3A0(a1 | (unint64_t)(a2 << 32), a3);
    OUTLINED_FUNCTION_43_23(a4, (uint64_t)v8);
    OUTLINED_FUNCTION_168_2(v5, v6, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, _BYTE *))sub_242A8E108, v7);
    OUTLINED_FUNCTION_50_16(a4);
    OUTLINED_FUNCTION_1_43();
  }
  else
  {
    __break(1u);
  }
}

void Tensor.init(linearSpaceFrom:through:count:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  float v3;
  float v6;
  float v7;
  uint64_t v8;
  float v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[56];
  uint64_t v16;
  _QWORD v17[7];

  if (a1 < 2)
  {
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_2_30();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_259_1();
    v9 = (float)(v7 - v6) / (float)(v8 - 1);
    v17[0] = MEMORY[0x24BEE4AF8];
    sub_242AC3DAC();
    v10 = 0;
    v11 = v17[0];
    v12 = *(_QWORD *)(v17[0] + 16);
    do
    {
      v17[0] = v11;
      if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_242AC3DAC();
        v11 = v17[0];
      }
      *(_QWORD *)(v11 + 16) = v12 + 1;
      *(float *)(v11 + 4 * v12++ + 32) = (float)(v9 * (float)v10++) + v3;
    }
    while (a1 != v10);
    OUTLINED_FUNCTION_43_23(a2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v13 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v13 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v13 + 32) = *(_QWORD *)(v11 + 16);
    OUTLINED_FUNCTION_43_23((uint64_t)v17, (uint64_t)v15);
    OUTLINED_FUNCTION_0_2();
    sub_242A85A44(v13, v11, (uint64_t)v15, &v16);
    OUTLINED_FUNCTION_50_16((uint64_t)v17);
    OUTLINED_FUNCTION_136();
    v14 = v16;
    OUTLINED_FUNCTION_50_16(a2);
    *v2 = v14;
  }
}

void Tensor.init(randomUniform:in:seed:scalarType:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  float v6;
  float v7;
  float v8;
  float v9;
  uint64_t *v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  unint64_t v24;
  __n128 v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  os_unfair_lock_s *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52[4];
  _QWORD v53[5];
  float v54;
  int v55;
  uint64_t v56;
  _UNKNOWN **v57;
  __int16 v58;
  _OWORD v59[3];
  int v60;
  _OWORD v61[3];
  int v62;
  uint64_t v63;
  uint64_t v64;

  OUTLINED_FUNCTION_175_1();
  v63 = v0;
  v64 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = OUTLINED_FUNCTION_370();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_4_9();
  v49 = v17 - v16;
  v18 = *v11;
  sub_242A9297C(v3, (uint64_t)v61, (uint64_t *)&unk_257228D70);
  if (!*((_QWORD *)&v61[1] + 1))
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_71_8();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)v53, (uint64_t)v59);
    OUTLINED_FUNCTION_125_2();
    OUTLINED_FUNCTION_12_34((uint64_t)v61);
    if ((v5 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    OUTLINED_FUNCTION_22_2();
    v19 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_51_21();
    v20 = *(_QWORD *)(*(_QWORD *)v19 + 16);
    OUTLINED_FUNCTION_0_3();
    v21 = *(_QWORD *)v19;
    v22 = OUTLINED_FUNCTION_48_21();
    *(_QWORD *)v19 = v21;
    if ((v22 & 1) != 0)
    {
      if (v20)
        goto LABEL_7;
    }
    else
    {
      OUTLINED_FUNCTION_251_1();
      v21 = v47;
      *(_QWORD *)v19 = v47;
      if (v20)
      {
LABEL_7:
        if (v20 <= *(_QWORD *)(v21 + 16))
        {
          OUTLINED_FUNCTION_240();
          swift_endAccess();
          OUTLINED_FUNCTION_157_0();
          goto LABEL_9;
        }
LABEL_27:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  v59[0] = v61[0];
  v59[1] = v61[1];
  v59[2] = v61[2];
  v60 = v62;
  if ((v5 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v23 = OUTLINED_FUNCTION_252_0();
  OUTLINED_FUNCTION_90_4(v23, v24, v25, v26);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_28_5();
  v52[0] = v18;
  if (v9 > v7)
  {
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_12;
  }
  v53[3] = MEMORY[0x24BEE14E8];
  v53[4] = &protocol witness table for Float;
  *(float *)v53 = v9;
  v56 = MEMORY[0x24BEE14E8];
  v57 = &protocol witness table for Float;
  v54 = v7;
  v58 = 2562;
  *(_OWORD *)((char *)v61 + 8) = xmmword_242C4CA40;
  *(_OWORD *)((char *)&v61[1] + 8) = xmmword_242C4CA50;
  *(_QWORD *)&v61[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  OUTLINED_FUNCTION_256_1(47);
  type metadata accessor for RandomOperation();
  v27 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_37_22(v27, v28, v29, v30, v52, v53, (uint64_t)v61);
  OUTLINED_FUNCTION_174_2((uint64_t)v59, v31, (uint64_t *)&unk_257228D70);
  if (!v51)
  {
    v36 = OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_169_1(v36, (uint64_t *)&unk_257228D70);
    OUTLINED_FUNCTION_115_5();
    goto LABEL_17;
  }
  v48 = v15;
  v15 = v14;
  v14 = v3;
  v3 = (uint64_t)v13;
  OUTLINED_FUNCTION_145_4();
  sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  v32 = qword_2572205A0;
  OUTLINED_FUNCTION_123_0();
  if (v32 != -1)
    goto LABEL_24;
LABEL_12:
  v33 = (uint64_t *)(qword_25722D2A8 + 16);
  v34 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  OUTLINED_FUNCTION_158_0();
  os_unfair_lock_lock(v34);
  OUTLINED_FUNCTION_150_3(v33, v50);
  os_unfair_lock_unlock(v34);
  v35 = v50[0];
  OUTLINED_FUNCTION_19_5();
  if ((v55 & ~v35) != 0)
  {
    OUTLINED_FUNCTION_187_2();
    OUTLINED_FUNCTION_115_5();
  }
  else
  {
    OUTLINED_FUNCTION_143_3();
  }
  v13 = (_QWORD *)v3;
  v3 = v14;
  v14 = v15;
  v15 = v48;
LABEL_17:
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_71_8();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_125_2();
  OUTLINED_FUNCTION_211_1();
  OUTLINED_FUNCTION_71_8();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_125_2();
  OUTLINED_FUNCTION_165_2();
  v37 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_65_14(v37);
  v39 = v38;
  OUTLINED_FUNCTION_23_2();
  v40 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v40 + 16) = v39;
  OUTLINED_FUNCTION_5();
  sub_242BC995C();
  OUTLINED_FUNCTION_174_2((uint64_t)v59, v41, (uint64_t *)&unk_257228D70);
  if (v51)
  {
    OUTLINED_FUNCTION_82_7();
    OUTLINED_FUNCTION_264(v43, v44);
    OUTLINED_FUNCTION_302();
    if (!v46)
      OUTLINED_FUNCTION_97_4((uint64_t)v53, v45 & 1);
    v50[0] = v40;
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_227_2();
    OUTLINED_FUNCTION_187_2();
    OUTLINED_FUNCTION_19_5();
    v40 = v50[0];
  }
  else
  {
    OUTLINED_FUNCTION_169_1(v42, (uint64_t *)&unk_257228D70);
    v50[0] = v40;
  }
  v52[0] = v40;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v49, *MEMORY[0x24BEE38B8], v14);
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_12_34(v3);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v49, v14);
  swift_release();
  OUTLINED_FUNCTION_12_34((uint64_t)v59);
  *v13 = v53[0];
  OUTLINED_FUNCTION_81_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  __n128 v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  os_unfair_lock_s *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46[3];
  uint64_t v47;
  uint64_t v48[4];
  _QWORD v49[5];
  int v50;
  int v51;
  uint64_t v52;
  _UNKNOWN **v53;
  __int16 v54;
  _OWORD v55[3];
  int v56;
  _OWORD v57[3];
  int v58;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v45 = v11;
  v12 = OUTLINED_FUNCTION_370();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_47_13();
  v14 = *v10;
  v44 = v2;
  sub_242A9297C(v2, (uint64_t)v57, (uint64_t *)&unk_257228D70);
  if (!*((_QWORD *)&v57[1] + 1))
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_71_8();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)v49, (uint64_t)v55);
    OUTLINED_FUNCTION_125_2();
    OUTLINED_FUNCTION_12_34((uint64_t)v57);
    if ((v4 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    OUTLINED_FUNCTION_22_2();
    v15 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_51_21();
    v16 = *(_QWORD *)(*(_QWORD *)v15 + 16);
    OUTLINED_FUNCTION_0_3();
    v17 = *(_QWORD *)v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v15 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v16)
        goto LABEL_7;
    }
    else
    {
      sub_242B4B510();
      v17 = v43;
      *(_QWORD *)v15 = v43;
      if (v16)
      {
LABEL_7:
        if (v16 <= *(_QWORD *)(v17 + 16))
        {
          v6 = OUTLINED_FUNCTION_240();
          swift_endAccess();
          OUTLINED_FUNCTION_19_5();
          goto LABEL_9;
        }
LABEL_27:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  v55[0] = v57[0];
  v55[1] = v57[1];
  v55[2] = v57[2];
  v56 = v58;
  if ((v4 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v19 = sub_242B40ACC(v6);
  OUTLINED_FUNCTION_90_4(v19, v20, v21, v22);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_157_0();
  v48[0] = v14;
  if (SHIDWORD(v8) < (int)v8)
  {
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_12;
  }
  v49[3] = MEMORY[0x24BEE3F88];
  v49[4] = &protocol witness table for Int32;
  LODWORD(v49[0]) = v8;
  v52 = MEMORY[0x24BEE3F88];
  v53 = &protocol witness table for Int32;
  v50 = HIDWORD(v8);
  v54 = 514;
  *(_OWORD *)((char *)v57 + 8) = xmmword_242C4CA40;
  *(_OWORD *)((char *)&v57[1] + 8) = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  v23 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_37_22(v23, v24, v25, v26, v48, v49, (uint64_t)v57);
  OUTLINED_FUNCTION_174_2((uint64_t)v55, v27, (uint64_t *)&unk_257228D70);
  if (!v47)
  {
    v32 = OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_169_1(v32, (uint64_t *)&unk_257228D70);
LABEL_16:
    OUTLINED_FUNCTION_115_5();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_145_4();
  sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  v28 = qword_2572205A0;
  OUTLINED_FUNCTION_123_0();
  if (v28 != -1)
    goto LABEL_24;
LABEL_12:
  v29 = (uint64_t *)(qword_25722D2A8 + 16);
  v30 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  OUTLINED_FUNCTION_158_0();
  os_unfair_lock_lock(v30);
  OUTLINED_FUNCTION_150_3(v29, v46);
  os_unfair_lock_unlock(v30);
  v31 = v46[0];
  OUTLINED_FUNCTION_19_5();
  if ((v51 & ~v31) != 0)
  {
    OUTLINED_FUNCTION_187_2();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_143_3();
LABEL_17:
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_71_8();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_125_2();
  OUTLINED_FUNCTION_211_1();
  OUTLINED_FUNCTION_71_8();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_125_2();
  OUTLINED_FUNCTION_165_2();
  v33 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_65_14(v33);
  v35 = v34;
  OUTLINED_FUNCTION_23_2();
  v36 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v36 + 16) = v35;
  OUTLINED_FUNCTION_5();
  sub_242BC995C();
  OUTLINED_FUNCTION_174_2((uint64_t)v55, v37, (uint64_t *)&unk_257228D70);
  if (v47)
  {
    OUTLINED_FUNCTION_82_7();
    OUTLINED_FUNCTION_264(v39, v40);
    OUTLINED_FUNCTION_302();
    if (!v42)
      OUTLINED_FUNCTION_97_4((uint64_t)v49, v41 & 1);
    v46[0] = v36;
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_227_2();
    OUTLINED_FUNCTION_187_2();
    OUTLINED_FUNCTION_19_5();
    v36 = v46[0];
  }
  else
  {
    OUTLINED_FUNCTION_169_1(v38, (uint64_t *)&unk_257228D70);
    v46[0] = v36;
  }
  v48[0] = v36;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v0, *MEMORY[0x24BEE38B8], v12);
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_12_34(v44);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0, v12);
  swift_release();
  OUTLINED_FUNCTION_12_34((uint64_t)v55);
  *v45 = v49[0];
  OUTLINED_FUNCTION_13_11();
}

void Tensor.init(randomNormal:mean:standardDeviation:seed:scalarType:on:)()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t *v64;
  os_unfair_lock_s *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  const void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  double v187;
  char v188;
  uint64_t v189;
  int v190;
  char v191;
  char v192;
  _BYTE v193[64];
  _BYTE v194[24];
  uint64_t v195;

  OUTLINED_FUNCTION_98_5();
  OUTLINED_FUNCTION_239_1(v6, v7, (uint64_t *)&unk_257228D70, v8, v9);
  if (!v195)
  {
    OUTLINED_FUNCTION_22_2();
    v10 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_69_10((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v155, v165, v175, v176, v177, v178);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v186, (uint64_t)v193);
    OUTLINED_FUNCTION_126_4(v18, v19, v20, v21, v22, v23, v24, v25, v156, v166, v175, v176, v177, v178);
    OUTLINED_FUNCTION_12_34((uint64_t)v194);
    if ((v2 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    OUTLINED_FUNCTION_22_2();
    v26 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_51_21();
    v27 = *(_QWORD *)(*(_QWORD *)v26 + 16);
    OUTLINED_FUNCTION_0_3();
    v28 = *(_QWORD *)v26;
    v29 = OUTLINED_FUNCTION_48_21();
    *(_QWORD *)v26 = v28;
    if ((v29 & 1) != 0)
    {
      if (v27)
        goto LABEL_7;
    }
    else
    {
      OUTLINED_FUNCTION_251_1();
      v28 = v154;
      *(_QWORD *)v26 = v154;
      if (v27)
      {
LABEL_7:
        if (v27 <= *(_QWORD *)(v28 + 16))
        {
          OUTLINED_FUNCTION_240();
          OUTLINED_FUNCTION_225_2();
          OUTLINED_FUNCTION_17_5();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_158_3();
  if ((v2 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v30 = OUTLINED_FUNCTION_252_0();
  OUTLINED_FUNCTION_96_4(v30, v31, v38, v39, v32, v33, v34, v35, v36, v37, v40, v41, v42, v43, v44, v45, v155, v165, v175,
    v176,
    v177,
    v178,
    v179,
    *((uint64_t *)&v179 + 1),
    v180,
    v181,
    v182,
    v183,
    v184,
    v185,
    v186,
    v187,
    v188,
    v189);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_28_5();
  v182 = v4;
  OUTLINED_FUNCTION_245_1();
  v191 = 0;
  v192 = v3;
  *(_OWORD *)(v5 + 216) = xmmword_242C4CA40;
  *(_OWORD *)(v5 + 232) = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  v46 = OUTLINED_FUNCTION_2_0();
  v50 = OUTLINED_FUNCTION_37_22(v46, v47, v48, v49, &v182, &v186, (uint64_t)v194);
  OUTLINED_FUNCTION_110_3(v50, v51, (uint64_t *)&unk_257228D70, v52, v53);
  if (!v178)
  {
    v75 = OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_206_1(v75, (uint64_t *)&unk_257228D70, v76, v77);
LABEL_16:
    OUTLINED_FUNCTION_116_4();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_154_4(v54, v55, v56, v57, v58, v59, v60, v61, v157, v167, v175, v176, v177, v178, v62);
  sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  v63 = qword_2572205A0;
  OUTLINED_FUNCTION_10();
  if (v63 != -1)
    swift_once();
  v64 = (uint64_t *)(qword_25722D2A8 + 16);
  v65 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  OUTLINED_FUNCTION_11_6();
  os_unfair_lock_lock(v65);
  OUTLINED_FUNCTION_150_3(v64, &v175);
  os_unfair_lock_unlock(v65);
  v66 = v175;
  v67 = OUTLINED_FUNCTION_13_0();
  if ((v190 & ~v66) != 0)
  {
    OUTLINED_FUNCTION_190_1(v67, v68, v69, v70, v71, v72, v73, v74, v157, v167, v175, v176, v177, v178);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_150_4();
LABEL_17:
  OUTLINED_FUNCTION_22_2();
  v78 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_69_10((uint64_t)v78, v79, v80, v81, v82, v83, v84, v85, v157, v167, v175, v176, v177, v178);
  OUTLINED_FUNCTION_135();
  v86 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_126_4(v86, v87, v88, v89, v90, v91, v92, v93, v158, v168, v175, v176, v177, v178);
  v94 = sub_242B93328();
  OUTLINED_FUNCTION_69_10((uint64_t)v94, v95, v96, v97, v98, v99, v100, v101, v159, v169, v175, v176, v177, v178);
  OUTLINED_FUNCTION_135();
  v102 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_126_4(v102, v103, v104, v105, v106, v107, v108, v109, v160, v170, v175, v176, v177, v178);
  OUTLINED_FUNCTION_165_2();
  v110 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_64_13(v110, v111, v112, v113, v114, v115, v116, v117, v161, v171, v175, v176, v177, v178, v179, *((uint64_t *)&v179 + 1), v180, v181, v182,
    v183,
    v184,
    v185,
    v186.n128_i8[0]);
  v119 = v118;
  OUTLINED_FUNCTION_23_2();
  v120 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v120 + 16) = v119;
  OUTLINED_FUNCTION_11_6();
  sub_242BC995C();
  OUTLINED_FUNCTION_110_3(v121, v122, (uint64_t *)&unk_257228D70, v123, v124);
  if (v178)
  {
    OUTLINED_FUNCTION_84_8(v125, v126, v127, v128, v129, v130, v131, v132, v162, v172, v175, v176, v177, v178, v179);
    OUTLINED_FUNCTION_264(v133, v134);
    OUTLINED_FUNCTION_302();
    if (!v136)
    {
      v163 = 94;
      OUTLINED_FUNCTION_97_4((uint64_t)&v186, v135 & 1);
    }
    v175 = v120;
    v137 = OUTLINED_FUNCTION_5();
    v145 = OUTLINED_FUNCTION_235_1(v137, v138, v139, v140, v141, v142, v143, v144, v163, v173, v175, v176, v177, v178);
    OUTLINED_FUNCTION_190_1(v145, v146, v147, v148, v149, v150, v151, v152, v164, v174, v175, v176, v177, v178);
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_13_0();
    v153 = v175;
  }
  else
  {
    OUTLINED_FUNCTION_206_1(v125, (uint64_t *)&unk_257228D70, v127, v128);
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_13_0();
    v153 = v120;
  }
  OUTLINED_FUNCTION_12_34(v1);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_12_34((uint64_t)v193);
  *v0 = v153;
  OUTLINED_FUNCTION_95_4();
}

void Tensor.init(randomTruncatedNormal:mean:standardDeviation:seed:scalarType:on:)()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t *v66;
  os_unfair_lock_s *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  const void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  const void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __n128 v188;
  double v189;
  char v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  char v197;
  _BYTE v198[64];
  _BYTE v199[24];
  uint64_t v200;

  OUTLINED_FUNCTION_98_5();
  OUTLINED_FUNCTION_239_1(v6, v7, (uint64_t *)&unk_257228D70, v8, v9);
  if (!v200)
  {
    OUTLINED_FUNCTION_22_2();
    v10 = OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_69_10((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v157, v167, v177, v178, v179, v180);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_24((uint64_t)&v188, (uint64_t)v198);
    OUTLINED_FUNCTION_126_4(v18, v19, v20, v21, v22, v23, v24, v25, v158, v168, v177, v178, v179, v180);
    OUTLINED_FUNCTION_12_34((uint64_t)v199);
    if ((v2 & 1) == 0)
      goto LABEL_9;
LABEL_5:
    OUTLINED_FUNCTION_22_2();
    v26 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_51_21();
    v27 = *(_QWORD *)(*(_QWORD *)v26 + 16);
    OUTLINED_FUNCTION_0_3();
    v28 = *(_QWORD *)v26;
    v29 = OUTLINED_FUNCTION_48_21();
    *(_QWORD *)v26 = v28;
    if ((v29 & 1) != 0)
    {
      if (v27)
        goto LABEL_7;
    }
    else
    {
      OUTLINED_FUNCTION_251_1();
      v28 = v156;
      *(_QWORD *)v26 = v156;
      if (v27)
      {
LABEL_7:
        if (v27 <= *(_QWORD *)(v28 + 16))
        {
          OUTLINED_FUNCTION_240();
          OUTLINED_FUNCTION_225_2();
          OUTLINED_FUNCTION_17_5();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_158_3();
  if ((v2 & 1) != 0)
    goto LABEL_5;
LABEL_9:
  v30 = OUTLINED_FUNCTION_252_0();
  OUTLINED_FUNCTION_96_4(v30, v31, v38, v39, v32, v33, v34, v35, v36, v37, v40, v41, v42, v43, v44, v45, v157, v167, v177,
    v178,
    v179,
    v180,
    v181,
    *((uint64_t *)&v181 + 1),
    v182,
    v183,
    v184,
    v185,
    v186,
    v187,
    v188,
    v189,
    v190,
    v191);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_28_5();
  v184 = v4;
  OUTLINED_FUNCTION_245_1();
  v194 = v46;
  v195 = v47;
  LODWORD(v193) = 0x40000000;
  v196 = 1;
  v197 = v3;
  *(_OWORD *)(v5 + 216) = xmmword_242C4CA40;
  *(_OWORD *)(v5 + 232) = xmmword_242C4CA50;
  OUTLINED_FUNCTION_61_11((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/"
                                   "Operations/RandomOp.swift");
  v48 = OUTLINED_FUNCTION_2_0();
  v52 = OUTLINED_FUNCTION_37_22(v48, v49, v50, v51, &v184, &v188, (uint64_t)v199);
  OUTLINED_FUNCTION_110_3(v52, v53, (uint64_t *)&unk_257228D70, v54, v55);
  if (!v180)
  {
    v77 = OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_206_1(v77, (uint64_t *)&unk_257228D70, v78, v79);
LABEL_16:
    OUTLINED_FUNCTION_116_4();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_154_4(v56, v57, v58, v59, v60, v61, v62, v63, v159, v169, v177, v178, v179, v180, v64);
  sub_242AC7938((unint64_t *)&qword_257221790, (uint64_t (*)(uint64_t))type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  v65 = qword_2572205A0;
  OUTLINED_FUNCTION_10();
  if (v65 != -1)
    swift_once();
  v66 = (uint64_t *)(qword_25722D2A8 + 16);
  v67 = (os_unfair_lock_s *)(qword_25722D2A8 + 24);
  OUTLINED_FUNCTION_11_6();
  os_unfair_lock_lock(v67);
  OUTLINED_FUNCTION_150_3(v66, &v177);
  os_unfair_lock_unlock(v67);
  v68 = v177;
  v69 = OUTLINED_FUNCTION_13_0();
  if ((v192 & ~v68) != 0)
  {
    OUTLINED_FUNCTION_190_1(v69, v70, v71, v72, v73, v74, v75, v76, v159, v169, v177, v178, v179, v180);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_150_4();
LABEL_17:
  OUTLINED_FUNCTION_22_2();
  v80 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_69_10((uint64_t)v80, v81, v82, v83, v84, v85, v86, v87, v159, v169, v177, v178, v179, v180);
  OUTLINED_FUNCTION_135();
  v88 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_126_4(v88, v89, v90, v91, v92, v93, v94, v95, v160, v170, v177, v178, v179, v180);
  v96 = sub_242B93328();
  OUTLINED_FUNCTION_69_10((uint64_t)v96, v97, v98, v99, v100, v101, v102, v103, v161, v171, v177, v178, v179, v180);
  OUTLINED_FUNCTION_135();
  v104 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_126_4(v104, v105, v106, v107, v108, v109, v110, v111, v162, v172, v177, v178, v179, v180);
  OUTLINED_FUNCTION_165_2();
  v112 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_64_13(v112, v113, v114, v115, v116, v117, v118, v119, v163, v173, v177, v178, v179, v180, v181, *((uint64_t *)&v181 + 1), v182, v183, v184,
    v185,
    v186,
    v187,
    v188.n128_i8[0]);
  v121 = v120;
  OUTLINED_FUNCTION_23_2();
  v122 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v122 + 16) = v121;
  OUTLINED_FUNCTION_11_6();
  sub_242BC995C();
  OUTLINED_FUNCTION_110_3(v123, v124, (uint64_t *)&unk_257228D70, v125, v126);
  if (v180)
  {
    OUTLINED_FUNCTION_84_8(v127, v128, v129, v130, v131, v132, v133, v134, v164, v174, v177, v178, v179, v180, v181);
    OUTLINED_FUNCTION_264(v135, v136);
    OUTLINED_FUNCTION_302();
    if (!v138)
    {
      v165 = 94;
      OUTLINED_FUNCTION_97_4((uint64_t)&v188, v137 & 1);
    }
    v177 = v122;
    v139 = OUTLINED_FUNCTION_5();
    v147 = OUTLINED_FUNCTION_235_1(v139, v140, v141, v142, v143, v144, v145, v146, v165, v175, v177, v178, v179, v180);
    OUTLINED_FUNCTION_190_1(v147, v148, v149, v150, v151, v152, v153, v154, v166, v176, v177, v178, v179, v180);
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_13_0();
    v155 = v177;
  }
  else
  {
    OUTLINED_FUNCTION_206_1(v127, (uint64_t *)&unk_257228D70, v129, v130);
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_13_0();
    v155 = v122;
  }
  OUTLINED_FUNCTION_12_34(v1);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_12_34((uint64_t)v198);
  *v0 = v155;
  OUTLINED_FUNCTION_95_4();
}

uint64_t sub_242B6A470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_228_2();
  return sub_242B67AE4(v0, v1, v2, v3, v4, MEMORY[0x24BEE3F88]);
}

uint64_t sub_242B6A490@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  if (!result)
  {
    v6 = 0;
    goto LABEL_7;
  }
  v6 = a2;
  if (!a2)
  {
LABEL_7:
    *a5 = v6;
    return result;
  }
  if (a4 >= a2)
  {
    if (a3)
      result = sub_242C48A4C();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_242B6A4F4()
{
  return sub_242B6ACA4();
}

uint64_t sub_242B6A504()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_243_1();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6A58C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_25_29();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F50);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6A61C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_203_2();
    if (v4 + 8 * v3 <= v2 || v2 + 8 * v3 <= v4)
    {
      OUTLINED_FUNCTION_165_2();
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6A6B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    v3 = a1 + 48 * a2;
    if (a3 + 48 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220ED0);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void *sub_242B6A758(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_185_2();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_92_5();
      return OUTLINED_FUNCTION_8_37(v7, v8, v9);
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = (void *)OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6A7D8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6A7E4(uint64_t a1, uint64_t a2)
{
  return sub_242B6A8B4(a1, a2);
}

uint64_t sub_242B6A7F0(uint64_t a1, uint64_t a2)
{
  return sub_242B6A8B4(a1, a2);
}

uint64_t sub_242B6A7FC(uint64_t a1, uint64_t a2)
{
  return sub_242B6A8B4(a1, a2);
}

uint64_t sub_242B6A808()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_244_1();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6A890(uint64_t a1, uint64_t a2)
{
  return sub_242B6A8B4(a1, a2);
}

uint64_t sub_242B6A89C(uint64_t a1, uint64_t a2)
{
  return sub_242B6A8B4(a1, a2);
}

uint64_t sub_242B6A8A8(uint64_t a1, uint64_t a2)
{
  return sub_242B6A8B4(a1, a2);
}

uint64_t sub_242B6A8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_55_12();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      OUTLINED_FUNCTION_88_2(v2, v3, v4, v5);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6A94C(uint64_t a1, uint64_t a2)
{
  return sub_242B6A964(a1, a2);
}

uint64_t sub_242B6A958(uint64_t a1, uint64_t a2)
{
  return sub_242B6A964(a1, a2);
}

uint64_t sub_242B6A964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_25_29();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      OUTLINED_FUNCTION_88_2(v2, v3, v4, v5);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void *sub_242B6A9EC()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  void *v3;
  void *v4;
  BOOL v5;
  BOOL v6;
  void *result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_128_5();
    if (!v6 && v5)
    {
      v5 = v4 >= v3;
      v6 = v4 == v3;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
      return OUTLINED_FUNCTION_8_37(v3, v1, v2);
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = (void *)OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6AA6C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_244_1();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void *sub_242B6AAF4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_93_6();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_92_5();
      return OUTLINED_FUNCTION_8_37(v7, v8, v9);
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = (void *)OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6AB74()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    if (v2 + 56 * v1 <= v0 || v0 + 56 * v1 <= v2)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6AC10()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_60_13();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6AC98()
{
  return sub_242B6ACA4();
}

uint64_t sub_242B6ACA4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_243_1();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6AD24(uint64_t a1, uint64_t a2)
{
  return sub_242B6A8B4(a1, a2);
}

uint64_t sub_242B6AD30(uint64_t a1, uint64_t a2)
{
  return sub_242B6AE60(a1, a2);
}

uint64_t sub_242B6AD3C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_60_13();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6ADC4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_25_29();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221EB0);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6AE54(uint64_t a1, uint64_t a2)
{
  return sub_242B6AE60(a1, a2);
}

uint64_t sub_242B6AE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_27_28();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      OUTLINED_FUNCTION_88_2(v2, v3, v4, v5);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6AEE8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AEF4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF00(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF0C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF18(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF24(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF30(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF3C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF48(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF54(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF60(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF6C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF78(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF84(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF90(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AF9C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFA8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFB4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFC0(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFCC(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFD8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFE4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFF0(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6AFFC(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B008()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    if (v2 + 48 * v1 <= v0 || v0 + 48 * v1 <= v2)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B0A0(uint64_t a1, uint64_t a2)
{
  return sub_242B6A964(a1, a2);
}

uint64_t sub_242B6B0AC(uint64_t a1, uint64_t a2)
{
  return sub_242B6A964(a1, a2);
}

uint64_t sub_242B6B0B8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B0C4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B0D0(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B0DC(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B0E8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B0F4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B100(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B10C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B118(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B124(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B130(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B13C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B148(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B154(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B160(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B16C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B178(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_159_4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F60);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void *sub_242B6B208(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_226_2();
    if (v4 + 176 * v3 <= v2 || v2 + 176 * v3 <= v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_92_5();
      return OUTLINED_FUNCTION_8_37(v6, v7, v8);
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = (void *)OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B2A0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_203_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257222600);
    OUTLINED_FUNCTION_155_4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B334(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_203_2();
    sub_242C47CD8();
    OUTLINED_FUNCTION_155_4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void *sub_242B6B3C8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_226_2();
    if (v4 + 24 * v3 <= v2 || v2 + 24 * v3 <= v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_92_5();
      return OUTLINED_FUNCTION_8_37(v6, v7, v8);
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = (void *)OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void *sub_242B6B458(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_226_2();
    if (v4 + 32 * v3 <= v2 || v2 + 32 * v3 <= v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_92_5();
      return OUTLINED_FUNCTION_8_37(v6, v7, v8);
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = (void *)OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B4E4(uint64_t a1, uint64_t a2)
{
  return sub_242B6AE60(a1, a2);
}

uint64_t sub_242B6B4F0(uint64_t a1, uint64_t a2)
{
  return sub_242B6AE60(a1, a2);
}

uint64_t sub_242B6B4FC(uint64_t a1, uint64_t a2)
{
  return sub_242B6A964(a1, a2);
}

uint64_t sub_242B6B508(uint64_t a1, uint64_t a2)
{
  return sub_242B6A964(a1, a2);
}

uint64_t sub_242B6B514()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_60_13();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B59C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_27_28();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220F80);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B62C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_27_28();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572210B8);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B6BC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_57_17();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_60_13();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_9_44();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B744(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_55_12();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221088);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void *sub_242B6B7E4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_226_2();
    if (v4 + 8 * v3 <= v2 || v2 + 8 * v3 <= v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_92_5();
      return OUTLINED_FUNCTION_8_37(v6, v7, v8);
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = (void *)OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

uint64_t sub_242B6B870(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B87C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B888(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B894(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8A0(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8AC(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8B8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8C4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8D0(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8DC(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8E8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B8F4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B900(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B90C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B918(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B924(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B930(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B93C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B948(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B954(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B960(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B96C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B978(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B984(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B990(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B99C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9A8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9B4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9C0(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9CC(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9D8(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9E4(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9F0(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6B9FC(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA08(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA14(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA20(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA2C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA38(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA44(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA50(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA5C(uint64_t a1, uint64_t a2)
{
  return sub_242B6BA68(a1, a2);
}

uint64_t sub_242B6BA68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_159_4();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      OUTLINED_FUNCTION_88_2(v2, v3, v4, v5);
      OUTLINED_FUNCTION_7_42();
      return OUTLINED_FUNCTION_1_58();
    }
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_15();
  }
  result = OUTLINED_FUNCTION_13();
  __break(1u);
  return result;
}

void sub_242B6BAF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjectType;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[10];
  _QWORD v35[3];
  uint64_t v36;
  char v37;
  char v38[8];

  OUTLINED_FUNCTION_0_3();
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v3)
  {
    OUTLINED_FUNCTION_74();
    v5 = 0;
    v6 = 0;
    v29 = v4 + 4;
    v31 = v4;
    v7 = v2 + 32;
    while (2)
    {
      v32 = v5;
      v8 = v7 + 8 * v6;
      while (1)
      {
        if ((unint64_t)v6 >= *(_QWORD *)(v2 + 16))
        {
          __break(1u);
          goto LABEL_39;
        }
        sub_242A9297C(v8, (uint64_t)v38, (uint64_t *)&unk_25722F1B0);
        Strong = swift_weakLoadStrong();
        if (Strong)
          break;
        OUTLINED_FUNCTION_140_2((uint64_t)v38);
LABEL_17:
        ++v6;
        v8 += 8;
        if (v6 >= v3)
        {
          v5 = v32;
LABEL_32:
          OUTLINED_FUNCTION_34();
          v4 = v31;
          goto LABEL_34;
        }
      }
      v10 = Strong;
      if (*(uint64_t *)(Strong + 32) > 0)
      {
        swift_retain();
        v11 = OUTLINED_FUNCTION_257_1();
        objc_msgSend(v11, sel_lock);

        v12 = (void *)(v10 + 40);
        OUTLINED_FUNCTION_51_21();
        sub_242A6FF34(v10 + 40, (uint64_t)v35);
        if (!v37)
        {
          sub_242A8D620((uint64_t)v35, (uint64_t)v34);
          v13 = (void *)v34[0];
          v14 = v34[1];
          ObjectType = swift_getObjectType();
          LOBYTE(v14) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 56))(ObjectType, v14);
          sub_242A6FFE8((uint64_t)v34);
          v16 = OUTLINED_FUNCTION_257_1();
          OUTLINED_FUNCTION_247_1(v16);
          OUTLINED_FUNCTION_50_0();

          OUTLINED_FUNCTION_140_2((uint64_t)v38);
          if ((v14 & 1) == 0)
          {
            v18 = v32;
            if (!v32)
            {
              if ((v31[3] >> 1) + 0x4000000000000000 < 0)
                goto LABEL_41;
              OUTLINED_FUNCTION_205_1();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
              v19 = (_QWORD *)OUTLINED_FUNCTION_2_0();
              v20 = (uint64_t)(_swift_stdlib_malloc_size(v19) - 32) / 8;
              v19[2] = 0;
              v19[3] = (2 * v20) | 1;
              v21 = (unint64_t)(v19 + 4);
              v22 = v31[3];
              v23 = v22 >> 1;
              if (v31[2])
              {
                if (v19 != v31 || v21 >= (unint64_t)&v31[v23 + 4])
                {
                  v33 = v20;
                  v30 = v31[3];
                  memmove(v19 + 4, v31 + 4, 8 * v23);
                  v21 = (unint64_t)(v19 + 4);
                  v22 = v30;
                  v20 = v33;
                }
                v31[2] = 0;
              }
              v29 = (uint64_t *)(v21 + 8 * v23);
              v18 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - (v22 >> 1);
              OUTLINED_FUNCTION_19_5();
              v31 = v19;
            }
            v25 = __OFSUB__(v18, 1);
            v5 = v18 - 1;
            v7 = v2 + 32;
            if (!v25)
            {
              ++v6;
              *v29++ = v10;
              if (v6 < v3)
                continue;
              goto LABEL_32;
            }
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
            return;
          }
          goto LABEL_16;
        }
        if (v37 == 1)
        {
          v12 = (void *)v35[0];
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_242A6FFE8((uint64_t)&v36);
        }
        else
        {
          sub_242A6FF70((uint64_t)v35);
        }
        v17 = OUTLINED_FUNCTION_257_1();
        OUTLINED_FUNCTION_247_1(v17);
        OUTLINED_FUNCTION_50_0();

      }
      break;
    }
    OUTLINED_FUNCTION_140_2((uint64_t)v38);
LABEL_16:
    OUTLINED_FUNCTION_50_0();
    goto LABEL_17;
  }
  v5 = 0;
LABEL_34:
  v26 = v4[3];
  if (v26 >= 2)
  {
    v27 = v26 >> 1;
    v25 = __OFSUB__(v27, v5);
    v28 = v27 - v5;
    if (v25)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4[2] = v28;
  }
}

uint64_t sub_242B6BDF4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_175_1();
  swift_retain();
  v0 = sub_242ACDDF8();
  v2 = v1;
  result = OUTLINED_FUNCTION_28_5();
  if (v0 >> 62)
    goto LABEL_30;
  v4 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v2 != v4)
  {
    if (v2 >= v4)
    {
      __break(1u);
      goto LABEL_31;
    }
    v7 = v0 & 0xC000000000000001;
    OUTLINED_FUNCTION_238_1(v2);
    OUTLINED_FUNCTION_238_1(v4 - 1);
    v6 = 0;
    v8 = v5 + 4;
    v22 = v4;
    while (1)
    {
      if (v7)
      {
        v9 = MEMORY[0x2494EC84C](v2, v0);
        if (v6)
          goto LABEL_22;
      }
      else
      {
        v9 = *(_QWORD *)(v0 + 8 * v2 + 32);
        OUTLINED_FUNCTION_11_6();
        if (v6)
          goto LABEL_22;
      }
      if ((v5[3] >> 1) + 0x4000000000000000 < 0)
        goto LABEL_29;
      v10 = v0;
      v11 = v7;
      OUTLINED_FUNCTION_205_1();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
      v12 = (_QWORD *)OUTLINED_FUNCTION_2_0();
      v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 8;
      v12[2] = v6;
      v12[3] = (2 * v13) | 1;
      v14 = (unint64_t)(v12 + 4);
      v15 = v5[3];
      v16 = v15 >> 1;
      if (v5[2])
      {
        if (v12 != v5 || v14 >= (unint64_t)&v5[v16 + 4])
          memmove(v12 + 4, v5 + 4, 8 * v16);
        v5[2] = 0;
      }
      v8 = (uint64_t *)(v14 + 8 * v16);
      v6 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - (v15 >> 1);
      OUTLINED_FUNCTION_28_5();
      v5 = v12;
      v7 = v11;
      v0 = v10;
      v4 = v22;
LABEL_22:
      v18 = __OFSUB__(v6--, 1);
      if (v18)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        OUTLINED_FUNCTION_28_1();
        v4 = sub_242C48FC8();
        result = OUTLINED_FUNCTION_4_0();
        goto LABEL_3;
      }
      ++v2;
      *v8++ = v9;
      if (v4 == v2)
        goto LABEL_24;
    }
  }
  v6 = 0;
LABEL_24:
  result = OUTLINED_FUNCTION_4_0();
  v19 = v5[3];
  if (v19 < 2)
    return (uint64_t)v5;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v6);
  v21 = v20 - v6;
  if (!v18)
  {
    v5[2] = v21;
    return (uint64_t)v5;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_242B6BFDC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[11];
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_17_17();
  v51 = v0;
  v52 = v2;
  v4 = v3;
  v5 = v1;
  if (v1 >> 62)
    goto LABEL_43;
  v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v6 <= 0)
    {
      v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v8 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257220FA8);
      v7 = (_QWORD *)OUTLINED_FUNCTION_2_0();
      v8 = 2 * ((uint64_t)(_swift_stdlib_malloc_size(v7) - 32) / 24);
      v7[2] = v6;
      v7[3] = v8;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_242C37948(v4, v9, v10, v11, v12, v13, v14, v15, v44, v45, 32, v46, v47, v48, v49, v50[0], v50[1], v50[2], v50[3],
      v50[4],
      v50[5],
      v50[6],
      v50[7],
      v50[8],
      v50[9],
      v50[10]);
    v17 = v16;
    OUTLINED_FUNCTION_35();
    v50[0] = v17;
    sub_242BB668C(v50);
    v18 = v50[0];
    MEMORY[0x24BDAC7A8](v19);
    OUTLINED_FUNCTION_165_2();
    swift_getKeyPath();
    swift_retain();
    v20 = sub_242BA74B4(v18);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_135();
    v21 = sub_242BA771C(v20, v5);
    OUTLINED_FUNCTION_35();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v6 < 0)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v22 = v8 >> 1;
    v23 = *(_QWORD *)(v21 + 16);
    if (v6)
    {
      if (!v23)
        goto LABEL_45;
      if (v6 - 1 >= (unint64_t)v23)
        goto LABEL_46;
      v24 = 0;
      v25 = 0;
      while (1)
      {
        v26 = &v7[v24 / 8];
        v27 = *(_QWORD *)(v21 + v24 + 40);
        v28 = *(_QWORD *)(v21 + v24 + 48);
        v26[4] = *(_QWORD *)(v21 + v24 + 32);
        v26[5] = v27;
        v26[6] = v28;
        if (v6 - 1 == v25)
          break;
        sub_242C480E0();
        OUTLINED_FUNCTION_5();
        ++v25;
        v24 += 24;
        if (v23 == v25)
        {
          __break(1u);
          break;
        }
      }
      v23 = *(_QWORD *)(v21 + 16);
      sub_242C480E0();
      OUTLINED_FUNCTION_5();
      v22 += ~v25;
      if (v6 >= v23)
        goto LABEL_37;
      v46 = v21;
      v29 = v26 + 7;
      v30 = v6;
    }
    else
    {
      if (!v23)
        goto LABEL_37;
      v46 = v21;
      v30 = 0;
      v29 = v7 + 4;
    }
    if (v30 >= *(_QWORD *)(v46 + 16))
      break;
    v4 = 24;
    v31 = (unint64_t *)(v46 + 24 * v6 + 48);
    v45 = v23;
    while (1)
    {
      v32 = *(v31 - 2);
      v33 = *(v31 - 1);
      v5 = *v31;
      if (v22)
      {
        OUTLINED_FUNCTION_44_0();
        OUTLINED_FUNCTION_10();
      }
      else
      {
        if ((v7[3] >> 1) + 0x4000000000000000 < 0)
          goto LABEL_42;
        OUTLINED_FUNCTION_205_1();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257220FA8);
        v34 = (_QWORD *)OUTLINED_FUNCTION_2_0();
        v35 = (uint64_t)(_swift_stdlib_malloc_size(v34) - 32) / 24;
        v34[2] = 0;
        v34[3] = 2 * v35;
        v36 = v34 + 4;
        v37 = v7[3] >> 1;
        v29 = &v34[3 * v37 + 4];
        v22 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
        if (v7[2])
        {
          if (v34 != v7 || v36 >= &v7[3 * v37 + 4])
            memmove(v36, v7 + 4, 24 * v37);
          OUTLINED_FUNCTION_44_0();
          OUTLINED_FUNCTION_10();
          v7[2] = 0;
        }
        else
        {
          OUTLINED_FUNCTION_44_0();
          OUTLINED_FUNCTION_10();
        }
        swift_release();
        v7 = v34;
        v4 = 24;
        v23 = v45;
      }
      v39 = __OFSUB__(v22--, 1);
      if (v39)
        break;
      ++v30;
      *v29 = v32;
      v29[1] = v33;
      v29[2] = v5;
      if ((uint64_t)v30 >= v23)
        goto LABEL_37;
      v29 += 3;
      v31 += 3;
      if (v30 >= *(_QWORD *)(v46 + 16))
        goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    sub_242C480E0();
    v6 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
LABEL_36:
  __break(1u);
LABEL_37:
  swift_bridgeObjectRelease();
  v40 = v7[3];
  if (v40 < 2)
    return (uint64_t)v7;
  v41 = v40 >> 1;
  v39 = __OFSUB__(v41, v22);
  v42 = v41 - v22;
  if (!v39)
  {
    v7[2] = v42;
    return (uint64_t)v7;
  }
LABEL_47:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_242B6C3A0(unint64_t a1, uint64_t a2)
{
  int v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;

  v3 = a1;
  v4 = HIDWORD(a1);
  result = sub_242B6C958(a1, a2);
  v6 = result;
  v7 = a2 >> 63;
  if (result > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
    v8 = (int *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v8);
    v9 = (result - 32) / 4;
    v10 = v8 + 8;
    *((_QWORD *)v8 + 2) = v6;
    *((_QWORD *)v8 + 3) = 2 * v9;
    v11 = (v9 & 0x7FFFFFFFFFFFFFFFLL) - v6;
    while (1)
    {
      v12 = v3 <= (int)v4;
      if (a2 > 0)
        v12 = v3 >= (int)v4;
      if (v12)
        break;
      if (a2 < 0 == v3 >= 0)
      {
        v13 = a2 + v3;
        if (__OFADD__(a2, v3))
          goto LABEL_59;
        if (v13 < (uint64_t)0xFFFFFFFF80000000)
          goto LABEL_60;
        if (v13 > 0x7FFFFFFF)
          goto LABEL_61;
      }
      else
      {
        if (a2 < (uint64_t)0xFFFFFFFF80000000)
          goto LABEL_57;
        if (a2 > 0x7FFFFFFF)
          goto LABEL_58;
        LODWORD(v13) = v3 + a2;
        if (__OFADD__(v3, (_DWORD)a2))
          LODWORD(v13) = v7 ^ 0x7FFFFFFF;
      }
      *v10++ = v3;
      v3 = v13;
      if (!--v6)
      {
        v3 = v13;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (result < 0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v8 = (int *)MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v10 = (int *)(MEMORY[0x24BEE4AF8] + 32);
LABEL_19:
  v14 = v3 <= (int)v4;
  if (a2 > 0)
    v14 = v3 >= (int)v4;
  if (!v14)
  {
    v30 = v7 ^ 0x7FFFFFFF;
    while (a2 < 0 != v3 >= 0)
    {
      if (a2 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_62;
      if (a2 > 0x7FFFFFFF)
        goto LABEL_63;
      LODWORD(v15) = v3 + a2;
      if (!__OFADD__(v3, (_DWORD)a2))
        goto LABEL_33;
      LODWORD(v15) = v30;
      if (!v11)
        goto LABEL_34;
      LODWORD(v15) = v30;
LABEL_47:
      v25 = __OFSUB__(v11--, 1);
      if (v25)
        goto LABEL_56;
      *v10++ = v3;
      v26 = (int)v15 <= (int)v4;
      if (a2 > 0)
        v26 = (int)v15 >= (int)v4;
      v3 = v15;
      if (v26)
        goto LABEL_51;
    }
    v15 = a2 + v3;
    if (__OFADD__(a2, v3))
      goto LABEL_64;
    if (v15 < (uint64_t)0xFFFFFFFF80000000)
      goto LABEL_65;
    if (v15 > 0x7FFFFFFF)
      goto LABEL_66;
LABEL_33:
    if (!v11)
    {
LABEL_34:
      v16 = *((_QWORD *)v8 + 3);
      if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_67;
      v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
      if (v17 <= 1)
        v18 = 1;
      else
        v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221110);
      v19 = (int *)swift_allocObject();
      v20 = (uint64_t)(_swift_stdlib_malloc_size(v19) - 32) / 4;
      *((_QWORD *)v19 + 2) = v18;
      *((_QWORD *)v19 + 3) = 2 * v20;
      v21 = (unint64_t)(v19 + 8);
      v22 = *((_QWORD *)v8 + 3);
      v23 = v22 >> 1;
      if (*((_QWORD *)v8 + 2))
      {
        if (v19 != v8 || v21 >= (unint64_t)&v8[v23 + 8])
          memmove(v19 + 8, v8 + 8, 4 * v23);
        *((_QWORD *)v8 + 2) = 0;
      }
      v10 = (int *)(v21 + 4 * v23);
      v11 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - (v22 >> 1);
      result = swift_release();
      v8 = v19;
      goto LABEL_47;
    }
    goto LABEL_47;
  }
LABEL_51:
  v27 = *((_QWORD *)v8 + 3);
  if (v27 < 2)
    return (uint64_t)v8;
  v28 = v27 >> 1;
  v25 = __OFSUB__(v28, v11);
  v29 = v28 - v11;
  if (!v25)
  {
    *((_QWORD *)v8 + 2) = v29;
    return (uint64_t)v8;
  }
LABEL_69:
  __break(1u);
  return result;
}

size_t sub_242B6C690(size_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  size_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD *)(a2 + 16);
  if (v3 >= v2)
    v4 = *(_QWORD *)(result + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220FC0);
    v7 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    result = _swift_stdlib_malloc_size(v7);
    v8 = 0;
    v9 = (uint64_t)(result - 32) / 16;
    v7[2] = v4;
    v7[3] = 2 * v9;
    v10 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    v11 = 4;
    do
    {
      if (v2 == v8)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (v3 == v8)
        goto LABEL_18;
      v12 = &v7[v11];
      v13 = *(_QWORD *)(a2 + 32 + 8 * v8);
      v14 = v8 + 1;
      *v12 = *(_QWORD *)(v6 + 32 + 8 * v8);
      v12[1] = v13;
      v11 += 2;
      v8 = v14;
    }
    while (v4 != v14);
    v15 = v10 - v14;
    if (v2 > v3)
      goto LABEL_12;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
    if (v2)
    {
LABEL_12:
      if (v2 <= v3)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
  }
  v16 = v7[3];
  if (v16 < 2)
    return (size_t)v7;
  v17 = v16 >> 1;
  v18 = __OFSUB__(v17, v15);
  v19 = v17 - v15;
  if (!v18)
  {
    v7[2] = v19;
    return (size_t)v7;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_242B6C7AC(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void (*v10)(uint64_t **, _QWORD);
  void (*v11)(uint64_t **, _QWORD);
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14[4];

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    OUTLINED_FUNCTION_28_1();
    v7 = sub_242C48FC8();
    result = OUTLINED_FUNCTION_4_0();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      OUTLINED_FUNCTION_28_1();
      v8 = sub_242C48FC8();
      result = OUTLINED_FUNCTION_4_0();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_242B6D208();
          OUTLINED_FUNCTION_28_1();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_257228AC0);
            sub_242A8D53C(v14, i, a3);
            v11 = v10;
            v13 = *v12;
            OUTLINED_FUNCTION_158_0();
            v11(v14, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          OUTLINED_FUNCTION_4_0();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_242B6A61C((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242B6C914(int64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t result;
  BOOL v5;
  BOOL v6;

  result = 0;
  while (1)
  {
    v5 = a1 <= a2;
    if (a3 > 0)
      v5 = a1 >= a2;
    if (v5)
      break;
    v6 = __OFADD__(a1, a3);
    a1 += a3;
    if (v6)
      a1 = (a1 >> 63) ^ 0x8000000000000000;
    v6 = __OFADD__(result++, 1);
    if (v6)
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

uint64_t sub_242B6C958(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  BOOL v5;
  BOOL v6;

  result = 0;
  v4 = HIDWORD(a1);
  while (1)
  {
    v5 = (int)a1 <= (int)v4;
    if (a2 > 0)
      v5 = (int)a1 >= (int)v4;
    if (v5)
      return result;
    if (a2 < 0 == (int)a1 >= 0)
    {
      v6 = __OFADD__(a2, (int)a1);
      a1 = a2 + (int)a1;
      if (v6)
        goto LABEL_20;
      if (a1 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_21;
      if (a1 > 0x7FFFFFFF)
        goto LABEL_22;
    }
    else
    {
      if (a2 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        return result;
      }
      if (a2 > 0x7FFFFFFF)
        goto LABEL_19;
      v6 = __OFADD__((_DWORD)a1, (_DWORD)a2);
      LODWORD(a1) = a1 + a2;
      if (v6)
        LODWORD(a1) = (a2 >> 63) ^ 0x7FFFFFFF;
    }
    v6 = __OFADD__(result++, 1);
    if (v6)
    {
      __break(1u);
      return result;
    }
  }
}

uint64_t sub_242B6C9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16[112];
  uint64_t v17[14];
  const char *v18;
  __int128 v19;
  __int128 v20;
  const char *v21;
  uint64_t v22;
  __int16 v23;

  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 224) = 0;
  *(_QWORD *)(a4 + 232) = 0;
  v8 = OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape;
  v9 = OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType;
  v10 = *(_BYTE *)(a1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType);
  v17[0] = *(_QWORD *)(a1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape);
  v16[0] = v10;
  v19 = xmmword_242C4CA40;
  v20 = xmmword_242C584B0;
  v18 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/InputOps.swift";
  v21 = "init(id:shape:scalarType:creationSite:)";
  v22 = 39;
  v23 = 2;
  type metadata accessor for InputOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_2();
  v11 = sub_242AF36A0(0, 0, 0, v17, v16, (uint64_t)&v18);
  if ((a3 & 0x100000000) != 0)
    LODWORD(a3) = *(_DWORD *)(v11 + 16);
  *(_DWORD *)(a4 + 24) = a3;
  *(_QWORD *)(a4 + 152) = *(_QWORD *)(a1 + v8);
  *(_BYTE *)(a4 + 160) = *(_BYTE *)(a1 + v9);
  sub_242AC7938(&qword_257221F78, (uint64_t (*)(uint64_t))type metadata accessor for InputOperation, (uint64_t)&unk_242C5314C);
  v13 = v12;
  OUTLINED_FUNCTION_0_2();
  v14 = OUTLINED_FUNCTION_11_6();
  sub_242BCA5F8(v14, v13, 0, 0, 0, (uint64_t)v16);
  v16[105] = 0;
  sub_242BCA82C(a1, (uint64_t)&off_251385668, (uint64_t)v17);
  OUTLINED_FUNCTION_13_0();
  swift_release();
  sub_242A6FF70((uint64_t)v16);
  sub_242B6D24C((uint64_t)v17, a4 + 40);
  sub_242A929E0(a2, a4 + 168, (uint64_t *)&unk_257228D70);
  return a4;
}

uint64_t sub_242B6CBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15[112];
  uint64_t v16[14];
  const char *v17;
  __int128 v18;
  __int128 v19;
  const char *v20;
  uint64_t v21;
  __int16 v22;

  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 224) = 0;
  *(_QWORD *)(a4 + 232) = 0;
  v8 = *(_QWORD *)(a1 + 16);
  v16[0] = v8;
  v9 = *(_BYTE *)(a1 + 24);
  v15[0] = v9;
  v18 = xmmword_242C4CA40;
  v19 = xmmword_242C584B0;
  v17 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/InputOps.swift";
  v20 = "init(id:shape:scalarType:creationSite:)";
  v21 = 39;
  v22 = 2;
  type metadata accessor for InputOperation();
  swift_allocObject();
  sub_242C480E0();
  v10 = sub_242AF36A0(0, 0, 0, v16, v15, (uint64_t)&v17);
  if ((a3 & 0x100000000) != 0)
    LODWORD(a3) = *(_DWORD *)(v10 + 16);
  *(_DWORD *)(a4 + 24) = a3;
  *(_QWORD *)(a4 + 152) = v8;
  *(_BYTE *)(a4 + 160) = v9;
  sub_242AC7938(&qword_257221F78, (uint64_t (*)(uint64_t))type metadata accessor for InputOperation, (uint64_t)&unk_242C5314C);
  v12 = v11;
  sub_242C480E0();
  v13 = swift_retain();
  sub_242BCA5F8(v13, v12, 0, 0, 0, (uint64_t)v15);
  v15[105] = 0;
  sub_242BCA82C(a1, (uint64_t)&off_251387678, (uint64_t)v16);
  swift_release();
  swift_release();
  sub_242A6FF70((uint64_t)v15);
  sub_242B6D24C((uint64_t)v16, a4 + 40);
  sub_242A929E0(a2, a4 + 168, (uint64_t *)&unk_257228D70);
  return a4;
}

uint64_t sub_242B6CD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13[112];
  uint64_t v14[14];
  const char *v15;
  __int128 v16;
  __int128 v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 224) = 0;
  *(_QWORD *)(a4 + 232) = 0;
  v14[0] = *(_QWORD *)(a1 + 24);
  v13[0] = *(_BYTE *)(a1 + 32);
  v16 = xmmword_242C4CA40;
  v17 = xmmword_242C584B0;
  v15 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/InputOps.swift";
  v18 = "init(id:shape:scalarType:creationSite:)";
  v19 = 39;
  v20 = 2;
  type metadata accessor for InputOperation();
  swift_allocObject();
  sub_242C480E0();
  v8 = sub_242AF36A0(0, 0, 0, v14, v13, (uint64_t)&v15);
  if ((a3 & 0x100000000) != 0)
    LODWORD(a3) = *(_DWORD *)(v8 + 16);
  *(_DWORD *)(a4 + 24) = a3;
  *(_QWORD *)(a4 + 152) = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a4 + 160) = *(_BYTE *)(a1 + 32);
  sub_242AC7938(&qword_257221F78, (uint64_t (*)(uint64_t))type metadata accessor for InputOperation, (uint64_t)&unk_242C5314C);
  v10 = v9;
  sub_242C480E0();
  v11 = swift_retain();
  sub_242BCA5F8(v11, v10, 0, 0, 0, (uint64_t)v13);
  v13[105] = 0;
  sub_242BCA82C(a1, (uint64_t)&off_251385428, (uint64_t)v14);
  swift_release();
  swift_release();
  sub_242A6FF70((uint64_t)v13);
  sub_242B6D24C((uint64_t)v14, a4 + 40);
  sub_242A929E0(a2, a4 + 168, (uint64_t *)&unk_257228D70);
  return a4;
}

uint64_t sub_242B6CEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_228_2();
  return sub_242B67A88(v0, v1, v2, v3, v4);
}

uint64_t sub_242B6CF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_228_2();
  return sub_242B67AE4(v0, v1, v2, v3, v4, MEMORY[0x24BEE14E8]);
}

uint64_t sub_242B6CF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_228_2();
  return sub_242B67BEC(v0, v1, v2, v3, v4);
}

void *sub_242B6CF4C(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_242B67B40(a1, a2, *a3);
}

void sub_242B6CF64(float a1, float a2, float a3)
{
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  _BOOL4 v10;
  float *v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  uint64_t v15;
  float v16;
  BOOL v17;
  float v18;
  BOOL v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  float *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v29;
  _BOOL4 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v6 = a1 <= a2;
  if (a3 > 0.0)
    v6 = a1 >= a2;
  if (!v6)
  {
    v7 = -1;
    do
    {
      v8 = ++v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      v9 = a1 + (float)((float)v8 * a3);
      v10 = v9 <= a2;
      if (a3 > 0.0)
        v10 = v9 >= a2;
    }
    while (!v10);
    if (v8 <= 0)
      goto LABEL_16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    v11 = (float *)swift_allocObject();
    v12 = (uint64_t)(_swift_stdlib_malloc_size(v11) - 32) / 4;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12;
    v13 = v11 + 8;
    v14 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - v8;
    v15 = -1;
    v16 = a1;
    while (1)
    {
      v17 = v16 <= a2;
      if (a3 > 0.0)
        v17 = v16 >= a2;
      if (v17)
        goto LABEL_46;
      v18 = a1 + (float)((float)(v15 + 2) * a3);
      *v13++ = v16;
      ++v15;
      v16 = v18;
      if (v7 == v15)
        goto LABEL_17;
    }
  }
LABEL_16:
  v8 = 0;
  v11 = (float *)MEMORY[0x24BEE4AF8];
  v13 = (float *)(MEMORY[0x24BEE4AF8] + 32);
  v14 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v18 = a1;
LABEL_17:
  v19 = v18 <= a2;
  if (a3 > 0.0)
    v19 = v18 >= a2;
  if (!v19)
  {
    while (!__OFADD__(v8, 1))
    {
      if (!v14)
      {
        v20 = *((_QWORD *)v11 + 3);
        if ((uint64_t)((v20 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_47;
        v21 = v20 & 0xFFFFFFFFFFFFFFFELL;
        if (v21 <= 1)
          v22 = 1;
        else
          v22 = v21;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
        v23 = (float *)swift_allocObject();
        v24 = (uint64_t)(_swift_stdlib_malloc_size(v23) - 32) / 4;
        *((_QWORD *)v23 + 2) = v22;
        *((_QWORD *)v23 + 3) = 2 * v24;
        v25 = (unint64_t)(v23 + 8);
        v26 = *((_QWORD *)v11 + 3);
        v27 = v26 >> 1;
        if (*((_QWORD *)v11 + 2))
        {
          if (v23 != v11 || v25 >= (unint64_t)&v11[v27 + 8])
            memmove(v23 + 8, v11 + 8, 4 * v27);
          *((_QWORD *)v11 + 2) = 0;
        }
        v13 = (float *)(v25 + 4 * v27);
        v14 = (v24 & 0x7FFFFFFFFFFFFFFFLL) - (v26 >> 1);
        swift_release();
        v11 = v23;
      }
      v29 = __OFSUB__(v14--, 1);
      if (v29)
        goto LABEL_45;
      *v13++ = v18;
      v18 = a1 + (float)((float)(v8 + 1) * a3);
      v30 = v18 <= a2;
      if (a3 > 0.0)
        v30 = v18 >= a2;
      ++v8;
      if (v30)
        goto LABEL_39;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
LABEL_39:
  v31 = *((_QWORD *)v11 + 3);
  if (v31 >= 2)
  {
    v32 = v31 >> 1;
    v29 = __OFSUB__(v32, v14);
    v33 = v32 - v14;
    if (v29)
    {
LABEL_48:
      __break(1u);
      return;
    }
    *((_QWORD *)v11 + 2) = v33;
  }
}

uint64_t sub_242B6D1E4()
{
  return MEMORY[0x24BEE1560];
}

uint64_t sub_242B6D1F0()
{
  return MEMORY[0x24BEE3FE8];
}

uint64_t sub_242B6D1FC()
{
  return MEMORY[0x24BEE1358];
}

unint64_t sub_242B6D208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257228AC8;
  if (!qword_257228AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257228AC0);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257228AC8);
  }
  return result;
}

uint64_t sub_242B6D24C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TensorRepresentation.ResolutionStage(a2, a1);
  return a2;
}

uint64_t sub_242B6D288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_242B6A490(a1, a2, *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a3);
}

void *sub_242B6D2A8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B6CF4C(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t OUTLINED_FUNCTION_1_58()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_7_42()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_8_37(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t OUTLINED_FUNCTION_9_44()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_11_38()
{
  return sub_242C48F5C();
}

void OUTLINED_FUNCTION_12_34(uint64_t a1)
{
  uint64_t *v1;

  sub_242A929A8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_34(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_29()
{
  return sub_242C491CC();
}

void OUTLINED_FUNCTION_22_24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_242A9297C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_29_23()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_30_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  a28 = 1;
  return sub_242BCBE34(a1, (uint64_t)&a11, 0x100000000uLL, v29, v30, v28);
}

uint64_t OUTLINED_FUNCTION_31_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  a26 = 1;
  return sub_242BCBEA4(a1, (uint64_t)&a9, 0x100000000, v28, v27, v26);
}

uint64_t OUTLINED_FUNCTION_32_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  a26 = 1;
  return sub_242BCBEA4(a1, (uint64_t)&a9, 0x100000000, v28, v27, v26);
}

void OUTLINED_FUNCTION_34_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)(v4 - 80, v4 - 81, v4 - 136, a4);
}

uint64_t OUTLINED_FUNCTION_35_20()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_37_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, uint64_t a7)
{
  uint64_t v7;

  return sub_242B91B60(0, 0, 0, v7, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_38_20()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_39_22(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a3);
  return sub_242B660CC(v5 - 64, v5 - 65, va, v3, v4);
}

uint64_t OUTLINED_FUNCTION_40_22()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_43_23(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_242A9297C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_44_18()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 136) = 0;
  *(_QWORD *)(v0 - 128) = 0xE000000000000000;
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_45_17()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_47_20()
{
  return type metadata accessor for TensorHandle();
}

uint64_t OUTLINED_FUNCTION_48_21()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_50_16(uint64_t a1)
{
  uint64_t *v1;

  sub_242A929A8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_51_21()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_61_13(uint64_t a1)
{
  uint64_t *v1;

  sub_242A929A8(a1, v1);
}

void OUTLINED_FUNCTION_64_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a23 = 1;
  sub_242B4BE5C(v25, 0, (uint64_t)&a11, 0x100000000, v24, v23, a1);
}

void OUTLINED_FUNCTION_65_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 + 144) = 1;
  sub_242B4BE5C(v4, 0, v1 + 48, 0x100000000, v3, v2, a1);
}

void OUTLINED_FUNCTION_66_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;

  sub_242A9297C(a1, (uint64_t)&a9, v9);
}

uint64_t OUTLINED_FUNCTION_68_9()
{
  return sub_242C48C38();
}

void OUTLINED_FUNCTION_69_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_242B933C0((uint64_t)va);
}

void OUTLINED_FUNCTION_71_8()
{
  uint64_t v0;

  sub_242B933C0(v0 + 144);
}

uint64_t OUTLINED_FUNCTION_76_9()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_79_7()
{
  uint64_t v0;

  return v0 + 32;
}

void OUTLINED_FUNCTION_82_7()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 80);
  *(_DWORD *)(v0 + 192) = *(_DWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 48) = v1;
  Tensor.scalarType.getter();
}

void OUTLINED_FUNCTION_84_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15)
{
  uint64_t v15;

  *(_OWORD *)(v15 + 32) = a15;
  Tensor.scalarType.getter();
}

void OUTLINED_FUNCTION_86_6(uint64_t a1)
{
  uint64_t *v1;

  sub_242A929A8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_88_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return __swift_instantiateConcreteTypeFromMangledName(a4);
}

uint64_t OUTLINED_FUNCTION_90_4(char a1, unint64_t a2, __n128 a3, double a4)
{
  __n128 *v4;

  v4[9] = a3;
  v4[10].n128_f64[0] = a4;
  v4[10].n128_u8[8] = a1 & 1;
  v4[11].n128_u64[0] = a2;
  return sub_242AC87F0((__n128 *)v4[3].n128_u64);
}

uint64_t OUTLINED_FUNCTION_91_4()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_92_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_96_4(char a1, uint64_t a2, __n128 a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,__n128 a31,double a32,char a33,uint64_t a34)
{
  a31 = a3;
  a32 = a4;
  a33 = a1 & 1;
  a34 = a2;
  return sub_242AC87F0(&a19);
}

__n128 OUTLINED_FUNCTION_101_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,__int128 a28,__int128 a29,__n128 a30,int a31)
{
  uint64_t v31;
  _OWORD *v32;
  __n128 result;

  v32 = (_OWORD *)(v31 - 128);
  *v32 = a28;
  v32[1] = a29;
  result = a30;
  v32[2] = a30;
  *(_DWORD *)(v31 - 80) = a31;
  return result;
}

void OUTLINED_FUNCTION_102_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;

  sub_242A9297C((uint64_t)&a9, v10 - 160, v9);
}

uint64_t OUTLINED_FUNCTION_104_5()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_106_5(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t *v4;
  va_list va;

  va_start(va, a3);
  sub_242A9297C(v3, (uint64_t)va, v4);
}

void OUTLINED_FUNCTION_107_2()
{
  Tensor.init(oneHotAtIndices:depth:onValue:offValue:on:)();
}

uint64_t OUTLINED_FUNCTION_108_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_110_3(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_242A9297C(v5 - 224, (uint64_t)va, a3);
}

uint64_t OUTLINED_FUNCTION_114_3()
{
  return swift_initStackObject();
}

double OUTLINED_FUNCTION_115_5()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_DWORD *)(v0 + 96) = 0;
  return result;
}

double OUTLINED_FUNCTION_116_4()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_117_3()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_120_5(uint64_t a1)
{
  uint64_t *v1;

  sub_242A929A8(a1, v1);
}

void OUTLINED_FUNCTION_124_5(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_242A929E0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_125_2()
{
  uint64_t v0;

  return sub_242A5DC30(v0 + 144);
}

uint64_t OUTLINED_FUNCTION_126_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  return sub_242A5DC30((uint64_t)va);
}

void OUTLINED_FUNCTION_134_4()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 72);
}

__n128 OUTLINED_FUNCTION_136_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,__int128 a26,__int128 a27,__n128 a28,int a29)
{
  uint64_t v29;
  __n128 result;

  *(_OWORD *)(v29 - 128) = a26;
  *(_OWORD *)(v29 - 112) = a27;
  result = a28;
  *(__n128 *)(v29 - 96) = a28;
  *(_DWORD *)(v29 - 80) = a29;
  return result;
}

void OUTLINED_FUNCTION_138_4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_242A9297C(a1, a2, v2);
}

void OUTLINED_FUNCTION_140_2(uint64_t a1)
{
  uint64_t *v1;

  sub_242A929A8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_142_4(uint64_t (*a1)(char *, _QWORD), uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return a1(va, 0);
}

__n128 OUTLINED_FUNCTION_143_3()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 64) = v1;
  result = *(__n128 *)(v0 + 176);
  *(__n128 *)(v0 + 80) = result;
  *(_DWORD *)(v0 + 96) = *(_DWORD *)(v0 + 192);
  return result;
}

void OUTLINED_FUNCTION_144_4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  sub_242A9297C(v28, (uint64_t)&a28, a3);
}

__n128 OUTLINED_FUNCTION_145_4()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 160) = v1;
  result = *(__n128 *)(v0 + 80);
  *(__n128 *)(v0 + 176) = result;
  *(_DWORD *)(v0 + 192) = *(_DWORD *)(v0 + 96);
  return result;
}

uint64_t OUTLINED_FUNCTION_147_2()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_148_3()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_149_3()
{
  return swift_unknownObjectRetain();
}

__n128 OUTLINED_FUNCTION_150_4()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_153_4()
{
  return swift_getObjectType();
}

__n128 OUTLINED_FUNCTION_154_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __n128 a15)
{
  __n128 *v15;
  __n128 result;

  result = a15;
  v15[2] = a15;
  return result;
}

uint64_t OUTLINED_FUNCTION_156_3(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void OUTLINED_FUNCTION_157_2(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_242B933C0((uint64_t)va);
}

__n128 OUTLINED_FUNCTION_158_3()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 160) = v2;
  result = *(__n128 *)(v0 + 240);
  *(__n128 *)(v0 + 176) = result;
  *(_DWORD *)(v1 - 176) = *(_DWORD *)(v1 - 112);
  return result;
}

uint64_t OUTLINED_FUNCTION_160_4()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_161_2(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  sub_242A9297C(v26, (uint64_t)&a26, a3);
}

void OUTLINED_FUNCTION_162_1(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  sub_242A9297C(v26, (uint64_t)&a26, a3);
}

void OUTLINED_FUNCTION_164_0()
{
  sub_242A5EC30();
}

uint64_t OUTLINED_FUNCTION_166_3()
{
  return swift_unknownObjectRetain();
}

id OUTLINED_FUNCTION_167_3(uint64_t a1, uint64_t a2)
{
  return sub_242BC9F84(a1, a2, 0, 0);
}

uint64_t OUTLINED_FUNCTION_168_2(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, _BYTE *), uint64_t a4, ...)
{
  _QWORD *v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  return sub_242B67934(v5, (uint64_t)va, a3, v4);
}

void OUTLINED_FUNCTION_169_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_242A929A8(v2 + 48, a2);
}

uint64_t OUTLINED_FUNCTION_173_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 + 32);
}

void OUTLINED_FUNCTION_174_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_242A9297C(a1, v3 + 48, a3);
}

uint64_t *OUTLINED_FUNCTION_176_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

void OUTLINED_FUNCTION_183_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  uint64_t *v69;

  sub_242A929E0((uint64_t)&STACK[0x2D0], (uint64_t)&a69, v69);
}

void OUTLINED_FUNCTION_184_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_242A9297C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_187_2()
{
  uint64_t v0;

  return sub_242A6FDE8(v0 + 144);
}

uint64_t OUTLINED_FUNCTION_190_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  return sub_242A6FDE8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_202_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_206_1(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_242A929A8((uint64_t)va, a2);
}

uint64_t (*OUTLINED_FUNCTION_207_2(uint64_t a1, uint64_t a2, ...))(_QWORD, _QWORD, _QWORD)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return sub_242C017F8((uint64_t)va, v2);
}

uint64_t OUTLINED_FUNCTION_210_2(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

const void *OUTLINED_FUNCTION_211_1()
{
  return sub_242B93328();
}

uint64_t OUTLINED_FUNCTION_213_1()
{
  return 0;
}

uint64_t *OUTLINED_FUNCTION_215_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t OUTLINED_FUNCTION_216_2()
{
  return Tensor.squeezingShape(at:)();
}

void OUTLINED_FUNCTION_218_2()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 56);
}

void OUTLINED_FUNCTION_219_1()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 128);
  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 136);
  *(_QWORD *)(v0 - 128) = v1;
}

char *OUTLINED_FUNCTION_220_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t OUTLINED_FUNCTION_223_1()
{
  return swift_release_n();
}

void OUTLINED_FUNCTION_224_2()
{
  bzero(&STACK[0x2D0], 0xECuLL);
}

uint64_t OUTLINED_FUNCTION_225_2()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_227_2()
{
  uint64_t v0;

  return Tensor.place(on:)(v0 + 144);
}

uint64_t OUTLINED_FUNCTION_230_2()
{
  uint64_t v0;

  return v0 + 32;
}

void OUTLINED_FUNCTION_231_1()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 40);
}

uint64_t OUTLINED_FUNCTION_235_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  return Tensor.place(on:)((uint64_t)va);
}

void OUTLINED_FUNCTION_237_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
}

uint64_t OUTLINED_FUNCTION_238_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_242B4B240(a1, v2, v1);
}

void OUTLINED_FUNCTION_239_1(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_242A9297C(a5, v5 - 160, a3);
}

uint64_t OUTLINED_FUNCTION_240_0()
{
  return swift_getObjectType();
}

id OUTLINED_FUNCTION_247_1(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1041));
}

void OUTLINED_FUNCTION_251_1()
{
  sub_242B4B510();
}

uint64_t OUTLINED_FUNCTION_252_0()
{
  unint64_t v0;

  return sub_242B40ACC(v0);
}

void OUTLINED_FUNCTION_253_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_242A929E0(a1, (uint64_t)&STACK[0x2E0], a3);
}

uint64_t OUTLINED_FUNCTION_254_0(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_242A5DC30((uint64_t)va);
}

__n128 *OUTLINED_FUNCTION_255_1(__n128 *result, __n128 a2)
{
  unsigned __int32 v2;

  result[1] = a2;
  result[2].n128_u32[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_256_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v1;
  *(_QWORD *)(v2 - 128) = a1;
  *(_WORD *)(v2 - 120) = 2;
  return 0;
}

id OUTLINED_FUNCTION_257_1()
{
  return sub_242BCA40C();
}

void OUTLINED_FUNCTION_258_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242A5DEE0(a1, a2, 1, v2);
}

uint64_t sub_242B6DE24(uint64_t (*a1)(_QWORD *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  _QWORD v11[3];
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  v3 = v2;
  v5 = *v1;
  v6 = *(_QWORD *)(*v1 + 16);
  sub_242C480E0();
  if (v6)
  {
    v7 = 0;
    while (1)
    {
      if (v7 >= v6)
      {
        v11[1] = 0;
        v11[2] = 0;
        v11[0] = v7;
        v12 = -1;
        v14 = 0;
        v15 = 0;
        v13 = v6;
        v16 = -1;
        v17 = 4;
        sub_242A59264();
      }
      v11[0] = *(_QWORD *)(v5 + 8 * v7 + 32);
      v8 = a1(v11);
      if (v3)
      {
        OUTLINED_FUNCTION_3_6();
        return v9 & 1;
      }
      if ((v8 & 1) != 0)
        break;
      ++v7;
      v6 = *(_QWORD *)(v5 + 16);
      if (v7 == v6)
        goto LABEL_7;
    }
    OUTLINED_FUNCTION_3_6();
    v9 = 1;
  }
  else
  {
LABEL_7:
    OUTLINED_FUNCTION_3_6();
    v9 = 0;
  }
  return v9 & 1;
}

void static Tensor.+ infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_15_33();
  OUTLINED_FUNCTION_54_12();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_41();
  OUTLINED_FUNCTION_123_2((__n128)xmmword_242C55110);
  OUTLINED_FUNCTION_17_32((__n128)xmmword_242C55100);
  OUTLINED_FUNCTION_16_35();
  OUTLINED_FUNCTION_21_30();
  OUTLINED_FUNCTION_2_60();
  if (!v23)
    goto LABEL_11;
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_102_3();
  if (!v3)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (!v4)
    {
      OUTLINED_FUNCTION_19_30();
      if (!v3)
        goto LABEL_9;
      OUTLINED_FUNCTION_24_32();
      OUTLINED_FUNCTION_49_17();
      OUTLINED_FUNCTION_55_13(v20, v21, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_39_23(v22, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
LABEL_13:
      sub_242A59264();
    }
    __break(1u);
LABEL_11:
    OUTLINED_FUNCTION_52_11((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_22_25(v19, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_14_6();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_101_5();
LABEL_9:
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_94_5();
  v5 = *MEMORY[0x24BEE38B8];
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  v6 = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_8_38();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B6FED4);
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_10_36((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)", (__n128)xmmword_242C58620);
  OUTLINED_FUNCTION_31_33();
  v7 = OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_45_18(v7, v8, v9, 0, v10, v11, v12, v13, v5, v6);
  OUTLINED_FUNCTION_73_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  OUTLINED_FUNCTION_82_8();
  OUTLINED_FUNCTION_26_34((__n128)xmmword_242C4B7F0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_11();
  v14 = OUTLINED_FUNCTION_36_23();
  OUTLINED_FUNCTION_50_17(v14, v15, v16, v17, 110, v18);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_20_35();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_11();
}

void static Tensor.* infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_15_33();
  OUTLINED_FUNCTION_54_12();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_41();
  OUTLINED_FUNCTION_123_2((__n128)xmmword_242C55110);
  OUTLINED_FUNCTION_17_32((__n128)xmmword_242C55100);
  OUTLINED_FUNCTION_16_35();
  OUTLINED_FUNCTION_21_30();
  OUTLINED_FUNCTION_2_60();
  if (!v23)
    goto LABEL_11;
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_102_3();
  if (!v3)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (!v4)
    {
      OUTLINED_FUNCTION_19_30();
      if (!v3)
        goto LABEL_9;
      OUTLINED_FUNCTION_24_32();
      OUTLINED_FUNCTION_49_17();
      OUTLINED_FUNCTION_55_13(v20, v21, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_39_23(v22, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
LABEL_13:
      sub_242A59264();
    }
    __break(1u);
LABEL_11:
    OUTLINED_FUNCTION_52_11((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_22_25(v19, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_14_6();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_101_5();
LABEL_9:
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_94_5();
  v5 = *MEMORY[0x24BEE38B8];
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  v6 = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_8_38();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B7035C);
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_10_36((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)", (__n128)xmmword_242C58620);
  OUTLINED_FUNCTION_31_33();
  v7 = OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_45_18(v7, v8, v9, 2, v10, v11, v12, v13, v5, v6);
  OUTLINED_FUNCTION_73_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  OUTLINED_FUNCTION_82_8();
  OUTLINED_FUNCTION_26_34((__n128)xmmword_242C4B7F0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_11();
  v14 = OUTLINED_FUNCTION_36_23();
  OUTLINED_FUNCTION_50_17(v14, v15, v16, v17, 281, v18);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_20_35();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B6E4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_137_3();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_74_9();
  if (!v1)
    goto LABEL_6;
  do
  {
    OUTLINED_FUNCTION_1_11();
    if (!v4)
    {
      __break(1u);
      goto LABEL_10;
    }
  }
  while (v2 != 1);
  if (v3 != 1)
  {
LABEL_10:
    OUTLINED_FUNCTION_95_5();
    swift_bridgeObjectRelease();
    v9 = OUTLINED_FUNCTION_57_18((uint64_t)"The tensor is not a scalar, but has shape ");
    MEMORY[0x2494EC0FC](v9, MEMORY[0x24BEE1768]);
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_119_0();
    OUTLINED_FUNCTION_105_5();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
LABEL_6:
  OUTLINED_FUNCTION_130_4();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_11();
  if (v10 == 12)
  {
    v5 = sub_242A9F4C0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_96_5(v6);
    OUTLINED_FUNCTION_17_1();
    v7 = swift_unknownObjectRelease();
    OUTLINED_FUNCTION_107_3(v7, *MEMORY[0x24BEE38B8]);
    OUTLINED_FUNCTION_98_6();
    OUTLINED_FUNCTION_106_6();
    v5 = ((uint64_t (*)())sub_242B6E4A8)();
  }
  swift_release();
  return v5 & 1;
}

uint64_t sub_242B6E624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_137_3();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_74_9();
  if (!v1)
    goto LABEL_6;
  do
  {
    OUTLINED_FUNCTION_1_11();
    if (!v4)
    {
      __break(1u);
      goto LABEL_10;
    }
  }
  while (v2 != 1);
  if (v3 != 1)
  {
LABEL_10:
    OUTLINED_FUNCTION_95_5();
    swift_bridgeObjectRelease();
    v9 = OUTLINED_FUNCTION_57_18((uint64_t)"The tensor is not a scalar, but has shape ");
    MEMORY[0x2494EC0FC](v9, MEMORY[0x24BEE1768]);
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_119_0();
    OUTLINED_FUNCTION_105_5();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_100_0();
  }
LABEL_6:
  OUTLINED_FUNCTION_130_4();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_11();
  if (v10 == 3)
  {
    v5 = sub_242A9F5D0((uint64_t)sub_242B71410, 0);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_96_5(v6);
    OUTLINED_FUNCTION_17_1();
    v7 = swift_unknownObjectRelease();
    OUTLINED_FUNCTION_107_3(v7, *MEMORY[0x24BEE38B8]);
    OUTLINED_FUNCTION_98_6();
    OUTLINED_FUNCTION_106_6();
    v5 = ((uint64_t (*)())sub_242B6E624)();
  }
  swift_release();
  return v5;
}

void pow(_:_:)()
{
  uint64_t v0;
  unint64_t v1;
  const char *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  const char *v8;
  char v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  const char *v35;
  uint64_t v36;
  __int16 v37;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_15_33();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_23_31();
  v6 = v32;
  if (!v32)
    goto LABEL_10;
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_12_35();
  v7 = v30;
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_12_35();
  if (v30 != v0)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (!v9)
    {
      OUTLINED_FUNCTION_19_30();
      if (!v10)
        goto LABEL_8;
      OUTLINED_FUNCTION_88_3();
      OUTLINED_FUNCTION_114_4();
      v32 = v30;
      *(_QWORD *)&v33 = v0;
      OUTLINED_FUNCTION_129_4(v25, v26, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_111_3(v27, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
LABEL_12:
      sub_242A59264();
    }
    __break(1u);
LABEL_10:
    v32 = (unint64_t)v2;
    OUTLINED_FUNCTION_134_5((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_76_10(v24, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_14_6();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_101_5();
LABEL_8:
  v29 = (uint64_t)v8;
  v32 = (unint64_t)v8;
  OUTLINED_FUNCTION_30_26();
  OUTLINED_FUNCTION_9_45(v3);
  OUTLINED_FUNCTION_38_21();
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_100_5();
  v11 = v32;
  v32 = v1;
  OUTLINED_FUNCTION_30_26();
  OUTLINED_FUNCTION_9_45(v3);
  OUTLINED_FUNCTION_38_21();
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_100_5();
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v1 + 16);
  v30 = v6;
  v31 = v7;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B70788);
  OUTLINED_FUNCTION_43_17();
  v32 = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operation"
                          "s/BinaryElementwiseOps.swift";
  v33 = xmmword_242C56B00;
  v34 = xmmword_242C58620;
  v35 = "init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)";
  v36 = 82;
  v37 = 2;
  OUTLINED_FUNCTION_60_14();
  OUTLINED_FUNCTION_31_33();
  v14 = OUTLINED_FUNCTION_84_9();
  OUTLINED_FUNCTION_59_14(v14, v15, v16, 4, v12, v13, v17, v18, v28, v29);
  OUTLINED_FUNCTION_126_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  swift_initStackObject();
  OUTLINED_FUNCTION_81_7((__n128)xmmword_242C4B7F0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_11();
  v19 = OUTLINED_FUNCTION_136_5();
  sub_242B76A50(v19, v20, v21, v22, 424, v23, 9, 2);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_41_26(v13, (uint64_t)&v30, v4);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_13_11();
}

void static Tensor./ infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_15_33();
  OUTLINED_FUNCTION_54_12();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_41();
  OUTLINED_FUNCTION_123_2((__n128)xmmword_242C55110);
  OUTLINED_FUNCTION_17_32((__n128)xmmword_242C55100);
  OUTLINED_FUNCTION_16_35();
  OUTLINED_FUNCTION_21_30();
  OUTLINED_FUNCTION_2_60();
  if (!v23)
    goto LABEL_11;
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_102_3();
  if (!v3)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (!v4)
    {
      OUTLINED_FUNCTION_19_30();
      if (!v3)
        goto LABEL_9;
      OUTLINED_FUNCTION_24_32();
      OUTLINED_FUNCTION_49_17();
      OUTLINED_FUNCTION_55_13(v20, v21, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_39_23(v22, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
LABEL_13:
      sub_242A59264();
    }
    __break(1u);
LABEL_11:
    OUTLINED_FUNCTION_52_11((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_22_25(v19, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_14_6();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_101_5();
LABEL_9:
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_94_5();
  v5 = *MEMORY[0x24BEE38B8];
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  v6 = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_8_38();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B704AC);
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_10_36((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)", (__n128)xmmword_242C58620);
  OUTLINED_FUNCTION_31_33();
  v7 = OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_45_18(v7, v8, v9, 3, v10, v11, v12, v13, v5, v6);
  OUTLINED_FUNCTION_73_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  OUTLINED_FUNCTION_82_8();
  OUTLINED_FUNCTION_26_34((__n128)xmmword_242C4B7F0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_11();
  v14 = OUTLINED_FUNCTION_36_23();
  OUTLINED_FUNCTION_50_17(v14, v15, v16, v17, 356, v18);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_20_35();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_11();
}

void static Tensor.- infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_15_33();
  OUTLINED_FUNCTION_54_12();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_41();
  OUTLINED_FUNCTION_123_2((__n128)xmmword_242C55110);
  OUTLINED_FUNCTION_17_32((__n128)xmmword_242C55100);
  OUTLINED_FUNCTION_16_35();
  OUTLINED_FUNCTION_21_30();
  OUTLINED_FUNCTION_2_60();
  if (!v23)
    goto LABEL_11;
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_102_3();
  if (!v3)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (!v4)
    {
      OUTLINED_FUNCTION_19_30();
      if (!v3)
        goto LABEL_9;
      OUTLINED_FUNCTION_24_32();
      OUTLINED_FUNCTION_49_17();
      OUTLINED_FUNCTION_55_13(v20, v21, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_39_23(v22, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
LABEL_13:
      sub_242A59264();
    }
    __break(1u);
LABEL_11:
    OUTLINED_FUNCTION_52_11((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_22_25(v19, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_14_6();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_101_5();
LABEL_9:
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_94_5();
  v5 = *MEMORY[0x24BEE38B8];
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  v6 = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_1_59();
  OUTLINED_FUNCTION_9_45(v0);
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_33_21();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_8_38();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B700DC);
  OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_10_36((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)", (__n128)xmmword_242C58620);
  OUTLINED_FUNCTION_31_33();
  v7 = OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_45_18(v7, v8, v9, 1, v10, v11, v12, v13, v5, v6);
  OUTLINED_FUNCTION_73_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  OUTLINED_FUNCTION_82_8();
  OUTLINED_FUNCTION_26_34((__n128)xmmword_242C4B7F0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_11();
  v14 = OUTLINED_FUNCTION_36_23();
  OUTLINED_FUNCTION_50_17(v14, v15, v16, v17, 178, v18);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_20_35();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_11();
}

uint64_t Tensor.squared()()
{
  uint64_t *v0;
  char v1;
  _BYTE v3[56];
  uint64_t v4;
  uint64_t v5;
  _OWORD v6[3];
  int v7;
  uint64_t v8;

  v8 = *v0;
  v1 = *(_BYTE *)(*(_QWORD *)(v8 + 16) + 160);
  v7 = 0;
  memset(v6, 0, sizeof(v6));
  v4 = MEMORY[0x24BEE4AF8];
  v3[55] = v1;
  sub_242A66290((uint64_t)v6, (uint64_t)v3);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v6);
  *(_QWORD *)&v6[0] = v5;
  pow(_:_:)();
  return OUTLINED_FUNCTION_135();
}

void max(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD v34[7];
  __int16 v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_83_8();
  *(_OWORD *)v34 = xmmword_242C55110;
  LOBYTE(v34[2]) = 0;
  v36 = v2;
  v37 = v0;
  OUTLINED_FUNCTION_17_32((__n128)xmmword_242C55100);
  OUTLINED_FUNCTION_16_35();
  OUTLINED_FUNCTION_72_9();
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 152);
  v37 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 152);
  OUTLINED_FUNCTION_25_30();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  v34[0] = v2;
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_102_3();
  if (!v6)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (v9)
    {
      __break(1u);
      v34[0] = v5;
      OUTLINED_FUNCTION_108_4((__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_85_7(v30, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_14_6();
    }
    else
    {
      v10 = *(unsigned __int8 *)(v7 + v8 + 32);
      if ((_DWORD)v10 != 13)
        goto LABEL_6;
      OUTLINED_FUNCTION_24_32();
      OUTLINED_FUNCTION_89_5();
      v34[0] = v10;
      v34[1] = v3;
      OUTLINED_FUNCTION_110_4(v31, v32, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_128_6(v33, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
    }
    sub_242A59264();
  }
LABEL_6:
  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_94_5();
  OUTLINED_FUNCTION_44_19();
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_67_11();
  OUTLINED_FUNCTION_116_5();
  v34[0] = v2;
  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_44_19();
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_67_11();
  OUTLINED_FUNCTION_116_5();
  v11 = OUTLINED_FUNCTION_40_23(*(_QWORD *)(v0 + 16));
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_104_6();
  v12 = OUTLINED_FUNCTION_115_6((uint64_t (*)(_QWORD *))sub_242B292DC);
  OUTLINED_FUNCTION_113_5();
  if ((v12 & 1) != 0
    && (v13 = OUTLINED_FUNCTION_40_23(*(_QWORD *)(v2 + 16)),
        MEMORY[0x24BDAC7A8](v13),
        OUTLINED_FUNCTION_103_4(),
        v14 = OUTLINED_FUNCTION_139_4((uint64_t (*)(_QWORD *))sub_242B29338),
        OUTLINED_FUNCTION_113_5(),
        (v14 & 1) != 0))
  {
    if ((OUTLINED_FUNCTION_66_15() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_87_7();
    OUTLINED_FUNCTION_99_5();
    sub_242A662D8((uint64_t)v34);
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_133_3();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 16);
    v16 = *(_QWORD *)(v2 + 16);
    OUTLINED_FUNCTION_28_32();
    OUTLINED_FUNCTION_5();
    v17 = OUTLINED_FUNCTION_21_22((uint64_t)sub_242B70E3C);
    v19 = v18;
    v34[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)&v34[1] = xmmword_242C56B00;
    *(_OWORD *)&v34[3] = xmmword_242C58620;
    v34[5] = "init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)";
    v34[6] = 82;
    v35 = 2;
    OUTLINED_FUNCTION_60_14();
    OUTLINED_FUNCTION_31_33();
    v20 = OUTLINED_FUNCTION_18_34();
    OUTLINED_FUNCTION_59_14(v20, v21, v22, 5, v15, v16, v23, v24, v17, v19);
    OUTLINED_FUNCTION_124_6();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    OUTLINED_FUNCTION_82_8();
    OUTLINED_FUNCTION_58_11((__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_6();
    v25 = OUTLINED_FUNCTION_36_23();
    OUTLINED_FUNCTION_48_16(v25, v26, v27, v28, 504, v29);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_71_9();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor.* infix<A>(_:_:)()
{
  sub_242B7063C();
}

{
  sub_242B6FFEC();
}

uint64_t static Tensor.+= infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_242B70218(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))static Tensor.+ infix(_:_:));
}

unsigned __int8 *sub_242B6F4C0(unsigned __int8 *result)
{
  if (result)
    return (unsigned __int8 *)*result;
  __break(1u);
  return result;
}

uint64_t sub_242B6F4D0(uint64_t result)
{
  if (result)
    return *(_QWORD *)result;
  __break(1u);
  return result;
}

uint64_t static Tensor.- prefix(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[56];
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  _OWORD v11[3];
  int v12;

  v1 = *a1;
  *(_QWORD *)&v11[0] = *a1;
  Tensor.scalarType.getter();
  if (dynamic_cast_existential_1_conditional(v2)
    || (*(_QWORD *)&v11[0] = v1, Tensor.scalarType.getter(), dynamic_cast_existential_1_conditional(v3)))
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    v4 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + 160);
    sub_242A66290((uint64_t)v11, (uint64_t)v10);
    v8 = MEMORY[0x24BEE4AF8];
    v7[55] = v4;
    sub_242A66290((uint64_t)v10, (uint64_t)v7);
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    sub_242A662D8((uint64_t)v10);
    v5 = v9;
    sub_242A662D8((uint64_t)v11);
    *(_QWORD *)&v11[0] = v5;
    v10[0] = v1;
    static Tensor.* infix(_:_:)();
    return OUTLINED_FUNCTION_135();
  }
  else
  {
    result = OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  return result;
}

void min(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD v34[7];
  __int16 v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_83_8();
  *(_OWORD *)v34 = xmmword_242C55110;
  LOBYTE(v34[2]) = 0;
  v36 = v2;
  v37 = v0;
  OUTLINED_FUNCTION_17_32((__n128)xmmword_242C55100);
  OUTLINED_FUNCTION_16_35();
  OUTLINED_FUNCTION_72_9();
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 152);
  v37 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 152);
  OUTLINED_FUNCTION_25_30();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  v34[0] = v2;
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_102_3();
  if (!v6)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (v9)
    {
      __break(1u);
      v34[0] = v5;
      OUTLINED_FUNCTION_108_4((__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_85_7(v30, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_14_6();
    }
    else
    {
      v10 = *(unsigned __int8 *)(v7 + v8 + 32);
      if ((_DWORD)v10 != 13)
        goto LABEL_6;
      OUTLINED_FUNCTION_24_32();
      OUTLINED_FUNCTION_89_5();
      v34[0] = v10;
      v34[1] = v3;
      OUTLINED_FUNCTION_110_4(v31, v32, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_128_6(v33, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
    }
    sub_242A59264();
  }
LABEL_6:
  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_94_5();
  OUTLINED_FUNCTION_44_19();
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_67_11();
  OUTLINED_FUNCTION_116_5();
  v34[0] = v2;
  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_44_19();
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_67_11();
  OUTLINED_FUNCTION_116_5();
  v11 = OUTLINED_FUNCTION_40_23(*(_QWORD *)(v0 + 16));
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_104_6();
  v12 = OUTLINED_FUNCTION_115_6((uint64_t (*)(_QWORD *))sub_242B29338);
  OUTLINED_FUNCTION_113_5();
  if ((v12 & 1) != 0
    && (v13 = OUTLINED_FUNCTION_40_23(*(_QWORD *)(v2 + 16)),
        MEMORY[0x24BDAC7A8](v13),
        OUTLINED_FUNCTION_103_4(),
        v14 = OUTLINED_FUNCTION_139_4((uint64_t (*)(_QWORD *))sub_242B29338),
        OUTLINED_FUNCTION_113_5(),
        (v14 & 1) != 0))
  {
    if ((OUTLINED_FUNCTION_66_15() & 1) == 0)
    {
      OUTLINED_FUNCTION_32_22();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_100_0();
    }
    OUTLINED_FUNCTION_87_7();
    OUTLINED_FUNCTION_99_5();
    sub_242A662D8((uint64_t)v34);
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_133_3();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 16);
    v16 = *(_QWORD *)(v2 + 16);
    OUTLINED_FUNCTION_28_32();
    OUTLINED_FUNCTION_5();
    v17 = OUTLINED_FUNCTION_21_22((uint64_t)sub_242B71148);
    v19 = v18;
    v34[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)&v34[1] = xmmword_242C56B00;
    *(_OWORD *)&v34[3] = xmmword_242C58620;
    v34[5] = "init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)";
    v34[6] = 82;
    v35 = 2;
    OUTLINED_FUNCTION_60_14();
    OUTLINED_FUNCTION_31_33();
    v20 = OUTLINED_FUNCTION_18_34();
    OUTLINED_FUNCTION_59_14(v20, v21, v22, 6, v15, v16, v23, v24, v17, v19);
    OUTLINED_FUNCTION_124_6();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
    OUTLINED_FUNCTION_82_8();
    OUTLINED_FUNCTION_58_11((__n128)xmmword_242C4B7F0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_6();
    v25 = OUTLINED_FUNCTION_36_23();
    OUTLINED_FUNCTION_48_16(v25, v26, v27, v28, 559, v29);
    OUTLINED_FUNCTION_60_8();
    sub_242B71334();
    OUTLINED_FUNCTION_71_9();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_13_11();
}

void static Tensor.zero.getter()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_24_22();
  Tensor.init(_:on:)((uint64_t)&v1, v0);
}

void static Tensor.% infix(_:_:)()
{
  uint64_t v0;
  unint64_t v1;
  const char *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  const char *v8;
  char v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  const char *v35;
  uint64_t v36;
  __int16 v37;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_15_33();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_23_31();
  v6 = v32;
  if (!v32)
    goto LABEL_10;
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_12_35();
  v7 = v30;
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_12_35();
  if (v30 != v0)
  {
    if (qword_2572205C0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_29();
    if (!v9)
    {
      OUTLINED_FUNCTION_19_30();
      if (!v10)
        goto LABEL_8;
      OUTLINED_FUNCTION_88_3();
      OUTLINED_FUNCTION_114_4();
      v32 = v30;
      *(_QWORD *)&v33 = v0;
      OUTLINED_FUNCTION_129_4(v25, v26, (__n128)xmmword_242C501F0);
      OUTLINED_FUNCTION_111_3(v27, (__n128)xmmword_242C4CA60);
      OUTLINED_FUNCTION_14_6();
LABEL_12:
      sub_242A59264();
    }
    __break(1u);
LABEL_10:
    v32 = (unint64_t)v2;
    OUTLINED_FUNCTION_134_5((__n128)xmmword_242C501F0);
    OUTLINED_FUNCTION_76_10(v24, (__n128)xmmword_242C4CA60);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_14_6();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_101_5();
LABEL_8:
  v29 = (uint64_t)v8;
  v32 = (unint64_t)v8;
  OUTLINED_FUNCTION_30_26();
  OUTLINED_FUNCTION_9_45(v3);
  OUTLINED_FUNCTION_38_21();
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_100_5();
  v11 = v32;
  v32 = v1;
  OUTLINED_FUNCTION_30_26();
  OUTLINED_FUNCTION_9_45(v3);
  OUTLINED_FUNCTION_38_21();
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_100_5();
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v1 + 16);
  v30 = v6;
  v31 = v7;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242B6FD30);
  OUTLINED_FUNCTION_43_17();
  v32 = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operation"
                          "s/BinaryElementwiseOps.swift";
  v33 = xmmword_242C56B00;
  v34 = xmmword_242C58620;
  v35 = "init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:backward:)";
  v36 = 82;
  v37 = 2;
  OUTLINED_FUNCTION_60_14();
  OUTLINED_FUNCTION_31_33();
  v14 = OUTLINED_FUNCTION_84_9();
  OUTLINED_FUNCTION_59_14(v14, v15, v16, 7, v12, v13, v17, v18, v28, v29);
  OUTLINED_FUNCTION_126_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  swift_initStackObject();
  OUTLINED_FUNCTION_81_7((__n128)xmmword_242C4B7F0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_11();
  v19 = OUTLINED_FUNCTION_136_5();
  OUTLINED_FUNCTION_50_17(v19, v20, v21, v22, 44, v23);
  OUTLINED_FUNCTION_60_8();
  sub_242B71334();
  OUTLINED_FUNCTION_41_26(v13, (uint64_t)&v30, v4);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B6FD30(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[2];
  uint64_t v14;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != 1)
  {
    v3 = *(_QWORD *)(result + 32);
    v4 = *(_QWORD *)(a2 + 32);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v5 = sub_242AC4964();
    v7 = v6;
    v14 = v4;
    static Tensor./ infix(_:_:)();
    floor(_:)();
    swift_release();
    v13[0] = v4;
    static Tensor.- prefix(_:)(v13);
    swift_release();
    v13[0] = v13[1];
    static Tensor.* infix(_:_:)();
    swift_release();
    v8 = v14;
    swift_retain();
    swift_retain();
    v9 = sub_242AC4964();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(v12 + 32) = v3;
    *(_QWORD *)(v12 + 40) = v5;
    *(_QWORD *)(v12 + 48) = v7;
    *(_QWORD *)(v12 + 56) = v8;
    *(_QWORD *)(v12 + 64) = v9;
    *(_QWORD *)(v12 + 72) = v11;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v12;
  }
LABEL_7:
  __break(1u);
  return result;
}

void static Tensor.% infix<A>(_:_:)()
{
  sub_242B6FFEC();
}

{
  sub_242B7063C();
}

uint64_t sub_242B6FED4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != 1)
  {
    v3 = *(_QWORD *)(result + 32);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v4 = sub_242AC4964();
    v6 = v5;
    swift_retain();
    swift_retain();
    v7 = sub_242AC4964();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(v10 + 32) = v3;
    *(_QWORD *)(v10 + 40) = v4;
    *(_QWORD *)(v10 + 48) = v6;
    *(_QWORD *)(v10 + 56) = v3;
    *(_QWORD *)(v10 + 64) = v7;
    *(_QWORD *)(v10 + 72) = v9;
    swift_release();
    swift_release();
    swift_release();
    return v10;
  }
LABEL_7:
  __break(1u);
  return result;
}

void static Tensor.+ infix<A>(_:_:)()
{
  sub_242B7063C();
}

{
  sub_242B6FFEC();
}

void sub_242B6FFEC()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v14;
  void *v15;
  uint64_t *v18;
  uint64_t v19;
  _QWORD v20[10];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_17_17();
  v20[0] = v4;
  v20[1] = v3;
  OUTLINED_FUNCTION_90_5();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v8;
  OUTLINED_FUNCTION_29_24((uint64_t)v8, v10, v11, v12);
  v13 = v21;
  OUTLINED_FUNCTION_35_21();
  OUTLINED_FUNCTION_12_35();
  v14 = OUTLINED_FUNCTION_112_5();
  OUTLINED_FUNCTION_48_22((uint64_t)v14);
  OUTLINED_FUNCTION_34_25();
  if ((v2 & 1) != 0)
  {
    v15 = static ScalarType.integerTypes.getter();
    OUTLINED_FUNCTION_47_21((uint64_t)v15);
    OUTLINED_FUNCTION_34_25();
LABEL_11:
    OUTLINED_FUNCTION_32_28((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_6_55();
    v19 = v21;
    goto LABEL_12;
  }
  if ((v0 != 12 || v13 != 12) && v0 == 12)
    goto LABEL_11;
  v18 = OUTLINED_FUNCTION_75_8();
  OUTLINED_FUNCTION_32_28((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_35_21();
  OUTLINED_FUNCTION_6_47();
  v19 = v22;
LABEL_12:
  v20[2] = v9;
  v21 = v19;
  OUTLINED_FUNCTION_46_19();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_13_11();
}

uint64_t static Tensor.+= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242B70744(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))static Tensor.+ infix<A>(_:_:));
}

uint64_t sub_242B700DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[2];

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != 1)
  {
    v3 = *(_QWORD *)(result + 32);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v4 = sub_242AC4964();
    v6 = v5;
    v12[0] = v3;
    static Tensor.- prefix(_:)(v12);
    v7 = v12[1];
    swift_retain();
    v8 = sub_242AC4964();
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(v11 + 32) = v3;
    *(_QWORD *)(v11 + 40) = v4;
    *(_QWORD *)(v11 + 48) = v6;
    *(_QWORD *)(v11 + 56) = v7;
    *(_QWORD *)(v11 + 64) = v8;
    *(_QWORD *)(v11 + 72) = v10;
    swift_release();
    swift_release();
    swift_release();
    return v11;
  }
LABEL_7:
  __break(1u);
  return result;
}

void static Tensor.- infix<A>(_:_:)()
{
  sub_242B7063C();
}

{
  sub_242B6FFEC();
}

uint64_t static Tensor.-= infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_242B70218(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))static Tensor.- infix(_:_:));
}

uint64_t sub_242B70218(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v6 = *a2;
  v7 = v4;
  a3(&v8, &v7, &v6);
  result = OUTLINED_FUNCTION_135();
  *a1 = v8;
  return result;
}

uint64_t static Tensor.-= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242B70744(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))static Tensor.- infix<A>(_:_:));
}

uint64_t Tensor.scaled<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242B7029C(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))static Tensor.* infix(_:_:));
}

uint64_t Tensor.adding<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242B7029C(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))static Tensor.+ infix(_:_:));
}

uint64_t sub_242B7029C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t *))
{
  uint64_t *v4;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10[7];
  uint64_t v11[6];
  uint64_t v12;

  v12 = *v4;
  v11[3] = a2;
  v11[4] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_24_22();
  Tensor.init(coercing:scalarType:on:)();
  v10[0] = v11[5];
  a4(&v12, v10);
  return OUTLINED_FUNCTION_135();
}

uint64_t Tensor.subtracting<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242B7029C(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))static Tensor.- infix(_:_:));
}

uint64_t sub_242B7035C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = a2[2];
  if (!v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != 1)
  {
    v3 = *(_QWORD *)(result + 32);
    v4 = a2[4];
    v14 = a2[5];
    v15 = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    static Tensor.* infix(_:_:)(&v16, &v15, &v14);
    v5 = v16;
    swift_retain();
    v6 = sub_242AC4964();
    v8 = v7;
    v14 = v4;
    v15 = v3;
    static Tensor.* infix(_:_:)(&v16, &v15, &v14);
    v9 = v16;
    swift_retain();
    v10 = sub_242AC4964();
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(v13 + 32) = v5;
    *(_QWORD *)(v13 + 40) = v6;
    *(_QWORD *)(v13 + 48) = v8;
    *(_QWORD *)(v13 + 56) = v9;
    *(_QWORD *)(v13 + 64) = v10;
    *(_QWORD *)(v13 + 72) = v12;
    swift_release();
    swift_release();
    swift_release();
    return v13;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t static Tensor.*= infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_242B70218(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))static Tensor.* infix(_:_:));
}

uint64_t static Tensor.*= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242B70744(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))static Tensor.* infix<A>(_:_:));
}

uint64_t sub_242B704AC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = a2[2];
  if (!v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != 1)
  {
    v3 = *(_QWORD *)(result + 32);
    v5 = a2[4];
    v17 = a2[5];
    v4 = v17;
    v18 = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    static Tensor./ infix(_:_:)(&v19, &v18, &v17);
    v6 = v19;
    swift_retain();
    v7 = sub_242AC4964();
    v9 = v8;
    v18 = v5;
    static Tensor.- prefix(_:)(&v18);
    v17 = v19;
    v18 = v4;
    Tensor.squared()();
    v15 = v16;
    static Tensor./ infix(_:_:)(&v18, &v17, &v15);
    swift_release();
    swift_release();
    v16 = v3;
    v17 = v18;
    static Tensor.* infix(_:_:)();
    swift_release();
    v10 = v19;
    swift_retain();
    v11 = sub_242AC4964();
    v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_242C4B7F0;
    *(_QWORD *)(v14 + 32) = v6;
    *(_QWORD *)(v14 + 40) = v7;
    *(_QWORD *)(v14 + 48) = v9;
    *(_QWORD *)(v14 + 56) = v10;
    *(_QWORD *)(v14 + 64) = v11;
    *(_QWORD *)(v14 + 72) = v13;
    swift_release();
    swift_release();
    swift_release();
    return v14;
  }
LABEL_7:
  __break(1u);
  return result;
}

void static Tensor./ infix<A>(_:_:)()
{
  sub_242B7063C();
}

{
  sub_242B6FFEC();
}

void sub_242B7063C()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v14;
  void *v15;
  uint64_t *v18;
  uint64_t v19;
  _QWORD v20[10];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_17_17();
  v20[0] = v4;
  v20[1] = v3;
  OUTLINED_FUNCTION_90_5();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v8;
  OUTLINED_FUNCTION_29_24(v10, (uint64_t)v8, v11, v12);
  v13 = v21;
  OUTLINED_FUNCTION_35_21();
  OUTLINED_FUNCTION_12_35();
  v14 = OUTLINED_FUNCTION_112_5();
  OUTLINED_FUNCTION_48_22((uint64_t)v14);
  OUTLINED_FUNCTION_34_25();
  if ((v2 & 1) != 0)
  {
    v15 = static ScalarType.integerTypes.getter();
    OUTLINED_FUNCTION_47_21((uint64_t)v15);
    OUTLINED_FUNCTION_34_25();
LABEL_11:
    OUTLINED_FUNCTION_32_28((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_6_55();
    v19 = v21;
    goto LABEL_12;
  }
  if ((v0 != 12 || v13 != 12) && v0 == 12)
    goto LABEL_11;
  v18 = OUTLINED_FUNCTION_75_8();
  OUTLINED_FUNCTION_32_28((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_35_21();
  OUTLINED_FUNCTION_6_47();
  v19 = v22;
LABEL_12:
  v20[2] = v19;
  v21 = v9;
  OUTLINED_FUNCTION_46_19();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_13_11();
}

uint64_t static Tensor./= infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_242B70218(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))static Tensor./ infix(_:_:));
}

uint64_t static Tensor./= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242B70744(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))static Tensor./ infix<A>(_:_:));
}

uint64_t sub_242B70744(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  a5(&v8, &v7);
  result = OUTLINED_FUNCTION_135();
  *a1 = v8;
  return result;
}

uint64_t sub_242B70788(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[7];
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[3];
  int v20;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = a2[2];
  if (!v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != 1)
  {
    v3 = *(_QWORD *)(result + 32);
    v5 = a2[4];
    v4 = a2[5];
    v6 = *(_BYTE *)(*(_QWORD *)(v4 + 16) + 160);
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    v17 = MEMORY[0x24BEE4AF8];
    LOBYTE(v15) = v6;
    sub_242A66290((uint64_t)v19, (uint64_t)v16);
    swift_retain();
    swift_retain();
    swift_retain();
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    sub_242A662D8((uint64_t)v19);
    v18 = v4;
    *(_QWORD *)&v19[0] = v3;
    static Tensor.* infix(_:_:)();
    v18 = v16[0];
    *(_QWORD *)&v19[0] = v5;
    v17 = v4;
    static Tensor.- infix(_:_:)();
    v14 = v15;
    pow(_:_:)(&v17, v19, &v14);
    swift_release();
    v15 = v17;
    static Tensor.* infix(_:_:)();
    swift_release();
    swift_release();
    v7 = *(_QWORD *)&v19[0];
    v16[0] = v5;
    v18 = v4;
    pow(_:_:)(v19, v16, &v18);
    v17 = v3;
    v18 = *(_QWORD *)&v19[0];
    static Tensor.* infix(_:_:)();
    swift_release();
    v18 = v16[0];
    *(_QWORD *)&v19[0] = v5;
    log(_:)();
    v15 = v17;
    static Tensor.* infix(_:_:)();
    swift_release();
    swift_release();
    v8 = *(_QWORD *)&v19[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_242C4B7F0;
    swift_retain();
    swift_retain();
    v10 = sub_242AC4964();
    *(_QWORD *)(v9 + 32) = v7;
    *(_QWORD *)(v9 + 40) = v10;
    *(_QWORD *)(v9 + 48) = v11;
    swift_retain();
    swift_retain();
    v12 = sub_242AC4964();
    *(_QWORD *)(v9 + 56) = v8;
    *(_QWORD *)(v9 + 64) = v12;
    *(_QWORD *)(v9 + 72) = v13;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v9;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t squaredDifference(_:_:)()
{
  static Tensor.- infix(_:_:)();
  Tensor.squared()();
  return swift_release();
}

uint64_t root(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[8];

  v25[7] = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = OUTLINED_FUNCTION_140_3();
  OUTLINED_FUNCTION_138_5(v5, v6, v7, v8, v9, v10, v11, v12, v23, v4);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v25);
  v13 = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160);
  OUTLINED_FUNCTION_140_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(inited + 32) = a2;
  HIBYTE(v24) = v13;
  OUTLINED_FUNCTION_138_5(inited, v15, v16, v17, v18, v19, v20, v21, v24);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v25);
  static Tensor./ infix(_:_:)();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_135();
  v25[0] = v3;
  pow(_:_:)();
  return OUTLINED_FUNCTION_135();
}

uint64_t static Tensor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  char v21;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (v2 == v3)
  {
    v4 = 1;
  }
  else
  {
    if (*(unsigned __int8 *)(v2 + 160) != *(unsigned __int8 *)(v3 + 160))
    {
      sub_242C21A14();
      v7 = v6;
      v9 = v8;
      sub_242C21A14();
      v13 = v7;
      v14 = v9;
      v15 = xmmword_242C501F0;
      v16 = 6;
      v17 = v10;
      v18 = v11;
      v19 = xmmword_242C4CA60;
      v20 = 6;
      v21 = 0;
      OUTLINED_FUNCTION_14_6();
      sub_242A59264();
    }
    if ((sub_242C00B0C(*(_QWORD *)(v2 + 152), *(_QWORD *)(v3 + 152)) & 1) != 0)
    {
      static Tensor..== infix(_:_:)();
      v12 = v13;
      v4 = all(_:)(&v12);
      OUTLINED_FUNCTION_135();
    }
    else
    {
      v4 = 0;
    }
  }
  return v4 & 1;
}

uint64_t static Tensor.!= infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v2 = *a2;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v4 = *(_QWORD *)(*a2 + 16);
  if (v3 == v4)
    return 0;
  OUTLINED_FUNCTION_127_2();
  v6 = v5;
  OUTLINED_FUNCTION_127_2();
  if (v6 == v7)
  {
    if ((sub_242C00B0C(*(_QWORD *)(v3 + 152), *(_QWORD *)(v4 + 152)) & 1) != 0)
    {
      static Tensor..!= infix(_:_:)();
      sub_242C37658(0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) + 152) + 16));
      Tensor.any(squeezingAxes:)();
      OUTLINED_FUNCTION_28_5();
      v8 = sub_242B6E4A8();
      swift_release();
      OUTLINED_FUNCTION_135();
      return v8 & 1;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    OUTLINED_FUNCTION_127_2();
    sub_242C494F0();
    sub_242C48314();
    Tensor.scalarType.getter();
    sub_242C494F0();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    result = OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  return result;
}

uint64_t sub_242B70E3C(uint64_t a1, _QWORD *a2)
{
  return sub_242B71168(a1, a2, 501, (uint64_t)"max(_:_:)", (uint64_t)static Tensor..>= infix(_:_:), (uint64_t)&unk_25137D408);
}

void sub_242B70E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t *__return_ptr, _QWORD *, _QWORD *))
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  int v52;
  uint64_t *v53;
  _QWORD v54[6];
  int v55;
  char v56;
  _QWORD v57[6];
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  OUTLINED_FUNCTION_17_17();
  v52 = v26;
  v51[1] = v27;
  v51[0] = v28;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v53 = v35;
  v37 = v36;
  v38 = OUTLINED_FUNCTION_370();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v51 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *v34;
  v43 = *v32;
  v44 = *v30;
  v54[0] = v42;
  v57[0] = v43;
  a26(v61, v54, v57);
  LOBYTE(v57[0]) = *(_BYTE *)(*(_QWORD *)(v44 + 16) + 160);
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, *MEMORY[0x24BEE38B8], v38);
  Tensor.cast(to:roundingRule:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  OUTLINED_FUNCTION_100_5();
  v45 = v54[0];
  v57[0] = v44;
  v61[0] = v54[0];
  static Tensor.* infix(_:_:)();
  v46 = v54[0];
  v61[0] = v44;
  v47 = *(_BYTE *)(*(_QWORD *)(v45 + 16) + 160);
  v55 = 0;
  memset(v54, 0, sizeof(v54));
  v59 = MEMORY[0x24BEE4AF8];
  v58 = v47;
  sub_242A66290((uint64_t)v54, (uint64_t)v57);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v54);
  v54[0] = v60;
  v60 = v45;
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v60 = v57[0];
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v48 = v54[0];
  v49 = *(_QWORD *)(*(_QWORD *)(v42 + 16) + 152);
  v50 = *(_QWORD *)(*(_QWORD *)(v43 + 16) + 152);
  v54[0] = v49;
  v57[0] = v50;
  sub_242C480E0();
  sub_242C480E0();
  if (!static ShapeInference.broadcastingAxes(_:_:)(v54, v57))
  {
    v54[0] = 0xD000000000000056;
    v54[1] = 0x8000000242C6EEB0;
    v56 = 9;
    sub_242A59170();
  }
  v57[0] = v46;
  Tensor.sum(squeezingAxes:)();
  swift_bridgeObjectRelease();
  v57[0] = v54[0];
  v61[0] = v49;
  Tensor.reshaped(to:)(v61, v37);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_17_5();
  v57[0] = v48;
  Tensor.sum(squeezingAxes:)();
  swift_bridgeObjectRelease();
  v57[0] = v54[0];
  v61[0] = v50;
  Tensor.reshaped(to:)(v61, v53);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_157_0();
  swift_release();
  OUTLINED_FUNCTION_13_11();
}

void max<A>(_:_:)()
{
  sub_242B7063C();
}

{
  sub_242B6FFEC();
}

uint64_t sub_242B71148(uint64_t a1, _QWORD *a2)
{
  return sub_242B71168(a1, a2, 556, (uint64_t)"min(_:_:)", (uint64_t)static Tensor..<= infix(_:_:), (uint64_t)&unk_25137D430);
}

uint64_t sub_242B71168(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[7];

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = a2[2];
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 != 1)
  {
    v11 = *(_QWORD *)(result + 32);
    v12 = a2[4];
    v22 = a2[5];
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_6();
    LOBYTE(v20) = 2;
    sub_242B70E5C((uint64_t)v25, (uint64_t)&v24, (uint64_t)&v23, (uint64_t)&v22, (uint64_t)&v21, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/BinaryArithmetic.swift", 109, 2, a3, 45, a4, 9, v20, a5, a6, v11, v22, v12, v24,
      v25[0],
      v25[1],
      v25[2],
      v25[3],
      v25[4],
      v25[5],
      (void (*)(uint64_t *__return_ptr, _QWORD *, _QWORD *))v25[6]);
    v13 = v25[0];
    v14 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_242C4B7F0;
    OUTLINED_FUNCTION_11();
    swift_retain();
    v16 = sub_242AC4964();
    *(_QWORD *)(v15 + 32) = v13;
    *(_QWORD *)(v15 + 40) = v16;
    *(_QWORD *)(v15 + 48) = v17;
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_10();
    v18 = sub_242AC4964();
    *(_QWORD *)(v15 + 56) = v14;
    *(_QWORD *)(v15 + 64) = v18;
    *(_QWORD *)(v15 + 72) = v19;
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_135();
    swift_release();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_17_1();
    return v15;
  }
LABEL_7:
  __break(1u);
  return result;
}

void min<A>(_:_:)()
{
  sub_242B7063C();
}

{
  sub_242B6FFEC();
}

unint64_t sub_242B712CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257226088;
  if (!qword_257226088)
  {
    v1 = type metadata accessor for BinaryArithmeticOperation();
    result = MEMORY[0x2494EDE24](&unk_242C600A0, v1);
    atomic_store(result, (unint64_t *)&qword_257226088);
  }
  return result;
}

uint64_t sub_242B7130C()
{
  swift_arrayDestroy();
  OUTLINED_FUNCTION_109_4();
  return swift_deallocClassInstance();
}

uint64_t sub_242B71334()
{
  swift_arrayDestroy();
  OUTLINED_FUNCTION_109_4();
  return swift_deallocClassInstance();
}

uint64_t sub_242B7135C()
{
  swift_arrayDestroy();
  OUTLINED_FUNCTION_109_4();
  return swift_deallocClassInstance();
}

unsigned __int8 *sub_242B71384@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unsigned __int8 *result;

  result = sub_242B6F4C0(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

BOOL sub_242B713B0(uint64_t *a1, uint64_t *a2)
{
  return sub_242B3E690(*a1, *a2);
}

unint64_t sub_242B713D4()
{
  unint64_t result;

  result = qword_257228CA8;
  if (!qword_257228CA8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for Tensor, &type metadata for Tensor);
    atomic_store(result, (unint64_t *)&qword_257228CA8);
  }
  return result;
}

uint64_t sub_242B71410@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_242B6F4D0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_59()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = v0;
  return sub_242B5E498((_QWORD *)(v1 - 288), (uint64_t *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_2_60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 288) = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 152);
  *(_QWORD *)(v2 - 104) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 152);
  return static ShapeInference.broadcasting(_:_:)();
}

uint64_t OUTLINED_FUNCTION_4_50()
{
  uint64_t v0;

  return sub_242B5E498((_QWORD *)(v0 - 288), (uint64_t *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_6_55()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 144) = 0;
  *(_OWORD *)(v2 - 176) = 0u;
  *(_OWORD *)(v2 - 160) = 0u;
  *(_OWORD *)(v2 - 192) = 0u;
  return Tensor.init<A>(_:scalarType:on:)(v1, v2 - 192, v0, (_QWORD *)(v2 - 128));
}

void OUTLINED_FUNCTION_7_43()
{
  Tensor.cast(to:roundingRule:)();
}

uint64_t OUTLINED_FUNCTION_8_38()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 288) = v1;
  *(_BYTE *)(v2 - 280) = v0;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_45(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_10_36@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 - 200) = a2;
  *(_QWORD *)(v2 - 184) = a1;
  *(_QWORD *)(v2 - 176) = 82;
  *(_WORD *)(v2 - 168) = 2;
  return type metadata accessor for BinaryArithmeticOperation();
}

uint64_t OUTLINED_FUNCTION_12_35()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_13_41()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 112) = *v0;
  *(_QWORD *)(v2 - 104) = v3;
}

uint64_t OUTLINED_FUNCTION_15_33()
{
  return sub_242C49208();
}

void OUTLINED_FUNCTION_17_32(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 - 288) = a1;
  *(_BYTE *)(v1 - 272) = 0;
}

uint64_t OUTLINED_FUNCTION_18_34()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_20_35()
{
  uint64_t v0;
  uint64_t (**v1)(_QWORD, _QWORD);
  uint64_t v2;

  return sub_242BC9830(v0, v1, 0, v2 - 288, *(uint64_t **)(v2 - 344));
}

unsigned __int8 *OUTLINED_FUNCTION_21_30()
{
  uint64_t v0;

  return requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(v0 - 104, (__int128 *)(v0 - 224), (uint64_t *)(v0 - 112), (__int128 *)(v0 - 288));
}

uint64_t OUTLINED_FUNCTION_22_25@<X0>(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 - 184) = a2;
  *(_BYTE *)(v2 - 168) = a1;
  *(_BYTE *)(v2 - 116) = 8;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_23_31()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *v0;
  *(_QWORD *)(v2 - 264) = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 152);
  *(_QWORD *)(v2 - 96) = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 152);
  return static ShapeInference.broadcasting(_:_:)();
}

void OUTLINED_FUNCTION_24_32()
{
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_25_30()
{
  return static ShapeInference.broadcasting(_:_:)();
}

uint64_t OUTLINED_FUNCTION_26_34(__n128 a1)
{
  __n128 *v1;
  unint64_t v2;
  uint64_t v3;

  v1[1] = a1;
  v1[2].n128_u64[0] = *(_QWORD *)(v3 - 352);
  v1[2].n128_u64[1] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_28_32()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 280) = v0;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_29_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
}

uint64_t OUTLINED_FUNCTION_30_26()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = v0;
  return sub_242B5E498((_QWORD *)(v1 - 264), (uint64_t *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_31_33()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_32_28@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_33_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_25()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_35_21()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = v0;
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_36_23()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_37_23()
{
  Tensor.cast(to:roundingRule:)();
}

void OUTLINED_FUNCTION_38_21()
{
  Tensor.cast(to:roundingRule:)();
}

void OUTLINED_FUNCTION_39_23(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 - 168) = a2;
  *(_BYTE *)(v2 - 152) = a1;
  *(_BYTE *)(v2 - 116) = 1;
}

uint64_t OUTLINED_FUNCTION_40_23@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(v1 - 224) = result;
  *(_QWORD *)(v1 - 288) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_26@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t (**v3)(_QWORD, _QWORD);

  return sub_242BC9830(a1, v3, 0, a2, a3);
}

uint64_t OUTLINED_FUNCTION_44_19()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_45_18(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return sub_242C0EA1C(a1, a2, a3, a4, v10, v11, a7, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_46_19()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 - 200))(v0 - 192, v0 - 128);
}

BOOL OUTLINED_FUNCTION_47_21(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

BOOL OUTLINED_FUNCTION_48_22(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

void OUTLINED_FUNCTION_49_17()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0;
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_50_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_242B76A50(a1, a2, a3, a4, a5, a6, 7, 2);
}

void OUTLINED_FUNCTION_52_11(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;

  *(__n128 *)(v2 - 216) = a1;
  *(_BYTE *)(v2 - 200) = 6;
  *(_QWORD *)(v2 - 192) = v1;
}

uint64_t OUTLINED_FUNCTION_55_13(uint64_t result, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  *(__n128 *)(v3 - 208) = a3;
  *(_BYTE *)(v3 - 192) = 6;
  *(_QWORD *)(v3 - 184) = result;
  *(_QWORD *)(v3 - 176) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_57_18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = 0xD00000000000002ALL;
  *(_QWORD *)(v1 - 72) = (a1 - 32) | 0x8000000000000000;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_58_11(__n128 a1)
{
  __n128 *v1;
  uint64_t v2;
  unint64_t v3;

  v1[1] = a1;
  v3 = *(_QWORD *)(v2 - 352);
  v1[2].n128_u64[0] = *(_QWORD *)(v2 - 368);
  v1[2].n128_u64[1] = v3;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_59_14(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242C0EA1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_60_14()
{
  return type metadata accessor for BinaryArithmeticOperation();
}

uint64_t OUTLINED_FUNCTION_64_14()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_66_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 - 224;
  *(_DWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v1 - 224) = 0u;
  return sub_242B64764(0, v0);
}

uint64_t OUTLINED_FUNCTION_67_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_68_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  uint64_t v0;
  uint64_t (**v1)(_QWORD, _QWORD);
  uint64_t v2;

  return sub_242BC9830(v0, v1, 0, v2 - 288, *(uint64_t **)(v2 - 360));
}

unsigned __int8 *OUTLINED_FUNCTION_72_9()
{
  uint64_t v0;

  return requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(v0 - 104, (__int128 *)(v0 - 224), (uint64_t *)(v0 - 112), (__int128 *)(v0 - 288));
}

unint64_t OUTLINED_FUNCTION_73_11()
{
  return sub_242B712CC();
}

uint64_t *OUTLINED_FUNCTION_75_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 96) = v1;
  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_76_10@<X0>(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 - 168) = a2;
  *(_BYTE *)(v2 - 152) = a1;
  *(_BYTE *)(v2 - 100) = 8;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_81_7(__n128 a1)
{
  __n128 *v1;
  unint64_t v2;
  uint64_t v3;

  v1[1] = a1;
  v1[2].n128_u64[0] = *(_QWORD *)(v3 - 328);
  v1[2].n128_u64[1] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_82_8()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_84_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_85_7@<X0>(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + 40) = a2;
  *(_BYTE *)(v3 - 168) = a1;
  *(_BYTE *)(v3 - 116) = 8;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_87_7()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 112) = v2;
  *(_BYTE *)(v3 - 337) = v0;
  return sub_242A66290(v3 - 224, v3 - 288);
}

void OUTLINED_FUNCTION_88_3()
{
  Tensor.scalarType.getter();
}

void OUTLINED_FUNCTION_89_5()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 224) = *(_QWORD *)(v0 - 352);
  Tensor.scalarType.getter();
}

void OUTLINED_FUNCTION_94_5()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 288) = v0;
}

uint64_t OUTLINED_FUNCTION_95_5()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
  return sub_242C48C38();
}

id OUTLINED_FUNCTION_96_5(uint64_t a1)
{
  uint64_t v1;

  return sub_242BC9F84(a1, v1, 0, 0);
}

void OUTLINED_FUNCTION_98_6()
{
  Tensor.cast(to:roundingRule:)();
}

void OUTLINED_FUNCTION_99_5()
{
  sub_242B65F7C();
}

uint64_t OUTLINED_FUNCTION_100_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_103_4()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_104_6()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_106_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_107_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

void OUTLINED_FUNCTION_108_4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;

  *(__n128 *)(v2 - 216) = a1;
  *(_BYTE *)(v2 - 200) = 6;
  *(_QWORD *)(v2 - 192) = v1;
}

uint64_t OUTLINED_FUNCTION_109_4()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_110_4(unint64_t result, unint64_t a2, __n128 a3)
{
  uint64_t v3;
  __n128 *v4;

  v4 = (__n128 *)(v3 - 224);
  v4[1] = a3;
  *(_BYTE *)(v3 - 192) = 6;
  v4[2].n128_u64[1] = result;
  v4[3].n128_u64[0] = a2;
  return result;
}

void OUTLINED_FUNCTION_111_3(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  *(__n128 *)(v2 - 152) = a2;
  *(_BYTE *)(v2 - 136) = a1;
  *(_BYTE *)(v2 - 100) = 1;
}

void *OUTLINED_FUNCTION_112_5()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_113_5()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_114_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = v0;
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_115_6(uint64_t (*a1)(_QWORD *))
{
  return sub_242B6DE24(a1);
}

uint64_t OUTLINED_FUNCTION_116_5()
{
  return swift_release();
}

void OUTLINED_FUNCTION_123_2(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 - 224) = a1;
  *(_BYTE *)(v1 - 208) = 0;
}

unint64_t OUTLINED_FUNCTION_124_6()
{
  return sub_242B712CC();
}

unint64_t OUTLINED_FUNCTION_126_5()
{
  return sub_242B712CC();
}

void OUTLINED_FUNCTION_127_2()
{
  Tensor.scalarType.getter();
}

void OUTLINED_FUNCTION_128_6(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + 56) = a2;
  *(_BYTE *)(v3 - 152) = a1;
  *(_BYTE *)(v3 - 116) = 1;
}

uint64_t OUTLINED_FUNCTION_129_4(uint64_t result, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  *(__n128 *)(v3 - 192) = a3;
  *(_BYTE *)(v3 - 176) = 6;
  *(_QWORD *)(v3 - 168) = result;
  *(_QWORD *)(v3 - 160) = a2;
  return result;
}

void OUTLINED_FUNCTION_130_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = v0;
  Tensor.scalarType.getter();
}

void OUTLINED_FUNCTION_133_3()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 360) = *(_QWORD *)(v0 + 120);
}

void OUTLINED_FUNCTION_134_5(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;

  *(__n128 *)(v2 - 200) = a1;
  *(_BYTE *)(v2 - 184) = 6;
  *(_QWORD *)(v2 - 176) = v1;
}

uint64_t OUTLINED_FUNCTION_136_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_138_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  return sub_242A66290((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_139_4(uint64_t (*a1)(_QWORD *))
{
  return sub_242B6DE24(a1);
}

double OUTLINED_FUNCTION_140_3()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

uint64_t sub_242B71C64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v22;
  unint64_t v23;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v30;

  v10 = a6;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
    sub_242B5A204(a2, a3, a4);
    v18 = MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
  v30 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  v16 = -a5;
  if (__OFSUB__(0, a5))
    goto LABEL_19;
  if (v16 > a5)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    sub_242B5A218(a2, a3, v25);
    sub_242B5A218(a6, v26, v27);
    sub_242A59264();
  }
  v25 = a4;
  v26 = a7;
  v27 = a8;
  v17 = (uint64_t *)(a1 + 32);
  v18 = v30;
  do
  {
    v20 = *v17++;
    v19 = v20;
    if (v20 < v16 || v19 >= a5)
      goto LABEL_21;
    if (v19 < 0)
    {
      v22 = __OFADD__(a5, v19);
      v19 += a5;
      if (v22)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    v23 = *(_QWORD *)(v30 + 16);
    if (v23 >= *(_QWORD *)(v30 + 24) >> 1)
      sub_242AC3124();
    *(_QWORD *)(v30 + 16) = v23 + 1;
    *(_QWORD *)(v30 + 8 * v23 + 32) = v19;
    --v13;
  }
  while (v13);
  sub_242B5A204(a2, a3, v25);
  a8 = v27;
  a7 = v26;
  v10 = a6;
LABEL_17:
  sub_242B5A204(v10, a7, a8);
  return v18;
}

uint64_t sub_242B71E50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_242AC3124();
    v5 = v16;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 152);
    do
    {
      v8 = *v6++;
      v9 = *(_QWORD *)(v7 + 16);
      v10 = v8 + v9;
      if (__OFADD__(v8, v9))
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        OUTLINED_FUNCTION_47_22();
        sub_242A59264();
      }
      if (!v9)
        goto LABEL_14;
      v11 = v10 % (uint64_t)v9;
      if (v11 < -(uint64_t)v9)
        goto LABEL_16;
      v12 = (v9 & (v11 >> 63)) + v11;
      if (v12 >= v9)
        goto LABEL_15;
      v13 = *(_QWORD *)(v7 + 32 + 8 * v12);
      v14 = *(_QWORD *)(v16 + 16);
      if (v14 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_242AC3124();
      *(_QWORD *)(v16 + 16) = v14 + 1;
      *(_QWORD *)(v16 + 8 * v14 + 32) = v13;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t Tensor.mean()()
{
  return sub_242B73128((uint64_t)&unk_25137B150, (uint64_t)&unk_25137B178);
}

uint64_t Tensor.sum()()
{
  uint64_t *v0;
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v3 = &unk_25137B1A0;
  v4 = v1;
  Tensor.reshaped(to:)((uint64_t *)&v3, &v5);
  v4 = v5;
  Tensor.sum(squeezingAxes:)();
  return OUTLINED_FUNCTION_9_46();
}

void Tensor.mean(squeezingAxes:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_76_8();
  Tensor.mean(squeezingAxes:)(v0);
  OUTLINED_FUNCTION_30_5();
}

void Tensor.max(squeezingAxes:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_76_8();
  Tensor.max(squeezingAxes:)(v0);
  OUTLINED_FUNCTION_30_5();
}

void Tensor.sum(alongAxes:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  const char **v2;
  const char *v4;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)(_QWORD, _QWORD);
  const char *v16;
  uint64_t v17;
  const char *v18;
  __int128 v19;
  __int128 v20;
  const char *v21;
  uint64_t v22;
  __int16 v23;

  v4 = *v2;
  if (*(_QWORD *)(a1 + 16))
  {
    v16 = *(const char **)(*((_QWORD *)v4 + 2) + 152);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_25_31((uint64_t *)&v16, a1, (uint64_t *)&v18);
    OUTLINED_FUNCTION_136();
    v6 = v18;
    if (v18)
    {
      v7 = *((_QWORD *)v4 + 2);
      v18 = v4;
      Tensor.scalarType.getter();
      v9 = v8;
      v11 = v10;
      v12 = *(void (**)(uint64_t, uint64_t))(v10 + 32);
      swift_retain();
      OUTLINED_FUNCTION_44_0();
      v12(v9, v11);
      v16 = v6;
      v13 = *(_QWORD *)(v7 + 152);
      *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v13;
      OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_102_4((uint64_t)sub_242B74E0C);
      OUTLINED_FUNCTION_39_24();
      v18 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ReductionOps.swift";
      v19 = xmmword_242C4D6C0;
      v20 = xmmword_242C586B0;
      v21 = "init(id:operator:operand:axes:keepingDimensions:resultDescriptor:creationSite:backward:)";
      v22 = 88;
      v23 = 2;
      OUTLINED_FUNCTION_35_22();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_26_35(0, 0, 0, 4, v7, a1, v14, (uint64_t)&v16, (uint64_t)&v18, v13, (uint64_t)&v17);
      v15 = (uint64_t (**)(_QWORD, _QWORD))OUTLINED_FUNCTION_86_7();
      sub_242A66290(*((_QWORD *)v4 + 2) + 168, (uint64_t)&v16);
      sub_242BC9830(v13, v15, 0, (uint64_t)&v16, a2);
      OUTLINED_FUNCTION_54_13();
    }
    else
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_4_51();
      __break(1u);
    }
  }
  else
  {
    *a2 = (uint64_t)v4;
    OUTLINED_FUNCTION_33_22();
  }
}

Swift::Bool __swiftcall Tensor.all()()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  return all(_:)(&v2) & 1;
}

Swift::Bool __swiftcall Tensor.any()()
{
  uint64_t v0;
  Swift::Bool result;

  OUTLINED_FUNCTION_17_33(*(_QWORD *)(*(_QWORD *)v0 + 16));
  OUTLINED_FUNCTION_88_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_117_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_30_5();
  return result;
}

void Tensor.sum(squeezingAxes:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[9];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[56];
  uint64_t v58[7];
  uint64_t v59;
  __int128 v60;
  __int128 v61;

  OUTLINED_FUNCTION_46_20();
  if (v4)
  {
    v5 = v3;
    OUTLINED_FUNCTION_120_6();
    v59 = v0;
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_25_31(&v59, v5, v47);
    OUTLINED_FUNCTION_136();
    v6 = v47[0];
    if (v47[0])
    {
      v7 = *(_QWORD *)(v1 + 16);
      v47[0] = v1;
      OUTLINED_FUNCTION_121_3();
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_61_14();
      v47[0] = v6;
      v8 = *(_QWORD *)(v7 + 152);
      *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v8;
      OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_102_4((uint64_t)sub_242B74D34);
      OUTLINED_FUNCTION_39_24();
      v60 = xmmword_242C4D6C0;
      v61 = xmmword_242C586B0;
      OUTLINED_FUNCTION_21_31((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyC"
                                       "ore/Operations/ReductionOps.swift");
      OUTLINED_FUNCTION_2_0();
      v9 = OUTLINED_FUNCTION_74_10();
      OUTLINED_FUNCTION_26_35(v9, v10, v11, 4, v7, v5, v12, v13, v42, v8, v2 + 8);
      OUTLINED_FUNCTION_120_6();
      v58[0] = v8;
      OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_31_34(v58, v47);
      OUTLINED_FUNCTION_136();
      v14 = v47[0];
      OUTLINED_FUNCTION_115_7(*(_QWORD *)(v1 + 16));
      OUTLINED_FUNCTION_103_5((uint64_t)v58, v15, v16, v17, v18, v19, v20, v21, v43, v44, v45, v46, v47[0], v47[1], v47[2], v47[3], v47[4], v47[5], v47[6],
        v47[7],
        v47[8],
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57[0]);
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_5();
      v22 = OUTLINED_FUNCTION_320();
      OUTLINED_FUNCTION_15_34((uint64_t)v22, v23, v24, v25);
      OUTLINED_FUNCTION_135();
      v26 = OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_48_23(v26, v27, v28, v29);
      v30 = OUTLINED_FUNCTION_320();
      OUTLINED_FUNCTION_15_34((uint64_t)v30, v31, v32, v33);
      OUTLINED_FUNCTION_135();
      v34 = v48;
      v35 = OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_48_23(v35, v36, v37, v38);
      OUTLINED_FUNCTION_165_2();
      v39 = OUTLINED_FUNCTION_2_0();
      LOBYTE(v47[0]) = 1;
      OUTLINED_FUNCTION_13_42(v39, v40, (uint64_t)v57, 0x100000000);
      OUTLINED_FUNCTION_47_20();
      v41 = OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v41 + 16) = v34;
      OUTLINED_FUNCTION_91();
      sub_242BC995C();
      OUTLINED_FUNCTION_135();
      sub_242A662D8((uint64_t)v58);
      v47[0] = v41;
      v58[0] = v14;
      OUTLINED_FUNCTION_65_15(v58);
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_55_14();
    }
    else
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_4_51();
      __break(1u);
    }
  }
  else
  {
    OUTLINED_FUNCTION_95_6();
    OUTLINED_FUNCTION_34_26();
  }
}

{
  OUTLINED_FUNCTION_76_8();
  Tensor.sum(squeezingAxes:)();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242B7250C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  uint64_t v10;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v4 = *(_QWORD *)(result + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v5 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v5 + 16) = xmmword_242C4B7D0;
      v9[0] = a3;
      v9[1] = v4;
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_6();
      Tensor.broadcasted(to:)(v9, &v10);
      v6 = v10;
      swift_retain();
      v7 = sub_242AC4964();
      *(_QWORD *)(v5 + 32) = v6;
      *(_QWORD *)(v5 + 40) = v7;
      *(_QWORD *)(v5 + 48) = v8;
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_8_1();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void Tensor.sum(alongAxes:)()
{
  uint64_t v0;
  uint64_t *v1;

  OUTLINED_FUNCTION_76_8();
  Tensor.sum(alongAxes:)(v0, v1);
  OUTLINED_FUNCTION_30_5();
}

#error "242B72764: call analysis failed (funcsize=167)"

uint64_t sub_242B72898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14[7];
  _QWORD v15[6];
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_5;
  v6 = *(_QWORD *)(a1 + 32);
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(inited + 32) = a3;
  sub_242A66290((uint64_t)v15, (uint64_t)v14);
  swift_retain();
  swift_retain();
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v15);
  v15[0] = v6;
  v13 = a4;
  Tensor.broadcasted(to:)(&v13, v14);
  v13 = v14[0];
  static Tensor./ infix(_:_:)();
  swift_release();
  v8 = v15[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B7D0;
  swift_retain();
  swift_retain();
  v10 = sub_242AC4964();
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v9 + 40) = v10;
  *(_QWORD *)(v9 + 48) = v11;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v9;
}

uint64_t Tensor.mean(alongAxes:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[6];
  const char *v32;
  __int128 v33;
  __int128 v34;
  const char *v35;
  uint64_t v36;
  __int16 v37;

  OUTLINED_FUNCTION_46_20();
  if (!v3)
  {
    OUTLINED_FUNCTION_95_6();
    return swift_retain();
  }
  v4 = v2;
  OUTLINED_FUNCTION_120_6();
  v30 = v0;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_25_31(&v30, v4, (uint64_t *)&v32);
  OUTLINED_FUNCTION_136();
  v5 = v32;
  if (!v32)
    goto LABEL_12;
  OUTLINED_FUNCTION_11();
  v6 = sub_242B71E50(v4, v1);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v6 + 32);
    v9 = 1;
    while (1)
    {
      v10 = *v8++;
      v11 = v9 * v10;
      if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63)
        break;
      v9 = v11;
      if (!--v7)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_24_0();
    result = OUTLINED_FUNCTION_4_51();
    __break(1u);
    return result;
  }
  v11 = 1;
LABEL_10:
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_80_10();
  v15 = v14;
  v17 = v16;
  v18 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 32);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_37_0();
  v18(v31, v15, v17);
  v30 = (uint64_t)v5;
  v19 = *(_QWORD *)(v13 + 152);
  v20 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v20 + 16) = v11;
  *(_QWORD *)(v20 + 24) = v19;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_102_4((uint64_t)sub_242B74D78);
  OUTLINED_FUNCTION_39_24();
  v32 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ReductionOps.swift";
  v33 = xmmword_242C4D6C0;
  v34 = xmmword_242C586B0;
  v35 = "init(id:operator:operand:axes:keepingDimensions:resultDescriptor:creationSite:backward:)";
  v36 = 88;
  v37 = 2;
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_2_0();
  v21 = OUTLINED_FUNCTION_74_10();
  OUTLINED_FUNCTION_26_35(v21, v22, v23, 2, v13, v4, v24, v25, v29, v19, (uint64_t)v31);
  OUTLINED_FUNCTION_86_7();
  v26 = sub_242A66290(*(_QWORD *)(v1 + 16) + 168, (uint64_t)&v30);
  return OUTLINED_FUNCTION_18_35(v26, v27, v28, (uint64_t)&v30);
}

uint64_t sub_242B72C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  float v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[7];
  uint64_t v14[7];
  _QWORD v15[6];
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_5;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = (float)a3;
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_242A66290((uint64_t)v15, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(float *)(inited + 32) = v6;
  sub_242A66290((uint64_t)v14, (uint64_t)v13);
  swift_retain();
  swift_retain();
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v14);
  sub_242A662D8((uint64_t)v15);
  v15[0] = v5;
  v13[0] = a4;
  Tensor.broadcasted(to:)(v13, v14);
  v13[0] = v14[0];
  static Tensor./ infix(_:_:)();
  swift_release();
  v8 = v15[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B7D0;
  swift_retain();
  swift_retain();
  v10 = sub_242AC4964();
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v9 + 40) = v10;
  *(_QWORD *)(v9 + 48) = v11;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v9;
}

void Tensor.mean(alongAxes:)()
{
  OUTLINED_FUNCTION_76_8();
  Tensor.mean(alongAxes:)();
  OUTLINED_FUNCTION_30_5();
}

void Tensor.product(squeezingAxes:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[9];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[56];
  uint64_t v64[7];
  uint64_t v65;
  __int128 v66;
  __int128 v67;

  v3 = *v2;
  if (*(_QWORD *)(a1 + 16))
  {
    v65 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 152);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_25_31(&v65, a1, v53);
    OUTLINED_FUNCTION_136();
    v5 = v53[0];
    if (v53[0])
    {
      v6 = *(_QWORD *)(v3 + 16);
      v53[0] = v3;
      OUTLINED_FUNCTION_121_3();
      v8 = v7;
      v10 = v9;
      v11 = *(void (**)(uint64_t, uint64_t))(v9 + 32);
      OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_44_0();
      v11(v8, v10);
      v53[0] = v5;
      v12 = sub_242BD0D40((uint64_t)sub_242B730AC);
      v14 = v13;
      v66 = xmmword_242C4D6C0;
      v67 = xmmword_242C586B0;
      OUTLINED_FUNCTION_21_31((uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyC"
                                       "ore/Operations/ReductionOps.swift");
      OUTLINED_FUNCTION_2_0();
      v15 = OUTLINED_FUNCTION_74_10();
      OUTLINED_FUNCTION_26_35(v15, v16, v17, 3, v6, a1, v18, v19, v48, v12, v14);
      v64[0] = *(_QWORD *)(v6 + 152);
      OUTLINED_FUNCTION_0_2();
      sub_242C35CC8(v64, a1, 0, v53);
      OUTLINED_FUNCTION_136();
      v20 = v53[0];
      OUTLINED_FUNCTION_115_7(*(_QWORD *)(v3 + 16));
      OUTLINED_FUNCTION_103_5((uint64_t)v64, v21, v22, v23, v24, v25, v26, v27, v49, v50, v51, v52, v53[0], v53[1], v53[2], v53[3], v53[4], v53[5], v53[6],
        v53[7],
        v53[8],
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63[0]);
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_5();
      v28 = OUTLINED_FUNCTION_68_11();
      OUTLINED_FUNCTION_15_34((uint64_t)v28, v29, v30, v31);
      OUTLINED_FUNCTION_135();
      v32 = OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_48_23(v32, v33, v34, v35);
      v36 = OUTLINED_FUNCTION_68_11();
      OUTLINED_FUNCTION_15_34((uint64_t)v36, v37, v38, v39);
      OUTLINED_FUNCTION_135();
      v40 = v54;
      v41 = OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_48_23(v41, v42, v43, v44);
      OUTLINED_FUNCTION_165_2();
      v45 = OUTLINED_FUNCTION_2_0();
      LOBYTE(v53[0]) = 1;
      OUTLINED_FUNCTION_13_42(v45, v46, (uint64_t)v63, 0x100000000);
      OUTLINED_FUNCTION_47_20();
      v47 = OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v47 + 16) = v40;
      OUTLINED_FUNCTION_91();
      sub_242BC995C();
      OUTLINED_FUNCTION_135();
      sub_242A662D8((uint64_t)v64);
      v53[0] = v47;
      v64[0] = v20;
      OUTLINED_FUNCTION_65_15(v64);
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_55_14();
    }
    else
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_4_51();
      __break(1u);
    }
  }
  else
  {
    *a2 = v3;
    OUTLINED_FUNCTION_34_26();
  }
}

void sub_242B730AC()
{
  sub_242A59170();
}

void Tensor.product(squeezingAxes:)()
{
  uint64_t v0;
  uint64_t *v1;

  OUTLINED_FUNCTION_76_8();
  Tensor.product(squeezingAxes:)(v0, v1);
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.product()()
{
  return sub_242B73128((uint64_t)&unk_25137D458, (uint64_t)&unk_25137D480);
}

uint64_t sub_242B73128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_45_19(a1, a2);
  OUTLINED_FUNCTION_109_5();
  Tensor.mean(squeezingAxes:)(v2);
  return OUTLINED_FUNCTION_9_46();
}

void Tensor.product(alongAxes:)(uint64_t a1@<X0>, const char **a2@<X8>)
{
  const char **v2;
  const char *v3;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  _QWORD v20[6];
  const char *v21;
  __int128 v22;
  __int128 v23;
  const char *v24;
  uint64_t v25;
  __int16 v26;

  v3 = *v2;
  if (*(_QWORD *)(a1 + 16))
  {
    v19 = *(const char **)(*((_QWORD *)v3 + 2) + 152);
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_25_31((uint64_t *)&v19, a1, (uint64_t *)&v21);
    OUTLINED_FUNCTION_3_6();
    v5 = v21;
    if (v21)
    {
      v6 = *((_QWORD *)v3 + 2);
      v21 = v3;
      Tensor.scalarType.getter();
      v8 = v7;
      v10 = v9;
      v11 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 32);
      OUTLINED_FUNCTION_11();
      OUTLINED_FUNCTION_74();
      v11(v20, v8, v10);
      v19 = v5;
      v12 = sub_242BD0D40((uint64_t)sub_242B732EC);
      v14 = v13;
      v21 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ReductionOps.swift";
      v22 = xmmword_242C4D6C0;
      v23 = xmmword_242C586B0;
      v24 = "init(id:operator:operand:axes:keepingDimensions:resultDescriptor:creationSite:backward:)";
      v25 = 88;
      v26 = 2;
      OUTLINED_FUNCTION_35_22();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_26_35(0, 0, 0, 3, v6, a1, v15, (uint64_t)&v19, (uint64_t)&v21, v12, v14);
      OUTLINED_FUNCTION_86_7();
      v16 = sub_242A66290(v6 + 168, (uint64_t)&v19);
      OUTLINED_FUNCTION_18_35(v16, v17, v18, (uint64_t)&v19);
      OUTLINED_FUNCTION_54_13();
    }
    else
    {
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_4_51();
      __break(1u);
    }
  }
  else
  {
    *a2 = v3;
    OUTLINED_FUNCTION_33_22();
  }
}

void sub_242B732EC()
{
  sub_242A59170();
}

void Tensor.product(alongAxes:)()
{
  uint64_t v0;
  const char **v1;

  OUTLINED_FUNCTION_76_8();
  Tensor.product(alongAxes:)(v0, v1);
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.variance(squeezingAxes:)(uint64_t a1)
{
  return sub_242B73404(a1, (void (*)(uint64_t))Tensor.mean(squeezingAxes:));
}

void Tensor.variance(squeezingAxes:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_76_8();
  Tensor.variance(squeezingAxes:)(v0);
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.variance()()
{
  OUTLINED_FUNCTION_89_6();
  Tensor.mean()();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_87_8();
  OUTLINED_FUNCTION_17_1();
  Tensor.mean()();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_9_46();
}

uint64_t Tensor.variance(alongAxes:)(uint64_t a1)
{
  return sub_242B73404(a1, (void (*)(uint64_t))Tensor.mean(alongAxes:));
}

uint64_t sub_242B73404(uint64_t a1, void (*a2)(uint64_t))
{
  Tensor.mean(alongAxes:)();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_87_8();
  OUTLINED_FUNCTION_17_5();
  a2(a1);
  return swift_release();
}

void Tensor.variance(alongAxes:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_76_8();
  Tensor.variance(alongAxes:)(v0);
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.standardDeviation(squeezingAxes:)()
{
  return sub_242B7354C();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_92_6();
  Tensor.variance(squeezingAxes:)(v0);
  OUTLINED_FUNCTION_43_24();
  return OUTLINED_FUNCTION_78_7();
}

uint64_t Tensor.standardDeviation()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_17_33(*(_QWORD *)(*(_QWORD *)v0 + 16));
  Tensor.variance(squeezingAxes:)(v1);
  OUTLINED_FUNCTION_43_24();
  OUTLINED_FUNCTION_28_5();
  return OUTLINED_FUNCTION_19_31();
}

uint64_t Tensor.standardDeviation(alongAxes:)()
{
  return sub_242B7354C();
}

{
  return sub_242B7354C();
}

uint64_t sub_242B7354C()
{
  void (*v0)(void);

  OUTLINED_FUNCTION_92_6();
  v0();
  OUTLINED_FUNCTION_43_24();
  return OUTLINED_FUNCTION_78_7();
}

uint64_t Moments.mean.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_21_25(*v1, a1);
}

uint64_t Moments.mean.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_release();
  *v1 = v2;
  return result;
}

uint64_t (*Moments.mean.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Moments.variance.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_21_25(*(_QWORD *)(v1 + 8), a1);
}

uint64_t Moments.variance.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_release();
  *(_QWORD *)(v1 + 8) = v2;
  return result;
}

uint64_t (*Moments.variance.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Moments.tensors.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v3 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v3 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_91();
  return v3;
}

_QWORD *Moments.init(mean:variance:)@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

void Tensor.moments(squeezingAxes:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;

  Tensor.mean(alongAxes:)();
  OUTLINED_FUNCTION_90_6();
  OUTLINED_FUNCTION_87_8();
  OUTLINED_FUNCTION_17_5();
  Tensor.mean(squeezingAxes:)(a1);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_89_6();
  Tensor.sum(squeezingAxes:)();
  OUTLINED_FUNCTION_17_1();
  *a2 = v4;
  a2[1] = v4;
  OUTLINED_FUNCTION_18();
}

void Tensor.moments(squeezingAxes:)()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_76_8();
  Tensor.moments(squeezingAxes:)(v0, v1);
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.moments()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_33(*(_QWORD *)(*(_QWORD *)v1 + 16));
  Tensor.moments(squeezingAxes:)(v3, a1);
  return OUTLINED_FUNCTION_19_31();
}

void Tensor.moments(alongAxes:)(_QWORD *a1@<X8>)
{
  uint64_t v2;

  OUTLINED_FUNCTION_89_6();
  Tensor.mean(alongAxes:)();
  OUTLINED_FUNCTION_90_6();
  OUTLINED_FUNCTION_87_8();
  OUTLINED_FUNCTION_17_1();
  Tensor.mean(alongAxes:)();
  OUTLINED_FUNCTION_17_1();
  *a1 = v2;
  a1[1] = v2;
  OUTLINED_FUNCTION_18();
}

void Tensor.moments(alongAxes:)()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_76_8();
  Tensor.moments(alongAxes:)(v0);
  OUTLINED_FUNCTION_30_5();
}

uint64_t Tensor.min()()
{
  return sub_242B73A50((void (*)(void))&Tensor.min(squeezingAxes:));
}

#error "242B73928: call analysis failed (funcsize=136)"

uint64_t Tensor.max()()
{
  return sub_242B73A50((void (*)(void))Tensor.max(squeezingAxes:));
}

uint64_t sub_242B73A50(void (*a1)(void))
{
  uint64_t v1;

  OUTLINED_FUNCTION_17_33(*(_QWORD *)(*(_QWORD *)v1 + 16));
  a1();
  return OUTLINED_FUNCTION_19_31();
}

#error "242B73BBC: call analysis failed (funcsize=136)"

uint64_t sub_242B73CD8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void Tensor.max(alongAxes:)()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[7];
  const char *v31;
  __int128 v32;
  __int128 v33;
  const char *v34;
  uint64_t v35;
  __int16 v36;

  OUTLINED_FUNCTION_46_20();
  if (v3)
  {
    OUTLINED_FUNCTION_113_6();
    OUTLINED_FUNCTION_111_4();
    v28 = v4;
    v10 = OUTLINED_FUNCTION_5_54(v5, v6, v7, v8, v9);
    v30[0] = *(_QWORD *)(v0 + 152);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_25_31(v30, v10, (uint64_t *)&v31);
    OUTLINED_FUNCTION_136();
    v11 = v31;
    if (!v31)
    {
      OUTLINED_FUNCTION_28_33();
      OUTLINED_FUNCTION_14_30();
      sub_242A59264();
    }
    v12 = *(_QWORD *)(v1 + 16);
    OUTLINED_FUNCTION_80_10();
    OUTLINED_FUNCTION_76_11();
    OUTLINED_FUNCTION_61_14();
    v30[0] = (uint64_t)v11;
    v13 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v1;
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_98_7((uint64_t)sub_242B74E18);
    OUTLINED_FUNCTION_135();
    v31 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ReductionOps.swift";
    v32 = xmmword_242C4D6C0;
    v33 = xmmword_242C586B0;
    v34 = "init(id:operator:operand:axes:keepingDimensions:resultDescriptor:creationSite:backward:)";
    v35 = 88;
    v36 = v2;
    OUTLINED_FUNCTION_35_22();
    OUTLINED_FUNCTION_2_0();
    v14 = OUTLINED_FUNCTION_64_15();
    OUTLINED_FUNCTION_97_6(v14, v15, v16, 0, v12, v10, v17, v18, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/Reduction.swift", v28, v29);
    v19 = OUTLINED_FUNCTION_86_7();
    v25 = OUTLINED_FUNCTION_85_8(v19, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_18_35(v25, v26, v27, (uint64_t)v30);
    OUTLINED_FUNCTION_6_12();
  }
  else
  {
    OUTLINED_FUNCTION_95_6();
    OUTLINED_FUNCTION_38_22();
  }
}

{
  OUTLINED_FUNCTION_76_8();
  Tensor.max(alongAxes:)();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242B73E64(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = sub_242C49208();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v12 = *a3;
  v19 = *v3;
  v13 = v19;
  v20 = v11;
  static Tensor..== infix(_:_:)();
  LOBYTE(v19) = *(_BYTE *)(*(_QWORD *)(v13 + 16) + 160);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE38B8], v7);
  Tensor.cast(to:roundingRule:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  v14 = v20;
  v19 = v20;
  Tensor.sum(alongAxes:)(a1, &v20);
  v15 = v20;
  v20 = v12;
  v18 = *(_QWORD *)(*(_QWORD *)(v13 + 16) + 152);
  Tensor.broadcasted(to:)(&v18, &v19);
  v17 = v14;
  v18 = v19;
  static Tensor.* infix(_:_:)();
  swift_release();
  v18 = v15;
  v19 = v20;
  static Tensor./ infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

void Tensor.min(alongAxes:)()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[7];
  const char *v31;
  __int128 v32;
  __int128 v33;
  const char *v34;
  uint64_t v35;
  __int16 v36;

  OUTLINED_FUNCTION_46_20();
  if (v3)
  {
    OUTLINED_FUNCTION_113_6();
    OUTLINED_FUNCTION_111_4();
    v28 = v4;
    v10 = OUTLINED_FUNCTION_5_54(v5, v6, v7, v8, v9);
    v30[0] = *(_QWORD *)(v0 + 152);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_25_31(v30, v10, (uint64_t *)&v31);
    OUTLINED_FUNCTION_136();
    v11 = v31;
    if (!v31)
    {
      OUTLINED_FUNCTION_28_33();
      OUTLINED_FUNCTION_14_30();
      sub_242A59264();
    }
    v12 = *(_QWORD *)(v1 + 16);
    OUTLINED_FUNCTION_80_10();
    OUTLINED_FUNCTION_76_11();
    OUTLINED_FUNCTION_61_14();
    v30[0] = (uint64_t)v11;
    v13 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v1;
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_98_7((uint64_t)sub_242B74E1C);
    OUTLINED_FUNCTION_135();
    v31 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ReductionOps.swift";
    v32 = xmmword_242C4D6C0;
    v33 = xmmword_242C586B0;
    v34 = "init(id:operator:operand:axes:keepingDimensions:resultDescriptor:creationSite:backward:)";
    v35 = 88;
    v36 = v2;
    OUTLINED_FUNCTION_35_22();
    OUTLINED_FUNCTION_2_0();
    v14 = OUTLINED_FUNCTION_64_15();
    OUTLINED_FUNCTION_97_6(v14, v15, v16, 1, v12, v10, v17, v18, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/Reduction.swift", v28, v29);
    v19 = OUTLINED_FUNCTION_86_7();
    v25 = OUTLINED_FUNCTION_85_8(v19, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_18_35(v25, v26, v27, (uint64_t)v30);
    OUTLINED_FUNCTION_6_12();
  }
  else
  {
    OUTLINED_FUNCTION_95_6();
    OUTLINED_FUNCTION_38_22();
  }
}

{
  OUTLINED_FUNCTION_76_8();
  Tensor.min(alongAxes:)();
  OUTLINED_FUNCTION_30_5();
}

void Tensor.min(squeezingAxes:)()
{
  OUTLINED_FUNCTION_76_8();
  Tensor.min(squeezingAxes:)();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242B74194(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[2];
  uint64_t v15;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = *(_QWORD *)(result + 32);
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_6();
      a5(&v15, a3);
      v14[0] = v15;
      v14[1] = a4;
      v13 = v8;
      sub_242B73E64(a3, v14, &v13);
      v9 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v10 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v10 + 16) = xmmword_242C4B7D0;
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_11_6();
      v11 = sub_242AC4964();
      *(_QWORD *)(v10 + 32) = v9;
      *(_QWORD *)(v10 + 40) = v11;
      *(_QWORD *)(v10 + 48) = v12;
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_135();
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void Tensor.argmax(squeezingAxis:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[17];
  uint64_t v97[8];

  OUTLINED_FUNCTION_69_11();
  if (v4 ^ v5 | v3)
    v6 = v2 <= v1;
  else
    v6 = 1;
  if (v6)
    goto LABEL_9;
  v7 = (v2 & (v1 >> 63)) + v1;
  v97[0] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v8 = OUTLINED_FUNCTION_122_6();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v8 + 32) = v7;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_25_31(v97, v8, &v71);
  swift_setDeallocating();
  OUTLINED_FUNCTION_136();
  if (!v71)
  {
    OUTLINED_FUNCTION_24_33();
    OUTLINED_FUNCTION_14_30();
LABEL_11:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_114_5();
  *(_OWORD *)(v9 + 8) = xmmword_242C4D6C0;
  *(_OWORD *)(v9 + 24) = xmmword_242C586C0;
  OUTLINED_FUNCTION_52_12(v10);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_11_6();
  v11 = OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_100_6(v11, v12, v13, 0, v14, v15, v16, v17);
  v18 = OUTLINED_FUNCTION_73_12();
  *(_OWORD *)(v18 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v18 + 32) = v7;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_31_34(v96, &v71);
  swift_setDeallocating();
  v19 = OUTLINED_FUNCTION_136();
  v27 = v71;
  if (!v71)
  {
    __break(1u);
LABEL_9:
    OUTLINED_FUNCTION_51_22();
    OUTLINED_FUNCTION_47_22();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_94_6(v19, v20, v21, v22, v23, v24, v25, v26, v61, v64, 1, 2, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96[0]);
  OUTLINED_FUNCTION_103_5((uint64_t)v96, v28, v29, v30, v31, v32, v33, v34, v62, v65, v67, v69, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_5();
  v35 = OUTLINED_FUNCTION_68_11();
  OUTLINED_FUNCTION_15_34((uint64_t)v35, v36, v37, v38);
  OUTLINED_FUNCTION_135();
  v39 = OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_48_23(v39, v40, v41, v42);
  v43 = OUTLINED_FUNCTION_68_11();
  OUTLINED_FUNCTION_15_34((uint64_t)v43, v44, v45, v46);
  OUTLINED_FUNCTION_135();
  v47 = v80;
  v48 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_48_23(v48, v49, v50, v51);
  OUTLINED_FUNCTION_165_2();
  v52 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_37_24(v52, v53, v54, v55, v56, v57, v58, v59, v63, v66, v68, v70, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  OUTLINED_FUNCTION_47_20();
  v60 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v60 + 16) = v47;
  OUTLINED_FUNCTION_91();
  sub_242BC995C();
  OUTLINED_FUNCTION_135();
  sub_242A662D8((uint64_t)v96);
  v71 = v60;
  v96[0] = v27;
  OUTLINED_FUNCTION_65_15(v96);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_13_11();
}

void Tensor.argmin(squeezingAxis:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[17];
  uint64_t v97[8];

  OUTLINED_FUNCTION_69_11();
  if (v4 ^ v5 | v3)
    v6 = v2 <= v1;
  else
    v6 = 1;
  if (v6)
    goto LABEL_9;
  v7 = (v2 & (v1 >> 63)) + v1;
  v97[0] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v8 = OUTLINED_FUNCTION_122_6();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v8 + 32) = v7;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_25_31(v97, v8, &v71);
  swift_setDeallocating();
  OUTLINED_FUNCTION_136();
  if (!v71)
  {
    OUTLINED_FUNCTION_24_33();
    OUTLINED_FUNCTION_14_30();
LABEL_11:
    sub_242A59264();
  }
  OUTLINED_FUNCTION_114_5();
  *(_OWORD *)(v9 + 8) = xmmword_242C4D6C0;
  *(_OWORD *)(v9 + 24) = xmmword_242C586C0;
  OUTLINED_FUNCTION_52_12(v10);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_11_6();
  v11 = OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_100_6(v11, v12, v13, 1, v14, v15, v16, v17);
  v18 = OUTLINED_FUNCTION_73_12();
  *(_OWORD *)(v18 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v18 + 32) = v7;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_31_34(v96, &v71);
  swift_setDeallocating();
  v19 = OUTLINED_FUNCTION_136();
  v27 = v71;
  if (!v71)
  {
    __break(1u);
LABEL_9:
    OUTLINED_FUNCTION_51_22();
    OUTLINED_FUNCTION_47_22();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_94_6(v19, v20, v21, v22, v23, v24, v25, v26, v61, v64, 1, 2, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96[0]);
  OUTLINED_FUNCTION_103_5((uint64_t)v96, v28, v29, v30, v31, v32, v33, v34, v62, v65, v67, v69, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_5();
  v35 = OUTLINED_FUNCTION_68_11();
  OUTLINED_FUNCTION_15_34((uint64_t)v35, v36, v37, v38);
  OUTLINED_FUNCTION_135();
  v39 = OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_48_23(v39, v40, v41, v42);
  v43 = OUTLINED_FUNCTION_68_11();
  OUTLINED_FUNCTION_15_34((uint64_t)v43, v44, v45, v46);
  OUTLINED_FUNCTION_135();
  v47 = v80;
  v48 = OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_48_23(v48, v49, v50, v51);
  OUTLINED_FUNCTION_165_2();
  v52 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_37_24(v52, v53, v54, v55, v56, v57, v58, v59, v63, v66, v68, v70, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  OUTLINED_FUNCTION_47_20();
  v60 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v60 + 16) = v47;
  OUTLINED_FUNCTION_91();
  sub_242BC995C();
  OUTLINED_FUNCTION_135();
  sub_242A662D8((uint64_t)v96);
  v71 = v60;
  v96[0] = v27;
  OUTLINED_FUNCTION_65_15(v96);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_13_11();
}

uint64_t Tensor.argmax()()
{
  return sub_242B746DC((uint64_t)&unk_25137D4A8, (uint64_t)Tensor.argmax(squeezingAxis:));
}

uint64_t Tensor.argmin()()
{
  return sub_242B746DC((uint64_t)&unk_25137D4D0, (uint64_t)Tensor.argmin(squeezingAxis:));
}

uint64_t sub_242B746DC(uint64_t a1, uint64_t a2)
{
  void (*v2)(_QWORD);

  OUTLINED_FUNCTION_45_19(a1, a2);
  OUTLINED_FUNCTION_109_5();
  v2(0);
  return OUTLINED_FUNCTION_9_46();
}

uint64_t all(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = *a1;
  v2 = *(_QWORD *)(*a1 + 16);
  v3 = sub_242C37658(0, *(_QWORD *)(*(_QWORD *)(v2 + 152) + 16));
  if (*(_BYTE *)(v2 + 160) != 12)
  {
    OUTLINED_FUNCTION_42_22();
    OUTLINED_FUNCTION_3_54();
    OUTLINED_FUNCTION_53_13();
  }
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  OUTLINED_FUNCTION_6();
  if (v5)
    sub_242B930E8(v1, v4);
  else
    OUTLINED_FUNCTION_135();
  v6 = sub_242B6E4A8();
  OUTLINED_FUNCTION_8_1();
  return v6 & 1;
}

void Tensor.all(squeezingAxes:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_32();
  if (!v0)
  {
    OUTLINED_FUNCTION_42_22();
    OUTLINED_FUNCTION_3_54();
    OUTLINED_FUNCTION_53_13();
  }
  OUTLINED_FUNCTION_107_4();
  if (v1)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_28_1();
    v2 = OUTLINED_FUNCTION_41_27();
    sub_242B930E8(v2, v3);
    OUTLINED_FUNCTION_40_24();
  }
  else
  {
    OUTLINED_FUNCTION_119_6();
    OUTLINED_FUNCTION_10_37();
  }
}

{
  OUTLINED_FUNCTION_76_8();
  Tensor.all(squeezingAxes:)();
  OUTLINED_FUNCTION_30_5();
}

void any(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_17_33(*(_QWORD *)(*(_QWORD *)a1 + 16));
  OUTLINED_FUNCTION_88_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_117_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_30_5();
}

void Tensor.any(squeezingAxes:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_32();
  if (!v0)
  {
    OUTLINED_FUNCTION_42_22();
    OUTLINED_FUNCTION_3_54();
    OUTLINED_FUNCTION_14_30();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_107_4();
  if (v1)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_28_1();
    v2 = OUTLINED_FUNCTION_41_27();
    sub_242B93104(v2, v3);
    OUTLINED_FUNCTION_40_24();
  }
  else
  {
    OUTLINED_FUNCTION_119_6();
    OUTLINED_FUNCTION_10_37();
  }
}

{
  OUTLINED_FUNCTION_76_8();
  Tensor.any(squeezingAxes:)();
  OUTLINED_FUNCTION_30_5();
}

void sub_242B748DC(uint64_t a1, uint64_t a2)
{
  sub_242B74944(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD))Tensor.product(squeezingAxes:));
}

void sub_242B74920(uint64_t a1, uint64_t a2)
{
  sub_242B74944(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD))Tensor.sum(squeezingAxes:));
}

void sub_242B74944(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[6];
  char v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[3];
  int v13;
  uint64_t v14;

  OUTLINED_FUNCTION_83_9();
  OUTLINED_FUNCTION_116_6();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_31();
  v8[0] = v3;
  LOBYTE(v14) = 2;
  OUTLINED_FUNCTION_96_6(v7, *MEMORY[0x24BEE38B8]);
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_93_7();
  v8[0] = *(_QWORD *)&v12[0];
  a3(&v14, v4);
  swift_release();
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  v10 = MEMORY[0x24BEE4AF8];
  v9 = 2;
  sub_242A66290((uint64_t)v12, (uint64_t)v8);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v12);
  *(_QWORD *)&v12[0] = v11;
  static Tensor..> infix(_:_:)();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_0_9();
}

void Tensor.all(alongAxes:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_32();
  if (!v0)
  {
    OUTLINED_FUNCTION_42_22();
    OUTLINED_FUNCTION_3_54();
    OUTLINED_FUNCTION_14_30();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_107_4();
  if (v1)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_28_1();
    v2 = OUTLINED_FUNCTION_41_27();
    sub_242B931DC(v2, v3);
    OUTLINED_FUNCTION_40_24();
  }
  else
  {
    OUTLINED_FUNCTION_119_6();
    OUTLINED_FUNCTION_10_37();
  }
}

{
  OUTLINED_FUNCTION_76_8();
  Tensor.all(alongAxes:)();
  OUTLINED_FUNCTION_30_5();
}

void sub_242B74AF4(uint64_t a1, uint64_t a2)
{
  sub_242B74BD4(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))Tensor.product(alongAxes:), (uint64_t)&unk_25137D4F8);
}

void Tensor.any(alongAxes:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_32();
  if (!v0)
  {
    OUTLINED_FUNCTION_42_22();
    OUTLINED_FUNCTION_3_54();
    OUTLINED_FUNCTION_14_30();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_107_4();
  if (v1)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_28_1();
    v2 = OUTLINED_FUNCTION_41_27();
    sub_242B931F8(v2, v3);
    OUTLINED_FUNCTION_40_24();
  }
  else
  {
    OUTLINED_FUNCTION_119_6();
    OUTLINED_FUNCTION_10_37();
  }
}

{
  OUTLINED_FUNCTION_76_8();
  Tensor.any(alongAxes:)();
  OUTLINED_FUNCTION_30_5();
}

void sub_242B74BB0(uint64_t a1, uint64_t a2)
{
  sub_242B74BD4(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))Tensor.sum(squeezingAxes:), (uint64_t)&unk_25137D520);
}

void sub_242B74BD4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[3];
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_83_9();
  OUTLINED_FUNCTION_116_6();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_31();
  v14 = v4;
  LOBYTE(v13) = 2;
  OUTLINED_FUNCTION_96_6(v9, *MEMORY[0x24BEE38B8]);
  Tensor.cast(to:roundingRule:)();
  OUTLINED_FUNCTION_93_7();
  a3(&v14, v5);
  swift_release();
  v13 = v14;
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  sub_242A8E108(MEMORY[0x24BEE4AF8], a4, (uint64_t)v10, &v12);
  *(_QWORD *)&v10[0] = v12;
  static Tensor..> infix(_:_:)();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_0_9();
}

unint64_t sub_242B74CF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257223198;
  if (!qword_257223198)
  {
    v1 = type metadata accessor for ReductionOperation();
    result = MEMORY[0x2494EDE24](&unk_242C5EBC4, v1);
    atomic_store(result, (unint64_t *)&qword_257223198);
  }
  return result;
}

uint64_t sub_242B74D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B7250C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242B74D4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242B74D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B72898(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_242B74D78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B72C70(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_242B74D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B74194(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t))Tensor.min(alongAxes:));
}

uint64_t sub_242B74DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B74194(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t))Tensor.max(alongAxes:));
}

uint64_t objectdestroy_11Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for Moments()
{
  return &type metadata for Moments;
}

uint64_t OUTLINED_FUNCTION_4_51()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_5_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_242B71C64(a1, 0, 0, 255, a5, 0, 0, 255);
}

uint64_t OUTLINED_FUNCTION_9_46()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_10_37()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11_39()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_242B4C7A4(v5, 0, a3, a4, v6, v4);
}

void OUTLINED_FUNCTION_15_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_242B933C0((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_17_33@<X0>(uint64_t a1@<X8>)
{
  return sub_242C37658(0, *(_QWORD *)(*(_QWORD *)(a1 + 152) + 16));
}

uint64_t OUTLINED_FUNCTION_18_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t (**v6)(_QWORD, _QWORD);

  return sub_242BC9830(v5, v6, 0, a4, v4);
}

uint64_t OUTLINED_FUNCTION_19_31()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_31@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = a1;
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = 88;
  *(_WORD *)(v2 - 104) = 2;
  return type metadata accessor for ReductionOperation();
}

void OUTLINED_FUNCTION_25_31(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_242C35CC8(a1, a2, 1, a3);
}

void OUTLINED_FUNCTION_26_35(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_242BF561C(a1, a2, a3, a4, a5, a6, 1, a8, a9, a10, a11);
}

void OUTLINED_FUNCTION_30_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_242B933C0((uint64_t)va);
}

void OUTLINED_FUNCTION_31_34(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_242C35CC8(a1, v2, 0, a2);
}

uint64_t OUTLINED_FUNCTION_33_22()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_34_26()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_35_22()
{
  return type metadata accessor for ReductionOperation();
}

uint64_t OUTLINED_FUNCTION_37_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;

  return sub_242B4D4E0(v32, 0, &a31, (unint64_t)v34 << 32, v33, v31, a1);
}

uint64_t OUTLINED_FUNCTION_38_22()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_39_24()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_41_27()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_42_22()
{
  sub_242C21A14();
}

void OUTLINED_FUNCTION_43_24()
{
  sqrt(_:)();
}

void OUTLINED_FUNCTION_44_20()
{
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_45_19(uint64_t a1, uint64_t a2, ...)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v3 = *v2;
  v5 = a1;
  v7 = v3;
  return Tensor.reshaped(to:)((uint64_t *)va, (uint64_t *)va1);
}

uint64_t OUTLINED_FUNCTION_48_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_242A5DC30((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_50_18()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_52_12@<X0>(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 144) = v1;
  *(_QWORD *)(v3 - 104) = v2;
  *(_QWORD *)(v3 - 96) = 79;
  *(_WORD *)(v3 - 88) = a1;
  return type metadata accessor for ArgumentReductionOperation();
}

void OUTLINED_FUNCTION_53_13()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_60_15()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_61_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_64_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_65_15(uint64_t *a1)
{
  uint64_t *v1;

  return Tensor.reshaped(to:)(a1, v1);
}

const void *OUTLINED_FUNCTION_68_11()
{
  return sub_242B93328();
}

uint64_t OUTLINED_FUNCTION_72_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_242A5DC30((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_73_12()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_74_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_76_11()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_77_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v15 - 232) = v14;
  return Tensor.reshaped(to:)((uint64_t *)(v15 - 232), a14);
}

uint64_t OUTLINED_FUNCTION_78_7()
{
  return swift_release();
}

void OUTLINED_FUNCTION_80_10()
{
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_82_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_83_9()
{
  return sub_242C49208();
}

uint64_t OUTLINED_FUNCTION_85_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  return sub_242A66290(*(_QWORD *)(v6 + 16) + 168, (uint64_t)va);
}

unint64_t OUTLINED_FUNCTION_86_7()
{
  return sub_242B74CF4();
}

uint64_t OUTLINED_FUNCTION_87_8()
{
  return Tensor.squared()();
}

void OUTLINED_FUNCTION_88_4()
{
  Tensor.any(squeezingAxes:)();
}

void OUTLINED_FUNCTION_90_6()
{
  static Tensor.- infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_93_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_94_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;

  return sub_242A66290(*(_QWORD *)(v38 + 16) + 168, (uint64_t)&a38);
}

uint64_t OUTLINED_FUNCTION_95_6()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_96_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

void OUTLINED_FUNCTION_97_6(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_242BF561C(a1, a2, a3, a4, a5, a6, 1, a8, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_98_7(uint64_t a1)
{
  return sub_242BD0D40(a1);
}

void OUTLINED_FUNCTION_100_6(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  sub_242BF5850(a1, a2, a3, a4, v9, v8, 1, a8);
}

uint64_t OUTLINED_FUNCTION_102_4(uint64_t a1)
{
  return sub_242BD0D40(a1);
}

uint64_t OUTLINED_FUNCTION_103_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  return sub_242A66290(a1, (uint64_t)&a31);
}

uint64_t OUTLINED_FUNCTION_104_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A66290(*(_QWORD *)(v0 + 16) + 168, v1 - 232);
}

uint64_t OUTLINED_FUNCTION_108_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  return sub_242A66290(v33 - 232, (uint64_t)&a33);
}

uint64_t OUTLINED_FUNCTION_115_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242A66290(a1 + 168, v1 - 216);
}

uint64_t OUTLINED_FUNCTION_117_4()
{
  return sub_242B6E4A8();
}

uint64_t OUTLINED_FUNCTION_119_6()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return v0;
}

void OUTLINED_FUNCTION_121_3()
{
  Tensor.scalarType.getter();
}

uint64_t OUTLINED_FUNCTION_122_6()
{
  return swift_initStackObject();
}

float Dropout.probability.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void Dropout.learningPhase.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *Dropout.learningPhase.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*Dropout.learningPhase.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Dropout.init(probability:seed:)(uint64_t a1, float a2)
{
  uint64_t v2;
  unint64_t v4;
  char *v6;
  unint64_t v7;
  char v8;
  char v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16[3];
  __n128 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  if ((a1 & 0x100000000) != 0)
  {
    if (a2 < 0.0 || a2 > 1.0)
      goto LABEL_20;
    OUTLINED_FUNCTION_22_2();
    v6 = (char *)OUTLINED_FUNCTION_105_3() + 16;
    OUTLINED_FUNCTION_51_21();
    v7 = *(_QWORD *)(*(_QWORD *)v6 + 16);
    OUTLINED_FUNCTION_1_60();
    v8 = OUTLINED_FUNCTION_12_36();
    *(_QWORD *)v6 = v2;
    if ((v8 & 1) != 0)
    {
      if (v7)
        goto LABEL_14;
    }
    else
    {
      sub_242B4B510();
      v2 = v14;
      *(_QWORD *)v6 = v14;
      if (v7)
      {
LABEL_14:
        if (v7 <= *(_QWORD *)(v2 + 16))
        {
          v4 = OUTLINED_FUNCTION_5_55();
          swift_endAccess();
          swift_release();
          goto LABEL_16;
        }
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    v17.n128_u64[0] = 0;
    v17.n128_u64[1] = 0xE000000000000000;
    sub_242C48C38();
    OUTLINED_FUNCTION_10_38();
    sub_242C48704();
    OUTLINED_FUNCTION_4_52();
    __break(1u);
    goto LABEL_21;
  }
  if ((a1 & 0x80000000) == 0)
  {
    if (a2 >= 0.0 && a2 <= 1.0)
    {
      v4 = a1;
LABEL_16:
      v9 = sub_242B40ACC(v4);
      v17 = v10;
      v18 = v11;
      v19 = v9 & 1;
      v20 = v12;
      sub_242AC87F0(v16);
      type metadata accessor for LayerVariableReference();
      OUTLINED_FUNCTION_1_4();
      sub_242A78538(v16, 0x100000000);
      v15 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257228CB0);
      v13 = (__n128 *)OUTLINED_FUNCTION_9_47();
      OUTLINED_FUNCTION_3_55(v13, v15);
      OUTLINED_FUNCTION_2_61();
      return;
    }
    goto LABEL_20;
  }
LABEL_21:
  sub_242C48F50();
  __break(1u);
}

__n128 *Dropout.init(probability:seed:)(unint64_t a1, char a2, float a3)
{
  uint64_t v3;
  char *v6;
  unint64_t v7;
  char v8;
  char v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *result;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  if (a3 < 0.0 || a3 > 1.0)
    goto LABEL_14;
  if ((a2 & 1) == 0)
  {
LABEL_10:
    v9 = sub_242B40ACC(a1);
    v18 = v10;
    v19 = v11;
    v20 = v9 & 1;
    v21 = v12;
    sub_242AC87F0(&v17);
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    sub_242A78538(&v17, 0x100000000);
    v16 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228CB0);
    v13 = (__n128 *)OUTLINED_FUNCTION_9_47();
    return OUTLINED_FUNCTION_3_55(v13, v16);
  }
  OUTLINED_FUNCTION_22_2();
  v6 = (char *)OUTLINED_FUNCTION_105_3() + 16;
  OUTLINED_FUNCTION_51_21();
  v7 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  OUTLINED_FUNCTION_1_60();
  v8 = OUTLINED_FUNCTION_12_36();
  *(_QWORD *)v6 = v3;
  if ((v8 & 1) != 0)
  {
    if (v7)
      goto LABEL_8;
  }
  else
  {
    sub_242B4B510();
    v3 = v15;
    *(_QWORD *)v6 = v15;
    if (v7)
    {
LABEL_8:
      if (v7 <= *(_QWORD *)(v3 + 16))
      {
        a1 = OUTLINED_FUNCTION_5_55();
        swift_endAccess();
        swift_release();
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  sub_242C48C38();
  OUTLINED_FUNCTION_10_38();
  sub_242C48704();
  result = (__n128 *)OUTLINED_FUNCTION_4_52();
  __break(1u);
  return result;
}

void Dropout.forward(_:)(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  float v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[10];
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = *(float *)v2;
  v6 = *(_QWORD *)(v2 + 8);
  if (!*(_BYTE *)(v2 + 4))
  {
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_105_3();
    sub_242B933C0((uint64_t)v9);
    swift_release();
    if (v10)
    {
      v7 = *(_BYTE *)(v10 + 24);
      sub_242A5DC30((uint64_t)v9);
      if ((v7 & 1) != 0)
        goto LABEL_6;
    }
    else
    {
      sub_242A5DC30((uint64_t)v9);
    }
LABEL_10:
    *a2 = v4;
    swift_retain();
    goto LABEL_11;
  }
  if (*(_BYTE *)(v2 + 4) != 1)
    goto LABEL_10;
LABEL_6:
  OUTLINED_FUNCTION_1_60();
  swift_retain();
  swift_retain();
  sub_242AC87F0(&v11);
  swift_endAccess();
  v9[0] = v6;
  LayerState.wrappedValue.setter(&v11);
  swift_release();
  swift_release();
  v9[0] = v4;
  v8 = *(_QWORD *)(v6 + 32);
  if ((~v8 & 0xF000000000000007) != 0)
  {
    if (v8 < 0)
    {
      v11 = v8 & 0x7FFFFFFFFFFFFFFFLL;
      sub_242C309F4(&v11, a2, v5);
LABEL_11:
      OUTLINED_FUNCTION_2_61();
      return;
    }
    OUTLINED_FUNCTION_24_0();
  }
  else
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  sub_242C48F5C();
  __break(1u);
}

_BYTE *sub_242B75AF4(char *a1)
{
  char v2;

  v2 = *a1;
  return Dropout.learningPhase.setter(&v2);
}

uint64_t (*sub_242B75B1C())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_242B75B2C()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_242B75B78(char a1)
{
  if (!a1)
    return 0x6C696261626F7270;
  if (a1 == 1)
    return 0x676E696E7261656CLL;
  return 0x6574617473;
}

void sub_242B75BE0(unsigned __int8 *a1, char *a2)
{
  sub_242B3EB40(*a1, *a2);
}

void sub_242B75BEC()
{
  sub_242C44A14();
}

uint64_t sub_242B75BF4()
{
  return sub_242A5C460();
}

void sub_242B75BFC()
{
  sub_242BA8E4C();
}

uint64_t sub_242B75C04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242B75B2C();
  *a1 = result;
  return result;
}

uint64_t sub_242B75C30@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242B75B78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242B75C58()
{
  char *v0;

  return sub_242B75B78(*v0);
}

uint64_t sub_242B75C60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242B75B74();
  *a1 = result;
  return result;
}

uint64_t sub_242B75C84()
{
  sub_242B76134();
  return sub_242C494D8();
}

uint64_t sub_242B75CAC()
{
  sub_242B76134();
  return sub_242C494E4();
}

uint64_t Dropout.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228CB8);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B76134();
  sub_242C49448();
  if (!v2)
  {
    LOBYTE(v22) = 0;
    sub_242C490B8();
    v7 = v6;
    sub_242A79308();
    OUTLINED_FUNCTION_0_72();
    v9 = v22;
    type metadata accessor for LayerVariableReference();
    swift_allocObject();
    swift_retain_n();
    sub_242A78538(&v22, 0x100000000);
    v21 = v10;
    v22 = v9;
    v11 = sub_242AC8508(&v22);
    v20 = v12;
    v14 = v13;
    v15 = v11;
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228CB0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v20;
    *(_QWORD *)(v18 + 32) = v14;
    *(_BYTE *)(v18 + 40) = v15 & 1;
    *(_QWORD *)(v18 + 48) = v17;
    sub_242B241C8();
    OUTLINED_FUNCTION_0_72();
    OUTLINED_FUNCTION_1_12();
    swift_release();
    v19 = v22;
    *(_DWORD *)a2 = v7;
    *(_BYTE *)(a2 + 4) = v19;
    *(_QWORD *)(a2 + 8) = v21;
    *(_QWORD *)(a2 + 16) = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t Dropout.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228CC8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(unsigned __int8 *)(v1 + 4);
  v8 = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B76134();
  sub_242C49478();
  v17 = 0;
  sub_242C4916C();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = v12;
  v15 = 1;
  sub_242B24150();
  OUTLINED_FUNCTION_3_5();
  v9 = *(_QWORD *)(v8 + 32);
  if ((~v9 & 0xF000000000000007) != 0)
  {
    if (v9 < 0)
    {
      v14 = v9 & 0x7FFFFFFFFFFFFFFFLL;
      v13 = 2;
      sub_242A792CC();
      OUTLINED_FUNCTION_3_5();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    OUTLINED_FUNCTION_24_0();
  }
  else
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t sub_242B7610C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Dropout.init(from:)(a1, a2);
}

uint64_t sub_242B76120(_QWORD *a1)
{
  return Dropout.encode(to:)(a1);
}

unint64_t sub_242B76134()
{
  unint64_t result;

  result = qword_257228CC0;
  if (!qword_257228CC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C588A4, &type metadata for Dropout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228CC0);
  }
  return result;
}

uint64_t destroy for Dropout()
{
  swift_release();
  return swift_release();
}

uint64_t _s14NeuralNetworks7DropoutVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Dropout(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Dropout(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyTensorFunction.Key.TensorOperationDescriptionKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyTensorFunction.Key.TensorOperationDescriptionKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Dropout()
{
  return &type metadata for Dropout;
}

uint64_t storeEnumTagSinglePayload for Dropout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242B76374 + 4 * byte_242C586ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242B763A8 + 4 * asc_242C586E8[v4]))();
}

uint64_t sub_242B763A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B763B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B763B8);
  return result;
}

uint64_t sub_242B763C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B763CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242B763D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B763D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Dropout.CodingKeys()
{
  return &type metadata for Dropout.CodingKeys;
}

unint64_t sub_242B763F8()
{
  unint64_t result;

  result = qword_257228D28;
  if (!qword_257228D28)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5887C, &type metadata for Dropout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228D28);
  }
  return result;
}

unint64_t sub_242B76438()
{
  unint64_t result;

  result = qword_257228D30;
  if (!qword_257228D30)
  {
    result = MEMORY[0x2494EDE24](&unk_242C587B4, &type metadata for Dropout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228D30);
  }
  return result;
}

unint64_t sub_242B76478()
{
  unint64_t result;

  result = qword_257228D38;
  if (!qword_257228D38)
  {
    result = MEMORY[0x2494EDE24](&unk_242C587DC, &type metadata for Dropout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228D38);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_72()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_1_60()
{
  return swift_beginAccess();
}

__n128 *OUTLINED_FUNCTION_3_55(__n128 *result, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  int v6;
  unint64_t v7;

  result[1] = a2;
  result[2].n128_u64[0] = v7;
  result[2].n128_u8[8] = v4;
  result[3].n128_u64[0] = v5;
  *(_DWORD *)v2 = v6;
  *(_BYTE *)(v2 + 4) = 0;
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_52()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_5_55()
{
  return sub_242B93088();
}

uint64_t OUTLINED_FUNCTION_9_47()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_10_38()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_12_36()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void static ComputeDevice.cpu.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_257220510 != -1)
    swift_once();
  v2 = qword_257259970;
  v3 = unk_257259978;
  v4 = __swift_project_boxed_opaque_existential_1(qword_257259958, qword_257259970);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v8 + 16))(v7, v5);
  sub_242B76988(1, (uint64_t)v7, v2, v3, a1);
}

double sub_242B7661C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  int v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return OUTLINED_FUNCTION_0_73();
  sub_242C480E0();
  v5 = 0;
  while (1)
  {
    sub_242A66290(*(_QWORD *)(*(_QWORD *)(a1 + 8 * v5 + 32) + 16) + 168, (uint64_t)&v8);
    if (*((_QWORD *)&v9 + 1))
      break;
    ++v5;
    sub_242A929A8((uint64_t)&v8, (uint64_t *)&unk_257228D70);
    if (v3 == v5)
    {
      OUTLINED_FUNCTION_136();
      return OUTLINED_FUNCTION_0_73();
    }
  }
  OUTLINED_FUNCTION_136();
  v7 = v9;
  *(_OWORD *)a2 = v8;
  *(_OWORD *)(a2 + 16) = v7;
  result = *(double *)&v10;
  *(_OWORD *)(a2 + 32) = v10;
  *(_DWORD *)(a2 + 48) = v11;
  return result;
}

uint64_t sub_242B766D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    LODWORD(v2) = 0;
    v3 = (int *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~(_DWORD)v2) == 0)
        v4 = 0;
      v2 = v4 | v2;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ComputeDevice.isEqual(to:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[56];
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v3 = sub_242B77228(*(void **)(v1 + 40), *(_QWORD *)(a1 + 40));
  sub_242A6FE24(v1, (uint64_t)v9);
  sub_242A6FE24(a1, (uint64_t)v8);
  if ((v3 & 1) != 0)
  {
    v4 = v10;
    v5 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v6 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 24))(v8, v4, v5);
  }
  else
  {
    v6 = 0;
  }
  sub_242A6FDE8((uint64_t)v8);
  sub_242A6FDE8((uint64_t)v9);
  return v6 & 1;
}

void static ComputeDevice.gpu.getter()
{
  char v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_257220528 != -1)
    swift_once();
  OUTLINED_FUNCTION_9_48();
  if ((v0 & 1) != 0)
    goto LABEL_12;
  v1 = MTLCreateSystemDefaultDevice();
  if (!v1)
    goto LABEL_12;
  if (!OUTLINED_FUNCTION_20_36(v1, sel_supportsFamily_) || !OUTLINED_FUNCTION_13_43())
  {
    OUTLINED_FUNCTION_49_4();
LABEL_12:
    OUTLINED_FUNCTION_0_73();
LABEL_13:
    OUTLINED_FUNCTION_7_0();
    return;
  }
  if (OUTLINED_FUNCTION_13_43())
  {
    if (qword_257220508 != -1)
      swift_once();
    __swift_project_boxed_opaque_existential_1(qword_257259930, qword_257259948);
    OUTLINED_FUNCTION_18_36();
    MEMORY[0x24BDAC7A8](v2);
    OUTLINED_FUNCTION_3_56(v3, v4, v6);
    v5 = OUTLINED_FUNCTION_31_35();
    OUTLINED_FUNCTION_11_40(v5);
    OUTLINED_FUNCTION_49_4();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_73();
  swift_unknownObjectRelease();
}

uint64_t sub_242B768CC(unsigned int a1, int a2)
{
  return a2 | a1;
}

uint64_t sub_242B768D4(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

unint64_t sub_242B768DC(unsigned int a1)
{
  int *v1;
  int v2;
  int v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *v1 & a1;
  if (v3)
  {
    *v1 = v2 & ~a1;
    v4 = v2 & a1;
  }
  else
  {
    v4 = 0;
  }
  return v4 | ((unint64_t)(v3 == 0) << 32);
}

unint64_t sub_242B7691C(unsigned int a1)
{
  int *v1;
  int v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1 | ((unint64_t)((v2 & a1) == 0) << 32);
}

uint64_t sub_242B76948(uint64_t result)
{
  _DWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_242B76958(int a1, int a2)
{
  return a2 & ~a1;
}

BOOL sub_242B76960(int a1, int a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_242B7696C(int a1)
{
  return a1 == 0;
}

uint64_t sub_242B76978(uint64_t result)
{
  _DWORD *v1;

  *v1 &= ~(_DWORD)result;
  return result;
}

void sub_242B76988(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  uint64_t v11;
  int v12;

  *(_QWORD *)(a5 + 32) = a4;
  *(_QWORD *)(a5 + 40) = a1;
  *(_QWORD *)(a5 + 24) = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a5);
  v10 = *(_QWORD *)(a3 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_0, a2, a3);
  sub_242AD25B8(a1);
  v11 = OUTLINED_FUNCTION_28_34();
  v12 = sub_242B76FFC(v11);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, a3);
  *(_DWORD *)(a5 + 48) = v12;
  OUTLINED_FUNCTION_7_0();
}

void sub_242B76A0C()
{
  id v0;

  v0 = MTLCreateSystemDefaultDevice();
  if (v0 && (OUTLINED_FUNCTION_20_36(v0, sel_supportsFamily_) & 1) == 0)
    swift_unknownObjectRelease();
  OUTLINED_FUNCTION_1_0();
}

double sub_242B76A54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__int128 *, uint64_t, uint64_t);
  char v8;
  double result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int v18;
  _BYTE v19[56];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 <= 1)
  {
    if (v3)
    {
      sub_242A66290(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) + 168, a2);
    }
    else
    {
      *(_DWORD *)(a2 + 48) = 0;
      result = 0.0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
    }
  }
  else
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v24 = 0u;
    sub_242C480E0();
    for (i = 0; i != v3; ++i)
    {
      sub_242A66290(*(_QWORD *)(*(_QWORD *)(a1 + 8 * i + 32) + 16) + 168, (uint64_t)&v15);
      if (*((_QWORD *)&v16 + 1))
      {
        v20 = v15;
        v21 = v16;
        v22 = v17;
        v23 = v18;
        if (*((_QWORD *)&v25 + 1))
        {
          sub_242A6FE24((uint64_t)&v24, (uint64_t)&v15);
          v5 = *((_QWORD *)&v16 + 1);
          v6 = v17;
          __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
          v7 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v6 + 24);
          swift_retain();
          v8 = v7(&v20, v5, v6);
          sub_242A6FDE8((uint64_t)&v15);
          if ((v8 & 1) == 0)
          {
            sub_242A66290((uint64_t)&v24, (uint64_t)&v11);
            if (!*((_QWORD *)&v12 + 1))
              __break(1u);
            v15 = v11;
            v16 = v12;
            v17 = v13;
            v18 = v14;
            sub_242A6FE24((uint64_t)&v20, (uint64_t)v19);
            v19[52] = 18;
            sub_242A59264();
          }
          swift_release();
        }
        sub_242A929A8((uint64_t)&v24, (uint64_t *)&unk_257228D70);
        v24 = v20;
        v25 = v21;
        v26 = v22;
        v27 = v23;
      }
      else
      {
        sub_242A929A8((uint64_t)&v15, (uint64_t *)&unk_257228D70);
      }
    }
    swift_bridgeObjectRelease();
    sub_242A766C4((uint64_t)&v24, a2);
  }
  return result;
}

uint64_t ComputeDevice.description.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = 5591111;
  v2 = *(_QWORD *)(v0 + 40);
  if (v2)
  {
    if (v2 == 1)
    {
      return 5591107;
    }
    else if (v2 == 2)
    {
      return 0x45206C617275654ELL;
    }
    else
    {
      sub_242AD25B8(v2);
      sub_242C48314();
      sub_242B76D9C();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      OUTLINED_FUNCTION_22_27();
      return 5591111;
    }
  }
  return result;
}

uint64_t sub_242B76D4C(uint64_t a1)
{
  uint64_t v1;

  v1 = 0x45206C617275654ELL;
  if (a1 != 2)
    v1 = 5591111;
  if (a1 == 1)
    return 5591107;
  else
    return v1;
}

uint64_t sub_242B76D9C()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_name);
  v2 = sub_242C48248();

  return v2;
}

uint64_t sub_242B76DF0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 2)
  {
    sub_242C48C38();
    OUTLINED_FUNCTION_16_19();
    OUTLINED_FUNCTION_26_36();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_39();
    sub_242C48314();
    OUTLINED_FUNCTION_2_62();
    OUTLINED_FUNCTION_24_34();
    OUTLINED_FUNCTION_4_53();
  }
  sub_242AD25CC(a1);
  return 1024;
}

uint64_t sub_242B76F10(uint64_t a1)
{
  if (a1 != 1)
  {
    sub_242AD25B8(a1);
    sub_242C48C38();
    OUTLINED_FUNCTION_16_19();
    OUTLINED_FUNCTION_26_36();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_39();
    sub_242C48314();
    OUTLINED_FUNCTION_2_62();
    OUTLINED_FUNCTION_24_34();
    OUTLINED_FUNCTION_4_53();
  }
  return 0x100000;
}

uint64_t sub_242B76FFC(uint64_t a1)
{
  uint64_t v2;

  if (a1 == 1)
  {
    if (swift_dynamicCastMetatype())
      return 1;
    if (swift_dynamicCastMetatype())
      return 0x100000;
    goto LABEL_15;
  }
  if (a1 != 2)
  {
    if (swift_dynamicCastMetatype())
    {
      v2 = 1024;
LABEL_13:
      sub_242AD25CC(a1);
      return v2;
    }
    if (swift_dynamicCastMetatype())
    {
      v2 = 2;
      goto LABEL_13;
    }
LABEL_15:
    sub_242AD25B8(a1);
    sub_242C48C38();
    sub_242C48314();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242A59170();
  }
  if (!swift_dynamicCastMetatype())
    goto LABEL_15;
  return 4;
}

uint64_t sub_242B77228(void *a1, uint64_t a2)
{
  id v5;
  id v6;
  uint64_t v7;
  BOOL v8;
  unsigned int v9;

  if (a1 == (void *)2)
    return a2 == 2;
  if (a1 == (void *)1)
    return a2 == 1;
  if ((unint64_t)(a2 - 1) < 2)
    return 0;
  if (a1)
  {
    sub_242AD25B8(a2);
    sub_242AD25B8((uint64_t)a1);
    v5 = objc_msgSend(a1, sel_registryID);
  }
  else
  {
    swift_unknownObjectRetain();
    v5 = 0;
  }
  if (a2)
  {
    v6 = objc_msgSend((id)OUTLINED_FUNCTION_23_33(), sel_registryID);
    sub_242AD25CC((uint64_t)a1);
    OUTLINED_FUNCTION_22_27();
    v7 = a2;
  }
  else
  {
    v6 = 0;
    v7 = (uint64_t)a1;
  }
  sub_242AD25CC(v7);
  if (a2)
    v8 = v5 == v6;
  else
    v8 = 0;
  v9 = v8;
  if (a1)
    return v9;
  else
    return a2 == 0;
}

uint64_t ComputeDevice.isCompatible(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4) & 1;
}

void sub_242B77370()
{
  int v0;
  int v1;

  if (qword_257220528 != -1)
    swift_once();
  OUTLINED_FUNCTION_9_48();
  if (v0)
    v1 = 1048583;
  else
    v1 = 1049607;
  dword_2572599E0 = v1;
}

void sub_242B773C8(_DWORD *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_1_0();
}

BOOL sub_242B773E8(int *a1)
{
  int *v1;

  return sub_242B4F29C(*a1, *v1);
}

uint64_t sub_242B773F4@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;
  uint64_t result;

  result = sub_242B768CC(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_242B77420(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;

  *a2 = sub_242B40E20(*a1, *v2);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242B77448@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;
  uint64_t result;

  result = sub_242B768D4(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_242B77474(_DWORD *a1, int *a2)
{
  return sub_242A9BCB0(a1, *a2);
}

unint64_t sub_242B7747C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;

  result = sub_242B768DC(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

unint64_t sub_242B774AC@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;

  result = sub_242B7691C(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_242B774DC(unsigned int *a1)
{
  return sub_242A9BCDC(*a1);
}

uint64_t sub_242B774E4(unsigned int *a1)
{
  return sub_242B40E28(*a1);
}

uint64_t sub_242B774EC(unsigned int *a1)
{
  return sub_242B76948(*a1);
}

uint64_t sub_242B774F4@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;
  uint64_t result;

  result = sub_242B76958(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_242B77520(int *a1)
{
  int *v1;

  return sub_242B40E38(*a1, *v1);
}

BOOL sub_242B7752C(int *a1)
{
  int *v1;

  return sub_242B76960(*a1, *v1);
}

BOOL sub_242B77538(int *a1)
{
  int *v1;

  return sub_242B40E44(*a1, *v1);
}

BOOL sub_242B77544()
{
  int *v0;

  return sub_242B7696C(*v0);
}

uint64_t sub_242B7754C()
{
  return sub_242C48B90();
}

uint64_t sub_242B77564(unsigned int *a1)
{
  return sub_242B76978(*a1);
}

uint64_t sub_242B7756C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = sub_242B766D0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_242B77590(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      return sub_242C4817C();
    case 2:
      OUTLINED_FUNCTION_6_56();
      return sub_242C4817C();
    case 1:
      return sub_242C4817C();
  }
  objc_msgSend((id)OUTLINED_FUNCTION_23_33(), sel_registryID);
  sub_242C4937C();
  return sub_242AD25CC(a2);
}

uint64_t sub_242B77618(uint64_t a1)
{
  sub_242C49340();
  if (a1)
  {
    if (a1 == 2)
    {
      OUTLINED_FUNCTION_6_56();
    }
    else if (a1 != 1)
    {
      objc_msgSend((id)OUTLINED_FUNCTION_23_33(), sel_registryID);
      sub_242C4937C();
      OUTLINED_FUNCTION_22_27();
      return sub_242C49394();
    }
  }
  sub_242C4817C();
  return sub_242C49394();
}

uint64_t sub_242B776B8()
{
  uint64_t *v0;

  return sub_242B76D4C(*v0);
}

uint64_t sub_242B776C0()
{
  uint64_t *v0;

  return sub_242B77618(*v0);
}

uint64_t sub_242B776C8(uint64_t a1)
{
  uint64_t *v1;

  return sub_242B77590(a1, *v1);
}

uint64_t sub_242B776D0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_242C49340();
  sub_242B77590((uint64_t)v3, v1);
  return sub_242C49394();
}

uint64_t sub_242B77710(void **a1, uint64_t *a2)
{
  return sub_242B77228(*a1, *a2);
}

void static ComputeDevice.gpu(using:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_257220528 != -1)
    swift_once();
  OUTLINED_FUNCTION_9_48();
  if ((v0 & 1) != 0 || !OUTLINED_FUNCTION_13_43())
  {
    OUTLINED_FUNCTION_0_73();
  }
  else
  {
    if (qword_257220508 != -1)
      swift_once();
    __swift_project_boxed_opaque_existential_1(qword_257259930, qword_257259948);
    OUTLINED_FUNCTION_18_36();
    MEMORY[0x24BDAC7A8](v1);
    OUTLINED_FUNCTION_3_56(v2, v3, v5);
    v4 = OUTLINED_FUNCTION_31_35();
    OUTLINED_FUNCTION_11_40(v4);
  }
  OUTLINED_FUNCTION_7_0();
}

void static ComputeDevice.neuralEngine.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  unsigned int (*v18)(uint64_t);
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_242C47FA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_36_11();
  v6 = (id *)(v4 - v5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = MEMORY[0x2494EBB38](v8);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v26 = a1;
    v13 = v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *MEMORY[0x24BDBFCF8];
    v15 = *(_QWORD *)(v3 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v25 = v11;
    sub_242C480E0();
    while (1)
    {
      v16(v10, v13, v2);
      v16((char *)v6, (unint64_t)v10, v2);
      v17 = OUTLINED_FUNCTION_28_34();
      if (v18(v17) == v14)
        break;
      v19 = *(void (**)(uint64_t))(v3 + 8);
      v20 = OUTLINED_FUNCTION_28_34();
      v19(v20);
      ((void (*)(char *, uint64_t))v19)(v10, v2);
      v13 += v15;
      if (!--v12)
      {
        OUTLINED_FUNCTION_29_26();
        goto LABEL_10;
      }
    }
    v21 = OUTLINED_FUNCTION_28_34();
    v22(v21);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    OUTLINED_FUNCTION_29_26();
    if (qword_257220528 != -1)
      swift_once();
    OUTLINED_FUNCTION_9_48();
    v23 = v26;
    if ((v24 & 1) == 0)
    {
      *(_QWORD *)(v26 + 40) = 2;
      *(_QWORD *)(v23 + 24) = &unk_251389868;
      *(_QWORD *)(v23 + 32) = &off_251389928;
      *(_DWORD *)(v23 + 48) = 4;
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_10:
  OUTLINED_FUNCTION_0_73();
LABEL_11:
  OUTLINED_FUNCTION_13_11();
}

void static ComputeDevice.mpsGPU.getter(uint64_t a1@<X8>)
{
  char v2;
  id v3;
  id v4;
  uint64_t v5;

  if (qword_257220528 != -1)
    swift_once();
  OUTLINED_FUNCTION_9_48();
  if ((v2 & 1) != 0)
    goto LABEL_9;
  v3 = MTLCreateSystemDefaultDevice();
  if (!v3)
    goto LABEL_9;
  v4 = v3;
  if (!OUTLINED_FUNCTION_20_36(v3, sel_supportsFamily_) || !OUTLINED_FUNCTION_13_43())
  {
    OUTLINED_FUNCTION_49_4();
LABEL_9:
    OUTLINED_FUNCTION_0_73();
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 24) = &unk_251389888;
  *(_QWORD *)(a1 + 32) = &off_251389908;
  *(_QWORD *)(a1 + 40) = v4;
  v5 = OUTLINED_FUNCTION_31_35();
  *(_DWORD *)(a1 + 48) = sub_242B76DF0(v5);
LABEL_10:
  OUTLINED_FUNCTION_1_0();
}

void static ComputeDevice.classicEspressoGPU.getter(uint64_t a1@<X8>)
{
  char v2;
  id v3;
  id v4;

  if (qword_257220528 != -1)
    swift_once();
  OUTLINED_FUNCTION_9_48();
  if ((v2 & 1) != 0)
    goto LABEL_9;
  v3 = MTLCreateSystemDefaultDevice();
  if (!v3)
    goto LABEL_9;
  v4 = v3;
  if (!OUTLINED_FUNCTION_20_36(v3, sel_supportsFamily_) || !OUTLINED_FUNCTION_13_43())
  {
    OUTLINED_FUNCTION_49_4();
LABEL_9:
    OUTLINED_FUNCTION_0_73();
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 24) = &unk_251389868;
  *(_QWORD *)(a1 + 32) = &off_251389928;
  *(_QWORD *)(a1 + 40) = v4;
  *(_DWORD *)(a1 + 48) = 2;
LABEL_10:
  OUTLINED_FUNCTION_1_0();
}

void static ComputeDevice.classicEspressoCPU.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &unk_251389868;
  *(_QWORD *)(a1 + 32) = &off_251389928;
  *(_QWORD *)(a1 + 40) = 1;
  *(_DWORD *)(a1 + 48) = 1;
}

void static ComputeDevice.bnnsCPU.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 24) = &unk_251389848;
  *(_QWORD *)(a1 + 32) = &off_2513898E8;
  *(_DWORD *)(a1 + 48) = 0x100000;
}

uint64_t sub_242B77B0C()
{
  return 0x6F73736572707345;
}

uint64_t sub_242B77B24()
{
  return 0x687061724753504DLL;
}

uint64_t sub_242B77B3C()
{
  return 1397640770;
}

uint64_t sub_242B77B4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2) == 1397640770 && v3 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_242C4925C();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t sub_242B77BE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2) == 0x6F73736572707345
    && v3 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_242C4925C();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t sub_242B77C8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2) == 0x687061724753504DLL
    && v3 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_242C4925C();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

void Array<A>.place(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 16);
  v7 = OUTLINED_FUNCTION_0_2();
  v8 = MEMORY[0x2494EC198](v7, v6);
  OUTLINED_FUNCTION_136();
  if (v8 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v8)
    {
      v9 = 0;
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8);
      do
      {
        sub_242C485B4();
        sub_242B78444(v9, *v3);
        _swift_isClassOrObjCExistentialType();
        v10(a1, v6, a3);
        ++v9;
      }
      while (v8 != v9);
    }
    OUTLINED_FUNCTION_13_11();
  }
}

void Array<A>.placed(on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_35();
  sub_242C48650();
  OUTLINED_FUNCTION_0_2();
  v0 = OUTLINED_FUNCTION_27_29();
  Array<A>.place(on:)(v0, v1, v2);
  OUTLINED_FUNCTION_21_1();
}

void sub_242B77E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Array<A>.place(on:)(a1, a2, *(_QWORD *)(a3 - 8));
}

void sub_242B77E68(_QWORD *a1@<X8>)
{
  uint64_t v2;

  Array<A>.placed(on:)();
  *a1 = v2;
}

void Dictionary<>.place(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(uint64_t, uint64_t);
  int64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  unint64_t v78;

  v68 = a3;
  v66 = a1;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = sub_242C48A64();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v52 - v8;
  v74 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_36_11();
  v62 = v10 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)&v52 - v13;
  v67 = a2;
  v73 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  MEMORY[0x24BDAC7A8](v14);
  v60 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v16;
  v76 = v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = sub_242C48A64();
  v70 = *(_QWORD *)(v18 - 8);
  v71 = v18;
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_36_11();
  v21 = v19 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v72 = (char *)&v52 - v23;
  v69 = v3;
  v24 = *v3;
  if ((v24 & 0xC000000000000001) != 0)
  {
    v25 = sub_242C48F20();
    v55 = 0;
    v26 = 0;
    v27 = 0;
    v28 = v25 | 0x8000000000000000;
  }
  else
  {
    v29 = -1 << *(_BYTE *)(v24 + 32);
    v26 = ~v29;
    v30 = *(_QWORD *)(v24 + 64);
    v55 = v24 + 64;
    v31 = -v29;
    if (v31 < 64)
      v32 = ~(-1 << v31);
    else
      v32 = -1;
    v27 = v32 & v30;
    v28 = v24;
  }
  v57 = v28 & 0x7FFFFFFFFFFFFFFFLL;
  v54 = v26;
  v56 = (unint64_t)(v26 + 64) >> 6;
  v53 = v56 - 1;
  OUTLINED_FUNCTION_0_2();
  v33 = 0;
  v58 = v28;
  v59 = v21;
  if ((v28 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_8:
  v34 = (uint64_t)v72;
  if (v27)
  {
    v4 = (v27 - 1) & v27;
    v35 = __clz(__rbit64(v27)) | (v33 << 6);
    v36 = v33;
LABEL_10:
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v73 + 16))(v21, *(_QWORD *)(v28 + 48) + *(_QWORD *)(v73 + 72) * v35, v75);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v74 + 16))(v21 + *(int *)(TupleTypeMetadata2 + 48), *(_QWORD *)(v28 + 56) + *(_QWORD *)(v74 + 72) * v35, v76);
    v37 = 0;
    goto LABEL_20;
  }
  v36 = v33 + 1;
  if (__OFADD__(v33, 1))
  {
    __break(1u);
  }
  else
  {
    if (v36 >= v56)
    {
      OUTLINED_FUNCTION_25_32();
      v36 = v33;
      goto LABEL_20;
    }
    v39 = *(_QWORD *)(v55 + 8 * v36);
    if (v39)
      goto LABEL_16;
    if (v33 + 2 >= v56)
    {
      OUTLINED_FUNCTION_25_32();
      goto LABEL_20;
    }
    v39 = *(_QWORD *)(v55 + 8 * (v33 + 2));
    if (v39)
    {
      v36 = v33 + 2;
LABEL_16:
      v4 = (v39 - 1) & v39;
      v35 = __clz(__rbit64(v39)) + (v36 << 6);
      goto LABEL_10;
    }
    v50 = v33 + 3;
    if (v33 + 3 >= v56)
    {
      OUTLINED_FUNCTION_25_32();
      v36 = v51;
      goto LABEL_20;
    }
    v39 = *(_QWORD *)(v55 + 8 * v50);
    if (v39)
    {
      v36 = v33 + 3;
      goto LABEL_16;
    }
    while (1)
    {
      v36 = v50 + 1;
      if (__OFADD__(v50, 1))
        break;
      if (v36 >= v56)
      {
        OUTLINED_FUNCTION_25_32();
        v36 = v53;
LABEL_20:
        while (1)
        {
          __swift_storeEnumTagSinglePayload(v21, v37, 1, TupleTypeMetadata2);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v34, v21, v71);
          if (__swift_getEnumTagSinglePayload(v34, 1, TupleTypeMetadata2) == 1)
            break;
          v40 = v34 + *(int *)(TupleTypeMetadata2 + 48);
          v41 = v73;
          v42 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 32);
          v77 = v36;
          v78 = v4;
          v4 = (uint64_t)v60;
          v43 = v75;
          v42(v60, v34, v75);
          v44 = v74;
          v45 = v61;
          v46 = v76;
          (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v61, v40, v76);
          (*(void (**)(uint64_t, uint64_t))(v68 + 16))(v66, v46);
          v47 = v63;
          sub_242C480A4();
          (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v65);
          v48 = v45;
          v28 = v58;
          (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v46);
          v49 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
          v21 = v59;
          v49(v4, v43);
          v33 = v77;
          v27 = v78;
          if ((v28 & 0x8000000000000000) == 0)
            goto LABEL_8;
LABEL_11:
          v38 = sub_242C48F44();
          v34 = (uint64_t)v72;
          if (v38)
          {
            sub_242C49244();
            swift_unknownObjectRelease();
            sub_242C49244();
            OUTLINED_FUNCTION_49_4();
            v37 = 0;
          }
          else
          {
            v37 = 1;
          }
          v36 = v33;
          v4 = v27;
        }
        sub_242A6FF2C();
        OUTLINED_FUNCTION_13_11();
        return;
      }
      v39 = *(_QWORD *)(v55 + 8 * v36);
      ++v50;
      if (v39)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void Dictionary<>.placed(on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_35();
  sub_242C480F8();
  OUTLINED_FUNCTION_0_2();
  v0 = OUTLINED_FUNCTION_27_29();
  Dictionary<>.place(on:)(v0, v1, v2);
  OUTLINED_FUNCTION_21_1();
}

void sub_242B78404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Dictionary<>.place(on:)(a1, a2, *(_QWORD *)(a3 - 8));
}

void sub_242B7840C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  Dictionary<>.placed(on:)();
  *a1 = v2;
}

void sub_242B78444(unint64_t a1, uint64_t a2)
{
  char isClassOrObjCExistentialType;
  uint64_t v5;

  isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = a2 & 0xFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0)
      v5 = a2;
    if (*(_QWORD *)(v5 + 16) > a1)
    {
      OUTLINED_FUNCTION_1_0();
      return;
    }
  }
  __break(1u);
}

uint64_t dispatch thunk of _ComputeDevicePlaceable.place(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of _ComputeDevicePlaceable.placed(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for ComputeDevice(uint64_t a1)
{
  uint64_t result;

  __swift_destroy_boxed_opaque_existential_1(a1);
  result = *(_QWORD *)(a1 + 40);
  if ((unint64_t)(result - 1) >= 2)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ComputeDevice(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 40);
  if ((unint64_t)(v5 - 1) >= 2)
    v5 = swift_unknownObjectRetain();
  *(_QWORD *)(a1 + 40) = v5;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ComputeDevice(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = (_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = v5 - 1;
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 2)
  {
    if (v6 >= 2)
    {
      *v4 = v5;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_242A929A8(a1 + 40, &qword_257228D40);
      *v4 = *(_QWORD *)(a2 + 40);
    }
  }
  else
  {
    *v4 = v5;
    if (v6 >= 2)
      swift_unknownObjectRetain();
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy52_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ComputeDevice(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = (_QWORD *)(a1 + 40);
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 2)
  {
    if ((unint64_t)(v5 - 1) >= 2)
    {
      *v6 = v5;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
    sub_242A929A8(a1 + 40, &qword_257228D40);
  }
  *v6 = v5;
LABEL_6:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComputeDevice(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 52))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComputeDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 52) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ComputeDevice()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for ComputeDevice.DeviceTargetSet()
{
  OUTLINED_FUNCTION_22_4();
}

unint64_t sub_242B7872C(unint64_t *a1)
{
  unint64_t result;
  int v2;

  result = *a1;
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_unknownObjectRelease();
  return result;
}

void sub_242B7874C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 1 < 0)
    v3 = swift_unknownObjectRetain();
  *a1 = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t *sub_242B78788(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;

  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  else
    v4 = *a1;
  v5 = v4 - 1;
  v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v3 = *a2;
  v7 = v3 - 1;
  if (v5 < 0)
  {
    if (v7 < 0)
    {
      *a1 = v6;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v6;
    if (v7 < 0)
      swift_unknownObjectRetain();
  }
  return a1;
}

unint64_t *sub_242B7881C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  v4 = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = v3;
  v5 = *a2;
  if (v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *a1 = v5;
      swift_unknownObjectRelease();
      return a1;
    }
    swift_unknownObjectRelease();
  }
  *a1 = v5;
  return a1;
}

uint64_t sub_242B78880(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 1;
  if (v5 >= 3)
    return v6;
  else
    return 0;
}

uint64_t sub_242B788E8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_242B78938(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_242B7895C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2)
LABEL_5:
    *result = a2;
  return result;
}

void type metadata accessor for ComputeDevice.Kind()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for BNNSTarget()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for EspressoTarget()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for MPSGraphTarget()
{
  OUTLINED_FUNCTION_22_4();
}

unint64_t sub_242B789B8()
{
  unint64_t result;

  result = qword_257228D48;
  if (!qword_257228D48)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58A7C, &unk_251389828);
    atomic_store(result, (unint64_t *)&qword_257228D48);
  }
  return result;
}

unint64_t sub_242B789F8()
{
  unint64_t result;

  result = qword_257228D50;
  if (!qword_257228D50)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58B3C, &unk_251389790);
    atomic_store(result, (unint64_t *)&qword_257228D50);
  }
  return result;
}

unint64_t sub_242B78A38()
{
  unint64_t result;

  result = qword_257228D58;
  if (!qword_257228D58)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58B0C, &unk_251389790);
    atomic_store(result, (unint64_t *)&qword_257228D58);
  }
  return result;
}

unint64_t sub_242B78A78()
{
  unint64_t result;

  result = qword_257228D60;
  if (!qword_257228D60)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58B64, &unk_251389790);
    atomic_store(result, (unint64_t *)&qword_257228D60);
  }
  return result;
}

unint64_t sub_242B78AB8()
{
  unint64_t result;

  result = qword_257228D68;
  if (!qword_257228D68)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58B9C, &unk_251389790);
    atomic_store(result, (unint64_t *)&qword_257228D68);
  }
  return result;
}

double OUTLINED_FUNCTION_0_73()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)v0 = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_62()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_3_56@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

void OUTLINED_FUNCTION_4_53()
{
  sub_242A59170();
}

uint64_t OUTLINED_FUNCTION_8_39()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_11_40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242B76988(a1, v4, v2, v3, v1);
}

BOOL OUTLINED_FUNCTION_13_43()
{
  void *v0;

  return MPSSupportsMTLDevice(v0);
}

uint64_t OUTLINED_FUNCTION_15_35()
{
  return 0;
}

id OUTLINED_FUNCTION_20_36(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 1006);
}

uint64_t OUTLINED_FUNCTION_22_27()
{
  uint64_t v0;

  return sub_242AD25CC(v0);
}

uint64_t OUTLINED_FUNCTION_23_33()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_26_36()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_27_29()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_28_34()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_29_26()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_31_35()
{
  return swift_unknownObjectRetain();
}

unint64_t sub_242B78C7C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_4_6();
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4AF8];
  v3 = v2 + 16;
  v4 = OUTLINED_FUNCTION_4_6();
  *(_QWORD *)(v4 + 16) = MEMORY[0x24BEE4B00];
  v76 = v4 + 16;
  v5 = v0[11];
  if (v5 >> 62)
    goto LABEL_78;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_74();
  while (2)
  {
    v77 = v2;
    v78 = (_QWORD *)v4;
    v85 = (_QWORD *)v3;
    if (v6)
    {
      if (v6 >= 1)
      {
        v4 = 0;
        v7 = v5 & 0xC000000000000001;
        v79 = v5 & 0xC000000000000001;
        v82 = v5;
        v83 = v1;
        v80 = v6;
        while (1)
        {
          if (v7)
          {
            v8 = MEMORY[0x2494EC84C](v4, v5);
          }
          else
          {
            v8 = *(_QWORD *)(v5 + 8 * v4 + 32);
            swift_retain();
          }
          sub_242BC97A8();
          if (!v9)
            break;
          sub_242B796C8(v9, v10, 0, 1, v1, v2, v78);
          swift_release();
          swift_unknownObjectRelease();
LABEL_30:
          if (v6 == ++v4)
          {
            OUTLINED_FUNCTION_34();
            v4 = (uint64_t)v78;
            goto LABEL_33;
          }
        }
        v5 = v1[13];
        v11 = v1[14];
        OUTLINED_FUNCTION_6_57();
        if (*(_QWORD *)(v11 + 16) && (v13 = OUTLINED_FUNCTION_8_40(v12), (v14 & 1) != 0))
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v13);
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_73;
          if (v15 >= *(_QWORD *)(v5 + 16))
            goto LABEL_74;
        }
        else
        {
          OUTLINED_FUNCTION_4_0();
          v5 = v1[17];
          v16 = v1[18];
          OUTLINED_FUNCTION_6_57();
          if (!*(_QWORD *)(v16 + 16) || (v18 = OUTLINED_FUNCTION_8_40(v17), (v19 & 1) == 0))
          {
            OUTLINED_FUNCTION_4_0();
            OUTLINED_FUNCTION_6_57();
            v21 = v23;
            v22 = v24;
            goto LABEL_22;
          }
          v15 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v18);
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_76;
          if (v15 >= *(_QWORD *)(v5 + 16))
          {
LABEL_77:
            __break(1u);
LABEL_78:
            OUTLINED_FUNCTION_74();
            v6 = sub_242C48FC8();
            continue;
          }
        }
        v20 = v5 + 16 * v15;
        v21 = *(_QWORD *)(v20 + 32);
        v22 = *(_QWORD *)(v20 + 40);
        OUTLINED_FUNCTION_37_0();
        OUTLINED_FUNCTION_4_0();
LABEL_22:
        v25 = *(_QWORD *)(v8 + 152);
        if (sub_242BC9B94() < 3)
          __asm { BR              X9 }
        sub_242C480E0();
        OUTLINED_FUNCTION_37_0();
        OUTLINED_FUNCTION_0_3();
        v26 = *(_QWORD *)v3;
        OUTLINED_FUNCTION_37_0();
        v27 = OUTLINED_FUNCTION_4_54();
        sub_242B7B338(v27, v28, v29, v30, v31, v32);
        sub_242C480E0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_14_31();
          v26 = v42;
        }
        v34 = *(_QWORD *)(v26 + 16);
        if (v34 >= *(_QWORD *)(v26 + 24) >> 1)
        {
          OUTLINED_FUNCTION_14_31();
          v26 = v43;
        }
        *(_QWORD *)(v26 + 16) = v34 + 1;
        v35 = v26 + 104 * v34;
        *(_QWORD *)(v35 + 32) = v21;
        *(_QWORD *)(v35 + 40) = v22;
        *(_QWORD *)(v35 + 48) = v25;
        *(_QWORD *)(v35 + 56) = v21;
        *(_QWORD *)(v35 + 64) = v22;
        *(_QWORD *)(v35 + 72) = 0;
        *(_QWORD *)(v35 + 80) = 0;
        *(_BYTE *)(v35 + 88) = 0;
        *(_WORD *)(v35 + 96) = 257;
        *(_BYTE *)(v35 + 98) = 1;
        *(_QWORD *)(v35 + 104) = 0x636170736F6E6F6DLL;
        *(_QWORD *)(v35 + 112) = 0xE900000000000065;
        *(_QWORD *)(v35 + 120) = 10;
        *(_BYTE *)(v35 + 128) = 3;
        v3 = (uint64_t)v85;
        *v85 = v26;
        swift_endAccess();
        swift_bridgeObjectRelease();
        v36 = OUTLINED_FUNCTION_4_54();
        sub_242B7B3B0(v36, v37, v38, v39, v40, v41);
        swift_release();
        swift_bridgeObjectRelease();
        v2 = v77;
        v5 = v82;
        v1 = v83;
        v7 = v79;
        v6 = v80;
        goto LABEL_30;
      }
      __break(1u);
LABEL_82:
      __break(1u);
      JUMPOUT(0x242B79694);
    }
    break;
  }
  OUTLINED_FUNCTION_34();
LABEL_33:
  v44 = v1[15];
  v45 = *(_QWORD *)(v44 + 16);
  if (v45)
  {
    OUTLINED_FUNCTION_28_1();
    v46 = 0;
    v47 = v1;
    v48 = (uint64_t *)(v44 + 40);
    do
    {
      v5 = *(v48 - 1);
      v49 = *v48;
      v50 = swift_unknownObjectRetain();
      sub_242B796C8(v50, v49, v46, 0, v47, v2, (_QWORD *)v4);
      swift_unknownObjectRelease();
      v48 += 2;
      ++v46;
    }
    while (v45 != v46);
    OUTLINED_FUNCTION_4_0();
    v3 = (uint64_t)v85;
    v1 = v47;
  }
  v51 = v1[19];
  if (v51 >> 62)
  {
    OUTLINED_FUNCTION_28_1();
    v52 = sub_242C48FC8();
    if (v52)
      goto LABEL_39;
  }
  else
  {
    v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_28_1();
    if (v52)
    {
LABEL_39:
      if (v52 < 1)
        goto LABEL_82;
      v53 = 0;
      v5 = v51 & 0xC000000000000001;
      do
      {
        if (v5)
        {
          v54 = MEMORY[0x2494EC84C](v53, v51);
        }
        else
        {
          v54 = *(_QWORD *)(v51 + 8 * v53 + 32);
          swift_retain();
        }
        ++v53;
        sub_242B79F90(v54, (uint64_t)v1, v2, v4);
        swift_release();
      }
      while (v52 != v53);
    }
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_3();
  v55 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v55)
  {
    v56 = sub_242C480E0() + 64;
    do
    {
      v84 = v55;
      v57 = *(_QWORD *)(v56 - 24);
      v59 = *(_QWORD *)(v56 - 16);
      v58 = *(_QWORD *)(v56 - 8);
      v60 = *(_QWORD *)v56;
      v61 = *(_QWORD *)(v56 + 8);
      v86 = *(_QWORD *)(v56 + 16);
      v62 = *(_BYTE *)(v56 + 24);
      sub_242C480E0();
      v81 = v58;
      sub_242B7B338(v59, v58, v60, v61, v86, v62);
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_1_61();
      sub_242C480E0();
      sub_242C48314();
      sub_242B7A7FC();
      sub_242C48314();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_5_56();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_44_0();
      sub_242B7AB40();
      sub_242C48314();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_5_56();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_1_61();
      v5 = v57;
      OUTLINED_FUNCTION_5_56();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_34();
      sub_242B7B3B0(v59, v81, v60, v61, v86, v62);
      swift_bridgeObjectRelease();
      v56 += 104;
      v55 = v84 - 1;
    }
    while (v84 != 1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1_61();
  OUTLINED_FUNCTION_0_3();
  v63 = *(_QWORD *)v76;
  v3 = *(_QWORD *)v76 + 64;
  v64 = 1 << *(_BYTE *)(*(_QWORD *)v76 + 32);
  v65 = -1;
  if (v64 < 64)
    v65 = ~(-1 << v64);
  v66 = v65 & *(_QWORD *)(*(_QWORD *)v76 + 64);
  v1 = (_QWORD *)((unint64_t)(v64 + 63) >> 6);
  OUTLINED_FUNCTION_44_0();
  v4 = 0;
  v2 = 24;
  if (v66)
  {
LABEL_52:
    v67 = __clz(__rbit64(v66));
    v66 &= v66 - 1;
    v68 = v67 | (v4 << 6);
    goto LABEL_69;
  }
  while (1)
  {
    v69 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    if (v69 >= (uint64_t)v1)
      goto LABEL_71;
    v70 = *(_QWORD *)(v3 + 8 * v69);
    ++v4;
    if (!v70)
    {
      v4 = v69 + 1;
      if (v69 + 1 >= (uint64_t)v1)
        goto LABEL_71;
      v70 = *(_QWORD *)(v3 + 8 * v4);
      if (!v70)
      {
        v4 = v69 + 2;
        if (v69 + 2 >= (uint64_t)v1)
          goto LABEL_71;
        v70 = *(_QWORD *)(v3 + 8 * v4);
        if (!v70)
        {
          v4 = v69 + 3;
          if (v69 + 3 >= (uint64_t)v1)
            goto LABEL_71;
          v70 = *(_QWORD *)(v3 + 8 * v4);
          if (!v70)
            break;
        }
      }
    }
LABEL_68:
    v66 = (v70 - 1) & v70;
    v68 = __clz(__rbit64(v70)) + (v4 << 6);
LABEL_69:
    v72 = (uint64_t *)(*(_QWORD *)(v63 + 56) + 24 * v68);
    v73 = *v72;
    v5 = v72[1];
    v74 = v72[2];
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_1_61();
    sub_242B7A524(v73, v5, v74);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_1_61();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    if (v66)
      goto LABEL_52;
  }
  v71 = v69 + 4;
  if (v71 < (uint64_t)v1)
  {
    v70 = *(_QWORD *)(v3 + 8 * v71);
    if (!v70)
    {
      while (1)
      {
        v4 = v71 + 1;
        if (__OFADD__(v71, 1))
          break;
        if (v4 >= (uint64_t)v1)
          goto LABEL_71;
        v70 = *(_QWORD *)(v3 + 8 * v4);
        ++v71;
        if (v70)
          goto LABEL_68;
      }
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    v4 = v71;
    goto LABEL_68;
  }
LABEL_71:
  swift_release();
  OUTLINED_FUNCTION_1_61();
  swift_release();
  swift_release();
  return 0xD000000000000042;
}

uint64_t sub_242B796C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  void (*v59)(_BYTE *, _QWORD);
  uint64_t v60;
  void (*v61)(_BYTE *, _QWORD);
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v82;
  uint64_t ObjectType;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _BYTE v87[32];
  _QWORD *v88;

  ObjectType = swift_getObjectType();
  v12 = sub_242BD01E4(ObjectType, a2);
  v14 = v13;
  v15 = a4 & 1;
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  v16 = swift_unknownObjectRetain();
  sub_242B7B338(v16, a2, a3, v15, 0, 1);
  sub_242C480E0();
  sub_242A5DB20();
  v17 = *(_QWORD *)(*(_QWORD *)(a6 + 16) + 16);
  sub_242A5DE84();
  v18 = *(_QWORD *)(a6 + 16);
  *(_QWORD *)(v18 + 16) = v17 + 1;
  v19 = v18 + 104 * v17;
  v75 = a3;
  v76 = v12;
  *(_QWORD *)(v19 + 32) = v12;
  *(_QWORD *)(v19 + 40) = v14;
  v82 = v14;
  *(_QWORD *)(v19 + 48) = a1;
  *(_QWORD *)(v19 + 56) = a2;
  *(_QWORD *)(v19 + 64) = a3;
  *(_QWORD *)(v19 + 72) = v15;
  v73 = v15;
  *(_QWORD *)(v19 + 80) = 0;
  *(_BYTE *)(v19 + 88) = 1;
  *(_WORD *)(v19 + 96) = 257;
  *(_BYTE *)(v19 + 98) = 0;
  *(_QWORD *)(v19 + 104) = 0x636170736F6E6F6DLL;
  *(_QWORD *)(v19 + 112) = 0xE900000000000065;
  *(_QWORD *)(v19 + 120) = 10;
  *(_BYTE *)(v19 + 128) = 3;
  swift_endAccess();
  v74 = a2;
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  if (v20 >> 62)
    goto LABEL_55;
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v21)
  {
    v22 = a7 + 2;
    v79 = v20;
    v80 = v20 & 0xC000000000000001;
    v23 = 4;
    v78 = v21;
    a7 += 2;
    while (1)
    {
      if (v80)
      {
        v24 = MEMORY[0x2494EC84C](v23 - 4, v20);
      }
      else
      {
        v24 = *(_QWORD *)(v20 + 8 * v23);
        swift_retain();
      }
      if (__OFADD__(v23 - 4, 1))
        break;
      sub_242BC97A8();
      v84 = v23 - 3;
      if (v26)
      {
        v27 = v25;
        v28 = swift_getObjectType();
        v29 = sub_242BD01E4(v28, v27);
        v20 = v30;
        swift_unknownObjectRelease();
        goto LABEL_21;
      }
      v31 = a5[13];
      v20 = a5[14];
      sub_242BC9724();
      if (*(_QWORD *)(v20 + 16))
      {
        v34 = sub_242A61310(v32, v33);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v34);
          if ((v36 & 0x8000000000000000) != 0)
            goto LABEL_51;
          if (v36 >= *(_QWORD *)(v31 + 16))
            goto LABEL_52;
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      v31 = a5[17];
      v20 = a5[18];
      sub_242BC9724();
      if (*(_QWORD *)(v20 + 16))
      {
        v39 = sub_242A61310(v37, v38);
        if ((v40 & 1) != 0)
        {
          v36 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v39);
          if ((v36 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v36 >= *(_QWORD *)(v31 + 16))
            goto LABEL_54;
LABEL_19:
          v41 = v31 + 16 * v36;
          v29 = *(_QWORD *)(v41 + 32);
          v20 = *(_QWORD *)(v41 + 40);
          sub_242C480E0();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
      sub_242BC9724();
      v29 = v42;
      v20 = v43;
LABEL_21:
      swift_beginAccess();
      if (*(_QWORD *)(*v22 + 16))
      {
        sub_242C480E0();
        sub_242A61310(v29, v20);
        if ((v44 & 1) != 0)
        {
          swift_endAccess();
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_beginAccess();
      sub_242C480E0();
      swift_isUniquelyReferenced_nonNull_native();
      v88 = (_QWORD *)*v22;
      v45 = v88;
      *v22 = 0x8000000000000000;
      v46 = sub_242A61310(v29, v20);
      if (__OFADD__(v45[2], (v47 & 1) == 0))
        goto LABEL_49;
      v48 = v46;
      v49 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257222988);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v50 = sub_242A61310(v29, v20);
        if ((v49 & 1) != (v51 & 1))
        {
LABEL_58:
          sub_242C492EC();
          __break(1u);
          JUMPOUT(0x242B79E38);
        }
        v48 = v50;
      }
      v52 = v88;
      if ((v49 & 1) != 0)
      {
        v53 = (uint64_t *)(v88[7] + 24 * v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v53 = v29;
        v53[1] = v20;
        v53[2] = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v88[(v48 >> 6) + 8] |= 1 << v48;
        v54 = (uint64_t *)(v52[6] + 16 * v48);
        *v54 = v29;
        v54[1] = v20;
        v55 = (uint64_t *)(v52[7] + 24 * v48);
        *v55 = v29;
        v55[1] = v20;
        v55[2] = MEMORY[0x24BEE4AF8];
        v56 = v52[2];
        v57 = __OFADD__(v56, 1);
        v58 = v56 + 1;
        if (v57)
          goto LABEL_50;
        v52[2] = v58;
        sub_242C480E0();
      }
      v22 = a7;
      *a7 = v52;
      swift_bridgeObjectRelease();
      swift_endAccess();
LABEL_34:
      swift_beginAccess();
      sub_242A99A10();
      v61 = v59;
      if (*(_QWORD *)(v60 + 8))
      {
        v62 = v60;
        v63 = 0xE400000000000000;
        v64 = 909209702;
        switch(*(_BYTE *)(v24 + 160))
        {
          case 2:
            v63 = 0xE500000000000000;
            v64 = 0x3233746E69;
            goto LABEL_41;
          case 3:
            v63 = 0xE500000000000000;
            v64 = 0x3436746E69;
            goto LABEL_41;
          case 8:
            goto LABEL_41;
          case 0xA:
            v64 = 842231910;
            goto LABEL_41;
          case 0xC:
            v64 = 1819242338;
LABEL_41:
            v85 = v64;
            v86 = v63;
            v65 = sub_242C480E0();
            MEMORY[0x2494EC0FC](v65, MEMORY[0x24BEE1768]);
            swift_bridgeObjectRelease();
            sub_242C48314();
            swift_bridgeObjectRelease();
            v66 = *(_QWORD *)(v62 + 16);
            sub_242C480E0();
            sub_242C480E0();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v62 + 16) = v66;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_242A5EDE8();
              v66 = v70;
              *(_QWORD *)(v62 + 16) = v70;
            }
            v68 = *(_QWORD *)(v66 + 16);
            if (v68 >= *(_QWORD *)(v66 + 24) >> 1)
            {
              sub_242A5EDE8();
              v66 = v71;
              *(_QWORD *)(v62 + 16) = v71;
            }
            *(_QWORD *)(v66 + 16) = v68 + 1;
            v69 = (_QWORD *)(v66 + 32 * v68);
            v69[4] = v76;
            v69[5] = v82;
            v69[6] = v85;
            v69[7] = v86;
            v61(v87, 0);
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_release();
            v22 = a7;
            goto LABEL_46;
          default:
            sub_242C48F5C();
            __break(1u);
            goto LABEL_58;
        }
      }
      v59(v87, 0);
      swift_endAccess();
      swift_release();
LABEL_46:
      swift_bridgeObjectRelease();
      ++v23;
      v20 = v79;
      if (v84 == v78)
        goto LABEL_56;
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    sub_242C480E0();
    v21 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
LABEL_56:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242B7B3B0(a1, v74, v75, v73, 0, 1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B79E64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = 909209702;
  switch(*(_BYTE *)(a1 + 160))
  {
    case 2:
      v1 = 0x3233746E69;
      goto LABEL_6;
    case 3:
      v1 = 0x3436746E69;
      goto LABEL_6;
    case 8:
      goto LABEL_6;
    case 0xA:
      v1 = 842231910;
      goto LABEL_6;
    case 0xC:
      v1 = 1819242338;
LABEL_6:
      v4 = v1;
      v2 = sub_242C480E0();
      MEMORY[0x2494EC0FC](v2, MEMORY[0x24BEE1768]);
      swift_bridgeObjectRelease();
      sub_242C48314();
      swift_bridgeObjectRelease();
      result = v4;
      break;
    default:
      result = sub_242C48F5C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_242B79F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  void (*v39)(_BYTE *, _QWORD);
  _BYTE v40[32];

  v6 = sub_242BAC6E4();
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 152);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  v10 = sub_242C480E0();
  sub_242B7B338(v10, v6, v8, 0, 0, 2);
  sub_242C480E0();
  sub_242A5DB20();
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 16);
  sub_242A5DE84();
  v12 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v12 + 16) = v11 + 1;
  v13 = v12 + 104 * v11;
  *(_QWORD *)(v13 + 32) = v6;
  *(_QWORD *)(v13 + 40) = v8;
  *(_QWORD *)(v13 + 48) = v9;
  *(_QWORD *)(v13 + 56) = v6;
  *(_QWORD *)(v13 + 72) = 0;
  *(_QWORD *)(v13 + 80) = 0;
  *(_QWORD *)(v13 + 64) = v8;
  *(_BYTE *)(v13 + 88) = 2;
  *(_WORD *)(v13 + 96) = 257;
  *(_BYTE *)(v13 + 98) = 1;
  *(_QWORD *)(v13 + 104) = 0x636170736F6E6F6DLL;
  *(_QWORD *)(v13 + 112) = 0xE900000000000065;
  *(_QWORD *)(v13 + 120) = 10;
  *(_BYTE *)(v13 + 128) = 3;
  swift_endAccess();
  sub_242BC97A8();
  if (v15)
  {
    v16 = v14;
    ObjectType = swift_getObjectType();
    v18 = sub_242BD01E4(ObjectType, v16);
    if (v18 == v6 && v19 == v8)
    {
      swift_bridgeObjectRelease();
      sub_242B7B3B0(v9, v6, v8, 0, 0, 2);
      swift_bridgeObjectRelease_n();
LABEL_17:
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v21 = v18;
    v22 = v19;
    if ((sub_242C4925C() & 1) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      sub_242B7B3B0(v9, v6, v8, 0, 0, 2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_beginAccess();
    v23 = *(_QWORD *)(a4 + 16);
    sub_242C480E0();
    sub_242A9E8B8(v21, v22, v23);
    v25 = v24;
    v27 = v26;
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_242A9CD04(v25, v27);
    if (!v27)
    {
      swift_beginAccess();
      sub_242C480E0();
      sub_242B8C9C8();
      swift_endAccess();
    }
    swift_beginAccess();
    sub_242C480E0();
    sub_242A99A10();
    if (!*(_QWORD *)(v29 + 8))
    {
      v28(v40, 0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    v30 = v29;
    v39 = v28;
    v37 = sub_242B79E64(a1);
    v32 = v31;
    sub_242C480E0();
    sub_242C480E0();
    sub_242A5DAC4();
    v33 = *(_QWORD *)(*(_QWORD *)(v30 + 16) + 16);
    sub_242A5DE20();
    v34 = *(_QWORD *)(v30 + 16);
    *(_QWORD *)(v34 + 16) = v33 + 1;
    v35 = (_QWORD *)(v34 + 32 * v33);
    v35[4] = v6;
    v35[5] = v8;
    v35[6] = v37;
    v35[7] = v32;
    v39(v40, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_242B7B3B0(v9, v6, v8, 0, 0, 2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_242B7B3B0(v9, v6, v8, 0, 0, 2);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B7A394()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_242C480E0();
  sub_242C48314();
  sub_242B7A7FC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C480E0();
  sub_242B7AB40();
  sub_242C48314();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  return v2;
}

uint64_t sub_242B7A524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  sub_242C480E0();
  v5 = 0;
  do
  {
    v6 = *(_QWORD *)(a3 + v5 + 56);
    sub_242C480E0();
    sub_242C480E0();
    if (v5)
      sub_242C48314();
    sub_242C480E0();
    sub_242C48314();
    sub_242C48314();
    sub_242C48314();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      sub_242C48314();
      swift_bridgeObjectRelease();
    }
    sub_242C48314();
    sub_242C48314();
    v5 += 32;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_242B7A6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_242BC9B94();
  type metadata accessor for TensorHandle();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  swift_retain();
  sub_242BC995C();
  v15[1] = v11;
  if (v10 == 1)
  {
    Tensor.scalar<A>(as:)(a1, a3, a4, (uint64_t)v9);
    swift_release();
    return sub_242C48278();
  }
  else
  {
    v13 = Tensor.scalars<A>(as:)(a1, a3, a4);
    swift_release();
    v14 = MEMORY[0x2494EC0FC](v13, a3);
    swift_bridgeObjectRelease();
    return v14;
  }
}

uint64_t sub_242B7A7F0()
{
  uint64_t *v0;

  return sub_242B7A524(*v0, v0[1], v0[2]);
}

uint64_t sub_242B7A7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  if (!*(_BYTE *)(v0 + 56))
  {
    sub_242C480E0();
    sub_242C480E0();
    if (v3)
    {
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      sub_242C48314();
LABEL_8:
      swift_bridgeObjectRelease();
      sub_242C48314();
      return 60;
    }
LABEL_7:
    sub_242C48314();
    goto LABEL_8;
  }
  v5 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v0 + 56) != 1)
  {
    sub_242B7B338(v5, v2, v1, v4, v3, 2);
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242C48C38();
    swift_bridgeObjectRelease();
    MEMORY[0x2494EC0FC](v5, MEMORY[0x24BEE1768]);
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v6 = swift_unknownObjectRetain();
  v7 = sub_242B7AA3C(v6, v2, v1, v4 & 1);
  sub_242B7B3B0(v5, v2, v1, v4, v3, 1);
  return v7;
}

uint64_t sub_242B7AA3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  if ((a4 & 1) == 0)
  {
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242C48314();
    swift_bridgeObjectRelease();
  }
  sub_242C48314();
  return 60;
}

uint64_t sub_242B7AB40()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  sub_242B7ADDC(*v0);
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242B7AEB8(v0[2]);
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C48314();
  swift_bridgeObjectRelease();
  v1 = v0[32];
  sub_242B7B41C((uint64_t)v0);
  sub_242C48C38();
  swift_bridgeObjectRelease();
  sub_242B7AEB8(v1);
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C480E0();
  sub_242C48314();
  sub_242B7B444((uint64_t)v0);
  sub_242C48314();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242B7B444((uint64_t)v0);
  sub_242C48314();
  swift_bridgeObjectRelease();
  return 0x223D657061687320;
}

uint64_t sub_242B7ADDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B7AE08 + 4 * byte_242C58CDB[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_242B7AE08()
{
  return 1818326639;
}

uint64_t sub_242B7AE14()
{
  return 0x657261757173;
}

uint64_t sub_242B7AE28()
{
  return 7892834;
}

uint64_t sub_242B7AE38()
{
  return 0x656C63726963;
}

uint64_t sub_242B7AE4C()
{
  return 0x6E6F67796C6F70;
}

uint64_t sub_242B7AE64()
{
  return 0x657370696C6C65;
}

uint64_t sub_242B7AE7C()
{
  return 0x656C676E61697274;
}

uint64_t sub_242B7AE94(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64656C6C6966;
  else
    return 0;
}

uint64_t sub_242B7AEB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B7AEF0 + 4 * byte_242C58CE3[a1]))(0x617267746867696CLL, 0xE900000000000079);
}

uint64_t sub_242B7AEF0()
{
  return 0x756C62746867696CLL;
}

uint64_t sub_242B7AF0C()
{
  return 0x657267746867696CLL;
}

uint64_t sub_242B7AF28()
{
  return 0x6B63616C62;
}

uint64_t sub_242B7AF3C()
{
  return 0x6574696877;
}

uint64_t sub_242B7AF50()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_242B7AFA0()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_242B7AFE8()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_242B7B030()
{
  return sub_242B7AB40();
}

void sub_242B7B068(char *a1, char *a2)
{
  sub_242B3F9DC(*a1, *a2);
}

void sub_242B7B074()
{
  sub_242C44A20();
}

uint64_t sub_242B7B07C()
{
  return sub_242A5CC98();
}

void sub_242B7B084()
{
  sub_242BA93F0();
}

uint64_t sub_242B7B08C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242B7AF50();
  *a1 = result;
  return result;
}

void sub_242B7B0B8(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_242B7AE94(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242B7B0DC(char *a1)
{
  sub_242B3FA48(*a1);
}

void sub_242B7B0E8()
{
  unsigned __int8 *v0;

  sub_242C44A2C(*v0);
}

void sub_242B7B0F0(uint64_t a1)
{
  char *v1;

  sub_242A5CCD4(a1, *v1);
}

void sub_242B7B0F8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA943C(a1, *v1);
}

uint64_t sub_242B7B100@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242B7AFA0();
  *a1 = result;
  return result;
}

void sub_242B7B12C(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_242B7ADDC(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242B7B150(char *a1)
{
  sub_242B3E9E0(*a1);
}

void sub_242B7B15C()
{
  unsigned __int8 *v0;

  sub_242C44A38(*v0);
}

void sub_242B7B164(uint64_t a1)
{
  char *v1;

  sub_242A5C3B0(a1, *v1);
}

void sub_242B7B16C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA8E40(a1, *v1);
}

uint64_t sub_242B7B174@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242B7AFE8();
  *a1 = result;
  return result;
}

void sub_242B7B1A0(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_242B7AEB8(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242B7B1C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  _QWORD v6[2];

  sub_242C48C38();
  swift_bridgeObjectRelease();
  strcpy((char *)v6, " fontcolor=\"");
  sub_242B7AEB8(a4);
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C480E0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  return v6[0];
}

uint64_t sub_242B7B304()
{
  uint64_t v0;

  return sub_242B7B1C4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_242B7B314()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242B7B338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2)
  {
    sub_242C480E0();
    return sub_242C480E0();
  }
  if (a6 != 1)
  {
    if (a6)
      return result;
    sub_242C480E0();
    sub_242C480E0();
    return sub_242C480E0();
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_242B7B3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (a6 != 1)
  {
    if (a6)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_242B7B41C(uint64_t a1)
{
  sub_242C480E0();
  return a1;
}

uint64_t sub_242B7B444(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for DotNodeDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_242B7B3B0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DotNodeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_242C480E0();
  sub_242B7B338(v5, v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for DotNodeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_BYTE *)(a2 + 56);
  sub_242B7B338(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v15 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v9;
  sub_242B7B3B0(v10, v11, v12, v13, v14, v15);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

void *__swift_memcpy97_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t assignWithTake for DotNodeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 48) = v5;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v6;
  sub_242B7B3B0(v7, v8, v9, v10, v11, v13);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  v14 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for DotNodeDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DotNodeDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DotNodeDescriptor()
{
  return &type metadata for DotNodeDescriptor;
}

uint64_t destroy for DotEdgeDescriptor()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14NeuralNetworks17DotEdgeDescriptorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

_QWORD *assignWithCopy for DotEdgeDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DotEdgeDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DotEdgeDescriptor()
{
  return &type metadata for DotEdgeDescriptor;
}

uint64_t destroy for TensorOperationID()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DotNodeDescriptor.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for DotNodeDescriptor.Style(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for DotNodeDescriptor.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DotNodeDescriptor.Style(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DotNodeDescriptor.Style(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DotNodeDescriptor.Style()
{
  return &type metadata for DotNodeDescriptor.Style;
}

uint64_t destroy for DotNodeDescriptor.Kind(uint64_t a1)
{
  return sub_242B7B3B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for DotNodeDescriptor.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_242B7B338(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for DotNodeDescriptor.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_242B7B338(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_242B7B3B0(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DotNodeDescriptor.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_242B7B3B0(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DotNodeDescriptor.Kind(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DotNodeDescriptor.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_242B7BC88(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_242B7BC90(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DotNodeDescriptor.Kind()
{
  return &type metadata for DotNodeDescriptor.Kind;
}

uint64_t initializeWithCopy for DotFontDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for DotFontDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DotFontDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DotFontDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DotFontDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DotFontDescriptor()
{
  return &type metadata for DotFontDescriptor;
}

uint64_t storeEnumTagSinglePayload for DotColor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_242B7BE64 + 4 * byte_242C58CED[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_242B7BE98 + 4 * byte_242C58CE8[v4]))();
}

uint64_t sub_242B7BE98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B7BEA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B7BEA8);
  return result;
}

uint64_t sub_242B7BEB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B7BEBCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_242B7BEC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B7BEC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DotColor()
{
  return &type metadata for DotColor;
}

uint64_t storeEnumTagSinglePayload for DotNodeStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242B7BF30 + 4 * byte_242C58CF7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242B7BF64 + 4 * byte_242C58CF2[v4]))();
}

uint64_t sub_242B7BF64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B7BF6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B7BF74);
  return result;
}

uint64_t sub_242B7BF80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B7BF88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242B7BF8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B7BF94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DotNodeStyle()
{
  return &type metadata for DotNodeStyle;
}

uint64_t storeEnumTagSinglePayload for DotNodeShape(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_242B7BFFC + 4 * byte_242C58D01[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_242B7C030 + 4 * byte_242C58CFC[v4]))();
}

uint64_t sub_242B7C030(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B7C038(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B7C040);
  return result;
}

uint64_t sub_242B7C04C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B7C054);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_242B7C058(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B7C060(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DotNodeShape()
{
  return &type metadata for DotNodeShape;
}

unint64_t sub_242B7C080()
{
  unint64_t result;

  result = qword_257228D80;
  if (!qword_257228D80)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58E80, &type metadata for DotNodeShape);
    atomic_store(result, (unint64_t *)&qword_257228D80);
  }
  return result;
}

unint64_t sub_242B7C0C0()
{
  unint64_t result;

  result = qword_257228D88;
  if (!qword_257228D88)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58F20, &type metadata for DotNodeStyle);
    atomic_store(result, (unint64_t *)&qword_257228D88);
  }
  return result;
}

unint64_t sub_242B7C100()
{
  unint64_t result;

  result = qword_257228D90;
  if (!qword_257228D90)
  {
    result = MEMORY[0x2494EDE24](&unk_242C58FC0, &type metadata for DotColor);
    atomic_store(result, (unint64_t *)&qword_257228D90);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_61()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_4_54()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_56()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_6_57()
{
  sub_242BC9724();
}

unint64_t OUTLINED_FUNCTION_8_40(uint64_t a1)
{
  uint64_t v1;

  return sub_242A61310(a1, v1);
}

void OUTLINED_FUNCTION_14_31()
{
  sub_242A5EE04();
}

uint64_t Reshape.shape.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return sub_242C480E0();
}

NeuralNetworks::Reshape __swiftcall Reshape.init(_:)(NeuralNetworks::Reshape result)
{
  _QWORD *v1;

  *v1 = *(_QWORD *)result.shape.dimensions._rawValue;
  return result;
}

uint64_t Reshape.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5[2];

  v3 = *a1;
  v5[0] = *v2;
  v5[1] = v3;
  return Tensor.reshaped(to:)(v5, a2);
}

uint64_t sub_242B7C1DC()
{
  return sub_242C4934C();
}

uint64_t sub_242B7C200(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6570616873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242C4925C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242B7C27C()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242B7C2BC()
{
  return 0x6570616873;
}

uint64_t sub_242B7C2D8()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242B7C318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B7C200(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242B7C340()
{
  sub_242B7C460();
  return sub_242C494D8();
}

uint64_t sub_242B7C368()
{
  sub_242B7C460();
  return sub_242C494E4();
}

void Reshape.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228D98);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_58_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B7C460();
  sub_242C49478();
  sub_242AA0C3C();
  sub_242C49184();
  OUTLINED_FUNCTION_2_63(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_0_9();
}

unint64_t sub_242B7C460()
{
  unint64_t result;

  result = qword_257228DA0;
  if (!qword_257228DA0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C591A0, &type metadata for Reshape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228DA0);
  }
  return result;
}

void Reshape.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228DA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_58_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B7C460();
  sub_242C49448();
  if (!v2)
  {
    sub_242AA0CCC();
    sub_242C490D0();
    OUTLINED_FUNCTION_2_63(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *a2 = v7;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_0_9();
}

void sub_242B7C590(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  Reshape.init(from:)(a1, a2);
}

void sub_242B7C5A4(_QWORD *a1)
{
  Reshape.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Reshape()
{
  return &type metadata for Reshape;
}

uint64_t storeEnumTagSinglePayload for Reshape.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_242B7C608 + 4 * byte_242C59010[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_242B7C628 + 4 * byte_242C59015[v4]))();
}

_BYTE *sub_242B7C608(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_242B7C628(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242B7C630(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242B7C638(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242B7C640(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242B7C648(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Reshape.CodingKeys()
{
  return &type metadata for Reshape.CodingKeys;
}

unint64_t sub_242B7C668()
{
  unint64_t result;

  result = qword_257228E08;
  if (!qword_257228E08)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59178, &type metadata for Reshape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228E08);
  }
  return result;
}

unint64_t sub_242B7C6A8()
{
  unint64_t result;

  result = qword_257228E10;
  if (!qword_257228E10)
  {
    result = MEMORY[0x2494EDE24](&unk_242C590E8, &type metadata for Reshape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228E10);
  }
  return result;
}

unint64_t sub_242B7C6E8()
{
  unint64_t result;

  result = qword_257228E18;
  if (!qword_257228E18)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59110, &type metadata for Reshape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228E18);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_63@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_242B7C730(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v5 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v5 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_4_2();
  if ((a2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_6_3();
  v6 = *(id *)(a2 + 32);
  sub_242A5A5E8(v2[6]);
  sub_242AAB33C();
  v7 = (void *)OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_80();
  sub_242A5A5E8(v2[7]);
  v8 = (void *)OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_80();
  sub_242A5A5E8(v2[8]);
  v9 = (void *)OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_80();
  v11 = v2[3];
  v10 = v2[4];
  sub_242C480E0();
  v12 = sub_242B7CBDC((uint64_t)v6, (uint64_t)v7, (uint64_t)v8, (uint64_t)v9, v11, v10, a1);

  *(_QWORD *)(v5 + 32) = v12;
  sub_242C4856C();
  return v5;
}

uint64_t sub_242B7C864(void *a1, uint64_t a2)
{
  return sub_242B7C730(a1, a2);
}

uint64_t sub_242B7C878(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v30;

  v3 = v2;
  v5 = a1;
  v6 = *(_QWORD *)(v2[5] + 152);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v30 = MEMORY[0x24BEE4AF8];
    sub_242C480E0();
    sub_242AC31CC();
    v9 = 0;
    v8 = v30;
    v10 = *(_QWORD *)(v30 + 16);
    do
    {
      v11 = *(_QWORD *)(v6 + 8 * v9 + 32);
      if (v10 >= *(_QWORD *)(v30 + 24) >> 1)
        sub_242AC31CC();
      ++v9;
      *(_QWORD *)(v30 + 16) = v10 + 1;
      *(_DWORD *)(v30 + 4 * v10++ + 32) = v11;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    v5 = a1;
  }
  v12 = *(_QWORD *)(v8 + 16);
  if (v12 >> 61)
  {
    __break(1u);
LABEL_11:
    OUTLINED_FUNCTION_6_3();
  }
  v13 = MEMORY[0x2494EB790](v8 + 32, 4 * v12);
  v15 = v14;
  v16 = (void *)sub_242C47BD0();
  sub_242A69418(v13, v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v17 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v17 + 16) = xmmword_242C4BF60;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 32) = sub_242C4877C();
  sub_242C4856C();
  sub_242AAB33C();
  v18 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v5, sel_constantWithData_shape_dataType_, v16, v18, 536870944);

  v20 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v20 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_4_2();
  if ((a2 & 0xC000000000000001) != 0)
    goto LABEL_11;
  v21 = *(id *)(a2 + 32);
  sub_242A5A5E8(v3[6]);
  v22 = (void *)OUTLINED_FUNCTION_1_62();
  OUTLINED_FUNCTION_83();
  sub_242A5A5E8(v3[7]);
  v23 = (void *)OUTLINED_FUNCTION_1_62();
  OUTLINED_FUNCTION_83();
  sub_242A5A5E8(v3[8]);
  v24 = (void *)OUTLINED_FUNCTION_1_62();
  OUTLINED_FUNCTION_83();
  v25 = v3[3];
  v26 = v3[4];
  sub_242C480E0();
  v27 = sub_242B7CC74((uint64_t)v21, (uint64_t)v19, (uint64_t)v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v5);

  *(_QWORD *)(v20 + 32) = v27;
  sub_242C4856C();

  return v20;
}

uint64_t sub_242B7CB20(void *a1, uint64_t a2)
{
  return sub_242B7C878(a1, a2);
}

uint64_t sub_242B7CB34(uint64_t a1)
{
  uint64_t result;

  result = sub_242B7CB9C(&qword_2572281F8, (uint64_t (*)(uint64_t))type metadata accessor for SliceGradientOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B7CB68(uint64_t a1)
{
  uint64_t result;

  result = sub_242B7CB9C((unint64_t *)&qword_257224020, (uint64_t (*)(uint64_t))type metadata accessor for SliceOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B7CB9C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C62D44, v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_242B7CBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v12;
  id v13;

  v12 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a7, sel_sliceTensor_starts_ends_strides_name_, a1, a2, a3, a4, v12);

  return v13;
}

id sub_242B7CC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v14;
  id v15;

  v14 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a8, sel_sliceGradientTensor_fwdInShapeTensor_starts_ends_strides_name_, a1, a2, a3, a4, a5, v14);

  return v15;
}

uint64_t OUTLINED_FUNCTION_1_62()
{
  return sub_242C4853C();
}

unint64_t sub_242B7CD20(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result)
      return sub_242C4832C();
    __break(1u);
    goto LABEL_11;
  }
  if (HIDWORD(result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >> 11 != 27)
  {
    if (WORD1(result) > 0x10u)
    {
LABEL_12:
      __break(1u);
      return sub_242C4832C();
    }
    if ((result & 0xFFFFFF80) != 0 || result <= 0xFF)
      return sub_242C4832C();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Collection.contiguousMap<A>(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a5;
  v45 = a4;
  v40 = a2;
  v41 = a1;
  v39 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v38 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - v8;
  v34 = *(_QWORD *)(v10 + 8);
  v12 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - v15;
  sub_242C48A64();
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v32 - v18;
  v37 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v33 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = swift_getAssociatedTypeWitness();
  v35 = *(_QWORD *)(v46 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v32 - v23;
  v48 = sub_242C47FFC();
  v44 = sub_242C487B8();
  v43 = sub_242C48E00();
  sub_242C48D70();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v33, v32, v12);
  sub_242C483D4();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v44 = (uint64_t)v24;
  sub_242C48A94();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, AssociatedTypeWitness) == 1)
  {
LABEL_5:
    OUTLINED_FUNCTION_1_63();
    v47 = v48;
    MEMORY[0x2494EDE24](MEMORY[0x24BEE2A48], v43);
    return sub_242C4865C();
  }
  else
  {
    v26 = *(_QWORD *)(v42 + 32);
    v36 = v16;
    v37 = v26;
    while (1)
    {
      ((void (*)(char *, char *, uint64_t))v37)(v16, v19, AssociatedTypeWitness);
      v41(v16);
      if (v5)
        break;
      v27 = v39;
      v28 = AssociatedConformanceWitness;
      v29 = v45;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v38, v9, v45);
      sub_242C48DDC();
      v16 = v36;
      v30 = v29;
      AssociatedConformanceWitness = v28;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v30);
      OUTLINED_FUNCTION_3_57();
      sub_242C48A94();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, AssociatedTypeWitness) == 1)
        goto LABEL_5;
    }
    OUTLINED_FUNCTION_3_57();
    OUTLINED_FUNCTION_1_63();
    return swift_release();
  }
}

void sub_242B7D18C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_55();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v4 - v2;
  sub_242C487AC();
  sub_242C487C4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  OUTLINED_FUNCTION_12_0();
}

void Comparable.clamped(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_55();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C481F4();
  sub_242C492C8();
  sub_242C492BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  OUTLINED_FUNCTION_12_0();
}

uint64_t OUTLINED_FUNCTION_1_63()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 184) + 8))(*(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_3_57()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void sub_242B7D310(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v40 = MEMORY[0x24BEE4AF8];
  sub_242AC3DC8();
  v7 = v40;
  v31 = v5;
  v32 = v4;
  v29 = a2;
  v30 = a1;
  v33 = v6;
  if (v6)
  {
    sub_242C480E0();
    sub_242C480E0();
    v8 = a1 + 48;
    v9 = (unint64_t *)(a2 + 48);
    while (v4)
    {
      if (!v5)
        goto LABEL_23;
      v35 = *(_QWORD *)(v8 - 8);
      v36 = *(_QWORD *)(v8 - 16);
      v10 = *(v9 - 2);
      v11 = *(v9 - 1);
      v12 = v7;
      v13 = *v9;
      sub_242C480E0();
      swift_retain();
      v38 = v11;
      v37 = v13;
      v14 = v13;
      v7 = v12;
      sub_242A62654(v10, v11, v14);
      swift_release();
      v15 = *(_QWORD *)(v12 + 16);
      if (v15 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_242AC3DC8();
        v7 = v12;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = (_QWORD *)(v7 + 40 * v15);
      v16[4] = v36;
      v16[5] = v35;
      --v5;
      v16[6] = v10;
      v16[7] = v38;
      v16[8] = v37;
      --v4;
      v8 += 24;
      v9 += 3;
      if (!--v6)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
LABEL_13:
    v18 = v31;
    v17 = v32;
    if (v32 <= v31)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v19 = v33;
    v20 = 24 * v33 + 48;
    v21 = v30 + v20;
    v22 = (unint64_t *)(v29 + v20);
    while (v19 < v17)
    {
      if (v18 == v19)
        goto LABEL_21;
      if (v19 >= v18)
        goto LABEL_25;
      v34 = v19;
      v23 = *(_QWORD *)(v21 - 8);
      v39 = *(_QWORD *)(v21 - 16);
      v24 = *(v22 - 2);
      v25 = *(v22 - 1);
      v26 = *v22;
      sub_242C480E0();
      swift_retain();
      sub_242A62654(v24, v25, v26);
      swift_release();
      v27 = *(_QWORD *)(v7 + 16);
      if (v27 >= *(_QWORD *)(v7 + 24) >> 1)
        sub_242AC3DC8();
      v17 = v32;
      v19 = v34 + 1;
      *(_QWORD *)(v7 + 16) = v27 + 1;
      v28 = (_QWORD *)(v7 + 40 * v27);
      v28[4] = v39;
      v28[5] = v23;
      v28[6] = v24;
      v28[7] = v25;
      v28[8] = v26;
      v21 += 24;
      v22 += 3;
      v18 = v31;
      if (v32 == v34 + 1)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_242B7D5B4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int16 *v7;
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v31 = MEMORY[0x24BEE4AF8];
  sub_242AC3E00();
  v27 = v5;
  v28 = v4;
  v25 = a2;
  v26 = a1;
  v24 = v6;
  if (v6)
  {
    v7 = (__int16 *)(a2 + 32);
    sub_242C480E0();
    sub_242C480E0();
    v8 = (uint64_t *)(a1 + 40);
    v9 = v5;
    v10 = v6;
    while (v4)
    {
      if (!v9)
        goto LABEL_23;
      v11 = *v8;
      v30 = *(v8 - 1);
      v29 = *v7;
      v13 = *(_QWORD *)(v31 + 16);
      v12 = *(_QWORD *)(v31 + 24);
      sub_242C480E0();
      if (v13 >= v12 >> 1)
        sub_242AC3E00();
      *(_QWORD *)(v31 + 16) = v13 + 1;
      v14 = v31 + 24 * v13;
      --v9;
      *(_QWORD *)(v14 + 32) = v30;
      *(_QWORD *)(v14 + 40) = v11;
      *(_WORD *)(v14 + 48) = v29;
      --v4;
      ++v7;
      v8 += 3;
      if (!--v10)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
LABEL_13:
    v16 = v27;
    v15 = v28;
    if (v28 <= v27)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v17 = v24;
    v18 = (uint64_t *)(v26 + 24 * v24 + 40);
    while (v17 < v15)
    {
      if (v16 == v17)
        goto LABEL_21;
      if (v17 >= v16)
        goto LABEL_25;
      v19 = *(v18 - 1);
      v20 = *v18;
      v21 = *(_WORD *)(v25 + 32 + 2 * v17);
      sub_242C480E0();
      v22 = *(_QWORD *)(v31 + 16);
      if (v22 >= *(_QWORD *)(v31 + 24) >> 1)
        sub_242AC3E00();
      ++v17;
      *(_QWORD *)(v31 + 16) = v22 + 1;
      v23 = v31 + 24 * v22;
      *(_QWORD *)(v23 + 32) = v19;
      *(_QWORD *)(v23 + 40) = v20;
      *(_WORD *)(v23 + 48) = v21;
      v18 += 3;
      v16 = v27;
      v15 = v28;
      if (v28 == v17)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_242B7D7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = sub_242C480E0() + 48;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = *(_QWORD *)(v4 - 16);
        v6 = *(_QWORD *)(v4 - 8);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v8 = sub_242A61310(v7, v6);
        if ((v9 & 1) != 0)
        {
          v10 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * v8);
          v11 = v10[1];
          v12 = v10[2];
          v20 = *v10;
          sub_242A62654(*v10, v11, v12);
          swift_release();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5F074();
            v5 = v17;
          }
          v13 = v5;
          v14 = *(_QWORD *)(v5 + 16);
          v15 = v13;
          if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
          {
            sub_242A5F074();
            v15 = v18;
          }
          *(_QWORD *)(v15 + 16) = v14 + 1;
          v16 = (_QWORD *)(v15 + 40 * v14);
          v5 = v15;
          v16[4] = v7;
          v16[5] = v6;
          v16[6] = v20;
          v16[7] = v11;
          v16[8] = v12;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease_n();
        }
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_242B7D988(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  __int16 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = sub_242C480E0() + 48;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = *(_QWORD *)(v4 - 16);
        v6 = *(_QWORD *)(v4 - 8);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v8 = sub_242A61310(v7, v6);
        if ((v9 & 1) != 0)
        {
          v10 = *(_WORD *)(*(_QWORD *)(a2 + 56) + 2 * v8);
          swift_release();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5F130();
            v5 = v13;
          }
          v11 = *(_QWORD *)(v5 + 16);
          if (v11 >= *(_QWORD *)(v5 + 24) >> 1)
          {
            sub_242A5F130();
            v5 = v14;
          }
          *(_QWORD *)(v5 + 16) = v11 + 1;
          v12 = v5 + 24 * v11;
          *(_QWORD *)(v12 + 32) = v7;
          *(_QWORD *)(v12 + 40) = v6;
          *(_WORD *)(v12 + 48) = v10;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease_n();
        }
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_242B7DB04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(char *__return_ptr, uint64_t, unint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v33 = MEMORY[0x24BEE4AF8];
    sub_242AC3258();
    v2 = v33;
    v4 = (unint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      if ((*v4 & 0x2000000000000000) != 0)
      {
        v14 = *v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_242C4DE40;
        *(_QWORD *)(v15 + 32) = 1;
        if ((v7 & 0x100) != 0)
        {
          if (v14 >= 2)
            v22 = 1;
          else
            v22 = 3;
          *(_QWORD *)(v15 + 40) = v22;
          *(_QWORD *)(v15 + 48) = v6;
          *(_QWORD *)(v15 + 56) = v5;
        }
        else
        {
          *(_QWORD *)(v15 + 40) = v6;
          *(_QWORD *)(v15 + 48) = v5;
          if (v14 >= 2)
            v21 = 1;
          else
            v21 = 3;
          *(_QWORD *)(v15 + 56) = v21;
        }
        v31 = v15;
        v30 = 10;
        v29 = 0;
        v27 = 0u;
        v28 = 0u;
        v26 = 0u;
      }
      else
      {
        if (v7 >> 62)
        {
          if (v7 >> 62 == 1)
          {
            v31 = *(v4 - 2);
            v8 = *(void (**)(char *__return_ptr, uint64_t, unint64_t))(v7 + 32);
            sub_242A62660(v6, v5, v7);
            sub_242A62660(v6, v5, v7);
            v8(&v30, v5, v7 & 0x3FFFFFFFFFFFFFFFLL);
            v29 = 0;
            v27 = 0u;
            v28 = 0u;
            v26 = 0u;
            Tensor.init(zeros:scalarType:on:)(&v31, &v30, (uint64_t)&v26, v9, v10, v11, v12, v13, &v32);
            sub_242A69490(v6, v5, v7);
          }
          else
          {
            v32 = *(v4 - 2);
            sub_242A62660(v6, v5, v7);
          }
          goto LABEL_20;
        }
        v31 = *(v4 - 2);
        v30 = v5;
        v29 = 0;
        v27 = 0u;
        v28 = 0u;
        v26 = 0u;
        sub_242A62660(v6, v5, v7);
      }
      Tensor.init(zeros:scalarType:on:)(&v31, &v30, (uint64_t)&v26, v16, v17, v18, v19, v20, &v32);
LABEL_20:
      v23 = v32;
      v33 = v2;
      v24 = *(_QWORD *)(v2 + 16);
      if (v24 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_242AC3258();
        v2 = v33;
      }
      v4 += 3;
      *(_QWORD *)(v2 + 16) = v24 + 1;
      *(_QWORD *)(v2 + 8 * v24 + 32) = v23;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242B7DD3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_242AC3DE4();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 32);
    v5 = *(_QWORD *)(v11 + 16);
    v6 = 24 * v5;
    do
    {
      v7 = *v4;
      v8 = *(_QWORD *)(v11 + 24);
      swift_retain();
      if (v5 >= v8 >> 1)
        sub_242AC3DE4();
      *(_QWORD *)(v11 + 16) = v5 + 1;
      v9 = v11 + v6;
      *(_QWORD *)(v9 + 32) = v7;
      *(_OWORD *)(v9 + 40) = xmmword_242C53170;
      v6 += 24;
      ++v4;
      ++v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void MLPackageWritingOptions.parameterStorageMode.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_108_6(a1);
}

BOOL static MLPackageWritingOptions.ParameterStorageMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

NeuralNetworks::MLPackageWritingOptions __swiftcall MLPackageWritingOptions.init(parameterStorageMode:)(NeuralNetworks::MLPackageWritingOptions::ParameterStorageMode parameterStorageMode)
{
  _BYTE *v1;
  NeuralNetworks::MLPackageWritingOptions result;

  OUTLINED_FUNCTION_108_6(v1);
  return result;
}

void static MLPackageWritingOptions.exportingParametersAndStates.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_108_6(a1);
}

void static MLPackageWritingOptions.embeddingParametersAndStates.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t MLPackageWritingOptions.ParameterStorageMode.hash(into:)()
{
  return sub_242C4934C();
}

void MLPackageWritingOptions.ParameterStorageMode.hashValue.getter()
{
  OUTLINED_FUNCTION_103_6();
  OUTLINED_FUNCTION_32_2();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t Layer<>.writeMLPackage(withInput:output:to:options:)(uint64_t *a1, __int16 *a2, uint64_t a3, char *a4)
{
  __int16 v4;
  char v5;
  char v7;
  __int16 v8;
  uint64_t v9;
  __int128 v10;

  v4 = *a2;
  v5 = *a4;
  v9 = *a1;
  v10 = xmmword_242C53170;
  v8 = v4;
  v7 = v5;
  return Layer<>.writeMLPackage(withInput:output:to:options:)(&v9, &v8, a3, &v7);
}

#error "242B7E08C: call analysis failed (funcsize=106)"

uint64_t sub_242B7E0C8(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;

  a4();
  OUTLINED_FUNCTION_85_5();
  if (v4 != 1)
  {
    OUTLINED_FUNCTION_53_14();
    OUTLINED_FUNCTION_91_6();
    OUTLINED_FUNCTION_37_20();
    OUTLINED_FUNCTION_20_37();
    OUTLINED_FUNCTION_51_23();
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_83_10();
    v11 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_8_41(v11, v12);
    return v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257228E48);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242C4B7D0;
  result = OUTLINED_FUNCTION_20_37();
  if (*(_QWORD *)(result + 16))
  {
    OUTLINED_FUNCTION_68_12();
    OUTLINED_FUNCTION_34();
    *(_QWORD *)(v5 + 32) = a4;
    *(_QWORD *)(v5 + 40) = 1;
    *(_QWORD *)(v5 + 48) = a1;
    *(_QWORD *)(v5 + 56) = a2;
    *(_QWORD *)(v5 + 64) = a3;
    sub_242A62654(a1, a2, a3);
    return v5;
  }
  __break(1u);
  return result;
}

_QWORD *sub_242B7E238(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *(_QWORD *)(sub_242BBBB3C((uint64_t)a1, a2, a3, a4) + 16);
  swift_bridgeObjectRelease();
  if (v8 != 1)
  {
    sub_242C48C38();
    v15 = sub_242C48314();
    sub_242BBBB3C(v15, v16, v17, v18);
    swift_bridgeObjectRelease();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242A66F3C();
    swift_allocError();
    *v19 = 0;
    v19[1] = 0xE000000000000000;
    swift_willThrow();
    return (_QWORD *)v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257228E48);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
  result = (_QWORD *)sub_242BBBB3C(v4, v9, v10, v11);
  if (result[2])
  {
    v14 = result[4];
    v13 = result[5];
    sub_242C480E0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 32) = v14;
    *(_QWORD *)(v4 + 40) = v13;
    *(_QWORD *)(v4 + 48) = v5;
    *(_QWORD *)(v4 + 56) = v6;
    *(_QWORD *)(v4 + 64) = v7;
    sub_242A62654(v5, v6, v7);
    return (_QWORD *)v4;
  }
  __break(1u);
  return result;
}

void sub_242B7E424(__int16 a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  if ((a1 & 0xFF00) == 0x300)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228E50);
    v4 = OUTLINED_FUNCTION_27_0();
    *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
    if (*(_QWORD *)(OUTLINED_FUNCTION_73_13() + 16))
    {
      OUTLINED_FUNCTION_68_12();
      OUTLINED_FUNCTION_34();
      *(_QWORD *)(v4 + 32) = v3;
      *(_QWORD *)(v4 + 40) = v3;
      *(_WORD *)(v4 + 48) = 512;
LABEL_8:
      OUTLINED_FUNCTION_60_16();
      return;
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_73_13();
    OUTLINED_FUNCTION_85_5();
    if (v3 != 1)
    {
      OUTLINED_FUNCTION_54_14();
      OUTLINED_FUNCTION_91_6();
      OUTLINED_FUNCTION_88_5();
      v11 = OUTLINED_FUNCTION_37_20();
      a3(v11);
      OUTLINED_FUNCTION_51_23();
      OUTLINED_FUNCTION_9_49();
      OUTLINED_FUNCTION_19_32();
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_19_32();
      OUTLINED_FUNCTION_9_49();
      OUTLINED_FUNCTION_19_32();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_83_10();
      v12 = OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_8_41(v12, v13);
      goto LABEL_8;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228E50);
    v7 = OUTLINED_FUNCTION_27_0();
    *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
    v8 = (_QWORD *)OUTLINED_FUNCTION_73_13();
    if (v8[2])
    {
      v10 = v8[4];
      v9 = v8[5];
      sub_242C480E0();
      OUTLINED_FUNCTION_34();
      *(_QWORD *)(v7 + 32) = v10;
      *(_QWORD *)(v7 + 40) = v9;
      *(_WORD *)(v7 + 48) = a1;
      goto LABEL_8;
    }
  }
  __break(1u);
}

void sub_242B7E5B8(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((*a1 & 0xFF00) == 0x300)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228E50);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
    sub_242BBBAA4(v4, v5, v6, v7);
  }
  sub_242BBBAA4((uint64_t)a1, a2, a3, a4);
}

void sub_242B7E650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  if (v1 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228E50);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_242C4B7D0;
    sub_242BBBAA4(v2, v3, v4, v5);
  }
  sub_242C48C38();
  v6 = sub_242C48314();
  sub_242BBBB3C(v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242A66F3C();
  swift_allocError();
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  swift_willThrow();
}

uint64_t sub_242B7E7F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v27[2];

  sub_242C47B1C();
  v15 = sub_242C48284();
  v17 = v16;
  OUTLINED_FUNCTION_4_0();
  if (v15 == 0x67616B6361706C6DLL && v17 == 0xE900000000000065)
  {
    OUTLINED_FUNCTION_90_7();
  }
  else
  {
    v19 = OUTLINED_FUNCTION_33_23();
    OUTLINED_FUNCTION_136();
    if ((v19 & 1) == 0)
    {
      v27[0] = 0;
      v27[1] = 0xE000000000000000;
      sub_242C48C38();
      OUTLINED_FUNCTION_89_7();
      OUTLINED_FUNCTION_37_20();
      sub_242C47B58();
      sub_242C48314();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_14_14();
      sub_242C48314();
      sub_242A66F3C();
      v20 = OUTLINED_FUNCTION_24_1();
      return OUTLINED_FUNCTION_8_41(v20, v21);
    }
  }
  v27[0] = sub_242B81550(a2);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  swift_retain();
  a11(a1, a4 & 1, a7, a8, a9, a10, v27, a3, a5, a6);
  return OUTLINED_FUNCTION_108();
}

void sub_242B7E9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_18_1();
  v1 = v0;
  sub_242C47B1C();
  v2 = sub_242C48284();
  v4 = v3;
  OUTLINED_FUNCTION_3_6();
  if (v2 == 0x67616B6361706C6DLL && v4 == 0xE900000000000065)
  {
    OUTLINED_FUNCTION_90_7();
    goto LABEL_8;
  }
  v6 = OUTLINED_FUNCTION_33_23();
  OUTLINED_FUNCTION_136();
  if ((v6 & 1) != 0)
  {
LABEL_8:
    v9 = sub_242B81908(v1);
    MEMORY[0x24BDAC7A8](v9);
    sub_242C06730();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_242C48C38();
  OUTLINED_FUNCTION_89_7();
  OUTLINED_FUNCTION_37_20();
  sub_242C47B58();
  sub_242C48314();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_14_14();
  sub_242C48314();
  sub_242A66F3C();
  v7 = OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_8_41(v7, v8);
LABEL_9:
  OUTLINED_FUNCTION_0_9();
}

void Layer<>.writeMLPackage(withInput:output:to:options:)(uint64_t a1)
{
  sub_242B7DD3C(a1);
  Layer<>.writeMLPackage(withInput:output:to:options:)();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_56_14();
}

{
  sub_242B7DD3C(a1);
  Layer<>.writeMLPackage(withInput:output:to:options:)();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_44_21();
}

#error "242B7ED54: call analysis failed (funcsize=87)"

void sub_242B7ED8C(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  a2();
  v5 = OUTLINED_FUNCTION_85_5();
  if (v2 == *(_QWORD *)(a1 + 16))
  {
    v6 = ((uint64_t (*)(uint64_t))a2)(v5);
    sub_242C480E0();
    sub_242B7D310(v6, a1);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    OUTLINED_FUNCTION_53_14();
    OUTLINED_FUNCTION_91_6();
    v7 = OUTLINED_FUNCTION_37_20();
    ((void (*)(uint64_t))a2)(v7);
    OUTLINED_FUNCTION_51_23();
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_83_10();
    v8 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_8_41(v8, v9);
  }
  OUTLINED_FUNCTION_60_16();
}

uint64_t Layer<>.writeMLPackage(withInput:output:to:options:)()
{
  return sub_242B7FA2C();
}

{
  return sub_242B7FA2C();
}

#error "242B7EFA4: call analysis failed (funcsize=58)"

unint64_t sub_242B7EFCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v12;

  if (a1)
  {
    OUTLINED_FUNCTION_20_37();
    OUTLINED_FUNCTION_51_23();
    if (v1 == *(_QWORD *)(a1 + 16))
    {
      v3 = OUTLINED_FUNCTION_20_37();
      OUTLINED_FUNCTION_32_0();
      sub_242B7D5B4(v3, a1);
      v5 = v4;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_3_6();
    }
    else
    {
      sub_242C48C38();
      OUTLINED_FUNCTION_88_5();
      OUTLINED_FUNCTION_37_20();
      OUTLINED_FUNCTION_20_37();
      OUTLINED_FUNCTION_51_23();
      OUTLINED_FUNCTION_14_32();
      OUTLINED_FUNCTION_99_6();
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_14_14();
      OUTLINED_FUNCTION_99_6();
      OUTLINED_FUNCTION_14_32();
      OUTLINED_FUNCTION_99_6();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_31_11();
      v5 = 0xE000000000000000;
      sub_242A66F3C();
      v9 = OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_92_7(v9, v10);
    }
  }
  else if (*(_QWORD *)(OUTLINED_FUNCTION_20_37() + 16))
  {
    v12 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_69_12();
    v5 = v12;
    do
    {
      v6 = *(_QWORD *)(v12 + 16);
      v7 = *(_QWORD *)(v12 + 24);
      OUTLINED_FUNCTION_32_0();
      if (v6 >= v7 >> 1)
        OUTLINED_FUNCTION_94_7();
      OUTLINED_FUNCTION_57_19();
    }
    while (!v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_4_0();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

void sub_242B7F1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
    sub_242BBBAA4(a1, a2, a3, a4);
  sub_242BBBAA4(0, a2, a3, a4);
}

void Layer<>.writeMLPackage(withInput:output:to:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_242B80060(a1, a2, a3, a4, a5, a6, (void (*)(void))Layer<>.writeMLPackage(withInput:output:to:options:));
}

{
  sub_242B80060(a1, a2, a3, a4, a5, a6, (void (*)(void))Layer<>.writeMLPackage(withInput:output:to:options:));
}

#error "242B7F55C: call analysis failed (funcsize=62)"

uint64_t Layer<>.writeMLPackage(withInput:output:to:options:)(uint64_t a1)
{
  sub_242B84688(a1);
  Layer<>.writeMLPackage(withInput:output:to:options:)();
  return OUTLINED_FUNCTION_13_0();
}

#error "242B7F780: call analysis failed (funcsize=99)"

uint64_t sub_242B7F7A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t vars0;

  v3 = a2();
  OUTLINED_FUNCTION_32_0();
  v4 = sub_242B7D7DC(v3, a1);
  OUTLINED_FUNCTION_136();
  v5 = *(_QWORD *)(v4 + 16);
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_85_5();
  if (v5 == v3)
  {
    sub_242A5B1F8(v4, v6, v7, v8, v9, v10, v11, v12, v18, v19, v20, (uint64_t)v21, v22, v23, v24, v25, v26, v27, vars0);
    v14 = v13;
    OUTLINED_FUNCTION_4_0();
    return v14;
  }
  else
  {
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_242C48C38();
    OUTLINED_FUNCTION_14_14();
    OUTLINED_FUNCTION_37_20();
    OUTLINED_FUNCTION_20_37();
    OUTLINED_FUNCTION_85_5();
    v21 = &v18;
    OUTLINED_FUNCTION_43_25();
    OUTLINED_FUNCTION_105_6();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_14_14();
    OUTLINED_FUNCTION_105_6();
    OUTLINED_FUNCTION_4_0();
    v21 = (uint64_t *)v5;
    OUTLINED_FUNCTION_43_25();
    OUTLINED_FUNCTION_105_6();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_31_11();
    sub_242A66F3C();
    v16 = OUTLINED_FUNCTION_24_1();
    return OUTLINED_FUNCTION_8_41(v16, v17);
  }
}

void Layer<>.writeMLPackage(withInput:output:to:options:)()
{
  sub_242B801C4();
}

{
  sub_242B801C4();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_50_19();
  v0 = OUTLINED_FUNCTION_28_35();
  OUTLINED_FUNCTION_86_8(v0);
  OUTLINED_FUNCTION_49_18();
  Layer<>.writeMLPackage(withInput:output:to:options:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  OUTLINED_FUNCTION_18_1();
  v1 = v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = sub_242C480E0();
  sub_242B0749C(v3, AssociatedTypeWitness, v1);
  Layer<>.compiled(forInput:options:)();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_50_19();
  v0 = OUTLINED_FUNCTION_28_35();
  OUTLINED_FUNCTION_86_8(v0);
  OUTLINED_FUNCTION_49_18();
  Layer<>.writeMLPackage(withInput:output:to:options:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  OUTLINED_FUNCTION_18_1();
  v1 = v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  OUTLINED_FUNCTION_107_5();
  v3 = OUTLINED_FUNCTION_32_0();
  sub_242B0749C(v3, AssociatedTypeWitness, v1);
  OUTLINED_FUNCTION_32_29();
  Layer.compiled(forInput:options:)();
}

{
  OUTLINED_FUNCTION_87_9();
  swift_retain();
  OUTLINED_FUNCTION_106_7();
  Layer<>.writeMLPackage(withInput:output:to:options:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242B07358(&v2);
  v0 = v2;
  Layer<>.compiled(forInput:options:)((uint64_t)&v1, &v0);
}

{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_28_35();
  OUTLINED_FUNCTION_86_8(v0);
  Layer<>.writeMLPackage(withInput:output:to:options:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_18_1();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_28_35();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_107_5();
  v9 = OUTLINED_FUNCTION_32_0();
  sub_242B0749C(v9, v8, v3);
  v10 = OUTLINED_FUNCTION_32_29();
  Layer<>.compiled(forInput:options:)(v10, v11, v12, v7, v5, v3, v1);
}

#error "242B7F9E8: call analysis failed (funcsize=56)"

uint64_t sub_242B7FA2C()
{
  char *v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  __int128 v8;

  OUTLINED_FUNCTION_70_13();
  v1 = *v0;
  v7 = *v2;
  v8 = xmmword_242C53170;
  v6 = v1;
  swift_retain();
  OUTLINED_FUNCTION_55_15((uint64_t)&v7, v3, v4, (uint64_t)&v6);
  return OUTLINED_FUNCTION_157_0();
}

#error "242B7FB68: call analysis failed (funcsize=58)"

uint64_t sub_242B7FB90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v14[2];
  _QWORD *v15;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_20_37();
    OUTLINED_FUNCTION_32_0();
    v3 = sub_242B7D988(v2, a1);
    OUTLINED_FUNCTION_136();
    v4 = *(_QWORD **)(v3 + 16);
    OUTLINED_FUNCTION_20_37();
    OUTLINED_FUNCTION_85_5();
    if (v4 == (_QWORD *)v2)
    {
      sub_242A5B300(v3);
      v6 = v5;
      OUTLINED_FUNCTION_4_0();
      return v6;
    }
    OUTLINED_FUNCTION_54_14();
    OUTLINED_FUNCTION_91_6();
    OUTLINED_FUNCTION_14_14();
    OUTLINED_FUNCTION_37_20();
    OUTLINED_FUNCTION_20_37();
    OUTLINED_FUNCTION_85_5();
    v15 = v14;
    OUTLINED_FUNCTION_43_25();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_4_0();
    v15 = v4;
    OUTLINED_FUNCTION_43_25();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_31_11();
    v8 = v14[1];
    sub_242A66F3C();
    v12 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_92_7(v12, v13);
  }
  else if (*(_QWORD *)(OUTLINED_FUNCTION_20_37() + 16))
  {
    v14[0] = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_69_12();
    v8 = v14[0];
    do
    {
      v14[0] = v8;
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      OUTLINED_FUNCTION_32_0();
      if (v9 >= v10 >> 1)
      {
        OUTLINED_FUNCTION_94_7();
        v8 = v14[0];
      }
      OUTLINED_FUNCTION_57_19();
    }
    while (!v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_4_0();
    return MEMORY[0x24BEE4AF8];
  }
  return v8;
}

void sub_242B7FD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
    sub_242BBBAA4(a1, a2, a3, a4);
  sub_242BBBAA4(0, a2, a3, a4);
}

void sub_242B80060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t v8;

  OUTLINED_FUNCTION_87_9();
  sub_242B7DD3C(v8);
  OUTLINED_FUNCTION_106_7();
  a7();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_44_21();
}

#error "242B80180: call analysis failed (funcsize=56)"

void sub_242B801C4()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_70_13();
  v1 = *v0;
  v3 = sub_242B84688(v2);
  v6 = v1;
  OUTLINED_FUNCTION_55_15(v3, v4, v5, (uint64_t)&v6);
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_56_14();
}

#error "242B8032C: call analysis failed (funcsize=79)"

uint64_t sub_242B80650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[7];
  uint64_t v12;

  v12 = a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v5 = sub_242C480F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = MEMORY[0x2494EDE24](MEMORY[0x24BEE04E8], v5);
  v12 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242B849D0, (uint64_t)v11, v5, TupleTypeMetadata2, MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v8);
  v9 = sub_242C48650();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v9);
  return sub_242C480C8();
}

void sub_242B80C8C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;

  if (v0)
  {
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_72_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_27();
    OUTLINED_FUNCTION_46_21();
  }
  else
  {
    OUTLINED_FUNCTION_81();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    type metadata accessor for Function(0, (uint64_t)&type metadata for Tensor, AssociatedTypeWitness, v2);
    OUTLINED_FUNCTION_75_9();
    swift_release();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_72_1();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_108();
  }
  OUTLINED_FUNCTION_81();
  JUMPOUT(0x242B80BACLL);
}

#error "242B80E2C: call analysis failed (funcsize=90)"

uint64_t sub_242B81424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v10 = (char *)&v19 - v9;
  v11 = (char *)a4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *a4 = sub_242C491CC();
  a4[1] = v12;
  v13 = *(int *)(TupleTypeMetadata2 + 48);
  v14 = &v10[v13];
  v15 = a1 + v13;
  v16 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v10, a1, a2);
  v17 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v14, v15, a3);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v11, v14, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, a2);
}

uint64_t sub_242B81550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  int64_t v34;

  v33 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v34 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v5 = 0;
  while (1)
  {
    if (v4)
    {
      v6 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v7 = v6 | (v5 << 6);
      goto LABEL_26;
    }
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v8 >= v34)
      goto LABEL_39;
    v9 = *(_QWORD *)(v33 + 8 * v8);
    ++v5;
    if (!v9)
    {
      v5 = v8 + 1;
      OUTLINED_FUNCTION_95_7();
      if (v10 == v11)
        goto LABEL_39;
      OUTLINED_FUNCTION_93_8();
      if (!v9)
      {
        v5 = v12 + 2;
        OUTLINED_FUNCTION_95_7();
        if (v10 == v11)
          goto LABEL_39;
        OUTLINED_FUNCTION_93_8();
        if (!v9)
        {
          v5 = v13 + 3;
          OUTLINED_FUNCTION_95_7();
          if (v10 == v11)
            goto LABEL_39;
          OUTLINED_FUNCTION_93_8();
          if (!v9)
            break;
        }
      }
    }
LABEL_25:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v5 << 6);
LABEL_26:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v7);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v7);
    sub_242C48284();
    sub_242A692CC();
    OUTLINED_FUNCTION_32_0();
    swift_retain();
    v21 = sub_242C48AF4();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0 && ((OUTLINED_FUNCTION_80_11() & 1) != 0 || (OUTLINED_FUNCTION_80_11() & 1) != 0))
    {
      Tensor.split(count:alongAxis:)();
      sub_242A9BBDC(2uLL, 3uLL);
      Tensor.init(concatenating:alongAxis:scalarType:)();
      swift_isUniquelyReferenced_nonNull_native();
      v22 = sub_242A61310(v19, v18);
      if (__OFADD__(*(_QWORD *)(a1 + 16), (v23 & 1) == 0))
        goto LABEL_42;
      v24 = v22;
      v25 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221178);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v26 = sub_242A61310(v19, v18);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_44;
        v24 = v26;
      }
      if ((v25 & 1) != 0)
      {
        v28 = *(_QWORD *)(a1 + 56);
        swift_release();
        *(_QWORD *)(v28 + 8 * v24) = v20;
      }
      else
      {
        *(_QWORD *)(a1 + 8 * (v24 >> 6) + 64) |= 1 << v24;
        v29 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v24);
        *v29 = v19;
        v29[1] = v18;
        *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v24) = v20;
        v30 = *(_QWORD *)(a1 + 16);
        v11 = __OFADD__(v30, 1);
        v31 = v30 + 1;
        if (v11)
          goto LABEL_43;
        *(_QWORD *)(a1 + 16) = v31;
        OUTLINED_FUNCTION_32_0();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  v15 = v14 + 4;
  if (v15 >= v34)
  {
LABEL_39:
    swift_release();
    return a1;
  }
  v9 = *(_QWORD *)(v33 + 8 * v15);
  if (v9)
  {
    v5 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    OUTLINED_FUNCTION_95_7();
    if (v10 == v11)
      goto LABEL_39;
    OUTLINED_FUNCTION_93_8();
    v15 = v16 + 1;
    if (v9)
      goto LABEL_25;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_242C492EC();
  __break(1u);
  return result;
}

uint64_t sub_242B81908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  int64_t v28;
  uint64_t v29;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v6 = 0;
  v26 = v2;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v6 << 6);
LABEL_20:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
    v14 = *v12;
    v13 = v12[1];
    sub_242C480E0();
    swift_retain();
    if ((sub_242B83324() & 1) != 0)
    {
      sub_242B83410();
      swift_isUniquelyReferenced_nonNull_native();
      v15 = sub_242A61310(v14, v13);
      v27 = v16;
      if (__OFADD__(*(_QWORD *)(a1 + 16), (v16 & 1) == 0))
        goto LABEL_34;
      v17 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221178);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v18 = sub_242A61310(v14, v13);
        if ((v27 & 1) != (v19 & 1))
          goto LABEL_36;
        v17 = v18;
      }
      if ((v27 & 1) != 0)
      {
        v20 = *(_QWORD *)(a1 + 56);
        swift_release();
        *(_QWORD *)(v20 + 8 * v17) = v29;
      }
      else
      {
        *(_QWORD *)(a1 + 8 * (v17 >> 6) + 64) |= 1 << v17;
        v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v17);
        *v21 = v14;
        v21[1] = v13;
        *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v17) = v29;
        v22 = *(_QWORD *)(a1 + 16);
        v23 = __OFADD__(v22, 1);
        v24 = v22 + 1;
        if (v23)
          goto LABEL_35;
        *(_QWORD *)(a1 + 16) = v24;
        sub_242C480E0();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  v9 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v9 >= v28)
    goto LABEL_31;
  v10 = *(_QWORD *)(v2 + 8 * v9);
  ++v6;
  if (v10)
    goto LABEL_19;
  v6 = v9 + 1;
  if (v9 + 1 >= v28)
    goto LABEL_31;
  v10 = *(_QWORD *)(v2 + 8 * v6);
  if (v10)
    goto LABEL_19;
  v6 = v9 + 2;
  if (v9 + 2 >= v28)
    goto LABEL_31;
  v10 = *(_QWORD *)(v2 + 8 * v6);
  if (v10)
  {
LABEL_19:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v6 << 6);
    goto LABEL_20;
  }
  v11 = v9 + 3;
  if (v11 >= v28)
  {
LABEL_31:
    swift_release();
    return a1;
  }
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v6 = v11;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v6 >= v28)
      goto LABEL_31;
    v10 = *(_QWORD *)(v2 + 8 * v6);
    ++v11;
    if (v10)
      goto LABEL_19;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = sub_242C492EC();
  __break(1u);
  return result;
}

uint64_t sub_242B81C08(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void (*v32)(char *, _QWORD, uint64_t);
  char *v33;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v59 = a8;
  v58 = a7;
  v57 = a6;
  v56 = a5;
  v54 = a4;
  v52 = a3;
  v48 = a1;
  v55 = a10;
  v53 = a9;
  v51 = a12;
  v49 = a11;
  v50 = a2 & 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  MEMORY[0x24BDAC7A8](v12);
  v42 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_242C47A38();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_242C47B10();
  v15 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_242C47B7C();
  v47 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v43 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v42 - v20;
  v22 = sub_242C47C3C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_242C480BC();
  sub_242C47C30();
  v27 = sub_242C47C24();
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v79 = 0x302E302E31;
  v80 = 0xE500000000000000;
  v81 = v26;
  v82 = v27;
  v83 = v29;
  v30 = v84;
  v74 = 0xD000000000000015;
  v75 = 0x8000000242C651D0;
  v31 = *MEMORY[0x24BDCD7A0];
  v32 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v32(v17, *MEMORY[0x24BDCD7A0], v84);
  sub_242A692CC();
  sub_242C47B70();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v30);
  swift_bridgeObjectRelease();
  v62 = v49;
  v63 = v51;
  v64 = v50;
  v65 = v52;
  v66 = v54;
  v67 = v56;
  v68 = v57;
  v69 = v58;
  v70 = v59;
  v71 = v53;
  v72 = v55;
  v73 = &v79;
  v33 = v60;
  sub_242C06730();
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v61);
  }
  else
  {
    LODWORD(v59) = v31;
    v60 = v17;
    v35 = *(void (**)(char *, uint64_t))(v47 + 8);
    v35(v21, v61);
    sub_242C47A68();
    swift_allocObject();
    sub_242C47A5C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221680);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_242C4B7F0;
    sub_242C47A20();
    sub_242C47A2C();
    v74 = v36;
    sub_242A69308();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221690);
    sub_242A7AF34((unint64_t *)&qword_257221698, &qword_257221690, MEMORY[0x24BEE12C8]);
    sub_242C48B9C();
    sub_242C47A44();
    v74 = v79;
    v75 = v80;
    v76 = v81;
    v77 = v82;
    v78 = v83;
    sub_242A693D0();
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    v37 = sub_242C47A50();
    v39 = v38;
    v58 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v61;
    __swift_storeEnumTagSinglePayload(v42, 1, 1, v61);
    v32(v60, v59, v84);
    v41 = v43;
    sub_242C47B64();
    sub_242C47C18();
    v58(v41, v40);
    sub_242A69418(v37, v39);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B82274(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(_QWORD *, _QWORD);
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  char isUniquelyReferenced_nonNull_native;
  char *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  id v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  unint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD v158[44];
  _QWORD v159[30];
  _QWORD v160[30];
  _BYTE v161[72];
  uint64_t v162;

  v149 = a6;
  v150 = a7;
  v146 = a4;
  v147 = a5;
  v155 = a3;
  v151 = a13;
  v148 = a12;
  v16 = sub_242C47B7C();
  v135 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v134 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_242C47CB4();
  v143 = *(_QWORD *)(v18 - 8);
  v144 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v139 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v140 = (char *)&v121 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v142 = (uint64_t)&v121 - v23;
  v162 = sub_242C47CD8();
  v157 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v138 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v141 = (char *)&v121 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v153 = (char *)&v121 - v28;
  v29 = sub_242C47D68();
  v30 = *(_QWORD *)(v29 - 8);
  v136 = v29;
  v137 = v30;
  MEMORY[0x24BDAC7A8](v29);
  v133 = (char *)&v121 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v152 = (uint64_t)&v121 - v33;
  v34 = sub_242C47B10();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v121 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  MEMORY[0x24BDAC7A8](v38);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v121 - v40;
  v145 = v34;
  v154 = v37;
  v156 = v35;
  v132 = v41;
  if ((a2 & 1) != 0)
  {
    v44 = (char *)&v121 - v40;
    __swift_storeEnumTagSinglePayload(v41, 1, 1, v16);
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, *MEMORY[0x24BDCD7A0], v34);
    sub_242C47B64();
    v42 = v44;
    v43 = 0;
  }
  else
  {
    v43 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v42, v43, 1, v16);
  v159[0] = v155;
  v159[1] = v146;
  v159[2] = v147;
  v159[3] = v149;
  v46 = type metadata accessor for Function(0, v148, v151, v45);
  v47 = sub_242C480E0();
  sub_242A6639C(v47, a8, (uint64_t)v42, v46, v48, v49, v50, v51, v121, (uint64_t)v122, v123, (uint64_t)v124, v125, (uint64_t)v126, v127, v128, v129, (uint64_t)v130, v131,
    v132);
  if (v13)
  {
    sub_242A690D0((uint64_t)v42);
    return swift_bridgeObjectRelease();
  }
  v125 = v16;
  v130 = v42;
  swift_bridgeObjectRelease();
  sub_242A670D8((uint64_t)v160, (uint64_t)v159);
  sub_242BACC80((uint64_t)v161);
  type metadata accessor for MILProgramBuilder();
  swift_initStackObject();
  v53 = sub_242B001A0(v159, 1, 1, (uint64_t)v161);
  sub_242AFD004();
  v124 = v53;
  v55 = v54;
  sub_242B83088((uint64_t)v160);
  v56 = v152;
  sub_242A90ADC(v55, 1852399981, 0xE400000000000000, v152);
  v147 = 0;
  v122 = v55;
  v57 = *(_QWORD *)(sub_242C47D20() + 16);
  swift_bridgeObjectRelease();
  v146 = v57;
  if (!v57)
  {
    v91 = v154;
    v72 = v156;
    goto LABEL_52;
  }
  v58 = 0;
  v131 = *(_QWORD *)(a9 + 16);
  v126 = (unint64_t *)(a9 + 64);
  do
  {
    v59 = sub_242C47D20();
    if (v58 >= *(_QWORD *)(v59 + 16))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      JUMPOUT(0x242B8307CLL);
    }
    v60 = v157;
    v149 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    v148 = *(_QWORD *)(v157 + 72) * v58;
    v61 = v153;
    v62 = v162;
    (*(void (**)(char *, unint64_t, uint64_t))(v157 + 16))(v153, v59 + v149 + v148, v162);
    swift_bridgeObjectRelease();
    v63 = sub_242C47CCC();
    v65 = v64;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    if (!v131)
    {
      swift_bridgeObjectRelease();
      v72 = v156;
      goto LABEL_35;
    }
    v151 = v58;
    v66 = v126;
    v67 = v131;
    while (1)
    {
      v68 = *(v66 - 2);
      v69 = *(v66 - 1);
      v70 = *v66;
      v71 = *(v66 - 4) == v63 && *(v66 - 3) == v65;
      if (v71 || (sub_242C4925C() & 1) != 0)
        break;
      v66 += 5;
      if (!--v67)
        goto LABEL_27;
    }
    sub_242C480E0();
    v73 = sub_242A62654(v68, v69, v70);
    v77 = sub_242BBBB3C(v73, v74, v75, v76);
    v78 = v77;
    v129 = *(_QWORD *)(v77 + 16);
    if (!v129)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242A69490(v68, v69, v70);
LABEL_27:
      swift_bridgeObjectRelease();
      v56 = v152;
      goto LABEL_34;
    }
    v79 = *(_QWORD *)(v77 + 32);
    v80 = *(_QWORD *)(v78 + 40);
    v150 = *(_QWORD *)(v78 + 48);
    v81 = v79 == v63 && v80 == v65;
    v56 = v152;
    if (v81)
    {
      v83 = v65;
      goto LABEL_29;
    }
    v123 = v78;
    v82 = v80;
    if ((sub_242C4925C() & 1) != 0)
    {
      v83 = v82;
LABEL_29:
      v129 = v83;
      sub_242C480E0();
      swift_retain();
      swift_bridgeObjectRelease();
      v158[0] = v68;
      v158[1] = v69;
      v158[2] = v70;
      v84 = v142;
      v85 = v147;
      sub_242B079AC(v150, v142);
      v147 = v85;
      if (!v85)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v140, v84, v144);
        sub_242C47CC0();
        v56 = v152;
        v86 = (void (*)(_QWORD *, _QWORD))sub_242C47D14();
        v88 = v87;
        v89 = *v87;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v88 = v89;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v89 = sub_242B4B590();
          *v88 = v89;
        }
        if (v151 >= *(_QWORD *)(v89 + 16))
        {
          __break(1u);
          JUMPOUT(0x242B83084);
        }
        (*(void (**)(unint64_t, char *, uint64_t))(v157 + 40))(v89 + v149 + v148, v141, v162);
        v86(v158, 0);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_242A69490(v68, v69, v70);
        (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v142, v144);
        goto LABEL_34;
      }

      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v152, v136);
      sub_242A6945C(v160);
      sub_242A690D0((uint64_t)v130);
      swift_bridgeObjectRelease();
      return sub_242A69490(v68, v69, v70);
    }
    if (v129 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    v92 = (uint64_t *)(v123 + 72);
    v93 = 1;
    do
    {
      if (__OFADD__(v93, 1))
        goto LABEL_78;
      v94 = *(v92 - 2);
      v95 = *(v92 - 1);
      v150 = *v92;
      if (v94 == v63 && v95 == v65)
      {
        v83 = v65;
        goto LABEL_29;
      }
      v127 = v93 + 1;
      v128 = v93;
      if ((sub_242C4925C() & 1) != 0)
      {
        v83 = v95;
        goto LABEL_29;
      }
      v92 += 3;
      v93 = v128 + 1;
    }
    while (v127 != v129);
    swift_bridgeObjectRelease();
    v56 = v152;
LABEL_48:
    swift_bridgeObjectRelease();
    sub_242A69490(v68, v69, v70);
    swift_bridgeObjectRelease();
LABEL_34:
    v72 = v156;
    v58 = v151;
LABEL_35:
    ++v58;
    v91 = v154;
  }
  while (v58 != v146);
LABEL_52:
  v97 = *(_QWORD *)(sub_242C47D44() + 16);
  swift_bridgeObjectRelease();
  v149 = v97;
  if (v97)
  {
    v98 = 0;
    v148 = *(_QWORD *)(a10 + 16);
    v142 = a10 + 48;
    while (1)
    {
      v99 = sub_242C47D44();
      if (v98 >= *(_QWORD *)(v99 + 16))
        goto LABEL_77;
      v100 = v157;
      v151 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
      v150 = *(_QWORD *)(v157 + 72) * v98;
      v101 = v153;
      v102 = v162;
      (*(void (**)(char *, unint64_t, uint64_t))(v157 + 16))(v153, v99 + v151 + v150, v162);
      swift_bridgeObjectRelease();
      v103 = sub_242C47CCC();
      v105 = v104;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
      v106 = v148;
      if (v148)
      {
        v107 = v142;
        v72 = v156;
        do
        {
          v108 = *(_QWORD *)(v107 - 16) == v103 && *(_QWORD *)(v107 - 8) == v105;
          if (v108 || (sub_242C4925C() & 1) != 0)
          {
            v109 = sub_242C480E0();
            sub_242BBBAA4(v109, v110, v111, v112);
          }
          v107 += 24;
          --v106;
        }
        while (v106);
        swift_bridgeObjectRelease();
        v56 = v152;
        v113 = v145;
      }
      else
      {
        swift_bridgeObjectRelease();
        v113 = v145;
        v72 = v156;
      }
      ++v98;
      v91 = v154;
      if (v98 == v149)
        goto LABEL_69;
    }
  }
  v113 = v145;
LABEL_69:
  v114 = v136;
  v115 = v133;
  (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v133, v56, v136);
  v116 = v125;
  __swift_storeEnumTagSinglePayload(v132, 1, 1, v125);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v91, *MEMORY[0x24BDCD7A0], v113);
  v117 = v134;
  sub_242C47B64();
  v118 = v147;
  sub_242C47D08();
  if (v118)
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v135 + 8))(v117, v116);
    v119 = *(void (**)(char *, uint64_t))(v137 + 8);
    v119(v115, v114);
    v119((char *)v56, v114);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v135 + 8))(v117, v116);
    v120 = *(void (**)(char *, uint64_t))(v137 + 8);
    v120(v115, v114);
    if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v116) != 1)
      sub_242B83154();
    sub_242B83264();

    swift_release();
    v120((char *)v56, v114);
  }
  sub_242A6945C(v160);
  return sub_242A690D0((uint64_t)v130);
}

uint64_t sub_242B83088(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 224) + 16);
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = sub_242A9B6C4(*(_QWORD *)(a1 + 224));
      if (v2 == 2 || (v2 & 1) != 0)
        return 6;
      return 7;
    }
    swift_bridgeObjectRetain_n();
    sub_242C3782C();
    v5 = v4;
    swift_bridgeObjectRelease();
    v8 = v5;
    sub_242BB6668(&v8);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v8 + 16))
    {
      v6 = *(_BYTE *)(v8 + 32);
      swift_release();
      if ((v6 & 1) == 0)
        return 7;
    }
    else
    {
      swift_release();
    }
  }
  return 6;
}

uint64_t sub_242B83154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[8];

  v0 = sub_242C47C3C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C47C30();
  v4 = sub_242C47C24();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8[0] = 0xD000000000000010;
  v8[1] = 0x8000000242C65230;
  v8[2] = 0xD000000000000014;
  v8[3] = 0x8000000242C65270;
  v8[4] = 0x73746867696577;
  v8[5] = 0xE700000000000000;
  v8[6] = 0xD000000000000018;
  v8[7] = 0x8000000242C65250;
  sub_242B8CA20(v8, v4, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B83264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];
  _WORD v5[8];
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4[0] = 0xD000000000000010;
  v4[1] = 0x8000000242C65230;
  v4[2] = 0xD00000000000001ALL;
  v4[3] = 0x8000000242C65210;
  strcpy((char *)v5, "model.mlmodel");
  v5[7] = -4864;
  v6 = 0xD00000000000001ELL;
  v7 = 0x8000000242C651F0;
  sub_242C480E0();
  sub_242B8CA20(v4, v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B83324()
{
  char v0;
  char v1;

  sub_242C48284();
  sub_242A692CC();
  v0 = sub_242C48AF4();
  swift_bridgeObjectRelease();
  if ((v0 & 1) != 0)
  {
    if ((sub_242C48398() & 1) != 0)
      v1 = 1;
    else
      v1 = sub_242C48398();
  }
  else
  {
    v1 = 0;
  }
  return v1 & 1;
}

void sub_242B83410()
{
  Tensor.split(count:alongAxis:)();
  sub_242A9BBDC(2uLL, 3uLL);
  Tensor.init(concatenating:alongAxis:scalarType:)();
}

uint64_t sub_242B8347C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v6;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000242C6F590 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6F666E496D657469 && a2 == 0xEF73656972746E45;
    if (v5 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000242C6F5B0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v6 = sub_242C4925C();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_242B835E8(char a1)
{
  uint64_t result;

  result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1)
      return 0x6F666E496D657469;
    else
      return 0xD000000000000013;
  }
  return result;
}

uint64_t sub_242B83654(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228E60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B84E44();
  sub_242C49478();
  v12 = 0;
  sub_242C49154();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 16);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228E70);
    sub_242B84EBC(&qword_257228E78, (uint64_t (*)(void))sub_242B84E80, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_242C49184();
    v10[14] = 2;
    sub_242C49154();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_242B837D4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];
  char v20;
  char v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228E88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B84E44();
  sub_242C49448();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
    v9 = sub_242C490A0();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228E70);
    v21 = 1;
    sub_242B84EBC(&qword_257228E90, (uint64_t (*)(void))sub_242B84F30, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_242C480E0();
    sub_242C490D0();
    v19[0] = v9;
    v12 = v19[1];
    v20 = 2;
    sub_242C480E0();
    v13 = sub_242C490A0();
    v15 = v14;
    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17 = v13;
    v16(v8, v5);
    sub_242C480E0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a2 = v19[0];
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v17;
    a2[4] = v15;
  }
  return result;
}

void sub_242B83A44()
{
  sub_242B83CFC();
}

uint64_t sub_242B83A60()
{
  char *v0;

  return sub_242B835E8(*v0);
}

uint64_t sub_242B83A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B8347C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242B83A8C()
{
  sub_242B84E44();
  return sub_242C494D8();
}

uint64_t sub_242B83AB4()
{
  sub_242B84E44();
  return sub_242C494E4();
}

double sub_242B83ADC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_242B837D4(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_242B83B20(_QWORD *a1)
{
  return sub_242B83654(a1);
}

uint64_t sub_242B83B58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x726F68747561 && a2 == 0xE600000000000000;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_242C4925C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1701667182 && a2 == 0xE400000000000000;
      if (v7 || (sub_242C4925C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 1752457584 && a2 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_242C4925C();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

void sub_242B83CFC()
{
  OUTLINED_FUNCTION_103_6();
  sub_242C4934C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242B83D2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242B83D5C + 4 * byte_242C59230[a1]))(0x726F68747561, 0xE600000000000000);
}

uint64_t sub_242B83D5C()
{
  return 0x7470697263736564;
}

uint64_t sub_242B83D7C()
{
  return 1701667182;
}

uint64_t sub_242B83D8C()
{
  return 1752457584;
}

uint64_t sub_242B83D9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228EB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B84F6C();
  sub_242C49478();
  v8[15] = 0;
  sub_242C49154();
  if (!v1)
  {
    v8[14] = 1;
    sub_242C49154();
    v8[13] = 2;
    sub_242C49154();
    v8[12] = 3;
    sub_242C49154();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_242B83F00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228EA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242B84F6C();
  sub_242C49448();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v30 = 0;
    v9 = sub_242C490A0();
    v11 = v10;
    v26 = v9;
    v29 = 1;
    sub_242C480E0();
    v12 = sub_242C490A0();
    v14 = v13;
    v25 = v12;
    v28 = 2;
    sub_242C480E0();
    v23 = sub_242C490A0();
    v24 = v15;
    v27 = 3;
    sub_242C480E0();
    v16 = sub_242C490A0();
    v18 = v17;
    v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20 = v16;
    v19(v8, v5);
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v21 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a2 = v26;
    a2[1] = v11;
    a2[2] = v25;
    a2[3] = v14;
    a2[4] = v23;
    a2[5] = v21;
    a2[6] = v20;
    a2[7] = v18;
  }
  return result;
}

void sub_242B841EC()
{
  sub_242C49340();
  OUTLINED_FUNCTION_32_2();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242B84218()
{
  unsigned __int8 *v0;

  return sub_242B83D2C(*v0);
}

uint64_t sub_242B84220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242B83B58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242B84244()
{
  sub_242B84F6C();
  return sub_242C494D8();
}

uint64_t sub_242B8426C()
{
  sub_242B84F6C();
  return sub_242C494E4();
}

double sub_242B84294@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_242B83F00(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_242B842D4(_QWORD *a1)
{
  return sub_242B83D9C(a1);
}

void sub_242B8430C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  void (*v25)(char *__return_ptr, uint64_t, unint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257227910);
  v2 = sub_242C48FEC();
  v3 = (_QWORD *)v2;
  v4 = 0;
  v45 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v42 = v6;
  v43 = (unint64_t)(v8 + 63) >> 6;
  v44 = v2 + 64;
  v41 = (_QWORD *)v2;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v45 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = (uint64_t *)(*(_QWORD *)(v45 + 56) + 24 * i);
    v21 = *v19;
    v20 = v19[1];
    v22 = v19[2];
    if ((v22 & 0x2000000000000000) != 0)
    {
      v31 = v18;
      v32 = v4;
      v33 = v19[2];
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_242C4DE40;
      *(_QWORD *)(v34 + 32) = 1;
      if ((v22 & 0x100) != 0)
      {
        v36 = 3;
        if (v33 >= 2)
          v36 = 1;
        *(_QWORD *)(v34 + 40) = v36;
        *(_QWORD *)(v34 + 48) = v21;
        *(_QWORD *)(v34 + 56) = v20;
      }
      else
      {
        *(_QWORD *)(v34 + 40) = v21;
        *(_QWORD *)(v34 + 48) = v20;
        v35 = 3;
        if (v33 >= 2)
          v35 = 1;
        *(_QWORD *)(v34 + 56) = v35;
      }
      v4 = v32;
      v18 = v31;
      v3 = v41;
      v51 = v34;
      v50 = 10;
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      v46 = 0u;
      sub_242C480E0();
      goto LABEL_32;
    }
    if (!(v22 >> 62))
    {
      v51 = *v19;
      v50 = v20;
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      v46 = 0u;
      sub_242C480E0();
      sub_242A62654(v21, v20, v22);
      goto LABEL_32;
    }
    if (v22 >> 62 == 1)
    {
      v51 = *v19;
      v23 = v18;
      v24 = v4;
      v25 = *(void (**)(char *__return_ptr, uint64_t, unint64_t))(v22 + 32);
      sub_242C480E0();
      sub_242A62654(v21, v20, v22);
      v25(&v50, v20, v22 & 0x3FFFFFFFFFFFFFFFLL);
      v4 = v24;
      v18 = v23;
      v3 = v41;
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      v46 = 0u;
LABEL_32:
      Tensor.init(zeros:scalarType:on:)(&v51, &v50, (uint64_t)&v46, v26, v27, v28, v29, v30, &v52);
      goto LABEL_33;
    }
    v52 = *v19;
    sub_242C480E0();
    sub_242A62654(v21, v20, v22);
LABEL_33:
    *(_QWORD *)(v44 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v37 = (_QWORD *)(v3[6] + 16 * i);
    *v37 = v18;
    v37[1] = v17;
    *(_QWORD *)(v3[7] + 8 * i) = v52;
    v38 = v3[2];
    v39 = __OFADD__(v38, 1);
    v40 = v38 + 1;
    if (v39)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v3[2] = v40;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_39;
    if (v13 >= v43)
      return;
    v14 = *(_QWORD *)(v42 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v43)
        return;
      v14 = *(_QWORD *)(v42 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v43)
          return;
        v14 = *(_QWORD *)(v42 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v43)
    return;
  v14 = *(_QWORD *)(v42 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v43)
      return;
    v14 = *(_QWORD *)(v42 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_242B84688(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257228E58);
  result = sub_242C48FEC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v17;
    v19[1] = result;
    v20 = v3[7] + 24 * i;
    *(_QWORD *)v20 = v18;
    *(_OWORD *)(v20 + 8) = xmmword_242C53170;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    sub_242C480E0();
    result = swift_retain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_242B8485C()
{
  unint64_t result;

  result = qword_257228E40;
  if (!qword_257228E40)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for MLPackageWritingOptions.ParameterStorageMode, &type metadata for MLPackageWritingOptions.ParameterStorageMode);
    atomic_store(result, (unint64_t *)&qword_257228E40);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLPackageWritingOptions()
{
  return &type metadata for MLPackageWritingOptions;
}

uint64_t _s14NeuralNetworks23MLPackageWritingOptionsV20ParameterStorageModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242B848F8 + 4 * byte_242C59239[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242B8492C + 4 * byte_242C59234[v4]))();
}

uint64_t sub_242B8492C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B84934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B8493CLL);
  return result;
}

uint64_t sub_242B84948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B84950);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242B84954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B8495C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLPackageWritingOptions.ParameterStorageMode()
{
  return &type metadata for MLPackageWritingOptions.ParameterStorageMode;
}

uint64_t sub_242B84978()
{
  __n128 v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = OUTLINED_FUNCTION_59_15();
  return sub_242B81C08(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v9, v10);
}

uint64_t sub_242B849A0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = OUTLINED_FUNCTION_59_15();
  return sub_242B82274(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], *(_QWORD *)(v0 + 104), v10, v11);
}

uint64_t sub_242B849D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_242B81424(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t destroy for MLPackageManifest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MLPackageManifest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

_QWORD *assignWithCopy for MLPackageManifest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MLPackageManifest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLPackageManifest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLPackageManifest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLPackageManifest()
{
  return &type metadata for MLPackageManifest;
}

uint64_t destroy for MLPackageManifest.InfoEntry()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MLPackageManifest.InfoEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

_QWORD *assignWithCopy for MLPackageManifest.InfoEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MLPackageManifest.InfoEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLPackageManifest.InfoEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLPackageManifest.InfoEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLPackageManifest.InfoEntry()
{
  return &type metadata for MLPackageManifest.InfoEntry;
}

unint64_t sub_242B84E44()
{
  unint64_t result;

  result = qword_257228E68;
  if (!qword_257228E68)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59598, &type metadata for MLPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228E68);
  }
  return result;
}

unint64_t sub_242B84E80()
{
  unint64_t result;

  result = qword_257228E80;
  if (!qword_257228E80)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5932C, &type metadata for MLPackageManifest.InfoEntry);
    atomic_store(result, (unint64_t *)&qword_257228E80);
  }
  return result;
}

uint64_t sub_242B84EBC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257228E70);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x2494EDE24](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_242B84F30()
{
  unint64_t result;

  result = qword_257228E98;
  if (!qword_257228E98)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59354, &type metadata for MLPackageManifest.InfoEntry);
    atomic_store(result, (unint64_t *)&qword_257228E98);
  }
  return result;
}

unint64_t sub_242B84F6C()
{
  unint64_t result;

  result = qword_257228EA8;
  if (!qword_257228EA8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59548, &type metadata for MLPackageManifest.InfoEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228EA8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MLPackageManifest.InfoEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242B84FF4 + 4 * byte_242C59243[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242B85028 + 4 * byte_242C5923E[v4]))();
}

uint64_t sub_242B85028(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B85030(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B85038);
  return result;
}

uint64_t sub_242B85044(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B8504CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242B85050(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B85058(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLPackageManifest.InfoEntry.CodingKeys()
{
  return &type metadata for MLPackageManifest.InfoEntry.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MLPackageManifest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242B850C0 + 4 * byte_242C5924D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242B850F4 + 4 * byte_242C59248[v4]))();
}

uint64_t sub_242B850F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B850FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B85104);
  return result;
}

uint64_t sub_242B85110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B85118);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242B8511C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B85124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLPackageManifest.CodingKeys()
{
  return &type metadata for MLPackageManifest.CodingKeys;
}

unint64_t sub_242B85144()
{
  unint64_t result;

  result = qword_257228EB8;
  if (!qword_257228EB8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59468, &type metadata for MLPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228EB8);
  }
  return result;
}

unint64_t sub_242B85184()
{
  unint64_t result;

  result = qword_257228EC0;
  if (!qword_257228EC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59520, &type metadata for MLPackageManifest.InfoEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228EC0);
  }
  return result;
}

unint64_t sub_242B851C4()
{
  unint64_t result;

  result = qword_257228EC8;
  if (!qword_257228EC8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59490, &type metadata for MLPackageManifest.InfoEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228EC8);
  }
  return result;
}

unint64_t sub_242B85204()
{
  unint64_t result;

  result = qword_257228ED0;
  if (!qword_257228ED0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C594B8, &type metadata for MLPackageManifest.InfoEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228ED0);
  }
  return result;
}

unint64_t sub_242B85244()
{
  unint64_t result;

  result = qword_257228ED8;
  if (!qword_257228ED8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C593D8, &type metadata for MLPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228ED8);
  }
  return result;
}

unint64_t sub_242B85284()
{
  unint64_t result;

  result = qword_257228EE0;
  if (!qword_257228EE0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59400, &type metadata for MLPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257228EE0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_64@<X0>(void (*a1)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  return sub_242B7E7F8(v11, a7, a6, v10, a5, v8, v7, v13, v9, v12, a1);
}

uint64_t OUTLINED_FUNCTION_8_41(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_9_49()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_14_32()
{
  return sub_242C491CC();
}

void OUTLINED_FUNCTION_15_36()
{
  uint64_t v0;

  sub_242B07358((uint64_t *)(v0 - 72));
}

uint64_t OUTLINED_FUNCTION_16_36@<X0>(void (*a1)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  return sub_242B7E7F8(a8, a5, v9, a7, v14, v10, v8, v12, v11, v13, a1);
}

uint64_t OUTLINED_FUNCTION_17_34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;

  return sub_242B7E7F8(a1, a2, a3, a4, a5, a6, v11, v12, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_19_32()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_20_37()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_25_33(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
}

uint64_t OUTLINED_FUNCTION_28_35()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_32_29()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 2;
  *(_QWORD *)(v0 - 136) = 46;
  *(_QWORD *)(v0 - 128) = 0xE100000000000000;
  *(_BYTE *)(v0 - 120) = 1;
  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_33_23()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_34_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_36_24(uint64_t a1)
{
  return sub_242B7DB04(a1);
}

uint64_t OUTLINED_FUNCTION_37_25(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = result;
  return result;
}

void OUTLINED_FUNCTION_39_25(uint64_t a1)
{
  sub_242B8430C(a1);
}

uint64_t OUTLINED_FUNCTION_40_25(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_43_25()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_46_21()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_48_24()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_23()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_53_14()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_54_14()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_55_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return v4(a1, v8, v7, a4, v6, v5);
}

void OUTLINED_FUNCTION_57_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  *(_QWORD *)(v1 + 16) = v4;
  v7 = v1 + v0 * v5;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = v3;
  *(_WORD *)(v7 + 48) = v6;
}

__n128 OUTLINED_FUNCTION_59_15()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 88);
}

uint64_t OUTLINED_FUNCTION_61_15(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  return sub_242B7E0C8(v4, v6, v5, a4);
}

uint64_t OUTLINED_FUNCTION_64_16(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_242B7F7A4(a1, a2);
}

void OUTLINED_FUNCTION_65_16(uint64_t a1, void (*a2)(void))
{
  sub_242B7ED8C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_67_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_68_12()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_69_12()
{
  sub_242AC3E00();
}

uint64_t OUTLINED_FUNCTION_72_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_73_13()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_75_9()
{
  sub_242B7E9E8();
}

void OUTLINED_FUNCTION_76_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_242B7FD94(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_77_10(uint64_t a1)
{
  return sub_242B7FB90(a1);
}

void OUTLINED_FUNCTION_78_8(__int16 a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_242B7E424(a1, a2, a3);
}

unint64_t OUTLINED_FUNCTION_79_8(uint64_t a1)
{
  return sub_242B7EFCC(a1);
}

uint64_t OUTLINED_FUNCTION_80_11()
{
  return sub_242C48398();
}

char *OUTLINED_FUNCTION_81_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  return &a21;
}

uint64_t OUTLINED_FUNCTION_82_10()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_83_10()
{
  return sub_242A66F3C();
}

char *OUTLINED_FUNCTION_85_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  return &a19;
}

uint64_t OUTLINED_FUNCTION_86_8(uint64_t a1)
{
  uint64_t v1;

  return sub_242B07710(a1, v1);
}

uint64_t OUTLINED_FUNCTION_90_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_92_7(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_94_7()
{
  sub_242AC3E00();
}

uint64_t OUTLINED_FUNCTION_97_7()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_98_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_99_6()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_102_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for Function(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_103_6()
{
  return sub_242C49340();
}

uint64_t OUTLINED_FUNCTION_105_6()
{
  return sub_242C48314();
}

void OUTLINED_FUNCTION_108_6(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

void sub_242B8582C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_35();
  v0 = OUTLINED_FUNCTION_40_26();
  OUTLINED_FUNCTION_18_37(v0, v1, v2, v0);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_0_45();
}

void sub_242B8586C()
{
  unint64_t v0;

  sub_242B858D0();
  if (v0 >> 62)
  {
    if (v0 >> 62 != 1)
      OUTLINED_FUNCTION_63_8();
    OUTLINED_FUNCTION_29_27();
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242B858D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 16);
  swift_retain_n();
  sub_242B5AFB4();
  swift_beginAccess();
  v2 = v1[3];
  sub_242B88B38(v2, v1[4], v1[5]);
  sub_242B5AFD4();
  swift_release_n();
  return v2;
}

_QWORD *sub_242B85960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  type metadata accessor for UnfairLock();
  swift_allocObject();
  v3[2] = sub_242B5AF3C();
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  return v3;
}

uint64_t sub_242B859C0(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v9;
  uint64_t v10;

  v6 = v5;
  v9 = *a2;
  *(_QWORD *)(v6 + 24) = *a1;
  *(_BYTE *)(v6 + 32) = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
  swift_allocObject();
  swift_retain();
  v10 = OUTLINED_FUNCTION_63_8();
  *(_QWORD *)(v6 + 16) = sub_242B85960(v10, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return v6;
}

void sub_242B85A58(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  sub_242B85AC8(a1, a2, a3, a4, (void (*)(uint64_t))sub_242B8643C);
}

#error "242B85A84: call analysis failed (funcsize=6)"

void sub_242B85A90()
{
  sub_242B85C50();
}

void sub_242B85AAC(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  sub_242B85AC8(a1, a2, a3, a4, (void (*)(uint64_t))sub_242B86A18);
}

void sub_242B85AC8(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(a4 + 24) = *a1;
  *(_BYTE *)(a4 + 32) = *a2;
  v8 = OUTLINED_FUNCTION_39();
  MEMORY[0x2494ED6EC](v8);
  v9 = OUTLINED_FUNCTION_38_23();
  a5(v9);
  objc_autoreleasePoolPop((void *)OUTLINED_FUNCTION_22_28());
  OUTLINED_FUNCTION_49();
  if (v5)
  {
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_11_41();
    OUTLINED_FUNCTION_6_58();
  }
  else
  {
    OUTLINED_FUNCTION_30_28();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(a4 + 16) = OUTLINED_FUNCTION_7_44();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_0_29();
}

#error "242B85BA0: call analysis failed (funcsize=6)"

void sub_242B85BAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_3_58(v2, v3, v4, v5);
  v6 = sub_242C480E0();
  MEMORY[0x2494ED6EC](v6);
  v7 = OUTLINED_FUNCTION_17_35();
  sub_242B86E24(v7, v8, v9, v10, v11, v12);
  objc_autoreleasePoolPop((void *)OUTLINED_FUNCTION_22_28());
  OUTLINED_FUNCTION_0_74();
  if (v1)
  {
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    OUTLINED_FUNCTION_33_24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_8_42();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_13_0();
  }
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_0_17();
}

void sub_242B85C50()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_24_4();
  v3 = v2;
  OUTLINED_FUNCTION_3_58(v4, v5, v6, v7);
  v8 = OUTLINED_FUNCTION_63_8();
  MEMORY[0x2494ED6EC](v8);
  v9 = OUTLINED_FUNCTION_17_35();
  v3(v9);
  objc_autoreleasePoolPop((void *)OUTLINED_FUNCTION_22_28());
  OUTLINED_FUNCTION_0_74();
  if (v1)
  {
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
    OUTLINED_FUNCTION_3_19();
  }
  else
  {
    OUTLINED_FUNCTION_33_24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_8_42();
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_13_0();
  }
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_0_17();
}

void sub_242B85CEC(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  void *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(a4 + 24) = *a1;
  *(_BYTE *)(a4 + 32) = *a2;
  OUTLINED_FUNCTION_9_50();
  v11 = sub_242A92930(a5, a6);
  MEMORY[0x2494ED6EC](v11);
  v12 = OUTLINED_FUNCTION_21_32();
  sub_242B87004(v12, v13, v14, v15, v16, a5, a6);
  objc_autoreleasePoolPop(v7);
  OUTLINED_FUNCTION_0_74();
  if (v6)
  {
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(a4 + 16) = OUTLINED_FUNCTION_23_34();
    OUTLINED_FUNCTION_50_0();
  }
  sub_242A69418(a5, a6);
  OUTLINED_FUNCTION_0_29();
}

void sub_242B85DC4(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  *(_QWORD *)(a4 + 24) = *a1;
  *(_BYTE *)(a4 + 32) = *a2;
  v8 = OUTLINED_FUNCTION_9_50();
  v9 = (void *)MEMORY[0x2494ED6EC](v8);
  OUTLINED_FUNCTION_19_33();
  sub_242B873BC(v10, v11, v12, v13, v14, a5, v15);
  objc_autoreleasePoolPop(v9);
  OUTLINED_FUNCTION_0_74();
  if (v5)
  {
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
  }
  else
  {
    OUTLINED_FUNCTION_30_28();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(a4 + 16) = OUTLINED_FUNCTION_7_44();
    OUTLINED_FUNCTION_17_5();
  }
  OUTLINED_FUNCTION_13_45();
}

void sub_242B85E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_24_4();
  a23 = v29;
  a24 = v30;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  OUTLINED_FUNCTION_3_58(v37, v38, v39, v40);
  v41 = swift_retain();
  MEMORY[0x2494ED6EC](v41);
  sub_242B87568(v27, v25, v28, v25, v28, v36, v34, v32, (uint64_t)&a10);
  objc_autoreleasePoolPop((void *)OUTLINED_FUNCTION_22_28());
  OUTLINED_FUNCTION_0_74();
  if (v26)
  {
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
  }
  else
  {
    OUTLINED_FUNCTION_33_24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v24 + 16) = OUTLINED_FUNCTION_8_42();
    OUTLINED_FUNCTION_17_1();
  }
  swift_release();
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_0_17();
}

#error "242B85F5C: call analysis failed (funcsize=6)"

void sub_242B85F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v32)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_24_4();
  a23 = v29;
  a24 = v30;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  OUTLINED_FUNCTION_3_58(v37, v38, v39, v40);
  v41 = sub_242C480E0();
  MEMORY[0x2494ED6EC](v41);
  v32(&a10, v27, v25, v28, v25, v28, v36, v34);
  objc_autoreleasePoolPop((void *)OUTLINED_FUNCTION_22_28());
  OUTLINED_FUNCTION_0_74();
  if (v26)
  {
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    OUTLINED_FUNCTION_33_24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v24 + 16) = OUTLINED_FUNCTION_8_42();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_13_0();
  }
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_0_17();
}

uint64_t sub_242B86028(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, float a5)
{
  uint64_t v5;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  _BYTE v14[24];

  v9 = *a1;
  *(_QWORD *)(a4 + 24) = *a1;
  v10 = *a2;
  *(_BYTE *)(a4 + 32) = *a2;
  v11 = OUTLINED_FUNCTION_9_50();
  v12 = (void *)MEMORY[0x2494ED6EC](v11);
  sub_242B879C8(a3, v9, v10, v9, v10, (uint64_t)v14, a5);
  objc_autoreleasePoolPop(v12);
  OUTLINED_FUNCTION_0_74();
  if (v5)
  {
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
  }
  else
  {
    OUTLINED_FUNCTION_30_28();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(a4 + 16) = OUTLINED_FUNCTION_7_44();
    OUTLINED_FUNCTION_17_5();
  }
  return a4;
}

void sub_242B86108(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  *(_QWORD *)(a4 + 24) = *a1;
  *(_BYTE *)(a4 + 32) = *a2;
  v8 = OUTLINED_FUNCTION_9_50();
  v9 = (void *)MEMORY[0x2494ED6EC](v8);
  OUTLINED_FUNCTION_19_33();
  sub_242B87B8C(v10, v11, v12, v13, v14, a5, v15);
  objc_autoreleasePoolPop(v9);
  OUTLINED_FUNCTION_0_74();
  if (v5)
  {
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
  }
  else
  {
    OUTLINED_FUNCTION_30_28();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(a4 + 16) = OUTLINED_FUNCTION_7_44();
    OUTLINED_FUNCTION_17_5();
  }
  OUTLINED_FUNCTION_13_45();
}

void sub_242B861C8(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  *(_QWORD *)(a4 + 24) = *a1;
  *(_BYTE *)(a4 + 32) = *a2;
  OUTLINED_FUNCTION_9_50();
  v8 = OUTLINED_FUNCTION_63_8();
  MEMORY[0x2494ED6EC](v8);
  OUTLINED_FUNCTION_19_33();
  sub_242B87D48(v9, v10, v11, v12, v13, a5, v14);
  objc_autoreleasePoolPop((void *)OUTLINED_FUNCTION_22_28());
  OUTLINED_FUNCTION_0_74();
  if (v5)
  {
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
    OUTLINED_FUNCTION_3_19();
  }
  else
  {
    OUTLINED_FUNCTION_33_24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(a4 + 16) = OUTLINED_FUNCTION_8_42();
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_13_0();
  }
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_13_45();
}

void sub_242B8628C(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  *(_QWORD *)(a4 + 24) = *a1;
  *(_BYTE *)(a4 + 32) = *a2;
  OUTLINED_FUNCTION_9_50();
  swift_retain();
  v7 = swift_retain();
  MEMORY[0x2494ED6EC](v7);
  v8 = OUTLINED_FUNCTION_21_32();
  sub_242B87F38(v8, v9, v10, v11, v12, v13);
  objc_autoreleasePoolPop(v5);
  OUTLINED_FUNCTION_0_74();
  if (v4)
  {
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_11_41();
    type metadata accessor for MPSGraphTensorStorage();
    OUTLINED_FUNCTION_1_64();
    OUTLINED_FUNCTION_17_5();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(a4 + 16) = OUTLINED_FUNCTION_23_34();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_17_1();
  }
  swift_release();
  OUTLINED_FUNCTION_0_29();
}

void sub_242B86370()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(id, char *);
  void (*v3)(id, char *);
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_24_4();
  v3 = v2;
  v5 = *v4;
  *(_QWORD *)(v0 + 24) = *v4;
  v7 = *v6;
  *(_BYTE *)(v0 + 32) = *v6;
  v8 = OUTLINED_FUNCTION_39();
  MEMORY[0x2494ED6EC](v8);
  v9 = OUTLINED_FUNCTION_38_23();
  sub_242B88128(v9, v10, v7, v3, v5, v7, v11);
  objc_autoreleasePoolPop((void *)OUTLINED_FUNCTION_22_28());
  OUTLINED_FUNCTION_49();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_11_41();
    OUTLINED_FUNCTION_6_58();
  }
  else
  {
    OUTLINED_FUNCTION_30_28();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257229070);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_7_44();
    OUTLINED_FUNCTION_17_1();
  }
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_0_17();
}

uint64_t sub_242B8643C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(a2 + 32);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v10)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    sub_242A59170();
  }
  v14 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v15 = 1;
  else
    v15 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
    goto LABEL_14;
  v16 = sub_242B279DC(v14 * v15, 0);
  if (!v16)
    goto LABEL_15;
  v17 = v16;
  objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v18 = v17;
  objc_msgSend(v18, sel_length);
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 40) = a5;
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)a6 = v19;
  *(_OWORD *)(a6 + 8) = xmmword_242C53170;
  sub_242C480E0();
  return swift_retain();
}

uint64_t sub_242B865D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;

  v28 = a6;
  v29 = a5;
  v33 = a4;
  v11 = sub_242C49208();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v16 = (uint64_t *)(a2 + 32);
    v17 = 1;
    while (1)
    {
      v18 = *v16++;
      v19 = v17 * v18;
      if ((unsigned __int128)(v17 * (__int128)v18) >> 64 != (v17 * v18) >> 63)
        break;
      v17 = v19;
      if (!--v15)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    v30 = 0xD00000000000001FLL;
    v31 = 0x8000000242C6F660;
    v32 = 1;
    swift_bridgeObjectRelease();
    sub_242A59170();
  }
  v19 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v20 = 1;
  else
    v20 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
    goto LABEL_14;
  v21 = sub_242B279DC(v19 * v20, 0);
  if (!v21)
    goto LABEL_15;
  v22 = v21;
  objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v23 = v22;
  objc_msgSend(v23, sel_length);
  LOBYTE(v30) = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE38B8], v11);
  sub_242AB0F20();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v24 = swift_allocObject();
  v25 = v33;
  *(_QWORD *)(v24 + 24) = v23;
  *(_QWORD *)(v24 + 32) = v25;
  *(_BYTE *)(v24 + 40) = v29;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)a7 = v24;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  swift_retain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B8682C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  uint64_t ObjectType;
  uint64_t v24;

  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v12 = (uint64_t *)(a2 + 32);
    v13 = 1;
    while (1)
    {
      v14 = *v12++;
      v15 = v13 * v14;
      if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
        break;
      v13 = v15;
      if (!--v11)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_unknownObjectRelease();
    sub_242A59170();
  }
  v15 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v16 = 1;
  else
    v16 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63)
    goto LABEL_14;
  v18 = sub_242B279DC(v15 * v16, 0);
  if (!v18)
    goto LABEL_15;
  v19 = v18;
  v20 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v21 = v19;
  v22 = (char *)objc_msgSend(v21, sel_length) + (_QWORD)v20;
  ObjectType = swift_getObjectType();
  (*(void (**)(id, char *, uint64_t, uint64_t))(a6 + 48))(v20, v22, ObjectType, a6);
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 24) = v21;
  *(_QWORD *)(v24 + 32) = a4;
  *(_BYTE *)(v24 + 40) = a5;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)a7 = v24;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  swift_retain();
  return swift_unknownObjectRelease();
}

uint64_t sub_242B86A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(a2 + 32);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v10)
        goto LABEL_7;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    sub_242A59170();
  }
  v14 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v15 = 1;
  else
    v15 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
    goto LABEL_16;
  v16 = sub_242B279DC(v14 * v15, 0);
  if (!v16)
    goto LABEL_17;
  v17 = v16;
  v18 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v19 = v17;
  v20 = objc_msgSend(v19, sel_length);
  if (v20)
    bzero(v18, (size_t)v20);
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 24) = v19;
  *(_QWORD *)(v21 + 32) = a4;
  *(_BYTE *)(v21 + 40) = a5;
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)a6 = v21;
  *(_OWORD *)(a6 + 8) = xmmword_242C53170;
  sub_242C480E0();
  return swift_retain();
}

uint64_t sub_242B86BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;

  v28 = a6;
  v29 = a5;
  v33 = a4;
  v11 = sub_242C49208();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v16 = (uint64_t *)(a2 + 32);
    v17 = 1;
    while (1)
    {
      v18 = *v16++;
      v19 = v17 * v18;
      if ((unsigned __int128)(v17 * (__int128)v18) >> 64 != (v17 * v18) >> 63)
        break;
      v17 = v19;
      if (!--v15)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    v30 = 0xD00000000000001FLL;
    v31 = 0x8000000242C6F660;
    v32 = 1;
    swift_bridgeObjectRelease();
    sub_242A59170();
  }
  v19 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v20 = 1;
  else
    v20 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
    goto LABEL_14;
  v21 = sub_242B279DC(v19 * v20, 0);
  if (!v21)
    goto LABEL_15;
  v22 = v21;
  objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v23 = v22;
  objc_msgSend(v23, sel_length);
  LOBYTE(v30) = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE38B8], v11);
  sub_242AB38A0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v24 = swift_allocObject();
  v25 = v33;
  *(_QWORD *)(v24 + 24) = v23;
  *(_QWORD *)(v24 + 32) = v25;
  *(_BYTE *)(v24 + 40) = v29;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)a7 = v24;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  swift_retain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B86E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a2 + 32);
    v11 = 1;
    while (1)
    {
      v12 = *v10++;
      v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
        break;
      v11 = v13;
      if (!--v9)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_242A59170();
  }
  v13 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v14 = 1;
  else
    v14 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
    goto LABEL_14;
  v16 = sub_242B279DC(v13 * v14, 0);
  if (!v16)
    goto LABEL_15;
  v17 = v16;
  objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v18 = v17;
  objc_msgSend(v18, sel_length);
  sub_242B43DB4();
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 40) = a5;
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)a6 = v19;
  *(_OWORD *)(a6 + 8) = xmmword_242C53170;
  sub_242C480E0();
  swift_retain();
  return swift_bridgeObjectRelease();
}

void sub_242B87004(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;

  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a2 + 32);
    v11 = 1;
    while (1)
    {
      v12 = *v10++;
      v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
        break;
      v11 = v13;
      if (!--v9)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v13 = 1;
LABEL_7:
    if ((a3 - 1) > 0xAu)
      v14 = 1;
    else
      v14 = qword_242C596C8[(char)(a3 - 1)];
    if ((unsigned __int128)(v13 * (__int128)v14) >> 64 == (v13 * v14) >> 63)
    {
      v15 = sub_242B279DC(v13 * v14, 0);
      if (v15)
      {
        v16 = v15;
        objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
        objc_msgSend(v16, sel_length);
        __asm { BR              X10 }
      }
      sub_242A69418(a6, a7);
      sub_242A59170();
    }
  }
  __break(1u);
  JUMPOUT(0x242B87320);
}

uint64_t sub_242B873BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  _BYTE *v20;
  id v21;
  uint64_t v22;

  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v13 = (uint64_t *)(a2 + 32);
    v14 = 1;
    while (1)
    {
      v15 = *v13++;
      v16 = v14 * v15;
      if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
        break;
      v14 = v16;
      if (!--v12)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    sub_242A59170();
  }
  v16 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v17 = 1;
  else
    v17 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63)
    goto LABEL_14;
  v18 = sub_242B279DC(v16 * v17, 0);
  if (!v18)
    goto LABEL_15;
  v19 = v18;
  v20 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v21 = v19;
  objc_msgSend(v21, sel_length);
  *v20 = a6 & 1;
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 24) = v21;
  *(_QWORD *)(v22 + 32) = a4;
  *(_BYTE *)(v22 + 40) = a5;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)a7 = v22;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  return swift_retain();
}

uint64_t sub_242B87568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v27;

  v14 = *(_QWORD *)(a2 + 16);
  if (v14)
  {
    v15 = (uint64_t *)(a2 + 32);
    v16 = 1;
    while (1)
    {
      v17 = *v15++;
      v18 = v16 * v17;
      if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63)
        break;
      v16 = v18;
      if (!--v14)
        goto LABEL_7;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_release();
    sub_242A59170();
  }
  v18 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v19 = 1;
  else
    v19 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v18 * (__int128)v19) >> 64 != (v18 * v19) >> 63)
    goto LABEL_16;
  v22 = sub_242B279DC(v18 * v19, 0);
  if (!v22)
    goto LABEL_17;
  v23 = v22;
  v24 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v25 = v23;
  sub_242B3C1DC((uint64_t)v24, (uint64_t)objc_msgSend(v25, sel_length) + (_QWORD)v24, a6, a7, a8);
  if (v9)
  {
    swift_release();
    return swift_unknownObjectRelease_n();
  }
  else
  {
    swift_unknownObjectRelease();
    type metadata accessor for SharedMTLBufferTensorStorage();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 24) = v25;
    *(_QWORD *)(v27 + 32) = a4;
    *(_BYTE *)(v27 + 40) = a5;
    *(_QWORD *)(v27 + 16) = a1;
    *(_QWORD *)a9 = v27;
    *(_OWORD *)(a9 + 8) = xmmword_242C53170;
    sub_242C480E0();
    swift_retain();
    return swift_release();
  }
}

uint64_t sub_242B8776C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;

  v28 = a6;
  v29 = a5;
  v33 = a4;
  v11 = sub_242C49208();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v16 = (uint64_t *)(a2 + 32);
    v17 = 1;
    while (1)
    {
      v18 = *v16++;
      v19 = v17 * v18;
      if ((unsigned __int128)(v17 * (__int128)v18) >> 64 != (v17 * v18) >> 63)
        break;
      v17 = v19;
      if (!--v15)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    v30 = 0xD00000000000001FLL;
    v31 = 0x8000000242C6F660;
    v32 = 1;
    swift_bridgeObjectRelease();
    sub_242A59170();
  }
  v19 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v20 = 1;
  else
    v20 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
    goto LABEL_14;
  v21 = sub_242B279DC(v19 * v20, 0);
  if (!v21)
    goto LABEL_15;
  v22 = v21;
  objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v23 = v22;
  objc_msgSend(v23, sel_length);
  LOBYTE(v30) = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE38B8], v11);
  sub_242AB3964();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v24 = swift_allocObject();
  v25 = v33;
  *(_QWORD *)(v24 + 24) = v23;
  *(_QWORD *)(v24 + 32) = v25;
  *(_BYTE *)(v24 + 40) = v29;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)a7 = v24;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  swift_retain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B879C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>, float a7@<S0>)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  float *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v13 = (uint64_t *)(a2 + 32);
    v14 = 1;
    while (1)
    {
      v15 = *v13++;
      v16 = v14 * v15;
      if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
        break;
      v14 = v16;
      if (!--v12)
        goto LABEL_7;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    sub_242A59170();
  }
  v16 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v17 = 1;
  else
    v17 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63)
    goto LABEL_17;
  v18 = sub_242B279DC(v16 * v17, 0);
  if (!v18)
    goto LABEL_18;
  v19 = v18;
  v20 = (float *)objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v21 = v19;
  v22 = (unint64_t)objc_msgSend(v21, sel_length);
  if (v22 >= 4)
  {
    v23 = v22 >> 2;
    do
    {
      *v20++ = a7;
      --v23;
    }
    while (v23);
  }
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 24) = v21;
  *(_QWORD *)(v24 + 32) = a4;
  *(_BYTE *)(v24 + 40) = a5;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)a6 = v24;
  *(_OWORD *)(a6 + 8) = xmmword_242C53170;
  sub_242C480E0();
  return swift_retain();
}

uint64_t sub_242B87B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v13 = (uint64_t *)(a2 + 32);
    v14 = 1;
    while (1)
    {
      v15 = *v13++;
      v16 = v14 * v15;
      if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
        break;
      v14 = v16;
      if (!--v12)
        goto LABEL_7;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    sub_242A59170();
  }
  v16 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v17 = 1;
  else
    v17 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63)
    goto LABEL_17;
  v18 = sub_242B279DC(v16 * v17, 0);
  if (!v18)
    goto LABEL_18;
  v19 = v18;
  v20 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v21 = v19;
  v22 = (unint64_t)objc_msgSend(v21, sel_length);
  if (v22 >= 8)
  {
    v23 = v22 >> 3;
    do
    {
      *v20++ = a6;
      --v23;
    }
    while (v23);
  }
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 24) = v21;
  *(_QWORD *)(v24 + 32) = a4;
  *(_BYTE *)(v24 + 40) = a5;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)a7 = v24;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  return swift_retain();
}

uint64_t sub_242B87D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;

  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v12 = (uint64_t *)(a2 + 32);
    v13 = 1;
    while (1)
    {
      v14 = *v12++;
      v15 = v13 * v14;
      if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
        break;
      v13 = v15;
      if (!--v11)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_unknownObjectRelease();
    sub_242A59170();
  }
  v15 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v16 = 1;
  else
    v16 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63)
    goto LABEL_14;
  v18 = sub_242B279DC(v15 * v16, 0);
  if (!v18)
    goto LABEL_15;
  v19 = v18;
  v20 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v21 = v19;
  v22 = objc_msgSend(v21, sel_length);
  v23 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v24 = a6;
  memmove(v20, v23, (size_t)v22);
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 24) = v21;
  *(_QWORD *)(v25 + 32) = a4;
  *(_BYTE *)(v25 + 40) = a5;
  *(_QWORD *)(v25 + 16) = a1;
  *(_QWORD *)a7 = v25;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  swift_retain();
  return swift_unknownObjectRelease();
}

uint64_t sub_242B87F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a2 + 32);
    v11 = 1;
    while (1)
    {
      v12 = *v10++;
      v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
        break;
      v11 = v13;
      if (!--v9)
        goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_release();
    swift_release();
    sub_242A59170();
  }
  v13 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v14 = 1;
  else
    v14 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
    goto LABEL_14;
  v16 = sub_242B279DC(v13 * v14, 0);
  if (!v16)
    goto LABEL_15;
  v17 = v16;
  objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v18 = v17;
  objc_msgSend(v18, sel_length);
  sub_242AD05E8();
  swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 40) = a5;
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)a6 = v19;
  *(_OWORD *)(a6 + 8) = xmmword_242C53170;
  sub_242C480E0();
  swift_retain();
  swift_release();
  return swift_release();
}

uint64_t sub_242B88128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void (*a4)(id, char *)@<X3>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v23;

  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(a2 + 32);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v10)
        goto LABEL_7;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    sub_242A59170();
  }
  v14 = 1;
LABEL_7:
  if ((a3 - 1) > 0xAu)
    v15 = 1;
  else
    v15 = qword_242C596C8[(char)(a3 - 1)];
  if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
    goto LABEL_16;
  v18 = sub_242B279DC(v14 * v15, 0);
  if (!v18)
    goto LABEL_17;
  v19 = v18;
  v20 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
  v21 = v19;
  a4(v20, (char *)objc_msgSend(v21, sel_length) + (_QWORD)v20);
  swift_unknownObjectRelease();
  if (v7)
    return swift_unknownObjectRelease();
  type metadata accessor for SharedMTLBufferTensorStorage();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 24) = v21;
  *(_QWORD *)(v23 + 32) = a5;
  *(_BYTE *)(v23 + 40) = a6;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)a7 = v23;
  *(_OWORD *)(a7 + 8) = xmmword_242C53170;
  sub_242C480E0();
  return swift_retain();
}

void sub_242B88308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_35();
  v0 = OUTLINED_FUNCTION_40_26();
  OUTLINED_FUNCTION_18_37(v0, v1, v2, v0);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_0_45();
}

uint64_t sub_242B88348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  v1 = swift_retain();
  v2 = sub_242B5ADBC(v1, v0);
  swift_release();
  return v2;
}

uint64_t sub_242B883A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _UNKNOWN **v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _UNKNOWN **v53;
  char v54;
  _OWORD v55[3];
  int v56;
  char v57;
  uint64_t v58;

  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  if (!(v7 >> 62))
  {
    v11 = *(void **)(v7 + 24);
    OUTLINED_FUNCTION_39_26();
    OUTLINED_FUNCTION_39_0();
    v12 = objc_msgSend(v11, sel_commandBuffer);
    if (v12)
    {
      v13 = v12;
      swift_getObjectType();
      OUTLINED_FUNCTION_39_0();
      sub_242B27988();
      v15 = v14;
      OUTLINED_FUNCTION_50_0();
      objc_msgSend(v13, sel_encodeWaitForEvent_value_, v15, v6);
      OUTLINED_FUNCTION_49_4();
      if (!objc_msgSend(v5, sel_storageMode))
      {
        sub_242BF607C();
        OUTLINED_FUNCTION_21_12();
        v23 = *(_QWORD *)(a2 + 24);
        v24 = *(_BYTE *)(a2 + 32);
        type metadata accessor for SharedMTLBufferTensorStorage();
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 24) = v5;
        *(_QWORD *)(v25 + 32) = v23;
        *(_BYTE *)(v25 + 40) = v24;
        *(_QWORD *)(v25 + 16) = v7;
        v26 = *(_QWORD *)a1;
        v27 = *(_QWORD *)(a1 + 8);
        v28 = *(_QWORD *)(a1 + 16);
        *(_QWORD *)a1 = v25;
        *(_QWORD *)(a1 + 8) = &off_25138A648;
        OUTLINED_FUNCTION_28_36();
        sub_242C480E0();
        swift_retain();
        result = sub_242B18CAC(v26, v27, v28);
        *a3 = v25;
        a3[1] = (uint64_t)&off_25138A648;
        return result;
      }
      v6 = *(_QWORD *)(a2 + 24);
      v16 = *(unsigned __int8 *)(a2 + 32);
      v17 = *(_QWORD *)(v6 + 16);
      if (v17)
      {
        v18 = (uint64_t *)(v6 + 32);
        v19 = 1;
        v20 = *(_QWORD *)(v6 + 16);
        while (1)
        {
          v21 = *v18++;
          v22 = v19 * v21;
          if ((unsigned __int128)(v19 * (__int128)v21) >> 64 != (v19 * v21) >> 63)
            break;
          v19 = v22;
          if (!--v20)
            goto LABEL_14;
        }
        __break(1u);
        goto LABEL_36;
      }
      v22 = 1;
LABEL_14:
      v52 = *(_BYTE *)(a2 + 32);
      if ((v16 - 1) > 0xA)
        v3 = 1;
      else
        v3 = qword_242C596C8[(char)(v16 - 1)];
      v29 = v22 * v3;
      if ((unsigned __int128)(v22 * (__int128)v3) >> 64 != (v22 * v3) >> 63)
        goto LABEL_37;
      v30 = getpagesize();
      if (v30 == -1)
        goto LABEL_27;
      if (v30)
        v29 %= v30;
      if (!v29)
      {
LABEL_27:
        v35 = type metadata accessor for IOSurfaceTensorStorage();
        *(_QWORD *)&v55[0] = v6;
        LOBYTE(v58) = v52;
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_39_0();
        OUTLINED_FUNCTION_39_26();
        v36 = sub_242AF769C((unint64_t *)v55, (unsigned __int8 *)&v58, v35, v7, v6, v52, (uint64_t)v5);
        OUTLINED_FUNCTION_50_0();
        OUTLINED_FUNCTION_21_12();
        swift_unknownObjectRelease();
        v38 = *(_QWORD *)a1;
        v37 = *(_QWORD *)(a1 + 8);
        v39 = *(_QWORD *)(a1 + 16);
        v40 = &off_251385428;
        *(_QWORD *)a1 = v36;
        *(_QWORD *)(a1 + 8) = &off_251385428;
        OUTLINED_FUNCTION_28_36();
        swift_retain();
LABEL_34:
        result = sub_242B18CAC(v38, v37, v39);
        *a3 = v36;
        a3[1] = (uint64_t)v40;
        return result;
      }
      if (v17)
      {
        v31 = (uint64_t *)(v6 + 32);
        v32 = 1;
        while (1)
        {
          v33 = *v31++;
          v34 = v32 * v33;
          if ((unsigned __int128)(v32 * (__int128)v33) >> 64 != (v32 * v33) >> 63)
            break;
          v32 = v34;
          if (!--v17)
            goto LABEL_29;
        }
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v34 = 1;
LABEL_29:
      v41 = v34 * v3;
      if ((unsigned __int128)(v34 * (__int128)v3) >> 64 != (v34 * v3) >> 63)
        goto LABEL_38;
      OUTLINED_FUNCTION_39_0();
      sub_242C480E0();
      v42 = sub_242B28000(v41, 1);
      if (v42)
      {
        v43 = v42;
        swift_bridgeObjectRelease();
        if (objc_msgSend(*(id *)(v7 + 24), sel_commandBuffer))
        {
          swift_getObjectType();
          sub_242BF60A8((uint64_t)v5, 0, (uint64_t)v43, 0, (uint64_t)objc_msgSend(v43, sel_length));
          sub_242BF607C();
          if (qword_2572205A8 == -1)
          {
LABEL_33:
            v45 = qword_257259A10;
            v58 = v6;
            v54 = v52;
            v56 = 0;
            memset(v55, 0, sizeof(v55));
            sub_242C480E0();
            swift_unknownObjectRetain();
            sub_242C044DC(&v58, &v54, (uint64_t)v55, v45);
            v36 = v46;
            v53 = v47;
            OUTLINED_FUNCTION_49_4();
            sub_242A662D8((uint64_t)v55);
            OUTLINED_FUNCTION_21_12();
            swift_release_n();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            v38 = *(_QWORD *)a1;
            v37 = *(_QWORD *)(a1 + 8);
            v39 = *(_QWORD *)(a1 + 16);
            v40 = v53;
            *(_QWORD *)a1 = v36;
            *(_QWORD *)(a1 + 8) = v53;
            OUTLINED_FUNCTION_28_36();
            swift_unknownObjectRetain();
            goto LABEL_34;
          }
LABEL_39:
          swift_once();
          goto LABEL_33;
        }
        goto LABEL_45;
      }
    }
    else
    {
      __break(1u);
    }
    sub_242C48C38();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v55[0] = 0xD000000000000027;
    *((_QWORD *)&v55[0] + 1) = 0x8000000242C69C50;
    v44 = *(_QWORD *)(v6 + 16);
    if (v44)
      goto LABEL_46;
    v48 = 1;
LABEL_43:
    swift_bridgeObjectRelease();
    v44 = v48 * v3;
    if ((unsigned __int128)(v48 * (__int128)v3) >> 64 == (v48 * v3) >> 63)
    {
LABEL_51:
      v58 = v44;
      sub_242C491CC();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v57 = 9;
      sub_242A59170();
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    v49 = (uint64_t *)(v6 + 32);
    v50 = 1;
    while (1)
    {
      v51 = *v49++;
      v48 = v50 * v51;
      if ((unsigned __int128)(v50 * (__int128)v51) >> 64 != (v50 * v51) >> 63)
        break;
      v50 = v48;
      if (!--v44)
        goto LABEL_43;
    }
    __break(1u);
    goto LABEL_51;
  }
  *a3 = (uint64_t)v5;
  if (v7 >> 62 == 1)
  {
    a3[1] = v6;
    return OUTLINED_FUNCTION_39_26();
  }
  else
  {
    a3[1] = (uint64_t)&off_25138A648;
    return swift_retain();
  }
}

uint64_t sub_242B88924()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B88948()
{
  sub_242B88924();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSGraphTensorStorage()
{
  return objc_opt_self();
}

void sub_242B88988()
{
  sub_242B88308();
}

void sub_242B8899C()
{
  sub_242B8582C();
}

uint64_t sub_242B889B0(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 24);
  objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  objc_msgSend(v1, sel_length);
  sub_242AB8E8C();
  return sub_242C47A80();
}

uint64_t sub_242B88A48(uint64_t (*a1)(id, char *))
{
  uint64_t v1;
  void *v3;
  id v4;

  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  return a1(v4, (char *)objc_msgSend(v3, sel_length) + (_QWORD)v4);
}

uint64_t sub_242B88AC8()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B88AF4()
{
  sub_242B88AC8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedMTLBufferTensorStorage()
{
  return objc_opt_self();
}

uint64_t sub_242B88B38(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t result;

  v3 = a3 >> 62;
  if (a3 >> 62 == 2)
    return swift_retain();
  if ((_DWORD)v3 != 1)
  {
    if ((_DWORD)v3)
      return result;
    swift_unknownObjectRetain();
    return swift_retain();
  }
  return swift_unknownObjectRetain();
}

uint64_t destroy for MPSGraphTensorStorage.TensorData(uint64_t a1)
{
  return sub_242B18CAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

void _s14NeuralNetworks21MPSGraphTensorStorageC10TensorDataOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_242B88B38(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  OUTLINED_FUNCTION_9();
}

uint64_t *assignWithCopy for MPSGraphTensorStorage.TensorData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_242B88B38(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_242B18CAC(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for MPSGraphTensorStorage.TensorData(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_242B18CAC(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MPSGraphTensorStorage.TensorData(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 16) >> 57) >> 5) | (4
                                                               * ((*(_QWORD *)(a1 + 16) >> 57) & 0x18 | *(_QWORD *)(a1 + 16) & 7))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for MPSGraphTensorStorage.TensorData(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_242B88D0C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for MPSGraphTensorStorage.TensorData()
{
  return &type metadata for MPSGraphTensorStorage.TensorData;
}

void sub_242B88D30(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

uint64_t sub_242B88D3C(uint64_t (*a1)(id, char *))
{
  return sub_242B88A48(a1);
}

uint64_t sub_242B88D50(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_242C47A98();
  if (!result || (result = sub_242C47ABC(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_242C47AB0();
      return sub_242B685B0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242B88DF8()
{
  return sub_242C48AA0();
}

_QWORD *assignWithCopy for MPSGraphTensorStorage.MPSExecutionContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for MPSGraphTensorStorage.MPSExecutionContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MPSGraphTensorStorage.MPSExecutionContext()
{
  return &type metadata for MPSGraphTensorStorage.MPSExecutionContext;
}

uint64_t OUTLINED_FUNCTION_0_74()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_1_64()
{
  return swift_deallocPartialClassInstance();
}

uint64_t OUTLINED_FUNCTION_3_58(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 24) = *a1;
  *(_BYTE *)(a4 + 32) = *a2;
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_6_58()
{
  return swift_deallocPartialClassInstance();
}

_QWORD *OUTLINED_FUNCTION_7_44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_242B85960(v0, v1, v2);
}

_QWORD *OUTLINED_FUNCTION_8_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_242B85960(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_9_50()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_11_41()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_35()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_18_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return v4(v7, v6, v5, a4, v8);
}

uint64_t OUTLINED_FUNCTION_20_38()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_32()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_28()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_23_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_242B85960(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_24_35()
{
  return sub_242B88348();
}

uint64_t OUTLINED_FUNCTION_28_36()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0x4000000000000000;
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_27()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_242B18CAC(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_38_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_39_26()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_40_26()
{
  return swift_getObjectType();
}

void sub_242B89120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  OUTLINED_FUNCTION_4_56();
  v2 = OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_3_59(v2, v3, v4, v5, v6, v7, v8, v9, v11, v13, v15, v17);
  OUTLINED_FUNCTION_0_75();
  sub_242A5D9C8();
  OUTLINED_FUNCTION_5_57();
  v10 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v10 + 16) = v1 + 1;
  OUTLINED_FUNCTION_2_65(v10 + 8 * v1, v12, v14, v16);
  OUTLINED_FUNCTION_6_59();
  OUTLINED_FUNCTION_1_65();
}

void sub_242B8917C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  if (*a1)
  {
    OUTLINED_FUNCTION_4_56();
    v2 = swift_weakAssign();
    OUTLINED_FUNCTION_3_59(v2, v3, v4, v5, v6, v7, v8, v9, v12, v14, v16, v18);
    OUTLINED_FUNCTION_0_75();
    swift_retain();
    sub_242A5D9C8();
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
    sub_242A5DD2C();
    v11 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v11 + 16) = v10 + 1;
    OUTLINED_FUNCTION_2_65(v11 + 8 * v10, v13, v15, v17);
    OUTLINED_FUNCTION_6_59();
    swift_release();
  }
  OUTLINED_FUNCTION_1_65();
}

uint64_t sub_242B89200(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (uint64_t *)(v1 + 24);
    sub_242C480E0();
    v4 = 0;
    do
    {
      OUTLINED_FUNCTION_4_56();
      v5 = swift_weakAssign();
      OUTLINED_FUNCTION_3_59(v5, v6, v7, v8, v9, v10, v11, v12, v18, v20, v22, v24);
      OUTLINED_FUNCTION_0_75();
      v13 = *v3;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v3 = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        OUTLINED_FUNCTION_11_42();
        v13 = v16;
        *v3 = v16;
      }
      v15 = *(_QWORD *)(v13 + 16);
      if (v15 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        OUTLINED_FUNCTION_11_42();
        v13 = v17;
        *v3 = v17;
      }
      ++v4;
      *(_QWORD *)(v13 + 16) = v15 + 1;
      OUTLINED_FUNCTION_2_65(v13 + 8 * v15, v19, v21, v23);
      OUTLINED_FUNCTION_6_59();
      swift_release();
    }
    while (v2 != v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242B89308()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
    return *(_QWORD *)(v0 + 16);
  result = v0;
  *(_QWORD *)(v0 + 16) = v0;
  return result;
}

void sub_242B89324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  OUTLINED_FUNCTION_4_56();
  v2 = OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_3_59(v2, v3, v4, v5, v6, v7, v8, v9, v11, v13, v15, v17);
  OUTLINED_FUNCTION_0_75();
  sub_242A5D9C8();
  OUTLINED_FUNCTION_5_57();
  v10 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v10 + 16) = v1 + 1;
  OUTLINED_FUNCTION_2_65(v10 + 8 * v1, v12, v14, v16);
  OUTLINED_FUNCTION_6_59();
  OUTLINED_FUNCTION_1_65();
}

uint64_t sub_242B8937C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResolutionDependencies()
{
  return objc_opt_self();
}

unint64_t sub_242B893C4()
{
  unint64_t result;

  result = qword_257229138;
  if (!qword_257229138)
  {
    result = MEMORY[0x2494EDE24](&unk_242C597B0, &type metadata for ResolutionDependencies.Iterator);
    atomic_store(result, (unint64_t *)&qword_257229138);
  }
  return result;
}

uint64_t sub_242B89400()
{
  OUTLINED_FUNCTION_2_34();
  return sub_242C480E0();
}

void sub_242B89430()
{
  _QWORD *v0;
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t Strong;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  id v12;
  id v13;
  _QWORD v14[10];
  _QWORD v15[3];
  uint64_t v16;
  char v17;
  _BYTE v18[8];

  v1 = v0;
  v2 = v0[1];
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v2 >= v4)
    return;
  while ((v2 & 0x8000000000000000) == 0)
  {
    if (v2 >= (unint64_t)v4)
      goto LABEL_19;
    sub_242B8968C(v3 + 8 * v2 + 32, (uint64_t)v18);
    v1[1] = v2 + 1;
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v6 = Strong;
      if (*(uint64_t *)(Strong + 32) <= 0)
        goto LABEL_14;
      swift_retain();
      v7 = OUTLINED_FUNCTION_16_9();
      objc_msgSend(v7, sel_lock);

      v8 = (void *)(v6 + 40);
      OUTLINED_FUNCTION_2_34();
      sub_242A6FF34(v6 + 40, (uint64_t)v15);
      if (v17)
      {
        if (v17 == 1)
        {
          v8 = (void *)v15[0];
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_242A6FFE8((uint64_t)&v16);
        }
        else
        {
          sub_242A6FF70((uint64_t)v15);
        }
        v13 = OUTLINED_FUNCTION_16_9();
        OUTLINED_FUNCTION_8_43(v13);
        OUTLINED_FUNCTION_17_1();

LABEL_14:
        OUTLINED_FUNCTION_12_37();
      }
      else
      {
        sub_242A8D620((uint64_t)v15, (uint64_t)v14);
        v9 = (void *)v14[0];
        v10 = v14[1];
        ObjectType = swift_getObjectType();
        LOBYTE(v10) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 56))(ObjectType, v10);
        sub_242A6FFE8((uint64_t)v14);
        v12 = OUTLINED_FUNCTION_16_9();
        OUTLINED_FUNCTION_8_43(v12);
        OUTLINED_FUNCTION_17_1();

        OUTLINED_FUNCTION_12_37();
        if ((v10 & 1) == 0)
          return;
      }
      OUTLINED_FUNCTION_17_1();
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_12_37();
LABEL_16:
    v3 = *v1;
    v2 = v1[1];
    v4 = *(_QWORD *)(*v1 + 16);
    if (v2 >= v4)
      return;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_242B895CC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_242B89430();
  *a1 = v2;
}

uint64_t sub_242B895F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_242B89400();
  result = swift_release();
  *a1 = v2;
  a1[1] = 0;
  return result;
}

uint64_t sub_242B8962C()
{
  return sub_242B648D4();
}

void sub_242B8964C()
{
  sub_242ACBB1C();
}

uint64_t sub_242B8966C()
{
  return sub_242ACBB74();
}

uint64_t sub_242B8968C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_242B896D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242B89714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ResolutionDependencies.Iterator()
{
  return &type metadata for ResolutionDependencies.Iterator;
}

uint64_t OUTLINED_FUNCTION_0_75()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_65@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_242B89714((uint64_t)va, a1 + 32);
}

uint64_t OUTLINED_FUNCTION_3_59(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return sub_242B89714((uint64_t)&a9, (uint64_t)&a12);
}

uint64_t OUTLINED_FUNCTION_4_56()
{
  return swift_weakInit();
}

void OUTLINED_FUNCTION_5_57()
{
  sub_242A5DD2C();
}

uint64_t OUTLINED_FUNCTION_6_59()
{
  return swift_endAccess();
}

id OUTLINED_FUNCTION_8_43(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1041));
}

void OUTLINED_FUNCTION_11_42()
{
  sub_242A5EA7C();
}

uint64_t OUTLINED_FUNCTION_12_37()
{
  uint64_t v0;

  return sub_242B896D4(v0 - 72);
}

uint64_t OUTLINED_FUNCTION_13_46()
{
  return swift_weakAssign();
}

uint64_t sub_242B897F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v3 = v10;
    v4 = a1 + 48;
    do
    {
      sub_242C480E0();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v10 + 16);
      if (v5 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_242AC315C();
      v4 += 24;
      *(_QWORD *)(v10 + 16) = v5 + 1;
      v6 = v10 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v9;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

void sub_242B8991C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242AC3124();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x2494EC84C](v3, a1);
      else
        v4 = *(id *)(a1 + 8 * v3 + 32);
      v5 = v4;
      v6 = objc_msgSend(v4, sel_integerValue);

      v7 = *(_QWORD *)(v8 + 16);
      if (v7 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_242AC3124();
      ++v3;
      *(_QWORD *)(v8 + 16) = v7 + 1;
      *(_QWORD *)(v8 + 8 * v7 + 32) = v6;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    sub_242C480E0();
    v2 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_242B89A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = *(_QWORD *)(a1 + 16);
  v49 = MEMORY[0x24BEE4AF8];
  sub_242AC323C();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C37948(a2, v6, v7, v8, v9, v10, v11, v12, v38, v39, v40, v42, v44, v46, v47, v48[0], v48[1], v49, v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57);
  v14 = v13;
  OUTLINED_FUNCTION_108();
  v48[0] = v14;
  sub_242B8B5E8(v48);
  if (v2)
  {
LABEL_22:
    result = swift_release();
    __break(1u);
    return result;
  }
  v16 = v48[0];
  MEMORY[0x24BDAC7A8](v15);
  swift_getKeyPath();
  swift_retain();
  v17 = sub_242B897F8(v16);
  OUTLINED_FUNCTION_108();
  swift_release();
  swift_release();
  sub_242B89D64(v17, a1);
  v45 = v18;
  OUTLINED_FUNCTION_108();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v19 = v5;
  if (v5)
  {
    v20 = 0;
    v41 = v19;
    v43 = *(_QWORD *)(v45 + 16);
    v21 = (_BYTE *)(v45 + 56);
    while (v43 != v20)
    {
      if (v20 >= *(_QWORD *)(v45 + 16))
      {
        __break(1u);
        break;
      }
      v23 = *((_QWORD *)v21 - 3);
      v22 = *((_QWORD *)v21 - 2);
      v24 = *((_QWORD *)v21 - 1);
      v25 = *v21;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_107();
      if (!v22)
        break;
      v26 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_76();
        v26 = v49;
      }
      v27 = *(_QWORD *)(v26 + 16);
      if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        OUTLINED_FUNCTION_3_60();
        v26 = v49;
      }
      ++v20;
      *(_QWORD *)(v26 + 16) = v27 + 1;
      v28 = v26 + 32 * v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_QWORD *)(v28 + 40) = v22;
      *(_QWORD *)(v28 + 48) = v24;
      *(_BYTE *)(v28 + 56) = v25;
      v21 += 32;
      v19 = v41;
      if (v41 == v20)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_12:
  if (v19 < *(_QWORD *)(v45 + 16))
  {
    v29 = v49;
    v30 = (_BYTE *)(v45 + 32 * v19 + 56);
    do
    {
      v31 = *((_QWORD *)v30 - 3);
      v32 = *((_QWORD *)v30 - 2);
      v33 = *((_QWORD *)v30 - 1);
      v34 = *v30;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_107();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_76();
        v29 = v49;
      }
      v35 = *(_QWORD *)(v29 + 16);
      if (v35 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        OUTLINED_FUNCTION_3_60();
        v29 = v49;
      }
      ++v19;
      v30 += 32;
      *(_QWORD *)(v29 + 16) = v35 + 1;
      v36 = v29 + 32 * v35;
      *(_QWORD *)(v36 + 32) = v31;
      *(_QWORD *)(v36 + 40) = v32;
      *(_QWORD *)(v36 + 48) = v33;
      *(_BYTE *)(v36 + 56) = v34;
    }
    while (v19 < *(_QWORD *)(v45 + 16));
  }
  swift_bridgeObjectRelease();
  return v49;
}

void sub_242B89D64(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = *(_QWORD *)(a2 + 16);
  v31 = *(_QWORD *)(a1 + 16);
  if (v30 >= v31)
    v4 = *(_QWORD *)(a1 + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  v33 = MEMORY[0x24BEE4AF8];
  sub_242AC3220();
  v5 = v4;
  v27 = a2;
  v28 = a1;
  if (v4)
  {
    sub_242C480E0();
    sub_242C480E0();
    v6 = (uint64_t *)(a1 + 40);
    v7 = (_BYTE *)(a2 + 40);
    v8 = v5;
    while (1)
    {
      v9 = *(v6 - 1);
      v10 = *v6;
      v11 = *v7;
      v12 = *((_QWORD *)v7 - 1);
      sub_242C480E0();
      sub_242C480E0();
      if (!v10)
        break;
      v13 = *(_QWORD *)(v33 + 16);
      v14 = v13 + 1;
      if (v13 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        sub_242AC3220();
        v14 = v13 + 1;
      }
      v6 += 2;
      *(_QWORD *)(v33 + 16) = v14;
      v15 = v33 + 32 * v13;
      *(_QWORD *)(v15 + 32) = v9;
      *(_QWORD *)(v15 + 40) = v10;
      *(_QWORD *)(v15 + 48) = v12;
      *(_BYTE *)(v15 + 56) = v11;
      v7 += 16;
      if (!--v8)
        goto LABEL_12;
    }
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
LABEL_12:
    v17 = v30;
    v16 = v31;
    if (v31 <= v30)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v29 = 16 * v5;
    v18 = v27;
    v19 = v28;
    while (v5 < v16)
    {
      if (v17 == v5)
        goto LABEL_20;
      if (v5 >= v17)
        goto LABEL_22;
      v20 = v5;
      v21 = *(_QWORD *)(v19 + v29 + 40);
      v32 = *(_QWORD *)(v19 + v29 + 32);
      v22 = *(_QWORD *)(v18 + v29 + 32);
      v23 = *(_BYTE *)(v18 + v29 + 40);
      v25 = *(_QWORD *)(v33 + 16);
      v24 = *(_QWORD *)(v33 + 24);
      sub_242C480E0();
      sub_242C480E0();
      if (v25 >= v24 >> 1)
        sub_242AC3220();
      v5 = v20 + 1;
      *(_QWORD *)(v33 + 16) = v25 + 1;
      v26 = v33 + 32 * v25;
      *(_QWORD *)(v26 + 32) = v32;
      *(_QWORD *)(v26 + 40) = v21;
      *(_QWORD *)(v26 + 48) = v22;
      *(_BYTE *)(v26 + 56) = v23;
      v19 += 16;
      v18 += 16;
      v17 = v30;
      v16 = v31;
      if (v31 == v20 + 1)
        goto LABEL_20;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_242B89F9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 344) = v0;
  return swift_task_switch();
}

uint64_t sub_242B89FB4()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_242C47B58();
  v2 = (void *)sub_242C48224();
  OUTLINED_FUNCTION_136();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4DE40;
    *(_QWORD *)(inited + 32) = 7633012;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    *(_QWORD *)(inited + 48) = 7104877;
    *(_QWORD *)(inited + 56) = 0xE300000000000000;
    *(_QWORD *)(inited + 64) = 0x67616B6361706C6DLL;
    *(_QWORD *)(inited + 72) = 0xE900000000000065;
    *(_QWORD *)(inited + 80) = 0x636C65646F6D6C6DLL;
    *(_QWORD *)(inited + 88) = 0xE800000000000000;
    sub_242C47B1C();
    v5 = sub_242C48284();
    v7 = v6;
    OUTLINED_FUNCTION_136();
    sub_242B647CC(v5, v7, inited);
    LOBYTE(v5) = v8;
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_242B7135C();
    if ((v5 & 1) != 0)
    {
      v9 = *(_QWORD *)(v0 + 344);
      v10 = (void *)objc_opt_self();
      v11 = sub_242C47B34();
      *(_QWORD *)(v0 + 352) = v11;
      v12 = *(_QWORD *)(v9 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_context);
      *(_QWORD *)(v0 + 56) = v0 + 320;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_242B8A23C;
      v13 = swift_continuation_init();
      *(_QWORD *)(v0 + 232) = MEMORY[0x24BDAC760];
      v14 = (_QWORD *)(v0 + 232);
      v14[1] = 0x40000000;
      v14[2] = sub_242B8A674;
      v14[3] = &block_descriptor_2;
      v14[4] = v13;
      objc_msgSend(v10, sel_loadContentsOfURL_withContext_completion_, v11, v12, v14);
      return swift_continuation_await();
    }
    sub_242B8B5AC();
    OUTLINED_FUNCTION_24_1();
    *(_OWORD *)v16 = xmmword_242C501F0;
  }
  else
  {
    sub_242B8B5AC();
    OUTLINED_FUNCTION_24_1();
    *(_QWORD *)v16 = 0;
    *(_QWORD *)(v16 + 8) = 0;
  }
  *(_BYTE *)(v16 + 16) = 4;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_242B8A23C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 360) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_242B8A29C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v0[43];
  v1 = (void *)v0[44];
  v3 = OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_program;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_program);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_program) = v0[40];

  v5 = *(void **)(v2 + v3);
  if (v5
    && (v6 = v5,
        v7 = (void *)sub_242C48224(),
        v8 = objc_msgSend(v6, sel_functionWithName_, v7),
        v7,
        v6,
        v8))
  {
    type metadata accessor for MILFunctionParser();
    swift_initStackObject();
    v9 = v8;
    v10 = sub_242B8A8A4((uint64_t)v9);
    sub_242B8A928();
    sub_242B8ABD4();
    OUTLINED_FUNCTION_2_34();
    v16 = v10[3];
    v17 = v10[4];
    OUTLINED_FUNCTION_32_0();
    sub_242C480E0();
    v18 = sub_242B89A7C(v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    v46 = sub_242C480BC();
    v19 = sub_242A5A760(v18);
    v20 = OUTLINED_FUNCTION_136();
    sub_242A5D034(v20, v21, v22, v23, v24, v25, v26, v27, v41, (uint64_t)(v0 + 42), v19, v46, v47, v49);
    OUTLINED_FUNCTION_2_66(OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_inputs, v44);
    OUTLINED_FUNCTION_2_34();
    v28 = v10[5];
    v29 = v10[6];
    sub_242C480E0();
    OUTLINED_FUNCTION_107();
    v30 = sub_242B89A7C(v28, v29);
    OUTLINED_FUNCTION_136();
    swift_bridgeObjectRelease();
    v44.n128_u64[1] = sub_242C480BC();
    v31 = sub_242A5A760(v30);
    v32 = swift_bridgeObjectRelease();
    sub_242A5D034(v32, v33, v34, v35, v36, v37, v38, v39, v42, v43, v31, v44.n128_i64[1], v48, v50);

    swift_release();
    OUTLINED_FUNCTION_2_66(OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_outputs, v45);
    v40 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v11 = v0[43];
    v12 = *(_QWORD *)(v11 + 16);
    v13 = *(_QWORD *)(v11 + 24);
    sub_242B8B5AC();
    OUTLINED_FUNCTION_24_1();
    *(_QWORD *)v14 = v12;
    *(_QWORD *)(v14 + 8) = v13;
    *(_BYTE *)(v14 + 16) = 3;
    sub_242C480E0();
    swift_willThrow();
    v40 = (uint64_t (*)(void))v0[1];
  }
  return v40();
}

uint64_t sub_242B8A55C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 352);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_242B8A59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  *(_QWORD *)(v3 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_program) = 0;
  v7 = (_QWORD *)(v3 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_inputs);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_outputs);
  *v8 = 0;
  v8[1] = 0;
  v9 = v3 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_url;
  v10 = sub_242C47B7C();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  v12 = objc_msgSend(objc_allocWithZone((Class)SNNMILContext), sel_init);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_context) = v12;
  return v3;
}

uint64_t sub_242B8A674(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
    return sub_242B8A6C0(v3, (uint64_t)a3);
  if (a2)
    return sub_242B8A710(v3, (uint64_t)a2);
  __break(1u);
  return result;
}

uint64_t sub_242B8A6C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_242B8A710(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_242B8A720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_url;
  v2 = sub_242C47B7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  OUTLINED_FUNCTION_9_51(OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_inputs);
  OUTLINED_FUNCTION_9_51(OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_outputs);
  return v0;
}

uint64_t sub_242B8A7A4()
{
  sub_242B8A720();
  return swift_deallocClassInstance();
}

uint64_t sub_242B8A7C8()
{
  return type metadata accessor for MILProgramParser();
}

uint64_t type metadata accessor for MILProgramParser()
{
  uint64_t result;

  result = qword_257229168;
  if (!qword_257229168)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_242B8A808()
{
  uint64_t result;
  unint64_t v1;

  result = sub_242C47B7C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_242B8A8A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = MEMORY[0x24BEE4AF8];
  v4 = sub_242C480BC();
  v1[3] = v3;
  v1[4] = v4;
  v5 = sub_242C480BC();
  v1[5] = v3;
  v1[6] = v5;
  v1[2] = a1;
  return v1;
}

uint64_t sub_242B8A928()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v20 = *(id *)(v0 + 16);
  v1 = objc_msgSend(v20, sel_inputNames);
  v2 = sub_242C48548();

  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return swift_bridgeObjectRelease();
  v4 = (uint64_t *)(v2 + 40);
  while (1)
  {
    v6 = *(v4 - 1);
    v5 = *v4;
    sub_242C480E0();
    v7 = (void *)sub_242C48224();
    v8 = objc_msgSend(v20, sel_inputWithName_, v7);

    if (!v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    objc_opt_self();
    v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9)
      break;
    v10 = v9;
    v4 += 2;
    v11 = objc_msgSend(v9, sel_dimensions);
    sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
    v12 = sub_242C48548();

    sub_242B8991C(v12);
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_242C2BEBC((uint64_t)objc_msgSend(v10, sel_dataType), (char *)&v21);
    v15 = v21;
    swift_beginAccess();
    sub_242BAD9D8(&v23, v14, v15, v6, v5, 1);
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v3)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

LABEL_10:
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_242C48C38();
  swift_bridgeObjectRelease();
  v21 = 0xD00000000000002ELL;
  v22 = 0x8000000242C6F910;
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  v17 = v21;
  v18 = v22;
  sub_242B8B5AC();
  swift_allocError();
  *(_QWORD *)v19 = v17;
  *(_QWORD *)(v19 + 8) = v18;
  *(_BYTE *)(v19 + 16) = 2;
  return swift_willThrow();
}

void sub_242B8ABD4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __objc2_class_ro *v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char *v25;
  id v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[10];
  char v46;
  char *v47;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, sel_outputNames);
  v3 = sub_242C48548();

  v35 = *(_QWORD *)(v3 + 16);
  if (!v35)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = 0;
  v5 = v3 + 32;
  v6 = &SliceOperation;
  v36 = v3;
  v31 = v3 + 32;
  v32 = v1;
  while (1)
  {
    if (v4 >= *(_QWORD *)(v3 + 16))
      goto LABEL_41;
    v7 = (uint64_t *)(v5 + 16 * v4);
    v43 = *v7;
    v44 = v7[1];
    sub_242C480E0();
    v8 = (unint64_t)objc_msgSend(v1, v6[22].name);
    if ((v8 & 0x8000000000000000) != 0)
      goto LABEL_42;
    v9 = v8;
    if (v8)
      break;
LABEL_34:
    ++v4;
    swift_bridgeObjectRelease();
    v5 = v31;
    v6 = &SliceOperation;
    if (v4 == v35)
      goto LABEL_35;
  }
  v10 = 0;
  v33 = v8;
  v34 = v4;
  while (1)
  {
    if (v10 == v9)
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x242B8B3F0);
    }
    v37 = v10;
    v11 = objc_msgSend(v1, sel_operationAtIndex_);
    if (!v11)
      break;
    v38 = v11;
    v12 = objc_msgSend(v11, sel_outputs);
    sub_242A8AA58(0, &qword_257226268);
    v13 = sub_242C48548();

    if (!(v13 >> 62))
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v14)
        goto LABEL_11;
      goto LABEL_33;
    }
    sub_242C480E0();
    v14 = sub_242C48FC8();
    swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_11:
      v40 = v13;
      v41 = v13 & 0xC000000000000001;
      v15 = 4;
      v39 = v14;
      while (1)
      {
        if (v41)
          v16 = (id)MEMORY[0x2494EC84C](v15 - 4, v13);
        else
          v16 = *(id *)(v13 + 8 * v15);
        v17 = v16;
        if (__OFADD__(v15 - 4, 1))
        {
          __break(1u);
          JUMPOUT(0x242B8B3D0);
        }
        objc_opt_self();
        v18 = swift_dynamicCastObjCClass();
        if (!v18)
        {
LABEL_37:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_242B8B5AC();
          swift_allocError();
          *(_OWORD *)v29 = xmmword_242C4CD70;
          *(_BYTE *)(v29 + 16) = 4;
          swift_willThrow();

          return;
        }
        v19 = (void *)v18;
        v42 = v15 - 3;
        v20 = v17;
        v21 = sub_242B8BE98(v19);
        if (!v22)
        {

          goto LABEL_37;
        }
        if (v21 == v43 && v22 == v44)
          break;
        v24 = sub_242C4925C();
        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
          goto LABEL_25;
        v13 = v40;
LABEL_30:

        ++v15;
        if (v42 == v39)
          goto LABEL_33;
      }
      swift_bridgeObjectRelease();
LABEL_25:
      v25 = (char *)objc_msgSend(v19, sel_dataType, v31);
      if ((unint64_t)(v25 - 2) < 0xB || (v28 = v25) == 0)
      {
        v26 = objc_msgSend(v19, sel_dimensions);
        sub_242A8AA58(0, (unint64_t *)&qword_257221F28);
        v27 = sub_242C48548();

        sub_242B8991C(v27);
        swift_bridgeObjectRelease();
        sub_242C2BEBC((uint64_t)objc_msgSend(v19, sel_dataType), (char *)v45);
        __asm { BR              X9 }
      }
      v13 = v40;
      if (v25 != (char *)1)
      {
        v45[0] = 0;
        v45[1] = 0xE000000000000000;
        sub_242C48C38();
        sub_242C48314();
        v47 = v28;
        type metadata accessor for SNNDataType(0);
        sub_242C48E78();
        sub_242C48314();
        v46 = 9;
        sub_242A59170();
      }
      goto LABEL_30;
    }
LABEL_33:

    swift_bridgeObjectRelease();
    v10 = v37 + 1;
    v1 = v32;
    v9 = v33;
    v3 = v36;
    v4 = v34;
    if (v37 + 1 == v33)
      goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242B8B5AC();
  swift_allocError();
  *(_OWORD *)v30 = xmmword_242C4CA60;
  *(_BYTE *)(v30 + 16) = 4;
  swift_willThrow();
}

uint64_t sub_242B8B500()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B8B544()
{
  sub_242B8B500();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MILFunctionParser()
{
  return objc_opt_self();
}

uint64_t sub_242B8B580(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_242B8B5AC()
{
  unint64_t result;

  result = qword_2572292D0[0];
  if (!qword_2572292D0[0])
  {
    result = MEMORY[0x2494EDE24](&unk_242C598D4, &type metadata for MILParsingError);
    atomic_store(result, qword_2572292D0);
  }
  return result;
}

void sub_242B8B5E8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242BEBC44();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_242B8B650(v5);
  *a1 = v2;
}

void sub_242B8B650(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 *v95;
  uint64_t v96;

  v3 = a1[1];
  v4 = sub_242C491C0();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_242B8BC88(0, v3, 1, a1);
      return;
    }
    goto LABEL_125;
  }
  v5 = v4;
  sub_242A85DD0(v3 / 2);
  v91 = a1;
  v92 = v6;
  v94 = v3;
  v95 = v7;
  if (v3 <= 0)
  {
    v96 = MEMORY[0x24BEE4AF8];
    v30 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_91:
    if (v30 < 2)
    {
LABEL_102:
      swift_bridgeObjectRelease();
      if (v94 >= -1)
      {
        *(_QWORD *)(v92 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_130;
    }
    v84 = *v91;
    while (1)
    {
      v85 = v30 - 2;
      if (v30 < 2)
        break;
      if (!v84)
        goto LABEL_134;
      v86 = (char *)v96;
      v87 = *(_QWORD *)(v96 + 32 + 16 * v85);
      v88 = *(_QWORD *)(v96 + 32 + 16 * (v30 - 1) + 8);
      sub_242B8BD00(v84 + 24 * v87, (__int128 *)(v84 + 24 * *(_QWORD *)(v96 + 32 + 16 * (v30 - 1))), v84 + 24 * v88, v95);
      if (v1)
        goto LABEL_87;
      if (v88 < v87)
        goto LABEL_120;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v86 = sub_242BB9110(v96);
      if (v85 >= *((_QWORD *)v86 + 2))
        goto LABEL_121;
      v89 = &v86[16 * v85 + 32];
      *(_QWORD *)v89 = v87;
      *((_QWORD *)v89 + 1) = v88;
      v90 = *((_QWORD *)v86 + 2);
      if (v30 > v90)
        goto LABEL_122;
      memmove(&v86[16 * v30 + 16], &v86[16 * v30 + 32], 16 * (v90 - v30));
      v96 = (uint64_t)v86;
      *((_QWORD *)v86 + 2) = v90 - 1;
      v30 = v90 - 1;
      if (v90 <= 2)
        goto LABEL_102;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v96 = MEMORY[0x24BEE4AF8];
  v93 = v5;
  while (1)
  {
    v10 = v8++;
    if (v8 < v3)
    {
      v11 = *(_QWORD *)(v9 + 24 * v8 + 16);
      v12 = *(_QWORD *)(v9 + 24 * v10 + 16);
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = (uint64_t *)(v9 + 64 + 24 * v10);
        v14 = v11;
        while (1)
        {
          v16 = *v13;
          v13 += 3;
          v15 = v16;
          if (v12 >= v11 == v14 < v16)
            break;
          ++v8;
          v14 = v15;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 >= v11)
      {
        if (v8 < v10)
          goto LABEL_127;
        if (v10 < v8)
        {
          v17 = 24 * v8;
          v18 = 24 * v10;
          v19 = v8;
          v20 = v10;
          do
          {
            if (v20 != --v19)
            {
              if (!v9)
                goto LABEL_133;
              v21 = v9 + v18;
              v22 = v9 + v17;
              v23 = *(_OWORD *)(v9 + v18);
              v24 = *(_QWORD *)(v9 + v18 + 16);
              v25 = *(_QWORD *)(v9 + v17 - 8);
              *(_OWORD *)v21 = *(_OWORD *)(v9 + v17 - 24);
              *(_QWORD *)(v21 + 16) = v25;
              *(_OWORD *)(v22 - 24) = v23;
              *(_QWORD *)(v22 - 8) = v24;
            }
            ++v20;
            v17 -= 24;
            v18 += 24;
          }
          while (v20 < v19);
        }
      }
    }
    if (v8 >= v3)
      goto LABEL_26;
    if (__OFSUB__(v8, v10))
      goto LABEL_124;
    if (v8 - v10 >= v5)
      goto LABEL_26;
    v26 = v10 + v5;
    if (__OFADD__(v10, v5))
      goto LABEL_128;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v10)
      goto LABEL_129;
    if (v8 == v26)
    {
LABEL_26:
      v27 = (char *)v96;
    }
    else
    {
      v78 = (uint64_t *)(v9 + 24 * v8);
      v27 = (char *)v96;
      do
      {
        v79 = *(_QWORD *)(v9 + 24 * v8 + 16);
        v80 = v10;
        v81 = v78;
        do
        {
          if (*(v81 - 1) < v79)
            break;
          if (!v9)
            goto LABEL_131;
          v82 = *v81;
          v83 = v81[1];
          *(_OWORD *)v81 = *(_OWORD *)(v81 - 3);
          v81[2] = *(v81 - 1);
          *(v81 - 2) = v83;
          *(v81 - 1) = v79;
          *(v81 - 3) = v82;
          v81 -= 3;
          ++v80;
        }
        while (v8 != v80);
        ++v8;
        v78 += 3;
      }
      while (v8 != v26);
      v8 = v26;
    }
    if (v8 < v10)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_242BB9024(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v29 = *((_QWORD *)v27 + 2);
    v28 = *((_QWORD *)v27 + 3);
    v30 = v29 + 1;
    if (v29 >= v28 >> 1)
      v27 = sub_242BB9024((char *)(v28 > 1), v29 + 1, 1, v27);
    *((_QWORD *)v27 + 2) = v30;
    v31 = v27 + 32;
    v32 = &v27[16 * v29 + 32];
    *(_QWORD *)v32 = v10;
    *((_QWORD *)v32 + 1) = v8;
    v96 = (uint64_t)v27;
    if (v29)
      break;
    v30 = 1;
LABEL_75:
    v5 = v93;
    v3 = v94;
    if (v8 >= v94)
      goto LABEL_91;
  }
  while (1)
  {
    v33 = v30 - 1;
    if (v30 >= 4)
    {
      v38 = &v31[16 * v30];
      v39 = *((_QWORD *)v38 - 8);
      v40 = *((_QWORD *)v38 - 7);
      v44 = __OFSUB__(v40, v39);
      v41 = v40 - v39;
      if (v44)
        goto LABEL_108;
      v43 = *((_QWORD *)v38 - 6);
      v42 = *((_QWORD *)v38 - 5);
      v44 = __OFSUB__(v42, v43);
      v36 = v42 - v43;
      v37 = v44;
      if (v44)
        goto LABEL_109;
      v45 = v30 - 2;
      v46 = &v31[16 * v30 - 32];
      v48 = *(_QWORD *)v46;
      v47 = *((_QWORD *)v46 + 1);
      v44 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      if (v44)
        goto LABEL_110;
      v44 = __OFADD__(v36, v49);
      v50 = v36 + v49;
      if (v44)
        goto LABEL_112;
      if (v50 >= v41)
      {
        v68 = &v31[16 * v33];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v44 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v44)
          goto LABEL_118;
        v61 = v36 < v71;
        goto LABEL_64;
      }
    }
    else
    {
      if (v30 != 3)
      {
        v62 = *((_QWORD *)v27 + 4);
        v63 = *((_QWORD *)v27 + 5);
        v44 = __OFSUB__(v63, v62);
        v55 = v63 - v62;
        v56 = v44;
        goto LABEL_58;
      }
      v35 = *((_QWORD *)v27 + 4);
      v34 = *((_QWORD *)v27 + 5);
      v44 = __OFSUB__(v34, v35);
      v36 = v34 - v35;
      v37 = v44;
    }
    if ((v37 & 1) != 0)
      goto LABEL_111;
    v45 = v30 - 2;
    v51 = &v31[16 * v30 - 32];
    v53 = *(_QWORD *)v51;
    v52 = *((_QWORD *)v51 + 1);
    v54 = __OFSUB__(v52, v53);
    v55 = v52 - v53;
    v56 = v54;
    if (v54)
      goto LABEL_113;
    v57 = &v31[16 * v33];
    v59 = *(_QWORD *)v57;
    v58 = *((_QWORD *)v57 + 1);
    v44 = __OFSUB__(v58, v59);
    v60 = v58 - v59;
    if (v44)
      goto LABEL_115;
    if (__OFADD__(v55, v60))
      goto LABEL_117;
    if (v55 + v60 >= v36)
    {
      v61 = v36 < v60;
LABEL_64:
      if (v61)
        v33 = v45;
      goto LABEL_66;
    }
LABEL_58:
    if ((v56 & 1) != 0)
      goto LABEL_114;
    v64 = &v31[16 * v33];
    v66 = *(_QWORD *)v64;
    v65 = *((_QWORD *)v64 + 1);
    v44 = __OFSUB__(v65, v66);
    v67 = v65 - v66;
    if (v44)
      goto LABEL_116;
    if (v67 < v55)
      goto LABEL_75;
LABEL_66:
    v72 = v33 - 1;
    if (v33 - 1 >= v30)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v9)
      goto LABEL_132;
    v73 = &v31[16 * v72];
    v74 = *(_QWORD *)v73;
    v75 = &v31[16 * v33];
    v76 = *((_QWORD *)v75 + 1);
    sub_242B8BD00(v9 + 24 * *(_QWORD *)v73, (__int128 *)(v9 + 24 * *(_QWORD *)v75), v9 + 24 * v76, v95);
    if (v1)
      break;
    if (v76 < v74)
      goto LABEL_105;
    if (v33 > *(_QWORD *)(v96 + 16))
      goto LABEL_106;
    *(_QWORD *)v73 = v74;
    *(_QWORD *)&v31[16 * v72 + 8] = v76;
    v77 = *(_QWORD *)(v96 + 16);
    if (v33 >= v77)
      goto LABEL_107;
    v27 = (char *)v96;
    v30 = v77 - 1;
    memmove(&v31[16 * v33], v75 + 16, 16 * (v77 - 1 - v33));
    *(_QWORD *)(v96 + 16) = v77 - 1;
    if (v77 <= 2)
      goto LABEL_75;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  if (v94 < -1)
    goto LABEL_126;
  *(_QWORD *)(v92 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_242B8BC88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 24 * a3;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 24 * a3 + 16);
      v7 = result;
      v8 = (uint64_t *)v5;
      do
      {
        if (*(v8 - 1) < v6)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *v8;
        v10 = v8[1];
        *(_OWORD *)v8 = *(_OWORD *)(v8 - 3);
        v8[2] = *(v8 - 1);
        *(v8 - 2) = v10;
        *(v8 - 1) = v6;
        *(v8 - 3) = v9;
        v8 -= 3;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 24;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_242B8BD00(unint64_t a1, __int128 *a2, unint64_t a3, __int128 *a4)
{
  __int128 *v4;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  __int128 *v15;
  __int128 v18;
  unint64_t v21;
  __int128 *v22;
  __int128 *v23;
  BOOL v24;
  BOOL v25;
  __int128 v26;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (uint64_t)a2 - a1;
  v9 = (uint64_t)((uint64_t)a2 - a1) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  if (v9 >= v11)
  {
    sub_242BC1A38(a2, (uint64_t)(a3 - (_QWORD)a2) / 24, a4);
    v12 = (unint64_t)v4 + 24 * v11;
    if (v7 >= (unint64_t)v6 || v10 < 24)
      goto LABEL_45;
    v21 = a3 - 24;
    while (1)
    {
      v22 = (__int128 *)(v21 + 24);
      if (*((_QWORD *)v6 - 1) >= *(_QWORD *)(v12 - 8))
      {
        v23 = (__int128 *)((char *)v6 - 24);
        v25 = v22 != v6 || v21 >= (unint64_t)v6;
        v6 = (__int128 *)((char *)v6 - 24);
        if (!v25)
          goto LABEL_41;
      }
      else
      {
        v23 = (__int128 *)(v12 - 24);
        v24 = v22 != (__int128 *)v12 || v21 >= v12;
        v12 -= 24;
        if (!v24)
          goto LABEL_41;
      }
      v26 = *v23;
      *(_QWORD *)(v21 + 16) = *((_QWORD *)v23 + 2);
      *(_OWORD *)v21 = v26;
LABEL_41:
      v21 -= 24;
      if ((unint64_t)v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  sub_242BC1A38(a1, (uint64_t)((uint64_t)a2 - a1) / 24, a4);
  v12 = (unint64_t)v4 + 24 * v9;
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    do
    {
      if (*((_QWORD *)v4 + 2) >= *((_QWORD *)v6 + 2))
      {
        v14 = v7 == (_QWORD)v6;
        v15 = v6;
        v6 = (__int128 *)((char *)v6 + 24);
        if (v14 && v7 < (unint64_t)v6)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == (_QWORD)v4;
        v15 = v4;
        v4 = (__int128 *)((char *)v4 + 24);
        if (v14 && v7 < (unint64_t)v4)
          goto LABEL_18;
      }
      v18 = *v15;
      *(_QWORD *)(v7 + 16) = *((_QWORD *)v15 + 2);
      *(_OWORD *)v7 = v18;
LABEL_18:
      v7 += 24;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = (__int128 *)v7;
LABEL_45:
  sub_242BC1A38(v4, (uint64_t)(v12 - (_QWORD)v4) / 24, v6);
  return 1;
}

uint64_t sub_242B8BE98(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_name);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_242C48248();

  return v3;
}

uint64_t sub_242B8BEFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return sub_242C480E0();
  return result;
}

uint64_t destroy for MILParsingError(uint64_t a1)
{
  return sub_242B8BF24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_242B8BF24(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14NeuralNetworks15MILParsingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242B8BEFC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MILParsingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242B8BEFC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_242B8BF24(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MILParsingError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_242B8BF24(v4, v5, v6);
  return a1;
}

uint64_t sub_242B8C01C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_242B8C034(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MILParsingError()
{
  return &type metadata for MILParsingError;
}

void OUTLINED_FUNCTION_0_76()
{
  sub_242AC323C();
}

uint64_t OUTLINED_FUNCTION_2_66@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + a1);
  v4 = *v3;
  *(__n128 *)v3 = a2;
  return sub_242B8B580(v4);
}

void OUTLINED_FUNCTION_3_60()
{
  sub_242AC323C();
}

uint64_t OUTLINED_FUNCTION_9_51@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242B8B580(*(_QWORD *)(v1 + a1));
}

void sub_242B8C0A0(char a1)
{
  __asm { BR              X10 }
}

void sub_242B8C0C8()
{
  sub_242C48F5C();
  __break(1u);
}

void GradientContext.subscript.getter(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v7 = *a1;
  v8 = v3 + *(int *)(a2 + 36);
  OUTLINED_FUNCTION_110();
  sub_242C480E0();
  v9 = sub_242AC4964();
  OUTLINED_FUNCTION_42_23(v9, v10);
  OUTLINED_FUNCTION_41_28();
  OUTLINED_FUNCTION_81();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 8);
    OUTLINED_FUNCTION_110();
    v12 = sub_242AC4964();
    if (*(_QWORD *)(v11 + 16))
    {
      sub_242A61650(v12, v13);
      if ((v14 & 1) != 0)
      {
        OUTLINED_FUNCTION_28_37();
        OUTLINED_FUNCTION_28_5();
LABEL_9:
        swift_bridgeObjectRelease();
        *a3 = v11;
        return;
      }
    }
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_3_6();
    sub_242B8C0A0(0);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_110();
  sub_242C480E0();
  v15 = sub_242AC4964();
  OUTLINED_FUNCTION_42_23(v15, v16);
  OUTLINED_FUNCTION_41_28();
  OUTLINED_FUNCTION_81();
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)(v3 + *(int *)(a2 + 44));
  v18 = *v17;
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_0_2();
  v19 = sub_242AC4964();
  sub_242B647CC(v19, v20, v18);
  v22 = v21;
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_81();
  if ((v22 & 1) == 0)
  {
LABEL_12:
    sub_242B8C0A0(4);
    sub_242B8C3AC();
    return;
  }
  v11 = v17[1];
  OUTLINED_FUNCTION_110();
  v23 = sub_242AC4964();
  if (*(_QWORD *)(v11 + 16))
  {
    sub_242A61650(v23, v24);
    if ((v25 & 1) != 0)
    {
      OUTLINED_FUNCTION_28_37();
      OUTLINED_FUNCTION_17_1();
      goto LABEL_9;
    }
  }
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_81();
  v26 = v7;
  swift_retain();
  Tensor.init(zerosLike:)(&v26, a3);
}

void sub_242B8C3AC(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(uint64_t *)((char *)a1 + a2 - 16);
  v5 = *(uint64_t *)((char *)a1 + a2 - 8);
  v8 = *a1;
  v7 = type metadata accessor for GradientContext(0, v6, v5, a3);
  GradientContext.subscript.getter(&v8, v7, &v9);
  *a4 = v9;
}

uint64_t sub_242B8C408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for GradientContext(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  swift_retain();
  swift_retain();
  return GradientContext.subscript.setter();
}

uint64_t GradientContext.subscript.setter()
{
  GradientContext.updateGradient(_:for:)();
  swift_release();
  return OUTLINED_FUNCTION_19_31();
}

uint64_t GradientContext.updateGradient(_:for:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_17_17();
  v3 = v2;
  v5 = *v4;
  OUTLINED_FUNCTION_110();
  sub_242C480E0();
  v6 = sub_242AC4964();
  OUTLINED_FUNCTION_39_27(v6, v7);
  OUTLINED_FUNCTION_38_24();
  OUTLINED_FUNCTION_3_6();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_242B8C0A0(5);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(v0 + *(int *)(v3 + 40));
  OUTLINED_FUNCTION_110();
  sub_242C480E0();
  v9 = sub_242AC4964();
  OUTLINED_FUNCTION_39_27(v9, v10);
  OUTLINED_FUNCTION_38_24();
  OUTLINED_FUNCTION_3_6();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_0_2();
  v11 = OUTLINED_FUNCTION_40_27();
  OUTLINED_FUNCTION_37_26(v11, v12);
  v14 = v13;
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_3_6();
  if ((v14 & 1) == 0)
  {
LABEL_7:
    sub_242B8C0A0(4);
    return GradientContext.subscript.modify();
  }
  OUTLINED_FUNCTION_110();
  swift_retain();
  v15 = OUTLINED_FUNCTION_40_27();
  OUTLINED_FUNCTION_37_26(v15, v16);
  if ((v21 & 1) != 0)
  {
    sub_242B8CA78(v5, v15, v8, (uint64_t)sub_242B8E184, v17, v18, v19, v20, v23, v24);
    OUTLINED_FUNCTION_28_5();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
}

uint64_t (*GradientContext.subscript.modify(uint64_t *a1, uint64_t *a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;

  a1[1] = a3;
  a1[2] = v3;
  v6 = *a2;
  a1[3] = *a2;
  v8 = v6;
  swift_retain();
  GradientContext.subscript.getter(&v8, a3, a1);
  return sub_242B8C6F0;
}

uint64_t sub_242B8C6F0(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return OUTLINED_FUNCTION_26_37();
  swift_retain();
  OUTLINED_FUNCTION_26_37();
  return OUTLINED_FUNCTION_19_31();
}

uint64_t sub_242B8C748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242B8CA78(a1, a2, a3, (uint64_t)sub_242B8D32C, a5, a6, a7, a8, a9, a10);
}

#error "242B8C798: call analysis failed (funcsize=20)"

uint64_t sub_242B8C7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242B8CA78(a1, a2, a3, (uint64_t)sub_242B8D4A0, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_242B8C7B0(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v8 = a2 & 1;
  OUTLINED_FUNCTION_10_39();
  v9 = OUTLINED_FUNCTION_23_35();
  v10 = sub_242B8D570(v9, v8, a3, a4, a5);
  OUTLINED_FUNCTION_2_67(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20);
  return OUTLINED_FUNCTION_14_33();
}

uint64_t sub_242B8C810(char a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_10_39();
  OUTLINED_FUNCTION_16_37();
  v4 = sub_242B8D6A8(a1, a2);
  OUTLINED_FUNCTION_2_67(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  return OUTLINED_FUNCTION_9_52();
}

#error "242B8C890: call analysis failed (funcsize=18)"

uint64_t sub_242B8C89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242B8C8FC(a1, a2, a3, (uint64_t)&unk_257229370, a5, a6, a7, a8, a9, a10);
}

#error "242B8C8D8: call analysis failed (funcsize=15)"

uint64_t sub_242B8C8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242B8CA78(a1, a2, a3, (uint64_t)sub_242B8D9D4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_242B8C8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242B8C8FC(a1, a2, a3, (uint64_t)&unk_257229398, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_242B8C8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;

  OUTLINED_FUNCTION_30_29();
  OUTLINED_FUNCTION_10_39();
  OUTLINED_FUNCTION_7_45();
  sub_242B8DAEC();
  *v10 = a10;
  return OUTLINED_FUNCTION_0_77();
}

uint64_t sub_242B8C94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242B8CA78(a1, a2, a3, (uint64_t)sub_242B8DC84, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_242B8C958()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_10_39();
  v0 = OUTLINED_FUNCTION_17_36();
  v2 = sub_242B8DD8C(v0, v1);
  OUTLINED_FUNCTION_2_67((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_9_52();
}

uint64_t sub_242B8C990()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_10_39();
  v0 = OUTLINED_FUNCTION_17_36();
  v2 = sub_242B8DE90(v0, v1);
  OUTLINED_FUNCTION_2_67(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_9_52();
}

uint64_t sub_242B8C9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_10_39();
  OUTLINED_FUNCTION_16_37();
  OUTLINED_FUNCTION_32_30();
  sub_242B8DF8C();
  OUTLINED_FUNCTION_2_67(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_14_33();
}

#error "242B8CA60: call analysis failed (funcsize=19)"

uint64_t sub_242B8CA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_242B8CA78(a1, a2, a3, (uint64_t)sub_242B8E184, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_242B8CA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  void (*v11)(uint64_t);
  void (*v12)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_30_29();
  v12 = v11;
  OUTLINED_FUNCTION_10_39();
  v13 = OUTLINED_FUNCTION_7_45();
  v12(v13);
  *v10 = a10;
  return OUTLINED_FUNCTION_0_77();
}

uint64_t sub_242B8CACC()
{
  return 16;
}

__n128 sub_242B8CAD8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_242B8CAE4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_242B8CB5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v14[1] = v15[1];
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
    sub_242C480E0();
  }
  return v4;
}

uint64_t sub_242B8CC98(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B8CD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

uint64_t sub_242B8CDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v9[1] = v10[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v11[1] = v12[1];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242B8CEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_242B8CF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  swift_bridgeObjectRelease();
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  swift_bridgeObjectRelease();
  v11[1] = v12[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242B8D03C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_242B8D0C8 + 4 * byte_242C5991E[v11]))();
  }
}

void sub_242B8D148(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_242B8D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for GradientContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GradientContext);
}

ValueMetadata *type metadata accessor for GradientStore()
{
  return &type metadata for GradientStore;
}

#error "242B8D320: call analysis failed (funcsize=15)"

void sub_242B8D32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_12_38(a1, a2, a3);
  OUTLINED_FUNCTION_3_61();
  if (v7)
  {
    __break(1u);
LABEL_10:
    sub_242C492EC();
    __break(1u);
    return;
  }
  v8 = v5;
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221178);
  if ((OUTLINED_FUNCTION_8_44() & 1) != 0)
  {
    OUTLINED_FUNCTION_29_28();
    OUTLINED_FUNCTION_20_39();
    if (!v11)
      goto LABEL_10;
    v8 = v10;
  }
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_29();
    *(_QWORD *)(v4 + 8 * v8) = v3;
    OUTLINED_FUNCTION_12_0();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_19_34();
    sub_242B8E39C(v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_6_60();
  }
}

void sub_242B8D3BC()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_242A6138C(v5, v3, v1);
  OUTLINED_FUNCTION_3_61();
  if (v11)
  {
    __break(1u);
LABEL_10:
    sub_242C492EC();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572293C0);
  if ((sub_242C48EF0() & 1) != 0)
  {
    sub_242A6138C(v6, v4, v2);
    OUTLINED_FUNCTION_20_39();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  v16 = *v0;
  if ((v13 & 1) != 0)
  {
    *(_QWORD *)(v16[7] + 8 * v12) = v8;
    OUTLINED_FUNCTION_13_11();
  }
  else
  {
    sub_242B8E34C(v12, v6, v4, v2, v8, v16);
    OUTLINED_FUNCTION_4_57();
  }
}

void sub_242B8D4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  sub_242A61310(a2, a3);
  OUTLINED_FUNCTION_3_61();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A0);
  if ((OUTLINED_FUNCTION_8_44() & 1) == 0)
    goto LABEL_5;
  v12 = sub_242A61310(a2, a3);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    sub_242C492EC();
    __break(1u);
    return;
  }
  v10 = v12;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v10) = a1;
    OUTLINED_FUNCTION_12_0();
  }
  else
  {
    sub_242B8E39C(v10, a2, a3, a1, v14);
    OUTLINED_FUNCTION_6_60();
  }
}

uint64_t sub_242B8D570(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  char v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v13 = sub_242A6138C(a3, a4, a5);
  if (__OFADD__(v12[2], (v14 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v13;
  v16 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572293E0);
  result = sub_242C48EF0();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_242A6138C(a3, a4, a5);
  if ((v16 & 1) != (v18 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v15 = result;
LABEL_5:
  v19 = a2 & 1;
  v20 = *v6;
  if ((v16 & 1) != 0)
  {
    v21 = v20[7] + 16 * v15;
    *(_QWORD *)v21 = a1;
    *(_BYTE *)(v21 + 8) = v19;
  }
  else
  {
    sub_242B8E3B4(v15, a3, a4, a5, a1, v19, v20);
    return sub_242C480E0();
  }
  return result;
}

unint64_t sub_242B8D6A8(char a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t result;
  char v12;
  _QWORD *v13;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_242A613F0();
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A8);
  result = sub_242C48EF0();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_242A613F0();
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v9 = result;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) == 0)
    return sub_242B8E410(v9, a2, a1 & 1, v13);
  *(_BYTE *)(v13[7] + v9) = a1 & 1;
  return result;
}

unint64_t sub_242B8D7A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t result;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_242A6141C(a2, a3, a4);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2572293B0);
  if ((sub_242C48EF0() & 1) == 0)
    goto LABEL_5;
  v15 = sub_242A6141C(a2, a3, a4 & 1);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) == 0)
    return sub_242B8E454(v13, a2, a3, a4 & 1, a1, v17);
  v18 = v17[7];
  result = swift_release();
  *(_QWORD *)(v18 + 8 * v13) = a1;
  return result;
}

uint64_t sub_242B8D8C8(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_242A61310(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257229378);
  result = sub_242C48EF0();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_242A61310(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    *(_BYTE *)(v15[7] + v11) = a1;
  }
  else
  {
    sub_242B8E5A8(v11, a2, a3, a1, v15);
    return sub_242C480E0();
  }
  return result;
}

uint64_t sub_242B8D9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_242A61310(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257229360);
  result = sub_242C48EF0();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_242A61310(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    *(_QWORD *)(v15[7] + 8 * v11) = a1;
  }
  else
  {
    sub_242B8E5F0(v11, a2, a3, a1, v15);
    return sub_242C480E0();
  }
  return result;
}

void sub_242B8DAE0()
{
  sub_242B8DAEC();
}

void sub_242B8DAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_17_17();
  v3 = v2;
  OUTLINED_FUNCTION_12_38(v4, v5, v6);
  OUTLINED_FUNCTION_3_61();
  if (v9)
  {
    __break(1u);
LABEL_10:
    sub_242C492EC();
    __break(1u);
    return;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(v3);
  if ((OUTLINED_FUNCTION_8_44() & 1) != 0)
  {
    OUTLINED_FUNCTION_29_28();
    OUTLINED_FUNCTION_20_39();
    if (!v13)
      goto LABEL_10;
    v10 = v12;
  }
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_29();
    *(_QWORD *)(v1 + 8 * v10) = v0;
    OUTLINED_FUNCTION_13_11();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_19_34();
    sub_242B8E39C(v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_4_57();
  }
}

void sub_242B8DB78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_242A61540(v5, v3, v1);
  OUTLINED_FUNCTION_3_61();
  if (v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257229390);
  if ((OUTLINED_FUNCTION_25_34() & 1) == 0)
    goto LABEL_5;
  v16 = sub_242A61540(v6, v4, v2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    sub_242C492EC();
    __break(1u);
    return;
  }
  v14 = v16;
LABEL_5:
  v18 = *v0;
  if ((v15 & 1) != 0)
  {
    v19 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v14);
    swift_bridgeObjectRelease();
    *v19 = v10;
    v19[1] = v8;
    OUTLINED_FUNCTION_13_11();
  }
  else
  {
    sub_242B8E638(v14, v6, v4, v2, v10, v8, v18);
    sub_242A625B8(v6, v4);
  }
}

unint64_t sub_242B8DC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t *v16;
  unint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_242A613F0();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257229388);
  if ((sub_242C48EF0() & 1) == 0)
    goto LABEL_5;
  v13 = sub_242A613F0();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) == 0)
    return sub_242B8E678(v11, a3, a1, a2, v15);
  v16 = (uint64_t *)(v15[7] + 16 * v11);
  result = swift_unknownObjectRelease();
  *v16 = a1;
  v16[1] = a2;
  return result;
}

void *sub_242B8DD8C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  void *result;
  _BYTE v16[88];

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_242A61604(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257229380);
  if ((sub_242C48EF0() & 1) == 0)
    goto LABEL_5;
  v11 = sub_242A61604(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_10:
    result = (void *)sub_242C492EC();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = v13[7];
    result = (void *)swift_release();
    *(_QWORD *)(v14 + 8 * v9) = a1;
  }
  else
  {
    sub_242A624E8((uint64_t)a2, (uint64_t)v16);
    return sub_242B8E6C0(v9, v16, a1, v13);
  }
  return result;
}

unint64_t sub_242B8DE90(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t result;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_242A613F0();
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257229368);
  if ((sub_242C48EF0() & 1) == 0)
    goto LABEL_5;
  v11 = sub_242A613F0();
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) == 0)
    return sub_242B8E738(v9, a2, a1, v13);
  v14 = v13[7];
  result = swift_release();
  *(_QWORD *)(v14 + 8 * v9) = a1;
  return result;
}

void sub_242B8DF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_242A61310(v3, v1);
  OUTLINED_FUNCTION_3_61();
  if (v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222988);
  if ((OUTLINED_FUNCTION_25_34() & 1) == 0)
    goto LABEL_5;
  v16 = sub_242A61310(v4, v2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    sub_242C492EC();
    __break(1u);
    return;
  }
  v14 = v16;
LABEL_5:
  if ((v15 & 1) != 0)
  {
    v18 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 24 * v14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_136();
    *v18 = v10;
    v18[1] = v8;
    v18[2] = v6;
    OUTLINED_FUNCTION_13_11();
  }
  else
  {
    OUTLINED_FUNCTION_32_30();
    sub_242B8E77C(v19, v20, v21, v22, v23, v6, v24);
    OUTLINED_FUNCTION_4_57();
  }
}

_QWORD *sub_242B8E074(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _QWORD *result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_242A61310(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2572293D0);
  if ((sub_242C48EF0() & 1) == 0)
    goto LABEL_5;
  v13 = sub_242A61310(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = (_QWORD *)sub_242C492EC();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
    return sub_242B8E814(a1, (_QWORD *)(v15[7] + (v11 << 6)));
  sub_242B8E7BC(v11, a2, a3, a1, v15);
  return (_QWORD *)sub_242C480E0();
}

void sub_242B8E184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  sub_242A61650(a2, a3);
  OUTLINED_FUNCTION_3_61();
  if (v11)
  {
    __break(1u);
LABEL_10:
    sub_242C492EC();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572293C8);
  if ((OUTLINED_FUNCTION_8_44() & 1) != 0)
  {
    v8 = *v4;
    sub_242A61650(a2, a3);
    OUTLINED_FUNCTION_20_39();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_29();
    *(_QWORD *)(v8 + 8 * v12) = a1;
    OUTLINED_FUNCTION_12_0();
  }
  else
  {
    v16 = OUTLINED_FUNCTION_19_34();
    sub_242B8E39C(v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_6_60();
  }
}

uint64_t sub_242B8E240(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_242A61310(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572293E8);
  result = sub_242C48EF0();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_242A61310(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    *(_DWORD *)(v15[7] + 4 * v11) = a1;
  }
  else
  {
    sub_242B8E850(v11, a2, a3, a1, v15);
    return sub_242C480E0();
  }
  return result;
}

unint64_t sub_242B8E34C(unint64_t result, int a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = a6[6] + 24 * result;
  *(_DWORD *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(a6[7] + 8 * result) = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

void sub_242B8E39C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_1_66(a1, a2, a3, a4, a5);
  if (v7)
    __break(1u);
  else
    OUTLINED_FUNCTION_33_25(v5, v6);
}

unint64_t sub_242B8E3B4(unint64_t result, int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = a7[6] + 24 * result;
  *(_DWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_QWORD *)(v7 + 16) = a4;
  v8 = a7[7] + 16 * result;
  *(_QWORD *)v8 = a5;
  *(_BYTE *)(v8 + 8) = a6 & 1;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

unint64_t sub_242B8E410(unint64_t result, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_BYTE *)(a4[7] + result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_242B8E454(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = a6[6] + 24 * result;
  *(_QWORD *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  *(_BYTE *)(v6 + 16) = a4;
  *(_QWORD *)(a6[7] + 8 * result) = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

uint64_t sub_242B8E4A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_242B8E4BC(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x24BE63138]);
}

uint64_t sub_242B8E4B0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_242B8E4BC(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x24BE62F58]);
}

uint64_t sub_242B8E4BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

unint64_t sub_242B8E54C(unint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = a8[6] + 24 * result;
  *(_QWORD *)v8 = a2;
  *(_BYTE *)(v8 + 8) = a3;
  *(_QWORD *)(v8 + 16) = a4;
  v9 = (_QWORD *)(a8[7] + 24 * result);
  *v9 = a5;
  v9[1] = a6;
  v9[2] = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

unint64_t sub_242B8E5A8(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_242B8E5F0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_242B8E638(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  result = OUTLINED_FUNCTION_43_26(a1, a2, a3, a4, a5, a6, a7);
  v10 = (_QWORD *)(v9 + 24 * result);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v14 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * result);
  *v14 = v15;
  v14[1] = v16;
  v17 = *(_QWORD *)(v8 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v8 + 16) = v19;
  return result;
}

unint64_t sub_242B8E678(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void *sub_242B8E6C0(unint64_t a1, const void *a2, uint64_t a3, _QWORD *a4)
{
  void *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  result = memcpy((void *)(a4[6] + 88 * a1), a2, 0x58uLL);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_242B8E738(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_242B8E77C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  result = OUTLINED_FUNCTION_43_26(a1, a2, a3, a4, a5, a6, a7);
  v10 = (_QWORD *)(v9 + 16 * result);
  *v10 = v11;
  v10[1] = v12;
  v13 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 24 * result);
  *v13 = v14;
  v13[1] = v15;
  v13[2] = v16;
  v17 = *(_QWORD *)(v8 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v8 + 16) = v19;
  return result;
}

unint64_t sub_242B8E7BC(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + (result << 6));
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

_QWORD *sub_242B8E814(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for MLPackageManifest.InfoEntry(a2, a1);
  return a2;
}

unint64_t sub_242B8E850(unint64_t result, uint64_t a2, uint64_t a3, int a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_DWORD *)(a5[7] + 4 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_77()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_1_66(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * result) = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_57()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_6_60()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_7_45()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_8_44()
{
  return sub_242C48EF0();
}

uint64_t OUTLINED_FUNCTION_9_52()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_10_39()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t OUTLINED_FUNCTION_12_38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242A61310(a2, a3);
}

uint64_t OUTLINED_FUNCTION_14_33()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_37()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

void OUTLINED_FUNCTION_16_37()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_17_36()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_19_34()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_29()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_23_35()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_25_34()
{
  return sub_242C48EF0();
}

uint64_t OUTLINED_FUNCTION_26_37()
{
  return GradientContext.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_28_37()
{
  return swift_retain();
}

unint64_t OUTLINED_FUNCTION_29_28()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A61310(v1, v0);
}

void OUTLINED_FUNCTION_33_25(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 16) = a2;
}

void OUTLINED_FUNCTION_37_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242B647CC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_38_24()
{
  return swift_release();
}

void OUTLINED_FUNCTION_39_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242B647CC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_40_27()
{
  return sub_242AC4964();
}

uint64_t OUTLINED_FUNCTION_41_28()
{
  return swift_release();
}

void OUTLINED_FUNCTION_42_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_242B647CC(a1, a2, v2);
}

unint64_t OUTLINED_FUNCTION_43_26(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_QWORD *)(a7 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t sub_242B8EB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  double v20;
  int8x16_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  int8x16_t v44;
  _BYTE v45[40];
  uint64_t v46;
  __int128 v47;
  char v48;
  _QWORD v49[16];
  uint64_t v50[3];
  uint64_t v51;
  _BYTE v52[9];

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_9();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_9();
  v10 = v9 - v8;
  v11 = sub_242C47930();
  v42 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_4_9();
  v14 = v13 - v12;
  v15 = *(_QWORD *)(v0 + 40);
  type metadata accessor for TensorHandle();
  v16 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v16 + 16) = v15;
  swift_retain_n();
  sub_242BC995C();
  swift_release();
  v17 = sub_242B29D9C(v16);
  result = swift_release();
  v19 = *(_QWORD *)(v17 + 16);
  if (v19 < 2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v19 == 2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v19 < 4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v19 == 4)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v19 < 6)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v19 == 6)
  {
LABEL_25:
    __break(1u);
    return result;
  }
  v44 = *(int8x16_t *)(v17 + 36);
  v20 = *(double *)(v17 + 52);
  swift_bridgeObjectRelease();
  sub_242AC836C(v44, v20);
  sub_242AC8748(v21);
  v44.i64[0] = MEMORY[0x2494ED0A4](0, v22, 0);
  type metadata accessor for NativeTensorStorage();
  OUTLINED_FUNCTION_3_62();
  v50[0] = v49[0];
  sub_242B9156C((uint64_t)v45);
  v23 = v45[8];
  swift_bridgeObjectRelease();
  v52[0] = v23;
  sub_242B1D8D0(v50, (uint64_t)v52, 0);
  v43 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v25 = OUTLINED_FUNCTION_2_0();
  v41 = xmmword_242C4B7D0;
  *(_OWORD *)(v25 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_3_62();
  result = v49[0];
  v26 = *(_QWORD *)(v49[0] + 16);
  if (v26)
  {
    v27 = (uint64_t *)(v49[0] + 32);
    v28 = 1;
    while (1)
    {
      v29 = *v27++;
      v30 = v28 * v29;
      if ((unsigned __int128)(v28 * (__int128)v29) >> 64 != (v28 * v29) >> 63)
        break;
      v28 = v30;
      if (!--v26)
        goto LABEL_13;
    }
    __break(1u);
    goto LABEL_20;
  }
  v30 = 1;
LABEL_13:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 32) = v30;
  v31 = sub_242C47600();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v31);
  sub_242C4793C();
  v32 = v42;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v6, v14, v11);
  v33 = __swift_storeEnumTagSinglePayload(v6, 0, 1, v11);
  MEMORY[0x24BDAC7A8](v33);
  v34 = v44.i64[0];
  *((_QWORD *)&v41 - 2) = v2;
  *((_QWORD *)&v41 - 1) = v34;
  sub_242B8F2E4(v6, (uint64_t)sub_242B8F9D4, (uint64_t)(&v41 - 2));
  v35 = v11;
  if (v1)
  {
    swift_release();
    sub_242A6AB60(v6);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v14, v11);
  }
  else
  {
    sub_242A6AB60(v6);
    sub_242A8B970(v2 + 48, (uint64_t)v49);
    sub_242A8B9AC(v49, v45);
    if (v48 == 1)
    {
      sub_242A64518(&v47, (uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      v36 = v51;
      v37 = __swift_project_boxed_opaque_existential_1(v50, v51);
      v38 = sub_242B8F538((uint64_t)v37, v43, v36);
      v40 = v39;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v35 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v35 + 16) = v41;
      *(_QWORD *)(v35 + 32) = v38;
      *(_QWORD *)(v35 + 40) = v40;
      swift_release();
      OUTLINED_FUNCTION_0_78();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    }
    else
    {
      sub_242B3AF64((uint64_t)v45);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
      v35 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v35 + 16) = v41;
      *(_QWORD *)(v35 + 32) = v43;
      *(_QWORD *)(v35 + 40) = &off_251387678;
      OUTLINED_FUNCTION_0_78();
    }
  }
  MEMORY[0x2494ED0B0](v44.i64[0]);
  return v35;
}

uint64_t sub_242B8EFD0(BNNSNDArrayDescriptor *a1, uint64_t a2, void *a3)
{
  float v6;
  float v7;
  uint64_t v8;
  _QWORD *v9;
  unsigned __int8 v10;
  void *v11;
  BOOL v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  float v17;
  float v18;
  _QWORD v19[3];
  uint64_t v20;
  _QWORD v21[4];
  __int128 v22[2];
  __int128 v23[2];
  uint64_t v24;
  char v25;
  _QWORD v26[16];
  _QWORD v27[4];
  _QWORD v28[4];

  sub_242A8B970(a2 + 48, (uint64_t)v26);
  sub_242A8B9AC(v26, v22);
  if (!v25)
  {
    sub_242A64518(v22, (uint64_t)v28);
    sub_242A64518(v23, (uint64_t)v27);
    goto LABEL_5;
  }
  if (v25 != 1)
  {
    sub_242A64518(v22, (uint64_t)v21);
    sub_242A64518(v23, (uint64_t)v19);
    v10 = *(_BYTE *)(a2 + 169);
    v11 = static ScalarType.integerTypes.getter();
    v12 = sub_242B64794(v10, (uint64_t)v11);
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    if (v12)
    {
      v13 = sub_242B9168C();
      __swift_project_boxed_opaque_existential_1(v19, v20);
      v14 = sub_242B9168C();
      if (!BNNSRandomFillUniformInt(a3, a1, v13, v14))
      {
LABEL_11:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        v9 = v21;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      }
    }
    else
    {
      v17 = sub_242B91580();
      __swift_project_boxed_opaque_existential_1(v19, v20);
      v18 = sub_242B91580();
      if (!BNNSRandomFillUniformFloat(a3, a1, v17, v18))
        goto LABEL_11;
    }
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v15 = 0xD000000000000024;
    *(_QWORD *)(v15 + 8) = 0x8000000242C6FA80;
    *(_BYTE *)(v15 + 16) = 1;
    swift_willThrow();
    goto LABEL_11;
  }
  sub_242A64518(v22, (uint64_t)v28);
  sub_242A64518(v23, (uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
LABEL_5:
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  v6 = sub_242B91580();
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  v7 = sub_242B91580();
  if (BNNSRandomFillNormalFloat(a3, a1, v6, v7))
  {
    v26[0] = 0;
    v26[1] = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v8 = 0xD000000000000024;
    *(_QWORD *)(v8 + 8) = 0x8000000242C6FA80;
    *(_BYTE *)(v8 + 16) = 1;
    swift_willThrow();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  v9 = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_242B8F2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_242C47930();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v13) = *(unsigned __int8 *)(v4 + 24);
  v15 = v13 > 0xC;
  v16 = (1 << v13) & 0x1777;
  if (v15 || v16 == 0)
  {
    LODWORD(v21) = 0;
    v20 = 34;
  }
  else
  {
    sub_242A6ABA0(a1, (uint64_t)v10);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
    {
      v23 = *(_QWORD *)(v4 + 16);
      sub_242C480E0();
      sub_242B51AEC((uint64_t)&v23, 0, 3, (uint64_t)v14);
      sub_242A6AB60((uint64_t)v10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    }
    v18 = sub_242B53EA8();
    if ((v18 & 1) == 0)
    {
      MEMORY[0x24BDAC7A8](v18);
      *(&v22 - 4) = v4;
      *(&v22 - 3) = (uint64_t)v14;
      v20 = a2;
      v21 = a3;
      sub_242A6A83C((void (*)(void))sub_242B8F9EC);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    LODWORD(v21) = 0;
    v20 = 37;
  }
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

char *sub_242B8F538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[3];
  int v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_242C47894();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242B4B200(a3, a3);
  v10 = *(_QWORD *)(a3 - 8);
  swift_allocObject();
  v11 = sub_242C48578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v12, a1, a3);
  sub_242B3E490();
  v28 = v11;
  v13 = sub_242C48650();
  memset(v26, 0, sizeof(v26));
  v27 = 0;
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12D8], v13);
  sub_242B437A4();
  Tensor.init<A>(_:scalarType:on:)();
  v14 = v29;
  v15 = *MEMORY[0x24BEDF988];
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v25 = v6;
  v16(v9, v15, v6);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = swift_retain_n();
  v19 = sub_242BC9F84(v18, v17, 0, 0);
  v21 = v20;
  swift_release();
  *(_QWORD *)&v26[0] = *(_QWORD *)(a2 + 16);
  LOBYTE(v29) = *(_BYTE *)(a2 + 24);
  sub_242C480E0();
  v22 = sub_242B25F38((uint64_t)v9, a2, (uint64_t)&off_251387678, (uint64_t)v19, v21, (uint64_t *)v26, (unsigned __int8 *)&v29);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  return v22;
}

uint64_t sub_242B8F768()
{
  return sub_242B8EB4C();
}

unint64_t sub_242B8F77C(uint64_t a1)
{
  unint64_t result;

  result = sub_242A772CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B8F7A0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t (*a3)(_BYTE *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *);
  _BYTE v30[56];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;

  v28 = a4;
  v29 = a3;
  v27 = a5;
  v7 = sub_242C47930();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_242C48AD0();
  v11 = *(_BYTE *)(a1 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v25 = sub_242C47918();
  sub_242C4790C();
  v24 = *(_OWORD *)v30;
  v23 = *(_OWORD *)&v30[16];
  v22 = *(_OWORD *)&v30[32];
  v12 = v31;
  v21 = *(_QWORD *)&v30[48];
  sub_242C47924();
  v20 = *(_OWORD *)v30;
  v19 = *(_OWORD *)&v30[16];
  v18 = *(_OWORD *)&v30[32];
  v13 = *(_QWORD *)&v30[48];
  v14 = v31;
  v30[0] = v11;
  sub_242B526F4();
  LODWORD(a1) = v15;
  v30[0] = v11;
  sub_242B526F4();
  LODWORD(a2) = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_DWORD *)v30 = 0;
  *(_DWORD *)&v30[4] = v25;
  *(_OWORD *)&v30[8] = v24;
  *(_OWORD *)&v30[24] = v23;
  *(_OWORD *)&v30[40] = v22;
  v31 = v21;
  v32 = v12;
  v33 = v20;
  v34 = v19;
  v35 = v18;
  v36 = v13;
  v37 = v14;
  v38 = v26;
  v39 = a1;
  v40 = 0;
  v41 = a2;
  v42 = 1065353216;
  return v29(v30);
}

uint64_t sub_242B8F9D4(BNNSNDArrayDescriptor *a1)
{
  uint64_t v1;

  return sub_242B8EFD0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_242B8F9EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242B8F7A0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(_BYTE *))(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t OUTLINED_FUNCTION_0_78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_62()
{
  uint64_t v0;

  return sub_242B9156C(v0 + 184);
}

void sub_242B8FA24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  void *v12;
  _UNKNOWN **v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;

  v4 = OUTLINED_FUNCTION_1_67();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  sub_242B8FEA0((uint64_t)&v15 - v9);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v11 == *MEMORY[0x24BEE27F8])
  {
    v12 = &unk_25138AB20;
    v13 = &off_2572294E8;
  }
  else
  {
    if (v11 != *MEMORY[0x24BEE2800])
    {
      v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v10, v4);
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      v14(v8, v4);
      goto LABEL_7;
    }
    v12 = &unk_25138AAA0;
    v13 = &off_257229498;
  }
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)a2 = a1;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B8FB5C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 24))();
  return swift_reflectionMirror_recursiveCount();
}

void sub_242B8FB74(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(void))(a1 + 24))();
  sub_242B8FEA0(a2);
}

uint64_t sub_242B8FB9C(uint64_t (*a1)(_QWORD, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v22;
  void (*v23)(uint64_t);
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t, uint64_t);
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _BYTE v43[4];
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  char v60;
  char v61;
  uint64_t v62;

  v51 = a1;
  v52 = a2;
  v62 = *MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(qword_2572293F0);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_9();
  v10 = v9 - v8;
  v11 = OUTLINED_FUNCTION_1_67();
  v50 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v49 = &v43[-v15];
  v48 = type metadata accessor for Field();
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_4_9();
  v19 = v18 - v17;
  v20 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  v54 = a4;
  v55 = v4;
  v53 = a3;
  v47 = v20;
  v20(a3, a4);
  result = swift_reflectionMirror_recursiveCount();
  if (result < 0)
    __break(1u);
  v46 = v10;
  if (result)
  {
    v44 = *MEMORY[0x24BEE2808];
    v45 = result;
    v22 = swift_slowAlloc();
    v23 = *(void (**)(uint64_t))(v22 + 8);
    v24 = *(_BYTE *)(v22 + 16);
    v25 = *(_BYTE *)(v22 + 17);
    v58 = *(_QWORD *)v22;
    v59 = v23;
    v60 = v24;
    v61 = v25;
    v26 = v54;
    v27 = v53;
    v28 = v47;
    v47(v53, v54);
    v29 = swift_reflectionMirror_recursiveChildMetadata();
    v30 = sub_242C48320();
    v56 = v31;
    v57 = v30;
    v28(v27, v26);
    v32 = swift_reflectionMirror_recursiveChildOffset();
    v33 = v61;
    swift_getMetadataKind();
    v34 = v11;
    v35 = v46;
    sub_242C48D04();
    if (__swift_getEnumTagSinglePayload(v35, 1, v34) == 1)
    {
      sub_242B8FF98(v35);
      v36 = v50;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v50 + 104))(v14, v44, v34);
      v37 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v36 + 32);
    }
    else
    {
      v37 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v50 + 32);
      v37(v14, v35, v34);
    }
    v38 = v34;
    v39 = v49;
    v37(v49, (uint64_t)v14, v38);
    v40 = v57;
    *(_QWORD *)v19 = 0;
    *(_QWORD *)(v19 + 8) = v40;
    *(_QWORD *)(v19 + 16) = v56;
    *(_QWORD *)(v19 + 24) = v32;
    *(_BYTE *)(v19 + 32) = v33;
    v41 = v48;
    v37((_BYTE *)(v19 + *(int *)(v48 + 32)), (uint64_t)v39, v38);
    *(_QWORD *)(v19 + *(int *)(v41 + 36)) = v29;
    v42 = v51(0, v19);
    sub_242B8FFD8(v19);
    if ((v42 & 1) != 0)
    {
      if (v59)
        v59(v58);
      OUTLINED_FUNCTION_4_58();
    }
    if (v59)
      v59(v58);
    OUTLINED_FUNCTION_4_58();
  }
  return result;
}

void sub_242B8FEA0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(qword_2572293F0);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_4_9();
  v5 = v4 - v3;
  swift_getMetadataKind();
  sub_242C48D04();
  v6 = OUTLINED_FUNCTION_1_67();
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    sub_242B8FF98(v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a1, *MEMORY[0x24BEE2808], v6);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, v5, v6);
  }
  OUTLINED_FUNCTION_9();
}

uint64_t type metadata accessor for Field()
{
  uint64_t result;

  result = qword_257229450;
  if (!qword_257229450)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_242B8FF98(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2572293F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242B8FFD8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Field();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for StructMetadata()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242B90028(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 == 1 || !*(_BYTE *)(a1 + 8))
    {
      if (*(_QWORD *)a1)
        v2 = -1;
      else
        v2 = 0;
    }
    else
    {
      v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242B90064(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for ClassMetadata()
{
  OUTLINED_FUNCTION_22_4();
}

_QWORD *sub_242B900AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = *(int *)(a3 + 32);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_242C48D10();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_242C480E0();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
  }
  return v4;
}

uint64_t sub_242B90174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_242C48D10();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_242B901BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_242C48D10();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_242C480E0();
  v11(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_242B90258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_242C48D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_242B90300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_242C48D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_242B90390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_242C48D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_242B90428()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_242B90434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_1_67();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_242B904A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242B904B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
    OUTLINED_FUNCTION_9();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_1_67();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 32), a2, a2, v7);
  }
}

uint64_t sub_242B90510()
{
  uint64_t result;
  unint64_t v1;

  result = sub_242C48D10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_UNKNOWN **sub_242B905A4()
{
  return &off_2572294B8;
}

uint64_t sub_242B905B0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

_UNKNOWN **sub_242B905B8()
{
  return &off_25138AB38;
}

_UNKNOWN **sub_242B905C4()
{
  return &off_257229508;
}

_UNKNOWN **sub_242B905D0()
{
  return &off_25138AB40;
}

__n128 __swift_memcpy44_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_242B905F0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 44))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242B90610(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 44) = v3;
  return result;
}

void type metadata accessor for ClassTypeDescriptor()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242B90654(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242B906A8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for ClassTypeLayout()
{
  OUTLINED_FUNCTION_22_4();
}

__n128 __swift_memcpy28_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_242B90730(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 28))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242B90750(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 28) = v3;
  return result;
}

void type metadata accessor for StructTypeDescriptor()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242B9078C(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 == 1 || !*(_BYTE *)(a1 + 16))
    {
      if (*(_QWORD *)(a1 + 8))
        v2 = -1;
      else
        v2 = 0;
    }
    else
    {
      v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242B907C8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = 0;
  }
  return result;
}

void type metadata accessor for StructTypeLayout()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t type metadata accessor for RelativeDirectBufferPointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RelativeDirectBufferPointer);
}

__n128 __swift_memcpy16_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for FieldDescriptor()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242B90848()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_242B908B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_242B90924(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_242B90934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_242B90964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_242B90994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_242B909C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_242B909F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_242B90AA4 + 4 * byte_242C599A0[(v8 - 1)]))();
}

void sub_242B90AF0(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        OUTLINED_FUNCTION_8_45();
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v15;
          *(_BYTE *)(a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_8_45();
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for RelativeDirectPointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RelativeDirectPointer);
}

void type metadata accessor for ContextDescriptorFlags()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t OUTLINED_FUNCTION_1_67()
{
  return sub_242C48D10();
}

uint64_t OUTLINED_FUNCTION_2_68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void OUTLINED_FUNCTION_4_58()
{
  JUMPOUT(0x2494EDF68);
}

void OUTLINED_FUNCTION_8_45()
{
  void *v0;
  size_t v1;

  bzero(v0, v1);
}

void Tensor.sequenced<A, B>(through:_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_17_17();
  v13 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v13 - v11;
  v14 = *v0;
  Layer.callAsFunction(_:)((uint64_t)&v14, v7, v3);
  Layer.callAsFunction(_:)((uint64_t)v12, v5, v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.sequenced<A, B, C>(through:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44[4];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_17_17();
  v44[0] = v23;
  v44[1] = v22;
  v25 = v24;
  v46 = v26;
  v47 = v27;
  v29 = v28;
  v31 = v30;
  v44[2] = v32;
  v44[3] = v33;
  v45 = a21;
  v34 = OUTLINED_FUNCTION_12_39();
  v35 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)v44 - v37;
  v39 = OUTLINED_FUNCTION_12_39();
  v40 = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)v44 - v42;
  v48 = *v21;
  Layer.callAsFunction(_:)((uint64_t)&v48, v31, v25);
  OUTLINED_FUNCTION_8_46((uint64_t)v43, v29, v44[0]);
  Layer.callAsFunction(_:)((uint64_t)v38, v47, v45);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v34);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v39);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.sequenced<A, B, C, D>(through:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_17_17();
  v46 = v27;
  v47 = v24;
  v57 = v28;
  v58 = v29;
  v48 = v30;
  v49 = v31;
  v33 = v32;
  v52 = v34;
  v56 = v35;
  v54 = v36;
  v55 = a24;
  v50 = a23;
  v53 = OUTLINED_FUNCTION_5_58();
  v51 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_11_43();
  v38 = OUTLINED_FUNCTION_5_58();
  v39 = *(_QWORD *)(v38 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_10_40();
  v41 = OUTLINED_FUNCTION_5_58();
  v42 = *(_QWORD *)(v41 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v46 - v44;
  v59 = *v47;
  Layer.callAsFunction(_:)((uint64_t)&v59, v33, a21);
  OUTLINED_FUNCTION_7_46((uint64_t)v45, v46, a22);
  OUTLINED_FUNCTION_8_46(v26, v49, v50);
  Layer.callAsFunction(_:)(v25, v58, v55);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v25, v53);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v26, v38);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v41);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.sequenced<A, B, C, D, E>(through:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  OUTLINED_FUNCTION_17_17();
  v63 = v27;
  v64 = v29;
  v31 = v30;
  v33 = v32;
  v73 = v34;
  v74 = v35;
  v68 = v36;
  v75 = a27;
  v76 = v37;
  v58 = a24;
  v59 = v38;
  v60 = a25;
  v71 = v39;
  v72 = a22;
  v66 = a21;
  v67 = a26;
  v40 = OUTLINED_FUNCTION_3_63();
  v69 = *(_QWORD *)(v40 - 8);
  v70 = v40;
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_9_53();
  v65 = OUTLINED_FUNCTION_3_63();
  v62 = *(_QWORD *)(v65 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v57 - v43;
  v45 = v31;
  v61 = OUTLINED_FUNCTION_3_63();
  v46 = *(_QWORD *)(v61 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v57 - v48;
  v50 = OUTLINED_FUNCTION_3_63();
  v51 = *(_QWORD *)(v50 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v52);
  v54 = (char *)&v57 - v53;
  v77 = *v63;
  Layer.callAsFunction(_:)((uint64_t)&v77, v33, a23);
  Layer.callAsFunction(_:)((uint64_t)v54, v45, v58);
  OUTLINED_FUNCTION_7_46((uint64_t)v49, v59, v60);
  v55 = OUTLINED_FUNCTION_8_46((uint64_t)v44, v66, v67);
  OUTLINED_FUNCTION_6_61(v55, v56, v75);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v28, v70);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v65);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v61);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
  OUTLINED_FUNCTION_13_11();
}

void Tensor.sequenced<A, B, C, D, E, F>(through:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  OUTLINED_FUNCTION_17_17();
  v70 = v30;
  v58 = v32;
  v65 = v33;
  v84 = v34;
  v85 = v35;
  v80 = v36;
  v78 = v37;
  v74 = v38;
  v71 = v39;
  v83 = v40;
  v62 = a25;
  v59 = a26;
  v61 = a27;
  v67 = a28;
  v60 = a21;
  v66 = a22;
  v75 = a23;
  v76 = a29;
  v81 = a24;
  v82 = a30;
  v79 = OUTLINED_FUNCTION_2_69();
  v77 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_9_53();
  v42 = OUTLINED_FUNCTION_2_69();
  v72 = *(_QWORD *)(v42 - 8);
  v73 = v42;
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v58 - v44;
  v46 = OUTLINED_FUNCTION_2_69();
  v68 = *(_QWORD *)(v46 - 8);
  v69 = v46;
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_11_43();
  v64 = OUTLINED_FUNCTION_2_69();
  v63 = *(_QWORD *)(v64 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_10_40();
  v49 = v62;
  v50 = v65;
  v51 = OUTLINED_FUNCTION_2_69();
  v52 = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x24BDAC7A8](v53);
  v55 = (char *)&v58 - v54;
  v86 = *v70;
  Layer.callAsFunction(_:)((uint64_t)&v86, v50, v49);
  Layer.callAsFunction(_:)((uint64_t)v55, v58, v59);
  Layer.callAsFunction(_:)(a21, v60, v61);
  OUTLINED_FUNCTION_7_46(a27, v66, v67);
  v56 = Layer.callAsFunction(_:)((uint64_t)v45, v75, v76);
  OUTLINED_FUNCTION_6_61(v56, v57, v82);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v31, v79);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v45, v73);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(a27, v69);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(a21, v64);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v51);
  OUTLINED_FUNCTION_13_11();
}

uint64_t OUTLINED_FUNCTION_2_69()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_3_63()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_5_58()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_6_61(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return Layer.callAsFunction(_:)(v3, *(_QWORD *)(v4 - 136), a3);
}

uint64_t OUTLINED_FUNCTION_7_46(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Layer.callAsFunction(_:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_8_46(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Layer.callAsFunction(_:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_9_53()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_40()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_43()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_39()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_242B9156C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 169);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 176);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_242C480E0();
}

float sub_242B91580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned int v11;
  uint64_t v13;
  double v14;

  OUTLINED_FUNCTION_13_47();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_26_22((uint64_t)v4, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  if (OUTLINED_FUNCTION_2_70())
  {
    _H0 = LOWORD(v14);
    __asm { FCVT            S8, H0 }
  }
  else if (OUTLINED_FUNCTION_2_70())
  {
    LOWORD(v11) = LOWORD(v14);
    _S8 = (float)v11;
  }
  else if (OUTLINED_FUNCTION_2_70())
  {
    _S8 = *(float *)&v14;
  }
  else if (OUTLINED_FUNCTION_2_70())
  {
    _S8 = v14;
  }
  else
  {
    _S8 = (float)sub_242B9168C();
  }
  OUTLINED_FUNCTION_51_8((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return _S8;
}

uint64_t sub_242B9168C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = v0;
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_26_22((uint64_t)v5, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  if (OUTLINED_FUNCTION_0_79())
  {
    v6 = v9;
  }
  else if (OUTLINED_FUNCTION_0_79())
  {
    v6 = (int)v9;
  }
  else if (OUTLINED_FUNCTION_0_79())
  {
    v6 = (__int16)v9;
  }
  else if (OUTLINED_FUNCTION_0_79())
  {
    v6 = (char)v9;
  }
  else
  {
    if (OUTLINED_FUNCTION_0_79())
    {
      v6 = v9;
      if ((v9 & 0x8000000000000000) == 0)
        goto LABEL_18;
      __break(1u);
    }
    if (OUTLINED_FUNCTION_0_79())
    {
      v6 = v9;
    }
    else if (OUTLINED_FUNCTION_0_79())
    {
      v6 = (unsigned __int16)v9;
    }
    else
    {
      if (!OUTLINED_FUNCTION_0_79())
      {
        v9 = 0;
        v10 = 0xE000000000000000;
        sub_242C48C38();
        sub_242C48314();
        swift_getDynamicType();
        sub_242C494F0();
        sub_242C48314();
        swift_bridgeObjectRelease();
        sub_242C48314();
        v11 = 9;
        sub_242A59170();
      }
      v6 = v9;
    }
  }
LABEL_18:
  OUTLINED_FUNCTION_51_8((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return v6;
}

__int16 sub_242B91864@<H0>()
{
  __int16 result;

  _S0 = sub_242B91580();
  __asm { FCVT            H0, S0 }
  return result;
}

void sub_242B9187C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v0 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v0 + 16) = xmmword_242C4B7D0;
  sub_242B9156C(v0 + 32);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242B918C0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t *v13;
  uint64_t result;

  v8 = *a2;
  v9 = *(_QWORD *)(a4 + 8);
  v10 = (uint64_t *)(a5 + 40);
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a5);
  OUTLINED_FUNCTION_9_54((uint64_t)boxed_opaque_existential_0, a1);
  v12 = a1 + *(int *)(sub_242C481F4() + 36);
  *(_QWORD *)(a5 + 64) = a3;
  *(_QWORD *)(a5 + 72) = v9;
  v13 = __swift_allocate_boxed_opaque_existential_0(v10);
  result = OUTLINED_FUNCTION_9_54((uint64_t)v13, v12);
  *(_BYTE *)(a5 + 120) = 2;
  *(_BYTE *)(a5 + 121) = v8;
  return result;
}

void *sub_242B91960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t *v14;
  void *result;
  uint64_t v16[5];
  uint64_t v17[10];
  char v18;

  v10 = *a3;
  v11 = *(_QWORD *)(a5 + 8);
  v16[3] = a4;
  v16[4] = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
  v13 = *(_QWORD *)(a4 - 8);
  OUTLINED_FUNCTION_26_22((uint64_t)boxed_opaque_existential_0, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  v17[3] = a4;
  v17[4] = v11;
  v14 = __swift_allocate_boxed_opaque_existential_0(v17);
  OUTLINED_FUNCTION_26_22((uint64_t)v14, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
  OUTLINED_FUNCTION_51_8(a1, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  v18 = 0;
  result = sub_242A8B9AC(v16, a6);
  a6[121] = v10;
  return result;
}

void *sub_242B91A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  void (*v17)(uint64_t, uint64_t);
  void *result;
  char v19;
  uint64_t v20[5];
  uint64_t v21[5];
  uint64_t v22[5];
  char v23;

  v19 = *a4;
  v12 = *(_QWORD *)(a6 + 8);
  v20[3] = a5;
  v20[4] = v12;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v20);
  v14 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_9_54((uint64_t)boxed_opaque_existential_0, a1);
  v21[3] = a5;
  v21[4] = v12;
  v15 = __swift_allocate_boxed_opaque_existential_0(v21);
  OUTLINED_FUNCTION_9_54((uint64_t)v15, a2);
  v22[3] = a5;
  v22[4] = v12;
  v16 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 32))(v16, a3, a5);
  v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v17(a2, a5);
  v17(a1, a5);
  v23 = 1;
  result = sub_242A8B9AC(v20, a7);
  a7[121] = v19;
  return result;
}

uint64_t sub_242B91AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  v3 = v1;
  sub_242C4856C();
  swift_retain();
  return v3;
}

uint64_t sub_242B91B60(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *__src, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;

  v11 = *a5;
  if (!a3)
    a1 = sub_242BD0204(0x6D6F646E6172, 0xE600000000000000);
  *(_DWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 176) = v11;
  memcpy((void *)(v7 + 48), __src, 0x7AuLL);
  sub_242A56808(a7, v7 + 184);
  return v7;
}

uint64_t sub_242B91BE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_242B92A40(v0 + 48);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B91C14()
{
  sub_242B91BE0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RandomOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B91C54()
{
  return 0x6D6F646E6172;
}

__n128 sub_242B91C70@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 232);
  v3 = *(_BYTE *)(v1 + 240);
  v4 = *(_BYTE *)(v1 + 241);
  v5 = *(_OWORD *)(v1 + 200);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 216);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242B91CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  _BYTE v16[40];
  _QWORD v17[3];
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  __int128 v21[2];
  __int128 v22;
  uint64_t v23;
  char v24;
  _BYTE v25[128];

  sub_242C4817C();
  sub_242A8B970(v0 + 48, (uint64_t)v25);
  sub_242A8B9AC(v25, v21);
  if (v24)
  {
    if (v24 == 1)
    {
      OUTLINED_FUNCTION_8_47();
      sub_242C4817C();
      __swift_project_boxed_opaque_existential_1(v19, v20);
      OUTLINED_FUNCTION_5_59();
      MEMORY[0x24BDAC7A8](v1);
      OUTLINED_FUNCTION_1_68(v2, v3, *(uint64_t *)&v15[0]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257227190);
      if (OUTLINED_FUNCTION_3_64())
      {
        sub_242A64518(v15, (uint64_t)v16);
        OUTLINED_FUNCTION_6_62();
        OUTLINED_FUNCTION_10_41();
      }
      else
      {
        OUTLINED_FUNCTION_4_59();
      }
      __swift_project_boxed_opaque_existential_1(v17, v18);
      OUTLINED_FUNCTION_5_59();
      MEMORY[0x24BDAC7A8](v11);
      OUTLINED_FUNCTION_1_68(v12, v13, *(uint64_t *)&v15[0]);
      if (OUTLINED_FUNCTION_3_64())
      {
        sub_242A64518(v15, (uint64_t)v16);
        OUTLINED_FUNCTION_7_47();
        OUTLINED_FUNCTION_10_41();
      }
      else
      {
        OUTLINED_FUNCTION_4_59();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      v10 = &v23;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    OUTLINED_FUNCTION_8_47();
  }
  else
  {
    sub_242A64518(v21, (uint64_t)v19);
    sub_242A64518(&v22, (uint64_t)v17);
  }
  sub_242C4817C();
  __swift_project_boxed_opaque_existential_1(v19, v20);
  OUTLINED_FUNCTION_5_59();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_1_68(v5, v6, *(uint64_t *)&v15[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257227190);
  if (OUTLINED_FUNCTION_3_64())
  {
    sub_242A64518(v15, (uint64_t)v16);
    OUTLINED_FUNCTION_6_62();
    OUTLINED_FUNCTION_10_41();
  }
  else
  {
    OUTLINED_FUNCTION_4_59();
  }
  __swift_project_boxed_opaque_existential_1(v17, v18);
  OUTLINED_FUNCTION_5_59();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_1_68(v8, v9, *(uint64_t *)&v15[0]);
  if (OUTLINED_FUNCTION_3_64())
  {
    sub_242A64518(v15, (uint64_t)v16);
    OUTLINED_FUNCTION_7_47();
    OUTLINED_FUNCTION_10_41();
  }
  else
  {
    OUTLINED_FUNCTION_4_59();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  v10 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_242B91F28()
{
  return sub_242B91CA0();
}

void sub_242B91F48()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 72);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242B91F98()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242B91FC4()
{
  sub_242B91F98();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RandomStateOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B92004(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_242B92044 + 4 * asc_242C59BD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_242B92064 + 4 * byte_242C59BD5[v4]))();
}

_BYTE *sub_242B92044(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_242B92064(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242B9206C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242B92074(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242B9207C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242B92084(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for RandomStateOperation.Algorithm()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242B9209C(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 120);
  if (v2 == 2)
  {
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1(result);
    return __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  }
  if (v2 != 1)
  {
    if (*(_BYTE *)(result + 120))
      return result;
    goto LABEL_4;
  }
  __swift_destroy_boxed_opaque_existential_1(result);
  __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  return __swift_destroy_boxed_opaque_existential_1(v1 + 80);
}

uint64_t sub_242B92100(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(unsigned __int8 *)(a2 + 120);
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
  if (v4 == 1)
  {
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    v7 = a1 + 80;
    v8 = a2 + 80;
    v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 104) = v9;
  }
  else
  {
    v7 = a1 + 40;
    v8 = a2 + 40;
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v9;
  }
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v7, v8);
  *(_BYTE *)(a1 + 120) = v4;
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  return a1;
}

uint64_t sub_242B921E0(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_242B3AF64(a1);
    v4 = *(unsigned __int8 *)(a2 + 120);
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    if (v4 == 1)
    {
      v6 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v6;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
      v7 = a1 + 80;
      v8 = a2 + 80;
      v9 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 104) = v9;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    }
    else
    {
      v7 = a1 + 40;
      v8 = a2 + 40;
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v9;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    }
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v7, v8);
    *(_BYTE *)(a1 + 120) = v4;
  }
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  return a1;
}

void *__swift_memcpy122_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x7AuLL);
}

_BYTE *sub_242B922F0(_BYTE *a1, _BYTE *a2)
{
  if (a1 != a2)
  {
    sub_242B3AF64((uint64_t)a1);
    memcpy(a1, a2, 0x79uLL);
  }
  a1[121] = a2[121];
  return a1;
}

uint64_t sub_242B9233C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 122))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 120);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242B9237C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 122) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 122) = 0;
    if (a2)
      *(_BYTE *)(result + 120) = -(char)a2;
  }
  return result;
}

void type metadata accessor for RandomOperation.Distribution()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242B923EC(uint64_t a1)
{
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 120);
  if (v2 >= 3)
    v2 = *(_DWORD *)a1 + 3;
  if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    return __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
}

uint64_t sub_242B92450(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *(unsigned __int8 *)(a2 + 120);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 40, a2 + 40);
    v8 = 2;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    if (v4 == 1)
    {
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      v6 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
      v7 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 104) = v7;
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 80, a2 + 80);
      v8 = 1;
    }
    else
    {
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      v11 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 40, a2 + 40);
      v8 = 0;
    }
  }
  *(_BYTE *)(a1 + 120) = v8;
  return a1;
}

uint64_t sub_242B92590(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 120);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      __swift_destroy_boxed_opaque_existential_1(a1 + 40);
      v5 = a1 + 80;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      v5 = a1 + 40;
    }
    __swift_destroy_boxed_opaque_existential_1(v5);
    v6 = *(unsigned __int8 *)(a2 + 120);
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 == 2)
    {
      v11 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      v12 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v12;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 40, a2 + 40);
      v10 = 2;
    }
    else
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      if (v6 == 1)
      {
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
        v8 = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 64) = v8;
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
        v9 = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 104) = v9;
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 80, a2 + 80);
        v10 = 1;
      }
      else
      {
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
        v13 = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 64) = v13;
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 40, a2 + 40);
        v10 = 0;
      }
    }
    *(_BYTE *)(a1 + 120) = v10;
  }
  return a1;
}

void *__swift_memcpy121_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

unsigned __int8 *sub_242B92748(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  char v7;

  if (a1 != a2)
  {
    v4 = a1[120];
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 40));
      v5 = (uint64_t)(a1 + 80);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      v5 = (uint64_t)(a1 + 40);
    }
    __swift_destroy_boxed_opaque_existential_1(v5);
    v6 = a2[120];
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 == 2)
    {
      memcpy(a1, a2, 0x50uLL);
      v7 = 2;
    }
    else if (v6 == 1)
    {
      memcpy(a1, a2, 0x78uLL);
      v7 = 1;
    }
    else
    {
      memcpy(a1, a2, 0x50uLL);
      v7 = 0;
    }
    a1[120] = v7;
  }
  return a1;
}

uint64_t sub_242B9281C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 121))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 120);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_242B92858(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 105) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 121) = 0;
    if (a2)
      *(_BYTE *)(result + 120) = -(char)a2;
  }
  return result;
}

uint64_t sub_242B928B0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 120);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_242B928CC(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 2)
  {
    v2 = a2 - 3;
    *(_QWORD *)(result + 112) = 0;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 120) = a2;
  return result;
}

void type metadata accessor for RandomOperation.Distribution.Kind()
{
  OUTLINED_FUNCTION_22_4();
}

unint64_t sub_242B92910()
{
  unint64_t result;

  result = qword_2572297D0;
  if (!qword_2572297D0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C59CD4, &unk_25138AFA8);
    atomic_store(result, (unint64_t *)&qword_2572297D0);
  }
  return result;
}

void sub_242B92950(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257221F58, type metadata accessor for RandomStateOperation, (uint64_t)&unk_242C59D50);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B9298C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_2572297D8, type metadata accessor for RandomStateOperation, (uint64_t)&unk_242C59D0C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B929C8(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0((unint64_t *)&qword_257221790, type metadata accessor for RandomOperation, (uint64_t)&unk_242C59DC0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B92A04(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0((unint64_t *)&unk_2572297E0, type metadata accessor for RandomOperation, (uint64_t)&unk_242C59D7C);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_242B92A40(uint64_t a1)
{
  sub_242B9209C(a1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_79()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_2_70()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_64()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_4_59()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return sub_242B09608(v0);
}

uint64_t OUTLINED_FUNCTION_6_62()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
  return sub_242C48170();
}

uint64_t OUTLINED_FUNCTION_7_47()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
  return sub_242C48170();
}

uint64_t OUTLINED_FUNCTION_8_47()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 + 160), v0 + 120);
  return sub_242A64518((__int128 *)(v0 + 200), v0 + 80);
}

uint64_t OUTLINED_FUNCTION_9_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_10_41()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 40);
}

uint64_t sub_242B92B98(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_22_2();
  v5 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_210((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v30);
  OUTLINED_FUNCTION_135();
  if (v32 && *(_BYTE *)(v32 + 24) == 1)
  {
    swift_retain();
    OUTLINED_FUNCTION_4_60();
    if (v3)
      goto LABEL_6;
    v2 = v32;
LABEL_8:
    OUTLINED_FUNCTION_191(v13, v14, v15, v16, v17, v18, v19, v20, v31);
    return v2;
  }
  OUTLINED_FUNCTION_19_35();
  OUTLINED_FUNCTION_7_48();
  v2 = sub_242B92F40(a2 & 1, MEMORY[0x24BEE4AF8]);
  swift_retain();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_4_60();
  if (!v3)
    goto LABEL_8;
LABEL_6:
  v21 = swift_release();
  OUTLINED_FUNCTION_191(v21, v22, v23, v24, v25, v26, v27, v28, v31);
  return v2;
}

uint64_t sub_242B92C90@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE __dst[96];
  _BYTE v11[72];
  uint64_t v12;

  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  sub_242B933C0((uint64_t)v11);
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_41_29();
  v6 = OUTLINED_FUNCTION_2_0();
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = v7;
  swift_retain();
  OUTLINED_FUNCTION_28_5();
  v12 = v6;
  OUTLINED_FUNCTION_28_38();
  sub_242B93598((uint64_t)v11);
  OUTLINED_FUNCTION_135();
  memcpy(__dst, a1, sizeof(__dst));
  v9 = a2;
  sub_242C14E20(&v9, v6, a3);
  OUTLINED_FUNCTION_28_38();
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_135();
  sub_242A5DC30((uint64_t)v11);
  sub_242B94634((uint64_t)a1);
  return OUTLINED_FUNCTION_17_1();
}

#error "242B92DB4: call analysis failed (funcsize=46)"

uint64_t sub_242B92E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_9_55();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_22_2();
  v4 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_210((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v30);
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_41_29();
  v12 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_194(v12, MEMORY[0x24BEE4AF8]);
  OUTLINED_FUNCTION_28_5();
  v13 = sub_242B93328();
  OUTLINED_FUNCTION_208((uint64_t)v13, v14, v15, v16, v17, v18, v19, v20, v31);
  OUTLINED_FUNCTION_135();
  sub_242B22890();
  sub_242B93328();
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_8_1();
  v21 = OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_191(v21, v22, v23, v24, v25, v26, v27, v28, v32);
  swift_release();
  sub_242AA5A34(v3);
  sub_242B94728(v1);
  return OUTLINED_FUNCTION_72_1();
}

uint64_t sub_242B92F40(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 + 24) = a1;
  v3 = sub_242B297F4(a2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = v3;
  return v2;
}

uint64_t sub_242B92F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[56];
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v4);
  swift_release();
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  v0 = sub_242C48278();
  v2 = v1;
  swift_bridgeObjectRelease();
  v5 = v0;
  v6 = v2;
  swift_getAssociatedTypeWitness();
  sub_242B936A4();
  return sub_242A5DC30((uint64_t)v4);
}

uint64_t sub_242B93088()
{
  int8x16_t *v0;
  uint64_t v1;
  int8x16_t *v2;
  int8x16_t v3;
  int8x16_t v4;
  uint64_t v5;
  uint64_t v6;

  if (v0[7].i8[8] == 1)
  {
    v0[7].i8[8] = 0;
    return v0[8].i64[0];
  }
  else
  {
    v3 = v0[6];
    v2 = v0 + 6;
    sub_242AC836C(v3, *(double *)v2[1].i64);
    sub_242AC8748(v4);
    v2[1].i8[8] = 1;
    v2[2].i64[0] = v5;
    v1 = v6;
    sub_242AC8744((__int128 *)v2->i8);
  }
  return v1;
}

uint64_t sub_242B930E8(uint64_t a1, uint64_t a2)
{
  return sub_242B93120(a1, a2, sub_242B748DC);
}

uint64_t sub_242B93104(uint64_t a1, uint64_t a2)
{
  return sub_242B93120(a1, a2, sub_242B74920);
}

#error "242B93160: call analysis failed (funcsize=47)"

uint64_t sub_242B931DC(uint64_t a1, uint64_t a2)
{
  return sub_242B93120(a1, a2, sub_242B74AF4);
}

uint64_t sub_242B931F8(uint64_t a1, uint64_t a2)
{
  return sub_242B93120(a1, a2, sub_242B74BB0);
}

uint64_t sub_242B93214()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_2();
  v0 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_210((uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, v17);
  OUTLINED_FUNCTION_135();
  swift_release();
  OUTLINED_FUNCTION_4_60();
  return OUTLINED_FUNCTION_191(v8, v9, v10, v11, v12, v13, v14, v15, v18);
}

void sub_242B9328C(uint64_t a1@<X8>)
{
  time_t v2;
  uint64_t v3;

  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  v2 = time(0);
  if (v2 < 0)
  {
    sub_242C48F50();
    __break(1u);
  }
  else
  {
    UInt64.vector2.getter(v2);
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 104) = 0;
    *(_QWORD *)(a1 + 112) = v3;
    *(_BYTE *)(a1 + 120) = 0;
    *(_QWORD *)(a1 + 128) = 0;
    OUTLINED_FUNCTION_3_0();
  }
}

const void *sub_242B93328()
{
  pthread_key_t v0;
  void *v1;
  const void *v2;

  if (qword_257220588 != -1)
    swift_once();
  v0 = qword_2572297F0;
  v1 = pthread_getspecific(qword_2572297F0);
  if (v1)
  {
    v2 = v1;
    swift_retain();
  }
  else
  {
    swift_allocObject();
    v2 = (const void *)sub_242B93654();
    swift_retain();
    pthread_setspecific(v0, v2);
  }
  return v2;
}

void sub_242B933C0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2_34();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    sub_242B94600(v3 + 144 * v4 - 112, a1);
    OUTLINED_FUNCTION_3_0();
  }
  else
  {
    __break(1u);
  }
}

void sub_242B9340C(unint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  char *v5;
  unint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((a2 & 1) == 0)
    goto LABEL_6;
  type metadata accessor for ContextManager();
  v5 = (char *)sub_242B93328() + 16;
  OUTLINED_FUNCTION_2_34();
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  OUTLINED_FUNCTION_1_60();
  v7 = *(_QWORD *)v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if (v6)
      goto LABEL_4;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_242B4B510();
  v7 = v14;
  *(_QWORD *)v5 = v14;
  if (!v6)
    goto LABEL_8;
LABEL_4:
  if (v6 <= *(_QWORD *)(v7 + 16))
  {
    a1 = sub_242B93088();
    swift_endAccess();
    swift_release();
LABEL_6:
    a3[3] = (uint64_t)&type metadata for PhiloxRandomNumberGenerator;
    a3[4] = sub_242A771D8();
    v9 = swift_allocObject();
    *a3 = v9;
    v10 = sub_242B40ACC(a1);
    *(_OWORD *)(v9 + 16) = v11;
    *(_QWORD *)(v9 + 32) = v12;
    *(_BYTE *)(v9 + 40) = v10 & 1;
    *(_QWORD *)(v9 + 48) = v13;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_242B9352C()
{
  uint64_t result;
  pthread_key_t v1[2];

  v1[1] = *MEMORY[0x24BDAC8D0];
  v1[0] = 0;
  result = pthread_key_create(v1, (void (__cdecl *)(void *))j_j__swift_release);
  qword_2572297F0 = v1[0];
  return result;
}

uint64_t sub_242B93598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_1_60();
  sub_242A5D9BC();
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  sub_242A5DD20();
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v4 + 16) = v3 + 1;
  sub_242B94600(a1, v4 + 144 * v3 + 32);
  return swift_endAccess();
}

uint64_t sub_242B93610()
{
  _BYTE v1[144];

  OUTLINED_FUNCTION_1_60();
  sub_242A9B79C(v1);
  swift_endAccess();
  return sub_242A5DC30((uint64_t)v1);
}

uint64_t sub_242B93654()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2572298A0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  sub_242B9328C(v1 + 32);
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

void sub_242B936A4()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_34_28();
  v2 = (void *)MEMORY[0x2494ED6EC]();
  sub_242B93A90(v1, v0);
  objc_autoreleasePoolPop(v2);
}

uint64_t sub_242B93710(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B93598(a1);
  swift_release();
  v5 = a2;
  basicReLU(_:)(&v5);
  sub_242B93328();
  sub_242B93610();
  swift_release();
  return swift_release();
}

uint64_t sub_242B937AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t a6@<X8>)
{
  type metadata accessor for ContextManager();
  swift_retain();
  sub_242B93328();
  sub_242B93598(a1);
  swift_release();
  sub_242BFCCA0(a2, a3, a4, a5, a6);
  sub_242B93328();
  sub_242B93610();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242B9387C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B93598(a1);
  swift_release();
  v8 = a4;
  a2(&v8);
  sub_242B93328();
  sub_242B93610();
  swift_release();
  return swift_release();
}

uint64_t sub_242B9392C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_105_3();
  sub_242B93598(a1);
  OUTLINED_FUNCTION_135();
  a4(a2, a3);
  sub_242B93328();
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_8_1();
  return OUTLINED_FUNCTION_135();
}

uint64_t sub_242B939C4(uint64_t a1, void (*a2)(uint64_t *, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B93598(a1);
  swift_release();
  v11 = a4;
  v10 = a5;
  a2(&v11, &v10);
  sub_242B93328();
  sub_242B93610();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242B93A90(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B93598(a1);
  v4 = swift_release();
  a2(v4);
  sub_242B93328();
  sub_242B93610();
  return swift_release();
}

#error "242B93B50: call analysis failed (funcsize=22)"

uint64_t type metadata accessor for ContextManager()
{
  return objc_opt_self();
}

uint64_t sub_242B93BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257228D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t destroy for Context(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 2)
      swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 40);
    if ((unint64_t)(v6 - 1) >= 2)
      v6 = swift_unknownObjectRetain();
    *(_QWORD *)(a1 + 40) = v6;
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  sub_242C480E0();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Context(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      v5 = (_QWORD *)(a1 + 40);
      v6 = *((_QWORD *)a2 + 5);
      v7 = v6 - 1;
      if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 2)
      {
        if (v7 >= 2)
        {
          *v5 = v6;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
        }
        else
        {
          sub_242B93E98(a1 + 40);
          *v5 = *((_QWORD *)a2 + 5);
        }
      }
      else
      {
        *v5 = v6;
        if (v7 >= 2)
          swift_unknownObjectRetain();
      }
LABEL_16:
      *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
      goto LABEL_17;
    }
    sub_242A6FDE8(a1);
    v10 = a2[1];
    v9 = a2[2];
    v11 = *a2;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)a1 = v11;
  }
  else
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      v8 = *((_QWORD *)a2 + 5);
      if ((unint64_t)(v8 - 1) >= 2)
        v8 = swift_unknownObjectRetain();
      *(_QWORD *)(a1 + 40) = v8;
      goto LABEL_16;
    }
    v12 = *a2;
    v13 = a2[1];
    v14 = a2[2];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 32) = v14;
    *(_OWORD *)a1 = v12;
  }
LABEL_17:
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  swift_retain();
  swift_release();
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  return a1;
}

uint64_t sub_242B93E98(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257228D40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *__swift_memcpy136_16(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for Context(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  uint64_t v8;

  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_8;
  if (!*(_QWORD *)(a2 + 24))
  {
    sub_242A6FDE8(a1);
LABEL_8:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_9;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = (_QWORD *)(a1 + 40);
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 2)
  {
    if ((unint64_t)(v5 - 1) >= 2)
    {
      *v6 = v5;
      swift_unknownObjectRelease();
      goto LABEL_9;
    }
    sub_242B93E98(a1 + 40);
  }
  *v6 = v5;
LABEL_9:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for Context(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 136))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Context(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Context()
{
  return &type metadata for Context;
}

uint64_t sub_242B940B8()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_15_38();
  v2 = sub_242B93328();
  OUTLINED_FUNCTION_210((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v46);
  OUTLINED_FUNCTION_135();
  if (v49 && *(_BYTE *)(v49 + 24) == 1)
  {
    v10 = swift_retain();
    MEMORY[0x2494ED6EC](v10);
    v11 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_21_33(v11, v12, v13, v14, v15, v16, v17, v18, v47);
    if (v0)
      goto LABEL_6;
    v1 = v49;
LABEL_8:
    OUTLINED_FUNCTION_238();
    OUTLINED_FUNCTION_191(v37, v38, v39, v40, v41, v42, v43, v44, v48);
    OUTLINED_FUNCTION_29_29();
    return v1;
  }
  OUTLINED_FUNCTION_19_35();
  v19 = OUTLINED_FUNCTION_7_48();
  v1 = OUTLINED_FUNCTION_20_40(v19, MEMORY[0x24BEE4AF8]);
  swift_retain();
  v20 = swift_release();
  MEMORY[0x2494ED6EC](v20);
  v21 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_21_33(v21, v22, v23, v24, v25, v26, v27, v28, v47);
  if (!v0)
    goto LABEL_8;
LABEL_6:
  OUTLINED_FUNCTION_238();
  v29 = swift_release();
  OUTLINED_FUNCTION_191(v29, v30, v31, v32, v33, v34, v35, v36, v48);
  OUTLINED_FUNCTION_29_29();
  return v1;
}

#error "242B9420C: call analysis failed (funcsize=66)"

#error "242B94328: call analysis failed (funcsize=54)"

#error "242B94428: call analysis failed (funcsize=64)"

#error "242B94550: call analysis failed (funcsize=60)"

uint64_t sub_242B94600(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Context(a2, a1);
  return a2;
}

uint64_t sub_242B94634(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_242B946A8(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_242B94718()
{
  return swift_deallocObject();
}

uint64_t sub_242B94728(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

void OUTLINED_FUNCTION_4_60()
{
  sub_242B936A4();
}

uint64_t OUTLINED_FUNCTION_7_48()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_13_48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *);

  return sub_242B9387C((uint64_t)&a9, v11, v10, v9);
}

uint64_t OUTLINED_FUNCTION_15_38()
{
  return swift_retain_n();
}

void OUTLINED_FUNCTION_18_38()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t OUTLINED_FUNCTION_19_35()
{
  return type metadata accessor for PersistentGraphScope();
}

uint64_t OUTLINED_FUNCTION_20_40(uint64_t a1, uint64_t a2)
{
  return sub_242B92F40(1, a2);
}

uint64_t OUTLINED_FUNCTION_21_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_242B93710((uint64_t)&a9, v9);
}

uint64_t *OUTLINED_FUNCTION_22_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t *OUTLINED_FUNCTION_23_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

const void *OUTLINED_FUNCTION_28_38()
{
  return sub_242B93328();
}

uint64_t OUTLINED_FUNCTION_29_29()
{
  return swift_release_n();
}

void OUTLINED_FUNCTION_31_36()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t OUTLINED_FUNCTION_33_26()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_41_29()
{
  return type metadata accessor for ResolutionDependencies();
}

void OUTLINED_FUNCTION_44_22()
{
  JUMPOUT(0x2494ED6ECLL);
}

void sub_242B948D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, uint64_t, uint64_t);
  _OWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[18];
  uint64_t __src[18];
  uint64_t v94;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v74 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v74 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v74 - v12;
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_64_0();
  v90 = v15;
  v16 = OUTLINED_FUNCTION_28_39();
  v88 = *(_QWORD *)(v16 - 8);
  v89 = v16;
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_13_1();
  v94 = v17;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_64_0();
  v91 = v19;
  v20 = sub_242B89308();
  OUTLINED_FUNCTION_8_48(v20);
  if (v22)
  {
    if (v0[6])
    {
      v86 = v21;
      v23 = sub_242B89308();
      OUTLINED_FUNCTION_8_48(v23);
      if (v24)
      {
        if (v0[7])
        {
          v83 = v25;
          v85 = v24;
          v26 = sub_242B89308();
          OUTLINED_FUNCTION_8_48(v26);
          if (v27)
          {
            v84 = v27;
            if (v0[19])
            {
              v81 = v28;
              v29 = sub_242B89308();
              OUTLINED_FUNCTION_8_48(v29);
              v82 = v31;
              if (v31)
              {
                v79 = v30;
                if (v0[20])
                {
                  v32 = sub_242B89308();
                  OUTLINED_FUNCTION_8_48(v32);
                  if (v33)
                  {
                    v78 = v33;
                    v76 = v34;
                    ObjectType = swift_getObjectType();
                    sub_242BC8254(ObjectType, v86, v36);
                    v80 = ObjectType;
                    if (v37 <= 1)
                    {
                      v40 = v86;
                      v41 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v86 + 16);
                      v75 = 1;
                    }
                    else
                    {
                      v38 = ObjectType;
                      v39 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v86 + 16);
                      ((void (*)(_QWORD *__return_ptr, uint64_t))v39)(v92, v38);
                      if (!*(_QWORD *)(v92[0] + 16))
                      {
                        memset(__src, 0, 24);
                        LOBYTE(__src[3]) = -1;
                        memset(&__src[4], 0, 24);
                        LOBYTE(__src[7]) = -1;
                        BYTE4(__src[13]) = 4;
                        OUTLINED_FUNCTION_4_18();
                      }
                      v75 = *(_QWORD *)(v92[0] + 32);
                      swift_bridgeObjectRelease();
                      v40 = v86;
                      v41 = v39;
                    }
                    v77 = v41;
                    v41(__src, v80, v40);
                    v43 = __src[0];
                    v44 = *(_QWORD *)(__src[0] + 16);
                    if (v44 <= 3)
                    {
                      OUTLINED_FUNCTION_21_34(v44);
                      v92[0] = v43;
                      sub_242B65064();
                      v43 = v92[0];
                    }
                    __src[0] = v43;
                    OUTLINED_FUNCTION_1_7((uint64_t)__src, v91);
                    v45 = swift_getObjectType();
                    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v83 + 16))(__src, v45);
                    OUTLINED_FUNCTION_1_7((uint64_t)__src, v94);
                    v74 = type metadata accessor for NativeTensorStorage();
                    v77(__src, v80, v86);
                    OUTLINED_FUNCTION_26_38(v80);
                    v46 = v87;
                    sub_242B1D8D0(__src, (uint64_t)v92, 0);
                    v77 = v47;
                    v74 = (uint64_t)v46;
                    v48 = v89;
                    v87 = *(uint64_t **)(v88 + 16);
                    ((void (*)(uint64_t, uint64_t, uint64_t))v87)(v90, v91, v89);
                    OUTLINED_FUNCTION_18_14(v90);
                    v49 = v94;
                    ((void (*)(char *, uint64_t, uint64_t))v87)(v13, v94, v48);
                    OUTLINED_FUNCTION_18_14((uint64_t)v13);
                    ((void (*)(char *, uint64_t, uint64_t))v87)(v10, v49, v48);
                    OUTLINED_FUNCTION_18_14((uint64_t)v10);
                    OUTLINED_FUNCTION_24_36((uint64_t)v7);
                    OUTLINED_FUNCTION_18_14((uint64_t)v7);
                    OUTLINED_FUNCTION_24_36((uint64_t)v4);
                    v50 = OUTLINED_FUNCTION_18_14((uint64_t)v4);
                    v87 = &v74;
                    MEMORY[0x24BDAC7A8](v50);
                    v51 = v91;
                    *(&v74 - 4) = (uint64_t)v77;
                    *(&v74 - 3) = v51;
                    v52 = v75;
                    *(&v74 - 2) = (uint64_t)v1;
                    *(&v74 - 1) = v52;
                    MEMORY[0x24BDAC7A8](v53);
                    v54 = v83;
                    *(&v74 - 14) = v85;
                    *(&v74 - 13) = v54;
                    v55 = v84;
                    *(&v74 - 12) = (uint64_t)v13;
                    *(&v74 - 11) = v55;
                    *(&v74 - 10) = v81;
                    *(&v74 - 9) = (uint64_t)v10;
                    v56 = v79;
                    *(&v74 - 8) = v82;
                    *(&v74 - 7) = v56;
                    v57 = v78;
                    *(&v74 - 6) = (uint64_t)v7;
                    *(&v74 - 5) = v57;
                    *(&v74 - 4) = v76;
                    *(&v74 - 3) = (uint64_t)v4;
                    *(&v74 - 2) = (uint64_t)sub_242B967FC;
                    *(&v74 - 1) = v58;
                    v59 = v74;
                    sub_242BF6310((uint64_t)sub_242B96820, (uint64_t)(&v74 - 16), MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
                    if (v59)
                    {
                      swift_unknownObjectRelease();
                      swift_unknownObjectRelease();
                      OUTLINED_FUNCTION_23_13();
                      swift_unknownObjectRelease();
                      swift_unknownObjectRelease();
                      OUTLINED_FUNCTION_14_34();
                      sub_242A6AB60((uint64_t)v7);
                      sub_242A6AB60((uint64_t)v10);
                      sub_242A6AB60((uint64_t)v13);
                      sub_242A6AB60(v90);
                      v60 = v89;
                      v61 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
                      v61(v94, v89);
                      swift_release();
                      v61(v91, v60);
                      goto LABEL_22;
                    }
                    OUTLINED_FUNCTION_14_34();
                    sub_242A6AB60((uint64_t)v7);
                    sub_242A6AB60((uint64_t)v10);
                    sub_242A6AB60((uint64_t)v13);
                    sub_242A6AB60(v90);
                    v62 = *((unsigned __int8 *)v1 + 168);
                    if (*((_BYTE *)v1 + 168))
                    {
                      v63 = v88;
                      v64 = v89;
                      v65 = v91;
                      v66 = v94;
                      v67 = v77;
                      if (v62 != 1)
                        goto LABEL_35;
LABEL_33:
                      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
                      v69 = OUTLINED_FUNCTION_2_0();
                      *(_OWORD *)(v69 + 16) = xmmword_242C4B810;
                      *(_QWORD *)(v69 + 32) = v67;
                      *(_QWORD *)(v69 + 40) = &off_251387678;
                      v70 = v79;
                      *(_QWORD *)(v69 + 48) = v82;
                      *(_QWORD *)(v69 + 56) = v70;
                      v71 = v76;
                      *(_QWORD *)(v69 + 64) = v78;
                      *(_QWORD *)(v69 + 72) = v71;
LABEL_36:
                      OUTLINED_FUNCTION_23_13();
                      swift_unknownObjectRelease();
                      swift_unknownObjectRelease();
                      v73 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
                      v73(v66, v64);
                      v73(v65, v64);
                      goto LABEL_22;
                    }
                    type metadata accessor for ContextManager();
                    sub_242B93328();
                    sub_242B933C0((uint64_t)__src);
                    swift_release();
                    memcpy(v92, __src, 0x88uLL);
                    v63 = v88;
                    v64 = v89;
                    v65 = v91;
                    v66 = v94;
                    v67 = v77;
                    if (v92[10])
                    {
                      v68 = *(_BYTE *)(v92[10] + 24);
                      sub_242A5DC30((uint64_t)v92);
                      if ((v68 & 1) != 0)
                        goto LABEL_33;
                    }
                    else
                    {
                      sub_242A5DC30((uint64_t)v92);
                    }
LABEL_35:
                    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
                    v72 = OUTLINED_FUNCTION_2_0();
                    *(_OWORD *)(v72 + 16) = xmmword_242C4B7D0;
                    *(_QWORD *)(v72 + 32) = v67;
                    *(_QWORD *)(v72 + 40) = &off_251387678;
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    goto LABEL_36;
                  }
                }
                OUTLINED_FUNCTION_23_13();
              }
            }
            swift_unknownObjectRelease();
          }
        }
        swift_unknownObjectRelease();
      }
    }
    OUTLINED_FUNCTION_3_19();
  }
  sub_242A6A5B0();
  OUTLINED_FUNCTION_24_1();
  *v42 = xmmword_242C59E10;
  OUTLINED_FUNCTION_5_21((uint64_t)v42, 2);
LABEL_22:
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B94F9C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, uint64_t a7, uint64_t a8, size_t a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;

  v20 = a6;
  v21 = a3;
  v22 = a4;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_242C47930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, a7, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v17);
  swift_retain();
  sub_242BF65F8((uint64_t)v16, v20, a8, a9, a1, a2, v21, v22, a5);
  return sub_242A6AB60((uint64_t)v16);
}

uint64_t sub_242B950BC(uint64_t a1, uint64_t a2, size_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7, const void *a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, _QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _OWORD *v24;
  uint64_t result;
  const void *v26;
  void *v27;
  void *v28;
  size_t v29;
  size_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  size_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[18];
  _QWORD v42[18];
  uint64_t v43;
  uint64_t v44;
  const void *v45;
  _BYTE v46[184];
  _BYTE v47[184];
  _BYTE v48[376];
  void *v49;

  v34 = a3;
  v39 = a6;
  v40 = a5;
  v37 = a1;
  v38 = a4;
  v36 = a2;
  v10 = sub_242C477C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_242C47798();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v46, a7, 0xB0uLL);
  sub_242AA3C00((uint64_t)v46);
  memcpy(v47, a8, 0xB0uLL);
  sub_242AA3C00((uint64_t)v47);
  v35 = sub_242C477EC();
  sub_242AA3D00((uint64_t)v46, (uint64_t)v48, &qword_257222B50);
  sub_242AA3D00((uint64_t)v47, (uint64_t)&v48[184], &qword_257222B50);
  memcpy(v17, v48, 0x169uLL);
  v18 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v19 = v36;
  v18(v17, *MEMORY[0x24BEDF6F8], v14);
  v20 = v10;
  v21 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEDF7E0], v20);
  sub_242C48A28();
  sub_242C489B0();
  v22 = v38;
  if (!sub_242C477E0())
  {
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v24 = xmmword_242C59E10;
    return OUTLINED_FUNCTION_5_21((uint64_t)v24, 4);
  }
  if (*(_BYTE *)(v19 + 168))
  {
    v23 = *(_BYTE *)(v19 + 168) == 1;
  }
  else
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)v42);
    swift_release();
    memcpy(v41, v42, 0x88uLL);
    if (v41[10])
      v23 = *(_BYTE *)(v41[10] + 24);
    else
      v23 = 0;
    sub_242A5DC30((uint64_t)v41);
  }
  OUTLINED_FUNCTION_12_40(v22 + 136, (uint64_t)&v44);
  OUTLINED_FUNCTION_12_40((uint64_t)&v44, (uint64_t)&v45);
  v26 = v45;
  if (!v45
    || (OUTLINED_FUNCTION_12_40(v21 + 136, (uint64_t)&v43),
        OUTLINED_FUNCTION_12_40((uint64_t)&v43, (uint64_t)&v49),
        (v27 = v49) == 0))
  {
    v42[0] = 0;
    v42[1] = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *(_QWORD *)v31 = 0xD000000000000028;
    goto LABEL_16;
  }
  v28 = (void *)sub_242C478E8();
  result = OUTLINED_FUNCTION_20_41();
  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_19;
  }
  v29 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRelease();
  result = OUTLINED_FUNCTION_20_41();
  if (!*(_QWORD *)(result + 16))
  {
LABEL_19:
    __break(1u);
    return result;
  }
  v30 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRelease();
  if (BNNSNormalizationFilterApplyBatch(v28, v34, v26, v29, v27, v30, v23))
  {
    v42[0] = 0;
    v42[1] = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *(_QWORD *)v31 = 0xD000000000000029;
LABEL_16:
    *(_QWORD *)(v31 + 8) = (unint64_t)(v32 - 32) | 0x8000000000000000;
    *(_BYTE *)(v31 + 16) = 1;
    swift_willThrow();
    return swift_release();
  }
  return swift_release();
}

void sub_242B954BC()
{
  sub_242B948D0();
}

void sub_242B954D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  void (*v34)(uint64_t *__return_ptr);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  void (*v40)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *__return_ptr, uint64_t *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(uint64_t *__return_ptr);
  uint64_t v77;
  void (*v78)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[3];
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  _BYTE v105[8];
  uint64_t v106;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v94 = (uint64_t)&v74 - v7;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v8);
  v95 = (char *)&v74 - v9;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v10);
  v98 = (uint64_t)&v74 - v11;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_64_0();
  v96 = v13;
  v14 = OUTLINED_FUNCTION_28_39();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_13_1();
  v93 = v16;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_64_0();
  v97 = v18;
  v19 = sub_242B89308();
  OUTLINED_FUNCTION_45_4(v19);
  if (!v21)
    goto LABEL_15;
  v91 = v20;
  v92 = v15;
  v22 = sub_242B89308();
  OUTLINED_FUNCTION_45_4(v22);
  if (!v23)
  {
LABEL_14:
    swift_unknownObjectRelease();
LABEL_15:
    sub_242A6A5B0();
    OUTLINED_FUNCTION_24_1();
    *v55 = xmmword_242C59E20;
    OUTLINED_FUNCTION_5_21((uint64_t)v55, 2);
    goto LABEL_16;
  }
  v25 = v23;
  if (!*(_QWORD *)(v0 + 48) || (v89 = v24, v26 = sub_242B89308(), OUTLINED_FUNCTION_45_4(v26), !v27))
  {
LABEL_13:
    OUTLINED_FUNCTION_32_10();
    goto LABEL_14;
  }
  v88 = v28;
  v90 = v27;
  if (!*(_QWORD *)(v0 + 56) || (v29 = sub_242B89308(), OUTLINED_FUNCTION_45_4(v29), !v30))
  {
    OUTLINED_FUNCTION_3_19();
    goto LABEL_13;
  }
  v75 = v5;
  v87 = v30;
  v83 = v31;
  v80 = type metadata accessor for NativeTensorStorage();
  ObjectType = swift_getObjectType();
  v33 = v89;
  v34 = *(void (**)(uint64_t *__return_ptr))(v89 + 16);
  v35 = ObjectType;
  v86 = (uint64_t *)ObjectType;
  v34(v99);
  v85 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v33 + 8);
  v36 = v35;
  v37 = v33;
  v85(&v106, v36, v33);
  sub_242B1D8D0(v99, (uint64_t)&v106, 0);
  v81 = v38;
  v84 = v1;
  v39 = v86;
  v76 = v34;
  ((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))v34)(v99, v86, v33);
  v85(&v106, (uint64_t)v39, v33);
  OUTLINED_FUNCTION_3_65();
  v85 = v40;
  v84 = v1;
  v41 = OUTLINED_FUNCTION_27_30();
  v42 = v88;
  v78 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v88 + 16);
  v78(v99, v41, v88);
  v43 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 8);
  v77 = v41;
  v43(&v106, v41, v42);
  OUTLINED_FUNCTION_3_65();
  v84 = v44;
  v82 = v1;
  v45 = OUTLINED_FUNCTION_27_30();
  OUTLINED_FUNCTION_26_38(v45);
  OUTLINED_FUNCTION_26_38(v45);
  v46 = v82;
  v47 = (uint64_t)v86;
  sub_242B1D8D0(v99, (uint64_t)&v106, 0);
  v49 = v48;
  v80 = v46;
  sub_242BC8254(v47, v37, v50);
  if (v51 < 2)
  {
    v52 = (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))v76;
    v79 = 1;
    v53 = v93;
    v54 = (uint64_t)v75;
  }
  else
  {
    v52 = (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))v76;
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v76)(&v106, v47, v37);
    v53 = v93;
    v54 = (uint64_t)v75;
    if (!*(_QWORD *)(v106 + 16))
    {
      memset(v99, 0, sizeof(v99));
      v100 = -1;
      v102 = 0;
      v103 = 0;
      v101 = 0;
      v104 = -1;
      v105[4] = 4;
      OUTLINED_FUNCTION_4_18();
    }
    v79 = *(_QWORD *)(v106 + 32);
    swift_bridgeObjectRelease();
  }
  v52(v99, v86, v89);
  v56 = v99[0];
  v57 = *(_QWORD *)(v99[0] + 16);
  v82 = v49;
  if (v57 <= 3)
  {
    OUTLINED_FUNCTION_21_34(v57);
    v106 = v56;
    sub_242B65064();
    v56 = v106;
  }
  v58 = v97;
  v99[0] = v56;
  OUTLINED_FUNCTION_1_7((uint64_t)v99, v97);
  v78(v99, v77, v88);
  OUTLINED_FUNCTION_1_7((uint64_t)v99, v53);
  v59 = v96;
  OUTLINED_FUNCTION_7_49(v96);
  OUTLINED_FUNCTION_0_10(v59);
  v60 = v98;
  OUTLINED_FUNCTION_7_49(v98);
  OUTLINED_FUNCTION_0_10(v60);
  v61 = (uint64_t)v95;
  OUTLINED_FUNCTION_18_39();
  OUTLINED_FUNCTION_0_10(v61);
  v62 = v94;
  OUTLINED_FUNCTION_18_39();
  OUTLINED_FUNCTION_0_10(v62);
  OUTLINED_FUNCTION_7_49(v54);
  v63 = OUTLINED_FUNCTION_0_10(v54);
  v86 = &v74;
  MEMORY[0x24BDAC7A8](v63);
  *(&v74 - 8) = (uint64_t)v85;
  *(&v74 - 7) = v58;
  *(&v74 - 6) = v84;
  *(&v74 - 5) = v53;
  *(&v74 - 4) = v82;
  *(&v74 - 3) = v2;
  *(&v74 - 2) = v79;
  v64 = swift_getObjectType();
  MEMORY[0x24BDAC7A8](v64);
  v65 = v89;
  *(&v74 - 14) = v25;
  *(&v74 - 13) = v65;
  v66 = v90;
  *(&v74 - 12) = v98;
  *(&v74 - 11) = v66;
  v67 = (uint64_t)v95;
  *(&v74 - 10) = v88;
  *(&v74 - 9) = v67;
  v68 = v83;
  *(&v74 - 8) = v87;
  *(&v74 - 7) = v68;
  *(&v74 - 6) = v62;
  v69 = v96;
  *(&v74 - 5) = v81;
  *(&v74 - 4) = (uint64_t)&off_251387678;
  *(&v74 - 3) = v54;
  *(&v74 - 2) = (uint64_t)sub_242B968B8;
  *(&v74 - 1) = (uint64_t)(&v74 - 10);
  swift_retain();
  v70 = v80;
  sub_242BF6310((uint64_t)sub_242B96820, (uint64_t)(&v74 - 16), MEMORY[0x24BEE4AE0] + 8, (uint64_t)v105);
  if (v70)
  {
    OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_43_9();
    OUTLINED_FUNCTION_43_9();
    swift_release_n();
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_11_44();
    sub_242A6AB60(v94);
    sub_242A6AB60(v67);
    sub_242A6AB60(v98);
    sub_242A6AB60(v69);
    OUTLINED_FUNCTION_31_37();
    OUTLINED_FUNCTION_31_37();
    OUTLINED_FUNCTION_31_37();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_11_44();
    sub_242A6AB60(v94);
    sub_242A6AB60(v67);
    sub_242A6AB60(v98);
    sub_242A6AB60(v69);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v71 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v71 + 16) = xmmword_242C4B810;
    *(_QWORD *)(v71 + 32) = v85;
    v72 = v84;
    *(_QWORD *)(v71 + 40) = &off_251387678;
    *(_QWORD *)(v71 + 48) = v72;
    v73 = v82;
    *(_QWORD *)(v71 + 56) = &off_251387678;
    *(_QWORD *)(v71 + 64) = v73;
    *(_QWORD *)(v71 + 72) = &off_251387678;
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_43_9();
    OUTLINED_FUNCTION_43_9();
    swift_release();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_3_19();
  }
  OUTLINED_FUNCTION_15_1(v93);
  OUTLINED_FUNCTION_15_1(v97);
LABEL_16:
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242B95CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[16];
  uint64_t v37;
  _UNKNOWN **v38;
  char *v39;
  uint64_t v40;
  _UNKNOWN **v41;
  char *v42;
  void (*v43)(const void *, const void *, const void *);
  char *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v33 = a8;
  v35 = a6;
  v32 = a5;
  v31 = a4;
  v29 = a3;
  v28 = a2;
  v27 = a1;
  v34 = a9;
  v30 = a11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v26 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v26 - v21;
  v23 = sub_242C47930();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v24(v22, a7, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v23);
  v24(v19, a10, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v23);
  v24(v16, a10, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v23);
  v46 = a12;
  v47 = a13;
  v48 = v27;
  v49 = v28;
  v50 = v29;
  v51 = v31;
  v52 = v32;
  v37 = v33;
  v38 = &off_251387678;
  v39 = v19;
  v40 = v30;
  v41 = &off_251387678;
  v42 = v16;
  v43 = sub_242B96920;
  v44 = &v45;
  sub_242A6A608((uint64_t)v22, (uint64_t (*)(_BYTE *))sub_242B9694C, (uint64_t)v36, v34);
  sub_242A6AB60((uint64_t)v16);
  sub_242A6AB60((uint64_t)v19);
  return sub_242A6AB60((uint64_t)v22);
}

uint64_t sub_242B95EF0(const void *a1, const void *a2, const void *a3, uint64_t a4, size_t a5, const void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, _QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  uint64_t v29;
  size_t v30;
  size_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  size_t v38;
  uint64_t v39;
  size_t v40;
  uint64_t v41;
  size_t v42;
  uint64_t v43;
  uint64_t v44;
  const void *v45;
  const void *v46;
  const void *v47;
  const void *v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  BNNSNDArrayDescriptor v58;
  BNNSNDArrayDescriptor v59;
  BNNSNDArrayDescriptor v60;
  BNNSNDArrayDescriptor v61;
  uint64_t v62;
  const void *v63;
  _BYTE v64[184];
  _BYTE v65[368];
  uint64_t v66;

  v45 = a1;
  v54 = a7;
  v55 = a8;
  v46 = a6;
  v47 = a2;
  v48 = a3;
  v49 = a5;
  v52 = a4;
  v51 = a10;
  v53 = a9;
  v66 = *MEMORY[0x24BDAC8D0];
  v10 = sub_242C477C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_242C47798();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242AA3BBC(v64);
  v50 = sub_242C477EC();
  sub_242AA3D00((uint64_t)v64, (uint64_t)v65, &qword_257222B50);
  sub_242AA3D00((uint64_t)v64, (uint64_t)&v65[184], &qword_257222B50);
  memcpy(v17, v65, 0x169uLL);
  v18 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v19 = v14;
  v20 = v51;
  v21 = v52;
  v18(v17, *MEMORY[0x24BEDF6F8], v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEDF7E0], v10);
  sub_242C48A28();
  sub_242C489B0();
  v22 = v54;
  if (!sub_242C477E0())
  {
    sub_242A6A5B0();
    swift_allocError();
    *(_OWORD *)v35 = xmmword_242C59E20;
    *(_BYTE *)(v35 + 16) = 4;
    return swift_willThrow();
  }
  sub_242AA3D00(v22 + 136, (uint64_t)&v62, &qword_257222B58);
  sub_242AA3D00((uint64_t)&v62, (uint64_t)&v63, &qword_257222B58);
  v23 = v63;
  if (!v63 || (v24 = *(void **)(v20 + 136)) == 0)
  {
    *(_QWORD *)&v61.flags = 0;
    v61.size[0] = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v32 = 0xD00000000000002DLL;
    goto LABEL_9;
  }
  v25 = (void *)sub_242C478E8();
  v26 = *(_QWORD *)(v21 + 40);
  *(_QWORD *)&v61.flags = *(_QWORD *)(v26 + 152);
  v27 = sub_242C00DB8();
  if (!*(_QWORD *)(v27 + 16))
  {
    __break(1u);
    goto LABEL_19;
  }
  v28 = *(_QWORD *)(v27 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v61.flags = *(_QWORD *)(v26 + 152);
  v29 = sub_242C00DB8();
  if (!*(_QWORD *)(v29 + 16))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v30 = *(_QWORD *)(v29 + 32);
  swift_bridgeObjectRelease();
  v31 = v49;
  if (BNNSNormalizationFilterApplyBatch(v25, v49, v23, v28, v24, v30, 1))
  {
    *(_QWORD *)&v61.flags = 0;
    v61.size[0] = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v32 = 0xD00000000000002ELL;
LABEL_9:
    *(_QWORD *)(v32 + 8) = (unint64_t)(v33 - 32) | 0x8000000000000000;
    *(_BYTE *)(v32 + 16) = 1;
LABEL_10:
    swift_willThrow();
    return swift_release();
  }
  memcpy(&v61, v45, sizeof(v61));
  memcpy(&v60, v46, sizeof(v60));
  memcpy(&v59, v47, sizeof(v59));
  memcpy(&v58, v48, sizeof(v58));
  v36 = (void *)sub_242C478E8();
  v56 = *(_QWORD *)(v26 + 152);
  v37 = sub_242C00DB8();
  if (!*(_QWORD *)(v37 + 16))
    goto LABEL_20;
  v38 = *(_QWORD *)(v37 + 32);
  swift_bridgeObjectRelease();
  v56 = *(_QWORD *)(v26 + 152);
  v39 = sub_242C00DB8();
  if (!*(_QWORD *)(v39 + 16))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  v40 = *(_QWORD *)(v39 + 32);
  swift_bridgeObjectRelease();
  v56 = *(_QWORD *)(v26 + 152);
  v41 = sub_242C00DB8();
  if (!*(_QWORD *)(v41 + 16))
    goto LABEL_22;
  v42 = *(_QWORD *)(v41 + 32);
  swift_bridgeObjectRelease();
  if (BNNSNormalizationFilterApplyBackwardBatch(v36, v31, &v61, v38, v24, v40, &v60, v42, &v58, &v59))
  {
    v56 = 0;
    v57 = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v43 = 0xD00000000000002ELL;
    *(_QWORD *)(v43 + 8) = 0x8000000242C6FCA0;
    *(_BYTE *)(v43 + 16) = 1;
    goto LABEL_10;
  }
  return swift_release();
}

void sub_242B96418()
{
  sub_242B954D0();
}

uint64_t sub_242B9642C(uint64_t a1)
{
  uint64_t result;

  result = sub_242B96494(&qword_2572281D0, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormGradientOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B96460(uint64_t a1)
{
  uint64_t result;

  result = sub_242B96494(&qword_2572281D8, (uint64_t (*)(uint64_t))type metadata accessor for BatchNormOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242B96494(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C5E3B0, v4);
    atomic_store(result, a1);
  }
  return result;
}

__n128 sub_242B964D4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, __int128 a7, __int128 a8, __int128 a9, uint64_t a10)
{
  __n128 result;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  swift_getObjectType();
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v22 = a7;
  v23 = a8;
  v24 = a9;
  v25 = a10;
  v26 = a1;
  sub_242BF6310((uint64_t)sub_242B96834, (uint64_t)v17, MEMORY[0x24BEE4AE0] + 8, a6);
  return result;
}

__n128 sub_242B965B4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, __int128 a7, __int128 a8, uint64_t a9)
{
  __n128 result;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  swift_getObjectType();
  v17 = a2;
  v18 = a3;
  v19 = a4;
  v20 = a5;
  v21 = a7;
  v22 = a8;
  v23 = a9;
  v24 = a1;
  sub_242BF6310((uint64_t)sub_242B96860, (uint64_t)v16, MEMORY[0x24BEE4AE0] + 8, a6);
  return result;
}

__n128 sub_242B96684@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, __int128 a7, uint64_t a8)
{
  __n128 result;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  swift_getObjectType();
  v16 = a2;
  v17 = a3;
  v18 = a4;
  v19 = a5;
  v20 = a7;
  v21 = a8;
  v22 = a1;
  sub_242BF6310((uint64_t)sub_242B9689C, (uint64_t)v15, MEMORY[0x24BEE4AE0] + 8, a6);
  return result;
}

void sub_242B96748(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_getObjectType();
  v14 = a2;
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a7;
  v19 = a1;
  sub_242BF6310((uint64_t)sub_242AA3CD0, (uint64_t)v13, MEMORY[0x24BEE4AE0] + 8, a6);
}

void sub_242B967FC(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, const void *a5)
{
  uint64_t v5;

  sub_242B94F9C(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40));
  OUTLINED_FUNCTION_1();
}

double sub_242B96820()
{
  return sub_242B968EC();
}

double sub_242B96834()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  double result;

  v1 = OUTLINED_FUNCTION_24_8();
  *(_QWORD *)&result = sub_242B965B4(v2, v3, v4, v5, v6, v7, *(_OWORD *)&v1, v8, *(_QWORD *)(v0 + 104)).n128_u64[0];
  return result;
}

double sub_242B96860@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = sub_242B96684(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_OWORD *)(v2 + 72), *(_QWORD *)(v2 + 88)).n128_u64[0];
  return result;
}

void sub_242B9689C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_23_37();
  sub_242B96748(v0, v1, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242B968B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;

  return sub_242B95CC4(a1, a2, a3, a4, a5, v6[2], v6[3], v6[4], a6, v6[5], v6[6], v6[7], v6[8]);
}

double sub_242B968EC()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  double result;

  v1 = OUTLINED_FUNCTION_24_8();
  *(_QWORD *)&result = sub_242B964D4(v2, v3, v4, v5, v6, v7, *(_OWORD *)&v1, v8, *(_OWORD *)(v0 + 104), *(_QWORD *)(v0 + 120)).n128_u64[0];
  return result;
}

void sub_242B96920(const void *a1, const void *a2, const void *a3)
{
  uint64_t v3;

  sub_242B95EF0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(const void **)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64));
  OUTLINED_FUNCTION_1();
}

void sub_242B9694C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_23_37();
  sub_242A6AC10(v0, v1, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void OUTLINED_FUNCTION_3_65()
{
  uint64_t v0;

  sub_242B1D8D0((uint64_t *)(v0 - 200), v0 - 72, 0);
}

uint64_t OUTLINED_FUNCTION_7_49(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

void OUTLINED_FUNCTION_8_48(uint64_t a1)
{
  uint64_t v1;

  sub_242A9E618(a1, v1);
}

uint64_t OUTLINED_FUNCTION_11_44()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_12_40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_242AA3D00(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_14_34()
{
  uint64_t v0;

  return sub_242A6AB60(v0);
}

uint64_t OUTLINED_FUNCTION_18_39()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_20_41()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v1 + 152);
  return sub_242C00DB8();
}

void OUTLINED_FUNCTION_21_34(uint64_t a1@<X8>)
{
  sub_242BC0874(1, 4 - a1);
}

uint64_t OUTLINED_FUNCTION_24_36(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, *(_QWORD *)(v3 - 72), v2);
}

uint64_t OUTLINED_FUNCTION_26_38(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_27_30()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_28_39()
{
  return sub_242C47930();
}

uint64_t OUTLINED_FUNCTION_31_37()
{
  return swift_release();
}

void sub_242B96A44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;

  if ((a3 & 1) == 0)
  {
    v5 = sub_242AA4D00();
    sub_242B4B240(a2, (v5 & 0xC000000000000001) == 0, v5);
    if ((v5 & 0xC000000000000001) != 0)
      MEMORY[0x2494EC84C](a2, v5);
    else
      swift_retain();
    swift_bridgeObjectRelease();
    v6 = sub_242B89308();
    swift_release();
    sub_242A9E618(v6, a1);
  }
}

void sub_242B96AE8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  type metadata accessor for NativeTensorStorage();
  v2 = sub_242AA4E24();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(v2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = *(_QWORD *)(v2 + 16 * a1 + 32);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v7 = v3;
  v4 = sub_242AA4E24();
  if (*(_QWORD *)(v4 + 16) > a1)
  {
    v5 = *(_BYTE *)(v4 + 16 * a1 + 40);
    swift_bridgeObjectRelease();
    v6 = v5;
    sub_242B1D8D0(&v7, (uint64_t)&v6, 0);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_242B96BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  void (*v6)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[176];
  _QWORD v23[22];
  uint64_t v24;

  v3 = a3;
  if (a1)
  {
    ObjectType = swift_getObjectType();
    v6 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 16);
    OUTLINED_FUNCTION_27_31();
    v21 = ObjectType;
    v6(v23, ObjectType, a2);
    if (*(_QWORD *)(v23[0] + 16))
    {
      v7 = *(_QWORD *)(v23[0] + 32);
      swift_bridgeObjectRelease();
      if (!v3)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      if (v7 == 0x8000000000000000 && v3 == -1)
        goto LABEL_29;
      if (v3 < 0)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      v24 = MEMORY[0x24BEE4AF8];
      v9 = v7 / v3;
      sub_242AC385C();
      v10 = 0;
      v11 = v24;
      v12 = 1;
      v13 = v9;
      while (v13 >= v10)
      {
        v14 = v13;
        type metadata accessor for BNNSNDArrayDescriptor(0);
        v15 = a2;
        sub_242B96E38(v10, v14, (uint64_t)sub_242B96E28, 0, v21, v16, a2, (uint64_t)v22);
        OUTLINED_FUNCTION_13_38(v23, v22);
        v24 = v11;
        v17 = *(_QWORD *)(v11 + 16);
        if (v17 >= *(_QWORD *)(v11 + 24) >> 1)
        {
          sub_242AC385C();
          v11 = v24;
        }
        *(_QWORD *)(v11 + 16) = v17 + 1;
        OUTLINED_FUNCTION_13_38((void *)(v11 + 176 * v17 + 32), v23);
        if (v3 == v12)
        {
          swift_unknownObjectRelease();
          return v11;
        }
        ++v12;
        v13 = v14 + v9;
        v10 = v14;
        a2 = v15;
        if ((unsigned __int128)(v12 * (__int128)v9) >> 64 != (v12 * v9) >> 63)
          goto LABEL_25;
      }
      __break(1u);
LABEL_25:
      __break(1u);
    }
    __break(1u);
    goto LABEL_27;
  }
  if (a3 < 0)
  {
LABEL_30:
    result = sub_242C48F50();
    __break(1u);
    return result;
  }
  if (!a3)
    return MEMORY[0x24BEE4AF8];
  type metadata accessor for BNNSNDArrayDescriptor(0);
  v11 = sub_242C485CC();
  *(_QWORD *)(v11 + 16) = v3;
  v18 = 32;
  do
  {
    v19 = v11 + v18;
    OUTLINED_FUNCTION_22_31((void *)(v11 + v18));
    *(_QWORD *)(v19 + 152) = 0;
    *(_QWORD *)(v19 + 160) = 0;
    v18 += 176;
    *(_DWORD *)(v19 + 168) = 0;
    --v3;
  }
  while (v3);
  return v11;
}

void *sub_242B96E28@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  return memcpy(a2, __src, 0xB0uLL);
}

uint64_t sub_242B96E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  int8x16_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  int8x16_t *v44;
  uint64_t v45;
  int v46;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(int8x16_t **__return_ptr, uint64_t, uint64_t);
  uint64_t v57;
  int8x16_t *v58;

  v10 = v8;
  v51 = a8;
  v52 = a6;
  v49 = a3;
  v50 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222B78);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_5_6();
  v48 = v16;
  v17 = OUTLINED_FUNCTION_28_39();
  v54 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_5_6();
  v53 = v19;
  v56 = *(void (**)(int8x16_t **__return_ptr, uint64_t, uint64_t))(a7 + 8);
  v56(&v58, a5, a7);
  if (v58 > 0xCu || ((1 << (char)v58) & 0x1777) == 0)
    goto LABEL_39;
  OUTLINED_FUNCTION_0_80();
  v20 = v58[1].i64[0];
  swift_bridgeObjectRelease();
  if (v20)
    v21 = a1 == a2;
  else
    v21 = 1;
  if (v21
    || (v22 = OUTLINED_FUNCTION_0_80(),
        v57 = 0,
        MEMORY[0x24BDAC7A8](v22),
        v45 = (uint64_t)&v57,
        v23 = sub_242B6DE24((uint64_t (*)(_QWORD *))sub_242B292DC),
        v47[1] = v9,
        swift_bridgeObjectRelease(),
        (v23 & 1) != 0))
  {
    v46 = 0;
    v45 = 175;
    goto LABEL_42;
  }
  OUTLINED_FUNCTION_0_80();
  v24 = OUTLINED_FUNCTION_16_38();
  OUTLINED_FUNCTION_108();
  if (!*(_QWORD *)(v24 + 16))
  {
    __break(1u);
    goto LABEL_30;
  }
  OUTLINED_FUNCTION_33_27();
  v25 = v9 * a1;
  if ((unsigned __int128)(v9 * (__int128)a1) >> 64 != (v9 * a1) >> 63)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_5_60();
  v26 = v58 - 1;
  if (v26 > 0xA)
    v27 = 1;
  else
    v27 = qword_242C59EA0[(char)v26];
  v28 = v25 * v27;
  if ((unsigned __int128)(v25 * (__int128)v27) >> 64 != (v25 * v27) >> 63)
    goto LABEL_31;
  OUTLINED_FUNCTION_0_80();
  v24 = OUTLINED_FUNCTION_16_38();
  OUTLINED_FUNCTION_108();
  if (!*(_QWORD *)(v24 + 16))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v47[0] = v28;
  OUTLINED_FUNCTION_33_27();
  v29 = v28 * a2;
  if ((unsigned __int128)(v28 * (__int128)a2) >> 64 != (v28 * a2) >> 63)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  OUTLINED_FUNCTION_5_60();
  v30 = v58 - 1;
  if (v30 > 0xA)
    v31 = 1;
  else
    v31 = qword_242C59EA0[(char)v30];
  v32 = v29 * v31;
  if ((unsigned __int128)(v29 * (__int128)v31) >> 64 != (v29 * v31) >> 63)
    goto LABEL_34;
  OUTLINED_FUNCTION_0_80();
  if (a1 < 0)
  {
LABEL_41:
    v46 = 0;
    v45 = 182;
    goto LABEL_42;
  }
  v33 = v58;
  if (!v58[1].i64[0])
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v58[2].i64[0] < a2)
    goto LABEL_41;
  v24 = a2 - a1;
  if (!__OFSUB__(a2, a1))
  {
    v56 = (void (*)(int8x16_t **__return_ptr, uint64_t, uint64_t))v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_25;
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  sub_242B4B43C();
  v33 = v44;
LABEL_25:
  v35 = v54;
  v34 = v55;
  v36 = v53;
  if (!v33[1].i64[0])
  {
    __break(1u);
LABEL_39:
    v46 = 0;
    v45 = 170;
LABEL_42:
    result = OUTLINED_FUNCTION_21_35();
    __break(1u);
    return result;
  }
  v33[2].i64[0] = v24;
  v37 = sub_242C47600();
  __swift_storeEnumTagSinglePayload(v48, 1, 1, v37);
  sub_242C480E0();
  v38 = sub_242C4793C();
  if (v33[1].i64[0] == 2)
  {
    OUTLINED_FUNCTION_12_41();
    *(int8x16_t *)v36 = vextq_s8(v33[2], v33[2], 8uLL);
    *(int64x2_t *)(v36 + 16) = vdupq_n_s64(1uLL);
    *(_OWORD *)(v36 + 32) = 0u;
    *(_OWORD *)(v36 + 48) = 0u;
    v38 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v36, *MEMORY[0x24BEDFA38], v34);
  }
  v39 = MEMORY[0x24BDAC7A8](v38);
  v40 = v52;
  v47[-10] = a5;
  v47[-9] = v40;
  v41 = v47[0];
  v47[-8] = a7;
  v47[-7] = v41;
  v47[-6] = v56;
  v47[-5] = v10;
  v42 = v49;
  v47[-4] = v36;
  v47[-3] = v42;
  v45 = v50;
  (*(void (**)(void (*)(uint64_t@<X8>), __n128))(a7 + 56))(sub_242B9A124, v39);
  OUTLINED_FUNCTION_12_41();
  return OUTLINED_FUNCTION_108();
}

_QWORD *sub_242B972A8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X4>, uint64_t a5@<X8>)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[176];
  _BYTE v16[176];
  _BYTE v17[176];

  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result[2] <= a4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  result = OUTLINED_FUNCTION_13_38(v15, &result[22 * a4 + 4]);
  if (*(_QWORD *)(a2 + 16) <= a4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  result = OUTLINED_FUNCTION_13_38(v16, (const void *)(a2 + 176 * a4 + 32));
  if (*(_QWORD *)(a3 + 16) > a4)
  {
    OUTLINED_FUNCTION_13_38(v17, (const void *)(a3 + 176 * a4 + 32));
    sub_242C48938();
    OUTLINED_FUNCTION_13_38((void *)a5, v15);
    OUTLINED_FUNCTION_13_38((void *)(a5 + 352), v16);
    OUTLINED_FUNCTION_22_31((void *)(a5 + 176));
    *(_DWORD *)(a5 + 344) = 0;
    *(_OWORD *)(a5 + 328) = 0u;
    OUTLINED_FUNCTION_22_31((void *)(a5 + 528));
    *(_DWORD *)(a5 + 696) = 0;
    *(_OWORD *)(a5 + 680) = 0u;
    result = OUTLINED_FUNCTION_13_38((void *)(a5 + 704), v17);
    *(_DWORD *)(a5 + 880) = v9;
    *(_QWORD *)(a5 + 884) = v10;
    *(_QWORD *)(a5 + 892) = v11;
    *(_DWORD *)(a5 + 900) = v12;
    *(_OWORD *)(a5 + 904) = v13;
    *(_QWORD *)(a5 + 920) = v14;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_242B97424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64x2_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64x2_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t ObjectType;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t result;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int64x2_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  _QWORD v168[22];
  _BYTE v169[16];
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  _BYTE v176[5040];
  _QWORD v177[26];

  MEMORY[0x24BDAC7A8](a1);
  v140 = v2;
  v4 = v3;
  v177[23] = *MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_13_1();
  v145 = v6;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_8_11();
  v148 = v8;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_8_11();
  v159 = v10;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_8_11();
  v153 = v12;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_8_11();
  v161 = v14;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_8_11();
  v162 = v16;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v17);
  v160 = (uint64_t)&v136 - v18;
  v149 = OUTLINED_FUNCTION_28_39();
  v157 = *(_QWORD *)(v149 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_13_1();
  v154 = v20;
  OUTLINED_FUNCTION_33_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v136 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v136 - v25);
  sub_242B96A44(v4, 0, 0);
  v163 = v27;
  v138 = v28;
  sub_242B96A44(v4, 1, 0);
  v30 = v29;
  v151 = v31;
  v32 = sub_242AA59A4();
  OUTLINED_FUNCTION_1_69(v32, v33);
  v35 = v34;
  v152 = v36;
  v37 = sub_242AA59BC();
  OUTLINED_FUNCTION_1_69(v37, v38);
  v40 = v39;
  v156 = v39;
  v42 = (uint64_t)v41;
  v146 = v41;
  v43 = sub_242AA59E8();
  OUTLINED_FUNCTION_1_69(v43, v44);
  v155 = v45;
  v139 = v46;
  v47 = sub_242AA5A60();
  OUTLINED_FUNCTION_1_69(v47, v48);
  v158 = v49;
  v147 = v50;
  sub_242B96AE8(0);
  v164 = v51;
  sub_242B96AE8(1uLL);
  v166 = v52;
  sub_242B96AE8(2uLL);
  v165 = v53;
  v54 = swift_unknownObjectRetain();
  v152 = OUTLINED_FUNCTION_17_37(v54, v152);
  v142 = v35;
  OUTLINED_FUNCTION_21_12();
  v143 = v30;
  v151 = OUTLINED_FUNCTION_17_37(v30, v151);
  v150 = OUTLINED_FUNCTION_17_37(v40, v42);
  sub_242AA5ABC();
  v56 = v55;
  sub_242AA5B04();
  v58 = v57;
  sub_242AA5A7C();
  *v26 = v56;
  v26[1] = v58;
  v26[2] = v59;
  v26[3] = 0;
  v26[4] = 0;
  v26[5] = 0;
  v60 = v149;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v157 + 104))(v26, *MEMORY[0x24BEDFA30], v149);
  sub_242AA5C30();
  v62 = v61;
  sub_242AA5B04();
  v64 = v63;
  sub_242AA5A7C();
  *(_QWORD *)v23 = v62;
  *((_QWORD *)v23 + 1) = 1;
  *((_QWORD *)v23 + 2) = v64;
  *((_QWORD *)v23 + 3) = v65;
  *((_OWORD *)v23 + 2) = 0u;
  *((_OWORD *)v23 + 3) = 0u;
  OUTLINED_FUNCTION_29_30((uint64_t)v23);
  sub_242AA5C30();
  v67 = v66;
  sub_242AA5B04();
  v68 = v154;
  v154->i64[0] = v67;
  v68->i64[1] = v69;
  v68[1] = vdupq_n_s64(1uLL);
  v68[2] = 0u;
  v68[3] = 0u;
  v70 = (uint64_t)v68;
  OUTLINED_FUNCTION_29_30((uint64_t)v68);
  v71 = v70;
  v72 = (uint64_t)v26;
  v73 = v160;
  v144 = v72;
  OUTLINED_FUNCTION_6_64(v160, v72);
  OUTLINED_FUNCTION_2_72(v73);
  __swift_storeEnumTagSinglePayload(v162, 1, 1, v60);
  v74 = v161;
  OUTLINED_FUNCTION_6_64(v161, v70);
  OUTLINED_FUNCTION_2_72(v74);
  v75 = v153;
  OUTLINED_FUNCTION_6_64(v153, v70);
  OUTLINED_FUNCTION_2_72(v75);
  v76 = v159;
  v141 = v23;
  v77 = (uint64_t)v23;
  v78 = v148;
  OUTLINED_FUNCTION_6_64(v159, v77);
  OUTLINED_FUNCTION_2_72(v76);
  OUTLINED_FUNCTION_6_64(v78, v70);
  OUTLINED_FUNCTION_2_72(v78);
  v79 = v145;
  v80 = v71;
  v81 = v76;
  OUTLINED_FUNCTION_6_64(v145, v80);
  v82 = v163;
  v83 = v60;
  v84 = v155;
  __swift_storeEnumTagSinglePayload(v79, 0, 1, v83);
  v85 = v75;
  v86 = v156;
  v170 = v1;
  v171 = v152;
  v172 = v151;
  v173 = v150;
  v168[2] = v156;
  v168[3] = v146;
  v168[4] = v162;
  v168[5] = v84;
  v87 = v139;
  v168[6] = v139;
  v168[7] = v161;
  v168[8] = v158;
  v168[9] = v147;
  v168[10] = v85;
  v168[11] = v164;
  v168[12] = &off_251387678;
  v168[13] = v81;
  v168[14] = v166;
  v168[15] = &off_251387678;
  v168[16] = v78;
  v168[17] = v165;
  v168[18] = &off_251387678;
  v168[19] = v79;
  v168[20] = sub_242B99CAC;
  v168[21] = v169;
  if (!v82)
  {
    v94 = v79;
    v95 = v85;
    v96 = v161;
    sub_242AA3BBC(&v174);
    sub_242AB0920((uint64_t)&v174, (uint64_t)v177);
    v138 = &v136;
    MEMORY[0x24BDAC7A8](sub_242B99CAC);
    *(&v136 - 18) = v84;
    *(&v136 - 17) = (uint64_t)v87;
    v98 = v158;
    *(&v136 - 16) = v96;
    *(&v136 - 15) = v98;
    v99 = v147;
    *(&v136 - 14) = v147;
    *(&v136 - 13) = v95;
    *(&v136 - 12) = v164;
    *(&v136 - 11) = (uint64_t)&off_251387678;
    v100 = v166;
    *(&v136 - 10) = v159;
    *(&v136 - 9) = v100;
    *(&v136 - 8) = (uint64_t)&off_251387678;
    *(&v136 - 7) = v78;
    *(&v136 - 6) = v165;
    *(&v136 - 5) = (uint64_t)&off_251387678;
    *(&v136 - 4) = v94;
    *(&v136 - 3) = v97;
    *(&v136 - 2) = (uint64_t)v169;
    *(&v136 - 1) = v101;
    if (v86)
    {
      ObjectType = swift_getObjectType();
      MEMORY[0x24BDAC7A8](ObjectType);
      *(&v136 - 2) = (uint64_t)sub_242B99D10;
      *(&v136 - 1) = (uint64_t)(&v136 - 20);
      OUTLINED_FUNCTION_11_45();
      OUTLINED_FUNCTION_10_42();
      OUTLINED_FUNCTION_26_39();
      OUTLINED_FUNCTION_25_35();
      OUTLINED_FUNCTION_27_31();
      OUTLINED_FUNCTION_9_56((uint64_t)sub_242AA3D44, (uint64_t)(&v136 - 4), v2, (uint64_t)v176);
      if (!v2)
      {
        OUTLINED_FUNCTION_8_49();
        OUTLINED_FUNCTION_14_35();
        OUTLINED_FUNCTION_13_49();
        swift_unknownObjectRelease();
        v91 = v94;
        v92 = v153;
        v93 = v161;
        goto LABEL_14;
      }
    }
    else
    {
      v103 = v99;
      MEMORY[0x24BDAC7A8](v97);
      v105 = v158;
      *(&v136 - 16) = v158;
      *(&v136 - 15) = v103;
      v106 = v164;
      *(&v136 - 14) = v107;
      *(&v136 - 13) = v106;
      v108 = v159;
      *(&v136 - 12) = v109;
      *(&v136 - 11) = v108;
      *(&v136 - 10) = v166;
      *(&v136 - 9) = v109;
      v110 = v165;
      *(&v136 - 8) = v78;
      *(&v136 - 7) = v110;
      *(&v136 - 6) = v109;
      *(&v136 - 5) = v111;
      *(&v136 - 4) = v104;
      *(&v136 - 3) = (uint64_t)v169;
      *(&v136 - 2) = v112;
      *(&v136 - 1) = v112;
      if (v84)
      {
        v113 = swift_getObjectType();
        MEMORY[0x24BDAC7A8](v113);
        *(&v136 - 2) = (uint64_t)sub_242B99D24;
        *(&v136 - 1) = (uint64_t)(&v136 - 18);
        OUTLINED_FUNCTION_11_45();
        OUTLINED_FUNCTION_10_42();
        OUTLINED_FUNCTION_26_39();
        OUTLINED_FUNCTION_25_35();
        swift_unknownObjectRetain();
        v93 = v161;
        OUTLINED_FUNCTION_9_56((uint64_t)sub_242AA3D44, (uint64_t)(&v136 - 4), v105, (uint64_t)v176);
        if (!v105)
        {
          OUTLINED_FUNCTION_8_49();
          OUTLINED_FUNCTION_14_35();
          OUTLINED_FUNCTION_13_49();
          swift_unknownObjectRelease();
          v91 = v145;
          v78 = v148;
          v92 = v153;
          goto LABEL_14;
        }
      }
      else
      {
        v146 = &v136;
        MEMORY[0x24BDAC7A8](v104);
        v115 = v165;
        *(&v136 - 14) = v164;
        *(&v136 - 13) = v116;
        v117 = v166;
        *(&v136 - 12) = v159;
        *(&v136 - 11) = v117;
        *(&v136 - 10) = v116;
        *(&v136 - 9) = v78;
        *(&v136 - 8) = v115;
        *(&v136 - 7) = v116;
        *(&v136 - 6) = v118;
        *(&v136 - 5) = v114;
        *(&v136 - 4) = v119;
        *(&v136 - 3) = (uint64_t)v177;
        *(&v136 - 2) = (uint64_t)v177;
        *(&v136 - 1) = (uint64_t)v177;
        if (v105)
        {
          v137 = swift_getObjectType();
          v139 = &v136;
          MEMORY[0x24BDAC7A8](v137);
          *(&v136 - 2) = (uint64_t)sub_242B99D38;
          *(&v136 - 1) = (uint64_t)(&v136 - 16);
          OUTLINED_FUNCTION_11_45();
          OUTLINED_FUNCTION_10_42();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          OUTLINED_FUNCTION_27_31();
          OUTLINED_FUNCTION_9_56((uint64_t)sub_242AA3D44, (uint64_t)(&v136 - 4), v105, (uint64_t)v176);
        }
        else
        {
          v139 = &v136;
          MEMORY[0x24BDAC7A8](v114);
          *(&v136 - 12) = v117;
          *(&v136 - 11) = v120;
          *(&v136 - 10) = v78;
          *(&v136 - 9) = v115;
          *(&v136 - 8) = v120;
          *(&v136 - 7) = v121;
          *(&v136 - 6) = v122;
          *(&v136 - 5) = (uint64_t)v169;
          *(&v136 - 4) = v123;
          *(&v136 - 3) = v123;
          *(&v136 - 2) = v123;
          *(&v136 - 1) = v123;
          v124 = swift_getObjectType();
          MEMORY[0x24BDAC7A8](v124);
          *(&v136 - 2) = (uint64_t)sub_242B99F88;
          *(&v136 - 1) = (uint64_t)(&v136 - 14);
          OUTLINED_FUNCTION_11_45();
          v126 = v125;
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          OUTLINED_FUNCTION_9_56((uint64_t)sub_242AA3BE8, (uint64_t)(&v136 - 4), v126, (uint64_t)v176);
          if (!v126)
          {
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease_n();
            v93 = v161;
            v92 = v153;
            v91 = v145;
            goto LABEL_14;
          }
        }
      }
    }
LABEL_18:
    result = swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  v88 = swift_getObjectType();
  MEMORY[0x24BDAC7A8](v88);
  *(&v136 - 2) = (uint64_t)sub_242B99CD8;
  *(&v136 - 1) = (uint64_t)v168;
  OUTLINED_FUNCTION_11_45();
  v90 = v89;
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_26_39();
  OUTLINED_FUNCTION_25_35();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_9_56((uint64_t)sub_242AA3D44, (uint64_t)(&v136 - 4), v90, (uint64_t)v176);
  if (v90)
    goto LABEL_18;
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_14_35();
  OUTLINED_FUNCTION_13_49();
  OUTLINED_FUNCTION_21_12();
  v91 = v79;
  v78 = v148;
  v92 = v153;
  v93 = v161;
LABEL_14:
  sub_242A6AB60(v91);
  sub_242A6AB60(v78);
  sub_242A6AB60(v159);
  sub_242A6AB60(v92);
  sub_242A6AB60(v93);
  sub_242A6AB60(v162);
  sub_242A6AB60(v160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v127 = MEMORY[0x2494ED0BC](v176, 0, 0, 0);
  if (v127)
  {
    v128 = v127;
    v174 = 0;
    v175 = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v174 = 0xD000000000000021;
    v175 = 0x8000000242C6FCD0;
    v167 = v128;
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    v129 = v174;
    v130 = v175;
    sub_242A6A5B0();
    swift_allocError();
    *(_QWORD *)v131 = v129;
    *(_QWORD *)(v131 + 8) = v130;
    *(_BYTE *)(v131 + 16) = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_14_35();
    OUTLINED_FUNCTION_13_49();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v132 = *(_QWORD *)(v157 + 8);
    OUTLINED_FUNCTION_24_37((uint64_t)v154);
    OUTLINED_FUNCTION_24_37((uint64_t)v141);
    OUTLINED_FUNCTION_24_37(v144);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F190);
    v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = xmmword_242C4B810;
    *(_QWORD *)(v132 + 32) = v164;
    v133 = v166;
    *(_QWORD *)(v132 + 40) = &off_251387678;
    *(_QWORD *)(v132 + 48) = v133;
    v134 = v165;
    *(_QWORD *)(v132 + 56) = &off_251387678;
    *(_QWORD *)(v132 + 64) = v134;
    *(_QWORD *)(v132 + 72) = &off_251387678;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_23_38((uint64_t)v154);
    OUTLINED_FUNCTION_23_38((uint64_t)v141);
    OUTLINED_FUNCTION_23_38(v144);
  }
  return v132;
}

uint64_t sub_242B98044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE __dst[528];
  _BYTE v88[928];
  _BYTE v89[928];
  _BYTE v90[928];
  _QWORD __src[116];
  _BYTE v92[176];
  _BYTE v93[176];
  _BYTE v94[176];
  _BYTE v95[176];
  int v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  __int128 v100;
  uint64_t v101;
  _BYTE v102[184];
  _BYTE v103[184];
  _BYTE v104[184];
  _BYTE v105[184];
  _BYTE v106[184];
  _BYTE v107[184];
  _BYTE v108[184];
  _BYTE v109[184];
  _BYTE v110[184];
  _BYTE v111[192];

  MEMORY[0x24BDAC7A8](a1);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_242AB0920(v19, (uint64_t)v103);
  sub_242AB0920((uint64_t)v103, (uint64_t)v110);
  sub_242AB0920(v22, (uint64_t)v102);
  sub_242AB0920((uint64_t)v102, (uint64_t)v111);
  sub_242AB0920(v24, (uint64_t)v109);
  if (sub_242B03F18((uint64_t)v109) == 1
    || (memcpy(v95, v109, sizeof(v95)),
        sub_242AB0920(v18, (uint64_t)v108),
        sub_242B03F18((uint64_t)v108) == 1)
    || (memcpy(v94, v108, sizeof(v94)),
        sub_242AB0920(v16, (uint64_t)v107),
        sub_242B03F18((uint64_t)v107) == 1)
    || (memcpy(v93, v107, sizeof(v93)),
        sub_242AB0920(v14, (uint64_t)v106),
        sub_242B03F18((uint64_t)v106) == 1))
  {
    result = sub_242C48F5C();
    __break(1u);
  }
  else
  {
    memcpy(v92, v106, sizeof(v92));
    sub_242AA5ABC();
    v86 = v27;
    sub_242AA5C30();
    v85 = v28;
    sub_242AA5B04();
    v83 = v29;
    sub_242AA5A7C();
    v82 = v30;
    v84 = *(unsigned __int8 *)(v12 + 96);
    sub_242AB0920(v22, (uint64_t)v105);
    v31 = 0;
    if (sub_242B03F18((uint64_t)v105) == 1)
    {
      v80 = 0;
      v81 = 0;
      v77 = 0;
      v78 = 0;
      v75 = 0;
      v76 = 0;
      v73 = 0;
      v74 = 0;
      v71 = 0;
      v72 = 0;
      v69 = 0;
      v70 = 0;
      v66 = 0;
      v67 = 0;
      v68 = 0;
      v64 = 0;
      v65 = 0;
      v63 = 0;
      v62 = 0;
      v79 = 0;
      v32 = 0;
      v61 = 0;
    }
    else
    {
      sub_242AB0920((uint64_t)v111, (uint64_t)__src);
      v79 = __src[0];
      v80 = __src[2];
      v81 = __src[1];
      v77 = __src[4];
      v78 = __src[3];
      v75 = __src[6];
      v76 = __src[5];
      v66 = __src[10];
      v73 = __src[11];
      v74 = __src[7];
      v71 = __src[8];
      v72 = __src[12];
      v69 = __src[9];
      v70 = __src[13];
      v67 = __src[15];
      v68 = __src[14];
      v64 = __src[17];
      v65 = __src[16];
      v61 = __src[18];
      v63 = __src[19];
      v32 = *(_QWORD *)((char *)&__src[20] + 4);
      v62 = __src[20];
      v41 = HIDWORD(__src[21]);
    }
    sub_242AB0920(v20, (uint64_t)v104);
    if (sub_242B03F18((uint64_t)v104) == 1)
    {
      v59 = 0;
      v60 = 0;
      v57 = 0;
      v58 = 0;
      v55 = 0;
      v56 = 0;
      v52 = 0;
      v53 = 0;
      v50 = 0;
      v51 = 0;
      v48 = 0;
      v49 = 0;
      v46 = 0;
      v47 = 0;
      v44 = 0;
      v45 = 0;
      v43 = 0;
      v33 = 0;
      v34 = 0;
      v54 = 0;
      v42 = 0;
    }
    else
    {
      sub_242AB0920((uint64_t)v110, (uint64_t)__src);
      v54 = __src[0];
      v59 = __src[2];
      v60 = __src[1];
      v57 = __src[4];
      v58 = __src[3];
      v55 = __src[6];
      v56 = __src[5];
      v52 = __src[8];
      v53 = __src[7];
      v50 = __src[10];
      v51 = __src[9];
      v48 = __src[12];
      v49 = __src[11];
      v46 = __src[14];
      v47 = __src[13];
      v44 = __src[16];
      v45 = __src[15];
      v43 = __src[17];
      v42 = __src[18];
      v33 = __src[19];
      v31 = *(_QWORD *)((char *)&__src[20] + 4);
      v34 = __src[20];
      v40 = HIDWORD(__src[21]);
    }
    memcpy(__dst, v94, 0xB0uLL);
    memcpy(&__dst[176], v93, 0xB0uLL);
    memcpy(&__dst[352], v92, 0xB0uLL);
    sub_242C489F8();
    sub_242B972A8(a9, a10, a11, 0, (uint64_t)__src);
    sub_242C489F8();
    sub_242B972A8(a9, a10, a11, 1uLL, (uint64_t)v90);
    sub_242C489EC();
    sub_242B972A8(a9, a10, a11, 2uLL, (uint64_t)v89);
    sub_242C489F8();
    sub_242B972A8(a9, a10, a11, 3uLL, (uint64_t)v88);
    sub_242C489EC();
    sub_242C48938();
    v35 = v96;
    v36 = v99;
    v37 = v101;
    memcpy((void *)(v26 + 752), __dst, 0x210uLL);
    *(_QWORD *)v26 = v86;
    *(_QWORD *)(v26 + 8) = v85;
    *(_QWORD *)(v26 + 16) = v83;
    *(_QWORD *)(v26 + 24) = 1;
    *(_QWORD *)(v26 + 32) = v82;
    *(_DWORD *)(v26 + 40) = 0;
    *(_DWORD *)(v26 + 44) = v84;
    bzero((void *)(v26 + 48), 0x94uLL);
    *(_QWORD *)(v26 + 200) = 0;
    *(_QWORD *)(v26 + 208) = 0;
    *(_DWORD *)(v26 + 216) = 0;
    memcpy((void *)(v26 + 224), v95, 0xB0uLL);
    *(_QWORD *)(v26 + 408) = v81;
    *(_QWORD *)(v26 + 416) = v80;
    *(_QWORD *)(v26 + 424) = v78;
    *(_QWORD *)(v26 + 432) = v77;
    *(_QWORD *)(v26 + 440) = v76;
    *(_QWORD *)(v26 + 448) = v75;
    *(_QWORD *)(v26 + 456) = v74;
    *(_QWORD *)(v26 + 464) = v71;
    *(_QWORD *)(v26 + 472) = v69;
    *(_QWORD *)(v26 + 480) = v66;
    *(_QWORD *)(v26 + 400) = v79;
    *(_QWORD *)(v26 + 488) = v73;
    *(_QWORD *)(v26 + 496) = v72;
    *(_QWORD *)(v26 + 504) = v70;
    *(_QWORD *)(v26 + 512) = v68;
    *(_QWORD *)(v26 + 520) = v67;
    *(_QWORD *)(v26 + 528) = v65;
    *(_QWORD *)(v26 + 536) = v64;
    *(_QWORD *)(v26 + 544) = v61;
    *(_QWORD *)(v26 + 552) = v63;
    *(_DWORD *)(v26 + 560) = v62;
    *(_QWORD *)(v26 + 564) = v32;
    *(_DWORD *)(v26 + 572) = v41;
    *(_QWORD *)(v26 + 576) = v54;
    *(_QWORD *)(v26 + 584) = v60;
    *(_QWORD *)(v26 + 592) = v59;
    *(_QWORD *)(v26 + 600) = v58;
    *(_QWORD *)(v26 + 608) = v57;
    *(_QWORD *)(v26 + 616) = v56;
    *(_QWORD *)(v26 + 624) = v55;
    *(_QWORD *)(v26 + 632) = v53;
    *(_QWORD *)(v26 + 640) = v52;
    *(_QWORD *)(v26 + 648) = v51;
    *(_QWORD *)(v26 + 656) = v50;
    *(_QWORD *)(v26 + 664) = v49;
    *(_QWORD *)(v26 + 672) = v48;
    *(_QWORD *)(v26 + 680) = v47;
    *(_QWORD *)(v26 + 688) = v46;
    *(_QWORD *)(v26 + 696) = v45;
    *(_QWORD *)(v26 + 704) = v44;
    *(_QWORD *)(v26 + 712) = v43;
    *(_QWORD *)(v26 + 720) = v42;
    *(_QWORD *)(v26 + 728) = v33;
    *(_DWORD *)(v26 + 736) = v34;
    *(_QWORD *)(v26 + 740) = v31;
    *(_DWORD *)(v26 + 748) = v40;
    memcpy((void *)(v26 + 1280), __src, 0x3A0uLL);
    memcpy((void *)(v26 + 2208), v90, 0x3A0uLL);
    memcpy((void *)(v26 + 3136), v89, 0x3A0uLL);
    result = (uint64_t)memcpy((void *)(v26 + 4064), v88, 0x3A0uLL);
    *(_DWORD *)(v26 + 4992) = v35;
    v39 = v98;
    *(_QWORD *)(v26 + 4996) = v97;
    *(_QWORD *)(v26 + 5004) = v39;
    *(_DWORD *)(v26 + 5012) = v36;
    *(_OWORD *)(v26 + 5016) = v100;
    *(_QWORD *)(v26 + 5032) = v37;
  }
  return result;
}

uint64_t sub_242B98794(uint64_t a1)
{
  return sub_242B97424(a1);
}

void sub_242B987A8()
{
  OUTLINED_FUNCTION_21_35();
  __break(1u);
}

void sub_242B987F8()
{
  sub_242B987A8();
}

void sub_242B98804(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, void (*a4)(_BYTE *)@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  void (*v32)(_BYTE *);
  uint64_t v33;
  uint64_t v34;
  char v35;
  _BYTE v36[56];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a5;
  v33 = a3;
  v34 = a6;
  v12 = sub_242C47930();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 < a1)
  {
    __break(1u);
  }
  else
  {
    v32 = a4;
    v31 = sub_242C48AD0();
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a9 + 8))(&v35, a7, a9);
    v16 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v33, v12);
    LODWORD(v33) = sub_242C47918();
    sub_242C4790C();
    v30 = *(_OWORD *)v36;
    v29 = *(_OWORD *)&v36[16];
    v28 = *(_OWORD *)&v36[32];
    v17 = v37;
    v27 = *(_QWORD *)&v36[48];
    sub_242C47924();
    v26 = *(_OWORD *)v36;
    v25 = *(_OWORD *)&v36[16];
    v24 = *(_OWORD *)&v36[32];
    v18 = *(_QWORD *)&v36[48];
    v19 = v37;
    v36[0] = v16;
    sub_242B526F4();
    v21 = v20;
    v36[0] = v16;
    sub_242B526F4();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    *(_DWORD *)v36 = 0;
    *(_DWORD *)&v36[4] = v33;
    *(_OWORD *)&v36[8] = v30;
    *(_OWORD *)&v36[24] = v29;
    *(_OWORD *)&v36[40] = v28;
    v37 = v27;
    v38 = v17;
    v39 = v26;
    v40 = v25;
    v41 = v24;
    v42 = v18;
    v43 = v19;
    v44 = v31;
    v45 = v21;
    v46 = 0;
    v47 = v23;
    v48 = 1065353216;
    v32(v36);
  }
}

uint64_t sub_242B98A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, _QWORD *, _QWORD *, _QWORD *, _QWORD *, _QWORD *, _QWORD *, __n128);
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[4];
  _QWORD v82[6];
  _QWORD v83[2];
  void (*v84)(uint64_t@<X0>, uint64_t@<X8>);
  _QWORD *v85;
  _QWORD v86[8];
  _QWORD v87[2];
  uint64_t (*v88)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  uint64_t (*v89)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD v90[10];
  _QWORD v91[2];
  uint64_t (*v92)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD *v93;
  _QWORD v94[12];
  _QWORD v95[2];
  uint64_t (*v96)@<X0>(uint64_t (*)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD *v97;
  _QWORD v98[14];
  _QWORD v99[2];
  uint64_t (*v100)();
  _QWORD *v101;
  _QWORD v102[3];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[21];
  _BYTE v113[184];
  _QWORD v114[26];

  v112[2] = a3;
  v112[3] = a4;
  v112[4] = a5;
  v112[5] = a6;
  v112[6] = a8;
  v112[7] = a9;
  v112[8] = a10;
  v112[9] = a11;
  v112[10] = a12;
  v112[11] = a13;
  v112[12] = a14;
  v112[13] = a15;
  v112[14] = a16;
  v112[15] = a17;
  v112[16] = a18;
  v112[17] = a19;
  v112[18] = a20;
  v112[19] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v100 = sub_242B99D10;
    v101 = v112;
    type metadata accessor for BNNSLayerParametersLSTM(0);
    v24 = v23;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v99, v24, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    v102[1] = a5;
    v102[2] = a4;
    v103 = a7;
    v104 = v20;
    v110 = a17;
    v111 = a16;
    v108 = a18;
    v114[25] = a13;
    v105 = a10;
    v106 = a3;
    v109 = a6;
    v107 = a8;
    sub_242AA3BBC(v113);
    sub_242AB0920((uint64_t)v113, (uint64_t)v114);
    v26 = v109;
    MEMORY[0x24BDAC7A8](a16);
    v98[2] = v109;
    v98[3] = a8;
    v98[4] = a9;
    v98[5] = a10;
    v98[6] = v28;
    v98[7] = v29;
    v98[8] = v31;
    v98[9] = v30;
    v98[10] = v32;
    v98[11] = v27;
    v98[12] = v33;
    v98[13] = v34;
    v99[0] = v35;
    v99[1] = a20;
    v100 = v36;
    v101 = v114;
    if (v106)
    {
      v37 = swift_getObjectType();
      MEMORY[0x24BDAC7A8](v37);
      v96 = sub_242B99D24;
      v97 = v98;
      type metadata accessor for BNNSLayerParametersLSTM(0);
      v39 = v38;
      swift_unknownObjectRetain();
      sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v95, v39, v103);
      return swift_unknownObjectRelease();
    }
    else
    {
      v106 = v98;
      MEMORY[0x24BDAC7A8](v27);
      v94[2] = a10;
      v94[3] = v41;
      v94[4] = v42;
      v94[5] = v43;
      v94[6] = v44;
      v94[7] = v45;
      v94[8] = v40;
      v94[9] = v46;
      v94[10] = v48;
      v94[11] = v47;
      v95[0] = a20;
      v95[1] = v49;
      v96 = (uint64_t (*)@<X0>(uint64_t (*)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>))v114;
      v97 = v114;
      if (v26)
      {
        v50 = swift_getObjectType();
        MEMORY[0x24BDAC7A8](v50);
        v92 = sub_242B99D38;
        v93 = v94;
        type metadata accessor for BNNSLayerParametersLSTM(0);
        v52 = v51;
        swift_unknownObjectRetain();
        sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v91, v52, v103);
        return swift_unknownObjectRelease();
      }
      else
      {
        MEMORY[0x24BDAC7A8](v40);
        v90[2] = v55;
        v90[3] = v54;
        v90[4] = v56;
        v90[5] = v53;
        v90[6] = v57;
        v90[7] = v58;
        v90[8] = v59;
        v90[9] = a20;
        v91[0] = v60;
        v91[1] = v114;
        v92 = (uint64_t (*)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>))v114;
        v93 = v114;
        if (a10)
        {
          v61 = swift_getObjectType();
          MEMORY[0x24BDAC7A8](v61);
          v88 = sub_242B99F88;
          v89 = (uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>))v90;
          type metadata accessor for BNNSLayerParametersLSTM(0);
          v63 = v62;
          swift_unknownObjectRetain();
          sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v87, v63, v103);
          return swift_unknownObjectRelease();
        }
        else
        {
          MEMORY[0x24BDAC7A8](v53);
          v86[2] = v64;
          v86[3] = v65;
          v86[4] = v67;
          v86[5] = v66;
          v86[6] = a20;
          v86[7] = v68;
          v87[0] = v69;
          v87[1] = v69;
          v88 = v69;
          v89 = v69;
          v102[0] = v102;
          if (v70)
          {
            v71 = swift_getObjectType();
            MEMORY[0x24BDAC7A8](v71);
            v84 = sub_242B9A0FC;
            v85 = v86;
            type metadata accessor for BNNSLayerParametersLSTM(0);
            v73 = v72;
            swift_unknownObjectRetain();
            sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v83, v73, v103);
            return swift_unknownObjectRelease();
          }
          else
          {
            v76 = MEMORY[0x24BDAC7A8](v64);
            v82[2] = v74;
            v82[3] = a20;
            v82[4] = v75;
            v82[5] = v114;
            v83[0] = v114;
            v83[1] = v114;
            v84 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v114;
            v85 = v114;
            if (v77)
            {
              v78 = swift_getObjectType();
              MEMORY[0x24BDAC7A8](v78);
              v81[2] = sub_242B9A110;
              v81[3] = v82;
              type metadata accessor for BNNSLayerParametersLSTM(0);
              v80 = v79;
              swift_unknownObjectRetain();
              sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v81, v80, v103);
              return swift_unknownObjectRelease();
            }
            else
            {
              return v74(v75, v114, v114, v114, v114, v114, v114, v76);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_242B99074@<X0>(uint64_t (*a1)@<X0>(uint64_t (*a1)@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, _QWORD *a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t, uint64_t (*)@<X0>(uint64_t (*a1)@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>), _BYTE *, _BYTE *, _BYTE *, _BYTE *, _BYTE *, __n128), uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  void (*v58)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[4];
  _QWORD v64[6];
  _QWORD v65[2];
  void (*v66)(uint64_t@<X0>, uint64_t@<X8>);
  void (*v67)(uint64_t@<X0>, uint64_t@<X8>);
  _QWORD v68[8];
  _QWORD v69[2];
  uint64_t (*v70)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _BYTE *v71;
  _QWORD v72[10];
  _QWORD v73[2];
  uint64_t (*v74)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  uint64_t (*v75)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD v76[12];
  _QWORD v77[2];
  uint64_t (*v78)@<X0>(uint64_t (*)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD *v79;
  _QWORD v80[2];
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[19];
  _BYTE v90[184];
  _BYTE v91[192];
  _QWORD *v92;

  v89[2] = a3;
  v89[3] = a4;
  v89[4] = a5;
  v89[5] = a6;
  v89[6] = a8;
  v89[7] = a9;
  v89[8] = a10;
  v89[9] = a11;
  v89[10] = a12;
  v89[11] = a13;
  v89[12] = a14;
  v89[13] = a15;
  v89[14] = a16;
  v89[15] = a17;
  v89[16] = a18;
  v89[17] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v78 = sub_242B99D24;
    v79 = v89;
    type metadata accessor for BNNSLayerParametersLSTM(0);
    v22 = v21;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v77, v22, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    v80[1] = a5;
    v81 = a4;
    v82 = a7;
    v83 = v18;
    v88 = a13;
    v84 = a15;
    v85 = a14;
    v92 = a10;
    v86 = a18;
    v87 = a11;
    sub_242AA3BBC(v90);
    sub_242AB0920((uint64_t)v90, (uint64_t)v91);
    MEMORY[0x24BDAC7A8](a13);
    v76[2] = a6;
    v76[3] = a8;
    v76[4] = v28;
    v76[5] = v29;
    v76[6] = a11;
    v76[7] = v30;
    v76[8] = v27;
    v76[9] = v31;
    v76[10] = v32;
    v76[11] = a16;
    v77[0] = a17;
    v77[1] = v33;
    v78 = a1;
    v79 = v34;
    if (a3)
    {
      v35 = swift_getObjectType();
      MEMORY[0x24BDAC7A8](v35);
      v74 = sub_242B99D38;
      v75 = (uint64_t (*)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>))v76;
      type metadata accessor for BNNSLayerParametersLSTM(0);
      v37 = v36;
      swift_unknownObjectRetain();
      sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v73, v37, v82);
      return swift_unknownObjectRelease();
    }
    else
    {
      v81 = v76;
      MEMORY[0x24BDAC7A8](v27);
      v72[2] = v39;
      v72[3] = a11;
      v72[4] = v40;
      v72[5] = v38;
      v72[6] = v41;
      v72[7] = v42;
      v72[8] = a16;
      v72[9] = a17;
      v73[0] = v43;
      v73[1] = a1;
      v74 = v44;
      v75 = v44;
      if (a6)
      {
        v45 = swift_getObjectType();
        MEMORY[0x24BDAC7A8](v45);
        v70 = sub_242B99F88;
        v71 = v72;
        type metadata accessor for BNNSLayerParametersLSTM(0);
        v47 = v46;
        swift_unknownObjectRetain();
        sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v69, v47, v82);
        return swift_unknownObjectRelease();
      }
      else
      {
        MEMORY[0x24BDAC7A8](v38);
        v68[2] = v48;
        v68[3] = v49;
        v68[4] = v50;
        v68[5] = a16;
        v68[6] = a17;
        v68[7] = v51;
        v69[0] = a1;
        v69[1] = v91;
        v70 = (uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>))v91;
        v71 = v91;
        if (v52)
        {
          v53 = swift_getObjectType();
          MEMORY[0x24BDAC7A8](v53);
          v66 = sub_242B9A0FC;
          v67 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v68;
          type metadata accessor for BNNSLayerParametersLSTM(0);
          v55 = v54;
          swift_unknownObjectRetain();
          sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v65, v55, v82);
          return swift_unknownObjectRelease();
        }
        else
        {
          v92 = v80;
          v57 = MEMORY[0x24BDAC7A8](v48);
          v64[2] = a16;
          v64[3] = a17;
          v64[4] = v56;
          v64[5] = a1;
          v65[0] = v58;
          v65[1] = v58;
          v66 = v58;
          v67 = v58;
          if (v59)
          {
            v60 = swift_getObjectType();
            MEMORY[0x24BDAC7A8](v60);
            v63[2] = sub_242B9A110;
            v63[3] = v64;
            type metadata accessor for BNNSLayerParametersLSTM(0);
            v62 = v61;
            swift_unknownObjectRetain();
            sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v63, v62, v82);
            return swift_unknownObjectRelease();
          }
          else
          {
            return a16(v56, a1, v91, v91, v91, v91, v91, v57);
          }
        }
      }
    }
  }
}

uint64_t sub_242B99570@<X0>(uint64_t (*a1)@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, __n128), uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[4];
  _QWORD v50[6];
  _QWORD v51[2];
  void (*v52)(uint64_t@<X0>, uint64_t@<X8>);
  _BYTE *v53;
  _QWORD v54[8];
  _QWORD v55[2];
  uint64_t (*v56)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  uint64_t (*v57)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD v58[10];
  _QWORD v59[2];
  uint64_t (*v60)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[17];
  _BYTE v71[184];
  _BYTE v72[192];
  uint64_t v73;

  v70[2] = a3;
  v70[3] = a4;
  v70[4] = a5;
  v70[5] = a6;
  v70[6] = a8;
  v70[7] = a9;
  v70[8] = a10;
  v70[9] = a11;
  v70[10] = a12;
  v70[11] = a13;
  v70[12] = a14;
  v70[13] = a15;
  v70[14] = a16;
  v70[15] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v60 = sub_242B99D38;
    v61 = v70;
    type metadata accessor for BNNSLayerParametersLSTM(0);
    v20 = v19;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v59, v20, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    v63 = a5;
    v64 = a4;
    v65 = a7;
    v66 = v16;
    v73 = a10;
    v68 = a6;
    v69 = a11;
    v67 = a3;
    sub_242AA3BBC(v71);
    sub_242AB0920((uint64_t)v71, (uint64_t)v72);
    v23 = v73;
    MEMORY[0x24BDAC7A8](v68);
    v58[2] = v24;
    v58[3] = v25;
    v58[4] = v26;
    v58[5] = v23;
    v58[6] = v27;
    v58[7] = a12;
    v58[8] = a13;
    v58[9] = v28;
    v59[0] = a15;
    v59[1] = v29;
    v60 = a1;
    v61 = v30;
    if (v67)
    {
      v31 = swift_getObjectType();
      MEMORY[0x24BDAC7A8](v31);
      v56 = sub_242B99F88;
      v57 = (uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>))v58;
      type metadata accessor for BNNSLayerParametersLSTM(0);
      v33 = v32;
      swift_unknownObjectRetain();
      sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v55, v33, v65);
      return swift_unknownObjectRelease();
    }
    else
    {
      MEMORY[0x24BDAC7A8](v24);
      v54[2] = v23;
      v54[3] = v34;
      v54[4] = a12;
      v54[5] = a13;
      v54[6] = v35;
      v54[7] = a15;
      v55[0] = v36;
      v55[1] = a1;
      v56 = v37;
      v57 = v37;
      v62 = v38;
      if (v39)
      {
        v40 = swift_getObjectType();
        MEMORY[0x24BDAC7A8](v40);
        v52 = sub_242B9A0FC;
        v53 = v54;
        type metadata accessor for BNNSLayerParametersLSTM(0);
        v42 = v41;
        swift_unknownObjectRetain();
        sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v51, v42, v65);
        return swift_unknownObjectRelease();
      }
      else
      {
        v43 = MEMORY[0x24BDAC7A8](0);
        v50[2] = a13;
        v50[3] = v44;
        v50[4] = a15;
        v50[5] = v45;
        v51[0] = a1;
        v51[1] = v72;
        v52 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v72;
        v53 = v72;
        if (v23)
        {
          v46 = swift_getObjectType();
          MEMORY[0x24BDAC7A8](v46);
          v49[2] = sub_242B9A110;
          v49[3] = v50;
          type metadata accessor for BNNSLayerParametersLSTM(0);
          v48 = v47;
          swift_unknownObjectRetain();
          sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v49, v48, v65);
          return swift_unknownObjectRelease();
        }
        else
        {
          return a13(a15, v43);
        }
      }
    }
  }
}

uint64_t sub_242B99984@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, __n128), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[4];
  _QWORD v41[6];
  _QWORD v42[2];
  void (*v43)(uint64_t@<X0>, uint64_t@<X8>);
  void (*v44)(uint64_t@<X0>, uint64_t@<X8>);
  _QWORD v45[8];
  _QWORD v46[2];
  uint64_t (*v47)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  _QWORD *v48;
  _QWORD v49[3];
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD v53[15];
  _BYTE v54[184];
  _QWORD v55[26];

  v53[2] = a3;
  v53[3] = a4;
  v53[4] = a5;
  v53[5] = a6;
  v53[6] = a8;
  v53[7] = a9;
  v53[8] = a10;
  v53[9] = a11;
  v53[10] = a12;
  v53[11] = a13;
  v53[12] = a14;
  v53[13] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v47 = sub_242B99F88;
    v48 = v53;
    type metadata accessor for BNNSLayerParametersLSTM(0);
    v18 = v17;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v46, v18, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    v49[0] = a5;
    v49[1] = a4;
    v52 = a7;
    v55[25] = v14;
    v49[2] = a12;
    v50 = a6;
    sub_242AA3BBC(v54);
    v22 = sub_242AB0920((uint64_t)v54, (uint64_t)v55);
    v23 = v50;
    v51 = v49;
    MEMORY[0x24BDAC7A8](v22);
    v45[2] = v23;
    v45[3] = a8;
    v45[4] = a9;
    v45[5] = a10;
    v45[6] = v25;
    v45[7] = a12;
    v46[0] = v26;
    v46[1] = v27;
    v47 = a1;
    v48 = v28;
    if (a3)
    {
      v29 = swift_getObjectType();
      MEMORY[0x24BDAC7A8](v29);
      v43 = sub_242B9A0FC;
      v44 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v45;
      type metadata accessor for BNNSLayerParametersLSTM(0);
      v31 = v30;
      swift_unknownObjectRetain();
      sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v42, v31, v52);
      return swift_unknownObjectRelease();
    }
    else
    {
      v32 = MEMORY[0x24BDAC7A8](v24);
      v41[2] = a10;
      v41[3] = v33;
      v41[4] = a12;
      v41[5] = v34;
      v42[0] = v35;
      v42[1] = a1;
      v43 = v36;
      v44 = v36;
      if (v23)
      {
        v37 = swift_getObjectType();
        MEMORY[0x24BDAC7A8](v37);
        v40[2] = sub_242B9A110;
        v40[3] = v41;
        type metadata accessor for BNNSLayerParametersLSTM(0);
        v39 = v38;
        swift_unknownObjectRetain();
        sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v40, v39, v52);
        return swift_unknownObjectRelease();
      }
      else
      {
        return a10(a12, v32);
      }
    }
  }
}

void sub_242B99CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_242B98044(a1, a2, a3, a4, a5, a6, a7, *(_QWORD *)(v7 + 16), *(_QWORD **)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40));
  OUTLINED_FUNCTION_11_3();
}

uint64_t sub_242B99CD8()
{
  uint64_t *v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = OUTLINED_FUNCTION_3_66();
  return sub_242B98A8C(v2, v3, v4, v5, v6, v7, v8, v1.n128_i64[0], v1.n128_i64[1], v9, v10, v11, v12, v13, v14, v15, v16, v0[19], v0[20],
           v0[21]);
}

uint64_t sub_242B99D10()
{
  return sub_242B9A158();
}

uint64_t sub_242B99D24@<X0>(uint64_t (*a1)@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)
{
  return sub_242B9A18C(a1, a2);
}

uint64_t sub_242B99D38@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)
{
  return sub_242B9A1D8(a1, a2);
}

uint64_t sub_242B99D4C@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, _QWORD *, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  _QWORD v27[6];
  _QWORD v28[2];
  void (*v29)(uint64_t@<X0>, uint64_t@<X8>);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[13];
  _BYTE v35[184];
  _QWORD v36[26];

  v34[2] = a3;
  v34[3] = a4;
  v34[4] = a5;
  v34[5] = a6;
  v34[6] = a8;
  v34[7] = a9;
  v34[8] = a10;
  v34[9] = a11;
  v34[10] = a12;
  v34[11] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v29 = sub_242B9A0FC;
    v30 = v34;
    type metadata accessor for BNNSLayerParametersLSTM(0);
    v16 = v15;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v28, v16, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    v31 = a5;
    v32 = a4;
    v33 = a7;
    v36[25] = v12;
    sub_242AA3BBC(v35);
    sub_242AB0920((uint64_t)v35, (uint64_t)v36);
    v21 = MEMORY[0x24BDAC7A8](a3);
    v27[2] = v20;
    v27[3] = a8;
    v27[4] = a9;
    v27[5] = a10;
    v28[0] = a11;
    v28[1] = a12;
    v29 = a1;
    v30 = v36;
    if (v22)
    {
      v23 = swift_getObjectType();
      MEMORY[0x24BDAC7A8](v23);
      v26[2] = sub_242B9A110;
      v26[3] = v27;
      type metadata accessor for BNNSLayerParametersLSTM(0);
      v25 = v24;
      swift_unknownObjectRetain();
      sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v26, v25, v33);
      return swift_unknownObjectRelease();
    }
    else
    {
      return v20(a9, a10, a11, a12, a1, v36, v36, v21);
    }
  }
}

uint64_t sub_242B99F88@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)
{
  return sub_242B9A220(a1, a2);
}

uint64_t sub_242B99F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  _QWORD v18[5];
  uint64_t v19;
  _QWORD v20[11];
  _BYTE v21[184];
  _BYTE v22[192];

  v19 = a7;
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a5;
  v20[5] = a6;
  v20[6] = a8;
  v20[7] = a9;
  v20[8] = a10;
  v20[9] = a1;
  if (a2)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v18[2] = sub_242B9A110;
    v18[3] = v20;
    type metadata accessor for BNNSLayerParametersLSTM(0);
    v12 = v11;
    swift_unknownObjectRetain();
    sub_242BF6310((uint64_t)sub_242AA3D44, (uint64_t)v18, v12, v19);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_242AA3BBC(v21);
    sub_242AB0920((uint64_t)v21, (uint64_t)v22);
    return a3(a5, a6, a8, a9, a10, a1, v22);
  }
}

void sub_242B9A0FC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242B9A260(a1, a2);
}

uint64_t sub_242B9A110(uint64_t a1)
{
  return sub_242B9A298(a1);
}

void sub_242B9A124(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242B98804(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 64), *(void (**)(_BYTE *))(v1 + 72), *(_QWORD *)(v1 + 80), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_11_3();
}

uint64_t sub_242B9A158()
{
  uint64_t v0;
  __n128 v1;
  uint64_t (*v2)@<X0>(uint64_t (*)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>);
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t (*)@<X0>(uint64_t (*)@<X0>(uint64_t (*)@<X0>(void (*)(uint64_t@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>)@<X0>, uint64_t@<X8>), _BYTE *, _BYTE *, _BYTE *, _BYTE *, _BYTE *, __n128);
  uint64_t v16;

  v1 = OUTLINED_FUNCTION_3_66();
  return sub_242B99074(v2, v3, v4, v5, v6, v7, v8, v1.n128_i64[0], v1.n128_i64[1], v9, v10, v11, v12, v13, v14, v15, v16, *(_QWORD *)(v0 + 152));
}

uint64_t sub_242B9A18C@<X0>(uint64_t (*a1)@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242B99570(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(uint64_t (**)(uint64_t, __n128))(v2 + 112), *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_242B9A1D8@<X0>(uint64_t (*a1)@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242B99984(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(uint64_t (**)(uint64_t, __n128))(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_242B9A220@<X0>(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_242B99D4C(a1, v2[2], v2[5], v2[6], v2[7], v2[8], a2, v2[9], v2[10], v2[11], v2[12], v2[13]);
}

void sub_242B9A260(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_242B99F9C(a1, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
  OUTLINED_FUNCTION_11_3();
}

uint64_t sub_242B9A298(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(v1 + 16))(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1);
}

uint64_t OUTLINED_FUNCTION_0_80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_1_69(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_242B96A44(v2, a1, a2 & 1);
}

uint64_t OUTLINED_FUNCTION_2_72(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

__n128 OUTLINED_FUNCTION_3_66()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_5_60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 96))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_8_49()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_9_56(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_242BF6310(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_42()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_11_45()
{
  type metadata accessor for BNNSLayerParametersLSTM(0);
}

uint64_t OUTLINED_FUNCTION_12_41()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_13_49()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14_35()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_16_38()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 88) = *(_QWORD *)(v0 - 72);
  return sub_242C00DB8();
}

uint64_t OUTLINED_FUNCTION_17_37(uint64_t a1, uint64_t a2)
{
  return sub_242B96BB0(a1, a2, 4);
}

uint64_t OUTLINED_FUNCTION_21_35()
{
  return sub_242C48F5C();
}

void OUTLINED_FUNCTION_22_31(void *a1)
{
  bzero(a1, 0x94uLL);
}

uint64_t OUTLINED_FUNCTION_23_38(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_24_37(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_25_35()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_26_39()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_27_31()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_29_30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_33_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242B9A400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  uint64_t *v67;
  _QWORD v68[10];
  uint64_t v69;
  _QWORD v70[7];
  __int128 v71;
  char v72;
  __int128 v73;
  const char *v74;
  uint64_t v75;
  char v76;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  swift_retain();
  v4 = sub_242BD0D40((uint64_t)sub_242B9A714);
  v6 = v5;
  *(_QWORD *)&v71 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/Unar"
                    "yArithmeticOps.swift";
  *((_QWORD *)&v71 + 1) = 120;
  v72 = 2;
  v73 = xmmword_242C4C810;
  v74 = "init(id:operator:operand:creationSite:backward:)";
  v75 = 48;
  v76 = 2;
  type metadata accessor for UnaryArithmeticOperation();
  OUTLINED_FUNCTION_2_0();
  v7 = sub_242ABCF44(0, 0, 0, 13, v3, &v71, v4, v6);
  sub_242A66290(v3 + 168, (uint64_t)v70);
  type metadata accessor for ContextManager();
  swift_retain();
  v8 = OUTLINED_FUNCTION_7_50();
  OUTLINED_FUNCTION_30_27((uint64_t)v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_135();
  v14 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_72_10(v14, v15, v16, v17, v18, v19);
  v20 = OUTLINED_FUNCTION_7_50();
  OUTLINED_FUNCTION_30_27((uint64_t)v20, v21, v22, v23, v24, v25);
  OUTLINED_FUNCTION_135();
  v26 = swift_retain();
  OUTLINED_FUNCTION_72_10(v26, v27, v28, v29, v30, v31);
  type metadata accessor for TensorRepresentation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_2_73();
  sub_242B4CDF4(v7, 0, v32, v33, v69, v68[9], v34);
  v36 = v35;
  type metadata accessor for TensorHandle();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v36;
  OUTLINED_FUNCTION_10();
  sub_242BC995C();
  OUTLINED_FUNCTION_10();
  sub_242BC97A8();
  v39 = v38;
  v41 = v40;
  v42 = OUTLINED_FUNCTION_17_5();
  if (v39)
  {
    v67 = a1;
    type metadata accessor for TrackedOperation();
    v43 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v43 + 16) = v39;
    *(_QWORD *)(v43 + 24) = v41;
    sub_242A66290(v36 + 168, (uint64_t)v70);
    OUTLINED_FUNCTION_10();
    swift_retain();
    swift_unknownObjectRetain();
    sub_242BC9BD8();
    v45 = v44;
    OUTLINED_FUNCTION_17_5();
    v46 = OUTLINED_FUNCTION_7_50();
    OUTLINED_FUNCTION_30_27((uint64_t)v46, v47, v48, v49, v50, v51);
    OUTLINED_FUNCTION_135();
    v52 = swift_retain();
    OUTLINED_FUNCTION_72_10(v52, v53, v54, v55, v56, v57);
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_2_73();
    v61 = sub_242B4CE2C(v43, 0, v58, v59, v69, v45, v60);
    swift_retain();
    v62 = sub_242BC9B20();
    v64 = v63;
    swift_release();
    if (v62)
    {
      swift_retain();
      swift_unknownObjectRetain();
      sub_242BCA064(v61, v61, v62, v64);
      swift_unknownObjectRelease();
    }
    v65 = OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v65 + 16) = v61;
    swift_retain();
    sub_242BC995C();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_17_5();
    swift_unknownObjectRelease();
    swift_release();
    result = swift_release();
    a1 = v67;
  }
  else
  {
    v70[0] = inited;
    sub_242B9A400(v68, v42);
    swift_release();
    swift_release();
    result = OUTLINED_FUNCTION_17_5();
    v65 = v68[0];
  }
  *a1 = v65;
  return result;
}

uint64_t sub_242B9A714(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_242C4B7D0;
      swift_retain_n();
      swift_retain();
      swift_retain();
      v4 = sub_242AC4964();
      *(_QWORD *)(v3 + 32) = v2;
      *(_QWORD *)(v3 + 40) = v4;
      *(_QWORD *)(v3 + 48) = v5;
      swift_release();
      swift_release();
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

const void *OUTLINED_FUNCTION_7_50()
{
  return sub_242B93328();
}

#error "242B9A86C: call analysis failed (funcsize=37)"

uint64_t sub_242B9A880()
{
  return sub_242B9A7E0();
}

#error "242B9A928: call analysis failed (funcsize=38)"

uint64_t sub_242B9A93C()
{
  return sub_242B9A894();
}

void sub_242B9A950(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v6 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v6 + 16) = xmmword_242C4BF60;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v7 = *(id *)(a2 + 32);
  v8 = v7;
  sub_242BF51CC();
  v10 = v9;
  v11 = *(_QWORD *)(v3 + 24);
  v12 = *(_QWORD *)(v3 + 32);
  sub_242C480E0();
  sub_242AFCAA0((uint64_t)v8, v10, v11, v12, a1);
  v14 = v13;

  *(_QWORD *)(v6 + 32) = v14;
  sub_242C4856C();
  OUTLINED_FUNCTION_3_3();
}

void sub_242B9AA2C(void *a1, uint64_t a2)
{
  sub_242B9A950(a1, a2);
}

void sub_242B9AA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  OUTLINED_FUNCTION_24_38();
  v2 = v1;
  v4 = v3;
  v5 = v1 & 0xC000000000000001;
  sub_242B4B240(0, (v1 & 0xC000000000000001) == 0, v1);
  if (v5)
    v6 = (id)MEMORY[0x2494EC84C](0, v2);
  else
    v6 = *(id *)(v2 + 32);
  v7 = v6;
  sub_242B4B240(1, v5 == 0, v2);
  if (v5)
    v8 = (id)MEMORY[0x2494EC84C](1, v2);
  else
    v8 = *(id *)(v2 + 40);
  v9 = v8;
  v10 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v0 + 56))
  {
    if (*(_BYTE *)(v0 + 56) == 1)
    {
      v11 = *(_QWORD *)(v0 + 48);
      v13 = *(_QWORD *)(v0 + 24);
      v12 = *(_QWORD *)(v0 + 32);
      OUTLINED_FUNCTION_0_2();
      v14 = sub_242B9B4B8((uint64_t)v7, (uint64_t)v9, v10, v11, v13, v12, v4);
      goto LABEL_12;
    }
    v16 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    OUTLINED_FUNCTION_0_2();
    v17 = &selRef_gatherNDWithUpdatesTensor_indicesTensor_batchDimensions_name_;
    v18 = (uint64_t)v7;
    v19 = (uint64_t)v9;
    v20 = v10;
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    OUTLINED_FUNCTION_0_2();
    v17 = &selRef_gatherAlongAxis_withUpdatesTensor_indicesTensor_name_;
    v18 = v10;
    v19 = (uint64_t)v7;
    v20 = (uint64_t)v9;
  }
  v14 = sub_242B9B690(v18, v19, v20, v16, v15, v4, (SEL *)v17);
LABEL_12:
  v21 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v22 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v22 + 16) = xmmword_242C4BF60;
  if (v21)
  {
    *(_QWORD *)(v22 + 32) = v21;
    OUTLINED_FUNCTION_7_2();

    OUTLINED_FUNCTION_0_45();
  }
  else
  {
    __break(1u);
  }
}

void sub_242B9ABA8()
{
  sub_242B9AA40();
}

uint64_t sub_242B9ABBC()
{
  uint64_t v0;

  return qword_242C5A068[*(char *)(v0 + 80)];
}

uint64_t sub_242B9ABD0(void *a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v5 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_17_6(0, (a2 & 0xC000000000000001) == 0);
  if (v5)
    OUTLINED_FUNCTION_16_6();
  v6 = *(id *)(a2 + 32);
  OUTLINED_FUNCTION_17_6(1, 1);
  v7 = *(id *)(a2 + 40);
  OUTLINED_FUNCTION_17_6(2, 1);
  v8 = *(id *)(a2 + 48);
  v9 = *(_QWORD *)(v2 + 40);
  if (*(_BYTE *)(v2 + 48))
  {
    if (*(_BYTE *)(v2 + 48) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
      v10 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v10 + 16) = xmmword_242C4BF60;
      v11 = sub_242B9ABBC();
      v13 = *(_QWORD *)(v2 + 24);
      v12 = *(_QWORD *)(v2 + 32);
      OUTLINED_FUNCTION_0_2();
      v14 = &selRef_scatterWithDataTensor_updatesTensor_indicesTensor_axis_mode_name_;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
      v10 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v10 + 16) = xmmword_242C4BF60;
      v11 = sub_242B9ABBC();
      v13 = *(_QWORD *)(v2 + 24);
      v12 = *(_QWORD *)(v2 + 32);
      OUTLINED_FUNCTION_0_2();
      v14 = &selRef_scatterNDWithDataTensor_updatesTensor_indicesTensor_batchDimensions_mode_name_;
    }
    v18 = sub_242B9B550((uint64_t)v6, (uint64_t)v8, (uint64_t)v7, v9, v11, v13, v12, a1, (SEL *)v14);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v10 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v10 + 16) = xmmword_242C4BF60;
    v15 = sub_242B9ABBC();
    v17 = *(_QWORD *)(v2 + 24);
    v16 = *(_QWORD *)(v2 + 32);
    OUTLINED_FUNCTION_0_2();
    v18 = sub_242B9B550(v9, (uint64_t)v6, (uint64_t)v8, (uint64_t)v7, v15, v17, v16, a1, (SEL *)&selRef_scatterAlongAxis_withDataTensor_updatesTensor_indicesTensor_mode_name_);
  }
  *(_QWORD *)(v10 + 32) = v18;
  sub_242C4856C();

  return v10;
}

uint64_t sub_242B9ADC0(void *a1, unint64_t a2)
{
  return sub_242B9ABD0(a1, a2);
}

void sub_242B9ADD4(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v3 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v3 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_9_9(v3, (unint64_t *)&qword_257220F18);
  v4 = sub_242C4853C();
  v5 = v1[6];
  v7 = v1[3];
  v6 = v1[4];
  OUTLINED_FUNCTION_0_2();
  sub_242B9B5F8(v4, v5, v7, v6, a1, (SEL *)&selRef_concatTensors_dimension_name_);
  OUTLINED_FUNCTION_18_40();
  *(_QWORD *)(v3 + 32) = v6;
  v8 = OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_9_2(v8, v9, v10, v11, v12, v13, v14, v15, v16, v3);
  OUTLINED_FUNCTION_3_3();
}

void sub_242B9AE84(void *a1)
{
  sub_242B9ADD4(a1);
}

uint64_t sub_242B9AE98(void *a1, uint64_t a2, SEL *a3)
{
  _QWORD *v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v7 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v7 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_17_6(0, (a2 & 0xC000000000000001) == 0);
  if ((a2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_16_6();
  v8 = *(id *)(a2 + 32);
  sub_242A5A5E8(v3[6]);
  OUTLINED_FUNCTION_9_9(v9, (unint64_t *)&qword_257221F28);
  v10 = (void *)OUTLINED_FUNCTION_20_42();
  OUTLINED_FUNCTION_80();
  v12 = v3[3];
  v11 = v3[4];
  OUTLINED_FUNCTION_0_2();
  v13 = sub_242B9B5F8((uint64_t)v8, (uint64_t)v10, v12, v11, a1, a3);

  *(_QWORD *)(v7 + 32) = v13;
  v14 = OUTLINED_FUNCTION_7_2();
  return OUTLINED_FUNCTION_9_2(v14, v15, v16, v17, v18, v19, v20, v21, v23, v7);
}

uint64_t sub_242B9AF98(void *a1, uint64_t a2)
{
  return sub_242B9AE98(a1, a2, (SEL *)&selRef_transposeTensor_permutation_name_);
}

void sub_242B9AFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_24_38();
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    OUTLINED_FUNCTION_1_70();
    if (v1)
    {
      sub_242C480E0();
      OUTLINED_FUNCTION_6_3();
    }
    v7 = *(void **)(v3 + 32);
    sub_242B9B684(v6, 1);
    v8 = v7;
    sub_242A5A5E8(v6);
    v9 = sub_242B9B678(v6, 1);
    OUTLINED_FUNCTION_9_9(v9, (unint64_t *)&qword_257221F28);
    v10 = (void *)OUTLINED_FUNCTION_20_42();
    OUTLINED_FUNCTION_80();
    v11 = *(_QWORD *)(v0 + 64);
    OUTLINED_FUNCTION_22_32();
    v12 = (void *)OUTLINED_FUNCTION_23_39();
    OUTLINED_FUNCTION_80();
    objc_msgSend(v5, sel_splitTensor_splitSizes_axis_name_, v8, v10, v11, v12);

  }
  else
  {
    OUTLINED_FUNCTION_1_70();
    if (v1)
      OUTLINED_FUNCTION_6_3();
    v10 = OUTLINED_FUNCTION_10_2();
    v13 = *(_QWORD *)(v0 + 64);
    OUTLINED_FUNCTION_22_32();
    v12 = (void *)OUTLINED_FUNCTION_23_39();
    OUTLINED_FUNCTION_80();
    objc_msgSend(v5, sel_splitTensor_numSplits_axis_name_, v10, v6, v13, v12);
  }

  OUTLINED_FUNCTION_9_9(v14, (unint64_t *)&qword_257220F18);
  sub_242C48548();
  OUTLINED_FUNCTION_18_40();
  OUTLINED_FUNCTION_0_45();
}

void sub_242B9B128()
{
  sub_242B9AFB4();
}

uint64_t sub_242B9B13C(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v5 = a2 & 0xC000000000000001;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v5)
    v6 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v6 = *(id *)(a2 + 32);
  v7 = v6;
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(void **)(v2 + 32);
  OUTLINED_FUNCTION_0_2();
  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a1, sel_topKWithSourceTensor_k_name_, v7, v8, v10);
  OUTLINED_FUNCTION_18_40();

  OUTLINED_FUNCTION_9_9(v12, (unint64_t *)&qword_257220F18);
  v13 = sub_242C48548();

  return v13;
}

uint64_t sub_242B9B224(void *a1, uint64_t a2)
{
  return sub_242B9B13C(a1, a2);
}

#error "242B9B2F4: call analysis failed (funcsize=49)"

uint64_t sub_242B9B308()
{
  return sub_242B9B238();
}

uint64_t sub_242B9B31C(void *a1, uint64_t a2)
{
  return sub_242B9AE98(a1, a2, (SEL *)&selRef_reverseTensor_axes_name_);
}

void sub_242B9B338(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v4 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v4 + 16) = xmmword_242C4BF60;
  OUTLINED_FUNCTION_1_70();
  if (v2)
    OUTLINED_FUNCTION_6_3();
  v5 = OUTLINED_FUNCTION_10_2();
  v7 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  OUTLINED_FUNCTION_0_2();
  sub_242B9B720((uint64_t)v5, v7, v6, a1);
  OUTLINED_FUNCTION_11_2();
  *(_QWORD *)(v4 + 32) = v6;
  v8 = OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_9_2(v8, v9, v10, v11, v12, v13, v14, v15, v16, v4);
  OUTLINED_FUNCTION_3_3();
}

void sub_242B9B3CC(void *a1)
{
  sub_242B9B338(a1);
}

#error "242B9B454: call analysis failed (funcsize=31)"

uint64_t sub_242B9B468()
{
  return sub_242B9B3E0();
}

uint64_t sub_242B9B47C(uint64_t a1)
{
  uint64_t result;

  result = sub_242A8A510(&qword_2572298B0, (uint64_t (*)(uint64_t))type metadata accessor for TopKGradientOperation, (uint64_t)&unk_242C5A814);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

id sub_242B9B4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v12;
  id v13;

  v12 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a7, sel_gatherWithUpdatesTensor_indicesTensor_axis_batchDimensions_name_, a1, a2, a3, a4, v12);

  return v13;
}

id sub_242B9B550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, SEL *a9)
{
  void *v15;
  id v16;

  v15 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(a8, *a9, a1, a2, a3, a4, a5, v15);

  return v16;
}

id sub_242B9B5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  void *v10;
  id v11;

  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a5, *a6, a1, a2, v10);

  return v11;
}

uint64_t sub_242B9B678(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_242B9B684(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return sub_242C480E0();
  return result;
}

id sub_242B9B690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, SEL *a7)
{
  void *v12;
  id v13;

  v12 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a6, *a7, a1, a2, a3, v12);

  return v13;
}

id sub_242B9B720(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;

  v6 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a4, sel_nonZeroIndicesOfTensor_name_, a1, v6);

  return v7;
}

uint64_t OUTLINED_FUNCTION_1_70()
{
  uint64_t v0;

  return sub_242B4B240(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_5_61()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return sub_242C4856C();
}

uint64_t OUTLINED_FUNCTION_14_36()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_15_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;

  return sub_242B9B690(a1, a2, a3, v9, v7, v8, a7);
}

void OUTLINED_FUNCTION_18_40()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_20_42()
{
  return sub_242C4853C();
}

uint64_t OUTLINED_FUNCTION_21_36()
{
  return sub_242C4853C();
}

uint64_t OUTLINED_FUNCTION_22_32()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_23_39()
{
  return sub_242C48224();
}

NeuralNetworks::LossReduction_optional __swiftcall LossReduction.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (NeuralNetworks::LossReduction_optional)rawValue;
}

uint64_t LossReduction.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

NeuralNetworks::LossReduction_optional sub_242B9B85C(Swift::Int *a1)
{
  return LossReduction.init(rawValue:)(*a1);
}

uint64_t sub_242B9B864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = LossReduction.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_242B9B888()
{
  sub_242B9D6B8();
  return sub_242C48524();
}

uint64_t sub_242B9B8E4()
{
  sub_242B9D6B8();
  return sub_242C484F4();
}

void l1Loss(predicted:target:reduction:)()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_50();
  abs(_:)();
  OUTLINED_FUNCTION_135();
  if (v1 == 2)
  {
    *v0 = v2;
  }
  else
  {
    if ((v1 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    OUTLINED_FUNCTION_28_5();
  }
  OUTLINED_FUNCTION_1_65();
}

uint64_t meanAbsoluteError(predicted:target:)(uint64_t *a1, uint64_t *a2)
{
  return sub_242B9BA28(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *, char *))l1Loss(predicted:target:reduction:));
}

void l2Loss(predicted:target:reduction:)()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_50();
  Tensor.squared()();
  OUTLINED_FUNCTION_28_5();
  if (v1 == 2)
  {
    *v0 = v2;
  }
  else
  {
    if ((v1 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    OUTLINED_FUNCTION_28_5();
  }
  OUTLINED_FUNCTION_1_65();
}

uint64_t meanSquaredError(predicted:target:)(uint64_t *a1, uint64_t *a2)
{
  return sub_242B9BA28(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *, char *))l2Loss(predicted:target:reduction:));
}

uint64_t sub_242B9BA28(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, uint64_t *, char *))
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v7 = *a1;
  v6 = v3;
  v5 = 0;
  return a3(&v7, &v6, &v5);
}

void meanSquaredLogarithmicError(predicted:target:)()
{
  double v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;

  v0 = OUTLINED_FUNCTION_42_24();
  v2 = *(_BYTE *)(v1 + 160);
  v11 = OUTLINED_FUNCTION_138_5(v3, v4, v5, v6, v7, v8, v9, v10, v71, v0);
  v12 = MEMORY[0x24BEE4AF8];
  HIBYTE(v99) = v2;
  OUTLINED_FUNCTION_8_50(v11, v13, v14, v15, v16, v17, v18, v19, v72, v79, v83, v87, v91, v95, v99, MEMORY[0x24BEE4AF8], v105, v107);
  OUTLINED_FUNCTION_27_19();
  v28 = OUTLINED_FUNCTION_20_43(v20, v21, v22, v23, v24, v25, v26, v27, v73);
  OUTLINED_FUNCTION_22_33(v28, v29, v30, v31, v32, v33, v34, v35, v74, v80, v84, v88, v92, v96, v100, v103);
  v36 = OUTLINED_FUNCTION_42_24();
  v38 = *(_BYTE *)(v37 + 160);
  v47 = OUTLINED_FUNCTION_138_5(v39, v40, v41, v42, v43, v44, v45, v46, v75, v36);
  HIBYTE(v101) = v38;
  OUTLINED_FUNCTION_8_50(v47, v48, v49, v50, v51, v52, v53, v54, v76, v81, v85, v89, v93, v97, v101, v12, v106, v108);
  OUTLINED_FUNCTION_27_19();
  v63 = OUTLINED_FUNCTION_20_43(v55, v56, v57, v58, v59, v60, v61, v62, v77);
  OUTLINED_FUNCTION_22_33(v63, v64, v65, v66, v67, v68, v69, v70, v78, v82, v86, v90, v94, v98, v102, v104);
  OUTLINED_FUNCTION_27_32();
  OUTLINED_FUNCTION_33_28();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_46_22();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_27_32();
  OUTLINED_FUNCTION_33_28();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_46_22();
  OUTLINED_FUNCTION_17_5();
  l2Loss(predicted:target:reduction:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_54_15();
}

void meanAbsolutePercentageError(predicted:target:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[8];
  uint64_t v6;
  _QWORD v7[7];
  _QWORD v8[6];
  int v9;

  v2 = *a1;
  v3 = *a2;
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_242A66290((uint64_t)v8, (uint64_t)v7);
  v5[7] = MEMORY[0x24BEE4AF8];
  sub_242A66290((uint64_t)v7, (uint64_t)v5);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v7);
  v4 = v6;
  sub_242A662D8((uint64_t)v8);
  v8[0] = v4;
  v6 = v2;
  v7[0] = v3;
  static Tensor.- infix(_:_:)();
  v6 = v5[0];
  v7[0] = v3;
  abs(_:)();
  static Tensor./ infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_1();
  v6 = v7[0];
  abs(_:)();
  OUTLINED_FUNCTION_135();
  v6 = v5[0];
  Tensor.mean()();
  OUTLINED_FUNCTION_17_1();
  v5[0] = v7[0];
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_54_15();
}

uint64_t hingeLoss(predicted:target:reduction:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _BYTE v30[24];
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  char v34;
  char v35;

  v8 = sub_242C49208();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *a2;
  v14 = *(_QWORD *)(*a1 + 16);
  v15 = *(_QWORD *)(v13 + 16);
  v16 = *(unsigned __int8 *)(v15 + 160);
  if (*(unsigned __int8 *)(v14 + 160) != v16)
  {
    LOBYTE(v29) = *(_BYTE *)(v14 + 160);
    sub_242C21A14();
    OUTLINED_FUNCTION_49_19();
    LOBYTE(v29) = v16;
    sub_242C21A14();
    v29 = a4;
    *(_QWORD *)v30 = v13;
    *(_OWORD *)&v30[8] = xmmword_242C5A0A0;
    LOBYTE(v31) = 0;
    *(_QWORD *)&v32 = v23;
    *((_QWORD *)&v32 + 1) = v24;
    v33 = xmmword_242C5A0B0;
    v34 = 0;
    v35 = 0;
    OUTLINED_FUNCTION_2_74();
    goto LABEL_11;
  }
  v17 = *a3;
  v18 = *(_QWORD *)(v14 + 152);
  v19 = *(_QWORD *)(v15 + 152);
  if ((sub_242C00B0C(v18, v19) & 1) == 0)
  {
    v29 = (_QWORD *)v18;
    *(_OWORD *)v30 = xmmword_242C5A0A0;
    v30[16] = 0;
    v31 = v19;
    v32 = xmmword_242C5A0B0;
    LOBYTE(v33) = 0;
    v35 = 10;
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_2_74();
LABEL_11:
    sub_242A59264();
  }
  v27 = v13;
  v28 = v13;
  v29 = (_QWORD *)v13;
  OUTLINED_FUNCTION_5();
  Tensor.init(zerosLike:)((uint64_t *)&v29, &v26);
  v25 = v26;
  static Tensor..== infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v26 = (uint64_t)v29;
  LOBYTE(v25) = *(_BYTE *)(*(_QWORD *)(v13 + 16) + 160);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE38B8], v8);
  Tensor.cast(to:roundingRule:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  OUTLINED_FUNCTION_13_0();
  v26 = v27;
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v20 = (uint64_t)v29;
  v28 = v13;
  OUTLINED_FUNCTION_5();
  Tensor.init(onesLike:)(&v28, &v29);
  v27 = (uint64_t)v29;
  v28 = v20;
  v25 = v12;
  static Tensor.* infix(_:_:)();
  v25 = v26;
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  v27 = v28;
  relu(_:)((const char *)&v29);
  OUTLINED_FUNCTION_135();
  v21 = (uint64_t)v29;
  if (v17 == 2)
  {
    result = OUTLINED_FUNCTION_17_1();
    *a4 = v21;
  }
  else
  {
    if ((v17 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    OUTLINED_FUNCTION_28_5();
    return OUTLINED_FUNCTION_17_1();
  }
  return result;
}

uint64_t squaredHingeLoss(predicted:target:reduction:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[2];
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  char v21;

  v6 = *a1;
  if (*(unsigned __int8 *)(*(_QWORD *)(*a1 + 16) + 160) != *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)a2 + 16)
                                                                                 + 160))
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_49_19();
    sub_242C21A14();
    v14[0] = a4;
    v14[1] = v4;
    v15 = xmmword_242C5A0A0;
    v16 = 0;
    v17 = v9;
    v18 = v10;
    v19 = xmmword_242C5A0B0;
    v20 = 0;
    v21 = 0;
    OUTLINED_FUNCTION_2_74();
    sub_242A59264();
  }
  v7 = *a3;
  v12 = *(_QWORD *)a2;
  v13 = v6;
  v11 = v7;
  hingeLoss(predicted:target:reduction:)(&v13, &v12, &v11, v14);
  v13 = v14[0];
  Tensor.squared()();
  return swift_release();
}

uint64_t categoricalHingeLoss(predicted:target:reduction:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119[2];
  __int128 v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  char v125;
  char v126;

  v6 = *a1;
  v7 = *a2;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(*a1 + 16) + 160);
  if (v8 != *(unsigned __int8 *)(*(_QWORD *)(*a2 + 16) + 160))
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_49_19();
    sub_242C21A14();
    v119[0] = (uint64_t)a4;
    v119[1] = v4;
    v120 = xmmword_242C5A0A0;
    v121 = 0;
    v122 = v79;
    v123 = v80;
    v124 = xmmword_242C5A0B0;
    v125 = 0;
    v126 = 0;
    OUTLINED_FUNCTION_2_74();
    sub_242A59264();
  }
  v9 = *a3;
  v10 = OUTLINED_FUNCTION_52_13();
  v19 = OUTLINED_FUNCTION_138_5(v11, v12, v13, v14, v15, v16, v17, v18, v81, v10);
  v20 = MEMORY[0x24BEE4AF8];
  HIBYTE(v109) = v8;
  OUTLINED_FUNCTION_8_50(v19, v21, v22, v23, v24, v25, v26, v27, v82, v89, v93, v97, v101, v105, v109, MEMORY[0x24BEE4AF8], v115, v117);
  OUTLINED_FUNCTION_27_19();
  v36 = OUTLINED_FUNCTION_20_43(v28, v29, v30, v31, v32, v33, v34, v35, v83);
  OUTLINED_FUNCTION_22_33(v36, v37, v38, v39, v40, v41, v42, v43, v84, v90, v94, v98, v102, v106, v110, v113);
  v44 = OUTLINED_FUNCTION_52_13();
  v45 = *(_BYTE *)(*(_QWORD *)(v6 + 16) + 160);
  v54 = OUTLINED_FUNCTION_138_5(v46, v47, v48, v49, v50, v51, v52, v53, v85, v44);
  HIBYTE(v111) = v45;
  OUTLINED_FUNCTION_8_50(v54, v55, v56, v57, v58, v59, v60, v61, v86, v91, v95, v99, v103, v107, v111, v20, v116, v118);
  OUTLINED_FUNCTION_27_19();
  v70 = OUTLINED_FUNCTION_20_43(v62, v63, v64, v65, v66, v67, v68, v69, v87);
  OUTLINED_FUNCTION_22_33(v70, v71, v72, v73, v74, v75, v76, v77, v88, v92, v96, v100, v104, v108, v112, v114);
  v119[0] = v7;
  OUTLINED_FUNCTION_48_25();
  Tensor.sum(alongAxes:)((uint64_t)&unk_25137D840, v119);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_34_29();
  OUTLINED_FUNCTION_45_20();
  OUTLINED_FUNCTION_135();
  Tensor.max(alongAxes:)();
  OUTLINED_FUNCTION_13_0();
  static Tensor.- infix(_:_:)();
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_135();
  max(_:_:)();
  OUTLINED_FUNCTION_135();
  if (v9 == 2)
  {
    *a4 = v119[0];
  }
  else
  {
    if ((v9 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    OUTLINED_FUNCTION_50_0();
  }
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  return OUTLINED_FUNCTION_13_0();
}

void logCoshLoss(predicted:target:reduction:)(unsigned __int8 *a1@<X2>, uint64_t *a2@<X8>)
{
  int v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;

  v3 = *a1;
  v4 = OUTLINED_FUNCTION_43_27();
  v6 = *(_BYTE *)(v5 + 160);
  v15 = OUTLINED_FUNCTION_138_5(v7, v8, v9, v10, v11, v12, v13, v14, v76, v4);
  v16 = MEMORY[0x24BEE4AF8];
  HIBYTE(v104) = v6;
  OUTLINED_FUNCTION_8_50(v15, v17, v18, v19, v20, v21, v22, v23, v77, v84, v88, v92, v96, v100, v104, MEMORY[0x24BEE4AF8], v110, v112);
  OUTLINED_FUNCTION_27_19();
  v32 = OUTLINED_FUNCTION_20_43(v24, v25, v26, v27, v28, v29, v30, v31, v78);
  v33 = v111;
  OUTLINED_FUNCTION_22_33(v32, v34, v35, v36, v37, v38, v39, v40, v79, v85, v89, v93, v97, v101, v105, v108);
  v41 = OUTLINED_FUNCTION_43_27();
  v43 = *(_BYTE *)(v42 + 160);
  v52 = OUTLINED_FUNCTION_138_5(v44, v45, v46, v47, v48, v49, v50, v51, v80, v41);
  HIBYTE(v106) = v43;
  OUTLINED_FUNCTION_8_50(v52, v53, v54, v55, v56, v57, v58, v59, v81, v86, v90, v94, v98, v102, v106, v16, v111, v113);
  OUTLINED_FUNCTION_27_19();
  v68 = OUTLINED_FUNCTION_20_43(v60, v61, v62, v63, v64, v65, v66, v67, v82);
  OUTLINED_FUNCTION_22_33(v68, v69, v70, v71, v72, v73, v74, v75, v83, v87, v91, v95, v99, v103, v107, v109);
  OUTLINED_FUNCTION_34_29();
  OUTLINED_FUNCTION_45_20();
  softplus(_:alpha:beta:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_33_28();
  OUTLINED_FUNCTION_135();
  log(_:)();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_13_0();
  if (v3 == 2)
  {
    *a2 = v33;
  }
  else
  {
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    OUTLINED_FUNCTION_13_0();
  }
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_54_15();
}

uint64_t poissonLoss(predicted:target:reduction:)()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  OUTLINED_FUNCTION_58_12();
  v4 = v2;
  log(_:)();
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_135();
  static Tensor.- infix(_:_:)();
  result = OUTLINED_FUNCTION_135();
  if (v1 == 2)
  {
    *v0 = v4;
  }
  else
  {
    if ((v1 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    return OUTLINED_FUNCTION_28_5();
  }
  return result;
}

void kullbackLeiblerDivergence(predicted:target:reduction:)()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  OUTLINED_FUNCTION_58_12();
  static Tensor./ infix(_:_:)();
  log(_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_48_25();
  OUTLINED_FUNCTION_135();
  if (v1 == 2)
  {
    *v0 = v2;
  }
  else
  {
    if ((v1 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    OUTLINED_FUNCTION_28_5();
  }
  OUTLINED_FUNCTION_1_65();
}

uint64_t softmaxCrossEntropy(logits:labels:labelSmoothing:axis:reduction:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  float v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  float v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  float v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  __int128 v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  Swift::Int at;
  Swift::Int ata;
  Swift::Int atb;
  Swift::Int atc;
  Swift::Int atd;
  Swift::Int ate;
  Swift::Int atf;
  Swift::Int atg;
  Swift::Int ath;
  Swift::Int ati;
  Swift::Int atj;
  Swift::Int atk;
  Swift::Int atl;
  Swift::Int atm;
  Swift::Int atn;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  __int128 v369;
  char v370;
  _BYTE v371[24];
  char v372;
  char v373;
  uint64_t v374;

  v374 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_51_24();
  if (v8 < 2)
  {
    v368 = v8;
    v369 = xmmword_242C5A0C0;
    v370 = 0;
    *(_OWORD *)v371 = xmmword_242C4CA60;
    v371[16] = 2;
    v373 = 7;
    OUTLINED_FUNCTION_2_74();
    goto LABEL_16;
  }
  v10 = v6;
  v11 = v9;
  v12 = *v5;
  v13 = *v7;
  if ((OUTLINED_FUNCTION_37_27(*(_QWORD *)(*v5 + 16)) & 1) == 0)
  {
    v368 = v1;
    v369 = xmmword_242C5A0C0;
    v370 = 0;
    *(_QWORD *)v371 = v3;
    *(_OWORD *)&v371[8] = xmmword_242C5A0D0;
    v372 = 0;
    v373 = 10;
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_2_74();
    goto LABEL_16;
  }
  LOBYTE(v198) = 2;
  LOBYTE(v155) = 2;
  v14 = OUTLINED_FUNCTION_4_61();
  sub_242B9CA0C(v14, v15, v16, v17, v18, v19, v20, v21, v22);
  v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) + 152) + 16);
  if (-v23 > v10 || v23 <= v10)
  {
    v369 = 0uLL;
    v368 = v10;
    v370 = -1;
    *(_QWORD *)&v371[8] = 0;
    *(_QWORD *)&v371[16] = 0;
    *(_QWORD *)v371 = v23;
    v372 = -1;
    v373 = 4;
    OUTLINED_FUNCTION_11();
LABEL_16:
    sub_242A59264();
  }
  v25 = (v23 & (v10 >> 63)) + v10;
  at = v25;
  if (v11 <= 0.0)
  {
    OUTLINED_FUNCTION_11();
  }
  else
  {
    OUTLINED_FUNCTION_25_36();
    v27 = *(_BYTE *)(v26 + 160);
    v36 = OUTLINED_FUNCTION_31_38(v28, v29, v30, v31, v32, v33, v34, v35, v155, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/Loss.swift", 97, v198, 268, v227, v242, v256, v269, v284, v25,
            v315,
            v330,
            v342,
            v354,
            v355,
            v356,
            v357,
            v358,
            v359,
            v360,
            v361,
            v362,
            v363,
            v364,
            v365,
            v366,
            v367,
            v368);
    v37 = MEMORY[0x24BEE4AF8];
    HIBYTE(v316) = v27;
    OUTLINED_FUNCTION_30_30(v36, v38, v39, v40, v41, v42, v43, v44, v156, v170, v184, v199, v213, v228, v243, v257, v270, v285, ata,
      v316,
      MEMORY[0x24BEE4AF8],
      v343,
      v354,
      v355,
      v356,
      v357,
      v358,
      v359,
      v360,
      v361);
    v45 = OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_24_39(v45, (uint64_t)&unk_25137D8E0, v46, v47, v48, v49, v50, v51, v157, v171, v185, v200, v214, v229, v244, v258, v271, v286, atb,
      v317,
      v331);
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    v60 = OUTLINED_FUNCTION_53_15(v52, v53, v54, v55, v56, v57, v58, v59, v158, v172, v186, v201, v215, v230, v245, v259, v272, v287, atc,
            v318,
            v332,
            v344,
            v354,
            v355,
            v356,
            v357,
            v358,
            v359,
            v360,
            v361);
    v61 = v345;
    OUTLINED_FUNCTION_57_20(v60, v62, v63, v64, v65, v66, v67, v68, v159, v173, v187, v202, v216, v231, v246, v260, v273, v288, atd,
      v319,
      v333,
      v345,
      v354,
      v355,
      v356,
      v357,
      v358,
      v359,
      v360,
      v361,
      v362,
      v363,
      v364,
      v365,
      v366,
      v367,
      v368);
    v289 = a1;
    v69 = *(_QWORD *)(v2 + 16);
    v368 = *(_QWORD *)(v69 + 152);
    v70 = (float)TensorShape.subscript.getter(v25);
    OUTLINED_FUNCTION_25_36();
    v71 = *(_BYTE *)(v69 + 160);
    OUTLINED_FUNCTION_31_38(v72, v73, v74, v75, v76, v77, v78, v79, v160, v174, v188, v203, v217, v232, v247, v261, v274, v289, ate,
      v320,
      v334,
      v346,
      v354,
      v355,
      v356,
      v357,
      v358,
      v359,
      v360,
      v361,
      v362,
      v363,
      v364,
      v365,
      v366,
      v367,
      v368);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    v80 = OUTLINED_FUNCTION_0_16();
    *(_OWORD *)(v80 + 16) = xmmword_242C4B7D0;
    *(float *)(v80 + 32) = v70;
    HIBYTE(v321) = v71;
    v88 = OUTLINED_FUNCTION_30_30(v80, v81, v82, v83, v84, v85, v86, v87, v161, v175, v189, v204, v218, v233, 1, 2, v275, v290, atf,
            v321,
            v37,
            v347,
            v354,
            v355,
            v356,
            v357,
            v358,
            v359,
            v360,
            v361);
    OUTLINED_FUNCTION_24_39(v88, v89, v90, v91, v92, v93, v94, v95, v162, v176, v190, v205, v219, v234, v248, v262, v276, v291, atg,
      v322,
      v335);
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    v104 = OUTLINED_FUNCTION_53_15(v96, v97, v98, v99, v100, v101, v102, v103, v163, v177, v191, v206, v220, v235, v249, v263, v277, v292, ath,
             v323,
             v336,
             v348,
             v354,
             v355,
             v356,
             v357,
             v358,
             v359,
             v360,
             v361);
    OUTLINED_FUNCTION_57_20(v104, v105, v106, v107, v108, v109, v110, v111, v164, v178, v192, v207, v221, v236, v250, v264, v278, v293, ati,
      v324,
      v337,
      v349,
      v354,
      v355,
      v356,
      v357,
      v358,
      v359,
      v360,
      v361,
      v362,
      v363,
      v364,
      v365,
      v366,
      v367,
      v368);
    OUTLINED_FUNCTION_25_36();
    v112 = *(_BYTE *)(*(_QWORD *)(v2 + 16) + 160);
    OUTLINED_FUNCTION_31_38(v113, v114, v115, v116, v117, v118, v119, v120, v165, v179, v193, v208, v222, v237, v251, v265, v279, v294, atj,
      v325,
      v338,
      v350,
      v354,
      v355,
      v356,
      v357,
      v358,
      v359,
      v360,
      v361,
      v362,
      v363,
      v364,
      v365,
      v366,
      v367,
      v368);
    v121 = OUTLINED_FUNCTION_0_16();
    *(_OWORD *)(v121 + 16) = v252;
    *(float *)(v121 + 32) = v11;
    HIBYTE(v326) = v112;
    v129 = OUTLINED_FUNCTION_30_30(v121, v122, v123, v124, v125, v126, v127, v128, v166, v180, v194, v209, v223, v238, v252, *((uint64_t *)&v252 + 1), v280, v295, atk,
             v326,
             v37,
             v351,
             v354,
             v355,
             v356,
             v357,
             v358,
             v359,
             v360,
             v361);
    OUTLINED_FUNCTION_24_39(v129, v130, v131, v132, v133, v134, v135, v136, v167, v181, v195, v210, v224, v239, v253, v266, v281, v296, atl,
      v327,
      v339);
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    v145 = OUTLINED_FUNCTION_53_15(v137, v138, v139, v140, v141, v142, v143, v144, v168, v182, v196, v211, v225, v240, v254, v267, v282, v297, atm,
             v328,
             v340,
             v352,
             v354,
             v355,
             v356,
             v357,
             v358,
             v359,
             v360,
             v361);
    v146 = v353;
    OUTLINED_FUNCTION_57_20(v145, v147, v148, v149, v150, v151, v152, v153, v169, v183, v197, v212, v226, v241, v255, v268, v283, v298, atn,
      v329,
      v341,
      v353,
      v354,
      v355,
      v356,
      v357,
      v358,
      v359,
      v360,
      v361,
      v362,
      v363,
      v364,
      v365,
      v366,
      v367,
      v368);
    v361 = v61;
    static Tensor.- infix(_:_:)();
    static Tensor.* infix(_:_:)();
    OUTLINED_FUNCTION_157_0();
    v354 = v61;
    v368 = v146;
    static Tensor./ infix(_:_:)();
    static Tensor.+ infix(_:_:)();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_135();
    a1 = v299;
    swift_release();
    OUTLINED_FUNCTION_17_1();
    v12 = v368;
  }
  if (v13 == 2)
  {
    v361 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 152);
    TensorShape.removing(at:)(at);
    swift_bridgeObjectRelease();
  }
  v368 = v2;
  v361 = v12;
  LOBYTE(v354) = v13;
  basicSoftmaxCrossEntropy(logits:labels:axis:reduction:)(&v368, &v361, v10, (unsigned __int8 *)&v354, a1);
  return OUTLINED_FUNCTION_17_1();
}

uint64_t sub_242B9CA0C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, float a7, float a8, float a9)
{
  uint64_t v10;

  if (a8 > a7 || a7 > a9)
  {
    v10 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572298C8);
    sub_242B5A218(v10, a2, a3);
    sub_242B5A218(a4, a5, a6);
    sub_242A59264();
  }
  return result;
}

void sigmoidCrossEntropy(logits:labels:labelSmoothing:reduction:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v5;
  __int128 *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  float v19;
  float v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  const char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  _QWORD *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  char v440;
  char v441;
  char v442;
  uint64_t v443;
  char v444;
  char v445;
  char v446;
  uint64_t v447;
  char v448;
  char v449;
  char v450;
  uint64_t v451;
  char v452;
  char v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  int v500;
  char v501;
  char v502;
  uint64_t v503;

  v503 = *MEMORY[0x24BDAC8D0];
  v8 = *a1;
  v9 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  if (*(_QWORD *)(v9 + 16) < 2uLL)
  {
    OUTLINED_FUNCTION_41_30();
    __break(1u);
LABEL_14:
    *(_QWORD *)v6 = v9;
    *(__int128 *)((char *)v6 + 8) = xmmword_242C5A0C0;
    BYTE8(v498) = 0;
    *((_QWORD *)v6 + 4) = v5;
    *(__int128 *)((char *)v6 + 40) = xmmword_242C5A0D0;
    v501 = 0;
    v502 = 10;
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_2_74();
    sub_242A59264();
  }
  v6 = &v497;
  v11 = *a2;
  v12 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)(*a2 + 16) + 152);
  if ((sub_242C00B0C(*(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152), v5) & 1) == 0)
    goto LABEL_14;
  v235 = 329;
  LOBYTE(v219) = 2;
  v187 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/Loss.swift";
  v203 = 97;
  LOBYTE(v171) = 2;
  v13 = OUTLINED_FUNCTION_4_61();
  v22 = sub_242B9CA0C(v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v30 = MEMORY[0x24BEE4AF8];
  v267 = a4;
  if (a5 <= 0.0)
  {
    v127 = OUTLINED_FUNCTION_6();
  }
  else
  {
    v500 = 0;
    v498 = 0u;
    v499 = 0u;
    v497 = 0u;
    v31 = *(_BYTE *)(*(_QWORD *)(v8 + 16) + 160);
    v32 = OUTLINED_FUNCTION_11_46(v22, v23, v24, v25, v26, v27, v28, v29, v171, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/Loss.swift", 97, v219, 329, v251, a4, v284, v300, v312, v328,
            v344,
            v360,
            v376,
            v392,
            v408,
            v424,
            v440,
            v455,
            v462,
            v469,
            v476,
            v483,
            v490,
            0);
    HIBYTE(v285) = v31;
    OUTLINED_FUNCTION_9_58(v32, v33, v34, v35, v36, v37, v38, v39, v172, v188, v204, v220, v236, v252, v268, v285, v30, v313, v329,
      v345,
      v361,
      v377,
      v393,
      v409,
      v425,
      v441);
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_15_40();
    v48 = OUTLINED_FUNCTION_21_37(v40, v41, v42, v43, v44, v45, v46, v47, v173, v189, v205, v221, v237, v253, v269, v286, v301, v314, v330,
            v346,
            v362,
            v378,
            v394,
            v410,
            v426,
            v442);
    v49 = v315;
    OUTLINED_FUNCTION_23_40(v48, v50, v51, v52, v53, v54, v55, v56, v174, v190, v206, v222, v238, v254, v270, v287, v302, v315, v331,
      v347,
      v363,
      v379,
      v395,
      v411,
      v427,
      v443,
      v456,
      v463,
      v470,
      v477,
      v484,
      v491,
      v497);
    OUTLINED_FUNCTION_40_28();
    v58 = *(_BYTE *)(v57 + 160);
    v67 = OUTLINED_FUNCTION_11_46(v59, v60, v61, v62, v63, v64, v65, v66, v175, v191, v207, v223, v239, v255, v271, v288, v303, v316, v332,
            v348,
            v364,
            v380,
            v396,
            v412,
            v428,
            v444,
            v457,
            v464,
            v471,
            v478,
            v485,
            v492,
            v497);
    HIBYTE(v289) = v58;
    OUTLINED_FUNCTION_9_58(v67, v68, v69, v70, v71, v72, v73, v74, v176, v192, v208, v224, v240, v256, v272, v289, v30, v317, v333,
      v349,
      v365,
      v381,
      v397,
      v413,
      v429,
      v445);
    OUTLINED_FUNCTION_15_40();
    v83 = OUTLINED_FUNCTION_21_37(v75, v76, v77, v78, v79, v80, v81, v82, v177, v193, v209, v225, v241, v257, v273, v290, v304, v318, v334,
            v350,
            v366,
            v382,
            v398,
            v414,
            v430,
            v446);
    v84 = v319;
    OUTLINED_FUNCTION_23_40(v83, v85, v86, v87, v88, v89, v90, v91, v178, v194, v210, v226, v242, v258, v274, v291, v305, v319, v335,
      v351,
      v367,
      v383,
      v399,
      v415,
      v431,
      v447,
      v458,
      v465,
      v472,
      v479,
      v486,
      v493,
      v497);
    OUTLINED_FUNCTION_40_28();
    v93 = *(_BYTE *)(v92 + 160);
    OUTLINED_FUNCTION_11_46(v94, v95, v96, v97, v98, v99, v100, v101, v179, v195, v211, v227, v243, v259, v275, v292, v306, v320, v336,
      v352,
      v368,
      v384,
      v400,
      v416,
      v432,
      v448,
      v459,
      v466,
      v473,
      v480,
      v487,
      v494,
      v497);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    v102 = OUTLINED_FUNCTION_0_16();
    *(_OWORD *)(v102 + 16) = xmmword_242C4B7D0;
    *(float *)(v102 + 32) = a5;
    HIBYTE(v293) = v93;
    OUTLINED_FUNCTION_9_58(v102, v103, v104, v105, v106, v107, v108, v109, v180, v196, v212, v228, v244, v260, v276, v293, v30, v321, v337,
      v353,
      v369,
      v385,
      v401,
      v417,
      v433,
      v449);
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    v118 = OUTLINED_FUNCTION_21_37(v110, v111, v112, v113, v114, v115, v116, v117, v181, v197, v213, v229, v245, v261, v277, v294, v307, v322, v338,
             v354,
             v370,
             v386,
             v402,
             v418,
             v434,
             v450);
    v119 = v323;
    OUTLINED_FUNCTION_23_40(v118, v120, v121, v122, v123, v124, v125, v126, v182, v198, v214, v230, v246, v262, v278, v295, v308, v323, v339,
      v355,
      v371,
      v387,
      v403,
      v419,
      v435,
      v451,
      v460,
      v467,
      v474,
      v481,
      v488,
      v495,
      v497);
    *(_QWORD *)&v497 = v11;
    v440 = v84;
    static Tensor.- infix(_:_:)();
    v312 = v340;
    static Tensor.* infix(_:_:)();
    OUTLINED_FUNCTION_13_0();
    v328 = v84;
    *(_QWORD *)&v497 = v49;
    v300 = v119;
    static Tensor.* infix(_:_:)();
    OUTLINED_FUNCTION_26_40();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_17_5();
    v127 = OUTLINED_FUNCTION_8_1();
  }
  v500 = 0;
  v498 = 0u;
  v499 = 0u;
  v497 = 0u;
  v135 = *(_BYTE *)(*(_QWORD *)(v8 + 16) + 160);
  v136 = OUTLINED_FUNCTION_11_46(v127, v128, v129, v130, v131, v132, v133, v134, v171, (uint64_t)v187, v203, v219, v235, v251, v267, v284, v300, v312, v328,
           v344,
           v360,
           v376,
           v392,
           v408,
           v424,
           v440,
           v455,
           v462,
           v469,
           v476,
           v483,
           v490,
           0);
  HIBYTE(v296) = v135;
  OUTLINED_FUNCTION_9_58(v136, v137, v138, v139, v140, v141, v142, v143, v183, v199, v215, v231, v247, v263, v279, v296, v30, v324, v341,
    v356,
    v372,
    v388,
    v404,
    v420,
    v436,
    v452);
  OUTLINED_FUNCTION_15_40();
  v152 = OUTLINED_FUNCTION_21_37(v144, v145, v146, v147, v148, v149, v150, v151, v184, v200, v216, v232, v248, v264, v280, v297, v309, v325, v342,
           v357,
           v373,
           v389,
           v405,
           v421,
           v437,
           v453);
  v153 = v326;
  v161 = OUTLINED_FUNCTION_23_40(v152, v154, v155, v156, v157, v158, v159, v160, v185, v201, v217, v233, v249, v265, v281, v298, v310, v326, v343,
           v358,
           v374,
           v390,
           v406,
           v422,
           v438,
           v454,
           v461,
           v468,
           v475,
           v482,
           v489,
           v496,
           v497);
  OUTLINED_FUNCTION_35_24(v161, v162, v163, v164, v165, v166, v167, v168, v186, v202, v218, v234, v250, v266, v282, v299, v311, v327, v153,
    v359,
    v375,
    v391,
    v407,
    v423,
    v439,
    v8);
  max(_:_:)();
  v169 = v497;
  *(_QWORD *)&v497 = v8;
  static Tensor.- prefix(_:)((uint64_t *)&v497);
  max(_:_:)();
  OUTLINED_FUNCTION_135();
  v170 = v497;
  *(_QWORD *)&v497 = v169;
  static Tensor.* infix(_:_:)();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  *(_QWORD *)&v497 = v170;
  static Tensor.- prefix(_:)((uint64_t *)&v497);
  exp(_:)();
  OUTLINED_FUNCTION_50_0();
  log(onePlus:)();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_26_40();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_50_0();
  if (v12 == 2)
  {
    *v283 = v497;
  }
  else
  {
    if ((v12 & 1) != 0)
      Tensor.sum()();
    else
      Tensor.mean()();
    OUTLINED_FUNCTION_50_0();
  }
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_18_41();
}

void huberLoss(predicted:target:delta:reduction:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t *a4@<X8>, float a5@<S0>)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  char v164;
  uint64_t v165;
  __int128 v166;
  char v167;
  char v168;
  uint64_t v169;

  v169 = *MEMORY[0x24BDAC8D0];
  v7 = *a1;
  v8 = *a2;
  v9 = *a3;
  v10 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  v11 = *(_QWORD *)(*(_QWORD *)(*a2 + 16) + 152);
  if ((sub_242C00B0C(v10, v11) & 1) == 0)
  {
    v162 = v10;
    v163 = xmmword_242C5A0A0;
    v164 = 0;
    v165 = v11;
    v166 = xmmword_242C5A0B0;
    v167 = 0;
    v168 = 10;
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_2_74();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_36_25();
  v13 = *(_BYTE *)(v12 + 160);
  v22 = OUTLINED_FUNCTION_11_46(v14, v15, v16, v17, v18, v19, v20, v21, v116, v128, v140, v141, v142, v143, v144, v145, v146, v147, v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155,
          v156,
          v157,
          v158,
          v159,
          v160,
          v161,
          v162);
  v23 = MEMORY[0x24BEE4AF8];
  LOBYTE(v140) = v13;
  v31 = OUTLINED_FUNCTION_9_58(v22, v24, v25, v26, v27, v28, v29, v30, v117, v129, v140, MEMORY[0x24BEE4AF8], v142, v143, v144, v145, v146, v147, v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155);
  OUTLINED_FUNCTION_56_15(v31, (uint64_t)&unk_25137D980, v32, v33, v34, v35, v36, v37, v118, v130, v140, v141);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  v46 = OUTLINED_FUNCTION_21_37(v38, v39, v40, v41, v42, v43, v44, v45, v119, v131, v140, v141, v142, v143, v144, v145, v146, v147, v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155);
  v47 = v142;
  OUTLINED_FUNCTION_23_40(v46, v48, v49, v50, v51, v52, v53, v54, v120, v132, v140, v141, v142, v143, v144, v145, v146, v147, v148,
    v149,
    v150,
    v151,
    v152,
    v153,
    v154,
    v155,
    v156,
    v157,
    v158,
    v159,
    v160,
    v161,
    v162);
  OUTLINED_FUNCTION_36_25();
  v56 = *(_BYTE *)(v55 + 160);
  OUTLINED_FUNCTION_11_46(v57, v58, v59, v60, v61, v62, v63, v64, v121, v133, v140, v141, v142, v143, v144, v145, v146, v147, v148,
    v149,
    v150,
    v151,
    v152,
    v153,
    v154,
    v155,
    v156,
    v157,
    v158,
    v159,
    v160,
    v161,
    v162);
  v141 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(float *)(inited + 32) = a5;
  LOBYTE(v140) = v56;
  v73 = OUTLINED_FUNCTION_9_58(inited, v66, v67, v68, v69, v70, v71, v72, v122, v134, v140, v141, v142, v143, v144, v145, v146, v147, v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155);
  OUTLINED_FUNCTION_56_15(v73, v74, v75, v76, v77, v78, v79, v80, v123, v135, v140, v141);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  v89 = OUTLINED_FUNCTION_21_37(v81, v82, v83, v84, v85, v86, v87, v88, v124, v136, v140, v141, v142, v143, v144, v145, v146, v147, v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155);
  v90 = v142;
  v98 = OUTLINED_FUNCTION_23_40(v89, v91, v92, v93, v94, v95, v96, v97, v125, v137, v140, v141, v142, v143, v144, v145, v146, v147, v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155,
          v156,
          v157,
          v158,
          v159,
          v160,
          v161,
          v162);
  OUTLINED_FUNCTION_35_24(v98, v99, v100, v101, v102, v103, v104, v105, v126, v138, v140, v141, v142, v143, v144, v145, v146, v147, v7,
    v149,
    v150,
    v151,
    v152,
    v153,
    v154,
    v8);
  static Tensor.- infix(_:_:)();
  v106 = v162;
  abs(_:)();
  OUTLINED_FUNCTION_35_24(v107, v108, v109, v110, v111, v112, v113, v114, v127, v139, v140, v141, v142, v143, v144, v145, v146, v147, v90,
    v149,
    v150,
    v151,
    v152,
    v153,
    v154,
    v162);
  static Tensor..> infix(_:_:)();
  v115 = v162;
  v162 = v47;
  v155 = v106;
  Tensor.squared()();
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v148 = v106;
  OUTLINED_FUNCTION_59_16();
  v142 = v47;
  Tensor.squared()();
  OUTLINED_FUNCTION_48_25();
  OUTLINED_FUNCTION_135();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_135();
  v140 = v115;
  v141 = v47;
  Tensor.replacing(with:where:)(&v141, &v140, (uint64_t)&v162);
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_19_5();
  if (v9 == 2)
  {
    *a4 = v162;
  }
  else
  {
    if ((v9 & 1) != 0)
      OUTLINED_FUNCTION_17_38();
    else
      OUTLINED_FUNCTION_16_39();
    OUTLINED_FUNCTION_157_0();
  }
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_18_41();
}

uint64_t cosineSimilarity(predicted:target:reduction:)@<X0>(_QWORD *a1@<X8>)
{
  const char *v1;
  const char *v2;
  uint64_t v3;
  const char **v5;
  unsigned __int8 *v6;
  const char *v7;
  const char *v8;
  int v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  const char *v28;
  const char *v29;
  _BYTE v30[24];
  _BYTE v31[24];
  __int128 v32;
  char v33;
  char v34;

  OUTLINED_FUNCTION_51_24();
  if ((unint64_t)(v7 - 3) < 0xFFFFFFFFFFFFFFFELL)
  {
    v29 = v7;
    *(_OWORD *)v30 = xmmword_242C5A0A0;
    v30[16] = 0;
    *(_OWORD *)v31 = xmmword_242C4B7D0;
    v31[16] = 1;
    v34 = 7;
    OUTLINED_FUNCTION_2_74();
    goto LABEL_21;
  }
  v8 = *v5;
  v9 = *v6;
  if ((OUTLINED_FUNCTION_37_27(*((_QWORD *)*v5 + 2)) & 1) == 0)
  {
    v29 = v1;
    *(_OWORD *)v30 = xmmword_242C5A0A0;
    v30[16] = 0;
    *(_QWORD *)v31 = v3;
    *(_OWORD *)&v31[8] = xmmword_242C5A0B0;
    LOBYTE(v32) = 0;
    v34 = 10;
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_2_74();
    goto LABEL_21;
  }
  if (*(unsigned __int8 *)(*((_QWORD *)v2 + 2) + 160) != *(unsigned __int8 *)(*((_QWORD *)v8 + 2) + 160))
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_49_19();
    sub_242C21A14();
    v29 = v8;
    *(_QWORD *)v30 = v2;
    *(_OWORD *)&v30[8] = xmmword_242C5A0A0;
    v31[0] = 0;
    *(_QWORD *)&v31[8] = v24;
    *(_QWORD *)&v31[16] = v25;
    v32 = xmmword_242C5A0B0;
    v33 = 0;
    v34 = 0;
    OUTLINED_FUNCTION_2_74();
LABEL_21:
    sub_242A59264();
  }
  if (v9 == 2 || (v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_60_17();
    OUTLINED_FUNCTION_55_16();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_28_40();
    OUTLINED_FUNCTION_135();
    v10 = v29;
    v28 = v8;
    OUTLINED_FUNCTION_60_17();
    v27 = v29;
    OUTLINED_FUNCTION_55_16();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_28_40();
    v11 = OUTLINED_FUNCTION_135();
    v16 = v29;
    if (*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v2 + 2) + 152) + 16) == 1)
    {
      v28 = v2;
      v17 = OUTLINED_FUNCTION_44_23(v11, v12, v13, v14, v15);
      v2 = v29;
    }
    else
    {
      v17 = OUTLINED_FUNCTION_5();
    }
    if (*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v8 + 2) + 152) + 16) == 1)
    {
      v28 = v8;
      OUTLINED_FUNCTION_44_23(v17, v18, v19, v20, v21);
      v8 = v29;
    }
    else
    {
      OUTLINED_FUNCTION_6();
    }
    v29 = v2;
    v27 = v8;
    matmul(_:transposed:_:transposed:)(&v29, 0, &v27, 1, (uint64_t *)&v28);
    v26 = &unk_25137D9A8;
    v27 = v28;
    Tensor.reshaped(to:)((uint64_t *)&v26, (uint64_t *)&v29);
    OUTLINED_FUNCTION_50_0();
    v22 = v29;
    v27 = v16;
    v28 = v10;
    OUTLINED_FUNCTION_59_16();
    v27 = v29;
    v28 = v22;
    static Tensor./ infix(_:_:)();
    if (v9 == 2)
    {
      *a1 = v29;
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_50_0();
      return swift_release();
    }
    else
    {
      if ((v9 & 1) != 0)
        Tensor.sum()();
      else
        Tensor.mean()();
      OUTLINED_FUNCTION_19_5();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_50_0();
      return OUTLINED_FUNCTION_157_0();
    }
  }
  else
  {
    result = OUTLINED_FUNCTION_41_30();
    __break(1u);
  }
  return result;
}

unint64_t sub_242B9D5B0()
{
  unint64_t result;

  result = qword_2572298B8;
  if (!qword_2572298B8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LossReduction, &type metadata for LossReduction);
    atomic_store(result, (unint64_t *)&qword_2572298B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LossReduction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242B9D638 + 4 * byte_242C5A0E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242B9D66C + 4 * byte_242C5A0E0[v4]))();
}

uint64_t sub_242B9D66C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B9D674(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242B9D67CLL);
  return result;
}

uint64_t sub_242B9D688(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242B9D690);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242B9D694(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242B9D69C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LossReduction()
{
  return &type metadata for LossReduction;
}

unint64_t sub_242B9D6B8()
{
  unint64_t result;

  result = qword_2572298C0;
  if (!qword_2572298C0)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LossReduction, &type metadata for LossReduction);
    atomic_store(result, (unint64_t *)&qword_2572298C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_61()
{
  return 0x6F6D536C6562616CLL;
}

uint64_t OUTLINED_FUNCTION_8_50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  return sub_242A66290((uint64_t)&a18, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_9_58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  return sub_242A66290((uint64_t)&a26, (uint64_t)&a19);
}

uint64_t OUTLINED_FUNCTION_11_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  return sub_242A66290((uint64_t)&a33, (uint64_t)&a26);
}

void OUTLINED_FUNCTION_13_50()
{
  static Tensor.- infix(_:_:)();
}

void OUTLINED_FUNCTION_15_40()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_16_39()
{
  return Tensor.mean()();
}

uint64_t OUTLINED_FUNCTION_17_38()
{
  return Tensor.sum()();
}

uint64_t OUTLINED_FUNCTION_20_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return sub_242A662D8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_21_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  return sub_242A662D8((uint64_t)&a26);
}

uint64_t OUTLINED_FUNCTION_22_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  return sub_242A662D8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_23_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  return sub_242A662D8((uint64_t)&a33);
}

char *OUTLINED_FUNCTION_24_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  return &a21;
}

double OUTLINED_FUNCTION_25_36()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)v0 = 0u;
  return result;
}

void OUTLINED_FUNCTION_26_40()
{
  static Tensor.+ infix(_:_:)();
}

void OUTLINED_FUNCTION_27_32()
{
  max(_:_:)();
}

void OUTLINED_FUNCTION_28_40()
{
  sqrt(_:)();
}

uint64_t OUTLINED_FUNCTION_30_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  return sub_242A66290((uint64_t)&a30, (uint64_t)&a23);
}

uint64_t OUTLINED_FUNCTION_31_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return sub_242A66290((uint64_t)&a37, (uint64_t)&a30);
}

void OUTLINED_FUNCTION_33_28()
{
  static Tensor.+ infix(_:_:)();
}

void OUTLINED_FUNCTION_34_29()
{
  static Tensor.- infix(_:_:)();
}

char *OUTLINED_FUNCTION_35_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  return &a26;
}

double OUTLINED_FUNCTION_36_25()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_37_27@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_242C00B0C(v1, *(_QWORD *)(a1 + 152));
}

double OUTLINED_FUNCTION_40_28()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)v0 = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_30()
{
  return sub_242C48F5C();
}

double OUTLINED_FUNCTION_42_24()
{
  return 0.0;
}

double OUTLINED_FUNCTION_43_27()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_44_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return Tensor.reshaped(toRank:)(2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_45_20()
{
  static Tensor.* infix(_:_:)();
}

void OUTLINED_FUNCTION_46_22()
{
  log(_:)();
}

void OUTLINED_FUNCTION_48_25()
{
  static Tensor.* infix(_:_:)();
}

double OUTLINED_FUNCTION_52_13()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_53_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  return sub_242A662D8((uint64_t)&a30);
}

uint64_t OUTLINED_FUNCTION_55_16()
{
  return Tensor.sum()();
}

char *OUTLINED_FUNCTION_56_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t OUTLINED_FUNCTION_57_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return sub_242A662D8((uint64_t)&a37);
}

void OUTLINED_FUNCTION_59_16()
{
  static Tensor.* infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_60_17()
{
  return Tensor.squared()();
}

uint64_t sub_242B9D9E8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 62)
  {
LABEL_13:
    sub_242C480E0();
    v2 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = 0;
  if (v2)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v3, a1);
      else
        swift_retain();
      v4 = sub_242B89308();
      v5 = sub_242B89308();
      swift_release();
      if (v4 == v5)
        break;
      v6 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_13;
      }
      ++v3;
      if (v6 == v2)
      {
        v3 = 0;
        break;
      }
    }
  }
  swift_release();
  return v3;
}

uint64_t sub_242B9DB00(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;

  v1 = a1;
  v18 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_21;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v17 = v1 & 0xC000000000000001;
      v4 = v1 & 0xFFFFFFFFFFFFFF8;
      while (v17)
      {
        MEMORY[0x2494EC84C](v3, v1);
LABEL_7:
        v5 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_20;
        v6 = v1;
        sub_242BC9724();
        v8 = v7;
        v10 = v9;
        sub_242BC9724();
        if (v8 == v12 && v10 == v11)
        {
          swift_bridgeObjectRelease_n();
LABEL_15:
          sub_242C48D4C();
          sub_242C48D88();
          sub_242C48D94();
          sub_242C48D64();
          goto LABEL_16;
        }
        v14 = sub_242C4925C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
          goto LABEL_15;
        swift_release();
LABEL_16:
        v1 = v6;
        ++v3;
        if (v5 == v2)
        {
          v15 = v18;
          goto LABEL_23;
        }
      }
      if (v3 < *(_QWORD *)(v4 + 16))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      v2 = sub_242C48FC8();
      if (!v2)
        goto LABEL_22;
    }
    swift_retain();
    goto LABEL_7;
  }
LABEL_22:
  v15 = MEMORY[0x24BEE4AF8];
LABEL_23:
  swift_release();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_242B9DCC4()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 48), *(_BYTE *)(*(_QWORD *)(v0 + 40) + 160));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9DD0C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(*(_QWORD *)(v0 + 40) + 152), *(_BYTE *)(v0 + 48));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9DD54()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9DD98()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9DDDC()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(*(_QWORD *)(v0 + 40) + 152), *(_BYTE *)(*(_QWORD *)(v0 + 40) + 160));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9DE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_28_41();
  v8 = *v7;
  if (!v6)
    v4 = OUTLINED_FUNCTION_18_42();
  *(_DWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v6;
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 120) = v2;
  *(_QWORD *)(v1 + 128) = v0;
  OUTLINED_FUNCTION_20_44(v4, v1 + 56);
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B9DE6C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_22_34();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 120));
}

uint64_t sub_242B9DE90()
{
  sub_242B9DE6C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReshapeOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9DED0()
{
  return sub_242B9FB20();
}

void sub_242B9DEEC()
{
  sub_242C4817C();
  OUTLINED_FUNCTION_3_67();
}

void sub_242B9DF24()
{
  sub_242B9DEEC();
}

uint64_t sub_242B9DF44(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v12 = *a5;
  if (!a3)
    a1 = OUTLINED_FUNCTION_18_42();
  *(_DWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v13 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v13 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v13 + 32) = a4;
  OUTLINED_FUNCTION_7();
  *(_QWORD *)(v8 + 48) = v17;
  *(_QWORD *)(v8 + 56) = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v14 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  v15 = *(_BYTE *)(a4 + 160);
  *(_QWORD *)(v14 + 32) = v12;
  *(_BYTE *)(v14 + 40) = v15;
  *(_QWORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 136) = a7;
  *(_QWORD *)(v8 + 144) = a8;
  OUTLINED_FUNCTION_38_25(v14, v8 + 72);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_44_0();
  return v8;
}

uint64_t sub_242B9E01C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_22_34();
  OUTLINED_FUNCTION_31_39();
  OUTLINED_FUNCTION_35_25();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 136));
}

uint64_t sub_242B9E048()
{
  sub_242B9E01C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BroadcastOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9E088()
{
  return 0x73616364616F7262;
}

uint64_t sub_242B9E0A4()
{
  return sub_242C480E0();
}

void sub_242B9E0B0()
{
  OUTLINED_FUNCTION_32_31();
  OUTLINED_FUNCTION_3_67();
}

void sub_242B9E0E8()
{
  sub_242B9E0B0();
}

void sub_242B9E108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_28_41();
  v8 = *v7;
  if (!v6)
    v4 = sub_242BD0204(1953718627, 0xE400000000000000);
  v9 = OUTLINED_FUNCTION_24_40(v4, v5, v6);
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 120) = v2;
  *(_QWORD *)(v1 + 128) = v0;
  OUTLINED_FUNCTION_20_44(v9, v1 + 56);
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B9E15C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 120));
}

uint64_t sub_242B9E17C()
{
  sub_242B9E15C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CastOperation()
{
  return objc_opt_self();
}

void sub_242B9E1C0(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v2;
  OUTLINED_FUNCTION_10_43((__n128 *)a1, *(__n128 *)(v1 + 88));
}

uint64_t sub_242B9E1E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  sub_242A6548C(v1);
  return v1;
}

void sub_242B9E210()
{
  sub_242C4817C();
  OUTLINED_FUNCTION_2_46();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9E240()
{
  sub_242B9E210();
}

uint64_t sub_242B9E260(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
    return 0x6C41726568746167;
  if (a3 == 1)
    return 0x726568746167;
  return 0x6E5F726568746167;
}

uint64_t sub_242B9E2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B9E260(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_242B9E2CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0x726568746167;
  if (*(_BYTE *)(v0 + 56) != 1)
    v1 = 0x6E5F726568746167;
  if (*(_BYTE *)(v0 + 56))
    return v1;
  else
    return 0x6C41726568746167;
}

void sub_242B9E334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_21_1();
}

void sub_242B9E384()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9E3C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_242B9E334();
  v1 = v0;
  swift_retain();
  sub_242B9DB00(v1);
  OUTLINED_FUNCTION_21_1();
}

void sub_242B9E404(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v16 = a11;
  v17 = *a9;
  v18 = *((_BYTE *)a9 + 8);
  if (!a3)
  {
    v19 = a8;
    v20 = a7;
    a1 = sub_242B9E5FC(a4, a5, a6);
    v16 = a11;
    a7 = v20;
    a8 = v19;
  }
  *(_DWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_BYTE *)(v12 + 56) = a6;
  *(_QWORD *)(v12 + 64) = a7;
  *(_QWORD *)(v12 + 72) = a8;
  *(_QWORD *)(v12 + 80) = v17;
  *(_BYTE *)(v12 + 88) = v18;
  *(_QWORD *)(v12 + 96) = v16;
  *(_QWORD *)(v12 + 104) = a12;
  sub_242A56808(a10, v12 + 112);
  OUTLINED_FUNCTION_16_40();
}

uint64_t sub_242B9E4A4(char a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&v8);
  swift_release();
  v3 = v10;
  v2 = v11;
  OUTLINED_FUNCTION_44_0();
  sub_242A5DC30((uint64_t)&v8);
  if ((a1 & 1) != 0)
    v4 = 0x646F72706D7563;
  else
    v4 = 0x6D75736D7563;
  if ((a1 & 1) != 0)
    v5 = 0xE700000000000000;
  else
    v5 = 0xE600000000000000;
  type metadata accessor for TensorOperationIdentityGenerator();
  v6 = sub_242C2BBCC();
  if (v2)
  {
    v8 = v3;
    v9 = v2;
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_13_51();
    sub_242C48314();
    OUTLINED_FUNCTION_13_51();
    sub_242C491CC();
    sub_242C48314();
    OUTLINED_FUNCTION_34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v4;
    v9 = v5;
    sub_242C480E0();
    OUTLINED_FUNCTION_13_51();
    sub_242C491CC();
    sub_242C48314();
    OUTLINED_FUNCTION_34();
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_242B9E5FC(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&v10);
  swift_release();
  v5 = v12;
  v4 = v13;
  sub_242C480E0();
  sub_242A5DC30((uint64_t)&v10);
  if (a3)
  {
    if (a3 == 1)
      v6 = 0x726568746167;
    else
      v6 = 0x6E5F726568746167;
    if (a3 == 1)
      v7 = 0xE600000000000000;
    else
      v7 = 0xE900000000000064;
  }
  else
  {
    v7 = 0xEF73697841676E6FLL;
    v6 = 0x6C41726568746167;
  }
  type metadata accessor for TensorOperationIdentityGenerator();
  v8 = sub_242C2BBCC();
  if (v4)
  {
    v10 = v5;
    v11 = v4;
    sub_242C480E0();
    sub_242C48314();
    sub_242C48314();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v6;
    v11 = v7;
    sub_242C480E0();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_242B9E7B8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&v11);
  swift_release();
  v4 = v13;
  v3 = v14;
  sub_242C480E0();
  v5 = sub_242A5DC30((uint64_t)&v11);
  v6 = sub_242B9EA6C(v5, a2);
  v8 = v7;
  type metadata accessor for TensorOperationIdentityGenerator();
  v9 = sub_242C2BBCC();
  if (v3)
  {
    v11 = v4;
    v12 = v3;
    sub_242C480E0();
    sub_242C48314();
    sub_242C48314();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v6;
    v12 = v8;
    sub_242C480E0();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_242B9E924()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 96));
}

uint64_t sub_242B9E958()
{
  sub_242B9E924();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GatherOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9E9A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242B9E9D8()
{
  sub_242B9E2CC();
  sub_242C4817C();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_2_46();
  return sub_242C4934C();
}

uint64_t sub_242B9EA4C()
{
  return sub_242B9E9D8();
}

uint64_t sub_242B9EA6C(uint64_t a1, char a2)
{
  if (!a2)
    return 0xD000000000000012;
  if (a2 == 1)
    return 0x72657474616373;
  return 0x5F72657474616373;
}

uint64_t sub_242B9EACC(uint64_t a1)
{
  uint64_t v1;

  return sub_242B9EA6C(a1, *(_BYTE *)(v1 + 8));
}

void sub_242B9EAD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7E0;
  v2 = v0[8];
  *(_QWORD *)(v1 + 32) = v0[7];
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0[9];
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_5();
  swift_retain();
  OUTLINED_FUNCTION_21_1();
}

void sub_242B9EB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_21_1();
}

void sub_242B9EB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v16 = *a9;
  v17 = *a10;
  v18 = *((_BYTE *)a10 + 8);
  if (!a3)
    a1 = sub_242B9E7B8(a4, a5);
  v19 = OUTLINED_FUNCTION_24_40(a1, a2, a3);
  *(_QWORD *)(v13 + 40) = a4;
  *(_BYTE *)(v13 + 48) = a5;
  *(_QWORD *)(v13 + 56) = v20;
  *(_QWORD *)(v13 + 64) = v21;
  *(_QWORD *)(v13 + 72) = v22;
  *(_BYTE *)(v13 + 80) = v16;
  *(_QWORD *)(v13 + 88) = v17;
  *(_BYTE *)(v13 + 96) = v18;
  *(_QWORD *)(v13 + 104) = v23;
  *(_QWORD *)(v13 + 112) = a13;
  OUTLINED_FUNCTION_38_25(v19, v13 + 120);
  OUTLINED_FUNCTION_16_40();
}

uint64_t sub_242B9EC2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 104));
}

uint64_t sub_242B9EC68()
{
  sub_242B9EC2C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScatterOperation()
{
  return objc_opt_self();
}

__n128 sub_242B9ECB4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 168);
  v3 = *(_BYTE *)(v1 + 176);
  v4 = *(_BYTE *)(v1 + 177);
  v5 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 152);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_242B9ECE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242B9ED18()
{
  sub_242B2ED20();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_28();
  sub_242C4934C();
  return sub_242A5CB30();
}

uint64_t sub_242B9ED8C()
{
  return sub_242B9ED18();
}

void sub_242B9EDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v14;
  char v15;

  v14 = *a7;
  v15 = *((_BYTE *)a7 + 8);
  if (!a3)
    a1 = sub_242BD0204(0x7461636E6F63, 0xE600000000000000);
  *(_DWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_BYTE *)(v10 + 56) = a6 & 1;
  *(_QWORD *)(v10 + 64) = v14;
  *(_BYTE *)(v10 + 72) = v15;
  *(_QWORD *)(v10 + 80) = a9;
  *(_QWORD *)(v10 + 88) = a10;
  OUTLINED_FUNCTION_33_29(a1, v10 + 96);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B9EE30()
{
  sub_242B9FC44((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
  OUTLINED_FUNCTION_23_41();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcatOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9EE70()
{
  return 0x7461636E6F63;
}

uint64_t sub_242B9EE84()
{
  OUTLINED_FUNCTION_0_3();
  return sub_242C480E0();
}

void sub_242B9EEB4()
{
  sub_242B9FB74();
}

uint64_t sub_242B9EED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  uint64_t result;

  v4 = (unint64_t *)(v2 + 40);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_5();
  v5 = sub_242C480E0();
  v6 = sub_242B9D9E8(v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return (v8 & 1) == 0;
  OUTLINED_FUNCTION_0_3();
  v9 = *v4;
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v9;
  if (!(_DWORD)result || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
    sub_242B4B47C(v9);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = a2;
    swift_release();
    sub_242C4856C();
    swift_endAccess();
    return (v8 & 1) == 0;
  }
  __break(1u);
  return result;
}

void sub_242B9EFD4()
{
  sub_242C4817C();
  sub_242C4934C();
  sub_242C49358();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9F014()
{
  sub_242B9EFD4();
}

void sub_242B9F034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  char v14;

  v13 = *a6;
  v14 = *((_BYTE *)a6 + 8);
  if (!a3)
    a1 = sub_242BD0204(0x736F70736E617274, 0xE900000000000065);
  *(_DWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 56) = v13;
  *(_BYTE *)(v9 + 64) = v14;
  *(_QWORD *)(v9 + 72) = a8;
  *(_QWORD *)(v9 + 80) = a9;
  OUTLINED_FUNCTION_33_29(a1, v9 + 88);
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242B9F0B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_22_34();
  OUTLINED_FUNCTION_31_39();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 72));
}

uint64_t sub_242B9F0DC()
{
  sub_242B9F0B4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransposeOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9F11C()
{
  return 0x736F70736E617274;
}

uint64_t sub_242B9F13C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  sub_242A6548C(v1);
  return v1;
}

void sub_242B9F16C()
{
  sub_242B9F914();
}

void sub_242B9F1A4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    sub_242C4934C();
    OUTLINED_FUNCTION_3_67();
  }
  else
  {
    sub_242C4934C();
    OUTLINED_FUNCTION_26_41();
    OUTLINED_FUNCTION_1_0();
  }
}

uint64_t sub_242B9F1E8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
    return (a4 & 1) == 0 && a1 == a3;
  if ((a4 & 1) != 0)
    return sub_242C00B0C(a1, a3);
  else
    return 0;
}

uint64_t sub_242B9F210(uint64_t a1, char a2)
{
  sub_242C49340();
  sub_242C4934C();
  if ((a2 & 1) != 0)
    sub_242C02D08();
  else
    OUTLINED_FUNCTION_26_41();
  return sub_242C49394();
}

uint64_t sub_242B9F280()
{
  uint64_t v0;

  return sub_242B9F210(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_242B9F28C(uint64_t a1)
{
  uint64_t v1;

  sub_242B9F1A4(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_242B9F298()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_242C49340();
  sub_242C4934C();
  if (v1 == 1)
    sub_242C02D08();
  else
    sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242B9F30C(uint64_t a1, uint64_t a2)
{
  return sub_242B9F1E8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

void sub_242B9F328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  if (!a3)
    a1 = sub_242BD0204(0x74696C7073, 0xE500000000000000);
  *(_DWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  *(_QWORD *)(v11 + 48) = a5;
  *(_BYTE *)(v11 + 56) = a6 & 1;
  *(_QWORD *)(v11 + 64) = a7;
  *(_QWORD *)(v11 + 72) = a8;
  *(_QWORD *)(v11 + 80) = a10;
  *(_QWORD *)(v11 + 88) = a11;
  OUTLINED_FUNCTION_38_25(a1, v11 + 96);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242B9F3A8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  sub_242B9B678(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 80));
}

uint64_t sub_242B9F3DC()
{
  sub_242B9F3A8();
  OUTLINED_FUNCTION_23_41();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SplitOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9F414()
{
  return 0x74696C7073;
}

void sub_242B9F428()
{
  uint64_t v0;

  sub_242C4817C();
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    OUTLINED_FUNCTION_37_28();
    sub_242C02D08();
  }
  else
  {
    OUTLINED_FUNCTION_37_28();
    OUTLINED_FUNCTION_26_41();
  }
}

void sub_242B9F49C()
{
  sub_242B9F428();
}

void sub_242B9F4BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  if (!a3)
    a1 = sub_242BD0204(1802530676, 0xE400000000000000);
  *(_DWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  v13 = *(_QWORD *)(a4 + 152);
  v14 = *(_QWORD *)(v13 + 16);
  swift_retain();
  sub_242C480E0();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if (v14)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_242B4B43C();
  v13 = v18;
  if (!v14)
    goto LABEL_8;
LABEL_5:
  if (v14 <= *(_QWORD *)(v13 + 16))
  {
    *(_QWORD *)(v13 + 8 * v14 + 24) = a5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
    v15 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v15 + 16) = xmmword_242C4B7F0;
    v16 = *(_BYTE *)(a4 + 160);
    *(_QWORD *)(v15 + 32) = v13;
    *(_BYTE *)(v15 + 40) = v16;
    *(_QWORD *)(v15 + 48) = v13;
    *(_BYTE *)(v15 + 56) = 2;
    sub_242C480E0();
    v17 = swift_release();
    *(_QWORD *)(v8 + 56) = v15;
    *(_QWORD *)(v8 + 64) = a7;
    *(_QWORD *)(v8 + 72) = a8;
    OUTLINED_FUNCTION_20_44(v17, v8 + 80);
    OUTLINED_FUNCTION_12_0();
    return;
  }
LABEL_9:
  __break(1u);
}

BOOL sub_242B9F5C0(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_242B9F5CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_31_39();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 64));
}

uint64_t sub_242B9F5F0()
{
  sub_242B9F5CC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TopKOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9F630()
{
  return 1802530676;
}

uint64_t sub_242B9F640()
{
  return sub_242C480E0();
}

BOOL sub_242B9F648(uint64_t a1)
{
  return sub_242B9F5C0(a1);
}

void sub_242B9F660()
{
  sub_242C4817C();
  OUTLINED_FUNCTION_2_46();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9F690()
{
  sub_242B9F660();
}

void sub_242B9F6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242B9F700()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  swift_release();
  OUTLINED_FUNCTION_35_25();
  return v0;
}

uint64_t sub_242B9F728()
{
  sub_242B9F700();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TopKGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9F768()
{
  return 0x6172675F6B706F74;
}

void sub_242B9F788()
{
  OUTLINED_FUNCTION_32_31();
  OUTLINED_FUNCTION_2_46();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9F7C0()
{
  sub_242B9F788();
}

void sub_242B9F7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v13;

  if (!a3)
    a1 = sub_242BD0204(0x65737265766572, 0xE700000000000000);
  v13 = OUTLINED_FUNCTION_24_40(a1, a2, a3);
  v8[5] = a4;
  v8[6] = a5;
  v8[7] = a7;
  v8[8] = a8;
  OUTLINED_FUNCTION_20_44(v13, (uint64_t)(v8 + 9));
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B9F844()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_22_34();
  return OUTLINED_FUNCTION_15_41(*(_QWORD *)(v0 + 56));
}

uint64_t sub_242B9F868()
{
  sub_242B9F844();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReverseOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9F8A8()
{
  return 0x65737265766572;
}

void sub_242B9F8C4(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 16) = v2;
  OUTLINED_FUNCTION_10_43((__n128 *)a1, *(__n128 *)(v1 + 104));
}

uint64_t sub_242B9F8E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_242A6548C(v1);
  return v1;
}

void sub_242B9F914()
{
  sub_242C4817C();
  OUTLINED_FUNCTION_3_67();
}

void sub_242B9F938()
{
  sub_242B9F914();
}

void sub_242B9F96C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9F9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v7 = *a5;
  v8 = *((_BYTE *)a5 + 8);
  if (!a3)
    a1 = sub_242BD0204(0x6F72657A5F6E6F6ELL, 0xE800000000000000);
  v9 = OUTLINED_FUNCTION_24_40(a1, a2, a3);
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = v7;
  *(_BYTE *)(v5 + 56) = v8;
  OUTLINED_FUNCTION_33_29(v9, v5 + 64);
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242B9FA10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_22_34();
  return v0;
}

uint64_t sub_242B9FA30()
{
  sub_242B9FA10();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NonZeroIndicesOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9FA70()
{
  return 0x6F72657A5F6E6F6ELL;
}

__n128 sub_242B9FA8C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_BYTE *)(v1 + 120);
  v4 = *(_BYTE *)(v1 + 121);
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 96);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

void sub_242B9FAB8()
{
  sub_242C4817C();
  sub_242C02D08();
  OUTLINED_FUNCTION_2_46();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9FB00()
{
  sub_242B9FAB8();
}

uint64_t sub_242B9FB20()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  return v0;
}

void sub_242B9FB74()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(OUTLINED_FUNCTION_5_4() + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_26_20(*(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9FBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v14;
  char v15;

  if (!a3)
    a1 = sub_242BD0204(0x7261705F646E6162, 0xE900000000000074);
  v14 = OUTLINED_FUNCTION_24_40(a1, a2, a3);
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 56) = a6;
  v15 = *(_BYTE *)(a4 + 160);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a4 + 152);
  *(_BYTE *)(v9 + 72) = v15;
  OUTLINED_FUNCTION_20_44(v14, v9 + 96);
  *(_QWORD *)(v9 + 80) = a8;
  *(_QWORD *)(v9 + 88) = a9;
  sub_242C480E0();
  OUTLINED_FUNCTION_12_0();
}

void sub_242B9FC44(void (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_14_18();
  a1(*(_QWORD *)(v1 + 40));
  OUTLINED_FUNCTION_35_25();
  OUTLINED_FUNCTION_15_41(*(_QWORD *)(v1 + 80));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242B9FC74()
{
  sub_242B9FC44((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
  OUTLINED_FUNCTION_23_41();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BandPartOperation()
{
  return objc_opt_self();
}

uint64_t sub_242B9FCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_242B9B684(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_242B9FCF8(uint64_t a1)
{
  return sub_242B9B678(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_242B9FD08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_242B9B684(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_242B9B678(v5, v6);
  return a1;
}

uint64_t sub_242B9FD58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_242B9B678(v5, v6);
  return a1;
}

void type metadata accessor for SplitOperation.SplitKind()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t getEnumTagSinglePayload for ScalarTypeExpectation(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScalarTypeExpectation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_242B9FE24(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for ScatterOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for GatherOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

unint64_t sub_242B9FE48()
{
  unint64_t result;

  result = qword_25722A378;
  if (!qword_25722A378)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5A608, &unk_25138B690);
    atomic_store(result, (unint64_t *)&qword_25722A378);
  }
  return result;
}

uint64_t sub_242B9FE84()
{
  return 0x7261705F646E6162;
}

void sub_242B9FEA0(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v2;
  OUTLINED_FUNCTION_10_43((__n128 *)a1, *(__n128 *)(v1 + 128));
}

void sub_242B9FEBC()
{
  OUTLINED_FUNCTION_32_31();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C02D08();
  OUTLINED_FUNCTION_26_41();
  OUTLINED_FUNCTION_1_0();
}

void sub_242B9FF14()
{
  sub_242B9FEBC();
}

void sub_242B9FF34(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_2572281E8, type metadata accessor for BandPartOperation, (uint64_t)&unk_242C5ACE4);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B9FF70(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_2572281F0, type metadata accessor for NonZeroIndicesOperation, (uint64_t)&unk_242C5A734);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B9FFAC(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A380, type metadata accessor for NonZeroIndicesOperation, (uint64_t)&unk_242C5A6F0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242B9FFE8(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228208, type metadata accessor for ReverseOperation, (uint64_t)&unk_242C5AC74);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0024(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_2572298B0, type metadata accessor for TopKGradientOperation, (uint64_t)&unk_242C5A814);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0060(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A388, type metadata accessor for TopKGradientOperation, (uint64_t)&unk_242C5A7D0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA009C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_2572281E0, type metadata accessor for TopKOperation, (uint64_t)&unk_242C5AC58);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA00D8(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228200, type metadata accessor for SplitOperation, (uint64_t)&unk_242C5A910);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0114(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A390, type metadata accessor for SplitOperation, (uint64_t)&unk_242C5A8B0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0150(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257227088, type metadata accessor for TransposeOperation, (uint64_t)&unk_242C5AD00);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA018C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228228, type metadata accessor for ConcatOperation, (uint64_t)&unk_242C5AA0C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA01C8(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A398, type metadata accessor for ConcatOperation, (uint64_t)&unk_242C5A9AC);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0204(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228210, type metadata accessor for ScatterOperation, (uint64_t)&unk_242C5AC90);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0240(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228218, type metadata accessor for GatherOperation, (uint64_t)&unk_242C5ACAC);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA027C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228220, type metadata accessor for CastOperation, (uint64_t)&unk_242C5AD38);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA02B8(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228230, type metadata accessor for BroadcastOperation, (uint64_t)&unk_242C5ACC8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA02F4(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257228238, type metadata accessor for ReshapeOperation, (uint64_t)&unk_242C5AD1C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0330(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3A0, type metadata accessor for TopKOperation, (uint64_t)&unk_242C5A840);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA036C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3A8, type metadata accessor for ReverseOperation, (uint64_t)&unk_242C5A760);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA03A8(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3B0, type metadata accessor for ScatterOperation, (uint64_t)&unk_242C5AA38);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA03E4(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3B8, type metadata accessor for GatherOperation, (uint64_t)&unk_242C5AAA8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0420(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3C0, type metadata accessor for BroadcastOperation, (uint64_t)&unk_242C5AB88);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA045C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3C8, type metadata accessor for BandPartOperation, (uint64_t)&unk_242C5A680);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0498(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3D0, type metadata accessor for TransposeOperation, (uint64_t)&unk_242C5A93C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA04D4(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3D8, type metadata accessor for ReshapeOperation, (uint64_t)&unk_242C5ABF8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BA0510(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722A3E0, type metadata accessor for CastOperation, (uint64_t)&unk_242C5AB18);
  *(_QWORD *)(a1 + 8) = v2;
}

void OUTLINED_FUNCTION_3_67()
{
  sub_242C02D08();
}

void OUTLINED_FUNCTION_10_43(__n128 *a1@<X8>, __n128 a2@<Q0>)
{
  unint64_t v2;
  unsigned __int8 v3;
  unsigned __int8 v4;

  a1[2] = a2;
  a1[3].n128_u64[0] = v2;
  a1[3].n128_u8[8] = v3;
  a1[3].n128_u8[9] = v4;
}

uint64_t OUTLINED_FUNCTION_13_51()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_15_41(uint64_t a1)
{
  uint64_t v1;

  sub_242A6549C(a1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_18_42()
{
  return sub_242BD0204(0x65706168736572, 0xE700000000000000);
}

uint64_t OUTLINED_FUNCTION_20_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A56808(v2, a2);
}

uint64_t OUTLINED_FUNCTION_22_34()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_41()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_40(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_DWORD *)(v3 + 16) = result;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_41()
{
  return sub_242C4934C();
}

uint64_t OUTLINED_FUNCTION_31_39()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_31()
{
  return sub_242C4817C();
}

uint64_t OUTLINED_FUNCTION_33_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A56808(v2, a2);
}

uint64_t OUTLINED_FUNCTION_35_25()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_37_28()
{
  return sub_242C4934C();
}

uint64_t OUTLINED_FUNCTION_38_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A56808(v2, a2);
}

uint64_t sub_242BA0670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v3 = v12;
    v4 = a1 + 32;
    type metadata accessor for AnyLayerVariablePathCache();
    do
    {
      v5 = sub_242C480E0();
      sub_242BA14C4(v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
      sub_242BA6BF0((unint64_t *)&qword_257224A68, MEMORY[0x24BEE12B0]);
      v6 = sub_242C48194();
      v8 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_242AC315C();
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_242BA07DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = sub_242C480E0();
    v5 = MEMORY[0x24BEE4AF8];
    v6 = (unint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      sub_242C480E0();
      sub_242C482F0();
      sub_242C483C8();
      v9 = sub_242C48A88();
      v11 = v10;
      swift_bridgeObjectRelease();
      sub_242C480E0();
      sub_242BBBCF4(1, v7, v8);
      v23 = v12;
      v24 = v13;
      sub_242BA6AFC();
      sub_242C480E0();
      sub_242C482FC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v9;
      v15 = v11;
      v16 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0)
        v16 = v9 & 0xFFFFFFFFFFFFLL;
      if (v16 && (sub_242AFCE44(v9, v11, a2), (v17 & 1) == 0))
      {
        if ((sub_242C4838C() & 1) != 0)
        {
          sub_242BA6B38();
          sub_242BA6B74();
          sub_242C48860();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v14 = v23;
          v15 = v24;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_242A5E0B4();
          v5 = v20;
        }
        v18 = *(_QWORD *)(v5 + 16);
        if (v18 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          sub_242A5E0B4();
          v5 = v21;
        }
        *(_QWORD *)(v5 + 16) = v18 + 1;
        v19 = v5 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v14;
        *(_QWORD *)(v19 + 40) = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v6 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_242BA0AA8()
{
  sub_242C48B78();
  sub_242C48E30();
  return sub_242C48E6C();
}

void Layer.namedLayerStateKeyPaths(recursively:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_49_20(v0, v1, v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_63_15(v4, v13);
  v5 = OUTLINED_FUNCTION_94_8();
  v6 = MEMORY[0x2494EDE24](&unk_242C52AB0, v5);
  OUTLINED_FUNCTION_66_16(v6, v7, v8, v9);
  OUTLINED_FUNCTION_20_45();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_97_8();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_18_43();
}

void sub_242BA0CC8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_45_21(a1);
  OUTLINED_FUNCTION_43_7(*(_QWORD *)(v1 - 192));
  JUMPOUT(0x242BA0CD4);
}

void sub_242BA0DC0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_136();
  *(_OWORD *)(v0 - 160) = *(_OWORD *)(v0 - 144);
  OUTLINED_FUNCTION_55_17();
  v1 = OUTLINED_FUNCTION_42_25();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE2620], v1);
  OUTLINED_FUNCTION_69_13();
  OUTLINED_FUNCTION_33_30();
  OUTLINED_FUNCTION_78_9();
  OUTLINED_FUNCTION_72_1();
  OUTLINED_FUNCTION_3_6();
  JUMPOUT(0x242BA0E24);
}

uint64_t type metadata accessor for AnyLayerVariablePathCache()
{
  return objc_opt_self();
}

void Layer.value<A>(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[18];
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_17_17();
  v19 = v0;
  v20 = v1;
  v3 = v2;
  v5 = v4;
  v7 = *(_QWORD *)(*v6 + *MEMORY[0x24BEE46A8] + 8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v18 - v9;
  v12 = *v11;
  v18[2] = *v11;
  v18[3] = v7;
  v18[4] = v13;
  v18[5] = v14;
  v15 = sub_242C48B54();
  if ((v16 & 1) != 0)
  {
    swift_getAtKeyPath();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v15);
    v18[-8] = v12;
    v18[-7] = v7;
    v18[-6] = v5;
    v18[-5] = v3;
    v18[-4] = v17;
    v18[-3] = sub_242BA322C;
    v18[-2] = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
    OUTLINED_FUNCTION_92_8();
    sub_242BA1484();
  }
}

void Layer.updateValue<A>(_:for:)(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(_BYTE *, _QWORD);
  _BYTE v11[32];

  v6 = *a1;
  v7 = *(_QWORD *)(*a2 + *MEMORY[0x24BEE2B70] + 8);
  v8 = sub_242C48B54();
  if ((v9 & 1) != 0)
  {
    v10 = (void (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
    sub_242BA2558(v6, v7, a3, a4);
    v10(v11, 0);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25722A3F8);
    OUTLINED_FUNCTION_92_8();
    sub_242BA1484();
  }
}

void Layer.namedParameterKeyPaths(recursively:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_49_20(v0, v1, v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_63_15(v4, v13);
  v5 = OUTLINED_FUNCTION_94_8();
  v6 = MEMORY[0x2494EDE24](&unk_242C52AB0, v5);
  OUTLINED_FUNCTION_66_16(v6, v7, v8, v9);
  OUTLINED_FUNCTION_20_45();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_97_8();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_18_43();
}

void sub_242BA12F8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_45_21(a1);
  OUTLINED_FUNCTION_43_7(*(_QWORD *)(v1 - 192));
  JUMPOUT(0x242BA1304);
}

void sub_242BA13F0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_136();
  *(_OWORD *)(v0 - 160) = *(_OWORD *)(v0 - 144);
  OUTLINED_FUNCTION_55_17();
  v1 = OUTLINED_FUNCTION_42_25();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE2620], v1);
  OUTLINED_FUNCTION_69_13();
  OUTLINED_FUNCTION_33_30();
  OUTLINED_FUNCTION_78_9();
  OUTLINED_FUNCTION_72_1();
  OUTLINED_FUNCTION_3_6();
  JUMPOUT(0x242BA1454);
}

void sub_242BA1484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_56_16();
  v2 = MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_23_42(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  if (v0)
    OUTLINED_FUNCTION_68_13();
  OUTLINED_FUNCTION_79_9();
}

void sub_242BA14C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242A706AC((uint64_t)&unk_25137B2A0);
  v3 = v2;
  sub_242C480E0();
  sub_242BA07DC(a1, v3);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_21_1();
}

void Layer.parameterKeyPaths(recursively:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_54_16(v0, v1, v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_62_15(v4, v5);
  OUTLINED_FUNCTION_95_8();
  OUTLINED_FUNCTION_13_29();
}

void sub_242BA16E0(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_41_31(a1);
  OUTLINED_FUNCTION_43_7(*(_QWORD *)(v1 - 168));
  JUMPOUT(0x242BA16ECLL);
}

void Layer.parameters(recursively:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242BA17DC(a1, a2, a3, (void (*)(void))Layer.parameterKeyPaths(recursively:));
}

void Layer.layerStates(recursively:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242BA17DC(a1, a2, a3, (void (*)(void))Layer.layerStateKeyPaths(recursively:));
}

void sub_242BA17DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  OUTLINED_FUNCTION_75_10();
  sub_242C48E30();
  sub_242C48650();
  OUTLINED_FUNCTION_13_29();
}

uint64_t sub_242BA183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v10 = sub_242A7DAD0(v8, (uint64_t)&v12, v9, (uint64_t)&type metadata for Tensor, MEMORY[0x24BEE4078], a1, MEMORY[0x24BEE40A8], a8);
  swift_bridgeObjectRelease();
  return v10;
}

void Layer.layerStateKeyPaths(recursively:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_54_16(v0, v1, v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_62_15(v4, v5);
  OUTLINED_FUNCTION_95_8();
  OUTLINED_FUNCTION_13_29();
}

void sub_242BA1A64(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_41_31(a1);
  OUTLINED_FUNCTION_43_7(*(_QWORD *)(v1 - 168));
  JUMPOUT(0x242BA1A70);
}

void sub_242BA1B28(unint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *a1;
  sub_242BA26F0();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v5 >= *(_QWORD *)(v6 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }
  v7 = v6 + 16 * v5;
  v8 = *(_QWORD *)(v7 + 40);
  v13 = *(_QWORD *)(v7 + 32);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  sub_242BA0AA8();
  sub_242C48E30();
  sub_242C48680();
  swift_bridgeObjectRelease();
  sub_242AFCF9C(v5, *(_QWORD *)(a2 + 56));
  if ((v9 & 1) != 0)
  {
    v10 = sub_242C48B54();
    if ((v11 & 1) != 0)
    {
      swift_getAtKeyPath();
      v12 = ~*(_QWORD *)(v14 + 32) & 0xF000000000000007;
      swift_release();
      if (!v12)
        goto LABEL_6;
    }
    else
    {
      MEMORY[0x24BDAC7A8](v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
      sub_242BA1484();
      if ((v15 & 1) == 0)
      {
LABEL_6:
        swift_release();
        swift_bridgeObjectRelease();
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
        return;
      }
    }
  }
  *a3 = v13;
  a3[1] = v8;
  a3[2] = v14;
}

void sub_242BA1CFC(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v5 = *a1;
  sub_242BA0AA8();
  sub_242C48E30();
  sub_242C48680();
  swift_bridgeObjectRelease();
  v6 = v11;
  sub_242AFCF9C(v5, *(_QWORD *)(a2 + 56));
  if ((v7 & 1) != 0)
  {
    v8 = sub_242C48B54();
    if ((v9 & 1) == 0)
    {
      MEMORY[0x24BDAC7A8](v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
      sub_242BA1484();
      if ((v12 & 1) != 0)
        goto LABEL_7;
      goto LABEL_6;
    }
    swift_getAtKeyPath();
    v10 = ~*(_QWORD *)(v11 + 32) & 0xF000000000000007;
    swift_release();
    if (!v10)
    {
LABEL_6:
      swift_release();
      v6 = 0;
    }
  }
LABEL_7:
  *a3 = v6;
}

uint64_t sub_242BA1E74@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (~*(_QWORD *)(*(_QWORD *)result + 32) & 0xF000000000000007) != 0;
  return result;
}

void sub_242BA1E90(unint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = *a1;
  sub_242BA26F0();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v5 >= *(_QWORD *)(v6 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }
  v7 = v6 + 16 * v5;
  v8 = *(_QWORD *)(v7 + 40);
  v13 = *(_QWORD *)(v7 + 32);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  sub_242BA0AA8();
  sub_242C48E30();
  sub_242C48680();
  swift_bridgeObjectRelease();
  sub_242AFCF9C(v5, *(_QWORD *)(a2 + 56));
  if ((v9 & 1) != 0)
  {
    v10 = sub_242C48B54();
    if ((v11 & 1) != 0)
    {
      swift_getAtKeyPath();
      v12 = ~*(_QWORD *)(v15 + 32) & 0xF000000000000007;
      swift_release();
      if (!v12)
        goto LABEL_6;
    }
    else
    {
      MEMORY[0x24BDAC7A8](v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
      sub_242BA1484();
      if ((v14 & 1) == 0)
      {
LABEL_6:
        swift_release();
        swift_bridgeObjectRelease();
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
        return;
      }
    }
  }
  *a3 = v13;
  a3[1] = v8;
  a3[2] = v15;
}

void sub_242BA2064(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t v12;

  v5 = *a1;
  sub_242BA0AA8();
  sub_242C48E30();
  sub_242C48680();
  swift_bridgeObjectRelease();
  v6 = v12;
  sub_242AFCF9C(v5, *(_QWORD *)(a2 + 56));
  if ((v7 & 1) != 0)
  {
    v8 = sub_242C48B54();
    if ((v9 & 1) == 0)
    {
      MEMORY[0x24BDAC7A8](v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
      sub_242BA1484();
      if ((v11 & 1) != 0)
        goto LABEL_7;
      goto LABEL_6;
    }
    swift_getAtKeyPath();
    v10 = ~*(_QWORD *)(v12 + 32) & 0xF000000000000007;
    swift_release();
    if (!v10)
    {
LABEL_6:
      swift_release();
      v6 = 0;
    }
  }
LABEL_7:
  *a3 = v6;
}

void sub_242BA21DC(uint64_t a1)
{
  if (qword_257220590 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for LayerVariablePaths();
}

uint64_t sub_242BA22F4(uint64_t a1, _DWORD *a2, char a3, int a4)
{
  uint64_t result;

  if (swift_dynamicCastMetatype() && swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype() && swift_dynamicCastMetatype())
  {
    goto LABEL_5;
  }
  if ((a3 & 1) == 0)
    return 0;
  if (OUTLINED_FUNCTION_17_19())
    return OUTLINED_FUNCTION_17_19() == 0;
  if (OUTLINED_FUNCTION_17_19() || (result = OUTLINED_FUNCTION_17_19()) != 0)
  {
LABEL_5:
    *a2 |= a4;
    return 1;
  }
  return result;
}

void type metadata accessor for LayerVariablePaths()
{
  JUMPOUT(0x2494EDD88);
}

void sub_242BA23F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  OUTLINED_FUNCTION_71_10();
  swift_allocObject();
  sub_242BA27A0(v15, v13, v11, v9, v7, v5, v3, v1);
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242BA246C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BYTE *v6;
  unsigned __int8 v7;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 64) + 16) || *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16))
    return 0;
  if (qword_257220590 != -1)
    swift_once();
  swift_retain();
  sub_242B5AFB4();
  OUTLINED_FUNCTION_75_10();
  sub_242BA2D24(v3, v4, v5, v6);
  v1 = v7;
  sub_242B5AFD4();
  swift_release();
  return v1;
}

uint64_t sub_242BA2558@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X5>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v11;

  if (((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3) & 1) != 0)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 8))(&v11, a2, a3);
    v8 = v11;
  }
  else
  {
    v8 = 0;
  }
  v11 = a1;
  v9 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16);
  swift_retain();
  result = v9(&v11, a2, a3);
  *a4 = v8;
  return result;
}

uint64_t sub_242BA25FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;
  uint64_t result;

  result = a3(a1 + a2);
  if (v10)
    *a10 = v10;
  return result;
}

uint64_t sub_242BA2630(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v13 = *(_QWORD *)(a6 - 8);
  v14 = MEMORY[0x24BDAC7A8]();
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v14 + v17, v18);
  a3(v16);
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, a6);
  if (v10)
    *a10 = v10;
  return result;
}

void sub_242BA26F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + 32))
  {
    v1 = sub_242C480E0();
    v2 = sub_242BA0670(v1);
    OUTLINED_FUNCTION_3_6();
    *(_QWORD *)(v0 + 32) = v2;
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_34();
  }
  sub_242C480E0();
  OUTLINED_FUNCTION_21_1();
}

BOOL sub_242BA2760()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16) != 0;
}

void sub_242BA2774(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_242BA1E90(a1, *(_QWORD *)(v2 + 16), a2);
}

BOOL sub_242BA278C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 64) + 16) != 0;
}

_QWORD *sub_242BA27A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  _QWORD *v34;
  _BYTE v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v9 = v8;
  v9[4] = 0;
  sub_242C48E30();
  sub_242C48B78();
  v9[2] = sub_242C48E6C();
  v9[3] = a2;
  v9[7] = a3;
  v9[8] = a4;
  v43 = a1;
  v39 = a5;
  v40 = a6;
  v41 = a7;
  v42 = a8;
  v36 = a7;
  v37 = a8;
  KeyPath = swift_getKeyPath();
  v18 = sub_242C48650();
  v19 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v18);
  v21 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242BA6C50, (uint64_t)v35, v18, MEMORY[0x24BEE1768], MEMORY[0x24BEE4078], v19, MEMORY[0x24BEE40A8], v20);
  swift_release();
  v9[5] = v21;
  v43 = a1;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a6;
  v22[3] = a7;
  v22[4] = a8;
  v29 = a5;
  v30 = a6;
  v31 = a7;
  v32 = a8;
  v33 = sub_242BA6C74;
  v34 = v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572283E0);
  v25 = sub_242A7DAD0((void (*)(char *, uint64_t))sub_242BA6C98, (uint64_t)v28, v18, v23, MEMORY[0x24BEE4078], v19, MEMORY[0x24BEE40A8], v24);
  swift_bridgeObjectRelease();
  swift_release();
  v9[6] = v25;
  return v9;
}

uint64_t sub_242BA2968()
{
  swift_retain();
  swift_getAtKeyPath();
  return swift_release();
}

uint64_t sub_242BA29C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242BA2A0C()
{
  sub_242BA29C0();
  OUTLINED_FUNCTION_71_10();
  return swift_deallocClassInstance();
}

uint64_t sub_242BA2A24()
{
  sub_242C4934C();
  sub_242C4934C();
  return sub_242C49358();
}

uint64_t sub_242BA2A68(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  _BOOL4 v7;

  v7 = a1 == a4 && a2 == a5;
  return v7 & (a3 ^ a6 ^ 1u);
}

uint64_t sub_242BA2A84()
{
  sub_242C49340();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C49358();
  return sub_242C49394();
}

uint64_t sub_242BA2AF0()
{
  return sub_242BA2A84();
}

uint64_t sub_242BA2AFC()
{
  return sub_242BA2A24();
}

uint64_t sub_242BA2B08()
{
  sub_242C49340();
  sub_242C4934C();
  sub_242C4934C();
  sub_242C49358();
  return OUTLINED_FUNCTION_78();
}

uint64_t sub_242BA2B68(uint64_t a1, uint64_t a2)
{
  return sub_242BA2A68(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_242BA2B84()
{
  uint64_t result;

  type metadata accessor for UnfairLock();
  swift_allocObject();
  result = sub_242B5AF3C();
  qword_25722A3E8 = result;
  return result;
}

void *sub_242BA2BC0()
{
  void *result;

  type metadata accessor for AnyLayerVariablePathCache();
  sub_242BA6A44();
  result = (void *)sub_242C480BC();
  off_25722A3F0 = result;
  return result;
}

uint64_t sub_242BA2C08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, _QWORD *a4@<X8>)
{
  char v8;
  uint64_t result;

  if (qword_257220598 != -1)
    swift_once();
  swift_beginAccess();
  if (*((_QWORD *)off_25722A3F0 + 2))
  {
    sub_242A6141C(a1, a2, a3 & 1);
    if ((v8 & 1) != 0)
    {
      swift_endAccess();
      type metadata accessor for LayerVariablePaths();
    }
  }
  result = swift_endAccess();
  *a4 = 0;
  return result;
}

uint64_t sub_242BA2D24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  if (qword_257220598 != -1)
    swift_once();
  swift_beginAccess();
  v8 = swift_retain();
  sub_242B8C854(v8, a1, a2, a3 & 1);
  result = swift_endAccess();
  *a4 = 1;
  return result;
}

uint64_t sub_242BA2DE8(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_242BA2E04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;

  OUTLINED_FUNCTION_12_42();
  sub_242C480E0();
  sub_242C4817C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_90_8();
  v10 = v9 << v8;
  v12 = v11 & ~(v9 << v8);
  OUTLINED_FUNCTION_8_22();
  if ((v13 & 1) == 0)
  {
LABEL_16:
    OUTLINED_FUNCTION_108();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_242C480E0();
    sub_242BA4C00(a2, a3, v12, isUniquelyReferenced_nonNull_native);
    *v3 = v22;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    goto LABEL_17;
  }
  v14 = *(_QWORD *)(v4 + 48);
  OUTLINED_FUNCTION_85_10(v14 + 16 * v12);
  v16 = v16 && v15 == a3;
  if (!v16 && (OUTLINED_FUNCTION_19_0() & 1) == 0)
  {
    v17 = ~v10;
    do
    {
      v12 = (v12 + 1) & v17;
      OUTLINED_FUNCTION_8_22();
      if ((v18 & 1) == 0)
        goto LABEL_16;
      OUTLINED_FUNCTION_85_10(v14 + 16 * v12);
      v20 = v16 && v19 == a3;
    }
    while (!v20 && (OUTLINED_FUNCTION_19_0() & 1) == 0);
  }
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_61_16(*v3);
LABEL_17:
  OUTLINED_FUNCTION_24();
}

uint64_t sub_242BA2F30(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[9];

  v3 = v2;
  v6 = *v2;
  sub_242C49340();
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD **)(a2 + 40);
  v10 = *(unsigned __int8 *)(a2 + 48);
  v49 = *(_QWORD *)(a2 + 8);
  v50 = *(_QWORD *)a2;
  v51 = *(_QWORD *)(a2 + 16);
  sub_242BB5924((uint64_t)v52, *(_QWORD *)a2, v49);
  v48 = v7;
  sub_242C4934C();
  sub_242C4934C();
  sub_242C02D08();
  sub_242C4934C();
  v11 = sub_242C49394();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  v14 = v6 + 56;
  v47 = a1;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v6 + 48);
    v17 = v49;
    v18 = v50;
    v19 = v48;
    do
    {
      v20 = (uint64_t *)(v16 + 56 * v13);
      if (*((unsigned __int8 *)v20 + 48) != v10)
        goto LABEL_31;
      v21 = (_QWORD *)v20[5];
      v22 = v21[2];
      if (v22 != v9[2])
        goto LABEL_31;
      v24 = *v20;
      v23 = v20[1];
      v25 = v20[2];
      v26 = v20[3];
      if (v22)
        v27 = v21 == v9;
      else
        v27 = 1;
      v28 = v20[4];
      if (!v27)
      {
        if (v21[4] != v9[4])
          goto LABEL_31;
        if (v22 != 1)
        {
          if (v21[5] != v9[5])
            goto LABEL_31;
          v33 = v21 + 6;
          v34 = v22 - 2;
          v35 = v9 + 6;
          while (v34)
          {
            v37 = *v33++;
            v36 = v37;
            v38 = *v35++;
            --v34;
            if (v36 != v38)
              goto LABEL_31;
          }
        }
      }
      if (v28 == v8 && v26 == v19 && v24 == v18 && *(_QWORD *)(v23 + 16) == *(_QWORD *)(v17 + 16) && v25 == v51)
      {
        v32 = sub_242C01228(v23, v17);
        v19 = v48;
        v17 = v49;
        v18 = v50;
        if ((v32 & 1) != 0)
        {
          sub_242BA6AC8(a2);
          v41 = *(_QWORD *)(*v3 + 48) + 56 * v13;
          v42 = *(_QWORD *)(v41 + 8);
          v43 = *(_QWORD *)(v41 + 32);
          v44 = *(_QWORD *)(v41 + 40);
          v45 = *(_BYTE *)(v41 + 48);
          *(_QWORD *)v47 = *(_QWORD *)v41;
          *(_QWORD *)(v47 + 8) = v42;
          *(_OWORD *)(v47 + 16) = *(_OWORD *)(v41 + 16);
          *(_QWORD *)(v47 + 32) = v43;
          *(_QWORD *)(v47 + 40) = v44;
          *(_BYTE *)(v47 + 48) = v45;
          swift_retain();
          OUTLINED_FUNCTION_28_1();
          return 0;
        }
      }
LABEL_31:
      v13 = (v13 + 1) & v15;
    }
    while (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  v39 = OUTLINED_FUNCTION_53_16();
  v52[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_242A77170(a2);
  sub_242BA4D98(a2, v13, v39);
  *v3 = v52[0];
  swift_bridgeObjectRelease();
  v40 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v47 = *(_OWORD *)a2;
  *(_OWORD *)(v47 + 16) = v40;
  *(_OWORD *)(v47 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(v47 + 48) = *(_BYTE *)(a2 + 48);
  return 1;
}

void sub_242BA31C0()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_22_35();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_89_8();
    if (v3)
      goto LABEL_8;
    while (1)
    {
      OUTLINED_FUNCTION_11_47();
      if ((v4 & 1) == 0)
        break;
      OUTLINED_FUNCTION_89_8();
      if (v3)
        goto LABEL_8;
    }
  }
  OUTLINED_FUNCTION_53_16();
  v5 = OUTLINED_FUNCTION_35_26();
  sub_242BA5018(v5, v6, v7);
  OUTLINED_FUNCTION_6_65(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
LABEL_8:
  *v1 = v0;
  OUTLINED_FUNCTION_8();
}

void sub_242BA322C()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BA3260(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242BA2630(a1, *(_QWORD *)(v2 + 48), *(void (**)(char *))(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&type metadata for Tensor, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_242BA329C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_242BA2558(v1[6], v1[3], v1[5], a1);
}

void sub_242BA32BC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t))(v2 + 56))(a1 + *(_QWORD *)(v2 + 48));
  if (v3)
    *a2 = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242BA32F4(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_242BA1B28(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242BA3310(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_242BA1CFC(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_242BA3328()
{
  sub_242BA3360();
}

void sub_242BA3344()
{
  sub_242BA3360();
}

void sub_242BA3360()
{
  Layer.value<A>(for:)();
  OUTLINED_FUNCTION_1_0();
}

void sub_242BA338C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_242BA2064(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_242BA33A4()
{
  return swift_initClassMetadata2();
}

void sub_242BA33D8(_BYTE *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = a2 & 1;
  OUTLINED_FUNCTION_12_42();
  v6 = v5 + 1;
  sub_242C49370();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_90_8();
  v10 = v9 & ~(v8 << v7);
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_13;
  if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v10))
    v11 = 2;
  else
    v11 = 1;
  if (v11 != v6)
  {
    OUTLINED_FUNCTION_11_47();
    if ((v15 & 1) != 0)
    {
      do
      {
        v16 = *(_BYTE *)(v13 + v10) ? 2 : 1;
        if (v16 == v6)
          goto LABEL_6;
        v10 = (v10 + 1) & v14;
      }
      while (((*(_QWORD *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
LABEL_13:
    v17 = OUTLINED_FUNCTION_53_16();
    v27 = *v2;
    *v2 = 0x8000000000000000;
    sub_242BA5138(v5, v10, v17);
    OUTLINED_FUNCTION_6_65(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
    goto LABEL_14;
  }
LABEL_6:
  LOBYTE(v5) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v10);
LABEL_14:
  *a1 = v5;
  OUTLINED_FUNCTION_42_12();
}

void sub_242BA34E8()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_22_35();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_89_8();
    if (v3)
      goto LABEL_8;
    while (1)
    {
      OUTLINED_FUNCTION_11_47();
      if ((v4 & 1) == 0)
        break;
      OUTLINED_FUNCTION_89_8();
      if (v3)
        goto LABEL_8;
    }
  }
  OUTLINED_FUNCTION_53_16();
  v5 = OUTLINED_FUNCTION_35_26();
  sub_242BA52BC(v5, v6, v7);
  OUTLINED_FUNCTION_6_65(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
LABEL_8:
  *v1 = v0;
  OUTLINED_FUNCTION_8();
}

void sub_242BA3554(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_12_42();
  sub_242C480E0();
  sub_242C480E0();
  OUTLINED_FUNCTION_75_10();
  sub_242C4817C();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_90_8();
  v12 = v11 << v10;
  v14 = v13 & ~v12;
  if (((*(_QWORD *)(v5 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v5 + 48);
    while (1)
    {
      v17 = v16 + 24 * v14;
      if (*(_DWORD *)v17 == a2)
      {
        v18 = *(_QWORD *)(v17 + 8) == a3 && *(_QWORD *)(v17 + 16) == a4;
        if (v18 || (OUTLINED_FUNCTION_36_26() & 1) != 0)
          break;
      }
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_10;
    }
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_108();
    v30 = *(_QWORD *)(*(_QWORD *)v4 + 48) + 24 * v14;
    v32 = *(_QWORD *)(v30 + 8);
    v31 = *(_QWORD *)(v30 + 16);
    *(_DWORD *)a1 = *(_DWORD *)v30;
    *(_QWORD *)(a1 + 8) = v32;
    *(_QWORD *)(a1 + 16) = v31;
    sub_242C480E0();
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_53_16();
    OUTLINED_FUNCTION_34_30();
    OUTLINED_FUNCTION_75_10();
    sub_242BA53DC(v19, v20, v21, v14, v5);
    OUTLINED_FUNCTION_6_65(v22, v23, v24, v25, v26, v27, v28, v29, a1, v34);
    *(_DWORD *)v33 = a2;
    *(_QWORD *)(v33 + 8) = a3;
    *(_QWORD *)(v33 + 16) = a4;
  }
  OUTLINED_FUNCTION_24();
}

void sub_242BA36A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_75_10();
  sub_242C4817C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_90_8();
  v10 = v9 << v8;
  v12 = v11 & ~(v9 << v8);
  OUTLINED_FUNCTION_8_22();
  if ((v13 & 1) == 0)
  {
LABEL_16:
    OUTLINED_FUNCTION_53_16();
    OUTLINED_FUNCTION_34_30();
    sub_242BA5580(a2, a3, v12, v4);
    OUTLINED_FUNCTION_6_65(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
    *a1 = a2;
    a1[1] = a3;
    goto LABEL_17;
  }
  v4 = *(_QWORD *)(v4 + 48);
  OUTLINED_FUNCTION_85_10(v4 + 16 * v12);
  v15 = v15 && v14 == a3;
  if (!v15 && (OUTLINED_FUNCTION_36_26() & 1) == 0)
  {
    v16 = ~v10;
    do
    {
      v12 = (v12 + 1) & v16;
      OUTLINED_FUNCTION_8_22();
      if ((v17 & 1) == 0)
        goto LABEL_16;
      OUTLINED_FUNCTION_85_10(v4 + 16 * v12);
      v19 = v15 && v18 == a3;
    }
    while (!v19 && (OUTLINED_FUNCTION_36_26() & 1) == 0);
  }
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_61_16(*v3);
LABEL_17:
  OUTLINED_FUNCTION_42_12();
}

uint64_t sub_242BA378C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A7C0);
  result = sub_242C48C20();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = *(_QWORD *)(v2 + 56);
    v27 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & v6;
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if ((v8 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
      sub_242C49340();
      sub_242C49370();
      result = sub_242C49394();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v21) = v17;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v27[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v27[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v27[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_242BA2DE8(0, (unint64_t)(v26 + 63) >> 6, v27);
              else
                *v27 = -1 << v26;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v27[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v27[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_242BA3A4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A590);
  v3 = sub_242C48C20();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_242C49340();
      sub_242C4817C();
      result = sub_242C49394();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_242BA2DE8(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_242BA3D24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A820);
  result = sub_242C48C20();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v39 = (_QWORD *)(v2 + 56);
    v40 = v2;
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v37 = v1;
    v38 = (unint64_t)(v6 + 63) >> 6;
    v9 = result + 56;
    v41 = result;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v44 = (v8 - 1) & v8;
    v45 = v5;
    for (i = __clz(__rbit64(v8)) | (v5 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
    {
      v15 = *(_QWORD *)(v2 + 48) + 56 * i;
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(_QWORD *)(v15 + 24);
      v42 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 32);
      v46 = *(_QWORD *)(v15 + 40);
      v47 = *(_BYTE *)(v15 + 48);
      sub_242C49340();
      v43 = v16;
      sub_242C4934C();
      v48 = v17;
      v20 = *(_QWORD *)(v17 + 16);
      if (v20)
      {
        for (j = 0; j != v20; ++j)
        {
          v22 = *(_QWORD *)(v48 + 32 + 16 * j);
          sub_242C4934C();
          v23 = *(_QWORD *)(v22 + 16);
          if (v23)
          {
            v24 = v22 + 32;
            do
            {
              v24 += 8;
              sub_242C4934C();
              --v23;
            }
            while (v23);
          }
          sub_242C4934C();
        }
      }
      sub_242C4934C();
      sub_242C4934C();
      v25 = *(_QWORD *)(v46 + 16);
      sub_242C4934C();
      if (v25)
      {
        v26 = v46 + 32;
        do
        {
          v26 += 8;
          sub_242C4934C();
          --v25;
        }
        while (v25);
      }
      sub_242C4934C();
      result = sub_242C49394();
      v4 = v41;
      v27 = -1 << *(_BYTE *)(v41 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v9 + 8 * (v28 >> 6))) == 0)
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v27) >> 6;
        while (++v29 != v32 || (v31 & 1) == 0)
        {
          v33 = v29 == v32;
          if (v29 == v32)
            v29 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v9 + 8 * v29);
          if (v34 != -1)
          {
            v30 = __clz(__rbit64(~v34)) + (v29 << 6);
            goto LABEL_39;
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        return result;
      }
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
      *(_QWORD *)(v9 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      v35 = *(_QWORD *)(v41 + 48) + 56 * v30;
      v8 = v44;
      *(_QWORD *)v35 = v43;
      *(_QWORD *)(v35 + 8) = v48;
      *(_QWORD *)(v35 + 16) = v42;
      *(_QWORD *)(v35 + 24) = v18;
      *(_QWORD *)(v35 + 32) = v19;
      *(_QWORD *)(v35 + 40) = v46;
      *(_BYTE *)(v35 + 48) = v47;
      ++*(_QWORD *)(v41 + 16);
      v2 = v40;
      v5 = v45;
      if (v44)
        goto LABEL_6;
LABEL_7:
      v11 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_47;
      if (v11 >= v38)
        goto LABEL_41;
      v12 = v39[v11];
      v13 = v5 + 1;
      if (!v12)
      {
        v13 = v11 + 1;
        if (v11 + 1 >= v38)
          goto LABEL_41;
        v12 = v39[v13];
        if (!v12)
        {
          v13 = v11 + 2;
          if (v11 + 2 >= v38)
            goto LABEL_41;
          v12 = v39[v13];
          if (!v12)
          {
            v14 = v11 + 3;
            if (v14 >= v38)
            {
LABEL_41:
              v36 = 1 << *(_BYTE *)(v2 + 32);
              if (v36 > 63)
                sub_242BA2DE8(0, (unint64_t)(v36 + 63) >> 6, v39);
              else
                *v39 = -1 << v36;
              v1 = v37;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v12 = v39[v14];
            if (!v12)
            {
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_48;
                if (v13 >= v38)
                  goto LABEL_41;
                v12 = v39[v13];
                ++v14;
                if (v12)
                  goto LABEL_20;
              }
            }
            v13 = v14;
          }
        }
      }
LABEL_20:
      v44 = (v12 - 1) & v12;
      v45 = v13;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_242BA4120()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_25722A850);
  result = sub_242C48C20();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      result = sub_242C49334();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_242BA2DE8(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_242BA43A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A800);
  result = sub_242C48C20();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      result = sub_242C49334();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_242BA2DE8(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_242BA4620()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A5A8);
  v3 = sub_242C48C20();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = *(_QWORD *)(v2 + 48) + 24 * i;
      v18 = *(_DWORD *)v17;
      v19 = *(_QWORD *)(v17 + 8);
      v20 = *(_QWORD *)(v17 + 16);
      sub_242C49340();
      sub_242C480E0();
      sub_242C4817C();
      swift_bridgeObjectRelease();
      result = sub_242C49394();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v8 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      v29 = *(_QWORD *)(v4 + 48) + 24 * v24;
      *(_DWORD *)v29 = v18;
      *(_QWORD *)(v29 + 8) = v19;
      *(_QWORD *)(v29 + 16) = v20;
      ++*(_QWORD *)(v4 + 16);
      v2 = v16;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v31)
        goto LABEL_32;
      v14 = v32[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v31)
          goto LABEL_32;
        v14 = v32[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v31)
            goto LABEL_32;
          v14 = v32[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v31)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v30 = 1 << *(_BYTE *)(v2 + 32);
              if (v30 > 63)
                sub_242BA2DE8(0, (unint64_t)(v30 + 63) >> 6, v32);
              else
                *v32 = -1 << v30;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v32[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v31)
                  goto LABEL_32;
                v14 = v32[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_242BA4938()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A598);
  result = sub_242C48C20();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = *(_QWORD *)(v2 + 56);
    v30 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & v6;
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if ((v8 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_242C49340();
      sub_242C4817C();
      result = sub_242C49394();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v30[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v30[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v30[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_242BA2DE8(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v30[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_242BA4C00(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_242BA3A4C();
  }
  else
  {
    if (v10 > v9)
    {
      sub_242BB60C8();
      goto LABEL_22;
    }
    sub_242BA59A4();
  }
  v11 = *v4;
  sub_242C49340();
  sub_242C4817C();
  v12 = sub_242C49394();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a3 = v12 & ~v13;
  v14 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_242C4925C() & 1) != 0)
    {
LABEL_21:
      sub_242C492E0();
      __break(1u);
    }
    else
    {
      v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * a3);
        v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_242C4925C() & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v22 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * a3);
  *v22 = a1;
  v22[1] = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

void sub_242BA4D98(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[72];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_242BA3D24();
    }
    else
    {
      if (v8 > v7)
      {
        sub_242BB61C0();
        goto LABEL_39;
      }
      sub_242BA5C4C();
    }
    v9 = *v3;
    sub_242C49340();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(_QWORD **)(a1 + 40);
    v13 = *(unsigned __int8 *)(a1 + 48);
    v48 = *(_QWORD *)(a1 + 8);
    v49 = *(_QWORD *)a1;
    v50 = *(_QWORD *)(a1 + 16);
    sub_242BB5924((uint64_t)v51, *(_QWORD *)a1, v48);
    v47 = v10;
    sub_242C4934C();
    sub_242C4934C();
    sub_242C02D08();
    sub_242C4934C();
    v14 = sub_242C49394();
    v15 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v14 & ~v15;
    v16 = v9 + 56;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v17 = ~v15;
      v18 = *(_QWORD *)(v9 + 48);
      v19 = v48;
      v20 = v49;
      v21 = v47;
      do
      {
        v22 = (uint64_t *)(v18 + 56 * a2);
        if (*((unsigned __int8 *)v22 + 48) != v13)
          goto LABEL_38;
        v23 = (_QWORD *)v22[5];
        v24 = v23[2];
        if (v24 != v12[2])
          goto LABEL_38;
        v26 = *v22;
        v25 = v22[1];
        v27 = v22[2];
        v28 = v22[3];
        if (v24)
          v29 = v23 == v12;
        else
          v29 = 1;
        v30 = v22[4];
        if (!v29)
        {
          if (v23[4] != v12[4])
            goto LABEL_38;
          if (v24 != 1)
          {
            if (v23[5] != v12[5])
              goto LABEL_38;
            v35 = v23 + 6;
            v36 = v24 - 2;
            v37 = v12 + 6;
            while (v36)
            {
              v39 = *v35++;
              v38 = v39;
              v40 = *v37++;
              --v36;
              if (v38 != v40)
                goto LABEL_38;
            }
          }
        }
        if (v30 == v11 && v28 == v21 && v26 == v20 && *(_QWORD *)(v25 + 16) == *(_QWORD *)(v19 + 16) && v27 == v50)
        {
          v34 = sub_242C01228(v25, v19);
          v21 = v47;
          v19 = v48;
          v20 = v49;
          if ((v34 & 1) != 0)
            goto LABEL_42;
        }
LABEL_38:
        a2 = (a2 + 1) & v17;
      }
      while (((*(_QWORD *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_39:
  v41 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v42 = *(_QWORD *)(v41 + 48) + 56 * a2;
  v43 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v42 = *(_OWORD *)a1;
  *(_OWORD *)(v42 + 16) = v43;
  *(_OWORD *)(v42 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v42 + 48) = *(_BYTE *)(a1 + 48);
  v44 = *(_QWORD *)(v41 + 16);
  v45 = __OFADD__(v44, 1);
  v46 = v44 + 1;
  if (v45)
  {
    __break(1u);
LABEL_42:
    sub_242C492E0();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v41 + 16) = v46;
  }
}

void sub_242BA5018(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_242BA4120();
  }
  else
  {
    if (v7 > v6)
    {
      sub_242BB6348();
      goto LABEL_14;
    }
    sub_242BA6018();
  }
  v8 = *v3;
  v9 = sub_242C49334();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v11 + 8 * a2) == a1)
    {
LABEL_13:
      sub_242C492E0();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v11 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * a2) = a1;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
}

void sub_242BA5138(char a1, unint64_t i, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = a1 & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_19;
  if ((a3 & 1) != 0)
  {
    sub_242BA378C();
  }
  else
  {
    if (v7 > v6)
    {
      sub_242BB5FCC();
      goto LABEL_19;
    }
    sub_242BA5718();
  }
  v8 = *v3;
  sub_242C49340();
  v9 = v5 + 1;
  sub_242C49370();
  v10 = sub_242C49394();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  i = v10 & ~v11;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v13 = *(_QWORD *)(v8 + 48);
    if (*(_BYTE *)(v13 + i))
      v14 = 2;
    else
      v14 = 1;
    if (v14 == v9)
      goto LABEL_22;
    v15 = ~v11;
    for (i = (i + 1) & v15; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v15)
    {
      v16 = *(_BYTE *)(v13 + i) ? 2 : 1;
      if (v16 == v9)
        goto LABEL_22;
    }
  }
LABEL_19:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (i >> 6) + 56) |= 1 << i;
  *(_BYTE *)(*(_QWORD *)(v17 + 48) + i) = v5;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_22:
  sub_242C492E0();
  __break(1u);
}

void sub_242BA52BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_242BA43A0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_242BB6354();
      goto LABEL_14;
    }
    sub_242BA6274();
  }
  v8 = *v3;
  v9 = sub_242C49334();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v11 + 8 * a2) == a1)
    {
LABEL_13:
      sub_242C492E0();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v11 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * a2) = a1;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
}

void sub_242BA53DC(int a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v5;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0)
    goto LABEL_17;
  if ((a5 & 1) != 0)
  {
    sub_242BA4620();
  }
  else
  {
    if (v12 > v11)
    {
      sub_242BB6454();
      goto LABEL_17;
    }
    sub_242BA64D0();
  }
  v13 = *v5;
  sub_242C49340();
  sub_242C480E0();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  v14 = sub_242C49394();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a4 = v14 & ~v15;
  v16 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v13 + 48);
    do
    {
      v19 = v18 + 24 * a4;
      if (*(_DWORD *)v19 == a1)
      {
        v20 = *(_QWORD *)(v19 + 8) == a2 && *(_QWORD *)(v19 + 16) == a3;
        if (v20 || (sub_242C4925C() & 1) != 0)
          goto LABEL_20;
      }
      a4 = (a4 + 1) & v17;
    }
    while (((*(_QWORD *)(v16 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_17:
  v21 = *v6;
  *(_QWORD *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = *(_QWORD *)(v21 + 48) + 24 * a4;
  *(_DWORD *)v22 = a1;
  *(_QWORD *)(v22 + 8) = a2;
  *(_QWORD *)(v22 + 16) = a3;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return;
  }
  __break(1u);
LABEL_20:
  sub_242C492E0();
  __break(1u);
}

void sub_242BA5580(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_242BA4938();
  }
  else
  {
    if (v10 > v9)
    {
      sub_242BB6570();
      goto LABEL_22;
    }
    sub_242BA67AC();
  }
  v11 = *v4;
  sub_242C49340();
  sub_242C4817C();
  v12 = sub_242C49394();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a3 = v12 & ~v13;
  v14 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_242C4925C() & 1) != 0)
    {
LABEL_21:
      sub_242C492E0();
      __break(1u);
    }
    else
    {
      v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * a3);
        v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_242C4925C() & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v22 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * a3);
  *v22 = a1;
  v22[1] = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

uint64_t sub_242BA5718()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A7C0);
  result = sub_242C48C20();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v25 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v11 | (v5 << 6); ; i = __clz(__rbit64(v14)) + (v5 << 6))
  {
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
    sub_242C49340();
    sub_242C49370();
    result = sub_242C49394();
    v17 = -1 << *(_BYTE *)(v4 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v10 + 8 * (v18 >> 6))) == 0)
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v17) >> 6;
      while (++v19 != v22 || (v21 & 1) == 0)
      {
        v23 = v19 == v22;
        if (v19 == v22)
          v19 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v10 + 8 * v19);
        if (v24 != -1)
        {
          v20 = __clz(__rbit64(~v24)) + (v19 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v10 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v10 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v20) = v16;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v13 >= v25)
      goto LABEL_32;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_32;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_32;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_32:
    result = swift_release();
    v1 = v0;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v25)
      goto LABEL_32;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_242BA59A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A590);
  v3 = sub_242C48C20();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_242C49340();
    sub_242C480E0();
    sub_242C4817C();
    result = sub_242C49394();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_242BA5C4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A820);
  result = sub_242C48C20();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_43:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v36 = v2 + 56;
  v6 = 1 << *(_BYTE *)(v2 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v37 = (unint64_t)(v6 + 63) >> 6;
  v38 = v2;
  v9 = result + 56;
  v39 = result;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v42 = (v8 - 1) & v8;
  v43 = v5;
  for (i = __clz(__rbit64(v8)) | (v5 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v15 = *(_QWORD *)(v2 + 48) + 56 * i;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 24);
    v40 = *(_QWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 40);
    v44 = *(_QWORD *)(v15 + 32);
    v45 = *(_BYTE *)(v15 + 48);
    sub_242C49340();
    v41 = v16;
    sub_242C4934C();
    v46 = v17;
    v20 = *(_QWORD *)(v17 + 16);
    if (v20)
    {
      for (j = 0; j != v20; ++j)
      {
        v22 = *(_QWORD *)(v46 + 32 + 16 * j);
        sub_242C4934C();
        v23 = *(_QWORD *)(v22 + 16);
        if (v23)
        {
          v24 = v22 + 32;
          do
          {
            v24 += 8;
            sub_242C4934C();
            --v23;
          }
          while (v23);
        }
        sub_242C4934C();
      }
    }
    sub_242C4934C();
    sub_242C4934C();
    v25 = *(_QWORD *)(v19 + 16);
    sub_242C4934C();
    if (v25)
    {
      v26 = v19 + 32;
      do
      {
        v26 += 8;
        sub_242C4934C();
        --v25;
      }
      while (v25);
    }
    sub_242C4934C();
    result = sub_242C49394();
    v4 = v39;
    v27 = -1 << *(_BYTE *)(v39 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v9 + 8 * (v28 >> 6))) == 0)
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      while (++v29 != v32 || (v31 & 1) == 0)
      {
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v9 + 8 * v29);
        if (v34 != -1)
        {
          v30 = __clz(__rbit64(~v34)) + (v29 << 6);
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(_QWORD *)(v9 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    v35 = *(_QWORD *)(v39 + 48) + 56 * v30;
    *(_QWORD *)v35 = v41;
    *(_QWORD *)(v35 + 8) = v46;
    *(_QWORD *)(v35 + 16) = v40;
    *(_QWORD *)(v35 + 24) = v18;
    *(_QWORD *)(v35 + 32) = v44;
    *(_QWORD *)(v35 + 40) = v19;
    *(_BYTE *)(v35 + 48) = v45;
    ++*(_QWORD *)(v39 + 16);
    swift_retain();
    result = sub_242C480E0();
    v2 = v38;
    v8 = v42;
    v5 = v43;
    if (v42)
      goto LABEL_6;
LABEL_7:
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_45;
    if (v11 >= v37)
      goto LABEL_41;
    v12 = *(_QWORD *)(v36 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v37)
        goto LABEL_41;
      v12 = *(_QWORD *)(v36 + 8 * v13);
      if (!v12)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v37)
          goto LABEL_41;
        v12 = *(_QWORD *)(v36 + 8 * v13);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v42 = (v12 - 1) & v12;
    v43 = v13;
  }
  v14 = v5 + 4;
  if (v5 + 4 >= v37)
  {
LABEL_41:
    result = swift_release();
    v1 = v0;
    goto LABEL_43;
  }
  v12 = *(_QWORD *)(v36 + 8 * v14);
  if (v12)
  {
    v13 = v5 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v37)
      goto LABEL_41;
    v12 = *(_QWORD *)(v36 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_20;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_242BA6018()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_25722A850);
  result = sub_242C48C20();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = sub_242C49334();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_242BA6274()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A800);
  result = sub_242C48C20();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = sub_242C49334();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_242BA64D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A5A8);
  v3 = sub_242C48C20();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v29 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v30 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(v2 + 48) + 24 * i;
    v17 = *(_DWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    sub_242C49340();
    swift_bridgeObjectRetain_n();
    sub_242C4817C();
    swift_bridgeObjectRelease();
    result = sub_242C49394();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v8 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = *(_QWORD *)(v4 + 48) + 24 * v23;
    *(_DWORD *)v28 = v17;
    *(_QWORD *)(v28 + 8) = v18;
    *(_QWORD *)(v28 + 16) = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v30)
      goto LABEL_32;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v30)
        goto LABEL_32;
      v14 = *(_QWORD *)(v29 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v30)
          goto LABEL_32;
        v14 = *(_QWORD *)(v29 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v30)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v29 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v30)
      goto LABEL_32;
    v14 = *(_QWORD *)(v29 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_242BA67AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A598);
  result = sub_242C48C20();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = v2 + 56;
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v7 + 63) >> 6;
    v10 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v11 | (v5 << 6); ; i = __clz(__rbit64(v14)) + (v5 << 6))
    {
      v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v16;
      v17 = v16[1];
      sub_242C49340();
      sub_242C4817C();
      result = sub_242C49394();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_29:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v27 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v22);
      *v27 = v18;
      v27[1] = v17;
      ++*(_QWORD *)(v4 + 16);
      result = sub_242C480E0();
      if (v9)
        goto LABEL_6;
LABEL_7:
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_35;
      if (v13 >= v28)
        goto LABEL_31;
      v14 = *(_QWORD *)(v6 + 8 * v13);
      ++v5;
      if (!v14)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v28)
          goto LABEL_31;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v28)
            goto LABEL_31;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_31:
              result = swift_release();
              v1 = v0;
              goto LABEL_33;
            }
            v14 = *(_QWORD *)(v6 + 8 * v15);
            v5 = v15;
            if (!v14)
              break;
          }
        }
      }
LABEL_19:
      v9 = (v14 - 1) & v14;
    }
    while (1)
    {
      v5 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v5 >= v28)
        goto LABEL_31;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      ++v15;
      if (v14)
        goto LABEL_19;
    }
LABEL_36:
    __break(1u);
  }
  else
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
  }
  return result;
}

unint64_t sub_242BA6A44()
{
  unint64_t result;

  result = qword_25722A5A0;
  if (!qword_25722A5A0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5AE64, &type metadata for AnyLayerVariablePathCache.Key);
    atomic_store(result, (unint64_t *)&qword_25722A5A0);
  }
  return result;
}

uint64_t sub_242BA6A80(uint64_t a1, _QWORD *a2)
{
  return sub_242BA6BB0(a1, a2, (uint64_t)&type metadata for LayerState, (uint64_t)&protocol witness table for LayerState);
}

uint64_t sub_242BA6AA4(uint64_t a1, _QWORD *a2)
{
  return sub_242BA6BB0(a1, a2, (uint64_t)&type metadata for Parameter, (uint64_t)&protocol witness table for Parameter);
}

uint64_t sub_242BA6AC8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

unint64_t sub_242BA6AFC()
{
  unint64_t result;

  result = qword_25722A5B0;
  if (!qword_25722A5B0)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25722A5B0);
  }
  return result;
}

unint64_t sub_242BA6B38()
{
  unint64_t result;

  result = qword_25722A5B8;
  if (!qword_25722A5B8)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE0D48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25722A5B8);
  }
  return result;
}

unint64_t sub_242BA6B74()
{
  unint64_t result;

  result = qword_25722A5C0;
  if (!qword_25722A5C0)
  {
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25722A5C0);
  }
  return result;
}

uint64_t sub_242BA6BB0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_242BA2630(a1, *(_QWORD *)(v4 + 32), *(void (**)(char *))(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 16), a3, MEMORY[0x24BEE1328], *(_QWORD *)(v4 + 24), a4, a2);
}

uint64_t sub_242BA6BF0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257221158);
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242BA6C38()
{
  return 32;
}

__n128 sub_242BA6C44(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_242BA6C50()
{
  return sub_242BA2968();
}

uint64_t sub_242BA6C74()
{
  return sub_242C48B54();
}

uint64_t sub_242BA6C98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = (*(uint64_t (**)(_QWORD))(v2 + 48))(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t sub_242BA6CDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_242BA2C08(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72), a1);
}

uint64_t sub_242BA6D04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t getEnumTagSinglePayload for AnyLayerVariablePathCache.Key(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyLayerVariablePathCache.Key(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyLayerVariablePathCache.Key()
{
  return &type metadata for AnyLayerVariablePathCache.Key;
}

unint64_t sub_242BA6DC8()
{
  unint64_t result;

  result = qword_25722A5C8;
  if (!qword_25722A5C8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5AE3C, &type metadata for AnyLayerVariablePathCache.Key);
    atomic_store(result, (unint64_t *)&qword_25722A5C8);
  }
  return result;
}

uint64_t sub_242BA6E08@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_242BA1E74(a1, a2);
}

void OUTLINED_FUNCTION_2_75()
{
  sub_242A5E764();
}

void OUTLINED_FUNCTION_3_68()
{
  sub_242A5E764();
}

uint64_t OUTLINED_FUNCTION_5_62()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_6_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;

  *v10 = a10;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_7_51()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  type metadata accessor for LayerVariablePaths();
}

void sub_242BA6EA0()
{
  sub_242BA23F8();
}

void OUTLINED_FUNCTION_8_51()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
  type metadata accessor for LayerVariablePaths();
}

void sub_242BA6EE0()
{
  sub_242BA23F8();
}

uint64_t OUTLINED_FUNCTION_10_44()
{
  return type metadata accessor for AnyLayerVariablePathCache();
}

uint64_t OUTLINED_FUNCTION_12_42()
{
  return sub_242C49340();
}

void OUTLINED_FUNCTION_13_52()
{
  sub_242AD7AC0();
}

void OUTLINED_FUNCTION_14_37()
{
  sub_242AD7AC0();
}

uint64_t OUTLINED_FUNCTION_15_42()
{
  return sub_242C492D4();
}

uint64_t OUTLINED_FUNCTION_17_39@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = a1;
  *(_QWORD *)(v2 - 96) = a1;
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v2 - 216) + 16))(*(_QWORD *)(v2 - 200), *(_QWORD *)(v2 - 176), v1);
}

void OUTLINED_FUNCTION_18_43()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 192) = v1;
  sub_242BA21DC(v0);
}

void OUTLINED_FUNCTION_21_38()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 168) = v0;
  sub_242BA21DC(v1);
}

uint64_t OUTLINED_FUNCTION_23_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t, char *);
  uint64_t v10;

  return v9(a1, (char *)&a9 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
}

void OUTLINED_FUNCTION_24_41()
{
  sub_242BA31C0();
}

uint64_t OUTLINED_FUNCTION_25_37@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = a1;
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v2 - 192) + 16))(*(_QWORD *)(v2 - 176), *(_QWORD *)(v2 - 152), v1);
}

uint64_t OUTLINED_FUNCTION_28_42(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 192) = v2;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  v4 = *(_DWORD *)(v3 - 168) & 1;
  *(_DWORD *)(v3 - 204) = v4;
  *(_BYTE *)(result + 32) = v4;
  *(_DWORD *)(result + 36) = 4;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_31(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 216) = v1;
  *(_QWORD *)(result + 16) = v1;
  *(_QWORD *)(result + 24) = v2;
  v4 = *(_DWORD *)(v3 - 192) & 1;
  *(_DWORD *)(v3 - 228) = v4;
  *(_BYTE *)(result + 32) = v4;
  *(_DWORD *)(result + 36) = 4;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_30()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_34_30()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_35_26()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = 0x8000000000000000;
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_26()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_38_26()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_40_29()
{
  return sub_242C48404();
}

uint64_t OUTLINED_FUNCTION_41_31(uint64_t a1)
{
  return sub_242BA246C(a1);
}

uint64_t OUTLINED_FUNCTION_42_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v2;
  return sub_242C48C8C();
}

uint64_t OUTLINED_FUNCTION_43_28()
{
  return sub_242C4841C();
}

uint64_t OUTLINED_FUNCTION_45_21(uint64_t a1)
{
  return sub_242BA246C(a1);
}

uint64_t OUTLINED_FUNCTION_46_23()
{
  return sub_242C4841C();
}

uint64_t OUTLINED_FUNCTION_47_23()
{
  return sub_242C49334();
}

void OUTLINED_FUNCTION_49_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 184) = a3;
  *(_QWORD *)(v4 - 176) = v3;
  *(_QWORD *)(v4 - 216) = *(_QWORD *)(a2 - 8);
}

void OUTLINED_FUNCTION_50_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 8 * v2 + 32) = v1;
}

uint64_t OUTLINED_FUNCTION_53_16()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_54_16(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 160) = a3;
  *(_QWORD *)(v4 - 152) = v3;
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(a2 - 8);
}

uint64_t OUTLINED_FUNCTION_55_17()
{
  return swift_getTupleTypeMetadata2();
}

void OUTLINED_FUNCTION_57_21()
{
  sub_242AD73C8();
}

void OUTLINED_FUNCTION_58_13()
{
  sub_242AD73C8();
}

uint64_t OUTLINED_FUNCTION_60_18()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_61_16@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v2);
  v4 = v3[1];
  *v1 = *v3;
  v1[1] = v4;
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_62_15(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_63_15(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_65_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 184) = a1;
  return type metadata accessor for RecursiveStoredPropertiesIterator(0, v4, a1, a4);
}

uint64_t OUTLINED_FUNCTION_66_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 208) = a1;
  return type metadata accessor for RecursiveStoredPropertiesIterator(0, v4, a1, a4);
}

uint64_t OUTLINED_FUNCTION_67_14()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_68_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_69_13()
{
  return sub_242C4865C();
}

uint64_t OUTLINED_FUNCTION_70_14()
{
  return sub_242C48620();
}

uint64_t OUTLINED_FUNCTION_71_10()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_73_14()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_74_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = v0;
  return sub_242C48650();
}

uint64_t OUTLINED_FUNCTION_76_13()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_78_9()
{
  return sub_242C48E6C();
}

void OUTLINED_FUNCTION_83_11()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t OUTLINED_FUNCTION_84_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0;
  return sub_242C47FFC();
}

uint64_t OUTLINED_FUNCTION_85_10@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

void OUTLINED_FUNCTION_91_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = *(_QWORD *)(v1 - 192);
  *(_QWORD *)(v1 - 128) = v0;
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v1 - 160);
}

uint64_t OUTLINED_FUNCTION_92_8()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_93_9()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v1 - 216);
  *(_QWORD *)(v1 - 120) = v0;
  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v1 - 184);
}

uint64_t OUTLINED_FUNCTION_94_8()
{
  return sub_242C48E30();
}

uint64_t OUTLINED_FUNCTION_95_8()
{
  return sub_242C48E30();
}

uint64_t OUTLINED_FUNCTION_99_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = v0;
  return sub_242C47FFC();
}

uint64_t OUTLINED_FUNCTION_100_7()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242BA74B4(uint64_t a1)
{
  return sub_242BA74C8(a1);
}

uint64_t sub_242BA74C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v3 = v10;
    v4 = a1 + 48;
    do
    {
      OUTLINED_FUNCTION_32_0();
      swift_getAtKeyPath();
      OUTLINED_FUNCTION_35();
      v5 = *(_QWORD *)(v10 + 16);
      if (v5 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_242AC315C();
      v4 += 24;
      *(_QWORD *)(v10 + 16) = v5 + 1;
      v6 = v10 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v9;
      --v1;
    }
    while (v1);
    OUTLINED_FUNCTION_17_1();
  }
  else
  {
    OUTLINED_FUNCTION_17_1();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_242BA75DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_242AC3338();
    v3 = v11;
    v4 = a1 + 56;
    do
    {
      sub_242C480E0();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v11 + 16);
      if (v5 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_242AC3338();
      *(_QWORD *)(v11 + 16) = v5 + 1;
      v6 = v11 + 24 * v5;
      *(_DWORD *)(v6 + 32) = v8;
      v4 += 32;
      *(_QWORD *)(v6 + 40) = v9;
      *(_QWORD *)(v6 + 48) = v10;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_242BA771C(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v31;
  uint64_t v32;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  v29 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_45;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = v4 >= v3 ? v3 : v4;
    OUTLINED_FUNCTION_104_8(MEMORY[0x24BEE4AF8]);
    sub_242AC31B0();
    if (v5 < 0)
      break;
    v25 = v4;
    v26 = v2;
    v27 = v3;
    v6 = v32;
    if (v5)
    {
      v7 = a2;
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_44_0();
      v8 = 0;
      v9 = (uint64_t *)(v2 + 40);
      while (v5 != v8)
      {
        v3 = *(v9 - 1);
        v10 = *v9;
        if (v29)
        {
          OUTLINED_FUNCTION_74();
          OUTLINED_FUNCTION_141();
          v11 = sub_242C48FC8();
          swift_bridgeObjectRelease();
          v7 = a2;
        }
        else
        {
          v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          OUTLINED_FUNCTION_141();
        }
        if (v8 == v11)
          goto LABEL_47;
        if ((a2 & 0xC000000000000001) != 0)
        {
          v15 = MEMORY[0x2494EC84C](v8, v7);
          v7 = a2;
          v12 = v15;
        }
        else
        {
          if (v8 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_42;
          v12 = *(_QWORD *)(v7 + 8 * v8 + 32);
          OUTLINED_FUNCTION_6();
        }
        v32 = v6;
        v13 = *(_QWORD *)(v6 + 16);
        v2 = v13 + 1;
        if (v13 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_242AC31B0();
          v7 = a2;
        }
        ++v8;
        *(_QWORD *)(v6 + 16) = v2;
        v14 = (_QWORD *)(v6 + 24 * v13);
        v14[4] = v3;
        v14[5] = v10;
        v14[6] = v12;
        v9 += 2;
        if (v5 == v8)
          goto LABEL_23;
      }
      __break(1u);
LABEL_42:
      __break(1u);
    }
    else
    {
      v7 = a2;
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_44_0();
LABEL_23:
      v16 = v27;
      if (v27 <= v25)
      {
LABEL_38:
        swift_bridgeObjectRelease();
LABEL_40:
        swift_bridgeObjectRelease();
        return v6;
      }
      v17 = v7 & 0xFFFFFFFFFFFFFF8;
      v31 = v7 & 0xC000000000000001;
      v28 = v7 + 32;
      v18 = (uint64_t *)(v26 + 16 * v5 + 40);
      while (v5 < v16)
      {
        v3 = *(v18 - 1);
        v19 = *v18;
        if (v29)
        {
          OUTLINED_FUNCTION_74();
          OUTLINED_FUNCTION_69();
          v2 = v7;
          v20 = sub_242C48FC8();
          OUTLINED_FUNCTION_3_6();
        }
        else
        {
          v20 = *(_QWORD *)(v17 + 16);
          OUTLINED_FUNCTION_69();
        }
        if (v5 == v20)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        }
        v7 = a2;
        if (v31)
        {
          v7 = a2;
          v21 = MEMORY[0x2494EC84C](v5, a2);
        }
        else
        {
          if ((unint64_t)v5 >= *(_QWORD *)(v17 + 16))
            goto LABEL_44;
          v21 = *(_QWORD *)(v28 + 8 * v5);
          swift_retain();
        }
        v32 = v6;
        OUTLINED_FUNCTION_95_9();
        if (v22)
        {
          sub_242AC31B0();
          v7 = a2;
        }
        ++v5;
        *(_QWORD *)(v6 + 16) = v20;
        v23 = (_QWORD *)(v6 + 24 * v2);
        v23[4] = v3;
        v23[5] = v19;
        v23[6] = v21;
        v18 += 2;
        v16 = v27;
        if (v27 == v5)
          goto LABEL_38;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    sub_242C480E0();
    v4 = sub_242C48FC8();
    OUTLINED_FUNCTION_136();
  }
  __break(1u);
LABEL_47:
  result = OUTLINED_FUNCTION_83();
  __break(1u);
  return result;
}

void sub_242BA7A54(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v34 = MEMORY[0x24BEE4AF8];
  sub_242AC331C();
  v28 = v5;
  v29 = v4;
  v26 = a2;
  v27 = a1;
  v25 = v6;
  if (v6)
  {
    v7 = (__int128 *)(a2 + 32);
    sub_242C480E0();
    sub_242C480E0();
    v8 = (_QWORD *)(a1 + 48);
    v9 = v5;
    v10 = v6;
    while (v4)
    {
      if (!v9)
        goto LABEL_23;
      v30 = *((_DWORD *)v8 - 4);
      v11 = *v8;
      v31 = *(v8 - 1);
      v32 = *v7;
      v13 = *(_QWORD *)(v34 + 16);
      v12 = *(_QWORD *)(v34 + 24);
      sub_242C480E0();
      swift_unknownObjectRetain();
      if (v13 >= v12 >> 1)
        sub_242AC331C();
      *(_QWORD *)(v34 + 16) = v13 + 1;
      v14 = v34 + 40 * v13;
      *(_DWORD *)(v14 + 32) = v30;
      --v9;
      *(_QWORD *)(v14 + 40) = v31;
      *(_QWORD *)(v14 + 48) = v11;
      *(_OWORD *)(v14 + 56) = v32;
      --v4;
      v8 += 3;
      ++v7;
      if (!--v10)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
LABEL_13:
    v16 = v28;
    v15 = v29;
    if (v29 <= v28)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v17 = v25;
    v18 = (_QWORD *)(v27 + 24 * v25 + 48);
    while (v17 < v15)
    {
      if (v16 == v17)
        goto LABEL_21;
      if (v17 >= v16)
        goto LABEL_25;
      v19 = *((_DWORD *)v18 - 4);
      v21 = *(v18 - 1);
      v20 = *v18;
      v33 = *(_OWORD *)(v26 + 32 + 16 * v17);
      v23 = *(_QWORD *)(v34 + 16);
      v22 = *(_QWORD *)(v34 + 24);
      sub_242C480E0();
      swift_unknownObjectRetain();
      if (v23 >= v22 >> 1)
        sub_242AC331C();
      *(_QWORD *)(v34 + 16) = v23 + 1;
      v24 = v34 + 40 * v23;
      *(_DWORD *)(v24 + 32) = v19;
      ++v17;
      *(_QWORD *)(v24 + 40) = v21;
      *(_QWORD *)(v24 + 48) = v20;
      *(_OWORD *)(v24 + 56) = v33;
      v18 += 3;
      v16 = v28;
      v15 = v29;
      if (v29 == v17)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_242BA7CB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  _OWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t ObjectType;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  __int128 v52;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;

  v9 = *(_QWORD *)(a1 + 16);
  v66 = MEMORY[0x24BEE4AF8];
  sub_242AC3354();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C379E4();
  v11 = v10;
  swift_bridgeObjectRelease();
  v65 = v11;
  sub_242BB6708(&v65, (uint64_t (*)(uint64_t))sub_242BEBC74, sub_242BB73C4);
  if (v7)
  {
LABEL_37:
    result = swift_release();
    __break(1u);
    return result;
  }
  v13 = v65;
  MEMORY[0x24BDAC7A8](v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
  sub_242BB9DF4();
  swift_getKeyPath();
  swift_retain();
  v14 = sub_242BA75DC(v13);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_242BA7A54(v14, a1);
  v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v9)
  {
    v17 = 0;
    v55 = v16;
    v56 = *(_QWORD *)(v16 + 16);
    *(_QWORD *)&v18 = a6;
    *((_QWORD *)&v18 + 1) = a7;
    v52 = v18;
    v19 = (_OWORD *)(v16 + 56);
    while (v56 != v17)
    {
      if (v17 >= *(_QWORD *)(v16 + 16))
        goto LABEL_36;
      v20 = *((_DWORD *)v19 - 6);
      v22 = *((_QWORD *)v19 - 2);
      v21 = *((_QWORD *)v19 - 1);
      v63 = *v19;
      if (v20 == a3 && (v22 == a4 ? (v23 = v21 == a5) : (v23 = 0), v23 || (sub_242C4925C() & 1) != 0))
      {
        ObjectType = swift_getObjectType();
        v25 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 16);
        sub_242C480E0();
        swift_unknownObjectRetain();
        v20 = v25(ObjectType, a7);
        v22 = v26;
        v28 = v27;
        v29 = v52;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        v28 = v21;
        v29 = v63;
      }
      v61 = v29;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3354();
        v30 = v66;
      }
      v31 = *(_QWORD *)(v30 + 16);
      v32 = v61;
      if (v31 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        sub_242AC3354();
        v32 = v61;
        v30 = v66;
      }
      *(_QWORD *)(v30 + 16) = v31 + 1;
      v33 = v30 + 40 * v31;
      *(_DWORD *)(v33 + 32) = v20;
      ++v17;
      *(_QWORD *)(v33 + 40) = v22;
      *(_QWORD *)(v33 + 48) = v28;
      *(_OWORD *)(v33 + 56) = v32;
      v19 = (_OWORD *)((char *)v19 + 40);
      v16 = v55;
      if (v9 == v17)
        goto LABEL_19;
    }
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_19:
  if (v9 < *(_QWORD *)(v16 + 16))
  {
    *(_QWORD *)&v34 = a6;
    *((_QWORD *)&v34 + 1) = a7;
    v57 = v34;
    v35 = (_OWORD *)(v16 + 40 * v9 + 56);
    do
    {
      v36 = *((_DWORD *)v35 - 6);
      v38 = *((_QWORD *)v35 - 2);
      v37 = *((_QWORD *)v35 - 1);
      v64 = *v35;
      if (v36 == a3 && (v38 == a4 ? (v39 = v37 == a5) : (v39 = 0), v39 || (sub_242C4925C() & 1) != 0))
      {
        v40 = swift_getObjectType();
        v41 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 16);
        sub_242C480E0();
        swift_unknownObjectRetain();
        v36 = v41(v40, a7);
        v38 = v42;
        v44 = v43;
        v45 = v57;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        v44 = v37;
        v45 = v64;
      }
      v62 = v45;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3354();
        v46 = v66;
      }
      v47 = *(_QWORD *)(v46 + 16);
      v48 = v62;
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3354();
        v48 = v62;
        v46 = v66;
      }
      ++v9;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v49 = v46 + 40 * v47;
      *(_DWORD *)(v49 + 32) = v36;
      *(_QWORD *)(v49 + 40) = v38;
      *(_QWORD *)(v49 + 48) = v44;
      *(_OWORD *)(v49 + 56) = v48;
      v35 = (_OWORD *)((char *)v35 + 40);
    }
    while (v9 < *(_QWORD *)(v16 + 16));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = v66;
  swift_unknownObjectRelease();
  return v50;
}

#error "242BA8220: call analysis failed (funcsize=232)"

#error "242BA85C4: call analysis failed (funcsize=189)"

void sub_242BA8858(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v35 = MEMORY[0x24BEE4AF8];
  sub_242AC362C();
  v29 = v5;
  v30 = v4;
  v27 = a2;
  v28 = a1;
  v26 = v6;
  if (v6)
  {
    sub_242C480E0();
    sub_242C480E0();
    v7 = (uint64_t *)(a2 + 40);
    v8 = (uint64_t *)(a1 + 40);
    v9 = v4;
    while (v9)
    {
      if (!v5)
        goto LABEL_23;
      v10 = *v8;
      v11 = *v7;
      v31 = *(v8 - 1);
      v32 = *(v7 - 1);
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      sub_242C480E0();
      sub_242C480E0();
      if (v13 >= v12 >> 1)
        sub_242AC362C();
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = (_QWORD *)(v35 + 32 * v13);
      v14[4] = v31;
      v14[5] = v10;
      --v5;
      v14[6] = v32;
      v14[7] = v11;
      --v9;
      v7 += 2;
      v8 += 2;
      if (!--v6)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    sub_242C480E0();
    sub_242C480E0();
LABEL_13:
    v16 = v29;
    v15 = v30;
    if (v30 <= v29)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v17 = v26;
    v33 = 16 * v26;
    v18 = v27;
    v19 = v28;
    while (v17 < v15)
    {
      if (v16 == v17)
        goto LABEL_21;
      if (v17 >= v16)
        goto LABEL_25;
      v20 = *(_QWORD *)(v19 + v33 + 40);
      v34 = *(_QWORD *)(v19 + v33 + 32);
      v22 = *(_QWORD *)(v18 + v33 + 32);
      v21 = *(_QWORD *)(v18 + v33 + 40);
      v24 = *(_QWORD *)(v35 + 16);
      v23 = *(_QWORD *)(v35 + 24);
      sub_242C480E0();
      sub_242C480E0();
      if (v24 >= v23 >> 1)
        sub_242AC362C();
      ++v17;
      *(_QWORD *)(v35 + 16) = v24 + 1;
      v25 = (_QWORD *)(v35 + 32 * v24);
      v25[4] = v34;
      v25[5] = v20;
      v25[6] = v22;
      v25[7] = v21;
      v19 += 16;
      v18 += 16;
      v16 = v29;
      v15 = v30;
      if (v30 == v17)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_242BA8A94(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v32;

  v6 = a1;
  if (a1 >> 62)
  {
LABEL_32:
    sub_242C480E0();
    v7 = sub_242C48FC8();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_242C480E0();
    if (v7)
    {
LABEL_3:
      v29 = v7;
      v32 = v6 & 0xC000000000000001;
      v8 = 4;
      v30 = v6;
      do
      {
        if (v32)
          MEMORY[0x2494EC84C](v8 - 4, v6);
        else
          swift_retain();
        v9 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        v10 = sub_242B89308();
        if (v10 == sub_242B89308())
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_30;
        }
        if (a3)
        {
          v11 = a2;
          swift_unknownObjectRetain();
          sub_242BC97A8();
          if (v13)
          {
            v14 = v12;
            ObjectType = swift_getObjectType();
            v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
            v18 = v17;
            v20 = v19;
            swift_unknownObjectRelease();
          }
          else
          {
            v16 = 0;
            v18 = 0;
            v20 = 0;
          }
          v21 = swift_getObjectType();
          v22 = (*(uint64_t (**)(uint64_t))(a4 + 16))(v21);
          if (!v20)
          {
            swift_release();
LABEL_24:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            a2 = v11;
            v7 = v29;
            v6 = v30;
            goto LABEL_25;
          }
          if (v16 != v22)
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_24;
          }
          v25 = v18 == v23 && v20 == v24;
          a2 = v11;
          if (v25)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
LABEL_29:
            swift_release();
            swift_bridgeObjectRelease();
LABEL_30:
            v27 = 1;
            goto LABEL_34;
          }
          v26 = sub_242C4925C();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          v7 = v29;
          v6 = v30;
          if ((v26 & 1) != 0)
            goto LABEL_29;
        }
        else
        {
          swift_release();
        }
LABEL_25:
        ++v8;
      }
      while (v9 != v7);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  v27 = 0;
LABEL_34:
  swift_unknownObjectRelease();
  return v27;
}

void sub_242BA8D4C()
{
  OUTLINED_FUNCTION_9_59();
  sub_242C4934C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA8D80()
{
  OUTLINED_FUNCTION_9_59();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA8DE4()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_61_17();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA8E14(uint64_t a1, uint64_t a2)
{
  sub_242BA92AC(a1, a2, (void (*)(_BYTE *, uint64_t))sub_242A5C284);
}

void sub_242BA8E20(uint64_t a1, uint64_t a2)
{
  sub_242BA92AC(a1, a2, (void (*)(_BYTE *, uint64_t))sub_242A5C2EC);
}

void sub_242BA8E30(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242C11D00);
}

void sub_242BA8E40(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242B7AEB8);
}

void sub_242BA8E4C()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA8EDC(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242A98E90);
}

void sub_242BA8EE8(uint64_t a1, uint64_t a2)
{
  sub_242BA92AC(a1, a2, (void (*)(_BYTE *, uint64_t))sub_242A5C4E4);
}

void sub_242BA8EF4()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA8F48()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_61_17();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA8F78()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_61_17();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA8FA8()
{
  OUTLINED_FUNCTION_9_59();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA9000()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA904C()
{
  OUTLINED_FUNCTION_9_59();
  sub_242C49358();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA907C(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242C0EB68);
}

void sub_242BA9088(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242C0E928);
}

void sub_242BA9094(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242ABCCF0);
}

void sub_242BA90A0()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA90F0()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA9154()
{
  sub_242BA94D8();
}

void sub_242BA9170()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA91F0(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242BF5508);
}

void sub_242BA91FC(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242A963F8);
}

void sub_242BA9208(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_9_59();
  __asm { BR              X11 }
}

void sub_242BA9240()
{
  OUTLINED_FUNCTION_61_17();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA9270()
{
  OUTLINED_FUNCTION_9_59();
  sub_242C49370();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA92A0(uint64_t a1, uint64_t a2)
{
  sub_242BA92AC(a1, a2, (void (*)(_BYTE *, uint64_t))sub_242A5CB30);
}

void sub_242BA92AC(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  OUTLINED_FUNCTION_9_59();
  a3(v5, a2);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA92E0()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_61_17();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA9310()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA9364()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA93E4(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242C15940);
}

void sub_242BA93F0()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_16_41();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA943C(uint64_t a1, uint64_t a2)
{
  sub_242BA9448(a1, a2, (void (*)(uint64_t))sub_242B7ADDC);
}

void sub_242BA9448(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_9_59();
  a3(a2);
  sub_242C4817C();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA9494()
{
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_61_17();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BA94C0()
{
  sub_242BA94D8();
}

void sub_242BA94D8()
{
  OUTLINED_FUNCTION_9_59();
  sub_242C4817C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242BA9510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C379E4();
  v7 = v6;
  swift_bridgeObjectRelease();
  v41 = v7;
  sub_242BB6708(&v41, (uint64_t (*)(uint64_t))sub_242BEBC74, sub_242BB73C4);
  if (v3)
  {
LABEL_21:
    result = swift_release();
    __break(1u);
    return result;
  }
  v9 = v41;
  MEMORY[0x24BDAC7A8](v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
  sub_242BB9DF4();
  swift_getKeyPath();
  swift_retain();
  v10 = sub_242BA75DC(v9);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_242BA7A54(v10, a1);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v12 + 16);
  if (v39)
  {
    v33 = a3;
    ObjectType = swift_getObjectType();
    v14 = 0;
    v36 = *(unsigned int (**)(uint64_t, uint64_t))(a2 + 16);
    v37 = ObjectType;
    v15 = (uint64_t *)(v12 + 64);
    v38 = v12;
    while (v14 < *(_QWORD *)(v12 + 16))
    {
      v35 = *((unsigned int *)v15 - 8);
      v16 = *(v15 - 2);
      v34 = *(v15 - 3);
      v18 = *(v15 - 1);
      v17 = *v15;
      v19 = swift_getObjectType();
      v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 16);
      sub_242C480E0();
      swift_unknownObjectRetain();
      v21 = v20(v19, v17);
      v23 = v22;
      v25 = v24;
      if (v21 == v36(v37, a2))
      {
        if (v23 == v26 && v25 == v27)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease_n();
LABEL_18:
          a3 = v33;
          v32 = v34;
          v31 = v35;
          goto LABEL_19;
        }
        v29 = sub_242C4925C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
        {
          swift_unknownObjectRelease();
          result = swift_bridgeObjectRelease();
          goto LABEL_18;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v12 = v38;
      ++v14;
      swift_bridgeObjectRelease();
      v15 += 5;
      if (v39 == v14)
      {
        swift_unknownObjectRelease();
        result = swift_bridgeObjectRelease();
        v31 = 0;
        v32 = 0;
        v16 = 0;
        v18 = 0;
        v17 = 0;
        a3 = v33;
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  swift_unknownObjectRelease();
  result = swift_bridgeObjectRelease();
  v31 = 0;
  v32 = 0;
  v16 = 0;
  v18 = 0;
  v17 = 0;
LABEL_19:
  *a3 = v31;
  a3[1] = v32;
  a3[2] = v16;
  a3[3] = v18;
  a3[4] = v17;
  return result;
}

#error "242BA98A0: call analysis failed (funcsize=114)"

void sub_242BA9A2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v3 = v2;
  v61 = *(_QWORD *)(a2 + 152);
  if ((sub_242C00B0C(*(_QWORD *)(a1 + 152), v61) & 1) != 0)
  {
    OUTLINED_FUNCTION_0_3();
    v6 = v2[5];
    v7 = v3[6];
    swift_retain();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_32_0();
    v8 = sub_242BAB440(v6, v7, a1);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_136();
    v60 = *(_QWORD *)(v8 + 16);
    if (v60)
    {
      v58 = v8 + 32;
      v59 = v3 + 7;
      OUTLINED_FUNCTION_0_3();
      v9 = 0;
      v57 = v8;
      do
      {
        if (v9 >= *(_QWORD *)(v8 + 16))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          OUTLINED_FUNCTION_136();
          OUTLINED_FUNCTION_35();
LABEL_36:
          sub_242C48C38();
          swift_bridgeObjectRelease();
          sub_242C48314();
          OUTLINED_FUNCTION_10_9();
          OUTLINED_FUNCTION_39_28();
          sub_242A59170();
        }
        v10 = (uint64_t *)(v58 + 24 * v9);
        v12 = *v10;
        v11 = v10[1];
        v13 = v3[6];
        v14 = *(_QWORD *)(v13 + 16);
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_110();
        if (!v14)
          goto LABEL_36;
        OUTLINED_FUNCTION_32_0();
        OUTLINED_FUNCTION_0_2();
        v15 = sub_242A61310(v12, v11);
        if ((v16 & 1) == 0)
          goto LABEL_35;
        v62 = v9;
        v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
        OUTLINED_FUNCTION_136();
        OUTLINED_FUNCTION_35();
        v63 = sub_242BB0F3C(a1);
        v18 = OUTLINED_FUNCTION_11();
        if ((sub_242BC9DC0(v18, a2) & 1) != 0 || (sub_242BC97A8(), !v19))
        {
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_11();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_32_0();
          v37 = OUTLINED_FUNCTION_106_8();
          v38 = sub_242BA81BC(v37);
          OUTLINED_FUNCTION_35();
          OUTLINED_FUNCTION_136();
          v3[5] = sub_242BAD220(v38);
          v3[6] = v39;
          OUTLINED_FUNCTION_50_21();
          OUTLINED_FUNCTION_136();
          v40 = *(_BYTE *)(a2 + 160);
          OUTLINED_FUNCTION_0_3();
          v41 = v3[7];
          OUTLINED_FUNCTION_101_6();
          v42 = OUTLINED_FUNCTION_42();
          v3[7] = v41;
          if ((v42 & 1) != 0)
          {
            if ((v17 & 0x8000000000000000) != 0)
              goto LABEL_32;
          }
          else
          {
            sub_242B4B4F0();
            v41 = v53;
            *v59 = v53;
            if ((v17 & 0x8000000000000000) != 0)
              goto LABEL_32;
          }
          if (v17 >= *(_QWORD *)(v41 + 16))
            goto LABEL_33;
          v43 = v41 + 16 * v17;
          *(_QWORD *)(v43 + 32) = v61;
          *(_BYTE *)(v43 + 40) = v40;
          swift_endAccess();
          OUTLINED_FUNCTION_136();
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_11();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_32_0();
          v44 = OUTLINED_FUNCTION_106_8();
          v45 = sub_242BA8560(v44);
          OUTLINED_FUNCTION_35();
          OUTLINED_FUNCTION_136();
          OUTLINED_FUNCTION_80();
          v3[8] = sub_242BAD4B0(v45);
          v3[9] = v46;
          OUTLINED_FUNCTION_50_21();
          OUTLINED_FUNCTION_136();
          v36 = v63;
        }
        else
        {
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_32_0();
          v20 = OUTLINED_FUNCTION_136_6();
          v24 = sub_242BAB6B8(v20, v21, v22, v23);
          OUTLINED_FUNCTION_35();
          OUTLINED_FUNCTION_136();
          v3[5] = sub_242BAD220(v24);
          v3[6] = v25;
          OUTLINED_FUNCTION_50_21();
          OUTLINED_FUNCTION_136();
          OUTLINED_FUNCTION_0_3();
          v26 = v3[7];
          v27 = OUTLINED_FUNCTION_42();
          v3[7] = v26;
          if ((v27 & 1) == 0)
          {
            sub_242B4B4F0();
            v26 = v54;
            *v59 = v54;
          }
          v28 = *(_QWORD *)(v26 + 16);
          if (v17 >= v28)
            goto LABEL_34;
          v29 = v28 - 1;
          sub_242BC1978((char *)(v26 + 16 * v17 + 48), v28 - 1 - v17, (char *)(v26 + 16 * v17 + 32));
          *(_QWORD *)(v26 + 16) = v29;
          v3[7] = v26;
          swift_endAccess();
          OUTLINED_FUNCTION_35();
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_32_0();
          v30 = OUTLINED_FUNCTION_136_6();
          v34 = sub_242BAB954(v30, v31, v32, v33);
          OUTLINED_FUNCTION_80();
          OUTLINED_FUNCTION_35();
          OUTLINED_FUNCTION_136();
          v3[8] = sub_242BAD4B0(v34);
          v3[9] = v35;
          OUTLINED_FUNCTION_50_21();
          OUTLINED_FUNCTION_136();
          v36 = v63;
          if (!*(_QWORD *)(v63 + 16))
          {
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_80();
            OUTLINED_FUNCTION_108();
            OUTLINED_FUNCTION_23_5();
            goto LABEL_29;
          }
          swift_unknownObjectRetain();
          sub_242BB08B4();
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_32_10();
        }
        v47 = v3;
        v48 = *(_QWORD *)(v36 + 16);
        if (v48)
        {
          v49 = v36 + 64;
          do
          {
            v50 = *(_QWORD *)(v49 - 24);
            v49 += 40;
            ObjectType = swift_getObjectType();
            v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 80);
            swift_unknownObjectRetain();
            OUTLINED_FUNCTION_107();
            v52(a1, a2, ObjectType, v50);
            OUTLINED_FUNCTION_108();
            OUTLINED_FUNCTION_49_4();
            --v48;
          }
          while (v48);
        }
        v9 = v62 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_23_5();
        v3 = v47;
        v8 = v57;
      }
      while (v62 + 1 != v60);
    }
    OUTLINED_FUNCTION_108();
    sub_242BC97A8();
    if (v55)
    {
      sub_242BC97A8();
      if (v56)
      {
        sub_242BB0FF4();
        OUTLINED_FUNCTION_32_10();
      }
LABEL_29:
      OUTLINED_FUNCTION_32_10();
    }
  }
  else
  {
    sub_242C48F5C();
    __break(1u);
  }
}

void sub_242BA9FD8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_44_0();
  v0 = OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_77_11(v0, v1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_242BB9DF0);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_43();
}

void sub_242BAA030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _BYTE v36[240];
  uint64_t v37;
  _BYTE v38[240];
  _QWORD v39[21];
  _QWORD v40[8];
  int v41;
  _QWORD v42[3];
  _QWORD v43[9];

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_0_3();
  v1 = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_0_3();
  v2 = *(_QWORD *)(v0 + 96);
  OUTLINED_FUNCTION_0_3();
  v3 = *(_QWORD *)(v0 + 120);
  OUTLINED_FUNCTION_0_3();
  sub_242A9297C(v0 + 144, (uint64_t)v43, (uint64_t *)&unk_257228D70);
  OUTLINED_FUNCTION_0_3();
  v4 = *(_QWORD *)(v0 + 200);
  v42[0] = v1;
  v42[1] = v2;
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_32_0();
  v42[2] = sub_242A705EC(v3);
  v43[7] = v4;
  sub_242A624E8((uint64_t)v42, (uint64_t)v39);
  OUTLINED_FUNCTION_0_3();
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_0_3();
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_0_3();
  v9 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 80);
  OUTLINED_FUNCTION_0_3();
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  OUTLINED_FUNCTION_0_3();
  v13 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  sub_242A9297C(v0 + 144, (uint64_t)v40, (uint64_t *)&unk_257228D70);
  v14 = *(_QWORD *)(v0 + 200);
  v15 = *(_DWORD *)(v0 + 208);
  v39[11] = v5;
  v39[12] = v6;
  v39[13] = v8;
  v39[14] = v7;
  v39[15] = v35;
  v39[16] = v9;
  v39[19] = v10;
  v39[20] = v11;
  v39[17] = v13;
  v39[18] = v12;
  v41 = v15;
  v40[7] = v14;
  v34 = (uint64_t *)(v0 + 216);
  OUTLINED_FUNCTION_0_3();
  v16 = *(_QWORD *)(v0 + 216);
  if (v16 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  OUTLINED_FUNCTION_101_6();
  OUTLINED_FUNCTION_37_0();
  sub_242C480E0();
  OUTLINED_FUNCTION_44_0();
  sub_242C480E0();
  OUTLINED_FUNCTION_74();
  sub_242C480E0();
  OUTLINED_FUNCTION_33();
  sub_242C480E0();
  OUTLINED_FUNCTION_32_0();
  if (v17)
  {
    while (1)
    {
      v18 = *v34;
      if ((unint64_t)*v34 >> 62)
      {
        OUTLINED_FUNCTION_39();
        v19 = OUTLINED_FUNCTION_8_35();
        if (!v19)
        {
LABEL_34:
          v21 = MEMORY[0x24BEE4AF8];
LABEL_35:
          OUTLINED_FUNCTION_49();
          sub_242A670D8((uint64_t)v39, (uint64_t)v38);
          v37 = v21;
          sub_242A9297C((uint64_t)v38, (uint64_t)v36, (uint64_t *)&unk_25722A810);
          OUTLINED_FUNCTION_74();
          sub_242B64E14((uint64_t)v36);
          sub_242A929A8((uint64_t)v38, (uint64_t *)&unk_25722A810);
          OUTLINED_FUNCTION_34();
          goto LABEL_36;
        }
      }
      else
      {
        v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        OUTLINED_FUNCTION_39();
        if (!v19)
          goto LABEL_34;
      }
      if (v19 < 1)
        break;
      v20 = 0;
      v21 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        if ((v18 & 0xC000000000000001) != 0)
          MEMORY[0x2494EC84C](v20, v18);
        else
          OUTLINED_FUNCTION_39_0();
        v22 = sub_242BAA030();
        OUTLINED_FUNCTION_50_0();
        v23 = *(_QWORD *)(v22 + 16);
        v24 = *(_QWORD *)(v21 + 16);
        if (__OFADD__(v24, v23))
          break;
        if (!swift_isUniquelyReferenced_nonNull_native() || v24 + v23 > *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_242A5E3A0();
          v21 = v25;
        }
        if (*(_QWORD *)(v22 + 16))
        {
          v26 = *(_QWORD *)(v21 + 16);
          if ((*(_QWORD *)(v21 + 24) >> 1) - v26 < v23)
            goto LABEL_29;
          v27 = v21 + 240 * v26 + 32;
          if (v22 + 32 < v27 + 240 * v23 && v27 < v22 + 32 + 240 * v23)
            goto LABEL_38;
          swift_arrayInitWithCopy();
          if (v23)
          {
            v29 = *(_QWORD *)(v21 + 16);
            v30 = __OFADD__(v29, v23);
            v31 = v29 + v23;
            if (v30)
              goto LABEL_30;
            *(_QWORD *)(v21 + 16) = v31;
          }
        }
        else if (v23)
        {
          goto LABEL_28;
        }
        OUTLINED_FUNCTION_136();
        if (v19 == ++v20)
          goto LABEL_35;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      sub_242C480E0();
      OUTLINED_FUNCTION_101_6();
      OUTLINED_FUNCTION_37_0();
      sub_242C480E0();
      OUTLINED_FUNCTION_44_0();
      sub_242C480E0();
      OUTLINED_FUNCTION_74();
      sub_242C480E0();
      OUTLINED_FUNCTION_33();
      sub_242C480E0();
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_0_2();
      v32 = sub_242C48FC8();
      OUTLINED_FUNCTION_136();
      if (!v32)
        goto LABEL_32;
    }
    __break(1u);
LABEL_38:
    sub_242C4901C();
    __break(1u);
  }
  else
  {
LABEL_32:
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220F88);
    v33 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v33 + 16) = xmmword_242C4B7D0;
    sub_242A670D8((uint64_t)v39, v33 + 32);
LABEL_36:
    sub_242A6945C(v39);
    sub_242A62524((uint64_t)v42);
    OUTLINED_FUNCTION_13_11();
  }
}

uint64_t sub_242BAA510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, uint64_t);
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v33;
  int v34;
  uint64_t v35;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C379E4();
  v8 = v7;
  swift_bridgeObjectRelease();
  v35 = v8;
  sub_242BB6708(&v35, (uint64_t (*)(uint64_t))sub_242BEBC74, sub_242BB73C4);
  if (v5)
  {
LABEL_17:
    result = swift_release();
    __break(1u);
    return result;
  }
  v10 = v35;
  MEMORY[0x24BDAC7A8](v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
  sub_242BB9DF4();
  swift_getKeyPath();
  swift_retain();
  v11 = sub_242BA75DC(v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_242BA7A54(v11, a1);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v13 + 16);
  if (v29)
  {
    v14 = 0;
    v15 = (_QWORD *)(v13 + 64);
    v16 = MEMORY[0x24BEE4AF8];
    while (v14 < *(_QWORD *)(v13 + 16))
    {
      v34 = *((_DWORD *)v15 - 8);
      v17 = *(v15 - 2);
      v33 = *(v15 - 3);
      v18 = *(v15 - 1);
      v19 = *v15;
      ObjectType = swift_getObjectType();
      v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
      sub_242C480E0();
      swift_unknownObjectRetain();
      v22 = v21(ObjectType, v19);
      swift_retain();
      swift_unknownObjectRetain();
      v23 = sub_242BA8A94(v22, a3, a4, a5);
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_242A5E440();
          v16 = v26;
        }
        v24 = *(_QWORD *)(v16 + 16);
        if (v24 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_242A5E440();
          v16 = v27;
        }
        *(_QWORD *)(v16 + 16) = v24 + 1;
        v25 = v16 + 40 * v24;
        *(_QWORD *)(v25 + 32) = v18;
        *(_QWORD *)(v25 + 40) = v19;
        *(_DWORD *)(v25 + 48) = v34;
        *(_QWORD *)(v25 + 56) = v33;
        *(_QWORD *)(v25 + 64) = v17;
      }
      else
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v14;
      v15 += 5;
      if (v29 == v14)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  swift_release();
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x24BEE4AF8];
LABEL_15:
  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_242BAA834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  unint64_t v57;
  uint64_t v59;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C379E4();
  v7 = v6;
  swift_bridgeObjectRelease();
  v59 = v7;
  sub_242BB6708(&v59, (uint64_t (*)(uint64_t))sub_242BEBC74, sub_242BB73C4);
  if (v4)
  {
LABEL_42:
    result = swift_release();
    __break(1u);
  }
  else
  {
    v9 = v59;
    MEMORY[0x24BDAC7A8](v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
    sub_242BB9DF4();
    swift_getKeyPath();
    swift_retain();
    v10 = sub_242BA75DC(v9);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_242BA7A54(v10, a1);
    v12 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)(v12 + 16);
    if (v50)
    {
      v13 = 0;
      v49 = v12 + 32;
      v47 = MEMORY[0x24BEE4AF8];
      v48 = v12;
      while (1)
      {
        if (v13 >= *(_QWORD *)(v12 + 16))
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        v14 = (int *)(v49 + 40 * v13);
        v15 = *v14;
        v17 = *((_QWORD *)v14 + 1);
        v16 = *((_QWORD *)v14 + 2);
        v18 = *((_QWORD *)v14 + 3);
        v19 = *((_QWORD *)v14 + 4);
        ObjectType = swift_getObjectType();
        v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
        sub_242C480E0();
        swift_unknownObjectRetain();
        v22 = v21(ObjectType, v19);
        v53 = v16;
        v54 = v13;
        v52 = v15;
        v51 = v17;
        if (v22 >> 62)
        {
          swift_unknownObjectRetain();
          sub_242C480E0();
          v23 = sub_242C48FC8();
          if (!v23)
          {
LABEL_27:
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v12 = v48;
            v42 = v54;
            goto LABEL_34;
          }
        }
        else
        {
          v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_unknownObjectRetain();
          sub_242C480E0();
          if (!v23)
            goto LABEL_27;
        }
        v57 = v22 & 0xC000000000000001;
        v24 = swift_getObjectType();
        v55 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
        v56 = v24;
        v25 = 4;
        while (1)
        {
          if (v57)
            MEMORY[0x2494EC84C](v25 - 4, v22);
          else
            swift_retain();
          v26 = v25 - 3;
          if (__OFADD__(v25 - 4, 1))
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v22;
          sub_242BC97A8();
          if (v29)
          {
            v30 = v28;
            v31 = swift_getObjectType();
            v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
            v34 = v33;
            v36 = v35;
            swift_unknownObjectRelease();
          }
          else
          {
            v32 = 0;
            v34 = 0;
            v36 = 0;
          }
          v37 = v55(v56, a4);
          if (!v36)
          {
            swift_release();
LABEL_25:
            swift_bridgeObjectRelease();
            v22 = v27;
            goto LABEL_26;
          }
          if (v32 != v37)
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_25;
          }
          if (v34 == v38 && v36 == v39)
            break;
          v41 = sub_242C4925C();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v22 = v27;
          if ((v41 & 1) != 0)
          {
            swift_unknownObjectRelease();
            goto LABEL_29;
          }
LABEL_26:
          ++v25;
          if (v26 == v23)
            goto LABEL_27;
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_29:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v48;
        v42 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v43 = v47;
        else
          sub_242A5E440();
        v44 = *(_QWORD *)(v43 + 16);
        if (v44 >= *(_QWORD *)(v43 + 24) >> 1)
          sub_242A5E440();
        *(_QWORD *)(v43 + 16) = v44 + 1;
        v47 = v43;
        v45 = v43 + 40 * v44;
        *(_QWORD *)(v45 + 32) = v18;
        *(_QWORD *)(v45 + 40) = v19;
        *(_DWORD *)(v45 + 48) = v52;
        *(_QWORD *)(v45 + 56) = v51;
        *(_QWORD *)(v45 + 64) = v53;
LABEL_34:
        v13 = v42 + 1;
        if (v13 == v50)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return v47;
        }
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_242BAAD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  unsigned int (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C379E4();
  v7 = v6;
  swift_bridgeObjectRelease();
  v43 = v7;
  sub_242BB6708(&v43, (uint64_t (*)(uint64_t))sub_242BEBC74, sub_242BB73C4);
  if (v4)
  {
LABEL_25:
    result = swift_release();
    __break(1u);
  }
  else
  {
    v9 = v43;
    MEMORY[0x24BDAC7A8](v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
    sub_242BB9DF4();
    swift_getKeyPath();
    swift_retain();
    v10 = sub_242BA75DC(v9);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_242BA7A54(v10, a1);
    v12 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v38 = *(_QWORD *)(v12 + 16);
    if (v38)
    {
      ObjectType = swift_getObjectType();
      v14 = 0;
      v35 = *(unsigned int (**)(uint64_t, uint64_t))(a4 + 16);
      v36 = ObjectType;
      v15 = (uint64_t *)(v12 + 64);
      v40 = MEMORY[0x24BEE4AF8];
      v37 = v12;
      while (1)
      {
        if (v14 >= *(_QWORD *)(v12 + 16))
        {
          __break(1u);
          goto LABEL_25;
        }
        v42 = *((unsigned int *)v15 - 8);
        v16 = *(v15 - 2);
        v41 = *(v15 - 3);
        v18 = *(v15 - 1);
        v17 = *v15;
        v19 = swift_getObjectType();
        v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 16);
        sub_242C480E0();
        swift_unknownObjectRetain();
        v21 = v20(v19, v17);
        v23 = v22;
        v25 = v24;
        if (v21 == v35(v36, a4))
        {
          if (v23 == v26 && v25 == v27)
          {
            swift_bridgeObjectRelease_n();
LABEL_15:
            v12 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_242A5E558();
              v40 = v32;
            }
            v30 = *(_QWORD *)(v40 + 16);
            if (v30 >= *(_QWORD *)(v40 + 24) >> 1)
            {
              sub_242A5E558();
              v40 = v33;
            }
            *(_QWORD *)(v40 + 16) = v30 + 1;
            v31 = v40 + 48 * v30;
            *(_QWORD *)(v31 + 32) = v18;
            *(_QWORD *)(v31 + 40) = v17;
            *(_QWORD *)(v31 + 48) = v42;
            *(_QWORD *)(v31 + 56) = v41;
            *(_QWORD *)(v31 + 64) = v16;
            *(_BYTE *)(v31 + 72) = 1;
            goto LABEL_20;
          }
          v29 = sub_242C4925C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v29 & 1) != 0)
            goto LABEL_15;
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v12 = v37;
LABEL_20:
        ++v14;
        v15 += 5;
        if (v38 == v14)
          goto LABEL_23;
      }
    }
    v40 = MEMORY[0x24BEE4AF8];
LABEL_23:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v40;
  }
  return result;
}

uint64_t sub_242BAB0A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[7];

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C37948(a2, v7, v8, v9, v10, v11, v12, v13, v45, v46, v48, v50, v52, a4, a3, v57, v59, v60, v61,
    v62[0],
    v62[1],
    v62[2],
    v62[3],
    v62[4],
    v62[5],
    v62[6]);
  v15 = v14;
  swift_bridgeObjectRelease();
  v62[0] = v15;
  sub_242BB66A0(v62);
  if (v4)
  {
LABEL_30:
    result = swift_release();
    __break(1u);
  }
  else
  {
    v17 = v62[0];
    MEMORY[0x24BDAC7A8](v16);
    type metadata accessor for TensorRepresentation();
    swift_getKeyPath();
    swift_retain();
    v18 = sub_242BA74C8(v17);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v19 = sub_242BA771C(v18, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v53 = *(_QWORD *)(v19 + 16);
    if (v53)
    {
      ObjectType = swift_getObjectType();
      v21 = 0;
      v49 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 16);
      v51 = ObjectType;
      v22 = (uint64_t *)(v19 + 48);
      v47 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (v21 >= *(_QWORD *)(v19 + 16))
        {
          __break(1u);
          goto LABEL_30;
        }
        v23 = v19;
        v24 = *(v22 - 1);
        v58 = *(v22 - 2);
        v25 = *v22;
        sub_242C480E0();
        swift_retain();
        sub_242BC97A8();
        if (v27)
        {
          v28 = v26;
          v29 = swift_getObjectType();
          v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v29, v28);
          v32 = v31;
          v34 = v33;
          swift_unknownObjectRelease();
        }
        else
        {
          v30 = 0;
          v32 = 0;
          v34 = 0;
        }
        v35 = v49(v51, v55);
        if (!v34)
          break;
        if (v30 != v35)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
        if (v32 == v36 && v34 == v37)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v19 = v23;
LABEL_20:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5E558();
            v47 = v42;
          }
          v40 = *(_QWORD *)(v47 + 16);
          if (v40 >= *(_QWORD *)(v47 + 24) >> 1)
          {
            sub_242A5E558();
            v47 = v43;
          }
          *(_QWORD *)(v47 + 16) = v40 + 1;
          v41 = v47 + 48 * v40;
          *(_QWORD *)(v41 + 32) = v25;
          *(_QWORD *)(v41 + 40) = v58;
          *(_QWORD *)(v41 + 56) = 0;
          *(_QWORD *)(v41 + 64) = 0;
          *(_QWORD *)(v41 + 48) = v24;
          *(_BYTE *)(v41 + 72) = 2;
          goto LABEL_25;
        }
        v39 = sub_242C4925C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = v23;
        if ((v39 & 1) != 0)
          goto LABEL_20;
        swift_release();
        swift_bridgeObjectRelease();
LABEL_25:
        ++v21;
        v22 += 3;
        if (v53 == v21)
          goto LABEL_28;
      }
      swift_release();
LABEL_18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v23;
      goto LABEL_25;
    }
    v47 = MEMORY[0x24BEE4AF8];
LABEL_28:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v47;
  }
  return result;
}

uint64_t sub_242BAB440(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t var48[11];

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C37948(a2, v6, v7, v8, v9, v10, v11, v12, v31, a3, v33, v35, v36, v37, v38, var48[0], var48[1], var48[2], var48[3],
    var48[4],
    var48[5],
    var48[6],
    var48[7],
    var48[8],
    var48[9],
    var48[10]);
  v14 = v13;
  swift_bridgeObjectRelease();
  var48[0] = v14;
  sub_242BB66A0(var48);
  if (v3)
  {
LABEL_16:
    result = swift_release();
    __break(1u);
    return result;
  }
  v16 = var48[0];
  MEMORY[0x24BDAC7A8](v15);
  swift_getKeyPath();
  swift_retain();
  v17 = sub_242BA74C8(v16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v18 = sub_242BA771C(v17, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = (_OWORD *)(v18 + 40);
    v22 = MEMORY[0x24BEE4AF8];
    while (v20 < *(_QWORD *)(v18 + 16))
    {
      v23 = *((_QWORD *)v21 - 1);
      v34 = *v21;
      v24 = sub_242B89308();
      if (v24 == sub_242B89308())
      {
        sub_242C480E0();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_242A5E37C();
          v22 = v28;
        }
        v25 = *(_QWORD *)(v22 + 16);
        v26 = v34;
        if (v25 >= *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_242A5E37C();
          v26 = v34;
          v22 = v29;
        }
        *(_QWORD *)(v22 + 16) = v25 + 1;
        v27 = v22 + 24 * v25;
        *(_QWORD *)(v27 + 32) = v23;
        *(_OWORD *)(v27 + 40) = v26;
      }
      ++v20;
      v21 = (_OWORD *)((char *)v21 + 24);
      if (v19 == v20)
        goto LABEL_14;
    }
    __break(1u);
    goto LABEL_16;
  }
  v22 = MEMORY[0x24BEE4AF8];
LABEL_14:
  swift_release();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_242BAB6B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t var48[11];

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C37948(a2, v8, v9, v10, v11, v12, v13, v14, v34, a4, v37, v39, v40, v41, v42, var48[0], var48[1], var48[2], var48[3],
    var48[4],
    var48[5],
    var48[6],
    var48[7],
    var48[8],
    var48[9],
    var48[10]);
  v16 = v15;
  swift_bridgeObjectRelease();
  var48[0] = v16;
  sub_242BB66A0(var48);
  if (v4)
  {
LABEL_20:
    result = swift_release();
    __break(1u);
    return result;
  }
  v18 = var48[0];
  MEMORY[0x24BDAC7A8](v17);
  type metadata accessor for TensorRepresentation();
  swift_getKeyPath();
  swift_retain();
  v19 = sub_242BA74C8(v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v20 = sub_242BA771C(v19, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = 0;
    v23 = (_OWORD *)(v20 + 40);
    v24 = MEMORY[0x24BEE4AF8];
    v25 = v36;
    while (v22 < *(_QWORD *)(v20 + 16))
    {
      v26 = *((_QWORD *)v23 - 1);
      if (v26 != a3 || *(_QWORD *)v23 != v25)
      {
        v38 = *v23;
        if ((sub_242C4925C() & 1) == 0)
        {
          sub_242C480E0();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5E290();
            v24 = v31;
          }
          v28 = *(_QWORD *)(v24 + 16);
          v29 = v38;
          if (v28 >= *(_QWORD *)(v24 + 24) >> 1)
          {
            sub_242A5E290();
            v29 = v38;
            v24 = v32;
          }
          *(_QWORD *)(v24 + 16) = v28 + 1;
          v30 = v24 + 24 * v28;
          *(_QWORD *)(v30 + 32) = v26;
          *(_OWORD *)(v30 + 40) = v29;
          v25 = v36;
        }
      }
      ++v22;
      v23 = (_OWORD *)((char *)v23 + 24);
      if (v21 == v22)
        goto LABEL_18;
    }
    __break(1u);
    goto LABEL_20;
  }
  v24 = MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_242BAB954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[9];

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_242C37948(a2, v8, v9, v10, v11, v12, v13, v14, v35, v36, v37, a3, v41, v43, v45, v46, v47, v48[0], v48[1],
    v48[2],
    v48[3],
    v48[4],
    v48[5],
    v48[6],
    v48[7],
    v48[8]);
  v16 = v15;
  swift_bridgeObjectRelease();
  v48[0] = v16;
  sub_242BB66A0(v48);
  if (v4)
  {
LABEL_20:
    result = swift_release();
    __break(1u);
    return result;
  }
  v18 = v48[0];
  MEMORY[0x24BDAC7A8](v17);
  swift_getKeyPath();
  swift_retain();
  v19 = sub_242BA74C8(v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_242BA8858(v19, a1);
  v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = 0;
    v24 = (uint64_t *)(v21 + 56);
    v44 = MEMORY[0x24BEE4AF8];
    v38 = a4;
    v25 = v40;
    while (v23 < *(_QWORD *)(v21 + 16))
    {
      v26 = *(v24 - 3);
      v27 = *(v24 - 2);
      if (v26 != v25 || v27 != a4)
      {
        v29 = *v24;
        v42 = *(v24 - 1);
        if ((sub_242C4925C() & 1) == 0)
        {
          sub_242C480E0();
          sub_242C480E0();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5E654();
            v44 = v32;
          }
          v30 = *(_QWORD *)(v44 + 16);
          if (v30 >= *(_QWORD *)(v44 + 24) >> 1)
          {
            sub_242A5E654();
            v44 = v33;
          }
          *(_QWORD *)(v44 + 16) = v30 + 1;
          v31 = (_QWORD *)(v44 + 32 * v30);
          v31[4] = v26;
          v31[5] = v27;
          v31[6] = v42;
          v31[7] = v29;
          a4 = v38;
          v25 = v40;
        }
      }
      ++v23;
      v24 += 4;
      if (v22 == v23)
        goto LABEL_18;
    }
    __break(1u);
    goto LABEL_20;
  }
  v44 = MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v44;
}

unint64_t sub_242BABBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  sub_242C480E0();
  swift_beginAccess();
  v5 = a1 + 48;
  v22 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v7 = *(_QWORD *)(v5 - 16);
    v6 = *(_QWORD *)(v5 - 8);
    v9 = *(_QWORD *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 72);
    v10 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (!v10)
      goto LABEL_13;
    sub_242C480E0();
    sub_242C480E0();
    result = sub_242A61310(v7, v6);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_release();
      swift_bridgeObjectRelease_n();
      goto LABEL_14;
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * result);
    if ((v13 & 0x8000000000000000) != 0)
      break;
    if (v13 >= *(_QWORD *)(v9 + 16))
      goto LABEL_19;
    v14 = v9 + 16 * v13;
    v15 = *(_QWORD *)(v14 + 40);
    v21 = *(_QWORD *)(v14 + 32);
    sub_242C480E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v16 = v22;
    }
    else
    {
      sub_242A5E654();
      v16 = v19;
    }
    v17 = *(_QWORD *)(v16 + 16);
    if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
    {
      sub_242A5E654();
      v16 = v20;
    }
    *(_QWORD *)(v16 + 16) = v17 + 1;
    v22 = v16;
    v18 = (_QWORD *)(v16 + 32 * v17);
    v18[4] = v7;
    v18[5] = v6;
    v18[6] = v21;
    v18[7] = v15;
LABEL_14:
    v5 += 24;
    if (!--v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v22;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_242BABDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  sub_242C480E0();
  swift_beginAccess();
  v5 = a1 + 48;
  v22 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v7 = *(_QWORD *)(v5 - 16);
    v6 = *(_QWORD *)(v5 - 8);
    v9 = *(_QWORD *)(a2 + 128);
    v8 = *(_QWORD *)(a2 + 136);
    v10 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (!v10)
      goto LABEL_13;
    sub_242C480E0();
    sub_242C480E0();
    result = sub_242A61310(v7, v6);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_release();
      swift_bridgeObjectRelease_n();
      goto LABEL_14;
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * result);
    if ((v13 & 0x8000000000000000) != 0)
      break;
    if (v13 >= *(_QWORD *)(v9 + 16))
      goto LABEL_19;
    v14 = v9 + 16 * v13;
    v15 = *(_QWORD *)(v14 + 40);
    v21 = *(_QWORD *)(v14 + 32);
    sub_242C480E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v16 = v22;
    }
    else
    {
      sub_242A5E654();
      v16 = v19;
    }
    v17 = *(_QWORD *)(v16 + 16);
    if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
    {
      sub_242A5E654();
      v16 = v20;
    }
    *(_QWORD *)(v16 + 16) = v17 + 1;
    v22 = v16;
    v18 = (_QWORD *)(v16 + 32 * v17);
    v18[4] = v7;
    v18[5] = v6;
    v18[6] = v21;
    v18[7] = v15;
LABEL_14:
    v5 += 24;
    if (!--v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v22;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_242BABFE0(unint64_t a1, char *a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v17[2];
  _OWORD v18[2];
  __int128 v19;
  int v20;
  char v21;

  v3 = *a2;
  v4 = *((_QWORD *)a2 + 1);
  v17[0] = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_44_0();
    result = sub_242C48FC8();
    v5 = result;
    if (result)
      goto LABEL_3;
LABEL_18:
    OUTLINED_FUNCTION_3_6();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = OUTLINED_FUNCTION_44_0();
  if (!v5)
    goto LABEL_18;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  v16 = v3;
  for (i = 0; i != v5; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_144_5();
    v8 = *(_QWORD *)(a1 + 8 * i + 32);
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_123_0();
    v9 = OUTLINED_FUNCTION_0_59();
    objc_msgSend(v9, sel_lock);

    v10 = (void *)(v8 + 40);
    OUTLINED_FUNCTION_0_3();
    sub_242A6FF34(v8 + 40, (uint64_t)v18);
    if (v21)
    {
      if (v21 == 1)
      {
        v10 = *(void **)&v18[0];
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_49_4();
        sub_242A6FFE8((uint64_t)&v19);
      }
      else
      {
        sub_242A6FF70((uint64_t)v18);
      }
      v13 = OUTLINED_FUNCTION_0_59();
      OUTLINED_FUNCTION_2_52(v13);
      OUTLINED_FUNCTION_23_5();

    }
    else
    {
      sub_242A6FF70((uint64_t)v18);
      v11 = OUTLINED_FUNCTION_0_59();
      OUTLINED_FUNCTION_2_52(v11);
      swift_release();

      MEMORY[0x2494EC0CC]();
      v12 = *(_QWORD *)((v17[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (*(_QWORD *)((v17[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= v12 >> 1)
      {
        OUTLINED_FUNCTION_117_2(v12);
        sub_242C485A8();
      }
      sub_242C485F0();
      sub_242C4856C();
    }
  }
  OUTLINED_FUNCTION_3_6();
  v14 = v17[0];
  v3 = v16;
LABEL_19:
  OUTLINED_FUNCTION_3_6();
  if (v14 >> 62)
  {
    OUTLINED_FUNCTION_28_1();
    v15 = sub_242C48FC8();
    OUTLINED_FUNCTION_4_0();
    if (v15)
      goto LABEL_21;
  }
  else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_21:
    v20 = 0;
    v19 = 0u;
    memset(v18, 0, sizeof(v18));
    LOBYTE(v17[0]) = v3;
    v17[1] = v4;
    OUTLINED_FUNCTION_2_0();
    return sub_242BADE48(v14, (uint64_t)v18, 0, (char *)v17);
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_34();
  return 0;
}

uint64_t sub_242BAC260()
{
  return sub_242BAC274();
}

uint64_t sub_242BAC274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  v3 = *(_QWORD *)(v0 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = v0 + 48;
    while (1)
    {
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_123_0();
      v6 = sub_242B89308();
      OUTLINED_FUNCTION_135();
      sub_242B89308();
      OUTLINED_FUNCTION_118_3();
      OUTLINED_FUNCTION_108();
      if (v6 == v2)
        break;
      ++v4;
      v5 += 24;
      if (v3 == v4)
      {
        v4 = 0;
        break;
      }
    }
  }
  else
  {
    v4 = 0;
  }
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_3_6();
  return v4;
}

uint64_t sub_242BAC338(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_31_40();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_0_2();
  v3 = OUTLINED_FUNCTION_107();
  v6 = OUTLINED_FUNCTION_83_12(v3, v4, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_242A6E794);
  if (!v1)
  {
    v7 = v6;
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_136();
    v8 = sub_242A5AAD0(v7);
    a1[5] = sub_242BAD220(v8);
    a1[6] = v9;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_136();
    v10 = *(_QWORD *)(v7 + 16);
    v11 = MEMORY[0x24BEE4AF8];
    if (v10)
    {
      v24 = MEMORY[0x24BEE4AF8];
      sub_242AC3300();
      v11 = v24;
      v23 = v7;
      v12 = v7 + 48;
      do
      {
        v13 = *(_QWORD *)(*(_QWORD *)v12 + 152);
        v14 = *(_BYTE *)(*(_QWORD *)v12 + 160);
        v15 = *(_QWORD *)(v24 + 16);
        v16 = *(_QWORD *)(v24 + 24);
        OUTLINED_FUNCTION_69();
        if (v15 >= v16 >> 1)
          sub_242AC3300();
        *(_QWORD *)(v24 + 16) = v15 + 1;
        v17 = v24 + 16 * v15;
        *(_QWORD *)(v17 + 32) = v13;
        *(_BYTE *)(v17 + 40) = v14;
        v12 += 24;
        --v10;
      }
      while (v10);
      v7 = v23;
    }
    OUTLINED_FUNCTION_31_40();
    a1[7] = v11;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11();
    v18 = sub_242BABBE0(v7, (uint64_t)a1);
    OUTLINED_FUNCTION_35();
    v19 = sub_242BAD4B0(v18);
    v21 = v20;
    OUTLINED_FUNCTION_31_40();
    a1[8] = v19;
    a1[9] = v21;
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_108();
  return OUTLINED_FUNCTION_136();
}

uint64_t sub_242BAC4F0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD v37[2];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  OUTLINED_FUNCTION_31_40();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_0_2();
  v5 = OUTLINED_FUNCTION_107();
  v8 = OUTLINED_FUNCTION_83_12(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_242A6E794);
  if (!v2)
  {
    v9 = v8;
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_136();
    v10 = sub_242A5AAD0(v9);
    a1[13] = sub_242BAD220(v10);
    a1[14] = v11;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_136();
    v12 = *(_QWORD *)(v9 + 16);
    v13 = MEMORY[0x24BEE4AF8];
    if (v12)
    {
      v35 = a1;
      v42 = a2;
      v36 = MEMORY[0x24BEE4AF8];
      sub_242AC32C8();
      v13 = v36;
      v34 = v9;
      v14 = v9 + 48;
      do
      {
        v15 = swift_retain();
        sub_242BB059C(v15, 0, 0, 0, (uint64_t)v37);
        v17 = v37[0];
        v16 = v37[1];
        v18 = v38;
        v20 = v39;
        v19 = v40;
        v21 = v41;
        v23 = *(_QWORD *)(v36 + 16);
        v22 = *(_QWORD *)(v36 + 24);
        if (v23 >= v22 >> 1)
        {
          OUTLINED_FUNCTION_117_2(v22);
          v33 = v25;
          v32 = v26;
          sub_242AC32C8();
          v16 = v32;
          v18 = v33;
        }
        *(_QWORD *)(v36 + 16) = v23 + 1;
        v24 = v36 + 56 * v23;
        *(_QWORD *)(v24 + 32) = v17;
        *(_QWORD *)(v24 + 40) = v16;
        *(_OWORD *)(v24 + 48) = v18;
        *(_QWORD *)(v24 + 64) = v20;
        *(_QWORD *)(v24 + 72) = v19;
        *(_BYTE *)(v24 + 80) = v21;
        v14 += 24;
        --v12;
      }
      while (v12);
      a1 = v35;
      v9 = v34;
    }
    OUTLINED_FUNCTION_31_40();
    a1[15] = v13;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11();
    v27 = sub_242BABDE0(v9, (uint64_t)a1);
    OUTLINED_FUNCTION_35();
    v28 = sub_242BAD4B0(v27);
    v30 = v29;
    OUTLINED_FUNCTION_31_40();
    a1[16] = v28;
    a1[17] = v30;
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_108();
  return OUTLINED_FUNCTION_136();
}

uint64_t sub_242BAC6E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[13];
  v2 = v0[14];
  sub_242BC9724();
  OUTLINED_FUNCTION_124_7(v3, v4);
  OUTLINED_FUNCTION_49_19();
  OUTLINED_FUNCTION_81();
  if (!v2)
  {
    v1 = v0[17];
    v5 = v0[18];
    sub_242BC9724();
    OUTLINED_FUNCTION_124_7(v6, v7);
    OUTLINED_FUNCTION_49_19();
    OUTLINED_FUNCTION_3_6();
    if (!v5)
    {
      sub_242BC9724();
      OUTLINED_FUNCTION_49_19();
    }
  }
  return v1;
}

void sub_242BAC75C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_3();
  swift_retain();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_87_11();
  v1 = v0;
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_108();
  if (v1)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_65_18();
    OUTLINED_FUNCTION_134_6();
    swift_release();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_4_0();
  }
  OUTLINED_FUNCTION_64_17();
}

void sub_242BAC800()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_44_0();
  v0 = OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_77_11(v0, v1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_242BB9DF0);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_43();
}

void sub_242BAC858()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_3();
  swift_retain();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_87_11();
  v1 = v0;
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_108();
  if (v1)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_65_18();
    OUTLINED_FUNCTION_134_6();
    swift_release();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_4_0();
  }
  OUTLINED_FUNCTION_64_17();
}

#error "242BAC938: call analysis failed (funcsize=83)"

uint64_t sub_242BACA4C(unint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if (a1 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_242C480E0();
  for (; v5; v5 = sub_242C48FC8())
  {
    v6 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x2494EC84C](v6 - 4, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * v6);
        swift_retain();
      }
      v8 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = v7;
      sub_242BB3604(&v10, a2);
      if (v2)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      ++v6;
      if (v8 == v5)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    sub_242C480E0();
  }
LABEL_10:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BACB70(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_242C480E0();
  sub_242C480E0();
  result = sub_242BAC8FC(a1, a2);
  v8 = result;
  v9 = *(_QWORD *)(result + 16);
  if (v6 >= v9)
    return swift_bridgeObjectRelease();
  v10 = v6;
  v11 = v7;
  v12 = (uint64_t *)(result + 24 * v6 + 48);
  v13 = v6;
  while ((v10 & 0x8000000000000000) == 0)
  {
    if (v13 >= *(_QWORD *)(v8 + 16))
      goto LABEL_9;
    if (__OFADD__(v11, 1))
      goto LABEL_10;
    ++v13;
    v15 = *(v12 - 1);
    v14 = *v12;
    v16 = *(v12 - 2);
    sub_242C480E0();
    swift_retain();
    a3(v11, v16, v15, v14);
    swift_release();
    result = swift_bridgeObjectRelease();
    ++v11;
    v12 += 3;
    if ((uint64_t)v13 >= v9)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_242BACC80(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[3];
  uint64_t v21;
  char v22;
  char v23;
  _BYTE v24[72];

  v6 = *(_QWORD *)(v2 + 152);
  if (v6 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_74();
  for (; v7; v7 = OUTLINED_FUNCTION_8_35())
  {
    v16 = a1;
    v8 = 4;
    while (1)
    {
      if ((v6 & 0xC000000000000001) != 0)
        MEMORY[0x2494EC84C](v8 - 4, v6);
      else
        OUTLINED_FUNCTION_11_6();
      a1 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      sub_242BC97A8();
      if (v10)
      {
        v11 = v9;
        ObjectType = swift_getObjectType();
        (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v11 + 48))(v20, ObjectType, v11);
        v18 = v20[1];
        v19 = v20[0];
        v17 = v20[2];
        v3 = v21;
        v4 = v22;
        v1 = v23;
        OUTLINED_FUNCTION_49_4();
        OUTLINED_FUNCTION_13_0();
        sub_242A929E0((uint64_t)v20, (uint64_t)v24, &qword_257220B30);
        if ((v24[57] & 1) == 0)
        {
          OUTLINED_FUNCTION_34();
          a1 = v16;
          v14 = v18;
          v13 = v19;
          v15 = v17;
          goto LABEL_17;
        }
      }
      else
      {
        OUTLINED_FUNCTION_13_0();
      }
      ++v8;
      if (a1 == v7)
      {
        OUTLINED_FUNCTION_34();
        *(double *)&v13 = OUTLINED_FUNCTION_70_15();
        a1 = v16;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    OUTLINED_FUNCTION_74();
  }
  OUTLINED_FUNCTION_34();
  *(double *)&v13 = OUTLINED_FUNCTION_70_15();
LABEL_17:
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 57) = v1;
}

uint64_t sub_242BACDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 224) + 16);
  if (!v1)
    return 2;
  if (v1 == 1)
    return sub_242A9B6C4(*(_QWORD *)(v0 + 224));
  OUTLINED_FUNCTION_39();
  sub_242C3782C();
  v4 = v3;
  OUTLINED_FUNCTION_4_0();
  v6 = v4;
  sub_242BB6708(&v6, (uint64_t (*)(uint64_t))sub_242BEBC0C, sub_242BB67F4);
  OUTLINED_FUNCTION_4_0();
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
    return 2;
  }
  v5 = *(unsigned __int8 *)(v6 + 32);
  swift_release();
  return v5;
}

uint64_t sub_242BACEBC(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) > *(_QWORD *)(a2 + 16) >> 3)
    return sub_242BB9288(a1, a2);
  sub_242BB9124(a1);
  return a2;
}

uint64_t sub_242BACF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;

  sub_242C480E0();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_37_0();
  v7 = sub_242B6BFDC();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_35();
  v9 = v7;
  sub_242BB676C(&v9, a3, a4);
  OUTLINED_FUNCTION_4_0();
  if (v4)
    return OUTLINED_FUNCTION_17_1();
  else
    return v9;
}

uint64_t sub_242BACFB4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  sub_242BB9DF4();
  v2 = MEMORY[0x24BEE4AF8];
  v3 = (_QWORD *)sub_242C480BC();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (_OWORD *)(a1 + 56);
    while (1)
    {
      v24 = v2;
      v25 = v4;
      v6 = *((_DWORD *)v5 - 6);
      v8 = *((_QWORD *)v5 - 2);
      v7 = *((_QWORD *)v5 - 1);
      v26 = *v5;
      v9 = *(_QWORD *)(v2 + 16);
      sub_242C480E0();
      swift_unknownObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      v10 = sub_242A6138C(v6, v8, v7);
      if (__OFADD__(v3[2], (v11 & 1) == 0))
        break;
      v12 = v10;
      v13 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572293C0);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v14 = sub_242A6138C(v6, v8, v7);
        if ((v13 & 1) != (v15 & 1))
          goto LABEL_19;
        v12 = v14;
      }
      if ((v13 & 1) != 0)
      {
        *(_QWORD *)(v3[7] + 8 * v12) = v9;
      }
      else
      {
        v3[(v12 >> 6) + 8] |= 1 << v12;
        v16 = v3[6] + 24 * v12;
        *(_DWORD *)v16 = v6;
        *(_QWORD *)(v16 + 8) = v8;
        *(_QWORD *)(v16 + 16) = v7;
        *(_QWORD *)(v3[7] + 8 * v12) = v9;
        v17 = v3[2];
        v18 = __OFADD__(v17, 1);
        v19 = v17 + 1;
        if (v18)
          goto LABEL_18;
        v3[2] = v19;
        sub_242C480E0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRetain();
      v2 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242A5E518();
        v2 = v21;
      }
      v20 = *(_QWORD *)(v2 + 16);
      if (v20 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_242A5E518();
        v2 = v22;
      }
      *(_QWORD *)(v2 + 16) = v20 + 1;
      *(_OWORD *)(v2 + 16 * v20 + 32) = v26;
      swift_unknownObjectRelease();
      v5 = (_OWORD *)((char *)v5 + 40);
      v4 = v25 - 1;
      if (v25 == 1)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_242C492EC();
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

